<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 12:26:47.298" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.530" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:48.546" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:50.507" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:48.526" endtime="20201112 12:26:50.509"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.514" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:50.511" endtime="20201112 12:26:50.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.523" endtime="20201112 12:26:50.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.521" endtime="20201112 12:26:50.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.518" endtime="20201112 12:26:50.856"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.888" endtime="20201112 12:26:50.903"></status>
</kw>
<msg timestamp="20201112 12:26:50.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.884" endtime="20201112 12:26:50.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.911" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.907" endtime="20201112 12:26:50.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.918" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:50.913" endtime="20201112 12:26:50.919"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:50.878" endtime="20201112 12:26:50.921"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:50.871" endtime="20201112 12:26:50.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.869" endtime="20201112 12:26:50.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:50.931" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:50.929" endtime="20201112 12:26:50.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.925" endtime="20201112 12:26:50.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.867" endtime="20201112 12:26:50.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.865" endtime="20201112 12:26:50.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.935" endtime="20201112 12:26:50.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.861" endtime="20201112 12:26:50.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.941" endtime="20201112 12:26:50.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.858" endtime="20201112 12:26:50.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.519" endtime="20201112 12:26:50.947"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.962" endtime="20201112 12:26:50.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.958" endtime="20201112 12:26:50.985"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.021" endtime="20201112 12:26:51.036"></status>
</kw>
<msg timestamp="20201112 12:26:51.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.018" endtime="20201112 12:26:51.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.044" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.040" endtime="20201112 12:26:51.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.050" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:51.046" endtime="20201112 12:26:51.051"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:51.010" endtime="20201112 12:26:51.053"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:51.004" endtime="20201112 12:26:51.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.000" endtime="20201112 12:26:51.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:51.063" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:51.062" endtime="20201112 12:26:51.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.057" endtime="20201112 12:26:51.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.998" endtime="20201112 12:26:51.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.995" endtime="20201112 12:26:51.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.066" endtime="20201112 12:26:51.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.991" endtime="20201112 12:26:51.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.987" endtime="20201112 12:26:51.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.955" endtime="20201112 12:26:51.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.092" endtime="20201112 12:26:51.103"></status>
</kw>
<msg timestamp="20201112 12:26:51.104" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.089" endtime="20201112 12:26:51.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.111" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.107" endtime="20201112 12:26:51.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.113" endtime="20201112 12:26:51.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.081" endtime="20201112 12:26:51.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.076" endtime="20201112 12:26:51.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.131" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:26:51.128" endtime="20201112 12:26:51.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.135" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:26:51.133" endtime="20201112 12:26:51.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.122" endtime="20201112 12:26:51.138"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:50.948" endtime="20201112 12:26:51.140" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:47.558" endtime="20201112 12:26:51.150"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.290" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:51.305" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:53.232" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:51.286" endtime="20201112 12:26:53.234"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.239" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:53.236" endtime="20201112 12:26:53.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.283" endtime="20201112 12:26:53.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.246" endtime="20201112 12:26:53.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.243" endtime="20201112 12:26:53.583"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.612" endtime="20201112 12:26:53.628"></status>
</kw>
<msg timestamp="20201112 12:26:53.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.609" endtime="20201112 12:26:53.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.632" endtime="20201112 12:26:53.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.643" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:53.638" endtime="20201112 12:26:53.643"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:53.603" endtime="20201112 12:26:53.645"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:53.597" endtime="20201112 12:26:53.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.595" endtime="20201112 12:26:53.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:53.655" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:53.654" endtime="20201112 12:26:53.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.649" endtime="20201112 12:26:53.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.593" endtime="20201112 12:26:53.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.591" endtime="20201112 12:26:53.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.659" endtime="20201112 12:26:53.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.588" endtime="20201112 12:26:53.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.665" endtime="20201112 12:26:53.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.584" endtime="20201112 12:26:53.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.280" endtime="20201112 12:26:53.671"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.686" endtime="20201112 12:26:53.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.682" endtime="20201112 12:26:53.709"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.804" endtime="20201112 12:26:53.819"></status>
</kw>
<msg timestamp="20201112 12:26:53.820" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.800" endtime="20201112 12:26:53.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.823" endtime="20201112 12:26:53.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.834" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:53.830" endtime="20201112 12:26:53.835"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:53.793" endtime="20201112 12:26:53.837"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:53.787" endtime="20201112 12:26:53.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.722" endtime="20201112 12:26:53.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:53.847" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:53.845" endtime="20201112 12:26:53.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.841" endtime="20201112 12:26:53.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.721" endtime="20201112 12:26:53.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.719" endtime="20201112 12:26:53.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.850" endtime="20201112 12:26:53.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.715" endtime="20201112 12:26:53.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.710" endtime="20201112 12:26:53.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.679" endtime="20201112 12:26:53.857"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:53.862" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.882" endtime="20201112 12:26:53.893"></status>
</kw>
<msg timestamp="20201112 12:26:53.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.879" endtime="20201112 12:26:53.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.896" endtime="20201112 12:26:53.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.902" endtime="20201112 12:26:53.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.871" endtime="20201112 12:26:53.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.867" endtime="20201112 12:26:53.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.927" endtime="20201112 12:26:54.281"></status>
</kw>
<msg timestamp="20201112 12:26:54.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.186825153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.186825625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.924" endtime="20201112 12:26:54.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.186825153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.186825625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.291" endtime="20201112 12:26:54.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.310" endtime="20201112 12:26:54.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.917" endtime="20201112 12:26:54.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.912" endtime="20201112 12:26:54.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.326" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:54.324" endtime="20201112 12:26:54.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.339" level="INFO">VALUE: [{'time': 0.186825153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.186825625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186835069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.186835542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186842583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.041000000013176e-06, 'source_diff': 7.041000000013176e-06}, {'time': 0.186843056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186850208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.151999999982506e-06, 'source_diff': 7.151999999982506e-06}, {'time': 0.186850681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186857, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.186857472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186863153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000007375e-06, 'source_diff': 5.681000000007375e-06}, {'time': 0.186863625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186874, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0375000000006906e-05, 'source_diff': 1.0375000000006906e-05}, {'time': 0.186874472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186883611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999991348e-06, 'source_diff': 9.138999999991348e-06}, {'time': 0.186884083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.1868885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4170000000065546e-06, 'source_diff': 4.4170000000065546e-06}, {'time': 0.186888972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.186899792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000022478e-05, 'source_diff': 1.0820000000022478e-05}, {'time': 0.186900264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186908528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263999999980065e-06, 'source_diff': 8.263999999980065e-06}, {'time': 0.186909, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186917861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.186918403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000200265e-07, 'source_diff': 5.420000000200265e-07}, {'time': 0.186928583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.186929056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186934736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.679999999980145e-06, 'source_diff': 5.679999999980145e-06}, {'time': 0.186935208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186942042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.834000000011109e-06, 'source_diff': 6.834000000011109e-06}, {'time': 0.186942514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186953069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0554999999995429e-05, 'source_diff': 1.0554999999995429e-05}, {'time': 0.186953611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.186963333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.72200000001755e-06, 'source_diff': 9.72200000001755e-06}, {'time': 0.186963806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186968569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.762999999990969e-06, 'source_diff': 4.762999999990969e-06}, {'time': 0.186969042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186974917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999988528e-06, 'source_diff': 5.874999999988528e-06}, {'time': 0.186975389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186985833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.186986375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000200265e-07, 'source_diff': 5.420000000200265e-07}, {'time': 0.186993597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.186994069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187002472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999990168e-06, 'source_diff': 8.402999999990168e-06}, {'time': 0.187002944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187007375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.187007847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187016667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999992723e-06, 'source_diff': 8.819999999992723e-06}, {'time': 0.187017139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187025431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291999999993083e-06, 'source_diff': 8.291999999993083e-06}, {'time': 0.187025903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187030972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.187031444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187035889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.445000000019572e-06, 'source_diff': 4.445000000019572e-06}, {'time': 0.187036361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187043528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.16699999997461e-06, 'source_diff': 7.16699999997461e-06}, {'time': 0.187044, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187051431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.187051903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187062819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.187063292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.187072417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.187072889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187078097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.208000000006541e-06, 'source_diff': 5.208000000006541e-06}, {'time': 0.187078639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.187088694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0055000000008807e-05, 'source_diff': 1.0055000000008807e-05}, {'time': 0.187089167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.187093708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.187094181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.187104361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.187104833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187114167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.187114639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187125125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.187125597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187131972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.187132514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.187142458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000011721e-06, 'source_diff': 9.944000000011721e-06}, {'time': 0.187142931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.187148458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.526999999977411e-06, 'source_diff': 5.526999999977411e-06}, {'time': 0.187149, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000200265e-07, 'source_diff': 5.420000000200265e-07}, {'time': 0.187158208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.207999999982786e-06, 'source_diff': 9.207999999982786e-06}, {'time': 0.187158681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.187165681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000007001e-06, 'source_diff': 7.000000000007001e-06}, {'time': 0.187166222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}, {'time': 0.187172306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.084000000017298e-06, 'source_diff': 6.084000000017298e-06}, {'time': 0.187172778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187181375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.187181847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.187192458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0610999999993709e-05, 'source_diff': 1.0610999999993709e-05}, {'time': 0.187192931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.187202958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.002699999999579e-05, 'source_diff': 1.002699999999579e-05}, {'time': 0.1872035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.187211639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000018104e-06, 'source_diff': 8.139000000018104e-06}, {'time': 0.187212111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.187218958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.187219431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.187226569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.13800000001763e-06, 'source_diff': 7.13800000001763e-06}, {'time': 0.187227042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.187234611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.56899999998506e-06, 'source_diff': 7.56899999998506e-06}, {'time': 0.187235083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:54.329" endtime="20201112 12:26:54.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.318" endtime="20201112 12:26:54.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:54.400" level="INFO">${debug-compressed} = {'time': [0.186825153, 0.186825625, 0.186835069, 0.186835542, 0.186842583, 0.186843056, 0.186850208, 0.186850681, 0.186857, 0.186857472, 0.186863153, 0.186863625, 0.186874, 0.186874472, 0.186883611, 0...</msg>
<status status="PASS" starttime="20201112 12:26:54.345" endtime="20201112 12:26:54.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.410" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:54.407" endtime="20201112 12:26:54.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.419" level="INFO">VALUE: {'time': [0.186825153, 0.186825625, 0.186835069, 0.186835542, 0.186842583, 0.186843056, 0.186850208, 0.186850681, 0.186857, 0.186857472, 0.186863153, 0.186863625, 0.186874, 0.186874472, 0.186883611, 0.186884083, 0.1868885, 0.186888972, 0.186899792, 0.186900264, 0.186908528, 0.186909, 0.186917861, 0.186918403, 0.186928583, 0.186929056, 0.186934736, 0.186935208, 0.186942042, 0.186942514, 0.186953069, 0.186953611, 0.186963333, 0.186963806, 0.186968569, 0.186969042, 0.186974917, 0.186975389, 0.186985833, 0.186986375, 0.186993597, 0.186994069, 0.187002472, 0.187002944, 0.187007375, 0.187007847, 0.187016667, 0.187017139, 0.187025431, 0.187025903, 0.187030972, 0.187031444, 0.187035889, 0.187036361, 0.187043528, 0.187044, 0.187051431, 0.187051903, 0.187062819, 0.187063292, 0.187072417, 0.187072889, 0.187078097, 0.187078639, 0.187088694, 0.187089167, 0.187093708, 0.187094181, 0.187104361, 0.187104833, 0.187114167, 0.187114639, 0.187125125, 0.187125597, 0.187131972, 0.187132514, 0.187142458, 0.187142931, 0.187148458, 0.187149, 0.187158208, 0.187158681, 0.187165681, 0.187166222, 0.187172306, 0.187172778, 0.187181375, 0.187181847, 0.187192458, 0.187192931, 0.187202958, 0.1872035, 0.187211639, 0.187212111, 0.187218958, 0.187219431, 0.187226569, 0.187227042, 0.187234611, 0.187235083], 'eventsource_diff': [0, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 7.041000000013176e-06, 4.7300000000083386e-07, 7.151999999982506e-06, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 5.681000000007375e-06, 4.720000000013602e-07, 1.0375000000006906e-05, 4.720000000013602e-07, 9.138999999991348e-06, 4.720000000013602e-07, 4.4170000000065546e-06, 4.7199999997360464e-07, 1.0820000000022478e-05, 4.720000000013602e-07, 8.263999999980065e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.420000000200265e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 5.679999999980145e-06, 4.720000000013602e-07, 6.834000000011109e-06, 4.720000000013602e-07, 1.0554999999995429e-05, 5.419999999922709e-07, 9.72200000001755e-06, 4.7300000000083386e-07, 4.762999999990969e-06, 4.7300000000083386e-07, 5.874999999988528e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 5.420000000200265e-07, 7.222000000001172e-06, 4.720000000013602e-07, 8.402999999990168e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 8.819999999992723e-06, 4.720000000013602e-07, 8.291999999993083e-06, 4.720000000013602e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 4.445000000019572e-06, 4.720000000013602e-07, 7.16699999997461e-06, 4.720000000013602e-07, 7.431000000002186e-06, 4.720000000013602e-07, 1.0915999999999704e-05, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.208000000006541e-06, 5.419999999922709e-07, 1.0055000000008807e-05, 4.7300000000083386e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 6.375000000002906e-06, 5.419999999922709e-07, 9.944000000011721e-06, 4.7300000000083386e-07, 5.526999999977411e-06, 5.420000000200265e-07, 9.207999999982786e-06, 4.7300000000083386e-07, 7.000000000007001e-06, 5.409999999927972e-07, 6.084000000017298e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 1.0610999999993709e-05, 4.7300000000083386e-07, 1.002699999999579e-05, 5.419999999922709e-07, 8.139000000018104e-06, 4.7199999997360464e-07, 6.847000000004266e-06, 4.7300000000083386e-07, 7.13800000001763e-06, 4.7300000000083386e-07, 7.56899999998506e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 7.041000000013176e-06, 4.7300000000083386e-07, 7.151999999982506e-06, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 5.681000000007375e-06, 4.720000000013602e-07, 1.0375000000006906e-05, 4.720000000013602e-07, 9.138999999991348e-06, 4.720000000013602e-07, 4.4170000000065546e-06, 4.7199999997360464e-07, 1.0820000000022478e-05, 4.720000000013602e-07, 8.263999999980065e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.420000000200265e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 5.679999999980145e-06, 4.720000000013602e-07, 6.834000000011109e-06, 4.720000000013602e-07, 1.0554999999995429e-05, 5.419999999922709e-07, 9.72200000001755e-06, 4.7300000000083386e-07, 4.762999999990969e-06, 4.7300000000083386e-07, 5.874999999988528e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 5.420000000200265e-07, 7.222000000001172e-06, 4.720000000013602e-07, 8.402999999990168e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 8.819999999992723e-06, 4.720000000013602e-07, 8.291999999993083e-06, 4.720000000013602e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 4.445000000019572e-06, 4.720000000013602e-07, 7.16699999997461e-06, 4.720000000013602e-07, 7.431000000002186e-06, 4.720000000013602e-07, 1.0915999999999704e-05, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.208000000006541e-06, 5.419999999922709e-07, 1.0055000000008807e-05, 4.7300000000083386e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 6.375000000002906e-06, 5.419999999922709e-07, 9.944000000011721e-06, 4.7300000000083386e-07, 5.526999999977411e-06, 5.420000000200265e-07, 9.207999999982786e-06, 4.7300000000083386e-07, 7.000000000007001e-06, 5.409999999927972e-07, 6.084000000017298e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 1.0610999999993709e-05, 4.7300000000083386e-07, 1.002699999999579e-05, 5.419999999922709e-07, 8.139000000018104e-06, 4.7199999997360464e-07, 6.847000000004266e-06, 4.7300000000083386e-07, 7.13800000001763e-06, 4.7300000000083386e-07, 7.56899999998506e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:54.412" endtime="20201112 12:26:54.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.402" endtime="20201112 12:26:54.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.433" level="INFO">${RESULT} = [{'time': 0.186825625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186835542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.424" endtime="20201112 12:26:54.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:54.465" level="INFO">${GPIO_OVERHEAD} = {'time': [0.186825625, 0.186835542, 0.186843056, 0.186850681, 0.186857472, 0.186863625, 0.186874472, 0.186884083, 0.186888972, 0.186900264, 0.186909, 0.186918403, 0.186929056, 0.186935208, 0.186942514...</msg>
<status status="PASS" starttime="20201112 12:26:54.435" endtime="20201112 12:26:54.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.475" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:54.473" endtime="20201112 12:26:54.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.480" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000200265e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.420000000200265e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.7300000000083386e-07, 5.420000000200265e-07, 4.7300000000083386e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:54.477" endtime="20201112 12:26:54.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.466" endtime="20201112 12:26:54.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.489" endtime="20201112 12:26:54.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.497" endtime="20201112 12:26:54.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.493" endtime="20201112 12:26:54.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.485" endtime="20201112 12:26:54.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.863" endtime="20201112 12:26:54.523"></status>
</kw>
<msg timestamp="20201112 12:26:54.524" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.543" endtime="20201112 12:26:54.554"></status>
</kw>
<msg timestamp="20201112 12:26:54.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.540" endtime="20201112 12:26:54.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.561" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.557" endtime="20201112 12:26:54.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.563" endtime="20201112 12:26:54.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.533" endtime="20201112 12:26:54.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.528" endtime="20201112 12:26:54.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.587" endtime="20201112 12:26:54.928"></status>
</kw>
<msg timestamp="20201112 12:26:54.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036023639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036024111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.584" endtime="20201112 12:26:54.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036023639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036024111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.938" endtime="20201112 12:26:54.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.957" endtime="20201112 12:26:54.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.576" endtime="20201112 12:26:54.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.572" endtime="20201112 12:26:54.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.973" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:54.971" endtime="20201112 12:26:54.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.985" level="INFO">VALUE: [{'time': 0.036023639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036024111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036033236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000005656e-06, 'source_diff': 9.125000000005656e-06}, {'time': 0.036033708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036043792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.036044264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036048792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.036049264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036058806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.036059278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036064972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.036065444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036069903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.036070375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0360775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.036077972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036082806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.036083278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036089806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.036090278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036101042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0763999999996443e-05, 'source_diff': 1.0763999999996443e-05}, {'time': 0.036101583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036106917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.33400000000267e-06, 'source_diff': 5.33400000000267e-06}, {'time': 0.036107389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036115486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097000000005516e-06, 'source_diff': 8.097000000005516e-06}, {'time': 0.036115958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036125181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.223000000002646e-06, 'source_diff': 9.223000000002646e-06}, {'time': 0.036125653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036135819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.036136292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036145847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.036146319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036151903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583999999995981e-06, 'source_diff': 5.583999999995981e-06}, {'time': 0.036152375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0361615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.036161972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036168625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.036169097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036174861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.76400000000532e-06, 'source_diff': 5.76400000000532e-06}, {'time': 0.036175333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036183458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.036184, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036193333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036193806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036198653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.036199125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036209097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000003922e-06, 'source_diff': 9.972000000003922e-06}, {'time': 0.036209569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036214111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036214583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036225486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036225958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036235181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222999999995707e-06, 'source_diff': 9.222999999995707e-06}, {'time': 0.036235653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036240236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.036240778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036245681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.036246222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036256903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0680999999998497e-05, 'source_diff': 1.0680999999998497e-05}, {'time': 0.036257375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036262125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.036262597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036268889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.036269361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036279222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.036279694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036287694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036288167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036292472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.036292944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036302486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.036302958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036308139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.036308611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036317514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.036317986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036328792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036329264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036339819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0555000000002368e-05, 'source_diff': 1.0555000000002368e-05}, {'time': 0.036340361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036348833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999995483e-06, 'source_diff': 8.471999999995483e-06}, {'time': 0.036349306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036356264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.036356736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036361569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.036362042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036370875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036371347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036379847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036380319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036389556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.237000000002216e-06, 'source_diff': 9.237000000002216e-06}, {'time': 0.036390028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036394986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036395458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036405958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.036406431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0364115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.036411972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036422333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.036422806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:54.976" endtime="20201112 12:26:54.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.965" endtime="20201112 12:26:54.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:55.047" level="INFO">${debug-compressed} = {'time': [0.036023639, 0.036024111, 0.036033236, 0.036033708, 0.036043792, 0.036044264, 0.036048792, 0.036049264, 0.036058806, 0.036059278, 0.036064972, 0.036065444, 0.036069903, 0.036070375, 0.036077...</msg>
<status status="PASS" starttime="20201112 12:26:54.991" endtime="20201112 12:26:55.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.056" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:55.054" endtime="20201112 12:26:55.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.066" level="INFO">VALUE: {'time': [0.036023639, 0.036024111, 0.036033236, 0.036033708, 0.036043792, 0.036044264, 0.036048792, 0.036049264, 0.036058806, 0.036059278, 0.036064972, 0.036065444, 0.036069903, 0.036070375, 0.0360775, 0.036077972, 0.036082806, 0.036083278, 0.036089806, 0.036090278, 0.036101042, 0.036101583, 0.036106917, 0.036107389, 0.036115486, 0.036115958, 0.036125181, 0.036125653, 0.036135819, 0.036136292, 0.036145847, 0.036146319, 0.036151903, 0.036152375, 0.0361615, 0.036161972, 0.036168625, 0.036169097, 0.036174861, 0.036175333, 0.036183458, 0.036184, 0.036193333, 0.036193806, 0.036198653, 0.036199125, 0.036209097, 0.036209569, 0.036214111, 0.036214583, 0.036225486, 0.036225958, 0.036235181, 0.036235653, 0.036240236, 0.036240778, 0.036245681, 0.036246222, 0.036256903, 0.036257375, 0.036262125, 0.036262597, 0.036268889, 0.036269361, 0.036279222, 0.036279694, 0.036287694, 0.036288167, 0.036292472, 0.036292944, 0.036302486, 0.036302958, 0.036308139, 0.036308611, 0.036317514, 0.036317986, 0.036328792, 0.036329264, 0.036339819, 0.036340361, 0.036348833, 0.036349306, 0.036356264, 0.036356736, 0.036361569, 0.036362042, 0.036370875, 0.036371347, 0.036379847, 0.036380319, 0.036389556, 0.036390028, 0.036394986, 0.036395458, 0.036405958, 0.036406431, 0.0364115, 0.036411972, 0.036422333, 0.036422806], 'eventsource_diff': [0, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 7.124999999996717e-06, 4.720000000013602e-07, 4.83400000000217e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0763999999996443e-05, 5.409999999997361e-07, 5.33400000000267e-06, 4.7199999999442133e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 9.223000000002646e-06, 4.720000000013602e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 9.555000000001368e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.653000000002296e-06, 4.7199999999442133e-07, 5.76400000000532e-06, 4.7199999999442133e-07, 8.125000000004656e-06, 5.419999999992098e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 9.972000000003922e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.222999999995707e-06, 4.720000000013602e-07, 4.583000000002446e-06, 5.419999999992098e-07, 4.903000000000546e-06, 5.409999999997361e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.7300000000083386e-07, 4.3049999999961175e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.7199999999442133e-07, 8.903000000004546e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 1.0555000000002368e-05, 5.419999999992098e-07, 8.471999999995483e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.720000000013602e-07, 4.833000000002696e-06, 4.7299999999389497e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07], 'diff': [0, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 7.124999999996717e-06, 4.720000000013602e-07, 4.83400000000217e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0763999999996443e-05, 5.409999999997361e-07, 5.33400000000267e-06, 4.7199999999442133e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 9.223000000002646e-06, 4.720000000013602e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 9.555000000001368e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.653000000002296e-06, 4.7199999999442133e-07, 5.76400000000532e-06, 4.7199999999442133e-07, 8.125000000004656e-06, 5.419999999992098e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 9.972000000003922e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.222999999995707e-06, 4.720000000013602e-07, 4.583000000002446e-06, 5.419999999992098e-07, 4.903000000000546e-06, 5.409999999997361e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.7300000000083386e-07, 4.3049999999961175e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.7199999999442133e-07, 8.903000000004546e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 1.0555000000002368e-05, 5.419999999992098e-07, 8.471999999995483e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.720000000013602e-07, 4.833000000002696e-06, 4.7299999999389497e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:55.059" endtime="20201112 12:26:55.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.049" endtime="20201112 12:26:55.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.080" level="INFO">${RESULT} = [{'time': 0.036024111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036033708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:55.071" endtime="20201112 12:26:55.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:55.112" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036024111, 0.036033708, 0.036044264, 0.036049264, 0.036059278, 0.036065444, 0.036070375, 0.036077972, 0.036083278, 0.036090278, 0.036101583, 0.036107389, 0.036115958, 0.036125653, 0.036136...</msg>
<status status="PASS" starttime="20201112 12:26:55.083" endtime="20201112 12:26:55.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.122" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:55.120" endtime="20201112 12:26:55.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.127" level="INFO">VALUE: [4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:26:55.124" endtime="20201112 12:26:55.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.113" endtime="20201112 12:26:55.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.136" endtime="20201112 12:26:55.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.144" endtime="20201112 12:26:55.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.140" endtime="20201112 12:26:55.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.132" endtime="20201112 12:26:55.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.525" endtime="20201112 12:26:55.170"></status>
</kw>
<msg timestamp="20201112 12:26:55.171" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.192" endtime="20201112 12:26:55.202"></status>
</kw>
<msg timestamp="20201112 12:26:55.204" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.188" endtime="20201112 12:26:55.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.210" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.206" endtime="20201112 12:26:55.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.212" endtime="20201112 12:26:55.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.180" endtime="20201112 12:26:55.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.175" endtime="20201112 12:26:55.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.237" endtime="20201112 12:26:55.579"></status>
</kw>
<msg timestamp="20201112 12:26:55.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037683028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0376835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:55.234" endtime="20201112 12:26:55.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037683028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0376835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:55.588" endtime="20201112 12:26:55.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.607" endtime="20201112 12:26:55.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.226" endtime="20201112 12:26:55.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.221" endtime="20201112 12:26:55.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.624" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:55.622" endtime="20201112 12:26:55.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.635" level="INFO">VALUE: [{'time': 0.037683028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0376835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037692306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.037692778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037699917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.037700389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037707944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.037708417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037716722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.037717194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037726736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541999999994333e-06, 'source_diff': 9.541999999994333e-06}, {'time': 0.037727208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037733431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.037733903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037743333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.037743806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037748125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.037748597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037759417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.037759889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037765542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.037766083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037773125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.037773667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037783625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000004352e-06, 'source_diff': 9.958000000004352e-06}, {'time': 0.037784097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037791444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.037791917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037797708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.037798181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037807625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.037808097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037813778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.03781425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037823125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.037823667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037828639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.037829181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.037838, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.818999999993249e-06, 'source_diff': 8.818999999993249e-06}, {'time': 0.037838472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037847583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.037848056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037856667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037857139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037864819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.037865292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037874417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.037874889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03788475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.037885222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037895694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.037896167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037904042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.037904514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037914903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037915375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037922125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.037922597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037930889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037931361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037937972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.037938444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03794875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.037949222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037957278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.03795775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037962389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037962861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037967292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.037967764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037973972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037974444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037982639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999995567e-06, 'source_diff': 8.194999999995567e-06}, {'time': 0.037983111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037993917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.037994389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038003736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.038004208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038011458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.038011931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038020139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.038020611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038029, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.038029472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038036806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333999999997731e-06, 'source_diff': 7.333999999997731e-06}, {'time': 0.038037278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038047458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.038047931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038055486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.038055958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038061653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.038062125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038068319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.038068792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038073667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.038074139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038084819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.038085292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038092444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.038092917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:55.626" endtime="20201112 12:26:55.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.616" endtime="20201112 12:26:55.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:55.697" level="INFO">${debug-compressed} = {'time': [0.037683028, 0.0376835, 0.037692306, 0.037692778, 0.037699917, 0.037700389, 0.037707944, 0.037708417, 0.037716722, 0.037717194, 0.037726736, 0.037727208, 0.037733431, 0.037733903, 0.03774333...</msg>
<status status="PASS" starttime="20201112 12:26:55.641" endtime="20201112 12:26:55.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.706" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:55.704" endtime="20201112 12:26:55.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.716" level="INFO">VALUE: {'time': [0.037683028, 0.0376835, 0.037692306, 0.037692778, 0.037699917, 0.037700389, 0.037707944, 0.037708417, 0.037716722, 0.037717194, 0.037726736, 0.037727208, 0.037733431, 0.037733903, 0.037743333, 0.037743806, 0.037748125, 0.037748597, 0.037759417, 0.037759889, 0.037765542, 0.037766083, 0.037773125, 0.037773667, 0.037783625, 0.037784097, 0.037791444, 0.037791917, 0.037797708, 0.037798181, 0.037807625, 0.037808097, 0.037813778, 0.03781425, 0.037823125, 0.037823667, 0.037828639, 0.037829181, 0.037838, 0.037838472, 0.037847583, 0.037848056, 0.037856667, 0.037857139, 0.037864819, 0.037865292, 0.037874417, 0.037874889, 0.03788475, 0.037885222, 0.037895694, 0.037896167, 0.037904042, 0.037904514, 0.037914903, 0.037915375, 0.037922125, 0.037922597, 0.037930889, 0.037931361, 0.037937972, 0.037938444, 0.03794875, 0.037949222, 0.037957278, 0.03795775, 0.037962389, 0.037962861, 0.037967292, 0.037967764, 0.037973972, 0.037974444, 0.037982639, 0.037983111, 0.037993917, 0.037994389, 0.038003736, 0.038004208, 0.038011458, 0.038011931, 0.038020139, 0.038020611, 0.038029, 0.038029472, 0.038036806, 0.038037278, 0.038047458, 0.038047931, 0.038055486, 0.038055958, 0.038061653, 0.038062125, 0.038068319, 0.038068792, 0.038073667, 0.038074139, 0.038084819, 0.038085292, 0.038092444, 0.038092917], 'eventsource_diff': [0, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 9.541999999994333e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 4.319000000002626e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 5.653000000001296e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 5.419999999992098e-07, 9.958000000004352e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 8.874999999998467e-06, 5.419999999992098e-07, 4.971999999998922e-06, 5.420000000061487e-07, 8.818999999993249e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 7.680000000002962e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0471999999997483e-05, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 6.611000000003586e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 8.055999999999341e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 8.208000000002602e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 7.333999999997731e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.7299999999389497e-07, 4.875000000001406e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7299999999389497e-07], 'diff': [0, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 9.541999999994333e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 4.319000000002626e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 5.653000000001296e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 5.419999999992098e-07, 9.958000000004352e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 8.874999999998467e-06, 5.419999999992098e-07, 4.971999999998922e-06, 5.420000000061487e-07, 8.818999999993249e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 7.680000000002962e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0471999999997483e-05, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 6.611000000003586e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 8.055999999999341e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 8.208000000002602e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 7.333999999997731e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.7299999999389497e-07, 4.875000000001406e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7299999999389497e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:55.709" endtime="20201112 12:26:55.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.699" endtime="20201112 12:26:55.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.730" level="INFO">${RESULT} = [{'time': 0.0376835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037692778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:55.721" endtime="20201112 12:26:55.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:55.761" level="INFO">${GPIO_OVERHEAD} = {'time': [0.0376835, 0.037692778, 0.037700389, 0.037708417, 0.037717194, 0.037727208, 0.037733903, 0.037743806, 0.037748597, 0.037759889, 0.037766083, 0.037773667, 0.037784097, 0.037791917, 0.03779818...</msg>
<status status="PASS" starttime="20201112 12:26:55.732" endtime="20201112 12:26:55.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.772" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:55.769" endtime="20201112 12:26:55.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.778" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07]</msg>
<status status="PASS" starttime="20201112 12:26:55.775" endtime="20201112 12:26:55.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.763" endtime="20201112 12:26:55.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.787" endtime="20201112 12:26:55.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.795" endtime="20201112 12:26:55.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.791" endtime="20201112 12:26:55.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.782" endtime="20201112 12:26:55.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.172" endtime="20201112 12:26:55.821"></status>
</kw>
<msg timestamp="20201112 12:26:55.821" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.841" endtime="20201112 12:26:55.851"></status>
</kw>
<msg timestamp="20201112 12:26:55.853" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.838" endtime="20201112 12:26:55.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.859" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.855" endtime="20201112 12:26:55.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.861" endtime="20201112 12:26:55.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.830" endtime="20201112 12:26:55.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.826" endtime="20201112 12:26:55.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.885" endtime="20201112 12:26:56.222"></status>
</kw>
<msg timestamp="20201112 12:26:56.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036093375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036093847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.881" endtime="20201112 12:26:56.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036093375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036093847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.232" endtime="20201112 12:26:56.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.251" endtime="20201112 12:26:56.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.874" endtime="20201112 12:26:56.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.869" endtime="20201112 12:26:56.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.269" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:56.266" endtime="20201112 12:26:56.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.281" level="INFO">VALUE: [{'time': 0.036093375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036093847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036101528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.036102, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036107792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.036108264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036118986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.036119528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036125639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.036126111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036135764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.036136236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036146667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.036147208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036154694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.036155236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036165944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.036166417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036172208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.036172681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036180444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.763000000000908e-06, 'source_diff': 7.763000000000908e-06}, {'time': 0.036180917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036185986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.036186458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036197361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036197833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036206139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036206611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036211819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036212361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036221056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.036221528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036226792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036227264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036236611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036237083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036247903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819999999994723e-05, 'source_diff': 1.0819999999994723e-05}, {'time': 0.036248375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036256889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036257361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036262819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.036263292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036273681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036274153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036282875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.036283347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036293611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0264000000002882e-05, 'source_diff': 1.0264000000002882e-05}, {'time': 0.036294083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036303431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.036303903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03631125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000004766e-06, 'source_diff': 7.347000000004766e-06}, {'time': 0.036311722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036316681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.959000000005764e-06, 'source_diff': 4.959000000005764e-06}, {'time': 0.036317153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036321694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5410000000037365e-06, 'source_diff': 4.5410000000037365e-06}, {'time': 0.036322167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036329222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.036329694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036336222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.036336694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036343, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.036343472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036354069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.036354542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036363139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597000000006016e-06, 'source_diff': 8.597000000006016e-06}, {'time': 0.036363611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036368056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.445000000005694e-06, 'source_diff': 4.445000000005694e-06}, {'time': 0.036368528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036374014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000005931e-06, 'source_diff': 5.486000000005931e-06}, {'time': 0.036374486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036380069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.036380542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036390444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.036390986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036401153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.036401625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036409222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.036409764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036414833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.036415306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036424222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.036424694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036432889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.036433361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036443028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.0364435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036448917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.036449458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036456597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.036457069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036466819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.036467292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036472569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277000000004917e-06, 'source_diff': 5.277000000004917e-06}, {'time': 0.036473042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036482611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.036483083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036491153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.036491625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036496264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036496736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:56.271" endtime="20201112 12:26:56.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.260" endtime="20201112 12:26:56.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:56.343" level="INFO">${debug-compressed} = {'time': [0.036093375, 0.036093847, 0.036101528, 0.036102, 0.036107792, 0.036108264, 0.036118986, 0.036119528, 0.036125639, 0.036126111, 0.036135764, 0.036136236, 0.036146667, 0.036147208, 0.036154694...</msg>
<status status="PASS" starttime="20201112 12:26:56.287" endtime="20201112 12:26:56.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.353" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:56.351" endtime="20201112 12:26:56.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.362" level="INFO">VALUE: {'time': [0.036093375, 0.036093847, 0.036101528, 0.036102, 0.036107792, 0.036108264, 0.036118986, 0.036119528, 0.036125639, 0.036126111, 0.036135764, 0.036136236, 0.036146667, 0.036147208, 0.036154694, 0.036155236, 0.036165944, 0.036166417, 0.036172208, 0.036172681, 0.036180444, 0.036180917, 0.036185986, 0.036186458, 0.036197361, 0.036197833, 0.036206139, 0.036206611, 0.036211819, 0.036212361, 0.036221056, 0.036221528, 0.036226792, 0.036227264, 0.036236611, 0.036237083, 0.036247903, 0.036248375, 0.036256889, 0.036257361, 0.036262819, 0.036263292, 0.036273681, 0.036274153, 0.036282875, 0.036283347, 0.036293611, 0.036294083, 0.036303431, 0.036303903, 0.03631125, 0.036311722, 0.036316681, 0.036317153, 0.036321694, 0.036322167, 0.036329222, 0.036329694, 0.036336222, 0.036336694, 0.036343, 0.036343472, 0.036354069, 0.036354542, 0.036363139, 0.036363611, 0.036368056, 0.036368528, 0.036374014, 0.036374486, 0.036380069, 0.036380542, 0.036390444, 0.036390986, 0.036401153, 0.036401625, 0.036409222, 0.036409764, 0.036414833, 0.036415306, 0.036424222, 0.036424694, 0.036432889, 0.036433361, 0.036443028, 0.0364435, 0.036448917, 0.036449458, 0.036456597, 0.036457069, 0.036466819, 0.036467292, 0.036472569, 0.036473042, 0.036482611, 0.036483083, 0.036491153, 0.036491625, 0.036496264, 0.036496736], 'eventsource_diff': [0, 4.720000000013602e-07, 7.681000000002436e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 5.419999999992098e-07, 6.111000000003086e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 5.409999999997361e-07, 7.486000000000992e-06, 5.419999999992098e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 7.763000000000908e-06, 4.7300000000083386e-07, 5.069000000003376e-06, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 5.207999999999602e-06, 5.419999999992098e-07, 8.695000000003006e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 1.0264000000002882e-05, 4.7199999999442133e-07, 9.347999999999301e-06, 4.720000000013602e-07, 7.347000000004766e-06, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 4.5410000000037365e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7299999999389497e-07, 8.597000000006016e-06, 4.7199999999442133e-07, 4.445000000005694e-06, 4.7199999999442133e-07, 5.486000000005931e-06, 4.7199999999442133e-07, 5.583000000003446e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 5.419999999992098e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 5.417000000000616e-06, 5.409999999997361e-07, 7.139000000003226e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.7300000000083386e-07, 5.277000000004917e-06, 4.7299999999389497e-07, 9.569000000000938e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 7.681000000002436e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 5.419999999992098e-07, 6.111000000003086e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 5.409999999997361e-07, 7.486000000000992e-06, 5.419999999992098e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 7.763000000000908e-06, 4.7300000000083386e-07, 5.069000000003376e-06, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 5.207999999999602e-06, 5.419999999992098e-07, 8.695000000003006e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 1.0264000000002882e-05, 4.7199999999442133e-07, 9.347999999999301e-06, 4.720000000013602e-07, 7.347000000004766e-06, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 4.5410000000037365e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7299999999389497e-07, 8.597000000006016e-06, 4.7199999999442133e-07, 4.445000000005694e-06, 4.7199999999442133e-07, 5.486000000005931e-06, 4.7199999999442133e-07, 5.583000000003446e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 5.419999999992098e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 5.417000000000616e-06, 5.409999999997361e-07, 7.139000000003226e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.7300000000083386e-07, 5.277000000004917e-06, 4.7299999999389497e-07, 9.569000000000938e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:56.355" endtime="20201112 12:26:56.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.345" endtime="20201112 12:26:56.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.376" level="INFO">${RESULT} = [{'time': 0.036093847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036102, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:56.367" endtime="20201112 12:26:56.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:56.407" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036093847, 0.036102, 0.036108264, 0.036119528, 0.036126111, 0.036136236, 0.036147208, 0.036155236, 0.036166417, 0.036172681, 0.036180917, 0.036186458, 0.036197833, 0.036206611, 0.036212361...</msg>
<status status="PASS" starttime="20201112 12:26:56.378" endtime="20201112 12:26:56.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.418" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:56.415" endtime="20201112 12:26:56.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.423" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:56.420" endtime="20201112 12:26:56.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.409" endtime="20201112 12:26:56.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.432" endtime="20201112 12:26:56.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.440" endtime="20201112 12:26:56.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.436" endtime="20201112 12:26:56.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.427" endtime="20201112 12:26:56.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.822" endtime="20201112 12:26:56.466"></status>
</kw>
<msg timestamp="20201112 12:26:56.466" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.486" endtime="20201112 12:26:56.496"></status>
</kw>
<msg timestamp="20201112 12:26:56.498" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.483" endtime="20201112 12:26:56.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.504" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.500" endtime="20201112 12:26:56.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.506" endtime="20201112 12:26:56.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.475" endtime="20201112 12:26:56.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.471" endtime="20201112 12:26:56.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.529" endtime="20201112 12:26:56.872"></status>
</kw>
<msg timestamp="20201112 12:26:56.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035963292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035963764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.526" endtime="20201112 12:26:56.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035963292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035963764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.881" endtime="20201112 12:26:56.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.900" endtime="20201112 12:26:56.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.519" endtime="20201112 12:26:56.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.514" endtime="20201112 12:26:56.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.917" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:56.915" endtime="20201112 12:26:56.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.928" level="INFO">VALUE: [{'time': 0.035963292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035963764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035969764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035970236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035977389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.035977861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035986569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.035987042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035994306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035994778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036005153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036005625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036014125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036014597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036020083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036020556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036024972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.036025444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036035014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036035486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036040431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.036040903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036050361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000003852e-06, 'source_diff': 9.458000000003852e-06}, {'time': 0.036050833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036059639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.036060111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036069444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036069917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036076653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036077125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036083736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.036084208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036090514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.036090986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036099319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.036099792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036107639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.036108111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036117986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036118458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036123931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.036124403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036133333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036133806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036139653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.036140194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036146694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.036147167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036153264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.036153736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036158611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.036159083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036168625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.036169097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036176694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.597000000005016e-06, 'source_diff': 7.597000000005016e-06}, {'time': 0.036177167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0361845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.036184972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036194514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541999999994333e-06, 'source_diff': 9.541999999994333e-06}, {'time': 0.036194986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036200778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.03620125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03621125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.036211722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036219472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.036219944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036225944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0000000000060005e-06, 'source_diff': 6.0000000000060005e-06}, {'time': 0.036226417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036234819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000004572e-06, 'source_diff': 8.402000000004572e-06}, {'time': 0.036235292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036245292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.036245833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036256542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0709000000004576e-05, 'source_diff': 1.0709000000004576e-05}, {'time': 0.036257014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036263306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.29200000000496e-06, 'source_diff': 6.29200000000496e-06}, {'time': 0.036263778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036272194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.415999999997203e-06, 'source_diff': 8.415999999997203e-06}, {'time': 0.036272667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036277514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.036277986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036283375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.036283847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036289417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999996411e-06, 'source_diff': 5.569999999996411e-06}, {'time': 0.036289889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036297028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.0362975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036307472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.036307944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036314514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.569999999997411e-06, 'source_diff': 6.569999999997411e-06}, {'time': 0.036315056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036325042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.036325583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036334097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036334569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036339431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.86200000000131e-06, 'source_diff': 4.86200000000131e-06}, {'time': 0.036339903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036347681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036348153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036356319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.165999999996953e-06, 'source_diff': 8.165999999996953e-06}, {'time': 0.036356792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:56.919" endtime="20201112 12:26:56.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.909" endtime="20201112 12:26:56.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:56.989" level="INFO">${debug-compressed} = {'time': [0.035963292, 0.035963764, 0.035969764, 0.035970236, 0.035977389, 0.035977861, 0.035986569, 0.035987042, 0.035994306, 0.035994778, 0.036005153, 0.036005625, 0.036014125, 0.036014597, 0.036020...</msg>
<status status="PASS" starttime="20201112 12:26:56.934" endtime="20201112 12:26:56.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.999" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:56.996" endtime="20201112 12:26:56.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.008" level="INFO">VALUE: {'time': [0.035963292, 0.035963764, 0.035969764, 0.035970236, 0.035977389, 0.035977861, 0.035986569, 0.035987042, 0.035994306, 0.035994778, 0.036005153, 0.036005625, 0.036014125, 0.036014597, 0.036020083, 0.036020556, 0.036024972, 0.036025444, 0.036035014, 0.036035486, 0.036040431, 0.036040903, 0.036050361, 0.036050833, 0.036059639, 0.036060111, 0.036069444, 0.036069917, 0.036076653, 0.036077125, 0.036083736, 0.036084208, 0.036090514, 0.036090986, 0.036099319, 0.036099792, 0.036107639, 0.036108111, 0.036117986, 0.036118458, 0.036123931, 0.036124403, 0.036133333, 0.036133806, 0.036139653, 0.036140194, 0.036146694, 0.036147167, 0.036153264, 0.036153736, 0.036158611, 0.036159083, 0.036168625, 0.036169097, 0.036176694, 0.036177167, 0.0361845, 0.036184972, 0.036194514, 0.036194986, 0.036200778, 0.03620125, 0.03621125, 0.036211722, 0.036219472, 0.036219944, 0.036225944, 0.036226417, 0.036234819, 0.036235292, 0.036245292, 0.036245833, 0.036256542, 0.036257014, 0.036263306, 0.036263778, 0.036272194, 0.036272667, 0.036277514, 0.036277986, 0.036283375, 0.036283847, 0.036289417, 0.036289889, 0.036297028, 0.0362975, 0.036307472, 0.036307944, 0.036314514, 0.036315056, 0.036325042, 0.036325583, 0.036334097, 0.036334569, 0.036339431, 0.036339903, 0.036347681, 0.036348153, 0.036356319, 0.036356792], 'eventsource_diff': [0, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.7299999999389497e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7199999999442133e-07, 9.570000000000412e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 9.458000000003852e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 5.847000000003266e-06, 5.409999999997361e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 6.096999999996577e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 7.597000000005016e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 4.720000000013602e-07, 9.541999999994333e-06, 4.720000000013602e-07, 5.79200000000446e-06, 4.7199999999442133e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 7.750000000000812e-06, 4.7199999999442133e-07, 6.0000000000060005e-06, 4.7299999999389497e-07, 8.402000000004572e-06, 4.7300000000083386e-07, 9.999999999996123e-06, 5.409999999997361e-07, 1.0709000000004576e-05, 4.7199999999442133e-07, 6.29200000000496e-06, 4.720000000013602e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.720000000013602e-07, 5.569999999996411e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 6.569999999997411e-06, 5.419999999992098e-07, 9.986000000003492e-06, 5.409999999997361e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 4.86200000000131e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.165999999996953e-06, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.7299999999389497e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7199999999442133e-07, 9.570000000000412e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 9.458000000003852e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 5.847000000003266e-06, 5.409999999997361e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 6.096999999996577e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 7.597000000005016e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 4.720000000013602e-07, 9.541999999994333e-06, 4.720000000013602e-07, 5.79200000000446e-06, 4.7199999999442133e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 7.750000000000812e-06, 4.7199999999442133e-07, 6.0000000000060005e-06, 4.7299999999389497e-07, 8.402000000004572e-06, 4.7300000000083386e-07, 9.999999999996123e-06, 5.409999999997361e-07, 1.0709000000004576e-05, 4.7199999999442133e-07, 6.29200000000496e-06, 4.720000000013602e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.720000000013602e-07, 5.569999999996411e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 6.569999999997411e-06, 5.419999999992098e-07, 9.986000000003492e-06, 5.409999999997361e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 4.86200000000131e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.165999999996953e-06, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:57.001" endtime="20201112 12:26:57.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.991" endtime="20201112 12:26:57.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.022" level="INFO">${RESULT} = [{'time': 0.035963764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035970236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:57.013" endtime="20201112 12:26:57.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:57.054" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035963764, 0.035970236, 0.035977861, 0.035987042, 0.035994778, 0.036005625, 0.036014597, 0.036020556, 0.036025444, 0.036035486, 0.036040903, 0.036050833, 0.036060111, 0.036069917, 0.036077...</msg>
<status status="PASS" starttime="20201112 12:26:57.024" endtime="20201112 12:26:57.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.064" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:57.062" endtime="20201112 12:26:57.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.070" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:26:57.067" endtime="20201112 12:26:57.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.056" endtime="20201112 12:26:57.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.079" endtime="20201112 12:26:57.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.087" endtime="20201112 12:26:57.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.083" endtime="20201112 12:26:57.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.074" endtime="20201112 12:26:57.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.467" endtime="20201112 12:26:57.113"></status>
</kw>
<msg timestamp="20201112 12:26:57.113" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.134" endtime="20201112 12:26:57.145"></status>
</kw>
<msg timestamp="20201112 12:26:57.146" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.131" endtime="20201112 12:26:57.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.152" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.148" endtime="20201112 12:26:57.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.155" endtime="20201112 12:26:57.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.122" endtime="20201112 12:26:57.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.118" endtime="20201112 12:26:57.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.178" endtime="20201112 12:26:57.513"></status>
</kw>
<msg timestamp="20201112 12:26:57.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037454736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037455208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.175" endtime="20201112 12:26:57.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037454736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037455208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.523" endtime="20201112 12:26:57.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.542" endtime="20201112 12:26:57.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.167" endtime="20201112 12:26:57.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.163" endtime="20201112 12:26:57.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.559" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:57.556" endtime="20201112 12:26:57.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.570" level="INFO">VALUE: [{'time': 0.037454736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037455208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037460361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.037460833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037467042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.037467514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03747575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.037476292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03748125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.037481722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037490139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416999999996677e-06, 'source_diff': 8.416999999996677e-06}, {'time': 0.037490611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037495972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.037496444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037501083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037501556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037506833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277000000004917e-06, 'source_diff': 5.277000000004917e-06}, {'time': 0.037507306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037514861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.037515333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037523931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.59800000000549e-06, 'source_diff': 8.59800000000549e-06}, {'time': 0.037524403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037529153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.037529625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037536986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.037537458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037546375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.037546847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037555764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.037556236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037564431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.037564903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037571958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055000000005807e-06, 'source_diff': 7.055000000005807e-06}, {'time': 0.037572431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037581875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.037582347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037592528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.037593, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037599194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.037599667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037605931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.037606472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037616306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.037616778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037627181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0403000000006046e-05, 'source_diff': 1.0403000000006046e-05}, {'time': 0.037627653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037638028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.0376385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.037649764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037656931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.037657403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037662556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.037663028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037670486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037670958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037680333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000005906e-06, 'source_diff': 9.375000000005906e-06}, {'time': 0.037680875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037685306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.037685778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037695028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999995373e-06, 'source_diff': 9.249999999995373e-06}, {'time': 0.0376955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037702736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.037703208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037712444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.037712917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037723514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.037723986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03773, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.037730472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03773625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.037736722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037743653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.037744125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037754514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037754986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037762972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.037763444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037769653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.037770125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037780292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.037780764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037785306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.037785778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037792194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416000000002142e-06, 'source_diff': 6.416000000002142e-06}, {'time': 0.037792667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037800236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.037800708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037805347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037805819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037810875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 0.037811347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037819236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.037819708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037828, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037828472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037833444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.037833917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037839792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999995467e-06, 'source_diff': 5.874999999995467e-06}, {'time': 0.037840264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:57.561" endtime="20201112 12:26:57.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.550" endtime="20201112 12:26:57.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:57.631" level="INFO">${debug-compressed} = {'time': [0.037454736, 0.037455208, 0.037460361, 0.037460833, 0.037467042, 0.037467514, 0.03747575, 0.037476292, 0.03748125, 0.037481722, 0.037490139, 0.037490611, 0.037495972, 0.037496444, 0.03750108...</msg>
<status status="PASS" starttime="20201112 12:26:57.576" endtime="20201112 12:26:57.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.641" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:57.638" endtime="20201112 12:26:57.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.650" level="INFO">VALUE: {'time': [0.037454736, 0.037455208, 0.037460361, 0.037460833, 0.037467042, 0.037467514, 0.03747575, 0.037476292, 0.03748125, 0.037481722, 0.037490139, 0.037490611, 0.037495972, 0.037496444, 0.037501083, 0.037501556, 0.037506833, 0.037507306, 0.037514861, 0.037515333, 0.037523931, 0.037524403, 0.037529153, 0.037529625, 0.037536986, 0.037537458, 0.037546375, 0.037546847, 0.037555764, 0.037556236, 0.037564431, 0.037564903, 0.037571958, 0.037572431, 0.037581875, 0.037582347, 0.037592528, 0.037593, 0.037599194, 0.037599667, 0.037605931, 0.037606472, 0.037616306, 0.037616778, 0.037627181, 0.037627653, 0.037638028, 0.0376385, 0.037649292, 0.037649764, 0.037656931, 0.037657403, 0.037662556, 0.037663028, 0.037670486, 0.037670958, 0.037680333, 0.037680875, 0.037685306, 0.037685778, 0.037695028, 0.0376955, 0.037702736, 0.037703208, 0.037712444, 0.037712917, 0.037723514, 0.037723986, 0.03773, 0.037730472, 0.03773625, 0.037736722, 0.037743653, 0.037744125, 0.037754514, 0.037754986, 0.037762972, 0.037763444, 0.037769653, 0.037770125, 0.037780292, 0.037780764, 0.037785306, 0.037785778, 0.037792194, 0.037792667, 0.037800236, 0.037800708, 0.037805347, 0.037805819, 0.037810875, 0.037811347, 0.037819236, 0.037819708, 0.037828, 0.037828472, 0.037833444, 0.037833917, 0.037839792, 0.037840264], 'eventsource_diff': [0, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 8.236000000001742e-06, 5.419999999992098e-07, 4.957999999999352e-06, 4.720000000013602e-07, 8.416999999996677e-06, 4.720000000013602e-07, 5.361000000002336e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.7300000000083386e-07, 5.277000000004917e-06, 4.7299999999389497e-07, 7.554999999999368e-06, 4.720000000013602e-07, 8.59800000000549e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.7199999999442133e-07, 7.361000000004336e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 7.055000000005807e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 6.2639999999988816e-06, 5.409999999997361e-07, 9.834000000000231e-06, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 9.375000000005906e-06, 5.419999999992098e-07, 4.430999999999186e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 7.986000000001492e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 6.416000000002142e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 5.05600000000328e-06, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.7300000000083386e-07, 5.874999999995467e-06, 4.720000000013602e-07], 'diff': [0, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 8.236000000001742e-06, 5.419999999992098e-07, 4.957999999999352e-06, 4.720000000013602e-07, 8.416999999996677e-06, 4.720000000013602e-07, 5.361000000002336e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.7300000000083386e-07, 5.277000000004917e-06, 4.7299999999389497e-07, 7.554999999999368e-06, 4.720000000013602e-07, 8.59800000000549e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.7199999999442133e-07, 7.361000000004336e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 7.055000000005807e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 6.2639999999988816e-06, 5.409999999997361e-07, 9.834000000000231e-06, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 9.375000000005906e-06, 5.419999999992098e-07, 4.430999999999186e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 7.986000000001492e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 6.416000000002142e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 5.05600000000328e-06, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.7300000000083386e-07, 5.874999999995467e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:57.643" endtime="20201112 12:26:57.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.633" endtime="20201112 12:26:57.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.664" level="INFO">${RESULT} = [{'time': 0.037455208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037460833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:57.655" endtime="20201112 12:26:57.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:57.695" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037455208, 0.037460833, 0.037467514, 0.037476292, 0.037481722, 0.037490611, 0.037496444, 0.037501556, 0.037507306, 0.037515333, 0.037524403, 0.037529625, 0.037537458, 0.037546847, 0.037556...</msg>
<status status="PASS" starttime="20201112 12:26:57.666" endtime="20201112 12:26:57.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.707" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:57.703" endtime="20201112 12:26:57.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.712" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:57.709" endtime="20201112 12:26:57.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.697" endtime="20201112 12:26:57.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.721" endtime="20201112 12:26:57.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.729" endtime="20201112 12:26:57.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.725" endtime="20201112 12:26:57.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.716" endtime="20201112 12:26:57.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.114" endtime="20201112 12:26:57.755"></status>
</kw>
<msg timestamp="20201112 12:26:57.755" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.775" endtime="20201112 12:26:57.786"></status>
</kw>
<msg timestamp="20201112 12:26:57.787" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.772" endtime="20201112 12:26:57.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.793" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.789" endtime="20201112 12:26:57.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.795" endtime="20201112 12:26:57.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.765" endtime="20201112 12:26:57.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.760" endtime="20201112 12:26:57.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.818" endtime="20201112 12:26:58.157"></status>
</kw>
<msg timestamp="20201112 12:26:58.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035918264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035918736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.815" endtime="20201112 12:26:58.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035918264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035918736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.166" endtime="20201112 12:26:58.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.186" endtime="20201112 12:26:58.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.808" endtime="20201112 12:26:58.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.803" endtime="20201112 12:26:58.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.202" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:58.200" endtime="20201112 12:26:58.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.213" level="INFO">VALUE: [{'time': 0.035918264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035918736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035929639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.035930111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035937264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.035937736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035944042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.035944514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035953556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.035954028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035958556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.035959028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035968167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.035968639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035976639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.035977111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035986014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.035986486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035994597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000005086e-06, 'source_diff': 8.111000000005086e-06}, {'time': 0.035995069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036001347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.27800000000539e-06, 'source_diff': 6.27800000000539e-06}, {'time': 0.036001819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036006361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036006833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036012542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.036013014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036019722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.707999999994163e-06, 'source_diff': 6.707999999994163e-06}, {'time': 0.036020194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036027778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.58400000000492e-06, 'source_diff': 7.58400000000492e-06}, {'time': 0.03602825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036036333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036036806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03604175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.036042222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036051486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.036051958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.03606175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036067653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.036068125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036078917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.036079389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036089736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999993889e-05, 'source_diff': 1.0346999999993889e-05}, {'time': 0.036090278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036098431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.036098903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036108833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.036109375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036117347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.036117819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036126417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.036126889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036137333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.036137875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036145208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.036145681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036153667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036154139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036159403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036159875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036167347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.036167819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036175583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.036176056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036185403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036185875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036190444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.036190917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036195194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.276999999996978e-06, 'source_diff': 4.276999999996978e-06}, {'time': 0.036195667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036203653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036204125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036210875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.036211347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036218264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.036218736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036225806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.036226278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036235292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.036235764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036243333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569000000005877e-06, 'source_diff': 7.569000000005877e-06}, {'time': 0.036243806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036252736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036253208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036260778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.03626125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036268917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.036269389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036277486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.036277958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0362825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036282972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036290639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.036291111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036301722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.036302194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036310069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.036310542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036319986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.036320458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:58.204" endtime="20201112 12:26:58.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.194" endtime="20201112 12:26:58.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:58.277" level="INFO">${debug-compressed} = {'time': [0.035918264, 0.035918736, 0.035929639, 0.035930111, 0.035937264, 0.035937736, 0.035944042, 0.035944514, 0.035953556, 0.035954028, 0.035958556, 0.035959028, 0.035968167, 0.035968639, 0.035976...</msg>
<status status="PASS" starttime="20201112 12:26:58.220" endtime="20201112 12:26:58.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.286" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:58.284" endtime="20201112 12:26:58.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.295" level="INFO">VALUE: {'time': [0.035918264, 0.035918736, 0.035929639, 0.035930111, 0.035937264, 0.035937736, 0.035944042, 0.035944514, 0.035953556, 0.035954028, 0.035958556, 0.035959028, 0.035968167, 0.035968639, 0.035976639, 0.035977111, 0.035986014, 0.035986486, 0.035994597, 0.035995069, 0.036001347, 0.036001819, 0.036006361, 0.036006833, 0.036012542, 0.036013014, 0.036019722, 0.036020194, 0.036027778, 0.03602825, 0.036036333, 0.036036806, 0.03604175, 0.036042222, 0.036051486, 0.036051958, 0.036061278, 0.03606175, 0.036067653, 0.036068125, 0.036078917, 0.036079389, 0.036089736, 0.036090278, 0.036098431, 0.036098903, 0.036108833, 0.036109375, 0.036117347, 0.036117819, 0.036126417, 0.036126889, 0.036137333, 0.036137875, 0.036145208, 0.036145681, 0.036153667, 0.036154139, 0.036159403, 0.036159875, 0.036167347, 0.036167819, 0.036175583, 0.036176056, 0.036185403, 0.036185875, 0.036190444, 0.036190917, 0.036195194, 0.036195667, 0.036203653, 0.036204125, 0.036210875, 0.036211347, 0.036218264, 0.036218736, 0.036225806, 0.036226278, 0.036235292, 0.036235764, 0.036243333, 0.036243806, 0.036252736, 0.036253208, 0.036260778, 0.03626125, 0.036268917, 0.036269389, 0.036277486, 0.036277958, 0.0362825, 0.036282972, 0.036290639, 0.036291111, 0.036301722, 0.036302194, 0.036310069, 0.036310542, 0.036319986, 0.036320458], 'eventsource_diff': [0, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 9.042000000000772e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.111000000005086e-06, 4.7199999999442133e-07, 6.27800000000539e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 6.707999999994163e-06, 4.720000000013602e-07, 7.58400000000492e-06, 4.7199999999442133e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 1.0346999999993889e-05, 5.420000000061487e-07, 8.152999999996857e-06, 4.720000000013602e-07, 9.929999999998274e-06, 5.419999999992098e-07, 7.972000000001922e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 5.419999999992098e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7199999999442133e-07, 7.764000000000382e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.569000000002876e-06, 4.7300000000083386e-07, 4.276999999996978e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 6.917000000002116e-06, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.7199999999442133e-07, 7.569000000005877e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 9.042000000000772e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.111000000005086e-06, 4.7199999999442133e-07, 6.27800000000539e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 6.707999999994163e-06, 4.720000000013602e-07, 7.58400000000492e-06, 4.7199999999442133e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 1.0346999999993889e-05, 5.420000000061487e-07, 8.152999999996857e-06, 4.720000000013602e-07, 9.929999999998274e-06, 5.419999999992098e-07, 7.972000000001922e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 5.419999999992098e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7199999999442133e-07, 7.764000000000382e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.569000000002876e-06, 4.7300000000083386e-07, 4.276999999996978e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 6.917000000002116e-06, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.7199999999442133e-07, 7.569000000005877e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:58.288" endtime="20201112 12:26:58.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.279" endtime="20201112 12:26:58.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.310" level="INFO">${RESULT} = [{'time': 0.035918736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035930111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.301" endtime="20201112 12:26:58.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:58.342" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035918736, 0.035930111, 0.035937736, 0.035944514, 0.035954028, 0.035959028, 0.035968639, 0.035977111, 0.035986486, 0.035995069, 0.036001819, 0.036006833, 0.036013014, 0.036020194, 0.036028...</msg>
<status status="PASS" starttime="20201112 12:26:58.312" endtime="20201112 12:26:58.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.352" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:58.350" endtime="20201112 12:26:58.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.357" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:58.354" endtime="20201112 12:26:58.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.344" endtime="20201112 12:26:58.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.366" endtime="20201112 12:26:58.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.375" endtime="20201112 12:26:58.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.370" endtime="20201112 12:26:58.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.362" endtime="20201112 12:26:58.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.757" endtime="20201112 12:26:58.400"></status>
</kw>
<msg timestamp="20201112 12:26:58.401" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.421" endtime="20201112 12:26:58.431"></status>
</kw>
<msg timestamp="20201112 12:26:58.432" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.417" endtime="20201112 12:26:58.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.439" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.435" endtime="20201112 12:26:58.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.441" endtime="20201112 12:26:58.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.410" endtime="20201112 12:26:58.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.405" endtime="20201112 12:26:58.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.464" endtime="20201112 12:26:58.802"></status>
</kw>
<msg timestamp="20201112 12:26:58.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036115389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036115861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.461" endtime="20201112 12:26:58.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036115389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036115861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.811" endtime="20201112 12:26:58.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.831" endtime="20201112 12:26:58.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.454" endtime="20201112 12:26:58.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.449" endtime="20201112 12:26:58.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.847" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:58.845" endtime="20201112 12:26:58.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.859" level="INFO">VALUE: [{'time': 0.036115389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036115861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036122708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.036123181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036130639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.036131111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036142028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.0361425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036149236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036149708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036156556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847999999996801e-06, 'source_diff': 6.847999999996801e-06}, {'time': 0.036157028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036161653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.036162125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036170528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.036171, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036181708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.036182181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036191111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036191583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036199028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.0361995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036208667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.036209139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036215528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999995537e-06, 'source_diff': 6.388999999995537e-06}, {'time': 0.036216, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036226792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.036227264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036232847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.036233319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036238278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.03623875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036243917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036244389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036249861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036250333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036256236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.902999999994607e-06, 'source_diff': 5.902999999994607e-06}, {'time': 0.036256708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036263028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.0362635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036270639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.036271111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036281514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036281986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036286611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.036287083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036294139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.036294611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036304778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000005366e-05, 'source_diff': 1.0167000000005366e-05}, {'time': 0.03630525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036314194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000003782e-06, 'source_diff': 8.944000000003782e-06}, {'time': 0.036314667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036323986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.036324458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036330875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.036331347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036335986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036336458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036347056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.036347528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036357931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0403000000006046e-05, 'source_diff': 1.0403000000006046e-05}, {'time': 0.036358403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036366583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.036367056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036373222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999994953e-06, 'source_diff': 6.165999999994953e-06}, {'time': 0.036373764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036379, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.036379472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036384764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.036385236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036393417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999995997e-06, 'source_diff': 8.180999999995997e-06}, {'time': 0.036393889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036404056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.036404528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036409708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.036410181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036419611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.036420083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036430486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036430958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036440708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.036441181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036449375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.036449847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036458861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.036459333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036465153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.036465625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036473278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.03647375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036484333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.036484806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03649175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.036492222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036500833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.036501306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036506056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.036506528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036517042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.036517514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:58.850" endtime="20201112 12:26:58.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.839" endtime="20201112 12:26:58.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:58.920" level="INFO">${debug-compressed} = {'time': [0.036115389, 0.036115861, 0.036122708, 0.036123181, 0.036130639, 0.036131111, 0.036142028, 0.0361425, 0.036149236, 0.036149708, 0.036156556, 0.036157028, 0.036161653, 0.036162125, 0.03617052...</msg>
<status status="PASS" starttime="20201112 12:26:58.865" endtime="20201112 12:26:58.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.929" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:58.927" endtime="20201112 12:26:58.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.938" level="INFO">VALUE: {'time': [0.036115389, 0.036115861, 0.036122708, 0.036123181, 0.036130639, 0.036131111, 0.036142028, 0.0361425, 0.036149236, 0.036149708, 0.036156556, 0.036157028, 0.036161653, 0.036162125, 0.036170528, 0.036171, 0.036181708, 0.036182181, 0.036191111, 0.036191583, 0.036199028, 0.0361995, 0.036208667, 0.036209139, 0.036215528, 0.036216, 0.036226792, 0.036227264, 0.036232847, 0.036233319, 0.036238278, 0.03623875, 0.036243917, 0.036244389, 0.036249861, 0.036250333, 0.036256236, 0.036256708, 0.036263028, 0.0362635, 0.036270639, 0.036271111, 0.036281514, 0.036281986, 0.036286611, 0.036287083, 0.036294139, 0.036294611, 0.036304778, 0.03630525, 0.036314194, 0.036314667, 0.036323986, 0.036324458, 0.036330875, 0.036331347, 0.036335986, 0.036336458, 0.036347056, 0.036347528, 0.036357931, 0.036358403, 0.036366583, 0.036367056, 0.036373222, 0.036373764, 0.036379, 0.036379472, 0.036384764, 0.036385236, 0.036393417, 0.036393889, 0.036404056, 0.036404528, 0.036409708, 0.036410181, 0.036419611, 0.036420083, 0.036430486, 0.036430958, 0.036440708, 0.036441181, 0.036449375, 0.036449847, 0.036458861, 0.036459333, 0.036465153, 0.036465625, 0.036473278, 0.03647375, 0.036484333, 0.036484806, 0.03649175, 0.036492222, 0.036500833, 0.036501306, 0.036506056, 0.036506528, 0.036517042, 0.036517514], 'eventsource_diff': [0, 4.720000000013602e-07, 6.847000000004266e-06, 4.7299999999389497e-07, 7.458000000001852e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.847999999996801e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 6.388999999995537e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 5.582999999996507e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.902999999994607e-06, 4.720000000013602e-07, 6.3200000000041e-06, 4.7199999999442133e-07, 7.139000000003226e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 8.944000000003782e-06, 4.7300000000083386e-07, 9.319000000000688e-06, 4.7199999999442133e-07, 6.417000000001616e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 8.180000000003462e-06, 4.7300000000083386e-07, 6.165999999994953e-06, 5.420000000061487e-07, 5.235999999998742e-06, 4.720000000013602e-07, 5.291999999997021e-06, 4.720000000013602e-07, 8.180999999995997e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.7300000000083386e-07, 8.193999999996093e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.7199999999442133e-07, 5.8200000000036e-06, 4.720000000013602e-07, 7.652999999996357e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.7300000000083386e-07, 6.944000000001782e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7299999999389497e-07, 4.75000000000475e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 6.847000000004266e-06, 4.7299999999389497e-07, 7.458000000001852e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.847999999996801e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 6.388999999995537e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 5.582999999996507e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.902999999994607e-06, 4.720000000013602e-07, 6.3200000000041e-06, 4.7199999999442133e-07, 7.139000000003226e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 8.944000000003782e-06, 4.7300000000083386e-07, 9.319000000000688e-06, 4.7199999999442133e-07, 6.417000000001616e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 8.180000000003462e-06, 4.7300000000083386e-07, 6.165999999994953e-06, 5.420000000061487e-07, 5.235999999998742e-06, 4.720000000013602e-07, 5.291999999997021e-06, 4.720000000013602e-07, 8.180999999995997e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.7300000000083386e-07, 8.193999999996093e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.7199999999442133e-07, 5.8200000000036e-06, 4.720000000013602e-07, 7.652999999996357e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.7300000000083386e-07, 6.944000000001782e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7299999999389497e-07, 4.75000000000475e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:58.932" endtime="20201112 12:26:58.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.922" endtime="20201112 12:26:58.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.953" level="INFO">${RESULT} = [{'time': 0.036115861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036123181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.944" endtime="20201112 12:26:58.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:58.984" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036115861, 0.036123181, 0.036131111, 0.0361425, 0.036149708, 0.036157028, 0.036162125, 0.036171, 0.036182181, 0.036191583, 0.0361995, 0.036209139, 0.036216, 0.036227264, 0.036233319, 0.036...</msg>
<status status="PASS" starttime="20201112 12:26:58.955" endtime="20201112 12:26:58.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.994" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:58.992" endtime="20201112 12:26:58.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.000" level="INFO">VALUE: [4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:58.997" endtime="20201112 12:26:59.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.986" endtime="20201112 12:26:59.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.010" endtime="20201112 12:26:59.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.018" endtime="20201112 12:26:59.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.014" endtime="20201112 12:26:59.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.005" endtime="20201112 12:26:59.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.402" endtime="20201112 12:26:59.044"></status>
</kw>
<msg timestamp="20201112 12:26:59.044" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.067" endtime="20201112 12:26:59.077"></status>
</kw>
<msg timestamp="20201112 12:26:59.078" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.063" endtime="20201112 12:26:59.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.085" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.081" endtime="20201112 12:26:59.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.087" endtime="20201112 12:26:59.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.056" endtime="20201112 12:26:59.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.049" endtime="20201112 12:26:59.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.110" endtime="20201112 12:26:59.449"></status>
</kw>
<msg timestamp="20201112 12:26:59.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038788944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038789417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.107" endtime="20201112 12:26:59.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038788944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038789417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.459" endtime="20201112 12:26:59.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.478" endtime="20201112 12:26:59.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.100" endtime="20201112 12:26:59.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.095" endtime="20201112 12:26:59.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.495" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:59.493" endtime="20201112 12:26:59.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.506" level="INFO">VALUE: [{'time': 0.038788944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038789417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038793736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.038794208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038805153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0945000000005256e-05, 'source_diff': 1.0945000000005256e-05}, {'time': 0.038805694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038811583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.038812056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038821194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138000000005753e-06, 'source_diff': 9.138000000005753e-06}, {'time': 0.038821667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038829653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.038830125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038837264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.038837736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038847694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000004352e-06, 'source_diff': 9.958000000004352e-06}, {'time': 0.038848167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038858653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.038859125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038869083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.038869556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038874722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.038875194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038880778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583999999995981e-06, 'source_diff': 5.583999999995981e-06}, {'time': 0.03888125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038888917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.038889389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038894764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.038895236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038904472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.038904944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038911278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.33400000000367e-06, 'source_diff': 6.33400000000367e-06}, {'time': 0.03891175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038921083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.038921556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038930889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.038931361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038935792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.038936264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038944875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.038945347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038954264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.038954736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038960056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3200000000031e-06, 'source_diff': 5.3200000000031e-06}, {'time': 0.038960597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038965639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.04200000000371e-06, 'source_diff': 5.04200000000371e-06}, {'time': 0.038966111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038971389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.038971861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038978597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.038979069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038986014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.038986486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038992486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.038992958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038997264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.038997736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039007389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000005296e-06, 'source_diff': 9.653000000005296e-06}, {'time': 0.039007861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039012819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.039013292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039023681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.039024153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039033903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.039034375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039045278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.03904575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039055639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.889000000005976e-06, 'source_diff': 9.889000000005976e-06}, {'time': 0.039056111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039066694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.039067167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039072319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.039072792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03907775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.039078222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039086417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999995567e-06, 'source_diff': 8.194999999995567e-06}, {'time': 0.039086889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039091861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.039092333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039097194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.039097667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039103319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999994883e-06, 'source_diff': 5.651999999994883e-06}, {'time': 0.039103792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039111361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.039111833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039121917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.039122389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039129236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.039129708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039134861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.039135333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039142778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.03914325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039149569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.039150042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039158667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.039159139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039166903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.039167375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039173681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.039174153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:59.497" endtime="20201112 12:26:59.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.487" endtime="20201112 12:26:59.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:59.567" level="INFO">${debug-compressed} = {'time': [0.038788944, 0.038789417, 0.038793736, 0.038794208, 0.038805153, 0.038805694, 0.038811583, 0.038812056, 0.038821194, 0.038821667, 0.038829653, 0.038830125, 0.038837264, 0.038837736, 0.038847...</msg>
<status status="PASS" starttime="20201112 12:26:59.512" endtime="20201112 12:26:59.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.577" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:59.574" endtime="20201112 12:26:59.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.586" level="INFO">VALUE: {'time': [0.038788944, 0.038789417, 0.038793736, 0.038794208, 0.038805153, 0.038805694, 0.038811583, 0.038812056, 0.038821194, 0.038821667, 0.038829653, 0.038830125, 0.038837264, 0.038837736, 0.038847694, 0.038848167, 0.038858653, 0.038859125, 0.038869083, 0.038869556, 0.038874722, 0.038875194, 0.038880778, 0.03888125, 0.038888917, 0.038889389, 0.038894764, 0.038895236, 0.038904472, 0.038904944, 0.038911278, 0.03891175, 0.038921083, 0.038921556, 0.038930889, 0.038931361, 0.038935792, 0.038936264, 0.038944875, 0.038945347, 0.038954264, 0.038954736, 0.038960056, 0.038960597, 0.038965639, 0.038966111, 0.038971389, 0.038971861, 0.038978597, 0.038979069, 0.038986014, 0.038986486, 0.038992486, 0.038992958, 0.038997264, 0.038997736, 0.039007389, 0.039007861, 0.039012819, 0.039013292, 0.039023681, 0.039024153, 0.039033903, 0.039034375, 0.039045278, 0.03904575, 0.039055639, 0.039056111, 0.039066694, 0.039067167, 0.039072319, 0.039072792, 0.03907775, 0.039078222, 0.039086417, 0.039086889, 0.039091861, 0.039092333, 0.039097194, 0.039097667, 0.039103319, 0.039103792, 0.039111361, 0.039111833, 0.039121917, 0.039122389, 0.039129236, 0.039129708, 0.039134861, 0.039135333, 0.039142778, 0.03914325, 0.039149569, 0.039150042, 0.039158667, 0.039159139, 0.039166903, 0.039167375, 0.039173681, 0.039174153], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.7300000000083386e-07, 4.319000000002626e-06, 4.7199999999442133e-07, 1.0945000000005256e-05, 5.409999999997361e-07, 5.888999999995037e-06, 4.7300000000083386e-07, 9.138000000005753e-06, 4.7299999999389497e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 9.958000000004352e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 6.33400000000367e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.7199999999442133e-07, 4.430999999999186e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 5.3200000000031e-06, 5.409999999997361e-07, 5.04200000000371e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.7199999999442133e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 9.889000000005976e-06, 4.7199999999442133e-07, 1.0583000000001508e-05, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.7300000000083386e-07, 5.651999999994883e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.7199999999442133e-07, 6.3190000000046265e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 6.30600000000453e-06, 4.720000000013602e-07], 'diff': [0, 4.7300000000083386e-07, 4.319000000002626e-06, 4.7199999999442133e-07, 1.0945000000005256e-05, 5.409999999997361e-07, 5.888999999995037e-06, 4.7300000000083386e-07, 9.138000000005753e-06, 4.7299999999389497e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 9.958000000004352e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 6.33400000000367e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.7199999999442133e-07, 4.430999999999186e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 5.3200000000031e-06, 5.409999999997361e-07, 5.04200000000371e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.7199999999442133e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 9.889000000005976e-06, 4.7199999999442133e-07, 1.0583000000001508e-05, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.7300000000083386e-07, 5.651999999994883e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.7199999999442133e-07, 6.3190000000046265e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 6.30600000000453e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:59.579" endtime="20201112 12:26:59.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.569" endtime="20201112 12:26:59.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.600" level="INFO">${RESULT} = [{'time': 0.038789417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038794208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:59.591" endtime="20201112 12:26:59.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:59.631" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038789417, 0.038794208, 0.038805694, 0.038812056, 0.038821667, 0.038830125, 0.038837736, 0.038848167, 0.038859125, 0.038869556, 0.038875194, 0.03888125, 0.038889389, 0.038895236, 0.0389049...</msg>
<status status="PASS" starttime="20201112 12:26:59.602" endtime="20201112 12:26:59.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.643" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:59.639" endtime="20201112 12:26:59.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.648" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:59.645" endtime="20201112 12:26:59.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.633" endtime="20201112 12:26:59.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.657" endtime="20201112 12:26:59.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.665" endtime="20201112 12:26:59.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.661" endtime="20201112 12:26:59.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.652" endtime="20201112 12:26:59.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.045" endtime="20201112 12:26:59.691"></status>
</kw>
<msg timestamp="20201112 12:26:59.691" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.711" endtime="20201112 12:26:59.722"></status>
</kw>
<msg timestamp="20201112 12:26:59.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.708" endtime="20201112 12:26:59.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.729" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.725" endtime="20201112 12:26:59.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.731" endtime="20201112 12:26:59.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.701" endtime="20201112 12:26:59.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.696" endtime="20201112 12:26:59.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.755" endtime="20201112 12:27:00.095"></status>
</kw>
<msg timestamp="20201112 12:27:00.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036012056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036012528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.751" endtime="20201112 12:27:00.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036012056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036012528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.104" endtime="20201112 12:27:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.124" endtime="20201112 12:27:00.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.744" endtime="20201112 12:27:00.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.740" endtime="20201112 12:27:00.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.140" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:00.138" endtime="20201112 12:27:00.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.152" level="INFO">VALUE: [{'time': 0.036012056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036012528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036017792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036018264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036025306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036025778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036032403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.036032875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036040125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036040597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036045653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.036046125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036055056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.036055528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036061833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.036062306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036070069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.763000000000908e-06, 'source_diff': 7.763000000000908e-06}, {'time': 0.036070542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036078542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036079014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036089903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.036090375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036095333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036095806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036103889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036104361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036109431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069999999995911e-06, 'source_diff': 5.069999999995911e-06}, {'time': 0.036109903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036117667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.036118139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036122431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.036122903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036129278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.036129819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036135472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.036135944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036142889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944999999994317e-06, 'source_diff': 6.944999999994317e-06}, {'time': 0.036143361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036150917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.036151389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036160625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.036161097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036171278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.03617175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036176528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.036177069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036186708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.036187181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036195583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000004572e-06, 'source_diff': 8.402000000004572e-06}, {'time': 0.036196056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036205611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.036206083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036211347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036211819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036217708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.036218181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036223764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.036224236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036228875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036229347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036236389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036236861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036247375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.036247847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036253972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.036254514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036260111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.036260583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036269486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.036269958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036279403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.036279875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036286083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.207999999993663e-06, 'source_diff': 6.207999999993663e-06}, {'time': 0.036286556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036293167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.036293639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036299958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.036300431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036311125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.036311597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036321347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.036321819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036330528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.036331, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036335306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.036335778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036340083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.036340556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036349431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.036349972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036359917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944999999997317e-06, 'source_diff': 9.944999999997317e-06}, {'time': 0.036360389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03637025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.036370722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036379222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036379694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036385389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.036385861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036393847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036394319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:00.143" endtime="20201112 12:27:00.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.132" endtime="20201112 12:27:00.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:00.214" level="INFO">${debug-compressed} = {'time': [0.036012056, 0.036012528, 0.036017792, 0.036018264, 0.036025306, 0.036025778, 0.036032403, 0.036032875, 0.036040125, 0.036040597, 0.036045653, 0.036046125, 0.036055056, 0.036055528, 0.036061...</msg>
<status status="PASS" starttime="20201112 12:27:00.158" endtime="20201112 12:27:00.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.224" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:00.221" endtime="20201112 12:27:00.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.233" level="INFO">VALUE: {'time': [0.036012056, 0.036012528, 0.036017792, 0.036018264, 0.036025306, 0.036025778, 0.036032403, 0.036032875, 0.036040125, 0.036040597, 0.036045653, 0.036046125, 0.036055056, 0.036055528, 0.036061833, 0.036062306, 0.036070069, 0.036070542, 0.036078542, 0.036079014, 0.036089903, 0.036090375, 0.036095333, 0.036095806, 0.036103889, 0.036104361, 0.036109431, 0.036109903, 0.036117667, 0.036118139, 0.036122431, 0.036122903, 0.036129278, 0.036129819, 0.036135472, 0.036135944, 0.036142889, 0.036143361, 0.036150917, 0.036151389, 0.036160625, 0.036161097, 0.036171278, 0.03617175, 0.036176528, 0.036177069, 0.036186708, 0.036187181, 0.036195583, 0.036196056, 0.036205611, 0.036206083, 0.036211347, 0.036211819, 0.036217708, 0.036218181, 0.036223764, 0.036224236, 0.036228875, 0.036229347, 0.036236389, 0.036236861, 0.036247375, 0.036247847, 0.036253972, 0.036254514, 0.036260111, 0.036260583, 0.036269486, 0.036269958, 0.036279403, 0.036279875, 0.036286083, 0.036286556, 0.036293167, 0.036293639, 0.036299958, 0.036300431, 0.036311125, 0.036311597, 0.036321347, 0.036321819, 0.036330528, 0.036331, 0.036335306, 0.036335778, 0.036340083, 0.036340556, 0.036349431, 0.036349972, 0.036359917, 0.036360389, 0.03637025, 0.036370722, 0.036379222, 0.036379694, 0.036385389, 0.036385861, 0.036393847, 0.036394319], 'eventsource_diff': [0, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 7.763000000000908e-06, 4.7299999999389497e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 5.069999999995911e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 4.29200000000296e-06, 4.7199999999442133e-07, 6.375000000002906e-06, 5.409999999997361e-07, 5.653000000001296e-06, 4.720000000013602e-07, 6.944999999994317e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.777999999996951e-06, 5.409999999997361e-07, 9.638999999998787e-06, 4.7300000000083386e-07, 8.402000000004572e-06, 4.7299999999389497e-07, 9.555000000001368e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 6.125000000002656e-06, 5.419999999992098e-07, 5.596999999996077e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.720000000013602e-07, 6.207999999993663e-06, 4.7300000000083386e-07, 6.611000000003586e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.709000000002576e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 4.305000000003056e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 5.409999999997361e-07, 9.944999999997317e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 5.695000000000006e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 7.763000000000908e-06, 4.7299999999389497e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 5.069999999995911e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 4.29200000000296e-06, 4.7199999999442133e-07, 6.375000000002906e-06, 5.409999999997361e-07, 5.653000000001296e-06, 4.720000000013602e-07, 6.944999999994317e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.777999999996951e-06, 5.409999999997361e-07, 9.638999999998787e-06, 4.7300000000083386e-07, 8.402000000004572e-06, 4.7299999999389497e-07, 9.555000000001368e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 6.125000000002656e-06, 5.419999999992098e-07, 5.596999999996077e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.720000000013602e-07, 6.207999999993663e-06, 4.7300000000083386e-07, 6.611000000003586e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.709000000002576e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 4.305000000003056e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 5.409999999997361e-07, 9.944999999997317e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 5.695000000000006e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:00.226" endtime="20201112 12:27:00.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.216" endtime="20201112 12:27:00.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.247" level="INFO">${RESULT} = [{'time': 0.036012528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036018264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.238" endtime="20201112 12:27:00.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:00.278" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036012528, 0.036018264, 0.036025778, 0.036032875, 0.036040597, 0.036046125, 0.036055528, 0.036062306, 0.036070542, 0.036079014, 0.036090375, 0.036095806, 0.036104361, 0.036109903, 0.036118...</msg>
<status status="PASS" starttime="20201112 12:27:00.249" endtime="20201112 12:27:00.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.289" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:00.286" endtime="20201112 12:27:00.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.294" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:27:00.291" endtime="20201112 12:27:00.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.280" endtime="20201112 12:27:00.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.303" endtime="20201112 12:27:00.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.311" endtime="20201112 12:27:00.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.307" endtime="20201112 12:27:00.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.298" endtime="20201112 12:27:00.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.692" endtime="20201112 12:27:00.337"></status>
</kw>
<msg timestamp="20201112 12:27:00.337" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.357" endtime="20201112 12:27:00.368"></status>
</kw>
<msg timestamp="20201112 12:27:00.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.354" endtime="20201112 12:27:00.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.375" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.371" endtime="20201112 12:27:00.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.378" endtime="20201112 12:27:00.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.346" endtime="20201112 12:27:00.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.342" endtime="20201112 12:27:00.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.402" endtime="20201112 12:27:00.740"></status>
</kw>
<msg timestamp="20201112 12:27:00.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036078861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036079333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.399" endtime="20201112 12:27:00.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036078861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036079333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.750" endtime="20201112 12:27:00.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.769" endtime="20201112 12:27:00.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.391" endtime="20201112 12:27:00.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.386" endtime="20201112 12:27:00.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.786" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:00.783" endtime="20201112 12:27:00.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.797" level="INFO">VALUE: [{'time': 0.036078861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036079333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036089306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.973000000003396e-06, 'source_diff': 9.973000000003396e-06}, {'time': 0.036089778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036098278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.03609875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036104333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.036104806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036110167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999995397e-06, 'source_diff': 5.360999999995397e-06}, {'time': 0.036110639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036117361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036117833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036124347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.036124819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036134889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.036135361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036145542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.036146014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036151181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036151653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036158069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416000000002142e-06, 'source_diff': 6.416000000002142e-06}, {'time': 0.036158542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036166528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03617425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036174722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036181139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.036181611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036186264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.036186736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036191889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036192361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036198667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.036199139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036208375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.036208847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036218528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.036219, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036228681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.036229222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036234681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.036235153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036241458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.036241931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036247403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036247875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036254292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.036254764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036263153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.036263625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036270472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.036270944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036281028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.0362815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036286556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.036287028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036297917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.036298389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036308472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.036308944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036315653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.036316125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036323042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.036323583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036332986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.036333458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036337889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.036338361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036344806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.036345278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036352083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.036352556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036356875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999995687e-06, 'source_diff': 4.318999999995687e-06}, {'time': 0.036357347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036366875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.036367347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036376278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.03637675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036381917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036382389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03639175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036392222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036401972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.036402444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036410931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.487000000001466e-06, 'source_diff': 8.487000000001466e-06}, {'time': 0.036411403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036416083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.036416625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036425014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.036425486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036434222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.036434694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036445292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.036445764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036453, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.036453472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036460264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.036460806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036468014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.036468486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:00.788" endtime="20201112 12:27:00.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.777" endtime="20201112 12:27:00.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:00.858" level="INFO">${debug-compressed} = {'time': [0.036078861, 0.036079333, 0.036089306, 0.036089778, 0.036098278, 0.03609875, 0.036104333, 0.036104806, 0.036110167, 0.036110639, 0.036117361, 0.036117833, 0.036124347, 0.036124819, 0.0361348...</msg>
<status status="PASS" starttime="20201112 12:27:00.803" endtime="20201112 12:27:00.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.868" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:00.865" endtime="20201112 12:27:00.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.877" level="INFO">VALUE: {'time': [0.036078861, 0.036079333, 0.036089306, 0.036089778, 0.036098278, 0.03609875, 0.036104333, 0.036104806, 0.036110167, 0.036110639, 0.036117361, 0.036117833, 0.036124347, 0.036124819, 0.036134889, 0.036135361, 0.036145542, 0.036146014, 0.036151181, 0.036151653, 0.036158069, 0.036158542, 0.036166528, 0.036167, 0.03617425, 0.036174722, 0.036181139, 0.036181611, 0.036186264, 0.036186736, 0.036191889, 0.036192361, 0.036198667, 0.036199139, 0.036208375, 0.036208847, 0.036218528, 0.036219, 0.036228681, 0.036229222, 0.036234681, 0.036235153, 0.036241458, 0.036241931, 0.036247403, 0.036247875, 0.036254292, 0.036254764, 0.036263153, 0.036263625, 0.036270472, 0.036270944, 0.036281028, 0.0362815, 0.036286556, 0.036287028, 0.036297917, 0.036298389, 0.036308472, 0.036308944, 0.036315653, 0.036316125, 0.036323042, 0.036323583, 0.036332986, 0.036333458, 0.036337889, 0.036338361, 0.036344806, 0.036345278, 0.036352083, 0.036352556, 0.036356875, 0.036357347, 0.036366875, 0.036367347, 0.036376278, 0.03637675, 0.036381917, 0.036382389, 0.03639175, 0.036392222, 0.036401972, 0.036402444, 0.036410931, 0.036411403, 0.036416083, 0.036416625, 0.036425014, 0.036425486, 0.036434222, 0.036434694, 0.036445292, 0.036445764, 0.036453, 0.036453472, 0.036460264, 0.036460806, 0.036468014, 0.036468486], 'eventsource_diff': [0, 4.720000000013602e-07, 9.973000000003396e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 5.583000000003446e-06, 4.7300000000083386e-07, 5.360999999995397e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.416000000002142e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 9.680999999997497e-06, 5.409999999997361e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999442133e-07, 6.917000000002116e-06, 5.409999999997361e-07, 9.402999999998107e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 6.445000000000756e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 4.318999999995687e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.487000000001466e-06, 4.720000000013602e-07, 4.679999999999962e-06, 5.419999999992098e-07, 8.388999999997537e-06, 4.720000000013602e-07, 8.736000000002242e-06, 4.7199999999442133e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 5.419999999992098e-07, 7.208000000001602e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 9.973000000003396e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 5.583000000003446e-06, 4.7300000000083386e-07, 5.360999999995397e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.416000000002142e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 9.680999999997497e-06, 5.409999999997361e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999442133e-07, 6.917000000002116e-06, 5.409999999997361e-07, 9.402999999998107e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 6.445000000000756e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 4.318999999995687e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.487000000001466e-06, 4.720000000013602e-07, 4.679999999999962e-06, 5.419999999992098e-07, 8.388999999997537e-06, 4.720000000013602e-07, 8.736000000002242e-06, 4.7199999999442133e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 5.419999999992098e-07, 7.208000000001602e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:00.870" endtime="20201112 12:27:00.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.860" endtime="20201112 12:27:00.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.891" level="INFO">${RESULT} = [{'time': 0.036079333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036089778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.882" endtime="20201112 12:27:00.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:00.922" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036079333, 0.036089778, 0.03609875, 0.036104806, 0.036110639, 0.036117833, 0.036124819, 0.036135361, 0.036146014, 0.036151653, 0.036158542, 0.036167, 0.036174722, 0.036181611, 0.036186736,...</msg>
<status status="PASS" starttime="20201112 12:27:00.893" endtime="20201112 12:27:00.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.932" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:00.930" endtime="20201112 12:27:00.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.938" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:27:00.935" endtime="20201112 12:27:00.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.924" endtime="20201112 12:27:00.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.947" endtime="20201112 12:27:00.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.955" endtime="20201112 12:27:00.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.951" endtime="20201112 12:27:00.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.942" endtime="20201112 12:27:00.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.339" endtime="20201112 12:27:00.981"></status>
</kw>
<msg timestamp="20201112 12:27:00.981" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.003" endtime="20201112 12:27:01.013"></status>
</kw>
<msg timestamp="20201112 12:27:01.014" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.999" endtime="20201112 12:27:01.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.016" endtime="20201112 12:27:01.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.023" endtime="20201112 12:27:01.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.990" endtime="20201112 12:27:01.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.986" endtime="20201112 12:27:01.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.046" endtime="20201112 12:27:01.403"></status>
</kw>
<msg timestamp="20201112 12:27:01.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037777292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037777764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.043" endtime="20201112 12:27:01.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037777292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037777764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.413" endtime="20201112 12:27:01.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.433" endtime="20201112 12:27:01.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.035" endtime="20201112 12:27:01.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.031" endtime="20201112 12:27:01.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.450" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:01.448" endtime="20201112 12:27:01.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.462" level="INFO">VALUE: [{'time': 0.037777292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037777764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037786514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.037786986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037795778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.03779625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037805486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.037805958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.037815472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037821764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.037822236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037833153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.037833625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037841069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.443999999995343e-06, 'source_diff': 7.443999999995343e-06}, {'time': 0.037841542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037847764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.037848236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037857583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037858056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037865611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.037866083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037874069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.037874542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037880708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.03788125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037891819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0569000000001938e-05, 'source_diff': 1.0569000000001938e-05}, {'time': 0.037892292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037902778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.03790325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037913028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.0379135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037919792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.037920264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037927583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.037928125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037933, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.037933542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037938472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.037938944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037945903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.037946375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037956847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000004422e-05, 'source_diff': 1.0472000000004422e-05}, {'time': 0.037957319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037962694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.037963167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037971778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.03797225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037978556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.037979028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037985125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.037985597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037993806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208999999995137e-06, 'source_diff': 8.208999999995137e-06}, {'time': 0.037994278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038002875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.038003347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038009139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.038009611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038016986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.038017458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038024903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.038025375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038032222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.038032694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038038792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.038039264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038044444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.179999999993523e-06, 'source_diff': 5.179999999993523e-06}, {'time': 0.038044917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038051125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.038051597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038060528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.038061, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038069806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.038070278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038078153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.038078625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038085292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.038085833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038096014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.038096486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038103986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.038104528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03811125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.038111722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038119292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.038119764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038125861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.038126333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038137139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.038137611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038148306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.038148778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038155306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.038155778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038164597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.038165069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0381695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.038169972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03817525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.038175722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:01.452" endtime="20201112 12:27:01.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.442" endtime="20201112 12:27:01.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:01.524" level="INFO">${debug-compressed} = {'time': [0.037777292, 0.037777764, 0.037786514, 0.037786986, 0.037795778, 0.03779625, 0.037805486, 0.037805958, 0.037815, 0.037815472, 0.037821764, 0.037822236, 0.037833153, 0.037833625, 0.037841069,...</msg>
<status status="PASS" starttime="20201112 12:27:01.468" endtime="20201112 12:27:01.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.533" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:01.531" endtime="20201112 12:27:01.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.543" level="INFO">VALUE: {'time': [0.037777292, 0.037777764, 0.037786514, 0.037786986, 0.037795778, 0.03779625, 0.037805486, 0.037805958, 0.037815, 0.037815472, 0.037821764, 0.037822236, 0.037833153, 0.037833625, 0.037841069, 0.037841542, 0.037847764, 0.037848236, 0.037857583, 0.037858056, 0.037865611, 0.037866083, 0.037874069, 0.037874542, 0.037880708, 0.03788125, 0.037891819, 0.037892292, 0.037902778, 0.03790325, 0.037913028, 0.0379135, 0.037919792, 0.037920264, 0.037927583, 0.037928125, 0.037933, 0.037933542, 0.037938472, 0.037938944, 0.037945903, 0.037946375, 0.037956847, 0.037957319, 0.037962694, 0.037963167, 0.037971778, 0.03797225, 0.037978556, 0.037979028, 0.037985125, 0.037985597, 0.037993806, 0.037994278, 0.038002875, 0.038003347, 0.038009139, 0.038009611, 0.038016986, 0.038017458, 0.038024903, 0.038025375, 0.038032222, 0.038032694, 0.038038792, 0.038039264, 0.038044444, 0.038044917, 0.038051125, 0.038051597, 0.038060528, 0.038061, 0.038069806, 0.038070278, 0.038078153, 0.038078625, 0.038085292, 0.038085833, 0.038096014, 0.038096486, 0.038103986, 0.038104528, 0.03811125, 0.038111722, 0.038119292, 0.038119764, 0.038125861, 0.038126333, 0.038137139, 0.038137611, 0.038148306, 0.038148778, 0.038155306, 0.038155778, 0.038164597, 0.038165069, 0.0381695, 0.038169972, 0.03817525, 0.038175722], 'eventsource_diff': [0, 4.720000000013602e-07, 8.750000000001812e-06, 4.720000000013602e-07, 8.792000000000522e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.443999999995343e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7299999999389497e-07, 6.166000000001892e-06, 5.419999999992098e-07, 1.0569000000001938e-05, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 7.318999999998688e-06, 5.419999999992098e-07, 4.875000000001406e-06, 5.419999999992098e-07, 4.930000000000212e-06, 4.720000000013602e-07, 6.959000000000826e-06, 4.7199999999442133e-07, 1.0472000000004422e-05, 4.720000000013602e-07, 5.374999999994967e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.720000000013602e-07, 8.208999999995137e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.7199999999442133e-07, 7.445000000001756e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 6.09800000000299e-06, 4.720000000013602e-07, 5.179999999993523e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 6.667000000001866e-06, 5.409999999997361e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 7.500000000000562e-06, 5.419999999992098e-07, 6.722000000000672e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 8.750000000001812e-06, 4.720000000013602e-07, 8.792000000000522e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.443999999995343e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7299999999389497e-07, 6.166000000001892e-06, 5.419999999992098e-07, 1.0569000000001938e-05, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 7.318999999998688e-06, 5.419999999992098e-07, 4.875000000001406e-06, 5.419999999992098e-07, 4.930000000000212e-06, 4.720000000013602e-07, 6.959000000000826e-06, 4.7199999999442133e-07, 1.0472000000004422e-05, 4.720000000013602e-07, 5.374999999994967e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.720000000013602e-07, 8.208999999995137e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.7199999999442133e-07, 7.445000000001756e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 6.09800000000299e-06, 4.720000000013602e-07, 5.179999999993523e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 6.667000000001866e-06, 5.409999999997361e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 7.500000000000562e-06, 5.419999999992098e-07, 6.722000000000672e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:01.536" endtime="20201112 12:27:01.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.526" endtime="20201112 12:27:01.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.557" level="INFO">${RESULT} = [{'time': 0.037777764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037786986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.548" endtime="20201112 12:27:01.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:01.589" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037777764, 0.037786986, 0.03779625, 0.037805958, 0.037815472, 0.037822236, 0.037833625, 0.037841542, 0.037848236, 0.037858056, 0.037866083, 0.037874542, 0.03788125, 0.037892292, 0.03790325...</msg>
<status status="PASS" starttime="20201112 12:27:01.559" endtime="20201112 12:27:01.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.599" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:01.597" endtime="20201112 12:27:01.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.605" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:27:01.602" endtime="20201112 12:27:01.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.591" endtime="20201112 12:27:01.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.613" endtime="20201112 12:27:01.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.622" endtime="20201112 12:27:01.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.617" endtime="20201112 12:27:01.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.609" endtime="20201112 12:27:01.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.982" endtime="20201112 12:27:01.647"></status>
</kw>
<msg timestamp="20201112 12:27:01.648" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.668" endtime="20201112 12:27:01.680"></status>
</kw>
<msg timestamp="20201112 12:27:01.681" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.664" endtime="20201112 12:27:01.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.687" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.683" endtime="20201112 12:27:01.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.689" endtime="20201112 12:27:01.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.657" endtime="20201112 12:27:01.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.652" endtime="20201112 12:27:01.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.712" endtime="20201112 12:27:02.055"></status>
</kw>
<msg timestamp="20201112 12:27:02.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036325056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036325528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.709" endtime="20201112 12:27:02.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036325056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036325528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.065" endtime="20201112 12:27:02.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.084" endtime="20201112 12:27:02.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.702" endtime="20201112 12:27:02.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.697" endtime="20201112 12:27:02.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.100" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:02.098" endtime="20201112 12:27:02.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.112" level="INFO">VALUE: [{'time': 0.036325056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036325528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036330597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.036331069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036338833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.036339306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036344569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.262999999998408e-06, 'source_diff': 5.262999999998408e-06}, {'time': 0.036345042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036352819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.036353292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036363764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.036364236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036370875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.036371347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036376292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.036376764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036382028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.0363825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036389431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.036389903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036397986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036398458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036409292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.036409764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036417611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000005266e-06, 'source_diff': 7.847000000005266e-06}, {'time': 0.036418083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036423042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.959000000005764e-06, 'source_diff': 4.959000000005764e-06}, {'time': 0.036423514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036432222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.036432694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036442028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.0364425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036449986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999994053e-06, 'source_diff': 7.485999999994053e-06}, {'time': 0.036450458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036460847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036461319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036470222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.036470694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036479, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036479472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036485667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.036486139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036493708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036494181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036500736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.036501208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036509264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.036509736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036517083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.036517556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036522097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5410000000037365e-06, 'source_diff': 4.5410000000037365e-06}, {'time': 0.036522569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036530667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.09800000000499e-06, 'source_diff': 8.09800000000499e-06}, {'time': 0.036531139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0365365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.036536972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036542444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036542917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036550194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.036550667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036556125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.036556597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036565097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.036565569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036572819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036573292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036579292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036579764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036590264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.036590736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036600278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.03660075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036608111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036608583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036618861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036619333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036627319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036627792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036637028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.0366375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036647875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036648347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036655083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036655556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036665847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291000000002548e-05, 'source_diff': 1.0291000000002548e-05}, {'time': 0.036666319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036671583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036672056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036680986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036681458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036690917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.459000000003326e-06, 'source_diff': 9.459000000003326e-06}, {'time': 0.036691389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036696583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.036697125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036706042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.036706514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036716819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0304999999995179e-05, 'source_diff': 1.0304999999995179e-05}, {'time': 0.036717361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036724097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036724569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:02.103" endtime="20201112 12:27:02.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.092" endtime="20201112 12:27:02.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:02.174" level="INFO">${debug-compressed} = {'time': [0.036325056, 0.036325528, 0.036330597, 0.036331069, 0.036338833, 0.036339306, 0.036344569, 0.036345042, 0.036352819, 0.036353292, 0.036363764, 0.036364236, 0.036370875, 0.036371347, 0.036376...</msg>
<status status="PASS" starttime="20201112 12:27:02.118" endtime="20201112 12:27:02.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.183" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:02.181" endtime="20201112 12:27:02.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.192" level="INFO">VALUE: {'time': [0.036325056, 0.036325528, 0.036330597, 0.036331069, 0.036338833, 0.036339306, 0.036344569, 0.036345042, 0.036352819, 0.036353292, 0.036363764, 0.036364236, 0.036370875, 0.036371347, 0.036376292, 0.036376764, 0.036382028, 0.0363825, 0.036389431, 0.036389903, 0.036397986, 0.036398458, 0.036409292, 0.036409764, 0.036417611, 0.036418083, 0.036423042, 0.036423514, 0.036432222, 0.036432694, 0.036442028, 0.0364425, 0.036449986, 0.036450458, 0.036460847, 0.036461319, 0.036470222, 0.036470694, 0.036479, 0.036479472, 0.036485667, 0.036486139, 0.036493708, 0.036494181, 0.036500736, 0.036501208, 0.036509264, 0.036509736, 0.036517083, 0.036517556, 0.036522097, 0.036522569, 0.036530667, 0.036531139, 0.0365365, 0.036536972, 0.036542444, 0.036542917, 0.036550194, 0.036550667, 0.036556125, 0.036556597, 0.036565097, 0.036565569, 0.036572819, 0.036573292, 0.036579292, 0.036579764, 0.036590264, 0.036590736, 0.036600278, 0.03660075, 0.036608111, 0.036608583, 0.036618861, 0.036619333, 0.036627319, 0.036627792, 0.036637028, 0.0366375, 0.036647875, 0.036648347, 0.036655083, 0.036655556, 0.036665847, 0.036666319, 0.036671583, 0.036672056, 0.036680986, 0.036681458, 0.036690917, 0.036691389, 0.036696583, 0.036697125, 0.036706042, 0.036706514, 0.036716819, 0.036717361, 0.036724097, 0.036724569], 'eventsource_diff': [0, 4.720000000013602e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7300000000083386e-07, 5.262999999998408e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 1.0834000000001232e-05, 4.7199999999442133e-07, 7.847000000005266e-06, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 7.485999999994053e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 6.195000000000506e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 6.554999999998368e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 4.5410000000037365e-06, 4.7199999999442133e-07, 8.09800000000499e-06, 4.7199999999442133e-07, 5.361000000002336e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 7.276999999999978e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 9.459000000003326e-06, 4.7199999999442133e-07, 5.194000000000032e-06, 5.419999999992098e-07, 8.917000000004116e-06, 4.720000000013602e-07, 1.0304999999995179e-05, 5.419999999992098e-07, 6.736000000000242e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7300000000083386e-07, 5.262999999998408e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 1.0834000000001232e-05, 4.7199999999442133e-07, 7.847000000005266e-06, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 7.485999999994053e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 6.195000000000506e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 6.554999999998368e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 4.5410000000037365e-06, 4.7199999999442133e-07, 8.09800000000499e-06, 4.7199999999442133e-07, 5.361000000002336e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 7.276999999999978e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 9.459000000003326e-06, 4.7199999999442133e-07, 5.194000000000032e-06, 5.419999999992098e-07, 8.917000000004116e-06, 4.720000000013602e-07, 1.0304999999995179e-05, 5.419999999992098e-07, 6.736000000000242e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:02.185" endtime="20201112 12:27:02.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.176" endtime="20201112 12:27:02.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.207" level="INFO">${RESULT} = [{'time': 0.036325528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036331069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.198" endtime="20201112 12:27:02.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:02.239" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036325528, 0.036331069, 0.036339306, 0.036345042, 0.036353292, 0.036364236, 0.036371347, 0.036376764, 0.0363825, 0.036389903, 0.036398458, 0.036409764, 0.036418083, 0.036423514, 0.03643269...</msg>
<status status="PASS" starttime="20201112 12:27:02.209" endtime="20201112 12:27:02.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.249" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:02.247" endtime="20201112 12:27:02.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.254" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:27:02.251" endtime="20201112 12:27:02.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.241" endtime="20201112 12:27:02.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.263" endtime="20201112 12:27:02.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.271" endtime="20201112 12:27:02.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.267" endtime="20201112 12:27:02.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.259" endtime="20201112 12:27:02.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.649" endtime="20201112 12:27:02.297"></status>
</kw>
<msg timestamp="20201112 12:27:02.298" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.317" endtime="20201112 12:27:02.329"></status>
</kw>
<msg timestamp="20201112 12:27:02.330" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.314" endtime="20201112 12:27:02.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.337" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.333" endtime="20201112 12:27:02.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.339" endtime="20201112 12:27:02.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.307" endtime="20201112 12:27:02.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.302" endtime="20201112 12:27:02.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.364" endtime="20201112 12:27:02.706"></status>
</kw>
<msg timestamp="20201112 12:27:02.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036125097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036125569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.361" endtime="20201112 12:27:02.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036125097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036125569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.716" endtime="20201112 12:27:02.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.735" endtime="20201112 12:27:02.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.352" endtime="20201112 12:27:02.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.347" endtime="20201112 12:27:02.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.752" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:02.749" endtime="20201112 12:27:02.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.763" level="INFO">VALUE: [{'time': 0.036125097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036125569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036134903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.036135375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036142375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.036142917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036150986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069000000006377e-06, 'source_diff': 8.069000000006377e-06}, {'time': 0.036151458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036157444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.036157917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036168625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708000000005102e-05, 'source_diff': 1.0708000000005102e-05}, {'time': 0.036169097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036177806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.036178278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036187403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.036187875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036193264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.036193736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036199833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.036200306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036209736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.036210208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036216319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.036216792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036221319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000004167e-06, 'source_diff': 4.527000000004167e-06}, {'time': 0.036221792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036232292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.036232764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036238542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.036239014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036249931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.036250403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036261333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0929999999999274e-05, 'source_diff': 1.0929999999999274e-05}, {'time': 0.036261806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036270694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999998564e-06, 'source_diff': 8.887999999998564e-06}, {'time': 0.036271167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036278431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.036278903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036289694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.079099999999611e-05, 'source_diff': 1.079099999999611e-05}, {'time': 0.036290167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03630025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.036300722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036307444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036307917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036313319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.401999999994633e-06, 'source_diff': 5.401999999994633e-06}, {'time': 0.036313861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036319861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036320333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036324639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.036325111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036331944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.036332417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036336847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036337319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036345847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.036346319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036354556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.237000000001216e-06, 'source_diff': 8.237000000001216e-06}, {'time': 0.036355097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036363681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.036364153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036374431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.036374903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036382583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.036383056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036389375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.036389847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036398125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.036398597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036408778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.03640925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036415875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036416347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036425472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.036425944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036434236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036434708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569999999993473e-06, 'source_diff': 9.569999999993473e-06}, {'time': 0.03644475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036451778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.03645225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036460778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.03646125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036470986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999996303e-06, 'source_diff': 9.735999999996303e-06}, {'time': 0.036471458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03648225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.036482722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036489708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.03649025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036496972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036497444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03650825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036508722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036518361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.036518833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036524833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036525306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036532653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.036533125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036543194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.036543667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:02.754" endtime="20201112 12:27:02.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.743" endtime="20201112 12:27:02.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:02.824" level="INFO">${debug-compressed} = {'time': [0.036125097, 0.036125569, 0.036134903, 0.036135375, 0.036142375, 0.036142917, 0.036150986, 0.036151458, 0.036157444, 0.036157917, 0.036168625, 0.036169097, 0.036177806, 0.036178278, 0.036187...</msg>
<status status="PASS" starttime="20201112 12:27:02.769" endtime="20201112 12:27:02.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.834" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:02.831" endtime="20201112 12:27:02.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.843" level="INFO">VALUE: {'time': [0.036125097, 0.036125569, 0.036134903, 0.036135375, 0.036142375, 0.036142917, 0.036150986, 0.036151458, 0.036157444, 0.036157917, 0.036168625, 0.036169097, 0.036177806, 0.036178278, 0.036187403, 0.036187875, 0.036193264, 0.036193736, 0.036199833, 0.036200306, 0.036209736, 0.036210208, 0.036216319, 0.036216792, 0.036221319, 0.036221792, 0.036232292, 0.036232764, 0.036238542, 0.036239014, 0.036249931, 0.036250403, 0.036261333, 0.036261806, 0.036270694, 0.036271167, 0.036278431, 0.036278903, 0.036289694, 0.036290167, 0.03630025, 0.036300722, 0.036307444, 0.036307917, 0.036313319, 0.036313861, 0.036319861, 0.036320333, 0.036324639, 0.036325111, 0.036331944, 0.036332417, 0.036336847, 0.036337319, 0.036345847, 0.036346319, 0.036354556, 0.036355097, 0.036363681, 0.036364153, 0.036374431, 0.036374903, 0.036382583, 0.036383056, 0.036389375, 0.036389847, 0.036398125, 0.036398597, 0.036408778, 0.03640925, 0.036415875, 0.036416347, 0.036425472, 0.036425944, 0.036434236, 0.036434708, 0.036444278, 0.03644475, 0.036451778, 0.03645225, 0.036460778, 0.03646125, 0.036470986, 0.036471458, 0.03648225, 0.036482722, 0.036489708, 0.03649025, 0.036496972, 0.036497444, 0.03650825, 0.036508722, 0.036518361, 0.036518833, 0.036524833, 0.036525306, 0.036532653, 0.036533125, 0.036543194, 0.036543667], 'eventsource_diff': [0, 4.720000000013602e-07, 9.333999999999731e-06, 4.7199999999442133e-07, 7.000000000000062e-06, 5.419999999992098e-07, 8.069000000006377e-06, 4.7199999999442133e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 6.110999999996147e-06, 4.7300000000083386e-07, 4.527000000004167e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.0929999999999274e-05, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 5.401999999994633e-06, 5.420000000061487e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 8.237000000001216e-06, 5.409999999997361e-07, 8.583999999998981e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 7.680000000002962e-06, 4.7299999999389497e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 6.625000000003156e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.569999999993473e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 6.986000000000492e-06, 5.419999999992098e-07, 6.722000000000672e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 9.333999999999731e-06, 4.7199999999442133e-07, 7.000000000000062e-06, 5.419999999992098e-07, 8.069000000006377e-06, 4.7199999999442133e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 6.110999999996147e-06, 4.7300000000083386e-07, 4.527000000004167e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.0929999999999274e-05, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 5.401999999994633e-06, 5.420000000061487e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 8.237000000001216e-06, 5.409999999997361e-07, 8.583999999998981e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 7.680000000002962e-06, 4.7299999999389497e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 6.625000000003156e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.569999999993473e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 6.986000000000492e-06, 5.419999999992098e-07, 6.722000000000672e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:02.836" endtime="20201112 12:27:02.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.826" endtime="20201112 12:27:02.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.858" level="INFO">${RESULT} = [{'time': 0.036125569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036135375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.849" endtime="20201112 12:27:02.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:02.889" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036125569, 0.036135375, 0.036142917, 0.036151458, 0.036157917, 0.036169097, 0.036178278, 0.036187875, 0.036193736, 0.036200306, 0.036210208, 0.036216792, 0.036221792, 0.036232764, 0.036239...</msg>
<status status="PASS" starttime="20201112 12:27:02.860" endtime="20201112 12:27:02.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.899" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:02.897" endtime="20201112 12:27:02.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.905" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:27:02.902" endtime="20201112 12:27:02.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.891" endtime="20201112 12:27:02.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.914" endtime="20201112 12:27:02.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.923" endtime="20201112 12:27:02.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.918" endtime="20201112 12:27:02.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.909" endtime="20201112 12:27:02.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.299" endtime="20201112 12:27:02.949"></status>
</kw>
<msg timestamp="20201112 12:27:02.950" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.969" endtime="20201112 12:27:02.980"></status>
</kw>
<msg timestamp="20201112 12:27:02.981" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.966" endtime="20201112 12:27:02.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.987" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.983" endtime="20201112 12:27:02.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.989" endtime="20201112 12:27:02.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.959" endtime="20201112 12:27:02.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.954" endtime="20201112 12:27:02.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.013" endtime="20201112 12:27:03.352"></status>
</kw>
<msg timestamp="20201112 12:27:03.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035867278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03586775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:03.010" endtime="20201112 12:27:03.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035867278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03586775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:03.362" endtime="20201112 12:27:03.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.381" endtime="20201112 12:27:03.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.002" endtime="20201112 12:27:03.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.998" endtime="20201112 12:27:03.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.397" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:03.395" endtime="20201112 12:27:03.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.409" level="INFO">VALUE: [{'time': 0.035867278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03586775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035873833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000003946e-06, 'source_diff': 6.083000000003946e-06}, {'time': 0.035874306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035882708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.035883181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035890125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.035890597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035895653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.035896125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0359015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.035901972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035908597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035909069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035916847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035917319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035928125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999995153e-05, 'source_diff': 1.0805999999995153e-05}, {'time': 0.035928597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035934181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.58400000000292e-06, 'source_diff': 5.58400000000292e-06}, {'time': 0.035934653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035945333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0680000000005963e-05, 'source_diff': 1.0680000000005963e-05}, {'time': 0.035945806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035954111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.035954583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035962806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.035963278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035971125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.035971597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035979903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.035980375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035987514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.035987986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03599575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035996222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036006306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.036006778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036015792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999994693e-06, 'source_diff': 9.013999999994693e-06}, {'time': 0.036016264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036024569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036025042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036035417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036035889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036042931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036043403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036048361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036048833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036059736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036060208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036065167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.036065639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036075708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.036076181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036083736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.036084208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036089167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.036089639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036094694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.036095167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036104944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777000000002478e-06, 'source_diff': 9.777000000002478e-06}, {'time': 0.036105417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036111944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.036112417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036121208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.036121681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036131861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036132333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036142931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.036143403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036153583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000005462e-05, 'source_diff': 1.0180000000005462e-05}, {'time': 0.036154056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036158486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036158958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036165514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.55600000000478e-06, 'source_diff': 6.55600000000478e-06}, {'time': 0.036166056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036174347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.036174819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036181597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7780000000058904e-06, 'source_diff': 6.7780000000058904e-06}, {'time': 0.036182139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036190125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999994553e-06, 'source_diff': 7.985999999994553e-06}, {'time': 0.036190597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03620025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000005296e-06, 'source_diff': 9.653000000005296e-06}, {'time': 0.036200722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036210986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0264000000002882e-05, 'source_diff': 1.0264000000002882e-05}, {'time': 0.036211458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036222042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0584000000000982e-05, 'source_diff': 1.0584000000000982e-05}, {'time': 0.036222514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036228417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.036228889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036234681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.036235153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036243458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036243931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036252431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036252903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036257444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.036257917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036265569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.651999999996884e-06, 'source_diff': 7.651999999996884e-06}, {'time': 0.036266042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036275389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036275861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:03.400" endtime="20201112 12:27:03.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.389" endtime="20201112 12:27:03.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:03.472" level="INFO">${debug-compressed} = {'time': [0.035867278, 0.03586775, 0.035873833, 0.035874306, 0.035882708, 0.035883181, 0.035890125, 0.035890597, 0.035895653, 0.035896125, 0.0359015, 0.035901972, 0.035908597, 0.035909069, 0.035916847...</msg>
<status status="PASS" starttime="20201112 12:27:03.415" endtime="20201112 12:27:03.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.482" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:03.480" endtime="20201112 12:27:03.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.492" level="INFO">VALUE: {'time': [0.035867278, 0.03586775, 0.035873833, 0.035874306, 0.035882708, 0.035883181, 0.035890125, 0.035890597, 0.035895653, 0.035896125, 0.0359015, 0.035901972, 0.035908597, 0.035909069, 0.035916847, 0.035917319, 0.035928125, 0.035928597, 0.035934181, 0.035934653, 0.035945333, 0.035945806, 0.035954111, 0.035954583, 0.035962806, 0.035963278, 0.035971125, 0.035971597, 0.035979903, 0.035980375, 0.035987514, 0.035987986, 0.03599575, 0.035996222, 0.036006306, 0.036006778, 0.036015792, 0.036016264, 0.036024569, 0.036025042, 0.036035417, 0.036035889, 0.036042931, 0.036043403, 0.036048361, 0.036048833, 0.036059736, 0.036060208, 0.036065167, 0.036065639, 0.036075708, 0.036076181, 0.036083736, 0.036084208, 0.036089167, 0.036089639, 0.036094694, 0.036095167, 0.036104944, 0.036105417, 0.036111944, 0.036112417, 0.036121208, 0.036121681, 0.036131861, 0.036132333, 0.036142931, 0.036143403, 0.036153583, 0.036154056, 0.036158486, 0.036158958, 0.036165514, 0.036166056, 0.036174347, 0.036174819, 0.036181597, 0.036182139, 0.036190125, 0.036190597, 0.03620025, 0.036200722, 0.036210986, 0.036211458, 0.036222042, 0.036222514, 0.036228417, 0.036228889, 0.036234681, 0.036235153, 0.036243458, 0.036243931, 0.036252431, 0.036252903, 0.036257444, 0.036257917, 0.036265569, 0.036266042, 0.036275389, 0.036275861], 'eventsource_diff': [0, 4.7199999999442133e-07, 6.083000000003946e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 6.944000000001782e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 5.58400000000292e-06, 4.7199999999442133e-07, 1.0680000000005963e-05, 4.7299999999389497e-07, 8.305000000000118e-06, 4.720000000013602e-07, 8.223000000001646e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 4.9589999999988255e-06, 4.7199999999442133e-07, 1.0069000000001438e-05, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 9.777000000002478e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.791000000001048e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 1.0598000000000551e-05, 4.7199999999442133e-07, 1.0180000000005462e-05, 4.7299999999389497e-07, 4.429999999999712e-06, 4.720000000013602e-07, 6.55600000000478e-06, 5.419999999992098e-07, 8.291000000000548e-06, 4.7199999999442133e-07, 6.7780000000058904e-06, 5.419999999992098e-07, 7.985999999994553e-06, 4.720000000013602e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 1.0264000000002882e-05, 4.720000000013602e-07, 1.0584000000000982e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 7.651999999996884e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07], 'diff': [0, 4.7199999999442133e-07, 6.083000000003946e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 6.944000000001782e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 5.58400000000292e-06, 4.7199999999442133e-07, 1.0680000000005963e-05, 4.7299999999389497e-07, 8.305000000000118e-06, 4.720000000013602e-07, 8.223000000001646e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 4.9589999999988255e-06, 4.7199999999442133e-07, 1.0069000000001438e-05, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 9.777000000002478e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.791000000001048e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 1.0598000000000551e-05, 4.7199999999442133e-07, 1.0180000000005462e-05, 4.7299999999389497e-07, 4.429999999999712e-06, 4.720000000013602e-07, 6.55600000000478e-06, 5.419999999992098e-07, 8.291000000000548e-06, 4.7199999999442133e-07, 6.7780000000058904e-06, 5.419999999992098e-07, 7.985999999994553e-06, 4.720000000013602e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 1.0264000000002882e-05, 4.720000000013602e-07, 1.0584000000000982e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 7.651999999996884e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:03.484" endtime="20201112 12:27:03.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.474" endtime="20201112 12:27:03.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.506" level="INFO">${RESULT} = [{'time': 0.03586775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035874306, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:03.497" endtime="20201112 12:27:03.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:03.538" level="INFO">${GPIO_OVERHEAD} = {'time': [0.03586775, 0.035874306, 0.035883181, 0.035890597, 0.035896125, 0.035901972, 0.035909069, 0.035917319, 0.035928597, 0.035934653, 0.035945806, 0.035954583, 0.035963278, 0.035971597, 0.0359803...</msg>
<status status="PASS" starttime="20201112 12:27:03.509" endtime="20201112 12:27:03.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.548" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:03.546" endtime="20201112 12:27:03.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.554" level="INFO">VALUE: [4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:27:03.550" endtime="20201112 12:27:03.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.540" endtime="20201112 12:27:03.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.562" endtime="20201112 12:27:03.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.571" endtime="20201112 12:27:03.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.566" endtime="20201112 12:27:03.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.558" endtime="20201112 12:27:03.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.951" endtime="20201112 12:27:03.596"></status>
</kw>
<msg timestamp="20201112 12:27:03.597" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.616" endtime="20201112 12:27:03.627"></status>
</kw>
<msg timestamp="20201112 12:27:03.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.613" endtime="20201112 12:27:03.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.634" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.630" endtime="20201112 12:27:03.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.637" endtime="20201112 12:27:03.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.606" endtime="20201112 12:27:03.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.601" endtime="20201112 12:27:03.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.660" endtime="20201112 12:27:03.997"></status>
</kw>
<msg timestamp="20201112 12:27:04.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036082764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036083306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.657" endtime="20201112 12:27:04.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036082764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036083306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.007" endtime="20201112 12:27:04.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.026" endtime="20201112 12:27:04.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.649" endtime="20201112 12:27:04.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.645" endtime="20201112 12:27:04.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.044" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:04.041" endtime="20201112 12:27:04.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.055" level="INFO">VALUE: [{'time': 0.036082764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036083306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036087917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999994647e-06, 'source_diff': 4.610999999994647e-06}, {'time': 0.036088389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036096167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036096639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036106389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.036106861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036116306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.036116778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036124, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.036124542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036133097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.036133569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036141417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000474e-06, 'source_diff': 7.84800000000474e-06}, {'time': 0.036141958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036150333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.036150806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036161389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.036161861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036167861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0000000000060005e-06, 'source_diff': 6.0000000000060005e-06}, {'time': 0.036168333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036176208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.036176681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036181847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.036182319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036188319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036188792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03619625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.036196722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036202028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305999999996591e-06, 'source_diff': 5.305999999996591e-06}, {'time': 0.036202569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036206889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.036207361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036213375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.036213847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03622025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.036220722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036227347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036227819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036234653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.036235125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036242375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036242847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036248944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.036249417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036260222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.036260694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.036265472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036273458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036273931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036284361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.036284903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036293278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.03629375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036303264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.036303806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036310833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.036311306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036317611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.036318083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036323028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.0363235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036333889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036334361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036340556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.036341028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036349542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036350014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036358, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036358472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036366028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.0363665, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036373542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036374014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036383056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999993833e-06, 'source_diff': 9.041999999993833e-06}, {'time': 0.036383528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036392333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.036392806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036399542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036400014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036406639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.036407111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036414264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.036414736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036420306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999996411e-06, 'source_diff': 5.569999999996411e-06}, {'time': 0.036420778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036431278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.03643175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036440472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.036440944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036451014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069999999993973e-05, 'source_diff': 1.0069999999993973e-05}, {'time': 0.036451486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036458528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036459, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036465514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.036465986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036474931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.036475403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:04.046" endtime="20201112 12:27:04.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.035" endtime="20201112 12:27:04.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:04.116" level="INFO">${debug-compressed} = {'time': [0.036082764, 0.036083306, 0.036087917, 0.036088389, 0.036096167, 0.036096639, 0.036106389, 0.036106861, 0.036116306, 0.036116778, 0.036124, 0.036124542, 0.036133097, 0.036133569, 0.036141417...</msg>
<status status="PASS" starttime="20201112 12:27:04.062" endtime="20201112 12:27:04.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.126" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:04.124" endtime="20201112 12:27:04.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.135" level="INFO">VALUE: {'time': [0.036082764, 0.036083306, 0.036087917, 0.036088389, 0.036096167, 0.036096639, 0.036106389, 0.036106861, 0.036116306, 0.036116778, 0.036124, 0.036124542, 0.036133097, 0.036133569, 0.036141417, 0.036141958, 0.036150333, 0.036150806, 0.036161389, 0.036161861, 0.036167861, 0.036168333, 0.036176208, 0.036176681, 0.036181847, 0.036182319, 0.036188319, 0.036188792, 0.03619625, 0.036196722, 0.036202028, 0.036202569, 0.036206889, 0.036207361, 0.036213375, 0.036213847, 0.03622025, 0.036220722, 0.036227347, 0.036227819, 0.036234653, 0.036235125, 0.036242375, 0.036242847, 0.036248944, 0.036249417, 0.036260222, 0.036260694, 0.036265, 0.036265472, 0.036273458, 0.036273931, 0.036284361, 0.036284903, 0.036293278, 0.03629375, 0.036303264, 0.036303806, 0.036310833, 0.036311306, 0.036317611, 0.036318083, 0.036323028, 0.0363235, 0.036333889, 0.036334361, 0.036340556, 0.036341028, 0.036349542, 0.036350014, 0.036358, 0.036358472, 0.036366028, 0.0363665, 0.036373542, 0.036374014, 0.036383056, 0.036383528, 0.036392333, 0.036392806, 0.036399542, 0.036400014, 0.036406639, 0.036407111, 0.036414264, 0.036414736, 0.036420306, 0.036420778, 0.036431278, 0.03643175, 0.036440472, 0.036440944, 0.036451014, 0.036451486, 0.036458528, 0.036459, 0.036465514, 0.036465986, 0.036474931, 0.036475403], 'eventsource_diff': [0, 5.419999999992098e-07, 4.610999999994647e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 7.222000000001172e-06, 5.419999999992098e-07, 8.555000000000368e-06, 4.7199999999442133e-07, 7.84800000000474e-06, 5.409999999997361e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.7199999999442133e-07, 6.0000000000060005e-06, 4.7199999999442133e-07, 7.875000000004406e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.7199999999442133e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.720000000013602e-07, 5.305999999996591e-06, 5.409999999997361e-07, 4.3200000000021e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 1.0429999999998774e-05, 5.419999999992098e-07, 8.374999999997967e-06, 4.720000000013602e-07, 9.514000000002132e-06, 5.419999999992098e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 6.195000000000506e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 5.569999999996411e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0069999999993973e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.720000000013602e-07], 'diff': [0, 5.419999999992098e-07, 4.610999999994647e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 7.222000000001172e-06, 5.419999999992098e-07, 8.555000000000368e-06, 4.7199999999442133e-07, 7.84800000000474e-06, 5.409999999997361e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.7199999999442133e-07, 6.0000000000060005e-06, 4.7199999999442133e-07, 7.875000000004406e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.7199999999442133e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.720000000013602e-07, 5.305999999996591e-06, 5.409999999997361e-07, 4.3200000000021e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 1.0429999999998774e-05, 5.419999999992098e-07, 8.374999999997967e-06, 4.720000000013602e-07, 9.514000000002132e-06, 5.419999999992098e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 6.195000000000506e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 5.569999999996411e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0069999999993973e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:04.128" endtime="20201112 12:27:04.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.118" endtime="20201112 12:27:04.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.149" level="INFO">${RESULT} = [{'time': 0.036083306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036088389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.140" endtime="20201112 12:27:04.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:04.180" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036083306, 0.036088389, 0.036096639, 0.036106861, 0.036116778, 0.036124542, 0.036133569, 0.036141958, 0.036150806, 0.036161861, 0.036168333, 0.036176681, 0.036182319, 0.036188792, 0.036196...</msg>
<status status="PASS" starttime="20201112 12:27:04.151" endtime="20201112 12:27:04.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.191" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:04.189" endtime="20201112 12:27:04.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.196" level="INFO">VALUE: [5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:27:04.193" endtime="20201112 12:27:04.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.182" endtime="20201112 12:27:04.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.205" endtime="20201112 12:27:04.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.214" endtime="20201112 12:27:04.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.209" endtime="20201112 12:27:04.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.201" endtime="20201112 12:27:04.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.598" endtime="20201112 12:27:04.239"></status>
</kw>
<msg timestamp="20201112 12:27:04.240" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.261" endtime="20201112 12:27:04.271"></status>
</kw>
<msg timestamp="20201112 12:27:04.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.257" endtime="20201112 12:27:04.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.275" endtime="20201112 12:27:04.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.281" endtime="20201112 12:27:04.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.249" endtime="20201112 12:27:04.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.244" endtime="20201112 12:27:04.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.304" endtime="20201112 12:27:04.640"></status>
</kw>
<msg timestamp="20201112 12:27:04.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037474056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037474528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.301" endtime="20201112 12:27:04.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037474056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037474528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.650" endtime="20201112 12:27:04.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.669" endtime="20201112 12:27:04.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.294" endtime="20201112 12:27:04.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.289" endtime="20201112 12:27:04.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.685" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:04.683" endtime="20201112 12:27:04.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.697" level="INFO">VALUE: [{'time': 0.037474056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037474528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037481764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.037482236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037492944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.037493417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037500986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.037501458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037508806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347999999997301e-06, 'source_diff': 7.347999999997301e-06}, {'time': 0.037509278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037518625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037519097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037524625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.037525167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037533875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.037534347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037540986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.037541458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037546389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.037546861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037553917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.037554389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03756425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.037564722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037573222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.037573694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037580722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.037581194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037588042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.84800000000374e-06, 'source_diff': 6.84800000000374e-06}, {'time': 0.037588514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037595444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999995273e-06, 'source_diff': 6.929999999995273e-06}, {'time': 0.037595917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037606306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037606778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037614042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.037614514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037625208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.037625681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037633667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.037634139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.037643333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.037653875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037659139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037659611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037666139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.037666611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037676889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.037677361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037683472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.037683944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037688472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.037688944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037697569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.037698042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037706639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037707111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037714694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.037715167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037723444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277000000000978e-06, 'source_diff': 8.277000000000978e-06}, {'time': 0.037723917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037730333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.415999999995203e-06, 'source_diff': 6.415999999995203e-06}, {'time': 0.037730806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037739931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.037740403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037746722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.037747194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037751847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.037752319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037761014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.037761486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037770611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000005656e-06, 'source_diff': 9.125000000005656e-06}, {'time': 0.037771083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037779806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.723000000002146e-06, 'source_diff': 8.723000000002146e-06}, {'time': 0.037780278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037788361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.037788833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037795778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.03779625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037801736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.037802208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037806847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037807319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037816764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.037817236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037825431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.037825903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037831903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.037832375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037838806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.037839278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037844556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.037845028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037855625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0596999999994139e-05, 'source_diff': 1.0596999999994139e-05}, {'time': 0.037856097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037865153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.037865694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037871028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.33400000000267e-06, 'source_diff': 5.33400000000267e-06}, {'time': 0.037871569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:04.688" endtime="20201112 12:27:04.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.677" endtime="20201112 12:27:04.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:04.759" level="INFO">${debug-compressed} = {'time': [0.037474056, 0.037474528, 0.037481764, 0.037482236, 0.037492944, 0.037493417, 0.037500986, 0.037501458, 0.037508806, 0.037509278, 0.037518625, 0.037519097, 0.037524625, 0.037525167, 0.037533...</msg>
<status status="PASS" starttime="20201112 12:27:04.703" endtime="20201112 12:27:04.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.768" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:04.766" endtime="20201112 12:27:04.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.778" level="INFO">VALUE: {'time': [0.037474056, 0.037474528, 0.037481764, 0.037482236, 0.037492944, 0.037493417, 0.037500986, 0.037501458, 0.037508806, 0.037509278, 0.037518625, 0.037519097, 0.037524625, 0.037525167, 0.037533875, 0.037534347, 0.037540986, 0.037541458, 0.037546389, 0.037546861, 0.037553917, 0.037554389, 0.03756425, 0.037564722, 0.037573222, 0.037573694, 0.037580722, 0.037581194, 0.037588042, 0.037588514, 0.037595444, 0.037595917, 0.037606306, 0.037606778, 0.037614042, 0.037614514, 0.037625208, 0.037625681, 0.037633667, 0.037634139, 0.037642861, 0.037643333, 0.037653403, 0.037653875, 0.037659139, 0.037659611, 0.037666139, 0.037666611, 0.037676889, 0.037677361, 0.037683472, 0.037683944, 0.037688472, 0.037688944, 0.037697569, 0.037698042, 0.037706639, 0.037707111, 0.037714694, 0.037715167, 0.037723444, 0.037723917, 0.037730333, 0.037730806, 0.037739931, 0.037740403, 0.037746722, 0.037747194, 0.037751847, 0.037752319, 0.037761014, 0.037761486, 0.037770611, 0.037771083, 0.037779806, 0.037780278, 0.037788361, 0.037788833, 0.037795778, 0.03779625, 0.037801736, 0.037802208, 0.037806847, 0.037807319, 0.037816764, 0.037817236, 0.037825431, 0.037825903, 0.037831903, 0.037832375, 0.037838806, 0.037839278, 0.037844556, 0.037845028, 0.037855625, 0.037856097, 0.037865153, 0.037865694, 0.037871028, 0.037871569], 'eventsource_diff': [0, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.347999999997301e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 5.527999999997701e-06, 5.419999999992098e-07, 8.708000000003102e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 6.84800000000374e-06, 4.720000000013602e-07, 6.929999999995273e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.52800000000364e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.7300000000083386e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 8.277000000000978e-06, 4.7300000000083386e-07, 6.415999999995203e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.3190000000046265e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 8.723000000002146e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 1.0596999999994139e-05, 4.720000000013602e-07, 9.056000000000342e-06, 5.409999999997361e-07, 5.33400000000267e-06, 5.409999999997361e-07], 'diff': [0, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.347999999997301e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 5.527999999997701e-06, 5.419999999992098e-07, 8.708000000003102e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 6.84800000000374e-06, 4.720000000013602e-07, 6.929999999995273e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.52800000000364e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.7300000000083386e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 8.277000000000978e-06, 4.7300000000083386e-07, 6.415999999995203e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.3190000000046265e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 8.723000000002146e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 1.0596999999994139e-05, 4.720000000013602e-07, 9.056000000000342e-06, 5.409999999997361e-07, 5.33400000000267e-06, 5.409999999997361e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:04.771" endtime="20201112 12:27:04.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.761" endtime="20201112 12:27:04.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.792" level="INFO">${RESULT} = [{'time': 0.037474528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037482236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.783" endtime="20201112 12:27:04.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:04.824" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037474528, 0.037482236, 0.037493417, 0.037501458, 0.037509278, 0.037519097, 0.037525167, 0.037534347, 0.037541458, 0.037546861, 0.037554389, 0.037564722, 0.037573694, 0.037581194, 0.037588...</msg>
<status status="PASS" starttime="20201112 12:27:04.794" endtime="20201112 12:27:04.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.834" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:04.832" endtime="20201112 12:27:04.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.840" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 12:27:04.837" endtime="20201112 12:27:04.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.826" endtime="20201112 12:27:04.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.849" endtime="20201112 12:27:04.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.857" endtime="20201112 12:27:04.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.853" endtime="20201112 12:27:04.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.844" endtime="20201112 12:27:04.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.241" endtime="20201112 12:27:04.883"></status>
</kw>
<msg timestamp="20201112 12:27:04.883" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.903" endtime="20201112 12:27:04.913"></status>
</kw>
<msg timestamp="20201112 12:27:04.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.900" endtime="20201112 12:27:04.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.921" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.917" endtime="20201112 12:27:04.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.923" endtime="20201112 12:27:04.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.893" endtime="20201112 12:27:04.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.888" endtime="20201112 12:27:04.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.946" endtime="20201112 12:27:05.284"></status>
</kw>
<msg timestamp="20201112 12:27:05.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035800125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035800597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.943" endtime="20201112 12:27:05.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035800125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035800597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.294" endtime="20201112 12:27:05.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.313" endtime="20201112 12:27:05.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.936" endtime="20201112 12:27:05.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.931" endtime="20201112 12:27:05.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.330" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:05.327" endtime="20201112 12:27:05.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.341" level="INFO">VALUE: [{'time': 0.035800125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035800597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035807306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708999999993637e-06, 'source_diff': 6.708999999993637e-06}, {'time': 0.035807778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035815708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.03581625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035826014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.035826486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035833722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.035834194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035844583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.035845056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035852639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.035853111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035860764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.035861236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035866694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.035867167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035874444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.035874917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035883403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.035883875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035889667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.035890139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035897708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.035898181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035905931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.035906403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035912292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.035912764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035921056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.035921528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035926264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.035926736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035934194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.035934667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035944444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.77699999999554e-06, 'source_diff': 9.77699999999554e-06}, {'time': 0.035944917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035954347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.035954819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035963736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.035964208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035971764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.55600000000578e-06, 'source_diff': 7.55600000000578e-06}, {'time': 0.035972236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035982222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.035982694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035990139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444999999994817e-06, 'source_diff': 7.444999999994817e-06}, {'time': 0.035990611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035996611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035997083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036003722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.036004194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036009986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.036010458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036019472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999994693e-06, 'source_diff': 9.013999999994693e-06}, {'time': 0.036019944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036026792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.84800000000374e-06, 'source_diff': 6.84800000000374e-06}, {'time': 0.036027264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036032736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036033208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036037639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4310000000061245e-06, 'source_diff': 4.4310000000061245e-06}, {'time': 0.036038111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03604725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.036047722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036055375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.036055847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036065597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.036066069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036075208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.036075681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036083236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.036083708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036088347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036088819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036095861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036096333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036107306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0972999999997457e-05, 'source_diff': 1.0972999999997457e-05}, {'time': 0.036107847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036113708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.036114181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036118847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.036119319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036123611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.036124083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036131125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036131597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036140625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.036141097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036149097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036149569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036153972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.036154444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036159097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.036159569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036169319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.036169792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036175097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3050000000040565e-06, 'source_diff': 5.3050000000040565e-06}, {'time': 0.036175639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036184972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036185444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:05.332" endtime="20201112 12:27:05.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.321" endtime="20201112 12:27:05.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:05.404" level="INFO">${debug-compressed} = {'time': [0.035800125, 0.035800597, 0.035807306, 0.035807778, 0.035815708, 0.03581625, 0.035826014, 0.035826486, 0.035833722, 0.035834194, 0.035844583, 0.035845056, 0.035852639, 0.035853111, 0.0358607...</msg>
<status status="PASS" starttime="20201112 12:27:05.347" endtime="20201112 12:27:05.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.413" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:05.411" endtime="20201112 12:27:05.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.422" level="INFO">VALUE: {'time': [0.035800125, 0.035800597, 0.035807306, 0.035807778, 0.035815708, 0.03581625, 0.035826014, 0.035826486, 0.035833722, 0.035834194, 0.035844583, 0.035845056, 0.035852639, 0.035853111, 0.035860764, 0.035861236, 0.035866694, 0.035867167, 0.035874444, 0.035874917, 0.035883403, 0.035883875, 0.035889667, 0.035890139, 0.035897708, 0.035898181, 0.035905931, 0.035906403, 0.035912292, 0.035912764, 0.035921056, 0.035921528, 0.035926264, 0.035926736, 0.035934194, 0.035934667, 0.035944444, 0.035944917, 0.035954347, 0.035954819, 0.035963736, 0.035964208, 0.035971764, 0.035972236, 0.035982222, 0.035982694, 0.035990139, 0.035990611, 0.035996611, 0.035997083, 0.036003722, 0.036004194, 0.036009986, 0.036010458, 0.036019472, 0.036019944, 0.036026792, 0.036027264, 0.036032736, 0.036033208, 0.036037639, 0.036038111, 0.03604725, 0.036047722, 0.036055375, 0.036055847, 0.036065597, 0.036066069, 0.036075208, 0.036075681, 0.036083236, 0.036083708, 0.036088347, 0.036088819, 0.036095861, 0.036096333, 0.036107306, 0.036107847, 0.036113708, 0.036114181, 0.036118847, 0.036119319, 0.036123611, 0.036124083, 0.036131125, 0.036131597, 0.036140625, 0.036141097, 0.036149097, 0.036149569, 0.036153972, 0.036154444, 0.036159097, 0.036159569, 0.036169319, 0.036169792, 0.036175097, 0.036175639, 0.036184972, 0.036185444], 'eventsource_diff': [0, 4.720000000013602e-07, 6.708999999993637e-06, 4.720000000013602e-07, 7.930000000003212e-06, 5.419999999992098e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 7.653000000003296e-06, 4.7199999999442133e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 7.276999999999978e-06, 4.7300000000083386e-07, 8.486000000001992e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 7.750000000000812e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 9.77699999999554e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 7.55600000000578e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.720000000013602e-07, 7.444999999994817e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 6.84800000000374e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7199999999442133e-07, 4.4310000000061245e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 7.653000000003296e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0972999999997457e-05, 5.409999999997361e-07, 5.861000000002836e-06, 4.7300000000083386e-07, 4.666000000000392e-06, 4.7199999999442133e-07, 4.29200000000296e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.7300000000083386e-07, 5.3050000000040565e-06, 5.419999999992098e-07, 9.333000000000258e-06, 4.7199999999442133e-07], 'diff': [0, 4.720000000013602e-07, 6.708999999993637e-06, 4.720000000013602e-07, 7.930000000003212e-06, 5.419999999992098e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 7.653000000003296e-06, 4.7199999999442133e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 7.276999999999978e-06, 4.7300000000083386e-07, 8.486000000001992e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 7.750000000000812e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 9.77699999999554e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 7.55600000000578e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.720000000013602e-07, 7.444999999994817e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 6.84800000000374e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7199999999442133e-07, 4.4310000000061245e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 7.653000000003296e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0972999999997457e-05, 5.409999999997361e-07, 5.861000000002836e-06, 4.7300000000083386e-07, 4.666000000000392e-06, 4.7199999999442133e-07, 4.29200000000296e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.7300000000083386e-07, 5.3050000000040565e-06, 5.419999999992098e-07, 9.333000000000258e-06, 4.7199999999442133e-07], 'source}</msg>
<status status="PASS" starttime="20201112 12:27:05.415" endtime="20201112 12:27:05.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.405" endtime="20201112 12:27:05.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.436" level="INFO">${RESULT} = [{'time': 0.035800597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035807778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:05.428" endtime="20201112 12:27:05.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:05.468" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035800597, 0.035807778, 0.03581625, 0.035826486, 0.035834194, 0.035845056, 0.035853111, 0.035861236, 0.035867167, 0.035874917, 0.035883875, 0.035890139, 0.035898181, 0.035906403, 0.0359127...</msg>
<status status="PASS" starttime="20201112 12:27:05.439" endtime="20201112 12:27:05.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.479" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:05.476" endtime="20201112 12:27:05.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.484" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 12:27:05.481" endtime="20201112 12:27:05.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.470" endtime="20201112 12:27:05.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.493" endtime="20201112 12:27:05.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.501" endtime="20201112 12:27:05.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.497" endtime="20201112 12:27:05.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.488" endtime="20201112 12:27:05.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.885" endtime="20201112 12:27:05.526"></status>
</kw>
<msg timestamp="20201112 12:27:05.527" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.547" endtime="20201112 12:27:05.558"></status>
</kw>
<msg timestamp="20201112 12:27:05.559" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.544" endtime="20201112 12:27:05.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.566" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.562" endtime="20201112 12:27:05.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.568" endtime="20201112 12:27:05.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.536" endtime="20201112 12:27:05.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.532" endtime="20201112 12:27:05.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.594" endtime="20201112 12:27:05.932"></status>
</kw>
<msg timestamp="20201112 12:27:05.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036701792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036702264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.590" endtime="20201112 12:27:05.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036701792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036702264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.941" endtime="20201112 12:27:05.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.961" endtime="20201112 12:27:05.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.582" endtime="20201112 12:27:05.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.577" endtime="20201112 12:27:05.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.977" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:05.975" endtime="20201112 12:27:05.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.988" level="INFO">VALUE: [{'time': 0.036701792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036702264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036712972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708000000005102e-05, 'source_diff': 1.0708000000005102e-05}, {'time': 0.036713444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036722361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.036722833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036733736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036734208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036742083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.036742556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036750028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.471999999994483e-06, 'source_diff': 7.471999999994483e-06}, {'time': 0.0367505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036761292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.036761764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036769764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036770236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036776125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.036776597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036781139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.036781611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036789069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.036789542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036797222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999996023e-06, 'source_diff': 7.679999999996023e-06}, {'time': 0.036797694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036803167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.036803639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03681225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.036812722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036822556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.036823097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036827917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.036828389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036837014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.036837486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036844403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916999999995177e-06, 'source_diff': 6.916999999995177e-06}, {'time': 0.036844875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036855069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.036855542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036866333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791000000003048e-05, 'source_diff': 1.0791000000003048e-05}, {'time': 0.036866806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036877708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000000134e-05, 'source_diff': 1.0902000000000134e-05}, {'time': 0.036878181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036888986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.080499999999568e-05, 'source_diff': 1.080499999999568e-05}, {'time': 0.036889458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036899208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.036899681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036906944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.036907417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036914667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036915139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036925097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.036925569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036935014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.036935486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036944417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.036944889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036954861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.036955333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036963111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036963583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036970208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.036970681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036977, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.036977472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036986278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.03698675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036994333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.036994806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037002583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.037003056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037007347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}, {'time': 0.037007819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037012361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.037012833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037017583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.037018056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037023514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.037023986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037034403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.037034875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037041472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.037041944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037046375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.037046847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037056819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.037057292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037065389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037065861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037070278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.03707075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037075056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.037075528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037085806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.037086278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037096139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.037096611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037104181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.037104653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037111486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037111958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:05.979" endtime="20201112 12:27:05.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.969" endtime="20201112 12:27:05.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:06.049" level="INFO">${debug-compressed} = {'time': [0.036701792, 0.036702264, 0.036712972, 0.036713444, 0.036722361, 0.036722833, 0.036733736, 0.036734208, 0.036742083, 0.036742556, 0.036750028, 0.0367505, 0.036761292, 0.036761764, 0.03676976...</msg>
<status status="PASS" starttime="20201112 12:27:05.994" endtime="20201112 12:27:06.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.059" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:06.056" endtime="20201112 12:27:06.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.068" level="INFO">VALUE: {'time': [0.036701792, 0.036702264, 0.036712972, 0.036713444, 0.036722361, 0.036722833, 0.036733736, 0.036734208, 0.036742083, 0.036742556, 0.036750028, 0.0367505, 0.036761292, 0.036761764, 0.036769764, 0.036770236, 0.036776125, 0.036776597, 0.036781139, 0.036781611, 0.036789069, 0.036789542, 0.036797222, 0.036797694, 0.036803167, 0.036803639, 0.03681225, 0.036812722, 0.036822556, 0.036823097, 0.036827917, 0.036828389, 0.036837014, 0.036837486, 0.036844403, 0.036844875, 0.036855069, 0.036855542, 0.036866333, 0.036866806, 0.036877708, 0.036878181, 0.036888986, 0.036889458, 0.036899208, 0.036899681, 0.036906944, 0.036907417, 0.036914667, 0.036915139, 0.036925097, 0.036925569, 0.036935014, 0.036935486, 0.036944417, 0.036944889, 0.036954861, 0.036955333, 0.036963111, 0.036963583, 0.036970208, 0.036970681, 0.036977, 0.036977472, 0.036986278, 0.03698675, 0.036994333, 0.036994806, 0.037002583, 0.037003056, 0.037007347, 0.037007819, 0.037012361, 0.037012833, 0.037017583, 0.037018056, 0.037023514, 0.037023986, 0.037034403, 0.037034875, 0.037041472, 0.037041944, 0.037046375, 0.037046847, 0.037056819, 0.037057292, 0.037065389, 0.037065861, 0.037070278, 0.03707075, 0.037075056, 0.037075528, 0.037085806, 0.037086278, 0.037096139, 0.037096611, 0.037104181, 0.037104653, 0.037111486, 0.037111958], 'eventsource_diff': [0, 4.720000000013602e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 7.875000000004406e-06, 4.7300000000083386e-07, 7.471999999994483e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 5.889000000001976e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 7.679999999996023e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 9.834000000000231e-06, 5.409999999997361e-07, 4.8200000000026e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 6.916999999995177e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 1.080499999999568e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.7299999999389497e-07, 7.263000000000408e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 8.931000000003686e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 4.2910000000034865e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 6.5969999999970774e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 7.875000000004406e-06, 4.7300000000083386e-07, 7.471999999994483e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 5.889000000001976e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 7.679999999996023e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 9.834000000000231e-06, 5.409999999997361e-07, 4.8200000000026e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 6.916999999995177e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 1.080499999999568e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.7299999999389497e-07, 7.263000000000408e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 8.931000000003686e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 4.2910000000034865e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 6.5969999999970774e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 12:27:06.061" endtime="20201112 12:27:06.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.051" endtime="20201112 12:27:06.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.082" level="INFO">${RESULT} = [{'time': 0.036702264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036713444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.073" endtime="20201112 12:27:06.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:06.114" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036702264, 0.036713444, 0.036722833, 0.036734208, 0.036742556, 0.0367505, 0.036761764, 0.036770236, 0.036776597, 0.036781611, 0.036789542, 0.036797694, 0.036803639, 0.036812722, 0.03682309...</msg>
<status status="PASS" starttime="20201112 12:27:06.085" endtime="20201112 12:27:06.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.124" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:06.122" endtime="20201112 12:27:06.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.129" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:27:06.126" endtime="20201112 12:27:06.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.115" endtime="20201112 12:27:06.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.138" endtime="20201112 12:27:06.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.148" endtime="20201112 12:27:06.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.142" endtime="20201112 12:27:06.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.133" endtime="20201112 12:27:06.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.528" endtime="20201112 12:27:06.173"></status>
</kw>
<msg timestamp="20201112 12:27:06.174" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.193" endtime="20201112 12:27:06.204"></status>
</kw>
<msg timestamp="20201112 12:27:06.205" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.190" endtime="20201112 12:27:06.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.211" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.207" endtime="20201112 12:27:06.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.214" endtime="20201112 12:27:06.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.183" endtime="20201112 12:27:06.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.178" endtime="20201112 12:27:06.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.237" endtime="20201112 12:27:06.578"></status>
</kw>
<msg timestamp="20201112 12:27:06.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0358655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035865972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:06.233" endtime="20201112 12:27:06.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0358655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035865972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:06.588" endtime="20201112 12:27:06.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.607" endtime="20201112 12:27:06.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.226" endtime="20201112 12:27:06.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.222" endtime="20201112 12:27:06.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.624" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:27:06.621" endtime="20201112 12:27:06.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.635" level="INFO">VALUE: [{'time': 0.0358655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035865972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035874472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.035874944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035885125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.035885597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035894569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.035895111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035902569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.035903042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.035909625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035919931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.035920472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035931069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.035931542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035937222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.035937694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03594225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.035942722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035948194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035948667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035959056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0389000000006476e-05, 'source_diff': 1.0389000000006476e-05}, {'time': 0.035959528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035965722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.035966194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035975875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.035976347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035983486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.035983958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035989847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.035990319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035995792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.035996264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036000694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036001167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036008097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.036008569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036016042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.036016514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036022944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.036023417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036034208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.079099999999611e-05, 'source_diff': 1.079099999999611e-05}, {'time': 0.036034681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036038986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.036039458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036047958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.036048431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036052861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036053333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036063514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.036063986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036068833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.036069306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036078458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.036078931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036084778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.036085319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036089833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.51400000000407e-06, 'source_diff': 4.51400000000407e-06}, {'time': 0.036090306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036100681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036101153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036106028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.0361065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036113944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.036114417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036123028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.0361235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036128347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.036128819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036133667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.036134139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036143903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.036144375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036149153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.036149625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036157889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.036158361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036168653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036169125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036175222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.036175694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036183583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.036184056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036191403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.036191875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036198389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.036198861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036205486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036205958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036213319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036213792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036220625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.036221097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036230556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458999999996387e-06, 'source_diff': 9.458999999996387e-06}, {'time': 0.036231028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036237847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.036238319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036244431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.11200000000256e-06, 'source_diff': 6.11200000000256e-06}, {'time': 0.036244903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:27:06.626" endtime="20201112 12:27:06.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.616" endtime="20201112 12:27:06.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:27:06.699" level="INFO">${debug-compressed} = {'time': [0.0358655, 0.035865972, 0.035874472, 0.035874944, 0.035885125, 0.035885597, 0.035894569, 0.035895111, 0.035902569, 0.035903042, 0.035909083, 0.035909625, 0.035919931, 0.035920472, 0.03593106...</msg>
<status status="PASS" starttime="20201112 12:27:06.641" endtime="20201112 12:27:06.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.708" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:27:06.706" endtime="20201112 12:27:06.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.717" level="INFO">VALUE: {'time': [0.0358655, 0.035865972, 0.035874472, 0.035874944, 0.035885125, 0.035885597, 0.035894569, 0.035895111, 0.035902569, 0.035903042, 0.035909083, 0.035909625, 0.035919931, 0.035920472, 0.035931069, 0.035931542, 0.035937222, 0.035937694, 0.03594225, 0.035942722, 0.035948194, 0.035948667, 0.035959056, 0.035959528, 0.035965722, 0.035966194, 0.035975875, 0.035976347, 0.035983486, 0.035983958, 0.035989847, 0.035990319, 0.035995792, 0.035996264, 0.036000694, 0.036001167, 0.036008097, 0.036008569, 0.036016042, 0.036016514, 0.036022944, 0.036023417, 0.036034208, 0.036034681, 0.036038986, 0.036039458, 0.036047958, 0.036048431, 0.036052861, 0.036053333, 0.036063514, 0.036063986, 0.036068833, 0.036069306, 0.036078458, 0.036078931, 0.036084778, 0.036085319, 0.036089833, 0.036090306, 0.036100681, 0.036101153, 0.036106028, 0.0361065, 0.036113944, 0.036114417, 0.036123028, 0.0361235, 0.036128347, 0.036128819, 0.036133667, 0.036134139, 0.036143903, 0.036144375, 0.036149153, 0.036149625, 0.036157889, 0.036158361, 0.036168653, 0.036169125, 0.036175222, 0.036175694, 0.036183583, 0.036184056, 0.036191403, 0.036191875, 0.036198389, 0.036198861, 0.036205486, 0.036205958, 0.036213319, 0.036213792, 0.036220625, 0.036221097, 0.036230556, 0.036231028, 0.036237847, 0.036238319, 0.036244431, 0.036244903], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 8.972000000002922e-06, 5.419999999992098e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 6.040999999998298e-06, 5.419999999992098e-07, 1.0306000000001592e-05, 5.409999999997361e-07, 1.0597000000001078e-05, 4.7299999999389497e-07, 5.680000000000962e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7299999999389497e-07, 1.0389000000006476e-05, 4.7199999999442133e-07, 6.194000000001032e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.7199999999442133e-07, 7.473000000000896e-06, 4.720000000013602e-07, 6.430000000001712e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 4.305000000003056e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.847000000002266e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 5.846999999996327e-06, 5.409999999997361e-07, 4.51400000000407e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 4.875000000001406e-06, 4.720000000013602e-07, 7.444000000002282e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.846999999995327e-06, 4.720000000013602e-07, 4.84800000000174e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 4.77800000000389e-06, 4.7199999999442133e-07, 8.264000000000882e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 7.888999999997037e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07, 6.818999999998188e-06, 4.720000000013602e-07, 6.11200000000256e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 8.972000000002922e-06, 5.419999999992098e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 6.040999999998298e-06, 5.419999999992098e-07, 1.0306000000001592e-05, 5.409999999997361e-07, 1.0597000000001078e-05, 4.7299999999389497e-07, 5.680000000000962e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7299999999389497e-07, 1.0389000000006476e-05, 4.7199999999442133e-07, 6.194000000001032e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.7199999999442133e-07, 7.473000000000896e-06, 4.720000000013602e-07, 6.430000000001712e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 4.305000000003056e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.847000000002266e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 5.846999999996327e-06, 5.409999999997361e-07, 4.51400000000407e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 4.875000000001406e-06, 4.720000000013602e-07, 7.444000000002282e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.846999999995327e-06, 4.720000000013602e-07, 4.84800000000174e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 4.77800000000389e-06, 4.7199999999442133e-07, 8.264000000000882e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 7.888999999997037e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07, 6.818999999998188e-06, 4.720000000013602e-07, 6.11200000000256e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 12:27:06.710" endtime="20201112 12:27:06.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.700" endtime="20201112 12:27:06.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.732" level="INFO">${RESULT} = [{'time': 0.035865972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035874944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.723" endtime="20201112 12:27:06.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:06.763" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035865972, 0.035874944, 0.035885597, 0.035895111, 0.035903042, 0.035909625, 0.035920472, 0.035931542, 0.035937694, 0.035942722, 0.035948667, 0.035959528, 0.035966194, 0.035976347, 0.035983...</msg>
<status status="PASS" starttime="20201112 12:27:06.734" endtime="20201112 12:27:06.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.773" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:27:06.771" endtime="20201112 12:27:06.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.778" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:27:06.775" endtime="20201112 12:27:06.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.764" endtime="20201112 12:27:06.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.787" endtime="20201112 12:27:06.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.795" endtime="20201112 12:27:06.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.791" endtime="20201112 12:27:06.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.782" endtime="20201112 12:27:06.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.175" endtime="20201112 12:27:06.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.860" endtime="20201112 12:27:06.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.832" endtime="20201112 12:27:06.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.828" endtime="20201112 12:27:06.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.825" endtime="20201112 12:27:06.856"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:53.673" endtime="20201112 12:27:06.858" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.877" endtime="20201112 12:27:06.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.873" endtime="20201112 12:27:06.900"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.935" endtime="20201112 12:27:06.950"></status>
</kw>
<msg timestamp="20201112 12:27:06.951" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.932" endtime="20201112 12:27:06.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.954" endtime="20201112 12:27:06.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.965" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:06.961" endtime="20201112 12:27:06.966"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:06.923" endtime="20201112 12:27:06.968"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:06.916" endtime="20201112 12:27:06.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.914" endtime="20201112 12:27:06.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:06.978" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:06.976" endtime="20201112 12:27:06.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.972" endtime="20201112 12:27:06.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.912" endtime="20201112 12:27:06.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.910" endtime="20201112 12:27:06.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.981" endtime="20201112 12:27:06.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.906" endtime="20201112 12:27:06.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.902" endtime="20201112 12:27:06.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.870" endtime="20201112 12:27:06.989"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:27:06.993" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.014" endtime="20201112 12:27:07.025"></status>
</kw>
<msg timestamp="20201112 12:27:07.027" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.010" endtime="20201112 12:27:07.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.029" endtime="20201112 12:27:07.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.035" endtime="20201112 12:27:07.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.003" endtime="20201112 12:27:07.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.998" endtime="20201112 12:27:07.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.059" endtime="20201112 12:27:07.404"></status>
</kw>
<msg timestamp="20201112 12:27:07.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127411569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127420833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.055" endtime="20201112 12:27:07.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127411569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127420833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.414" endtime="20201112 12:27:07.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.432" endtime="20201112 12:27:07.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.048" endtime="20201112 12:27:07.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.043" endtime="20201112 12:27:07.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.450" level="INFO">${RESULT} = [{'time': 0.127420833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.26400000000882e-06, 'source_diff': 9.26400000000882e-06}, {'time': 0.127434917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:07.441" endtime="20201112 12:27:07.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:07.482" level="INFO">${OVERHEAD} = {'time': [0.127420833, 0.127434917, 0.127449875, 0.127466, 0.127480042, 0.127497056, 0.127510986, 0.127530125, 0.127548042, 0.127568069, 0.127585194, 0.127601278, 0.127620208, 0.127635264, 0.127650319...</msg>
<status status="PASS" starttime="20201112 12:27:07.452" endtime="20201112 12:27:07.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.493" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:07.491" endtime="20201112 12:27:07.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.499" level="INFO">VALUE: [9.26400000000882e-06, 9.25000000001619e-06, 9.597000000000078e-06, 9.082999999993069e-06, 8.791999999979705e-06, 9.083999999992542e-06, 9.0969999999857e-06, 8.777999999987074e-06, 8.945000000010195e-06, 9.263000000009347e-06, 8.736000000009181e-06, 9.25000000001619e-06, 9.069000000000438e-06, 8.763999999994443e-06, 8.736000000009181e-06, 9.402999999991168e-06, 8.791000000007987e-06, 9.082999999993069e-06, 9.235999999995803e-06, 8.916999999997177e-06, 8.929999999990335e-06, 9.097000000013455e-06, 9.4169999999838e-06, 9.249999999988434e-06, 9.417000000011555e-06, 9.278000000001452e-06, 9.583999999979165e-06, 9.417000000011555e-06, 9.57000000001429e-06, 9.472000000010361e-06, 8.916999999997177e-06, 9.430000000004712e-06, 9.082999999993069e-06, 9.124999999998717e-06, 9.430000000004712e-06, 9.597000000000078e-06, 8.750000000001812e-06, 9.083999999992542e-06, 9.083000000020824e-06, 9.236000000023559e-06, 8.750000000001812e-06, 9.097000000013455e-06, 9.235999999995803e-06, 8.930999999989808e-06, 9.388999999998537e-06, 9.443999999997343e-06, 9.430000000004712e-06, 9.597000000000078e-06, 9.417000000011555e-06, 8.915999999997704e-06]</msg>
<status status="PASS" starttime="20201112 12:27:07.495" endtime="20201112 12:27:07.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.485" endtime="20201112 12:27:07.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.507" endtime="20201112 12:27:07.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.516" endtime="20201112 12:27:07.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.511" endtime="20201112 12:27:07.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.503" endtime="20201112 12:27:07.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.995" endtime="20201112 12:27:07.541"></status>
</kw>
<msg timestamp="20201112 12:27:07.541" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.561" endtime="20201112 12:27:07.573"></status>
</kw>
<msg timestamp="20201112 12:27:07.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.558" endtime="20201112 12:27:07.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.581" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.577" endtime="20201112 12:27:07.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.583" endtime="20201112 12:27:07.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.551" endtime="20201112 12:27:07.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.546" endtime="20201112 12:27:07.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.606" endtime="20201112 12:27:07.944"></status>
</kw>
<msg timestamp="20201112 12:27:07.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036488847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036498444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.603" endtime="20201112 12:27:07.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036488847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036498444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.953" endtime="20201112 12:27:07.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.972" endtime="20201112 12:27:07.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.596" endtime="20201112 12:27:07.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.591" endtime="20201112 12:27:07.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.990" level="INFO">${RESULT} = [{'time': 0.036498444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.036517472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.981" endtime="20201112 12:27:07.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:08.023" level="INFO">${OVERHEAD} = {'time': [0.036498444, 0.036517472, 0.036531597, 0.036545528, 0.036563639, 0.036581611, 0.036600625, 0.036618806, 0.036632847, 0.036646778, 0.036666931, 0.036683875, 0.036701944, 0.036720028, 0.036736...</msg>
<status status="PASS" starttime="20201112 12:27:07.993" endtime="20201112 12:27:08.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.033" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:08.031" endtime="20201112 12:27:08.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.039" level="INFO">VALUE: [9.597000000000078e-06, 9.610999999999648e-06, 9.055000000000868e-06, 9.431000000004186e-06, 8.792000000000522e-06, 9.096999999999578e-06, 9.569000000000938e-06, 8.944999999996317e-06, 9.416000000005142e-06, 9.416999999997677e-06, 9.250000000002312e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.277999999994513e-06, 9.124999999998717e-06, 9.416999999997677e-06, 9.430999999997247e-06, 9.264000000001882e-06, 8.804999999993679e-06, 8.930999999996747e-06, 9.083000000000008e-06, 8.749999999994873e-06, 9.430999999997247e-06, 8.750000000001812e-06, 9.792000000001522e-06, 9.457999999996913e-06, 8.902999999997607e-06, 8.708999999995637e-06, 9.389000000005476e-06, 9.583000000000508e-06, 9.374999999998967e-06, 9.389000000005476e-06, 9.250000000002312e-06, 9.250000000002312e-06, 8.778000000000952e-06, 9.237000000002216e-06, 9.222000000003172e-06, 8.764000000001382e-06, 9.638999999998787e-06, 9.416999999997677e-06, 9.278000000001452e-06, 8.916000000004642e-06, 8.930000000004212e-06, 8.763000000001908e-06, 9.569000000000938e-06, 9.486000000002992e-06, 9.237000000002216e-06, 8.917000000004116e-06, 8.930999999996747e-06]</msg>
<status status="PASS" starttime="20201112 12:27:08.035" endtime="20201112 12:27:08.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.025" endtime="20201112 12:27:08.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.047" endtime="20201112 12:27:08.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.056" endtime="20201112 12:27:08.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.051" endtime="20201112 12:27:08.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.043" endtime="20201112 12:27:08.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.543" endtime="20201112 12:27:08.081"></status>
</kw>
<msg timestamp="20201112 12:27:08.082" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.101" endtime="20201112 12:27:08.113"></status>
</kw>
<msg timestamp="20201112 12:27:08.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.098" endtime="20201112 12:27:08.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.121" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.117" endtime="20201112 12:27:08.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.123" endtime="20201112 12:27:08.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.091" endtime="20201112 12:27:08.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.086" endtime="20201112 12:27:08.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.146" endtime="20201112 12:27:08.482"></status>
</kw>
<msg timestamp="20201112 12:27:08.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036470125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.143" endtime="20201112 12:27:08.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036470125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.492" endtime="20201112 12:27:08.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.511" endtime="20201112 12:27:08.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.136" endtime="20201112 12:27:08.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.131" endtime="20201112 12:27:08.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.529" level="INFO">${RESULT} = [{'time': 0.036470125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.735999999996303e-06, 'source_diff': 9.735999999996303e-06}, {'time': 0.036490181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:08.520" endtime="20201112 12:27:08.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:08.563" level="INFO">${OVERHEAD} = {'time': [0.036470125, 0.036490181, 0.036510097, 0.036526097, 0.036540125, 0.036555194, 0.036573333, 0.03659225, 0.036610403, 0.036624389, 0.0366415, 0.0366565, 0.036672486, 0.036690597, 0.036707569, ...</msg>
<status status="PASS" starttime="20201112 12:27:08.531" endtime="20201112 12:27:08.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.573" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:08.571" endtime="20201112 12:27:08.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.578" level="INFO">VALUE: [9.735999999996303e-06, 9.277999999994513e-06, 9.249999999995373e-06, 8.764000000001382e-06, 9.096999999999578e-06, 9.597000000000078e-06, 8.929999999997273e-06, 8.750000000001812e-06, 8.930999999996747e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.431000000004186e-06, 9.263999999994943e-06, 9.415999999998204e-06, 9.402000000005573e-06, 9.750000000002812e-06, 9.249999999995373e-06, 9.431000000004186e-06, 9.597999999999551e-06, 9.583000000000508e-06, 8.750000000001812e-06, 9.597999999999551e-06, 8.792000000000522e-06, 9.389000000005476e-06, 9.278000000001452e-06, 9.319000000000688e-06, 9.416999999997677e-06, 9.222000000003172e-06, 9.083000000000008e-06, 9.097000000006517e-06, 9.750000000002812e-06, 9.444999999996817e-06, 8.959000000002826e-06, 9.749999999995873e-06, 8.902999999997607e-06, 9.096999999999578e-06, 9.417000000004616e-06, 9.610999999999648e-06, 9.610999999999648e-06, 9.416000000005142e-06, 9.11200000000556e-06, 8.958000000003352e-06, 9.250000000002312e-06, 9.26299999999547e-06, 9.431000000004186e-06, 9.264000000001882e-06, 8.750000000001812e-06, 9.597000000000078e-06, 9.652999999998357e-06, 9.264000000001882e-06]</msg>
<status status="PASS" starttime="20201112 12:27:08.575" endtime="20201112 12:27:08.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.565" endtime="20201112 12:27:08.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.587" endtime="20201112 12:27:08.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.596" endtime="20201112 12:27:08.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.591" endtime="20201112 12:27:08.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.583" endtime="20201112 12:27:08.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.083" endtime="20201112 12:27:08.621"></status>
</kw>
<msg timestamp="20201112 12:27:08.622" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.642" endtime="20201112 12:27:08.654"></status>
</kw>
<msg timestamp="20201112 12:27:08.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.638" endtime="20201112 12:27:08.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.662" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.658" endtime="20201112 12:27:08.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.664" endtime="20201112 12:27:08.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.631" endtime="20201112 12:27:08.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.626" endtime="20201112 12:27:08.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.688" endtime="20201112 12:27:09.023"></status>
</kw>
<msg timestamp="20201112 12:27:09.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036906028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036914944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.685" endtime="20201112 12:27:09.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036906028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036914944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.032" endtime="20201112 12:27:09.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.057" endtime="20201112 12:27:09.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.678" endtime="20201112 12:27:09.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.673" endtime="20201112 12:27:09.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.075" level="INFO">${RESULT} = [{'time': 0.036914944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.036929056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.066" endtime="20201112 12:27:09.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:09.107" level="INFO">${OVERHEAD} = {'time': [0.036914944, 0.036929056, 0.036943, 0.036961153, 0.036978236, 0.036996153, 0.037010306, 0.037029347, 0.037046333, 0.037065431, 0.037084444, 0.037101389, 0.037119458, 0.037133569, 0.037153542...</msg>
<status status="PASS" starttime="20201112 12:27:09.077" endtime="20201112 12:27:09.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.119" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:09.115" endtime="20201112 12:27:09.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.124" level="INFO">VALUE: [8.915999999997704e-06, 9.556000000000842e-06, 9.402999999998107e-06, 9.444999999996817e-06, 9.763999999995443e-06, 9.110999999999148e-06, 8.930999999996747e-06, 9.096999999999578e-06, 9.429999999997773e-06, 9.209000000003076e-06, 9.555000000001368e-06, 9.292000000001022e-06, 9.597000000000078e-06, 9.069000000000438e-06, 9.277999999994513e-06, 9.611999999999121e-06, 8.764000000001382e-06, 8.917000000004116e-06, 9.583999999999981e-06, 9.083000000000008e-06, 9.583000000000508e-06, 9.333000000000258e-06, 9.264000000001882e-06, 9.416999999997677e-06, 9.638999999998787e-06, 8.736000000002242e-06, 9.665999999998454e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.750000000002812e-06, 9.597000000000078e-06, 9.597000000000078e-06, 8.930999999996747e-06, 8.778000000000952e-06, 8.764000000001382e-06, 9.264000000001882e-06, 9.110999999999148e-06, 9.153000000004796e-06, 8.917000000004116e-06, 8.931000000003686e-06, 9.749999999995873e-06, 9.249999999995373e-06, 8.929999999997273e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.445000000003756e-06, 9.597000000000078e-06, 9.417000000004616e-06, 9.652999999998357e-06, 8.944999999996317e-06]</msg>
<status status="PASS" starttime="20201112 12:27:09.121" endtime="20201112 12:27:09.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.109" endtime="20201112 12:27:09.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.133" endtime="20201112 12:27:09.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.141" endtime="20201112 12:27:09.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.137" endtime="20201112 12:27:09.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.128" endtime="20201112 12:27:09.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.623" endtime="20201112 12:27:09.167"></status>
</kw>
<msg timestamp="20201112 12:27:09.167" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.187" endtime="20201112 12:27:09.199"></status>
</kw>
<msg timestamp="20201112 12:27:09.200" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.184" endtime="20201112 12:27:09.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.207" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.203" endtime="20201112 12:27:09.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.209" endtime="20201112 12:27:09.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.176" endtime="20201112 12:27:09.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.172" endtime="20201112 12:27:09.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.233" endtime="20201112 12:27:09.576"></status>
</kw>
<msg timestamp="20201112 12:27:09.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036624611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036633875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.230" endtime="20201112 12:27:09.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036624611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036633875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.586" endtime="20201112 12:27:09.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.605" endtime="20201112 12:27:09.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.222" endtime="20201112 12:27:09.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.218" endtime="20201112 12:27:09.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.623" level="INFO">${RESULT} = [{'time': 0.036633875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.036649833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.614" endtime="20201112 12:27:09.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:09.654" level="INFO">${OVERHEAD} = {'time': [0.036633875, 0.036649833, 0.036669958, 0.036688986, 0.036708958, 0.036728958, 0.036744986, 0.036759111, 0.036778153, 0.036797181, 0.03681525, 0.036835333, 0.03685325, 0.036870292, 0.03688530...</msg>
<status status="PASS" starttime="20201112 12:27:09.625" endtime="20201112 12:27:09.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.664" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:09.662" endtime="20201112 12:27:09.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.670" level="INFO">VALUE: [9.264000000001882e-06, 9.250000000002312e-06, 9.444000000004282e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.429999999997773e-06, 9.429999999997773e-06, 9.597000000000078e-06, 9.096999999999578e-06, 9.069999999999911e-06, 9.264000000001882e-06, 9.069000000000438e-06, 9.110999999999148e-06, 9.610999999999648e-06, 9.237000000002216e-06, 9.042000000000772e-06, 9.083999999999481e-06, 9.083000000000008e-06, 9.778000000001952e-06, 9.278000000001452e-06, 9.125000000005656e-06, 9.263999999994943e-06, 9.486000000002992e-06, 8.944000000003782e-06, 9.014000000001632e-06, 9.250000000002312e-06, 9.083000000000008e-06, 8.77699999999454e-06, 9.027999999994263e-06, 8.915999999997704e-06, 8.943999999996843e-06, 8.930000000004212e-06, 9.430999999997247e-06, 9.083000000000008e-06, 9.417000000004616e-06, 8.902999999997607e-06, 9.096999999999578e-06, 9.570000000000412e-06, 9.083000000000008e-06, 8.929999999997273e-06, 8.778000000000952e-06, 8.778000000000952e-06, 9.416999999997677e-06, 9.083000000000008e-06, 8.764000000001382e-06, 8.930000000004212e-06, 9.138999999998287e-06, 9.249999999995373e-06, 9.264000000001882e-06, 9.264000000001882e-06]</msg>
<status status="PASS" starttime="20201112 12:27:09.666" endtime="20201112 12:27:09.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.656" endtime="20201112 12:27:09.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.680" endtime="20201112 12:27:09.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.689" endtime="20201112 12:27:09.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.685" endtime="20201112 12:27:09.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.674" endtime="20201112 12:27:09.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.168" endtime="20201112 12:27:09.715"></status>
</kw>
<msg timestamp="20201112 12:27:09.716" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.735" endtime="20201112 12:27:09.747"></status>
</kw>
<msg timestamp="20201112 12:27:09.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.732" endtime="20201112 12:27:09.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.755" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.751" endtime="20201112 12:27:09.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.757" endtime="20201112 12:27:09.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.725" endtime="20201112 12:27:09.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.720" endtime="20201112 12:27:09.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.781" endtime="20201112 12:27:10.116"></status>
</kw>
<msg timestamp="20201112 12:27:10.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036864722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036873639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.777" endtime="20201112 12:27:10.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036864722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036873639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.125" endtime="20201112 12:27:10.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.144" endtime="20201112 12:27:10.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.770" endtime="20201112 12:27:10.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.765" endtime="20201112 12:27:10.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.161" level="INFO">${RESULT} = [{'time': 0.036873639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.036892639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.152" endtime="20201112 12:27:10.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:10.193" level="INFO">${OVERHEAD} = {'time': [0.036873639, 0.036892639, 0.036911736, 0.036928847, 0.036943792, 0.036960986, 0.036978903, 0.036998944, 0.037016069, 0.037034986, 0.037052069, 0.037070181, 0.037089097, 0.037105236, 0.037119...</msg>
<status status="PASS" starttime="20201112 12:27:10.163" endtime="20201112 12:27:10.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.203" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:10.201" endtime="20201112 12:27:10.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.209" level="INFO">VALUE: [8.916999999997177e-06, 9.263999999994943e-06, 8.916999999997177e-06, 9.250000000002312e-06, 9.278000000001452e-06, 9.333000000000258e-06, 9.096999999999578e-06, 9.250000000002312e-06, 9.151999999998384e-06, 9.429999999997773e-06, 8.929999999997273e-06, 9.069999999999911e-06, 8.750000000001812e-06, 8.902999999997607e-06, 9.429999999997773e-06, 8.736000000002242e-06, 8.915999999997704e-06, 8.749999999994873e-06, 9.083000000000008e-06, 8.916999999997177e-06, 9.125000000005656e-06, 8.917000000004116e-06, 9.124999999998717e-06, 9.541000000001798e-06, 9.77699999999554e-06, 9.124999999998717e-06, 9.250000000002312e-06, 8.750000000001812e-06, 9.083999999999481e-06, 9.221999999996233e-06, 9.430999999997247e-06, 9.750000000002812e-06, 8.916999999997177e-06, 8.806000000000092e-06, 9.458000000003852e-06, 9.429999999997773e-06, 8.972999999995457e-06, 8.764000000001382e-06, 9.111999999998621e-06, 9.055000000000868e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.250000000002312e-06, 8.915999999997704e-06, 9.444000000004282e-06, 9.583000000000508e-06, 9.083000000000008e-06, 8.778000000000952e-06, 8.943999999996843e-06, 8.902999999997607e-06]</msg>
<status status="PASS" starttime="20201112 12:27:10.205" endtime="20201112 12:27:10.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.195" endtime="20201112 12:27:10.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.217" endtime="20201112 12:27:10.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.226" endtime="20201112 12:27:10.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.221" endtime="20201112 12:27:10.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.213" endtime="20201112 12:27:10.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.717" endtime="20201112 12:27:10.252"></status>
</kw>
<msg timestamp="20201112 12:27:10.253" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.273" endtime="20201112 12:27:10.285"></status>
</kw>
<msg timestamp="20201112 12:27:10.286" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.269" endtime="20201112 12:27:10.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.292" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.288" endtime="20201112 12:27:10.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.294" endtime="20201112 12:27:10.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.262" endtime="20201112 12:27:10.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.257" endtime="20201112 12:27:10.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.319" endtime="20201112 12:27:10.655"></status>
</kw>
<msg timestamp="20201112 12:27:10.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036534736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036543944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.315" endtime="20201112 12:27:10.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036534736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036543944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.665" endtime="20201112 12:27:10.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.683" endtime="20201112 12:27:10.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.308" endtime="20201112 12:27:10.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.303" endtime="20201112 12:27:10.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.701" level="INFO">${RESULT} = [{'time': 0.036543944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.208000000003602e-06, 'source_diff': 9.208000000003602e-06}, {'time': 0.036558014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.692" endtime="20201112 12:27:10.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:10.734" level="INFO">${OVERHEAD} = {'time': [0.036543944, 0.036558014, 0.036578153, 0.036596069, 0.036610208, 0.036626236, 0.036645222, 0.036660278, 0.036674319, 0.036694389, 0.036714472, 0.036731375, 0.036748542, 0.036762597, 0.036776...</msg>
<status status="PASS" starttime="20201112 12:27:10.703" endtime="20201112 12:27:10.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.745" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:10.742" endtime="20201112 12:27:10.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.750" level="INFO">VALUE: [9.208000000003602e-06, 9.430999999997247e-06, 9.264000000001882e-06, 9.430000000004712e-06, 9.096999999999578e-06, 9.416999999997677e-06, 8.902999999997607e-06, 9.277999999994513e-06, 8.915999999997704e-06, 9.583000000000508e-06, 9.290999999994609e-06, 8.735999999995303e-06, 8.986000000002492e-06, 9.236000000002742e-06, 9.459000000003326e-06, 9.527999999994763e-06, 9.263000000002408e-06, 9.583000000000508e-06, 8.750000000001812e-06, 8.929999999997273e-06, 9.138999999998287e-06, 9.597999999999551e-06, 9.097000000006517e-06, 9.097999999999051e-06, 9.458000000003852e-06, 9.416999999997677e-06, 8.930000000004212e-06, 9.179999999997523e-06, 9.264000000001882e-06, 9.429999999997773e-06, 9.485999999996053e-06, 9.249999999995373e-06, 9.429999999997773e-06, 9.193999999997093e-06, 9.249999999995373e-06, 8.929999999997273e-06, 9.096999999999578e-06, 9.638999999998787e-06, 9.083000000000008e-06, 9.236000000002742e-06, 9.583000000000508e-06, 8.916999999997177e-06, 9.416999999997677e-06, 8.819999999999661e-06, 9.583999999999981e-06, 9.083000000000008e-06, 9.415999999998204e-06, 9.236000000002742e-06, 9.583999999999981e-06, 9.431000000004186e-06]</msg>
<status status="PASS" starttime="20201112 12:27:10.747" endtime="20201112 12:27:10.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.736" endtime="20201112 12:27:10.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.759" endtime="20201112 12:27:10.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.767" endtime="20201112 12:27:10.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.763" endtime="20201112 12:27:10.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.754" endtime="20201112 12:27:10.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.254" endtime="20201112 12:27:10.793"></status>
</kw>
<msg timestamp="20201112 12:27:10.793" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.815" endtime="20201112 12:27:10.827"></status>
</kw>
<msg timestamp="20201112 12:27:10.828" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.811" endtime="20201112 12:27:10.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.835" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.830" endtime="20201112 12:27:10.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.837" endtime="20201112 12:27:10.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.804" endtime="20201112 12:27:10.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.798" endtime="20201112 12:27:10.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.861" endtime="20201112 12:27:11.197"></status>
</kw>
<msg timestamp="20201112 12:27:11.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038149792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038158889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.857" endtime="20201112 12:27:11.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038149792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038158889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.206" endtime="20201112 12:27:11.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.225" endtime="20201112 12:27:11.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.850" endtime="20201112 12:27:11.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.845" endtime="20201112 12:27:11.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.242" level="INFO">${RESULT} = [{'time': 0.038158889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.038172917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.233" endtime="20201112 12:27:11.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:11.274" level="INFO">${OVERHEAD} = {'time': [0.038158889, 0.038172917, 0.038189903, 0.038208014, 0.038228056, 0.038245042, 0.038262069, 0.038277125, 0.038294097, 0.038309181, 0.038324181, 0.038339167, 0.038353181, 0.03837225, 0.0383864...</msg>
<status status="PASS" starttime="20201112 12:27:11.244" endtime="20201112 12:27:11.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.284" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:11.282" endtime="20201112 12:27:11.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.289" level="INFO">VALUE: [9.096999999999578e-06, 9.069999999999911e-06, 9.124999999998717e-06, 8.902999999997607e-06, 9.153000000004796e-06, 8.764000000001382e-06, 9.083000000000008e-06, 9.278000000001452e-06, 9.429999999997773e-06, 9.416999999997677e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.750000000001812e-06, 9.430999999997247e-06, 9.444999999996817e-06, 9.417000000004616e-06, 9.583999999999981e-06, 9.417000000004616e-06, 8.750000000001812e-06, 9.429999999997773e-06, 8.931000000003686e-06, 8.709000000002576e-06, 9.249999999995373e-06, 9.249999999995373e-06, 8.930000000004212e-06, 9.083000000000008e-06, 9.028000000001202e-06, 8.915999999997704e-06, 8.750000000001812e-06, 8.874999999998467e-06, 9.597999999999551e-06, 9.235999999995803e-06, 9.431000000004186e-06, 9.096999999999578e-06, 9.597000000000078e-06, 8.666999999996927e-06, 8.916000000004642e-06, 8.903000000004546e-06, 9.250000000002312e-06, 9.583000000000508e-06, 8.819000000000188e-06, 9.306000000000592e-06, 8.971999999995983e-06, 9.320000000000161e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.583999999999981e-06, 8.749999999994873e-06, 8.943999999996843e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201112 12:27:11.286" endtime="20201112 12:27:11.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.275" endtime="20201112 12:27:11.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.298" endtime="20201112 12:27:11.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.306" endtime="20201112 12:27:11.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.302" endtime="20201112 12:27:11.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.293" endtime="20201112 12:27:11.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.795" endtime="20201112 12:27:11.332"></status>
</kw>
<msg timestamp="20201112 12:27:11.333" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.352" endtime="20201112 12:27:11.365"></status>
</kw>
<msg timestamp="20201112 12:27:11.366" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.349" endtime="20201112 12:27:11.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.372" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.368" endtime="20201112 12:27:11.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.374" endtime="20201112 12:27:11.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.342" endtime="20201112 12:27:11.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.337" endtime="20201112 12:27:11.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.400" endtime="20201112 12:27:11.735"></status>
</kw>
<msg timestamp="20201112 12:27:11.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037070597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.396" endtime="20201112 12:27:11.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037070597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.745" endtime="20201112 12:27:11.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.764" endtime="20201112 12:27:11.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.389" endtime="20201112 12:27:11.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.384" endtime="20201112 12:27:11.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.782" level="INFO">${RESULT} = [{'time': 0.037079847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.037094931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.773" endtime="20201112 12:27:11.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:11.813" level="INFO">${OVERHEAD} = {'time': [0.037079847, 0.037094931, 0.037110903, 0.037126917, 0.037142889, 0.037157, 0.037173944, 0.037190944, 0.037208125, 0.037225069, 0.037243153, 0.037261208, 0.03727525, 0.037290375, 0.037307236,...</msg>
<status status="PASS" starttime="20201112 12:27:11.784" endtime="20201112 12:27:11.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.823" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:11.821" endtime="20201112 12:27:11.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.829" level="INFO">VALUE: [9.250000000002312e-06, 8.792000000000522e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.249999999995373e-06, 8.750000000001812e-06, 9.083000000000008e-06, 9.249999999995373e-06, 9.417000000004616e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.263999999994943e-06, 9.417000000004616e-06, 9.666999999997927e-06, 8.750000000001812e-06, 9.110999999999148e-06, 9.431000000004186e-06, 9.569000000000938e-06, 9.250000000002312e-06, 8.929999999997273e-06, 9.374999999998967e-06, 9.750000000002812e-06, 9.264000000001882e-06, 9.429999999997773e-06, 9.819000000001188e-06, 8.750000000001812e-06, 8.764000000001382e-06, 9.236000000002742e-06, 9.430999999997247e-06, 8.889000000004976e-06, 8.915999999997704e-06, 9.083000000000008e-06, 9.250000000002312e-06, 9.249999999995373e-06, 8.750000000001812e-06, 8.681000000003436e-06, 9.278000000001452e-06, 9.096999999999578e-06, 9.583000000000508e-06, 8.930999999996747e-06, 9.083000000000008e-06, 8.903000000004546e-06, 9.042000000000772e-06, 9.749999999995873e-06, 8.750000000001812e-06, 8.917000000004116e-06, 9.735999999996303e-06, 9.083999999999481e-06, 9.416999999997677e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201112 12:27:11.826" endtime="20201112 12:27:11.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.815" endtime="20201112 12:27:11.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.838" endtime="20201112 12:27:11.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.846" endtime="20201112 12:27:11.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.842" endtime="20201112 12:27:11.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.833" endtime="20201112 12:27:11.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.334" endtime="20201112 12:27:11.872"></status>
</kw>
<msg timestamp="20201112 12:27:11.872" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.892" endtime="20201112 12:27:11.904"></status>
</kw>
<msg timestamp="20201112 12:27:11.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.889" endtime="20201112 12:27:11.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.912" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.908" endtime="20201112 12:27:11.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.914" endtime="20201112 12:27:11.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.882" endtime="20201112 12:27:11.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.876" endtime="20201112 12:27:11.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.939" endtime="20201112 12:27:12.275"></status>
</kw>
<msg timestamp="20201112 12:27:12.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037250264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037259681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.936" endtime="20201112 12:27:12.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037250264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037259681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.284" endtime="20201112 12:27:12.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.303" endtime="20201112 12:27:12.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.927" endtime="20201112 12:27:12.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.922" endtime="20201112 12:27:12.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.321" level="INFO">${RESULT} = [{'time': 0.037259681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417000000004616e-06, 'source_diff': 9.417000000004616e-06}, {'time': 0.037273681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.312" endtime="20201112 12:27:12.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:12.352" level="INFO">${OVERHEAD} = {'time': [0.037259681, 0.037273681, 0.037291792, 0.037308736, 0.037323792, 0.03734275, 0.037361778, 0.037376806, 0.037390931, 0.037407958, 0.037426889, 0.037445083, 0.037463972, 0.037482125, 0.0375011...</msg>
<status status="PASS" starttime="20201112 12:27:12.323" endtime="20201112 12:27:12.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.362" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:12.359" endtime="20201112 12:27:12.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.367" level="INFO">VALUE: [9.417000000004616e-06, 8.750000000001812e-06, 9.610999999999648e-06, 9.403000000005046e-06, 9.597999999999551e-06, 8.917000000004116e-06, 9.597000000000078e-06, 9.264000000001882e-06, 9.083999999999481e-06, 8.749999999994873e-06, 8.763999999994443e-06, 9.583000000000508e-06, 9.583000000000508e-06, 8.943999999996843e-06, 9.000000000002062e-06, 9.430999999997247e-06, 9.541000000001798e-06, 8.958999999995887e-06, 9.597999999999551e-06, 9.569000000000938e-06, 9.264000000001882e-06, 9.583999999999981e-06, 9.250000000002312e-06, 9.583000000000508e-06, 8.874999999998467e-06, 9.402999999998107e-06, 9.472000000003422e-06, 9.069000000000438e-06, 8.750000000001812e-06, 9.264000000001882e-06, 8.763999999994443e-06, 8.916999999997177e-06, 9.415999999998204e-06, 9.320000000000161e-06, 9.250000000002312e-06, 8.750000000001812e-06, 9.236999999995277e-06, 9.597999999999551e-06, 8.847999999998801e-06, 9.416999999997677e-06, 9.263999999994943e-06, 9.083999999999481e-06, 9.263999999994943e-06, 9.416999999997677e-06, 9.083000000000008e-06, 9.570000000000412e-06, 8.929999999997273e-06, 9.263999999994943e-06, 9.263999999994943e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201112 12:27:12.364" endtime="20201112 12:27:12.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.353" endtime="20201112 12:27:12.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.376" endtime="20201112 12:27:12.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.384" endtime="20201112 12:27:12.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.380" endtime="20201112 12:27:12.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.371" endtime="20201112 12:27:12.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.873" endtime="20201112 12:27:12.411"></status>
</kw>
<msg timestamp="20201112 12:27:12.411" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.431" endtime="20201112 12:27:12.443"></status>
</kw>
<msg timestamp="20201112 12:27:12.444" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.428" endtime="20201112 12:27:12.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.450" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.446" endtime="20201112 12:27:12.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.453" endtime="20201112 12:27:12.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.420" endtime="20201112 12:27:12.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.415" endtime="20201112 12:27:12.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.476" endtime="20201112 12:27:12.814"></status>
</kw>
<msg timestamp="20201112 12:27:12.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036638708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036648153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.473" endtime="20201112 12:27:12.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036638708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036648153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.824" endtime="20201112 12:27:12.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.842" endtime="20201112 12:27:12.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.465" endtime="20201112 12:27:12.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.461" endtime="20201112 12:27:12.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.860" level="INFO">${RESULT} = [{'time': 0.036648153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.036664111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.851" endtime="20201112 12:27:12.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:12.893" level="INFO">${OVERHEAD} = {'time': [0.036648153, 0.036664111, 0.036684236, 0.036703194, 0.036720139, 0.036734278, 0.036751347, 0.036769236, 0.036787333, 0.036806333, 0.036820431, 0.036838472, 0.036856431, 0.036876583, 0.036893...</msg>
<status status="PASS" starttime="20201112 12:27:12.862" endtime="20201112 12:27:12.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.903" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:12.901" endtime="20201112 12:27:12.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.909" level="INFO">VALUE: [9.445000000003756e-06, 9.264000000001882e-06, 9.778000000001952e-06, 8.916000000004642e-06, 9.028000000001202e-06, 9.542000000001272e-06, 9.749999999995873e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.263999999994943e-06, 8.959000000002826e-06, 8.721999999995733e-06, 8.750000000001812e-06, 9.471999999996483e-06, 9.333000000000258e-06, 9.431000000004186e-06, 9.096999999999578e-06, 9.056000000000342e-06, 9.597999999999551e-06, 9.417000000004616e-06, 8.749999999994873e-06, 9.236000000002742e-06, 9.249999999995373e-06, 9.236000000002742e-06, 9.250000000002312e-06, 8.764000000001382e-06, 9.430000000004712e-06, 8.749999999994873e-06, 9.763999999995443e-06, 9.582999999993569e-06, 9.429999999997773e-06, 9.264000000001882e-06, 9.249999999995373e-06, 9.235999999995803e-06, 8.763999999994443e-06, 9.250000000002312e-06, 9.583999999999981e-06, 8.735999999995303e-06, 9.222000000003172e-06, 9.124999999998717e-06, 9.250000000002312e-06, 8.917000000004116e-06, 9.235999999995803e-06, 8.736000000002242e-06, 9.096999999999578e-06, 9.430999999997247e-06, 8.915999999997704e-06, 8.929999999997273e-06, 9.415999999998204e-06, 9.569000000000938e-06]</msg>
<status status="PASS" starttime="20201112 12:27:12.906" endtime="20201112 12:27:12.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.895" endtime="20201112 12:27:12.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.918" endtime="20201112 12:27:12.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.927" endtime="20201112 12:27:12.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.922" endtime="20201112 12:27:12.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.914" endtime="20201112 12:27:12.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.412" endtime="20201112 12:27:12.952"></status>
</kw>
<msg timestamp="20201112 12:27:12.953" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.973" endtime="20201112 12:27:12.984"></status>
</kw>
<msg timestamp="20201112 12:27:12.986" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.969" endtime="20201112 12:27:12.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.992" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.988" endtime="20201112 12:27:12.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.994" endtime="20201112 12:27:12.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.962" endtime="20201112 12:27:13.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.957" endtime="20201112 12:27:13.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.018" endtime="20201112 12:27:13.356"></status>
</kw>
<msg timestamp="20201112 12:27:13.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036457861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036466944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.014" endtime="20201112 12:27:13.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036457861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036466944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.366" endtime="20201112 12:27:13.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.385" endtime="20201112 12:27:13.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.007" endtime="20201112 12:27:13.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.002" endtime="20201112 12:27:13.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.402" level="INFO">${RESULT} = [{'time': 0.036466944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.036484931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.393" endtime="20201112 12:27:13.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:13.435" level="INFO">${OVERHEAD} = {'time': [0.036466944, 0.036484931, 0.036502972, 0.036519042, 0.036538111, 0.036553056, 0.036572194, 0.036588236, 0.036607208, 0.036622236, 0.036641333, 0.036656431, 0.036675403, 0.036691528, 0.036709...</msg>
<status status="PASS" starttime="20201112 12:27:13.404" endtime="20201112 12:27:13.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.446" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:13.444" endtime="20201112 12:27:13.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.452" level="INFO">VALUE: [9.083000000000008e-06, 8.764000000001382e-06, 9.236000000002742e-06, 8.931000000003686e-06, 9.429999999997773e-06, 9.597999999999551e-06, 8.972000000002922e-06, 8.736000000002242e-06, 9.374999999998967e-06, 9.250000000002312e-06, 8.929999999997273e-06, 9.417000000004616e-06, 9.431000000004186e-06, 9.306000000000592e-06, 9.444999999996817e-06, 9.236000000002742e-06, 9.068999999993499e-06, 9.165999999997954e-06, 9.096999999999578e-06, 8.929999999997273e-06, 9.597000000000078e-06, 8.680000000003962e-06, 9.445000000003756e-06, 9.499999999995623e-06, 9.443999999997343e-06, 8.750000000001812e-06, 9.597000000000078e-06, 8.764000000001382e-06, 9.069999999999911e-06, 9.250000000002312e-06, 9.083000000000008e-06, 9.667000000004866e-06, 9.556000000000842e-06, 9.416999999997677e-06, 9.429999999997773e-06, 9.278000000001452e-06, 9.249999999995373e-06, 8.778000000000952e-06, 9.250000000002312e-06, 9.597000000000078e-06, 8.778000000000952e-06, 9.431000000004186e-06, 9.597000000000078e-06, 9.597000000000078e-06, 8.901999999998134e-06, 8.916999999997177e-06, 8.763999999994443e-06, 8.750000000001812e-06, 9.290999999994609e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201112 12:27:13.449" endtime="20201112 12:27:13.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.437" endtime="20201112 12:27:13.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.462" endtime="20201112 12:27:13.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.470" endtime="20201112 12:27:13.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.465" endtime="20201112 12:27:13.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.457" endtime="20201112 12:27:13.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.954" endtime="20201112 12:27:13.495"></status>
</kw>
<msg timestamp="20201112 12:27:13.496" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.516" endtime="20201112 12:27:13.528"></status>
</kw>
<msg timestamp="20201112 12:27:13.529" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.512" endtime="20201112 12:27:13.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.535" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.531" endtime="20201112 12:27:13.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.538" endtime="20201112 12:27:13.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.505" endtime="20201112 12:27:13.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.501" endtime="20201112 12:27:13.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.561" endtime="20201112 12:27:13.898"></status>
</kw>
<msg timestamp="20201112 12:27:13.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036501056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036510639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.558" endtime="20201112 12:27:13.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036501056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036510639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.907" endtime="20201112 12:27:13.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.926" endtime="20201112 12:27:13.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.551" endtime="20201112 12:27:13.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.546" endtime="20201112 12:27:13.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.944" level="INFO">${RESULT} = [{'time': 0.036510639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.036525694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.935" endtime="20201112 12:27:13.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:13.977" level="INFO">${OVERHEAD} = {'time': [0.036510639, 0.036525694, 0.036541736, 0.036558917, 0.036572833, 0.036586875, 0.036603806, 0.036620958, 0.036641028, 0.036655028, 0.036672944, 0.036691111, 0.036710028, 0.036730167, 0.036747...</msg>
<status status="PASS" starttime="20201112 12:27:13.946" endtime="20201112 12:27:13.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.987" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:13.985" endtime="20201112 12:27:13.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.992" level="INFO">VALUE: [9.583000000000508e-06, 9.568999999993999e-06, 8.916999999997177e-06, 9.320000000000161e-06, 8.929999999997273e-06, 9.416999999997677e-06, 8.750000000001812e-06, 9.055000000000868e-06, 9.597000000000078e-06, 8.764000000001382e-06, 9.429999999997773e-06, 9.569000000000938e-06, 8.764000000001382e-06, 9.236000000002742e-06, 9.249999999995373e-06, 9.221999999996233e-06, 8.833999999999231e-06, 8.874999999998467e-06, 9.416999999997677e-06, 9.416000000005142e-06, 9.292000000001022e-06, 9.236000000002742e-06, 9.597000000000078e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.568999999993999e-06, 9.542000000001272e-06, 8.764000000001382e-06, 9.250000000002312e-06, 9.263999999994943e-06, 9.069999999999911e-06, 8.667000000003866e-06, 9.264000000001882e-06, 9.306000000000592e-06, 9.610999999999648e-06, 9.083000000000008e-06, 8.945000000003256e-06, 9.583999999999981e-06, 8.750000000001812e-06, 8.916999999997177e-06, 8.958999999995887e-06, 9.069000000000438e-06, 8.931000000003686e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.445000000003756e-06, 9.388999999998537e-06, 9.250000000002312e-06, 9.056000000000342e-06, 9.417000000004616e-06]</msg>
<status status="PASS" starttime="20201112 12:27:13.989" endtime="20201112 12:27:13.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.979" endtime="20201112 12:27:13.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.002" endtime="20201112 12:27:14.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.010" endtime="20201112 12:27:14.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.006" endtime="20201112 12:27:14.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.997" endtime="20201112 12:27:14.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.497" endtime="20201112 12:27:14.036"></status>
</kw>
<msg timestamp="20201112 12:27:14.036" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.056" endtime="20201112 12:27:14.068"></status>
</kw>
<msg timestamp="20201112 12:27:14.070" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.053" endtime="20201112 12:27:14.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.076" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.072" endtime="20201112 12:27:14.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.078" endtime="20201112 12:27:14.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.046" endtime="20201112 12:27:14.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.041" endtime="20201112 12:27:14.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.101" endtime="20201112 12:27:14.438"></status>
</kw>
<msg timestamp="20201112 12:27:14.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036770375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036779458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.098" endtime="20201112 12:27:14.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036770375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036779458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.448" endtime="20201112 12:27:14.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.466" endtime="20201112 12:27:14.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.091" endtime="20201112 12:27:14.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.086" endtime="20201112 12:27:14.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.484" level="INFO">${RESULT} = [{'time': 0.036779458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.036793569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:14.475" endtime="20201112 12:27:14.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:14.516" level="INFO">${OVERHEAD} = {'time': [0.036779458, 0.036793569, 0.036808653, 0.036827625, 0.036846653, 0.036863611, 0.036880653, 0.036894792, 0.036910722, 0.036925708, 0.036940764, 0.036958944, 0.036977792, 0.036996847, 0.037011...</msg>
<status status="PASS" starttime="20201112 12:27:14.486" endtime="20201112 12:27:14.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.527" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:14.524" endtime="20201112 12:27:14.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.532" level="INFO">VALUE: [9.083000000000008e-06, 9.51299999999572e-06, 9.096999999999578e-06, 8.931000000003686e-06, 8.764000000001382e-06, 9.416999999997677e-06, 9.597000000000078e-06, 9.403000000005046e-06, 8.915999999997704e-06, 9.401999999998634e-06, 9.528000000001702e-06, 9.263000000002408e-06, 9.223000000002646e-06, 9.402999999998107e-06, 9.417000000004616e-06, 9.402999999998107e-06, 8.957999999996413e-06, 9.096999999999578e-06, 9.069000000000438e-06, 9.110999999999148e-06, 9.583000000000508e-06, 9.514000000002132e-06, 9.278000000001452e-06, 8.917000000004116e-06, 9.527000000002228e-06, 9.264000000001882e-06, 9.083000000000008e-06, 8.929999999997273e-06, 8.723000000002146e-06, 8.930000000004212e-06, 9.597000000000078e-06, 8.929999999997273e-06, 9.388999999998537e-06, 9.250000000002312e-06, 8.917000000004116e-06, 9.542000000001272e-06, 9.388999999998537e-06, 9.597000000000078e-06, 8.792000000000522e-06, 9.306000000000592e-06, 8.819999999999661e-06, 8.764000000001382e-06, 9.625000000006156e-06, 9.278000000001452e-06, 9.250000000002312e-06, 9.597000000000078e-06, 8.930999999996747e-06, 9.597000000000078e-06, 9.069000000000438e-06, 9.624999999999218e-06]</msg>
<status status="PASS" starttime="20201112 12:27:14.529" endtime="20201112 12:27:14.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.518" endtime="20201112 12:27:14.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.542" endtime="20201112 12:27:14.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.550" endtime="20201112 12:27:14.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.545" endtime="20201112 12:27:14.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.537" endtime="20201112 12:27:14.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.038" endtime="20201112 12:27:14.576"></status>
</kw>
<msg timestamp="20201112 12:27:14.576" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.596" endtime="20201112 12:27:14.608"></status>
</kw>
<msg timestamp="20201112 12:27:14.609" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.592" endtime="20201112 12:27:14.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.615" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.611" endtime="20201112 12:27:14.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.617" endtime="20201112 12:27:14.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.585" endtime="20201112 12:27:14.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.581" endtime="20201112 12:27:14.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.641" endtime="20201112 12:27:14.978"></status>
</kw>
<msg timestamp="20201112 12:27:14.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036651264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036660028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.637" endtime="20201112 12:27:14.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036651264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036660028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.987" endtime="20201112 12:27:15.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.006" endtime="20201112 12:27:15.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.630" endtime="20201112 12:27:15.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.625" endtime="20201112 12:27:15.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.023" level="INFO">${RESULT} = [{'time': 0.036660028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.036678167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.014" endtime="20201112 12:27:15.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:15.056" level="INFO">${OVERHEAD} = {'time': [0.036660028, 0.036678167, 0.036693181, 0.036710125, 0.036729167, 0.036744208, 0.036762181, 0.036778347, 0.036798389, 0.036817417, 0.036835417, 0.036850375, 0.036869556, 0.036888528, 0.036907...</msg>
<status status="PASS" starttime="20201112 12:27:15.025" endtime="20201112 12:27:15.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.068" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:15.065" endtime="20201112 12:27:15.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.073" level="INFO">VALUE: [8.763999999994443e-06, 8.819999999999661e-06, 9.097999999999051e-06, 9.083000000000008e-06, 9.083999999999481e-06, 8.750000000001812e-06, 8.736999999994777e-06, 8.916000000004642e-06, 9.264000000001882e-06, 9.069999999999911e-06, 8.764000000001382e-06, 9.096999999999578e-06, 9.749999999995873e-06, 9.430999999997247e-06, 9.415999999998204e-06, 9.416000000005142e-06, 9.250000000002312e-06, 9.263999999994943e-06, 9.764000000002382e-06, 9.388999999998537e-06, 9.431000000004186e-06, 9.096999999999578e-06, 9.264000000001882e-06, 9.597999999999551e-06, 8.764000000001382e-06, 9.416999999997677e-06, 9.583999999999981e-06, 9.249999999995373e-06, 9.416999999997677e-06, 8.917000000004116e-06, 9.264000000001882e-06, 8.764000000001382e-06, 9.083000000000008e-06, 8.916999999997177e-06, 9.429999999997773e-06, 8.735999999995303e-06, 9.750000000002812e-06, 9.750000000002812e-06, 9.583999999999981e-06, 9.096999999999578e-06, 9.028000000001202e-06, 9.583000000000508e-06, 9.431000000004186e-06, 8.860999999998898e-06, 9.430000000004712e-06, 8.916999999997177e-06, 8.929999999997273e-06, 9.583000000000508e-06, 9.083999999999481e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201112 12:27:15.070" endtime="20201112 12:27:15.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.058" endtime="20201112 12:27:15.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.083" endtime="20201112 12:27:15.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.091" endtime="20201112 12:27:15.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.087" endtime="20201112 12:27:15.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.078" endtime="20201112 12:27:15.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.577" endtime="20201112 12:27:15.117"></status>
</kw>
<msg timestamp="20201112 12:27:15.117" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.137" endtime="20201112 12:27:15.149"></status>
</kw>
<msg timestamp="20201112 12:27:15.150" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.134" endtime="20201112 12:27:15.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.156" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.152" endtime="20201112 12:27:15.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.159" endtime="20201112 12:27:15.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.126" endtime="20201112 12:27:15.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.122" endtime="20201112 12:27:15.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.182" endtime="20201112 12:27:15.519"></status>
</kw>
<msg timestamp="20201112 12:27:15.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036697958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036707222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.179" endtime="20201112 12:27:15.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036697958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036707222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.528" endtime="20201112 12:27:15.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.547" endtime="20201112 12:27:15.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.171" endtime="20201112 12:27:15.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.167" endtime="20201112 12:27:15.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.564" level="INFO">${RESULT} = [{'time': 0.036707222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.263999999994943e-06, 'source_diff': 9.263999999994943e-06}, {'time': 0.036723278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.555" endtime="20201112 12:27:15.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:15.596" level="INFO">${OVERHEAD} = {'time': [0.036707222, 0.036723278, 0.036741347, 0.036755306, 0.036769375, 0.036786375, 0.036806333, 0.036825361, 0.036842472, 0.036856514, 0.036871431, 0.036886542, 0.036905583, 0.036920514, 0.036934...</msg>
<status status="PASS" starttime="20201112 12:27:15.567" endtime="20201112 12:27:15.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.606" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:15.604" endtime="20201112 12:27:15.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.613" level="INFO">VALUE: [9.263999999994943e-06, 8.916999999997177e-06, 9.583000000000508e-06, 8.917000000004116e-06, 9.388999999998537e-06, 9.583000000000508e-06, 9.582999999993569e-06, 9.083000000000008e-06, 9.250000000002312e-06, 9.402999999998107e-06, 8.931000000003686e-06, 9.250000000002312e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.250000000002312e-06, 8.778000000000952e-06, 9.028000000001202e-06, 9.666999999997927e-06, 8.931000000003686e-06, 8.930999999996747e-06, 8.916999999997177e-06, 9.417000000004616e-06, 9.583000000000508e-06, 8.930000000004212e-06, 8.958999999995887e-06, 8.778000000000952e-06, 9.820000000000662e-06, 9.597000000000078e-06, 9.555999999993903e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.375000000005906e-06, 9.069999999999911e-06, 9.402999999998107e-06, 9.346999999999828e-06, 9.139000000005226e-06, 8.666999999996927e-06, 8.763999999994443e-06, 8.930000000004212e-06, 9.430999999997247e-06, 9.471999999996483e-06, 8.750000000001812e-06, 9.541000000001798e-06, 9.181000000003936e-06, 8.930000000004212e-06, 8.722000000002672e-06, 8.916999999997177e-06, 9.249999999995373e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201112 12:27:15.608" endtime="20201112 12:27:15.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.598" endtime="20201112 12:27:15.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.622" endtime="20201112 12:27:15.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.631" endtime="20201112 12:27:15.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.626" endtime="20201112 12:27:15.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.618" endtime="20201112 12:27:15.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.118" endtime="20201112 12:27:15.656"></status>
</kw>
<msg timestamp="20201112 12:27:15.657" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.677" endtime="20201112 12:27:15.689"></status>
</kw>
<msg timestamp="20201112 12:27:15.691" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.673" endtime="20201112 12:27:15.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.697" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.693" endtime="20201112 12:27:15.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.699" endtime="20201112 12:27:15.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.666" endtime="20201112 12:27:15.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.661" endtime="20201112 12:27:15.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.722" endtime="20201112 12:27:16.060"></status>
</kw>
<msg timestamp="20201112 12:27:16.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037275431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037285014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.719" endtime="20201112 12:27:16.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037275431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037285014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.069" endtime="20201112 12:27:16.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.088" endtime="20201112 12:27:16.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.712" endtime="20201112 12:27:16.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.707" endtime="20201112 12:27:16.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.106" level="INFO">${RESULT} = [{'time': 0.037285014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.037300069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:16.097" endtime="20201112 12:27:16.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:16.137" level="INFO">${OVERHEAD} = {'time': [0.037285014, 0.037300069, 0.037315167, 0.037329139, 0.037348167, 0.037367208, 0.037385264, 0.037402375, 0.037418375, 0.037438375, 0.0374575, 0.037476472, 0.037492528, 0.037510472, 0.03752556...</msg>
<status status="PASS" starttime="20201112 12:27:16.108" endtime="20201112 12:27:16.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.147" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:16.145" endtime="20201112 12:27:16.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.153" level="INFO">VALUE: [9.583000000000508e-06, 9.597000000000078e-06, 9.431000000004186e-06, 8.916999999997177e-06, 9.610999999999648e-06, 9.401999999998634e-06, 9.445000000003756e-06, 9.069000000000438e-06, 8.680999999996497e-06, 9.403000000005046e-06, 9.583000000000508e-06, 9.415999999998204e-06, 9.249999999995373e-06, 8.916000000004642e-06, 9.096999999999578e-06, 9.415999999998204e-06, 9.083000000000008e-06, 8.972000000002922e-06, 9.403000000005046e-06, 8.916999999997177e-06, 9.083999999999481e-06, 9.583999999999981e-06, 9.097999999999051e-06, 9.402000000005573e-06, 8.916999999997177e-06, 9.429999999997773e-06, 9.111999999998621e-06, 9.416999999997677e-06, 9.236000000002742e-06, 9.249999999995373e-06, 9.430999999997247e-06, 9.750000000002812e-06, 8.764000000001382e-06, 8.916999999997177e-06, 8.750000000001812e-06, 9.250000000002312e-06, 9.416000000005142e-06, 8.973000000002396e-06, 9.250000000002312e-06, 8.750000000001812e-06, 9.249999999995373e-06, 9.083999999999481e-06, 9.431000000004186e-06, 8.750000000001812e-06, 9.083000000000008e-06, 8.916000000004642e-06, 9.069999999999911e-06, 9.583999999999981e-06, 9.597000000000078e-06, 8.917000000004116e-06]</msg>
<status status="PASS" starttime="20201112 12:27:16.150" endtime="20201112 12:27:16.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.139" endtime="20201112 12:27:16.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.162" endtime="20201112 12:27:16.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.172" endtime="20201112 12:27:16.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.168" endtime="20201112 12:27:16.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.158" endtime="20201112 12:27:16.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.658" endtime="20201112 12:27:16.198"></status>
</kw>
<msg timestamp="20201112 12:27:16.198" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.218" endtime="20201112 12:27:16.230"></status>
</kw>
<msg timestamp="20201112 12:27:16.231" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.214" endtime="20201112 12:27:16.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.233" endtime="20201112 12:27:16.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.239" endtime="20201112 12:27:16.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.207" endtime="20201112 12:27:16.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.202" endtime="20201112 12:27:16.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.262" endtime="20201112 12:27:16.599"></status>
</kw>
<msg timestamp="20201112 12:27:16.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036472069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036481, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:16.259" endtime="20201112 12:27:16.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036472069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036481, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:16.609" endtime="20201112 12:27:16.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.627" endtime="20201112 12:27:16.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.252" endtime="20201112 12:27:16.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.247" endtime="20201112 12:27:16.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.645" level="INFO">${RESULT} = [{'time': 0.036481, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.036496931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:16.636" endtime="20201112 12:27:16.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:16.676" level="INFO">${OVERHEAD} = {'time': [0.036481, 0.036496931, 0.036515014, 0.036533986, 0.036549986, 0.036570153, 0.036588167, 0.036607111, 0.03662125, 0.036641278, 0.036656292, 0.036675222, 0.036691306, 0.036711319, 0.036725444,...</msg>
<status status="PASS" starttime="20201112 12:27:16.647" endtime="20201112 12:27:16.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:16.684" endtime="20201112 12:27:16.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.691" level="INFO">VALUE: [8.930999999996747e-06, 8.917000000004116e-06, 9.583000000000508e-06, 8.916999999997177e-06, 9.597000000000078e-06, 9.570000000000412e-06, 9.416999999997677e-06, 9.096999999999578e-06, 8.792000000000522e-06, 9.083999999999481e-06, 9.652999999998357e-06, 9.569000000000938e-06, 9.264000000001882e-06, 9.443999999997343e-06, 9.096999999999578e-06, 9.263999999994943e-06, 9.069000000000438e-06, 9.416999999997677e-06, 8.916999999997177e-06, 9.582999999993569e-06, 9.278000000001452e-06, 9.264000000001882e-06, 9.430000000004712e-06, 9.374999999998967e-06, 9.250000000002312e-06, 9.569000000000938e-06, 9.236000000002742e-06, 9.319000000000688e-06, 9.124999999998717e-06, 9.416999999997677e-06, 9.638999999998787e-06, 9.236000000002742e-06, 9.429999999997773e-06, 9.750000000002812e-06, 8.944000000003782e-06, 9.153000000004796e-06, 9.569000000000938e-06, 8.736000000002242e-06, 9.236000000002742e-06, 9.430999999997247e-06, 8.778000000000952e-06, 9.431000000004186e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.09800000000599e-06, 9.583000000000508e-06, 9.763999999995443e-06, 8.916999999997177e-06, 8.778000000000952e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201112 12:27:16.688" endtime="20201112 12:27:16.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.678" endtime="20201112 12:27:16.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.701" endtime="20201112 12:27:16.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.709" endtime="20201112 12:27:16.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.705" endtime="20201112 12:27:16.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.696" endtime="20201112 12:27:16.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.199" endtime="20201112 12:27:16.736"></status>
</kw>
<msg timestamp="20201112 12:27:16.737" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.756" endtime="20201112 12:27:16.769"></status>
</kw>
<msg timestamp="20201112 12:27:16.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.753" endtime="20201112 12:27:16.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.776" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.772" endtime="20201112 12:27:16.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.778" endtime="20201112 12:27:16.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.746" endtime="20201112 12:27:16.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.741" endtime="20201112 12:27:16.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.802" endtime="20201112 12:27:17.137"></status>
</kw>
<msg timestamp="20201112 12:27:17.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036717208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036725903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.798" endtime="20201112 12:27:17.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036717208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036725903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.146" endtime="20201112 12:27:17.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.165" endtime="20201112 12:27:17.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.791" endtime="20201112 12:27:17.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.786" endtime="20201112 12:27:17.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.182" level="INFO">${RESULT} = [{'time': 0.036725903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694999999996067e-06, 'source_diff': 8.694999999996067e-06}, {'time': 0.036742931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:17.173" endtime="20201112 12:27:17.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:17.215" level="INFO">${OVERHEAD} = {'time': [0.036725903, 0.036742931, 0.036757986, 0.036774931, 0.036793028, 0.036809028, 0.036829097, 0.036848986, 0.036866014, 0.036882042, 0.036897236, 0.036914139, 0.036931278, 0.036949278, 0.036964...</msg>
<status status="PASS" starttime="20201112 12:27:17.184" endtime="20201112 12:27:17.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.226" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:17.223" endtime="20201112 12:27:17.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.231" level="INFO">VALUE: [8.694999999996067e-06, 9.500000000002562e-06, 9.583000000000508e-06, 9.513999999995193e-06, 9.416999999997677e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.416999999997677e-06, 8.736000000002242e-06, 9.416999999997677e-06, 9.083000000000008e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.083999999999481e-06, 9.263000000002408e-06, 9.583000000000508e-06, 9.083000000000008e-06, 9.430999999997247e-06, 8.750000000001812e-06, 8.735999999995303e-06, 9.083000000000008e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.444999999996817e-06, 9.236000000002742e-06, 9.415999999998204e-06, 9.417000000004616e-06, 9.096999999999578e-06, 9.444000000004282e-06, 8.917000000004116e-06, 9.250000000002312e-06, 9.110999999999148e-06, 8.77699999999454e-06, 9.597000000000078e-06, 9.236000000002742e-06, 9.278000000001452e-06, 8.915999999997704e-06, 9.250000000002312e-06, 9.583000000000508e-06, 9.610999999999648e-06, 9.583000000000508e-06, 8.777000000001478e-06, 9.555000000001368e-06, 8.916999999997177e-06, 9.250000000002312e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.430000000004712e-06, 9.223000000002646e-06, 8.917000000004116e-06]</msg>
<status status="PASS" starttime="20201112 12:27:17.228" endtime="20201112 12:27:17.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.217" endtime="20201112 12:27:17.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.241" endtime="20201112 12:27:17.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.249" endtime="20201112 12:27:17.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.244" endtime="20201112 12:27:17.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.236" endtime="20201112 12:27:17.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.738" endtime="20201112 12:27:17.274"></status>
</kw>
<msg timestamp="20201112 12:27:17.275" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.296" endtime="20201112 12:27:17.309"></status>
</kw>
<msg timestamp="20201112 12:27:17.310" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.293" endtime="20201112 12:27:17.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.316" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.312" endtime="20201112 12:27:17.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.318" endtime="20201112 12:27:17.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.286" endtime="20201112 12:27:17.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.280" endtime="20201112 12:27:17.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.342" endtime="20201112 12:27:17.678"></status>
</kw>
<msg timestamp="20201112 12:27:17.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038270569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038279458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.338" endtime="20201112 12:27:17.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038270569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038279458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.687" endtime="20201112 12:27:17.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.706" endtime="20201112 12:27:17.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.331" endtime="20201112 12:27:17.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.326" endtime="20201112 12:27:17.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.723" level="INFO">${RESULT} = [{'time': 0.038279458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889000000004976e-06, 'source_diff': 8.889000000004976e-06}, {'time': 0.038296472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:17.714" endtime="20201112 12:27:17.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:17.754" level="INFO">${OVERHEAD} = {'time': [0.038279458, 0.038296472, 0.038311431, 0.038326486, 0.038345597, 0.038362514, 0.038381639, 0.038396694, 0.03841175, 0.038427708, 0.038442806, 0.038456764, 0.038476722, 0.038495806, 0.0385109...</msg>
<status status="PASS" starttime="20201112 12:27:17.725" endtime="20201112 12:27:17.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.765" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:27:17.762" endtime="20201112 12:27:17.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.770" level="INFO">VALUE: [8.889000000004976e-06, 8.693999999996593e-06, 8.750000000001812e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.236000000002742e-06, 8.750000000001812e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.263999999994943e-06, 8.889000000004976e-06, 8.916999999997177e-06, 9.083000000000008e-06, 8.916999999997177e-06, 9.096999999999578e-06, 9.083999999999481e-06, 9.429999999997773e-06, 9.556000000000842e-06, 8.902999999997607e-06, 8.916999999997177e-06, 9.583000000000508e-06, 9.264000000001882e-06, 9.583999999999981e-06, 9.582999999993569e-06, 9.249999999995373e-06, 8.750000000001812e-06, 9.097999999999051e-06, 9.430999999997247e-06, 9.583000000000508e-06, 8.915999999997704e-06, 8.750000000001812e-06, 8.902999999997607e-06, 9.387999999999064e-06, 9.235999999995803e-06, 9.013000000002158e-06, 9.431000000004186e-06, 8.915999999997704e-06, 9.096999999999578e-06, 9.042000000000772e-06, 9.417000000004616e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.416999999997677e-06, 8.750000000001812e-06, 9.096999999999578e-06, 8.763999999994443e-06, 9.08400000000642e-06, 9.221999999996233e-06, 9.583999999999981e-06, 9.110999999999148e-06]</msg>
<status status="PASS" starttime="20201112 12:27:17.767" endtime="20201112 12:27:17.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.756" endtime="20201112 12:27:17.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.780" endtime="20201112 12:27:17.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.788" endtime="20201112 12:27:17.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.784" endtime="20201112 12:27:17.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.775" endtime="20201112 12:27:17.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.276" endtime="20201112 12:27:17.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.991" endtime="20201112 12:27:17.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.825" endtime="20201112 12:27:17.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.821" endtime="20201112 12:27:17.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.818" endtime="20201112 12:27:17.849"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:06.864" endtime="20201112 12:27:17.850" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.870" endtime="20201112 12:27:17.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.866" endtime="20201112 12:27:17.893"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.928" endtime="20201112 12:27:17.944"></status>
</kw>
<msg timestamp="20201112 12:27:17.945" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.925" endtime="20201112 12:27:17.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.952" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.947" endtime="20201112 12:27:17.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.959" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:17.954" endtime="20201112 12:27:17.960"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:17.917" endtime="20201112 12:27:17.961"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:17.911" endtime="20201112 12:27:17.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.908" endtime="20201112 12:27:17.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:17.972" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:17.971" endtime="20201112 12:27:17.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.966" endtime="20201112 12:27:17.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.906" endtime="20201112 12:27:17.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.905" endtime="20201112 12:27:17.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.976" endtime="20201112 12:27:17.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.899" endtime="20201112 12:27:17.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.895" endtime="20201112 12:27:17.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.863" endtime="20201112 12:27:17.983"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.006" endtime="20201112 12:27:18.028"></status>
</kw>
<msg timestamp="20201112 12:27:18.029" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.003" endtime="20201112 12:27:18.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.035" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.031" endtime="20201112 12:27:18.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.037" endtime="20201112 12:27:18.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.996" endtime="20201112 12:27:18.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.990" endtime="20201112 12:27:18.044"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.049" endtime="20201112 12:27:18.053"></status>
</kw>
<msg timestamp="20201112 12:27:18.054" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:27:18.046" endtime="20201112 12:27:18.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.064" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:27:18.062" endtime="20201112 12:27:18.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.069" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:27:18.067" endtime="20201112 12:27:18.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.056" endtime="20201112 12:27:18.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.083" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:27:18.078" endtime="20201112 12:27:18.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.087" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:27:18.085" endtime="20201112 12:27:18.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.072" endtime="20201112 12:27:18.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.106" endtime="20201112 12:27:18.450"></status>
</kw>
<msg timestamp="20201112 12:27:18.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129230694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129246792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.103" endtime="20201112 12:27:18.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129230694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129246792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.459" endtime="20201112 12:27:18.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.478" endtime="20201112 12:27:18.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.095" endtime="20201112 12:27:18.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.091" endtime="20201112 12:27:18.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.496" level="INFO">${RESULT} = [{'time': 0.129246792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6097999999992174e-05, 'source_diff': 1.6097999999992174e-05}, {'time': 0.129272903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:18.487" endtime="20201112 12:27:18.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:18.527" level="INFO">${OVERHEAD} = {'time': [0.129246792, 0.129272903, 0.129296986, 0.129317944, 0.129343986, 0.129371167, 0.129394181, 0.129416208, 0.129443264, 0.129470333, 0.129493347, 0.129520458, 0.129541389, 0.129565444, 0.129588...</msg>
<status status="PASS" starttime="20201112 12:27:18.498" endtime="20201112 12:27:18.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.539" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:27:18.536" endtime="20201112 12:27:18.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.545" level="INFO">VALUE: [1.6097999999992174e-05, 1.588899999999116e-05, 1.6430000000011713e-05, 1.5901999999984318e-05, 1.655500000000143e-05, 1.657000000002129e-05, 1.6583999999986165e-05, 1.6750000000009813e-05, 1.6236000000002804e-05, 1.6068999999979683e-05, 1.6583000000014447e-05, 1.6401999999998695e-05, 1.6361000000020276e-05, 1.6583000000014447e-05, 1.5999999999988246e-05, 1.6569000000021816e-05, 1.64169999999908e-05, 1.64169999999908e-05, 1.6695000000011007e-05, 1.6444000000004344e-05, 1.6125000000005718e-05, 1.6263999999988066e-05, 1.6749999999982057e-05, 1.6055999999986525e-05, 1.6457999999996975e-05, 1.605600000001428e-05, 1.673600000001718e-05, 1.608300000000007e-05, 1.619499999999663e-05, 1.5972000000002984e-05, 1.5959000000009826e-05, 1.608300000000007e-05, 1.6764000000002444e-05, 1.6068999999979683e-05, 1.6249999999995435e-05, 1.6430000000011713e-05, 1.5819999999999723e-05, 1.6569000000021816e-05, 1.5917000000004178e-05, 1.5917000000004178e-05, 1.6083999999999543e-05, 1.6249999999995435e-05, 1.6237000000002277e-05, 1.606900000000744e-05, 1.6735999999989426e-05, 1.6083999999999543e-05, 1.634699999999989e-05, 1.613899999999835e-05, 1.629100000000161e-05, 1.5917000000004178e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.541" endtime="20201112 12:27:18.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.529" endtime="20201112 12:27:18.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.554" endtime="20201112 12:27:18.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.562" endtime="20201112 12:27:18.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.558" endtime="20201112 12:27:18.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.549" endtime="20201112 12:27:18.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.985" endtime="20201112 12:27:18.587"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:17.856" endtime="20201112 12:27:18.590" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.609" endtime="20201112 12:27:18.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.605" endtime="20201112 12:27:18.633"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.667" endtime="20201112 12:27:18.683"></status>
</kw>
<msg timestamp="20201112 12:27:18.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.664" endtime="20201112 12:27:18.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.691" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.686" endtime="20201112 12:27:18.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.697" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:18.693" endtime="20201112 12:27:18.698"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:18.657" endtime="20201112 12:27:18.700"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:18.649" endtime="20201112 12:27:18.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.646" endtime="20201112 12:27:18.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:18.710" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:18.708" endtime="20201112 12:27:18.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.704" endtime="20201112 12:27:18.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.644" endtime="20201112 12:27:18.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.643" endtime="20201112 12:27:18.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.713" endtime="20201112 12:27:18.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.639" endtime="20201112 12:27:18.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.634" endtime="20201112 12:27:18.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.603" endtime="20201112 12:27:18.720"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.745" endtime="20201112 12:27:18.852"></status>
</kw>
<msg timestamp="20201112 12:27:18.853" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.741" endtime="20201112 12:27:18.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.859" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.855" endtime="20201112 12:27:18.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.862" endtime="20201112 12:27:18.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.734" endtime="20201112 12:27:18.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.727" endtime="20201112 12:27:18.868"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.873" endtime="20201112 12:27:18.878"></status>
</kw>
<msg timestamp="20201112 12:27:18.879" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:27:18.870" endtime="20201112 12:27:18.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.889" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:27:18.886" endtime="20201112 12:27:18.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.893" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:27:18.891" endtime="20201112 12:27:18.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.880" endtime="20201112 12:27:18.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.905" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:27:18.903" endtime="20201112 12:27:18.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.910" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:27:18.907" endtime="20201112 12:27:18.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.897" endtime="20201112 12:27:18.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.930" endtime="20201112 12:27:19.277"></status>
</kw>
<msg timestamp="20201112 12:27:19.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128676722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128731958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.925" endtime="20201112 12:27:19.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128676722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128731958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.286" endtime="20201112 12:27:19.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.305" endtime="20201112 12:27:19.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.918" endtime="20201112 12:27:19.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.913" endtime="20201112 12:27:19.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.322" level="INFO">${RESULT} = [{'time': 0.128731958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.523600000001405e-05, 'source_diff': 5.523600000001405e-05}, {'time': 0.130488528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.313" endtime="20201112 12:27:19.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:19.353" level="INFO">${OVERHEAD} = {'time': [0.128731958, 0.130488528, 0.132242028, 0.133996556, 0.135753944, 0.137513236, 0.139267694, 0.141027319, 0.142788014, 0.144545542, 0.146303181, 0.148059556, 0.149814972, 0.151571264, 0.153327...</msg>
<status status="PASS" starttime="20201112 12:27:19.324" endtime="20201112 12:27:19.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.365" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:27:19.363" endtime="20201112 12:27:19.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.371" level="INFO">VALUE: [5.523600000001405e-05, 5.466699999998048e-05, 5.531999999999759e-05, 5.4999999999999494e-05, 5.477699999997809e-05, 5.4639000000022975e-05, 5.5179999999988016e-05, 5.501300000002041e-05, 5.462500000000259e-05, 5.495899999999332e-05, 5.487500000000978e-05, 5.45140000000055e-05, 5.492999999998083e-05, 5.530600000000496e-05, 5.4987000000006336e-05, 5.480600000001834e-05, 5.5027999999984756e-05, 5.504200000000514e-05, 5.4999999999999494e-05, 5.536200000000324e-05, 5.530500000000549e-05, 5.450000000001287e-05, 5.48340000000036e-05, 5.479099999999848e-05, 5.481899999998374e-05, 5.4485999999992485e-05, 5.4499999999985116e-05, 5.477800000000532e-05, 5.533299999999075e-05, 5.5152000000002754e-05, 5.531999999999759e-05, 5.4833999999975847e-05, 5.4459000000006696e-05, 5.530600000000496e-05, 5.531999999999759e-05, 5.466599999998101e-05, 5.51390000000096e-05, 5.463899999999522e-05, 5.4805999999990584e-05, 5.51390000000096e-05, 5.534800000001061e-05, 5.463899999999522e-05, 5.51940000000084e-05, 5.515300000000223e-05, 5.484699999999676e-05, 5.531999999999759e-05, 5.5333000000018506e-05, 5.483300000000413e-05, 5.497299999998595e-05, 5.5208000000001034e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.368" endtime="20201112 12:27:19.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.356" endtime="20201112 12:27:19.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.380" endtime="20201112 12:27:19.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.388" endtime="20201112 12:27:19.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.383" endtime="20201112 12:27:19.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.375" endtime="20201112 12:27:19.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.722" endtime="20201112 12:27:19.414"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:18.596" endtime="20201112 12:27:19.416" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.435" endtime="20201112 12:27:19.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.431" endtime="20201112 12:27:19.459"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.495" endtime="20201112 12:27:19.511"></status>
</kw>
<msg timestamp="20201112 12:27:19.512" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.488" endtime="20201112 12:27:19.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.514" endtime="20201112 12:27:19.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.525" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:19.521" endtime="20201112 12:27:19.526"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:19.481" endtime="20201112 12:27:19.528"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:19.474" endtime="20201112 12:27:19.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.472" endtime="20201112 12:27:19.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:19.538" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:19.536" endtime="20201112 12:27:19.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.532" endtime="20201112 12:27:19.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.470" endtime="20201112 12:27:19.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.468" endtime="20201112 12:27:19.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.542" endtime="20201112 12:27:19.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.464" endtime="20201112 12:27:19.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.460" endtime="20201112 12:27:19.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.429" endtime="20201112 12:27:19.549"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.573" endtime="20201112 12:27:19.882"></status>
</kw>
<msg timestamp="20201112 12:27:19.883" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.569" endtime="20201112 12:27:19.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.890" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.886" endtime="20201112 12:27:19.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.892" endtime="20201112 12:27:19.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.562" endtime="20201112 12:27:19.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.556" endtime="20201112 12:27:19.899"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.903" endtime="20201112 12:27:19.908"></status>
</kw>
<msg timestamp="20201112 12:27:19.909" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:27:19.901" endtime="20201112 12:27:19.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.919" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:27:19.917" endtime="20201112 12:27:19.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.923" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:27:19.921" endtime="20201112 12:27:19.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.911" endtime="20201112 12:27:19.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.935" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:27:19.933" endtime="20201112 12:27:19.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.940" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:27:19.938" endtime="20201112 12:27:19.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.927" endtime="20201112 12:27:19.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.959" endtime="20201112 12:27:20.299"></status>
</kw>
<msg timestamp="20201112 12:27:20.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134463514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134561042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.955" endtime="20201112 12:27:20.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134463514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134561042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.309" endtime="20201112 12:27:20.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.326" endtime="20201112 12:27:20.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.948" endtime="20201112 12:27:20.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.943" endtime="20201112 12:27:20.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.344" level="INFO">${RESULT} = [{'time': 0.134561042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.752799999998563e-05, 'source_diff': 9.752799999998563e-05}, {'time': 0.140371347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.335" endtime="20201112 12:27:20.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:20.377" level="INFO">${OVERHEAD} = {'time': [0.134561042, 0.140371347, 0.146180611, 0.151991778, 0.157804083, 0.163620403, 0.169437722, 0.175257486, 0.181064958, 0.186883639, 0.192694875, 0.198510222, 0.204325236, 0.210140278, 0.215951...</msg>
<status status="PASS" starttime="20201112 12:27:20.346" endtime="20201112 12:27:20.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.389" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:27:20.386" endtime="20201112 12:27:20.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.394" level="INFO">VALUE: [9.752799999998563e-05, 9.66530000000021e-05, 9.666699999999473e-05, 9.68339999999901e-05, 9.755499999999917e-05, 9.748600000000773e-05, 9.736100000001802e-05, 9.698599999999336e-05, 9.663900000000947e-05, 9.663899999998171e-05, 9.683299999999062e-05, 9.699999999998599e-05, 9.730499999999198e-05, 9.712500000000346e-05, 9.697200000000072e-05, 9.663899999998171e-05, 9.698599999999336e-05, 9.71120000000103e-05, 9.712500000000346e-05, 9.713900000002385e-05, 9.662500000001684e-05, 9.663900000000947e-05, 9.68889999999889e-05, 9.659700000003157e-05, 9.700000000001374e-05, 9.730600000001921e-05, 9.654199999997726e-05, 9.697199999997297e-05, 9.64720000000141e-05, 9.698600000002111e-05, 9.697199999997297e-05, 9.713900000002385e-05, 9.71669999999536e-05, 9.729199999997107e-05, 9.663900000000947e-05, 9.65689999999908e-05, 9.659699999997606e-05, 9.7027999999999e-05, 9.695899999995206e-05, 9.706900000000518e-05, 9.67920000000122e-05, 9.694500000001494e-05, 9.705500000001255e-05, 9.666699999999473e-05, 9.715300000001648e-05, 9.729099999999935e-05, 9.698699999999283e-05, 9.727799999997844e-05, 9.720800000001528e-05, 9.677800000001957e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.391" endtime="20201112 12:27:20.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.379" endtime="20201112 12:27:20.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.403" endtime="20201112 12:27:20.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.411" endtime="20201112 12:27:20.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.407" endtime="20201112 12:27:20.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.398" endtime="20201112 12:27:20.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.551" endtime="20201112 12:27:20.437"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:19.422" endtime="20201112 12:27:20.439" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.458" endtime="20201112 12:27:20.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.455" endtime="20201112 12:27:20.482"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.515" endtime="20201112 12:27:20.530"></status>
</kw>
<msg timestamp="20201112 12:27:20.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.511" endtime="20201112 12:27:20.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.538" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.533" endtime="20201112 12:27:20.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.546" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:20.540" endtime="20201112 12:27:20.546"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:20.504" endtime="20201112 12:27:20.548"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:20.498" endtime="20201112 12:27:20.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.495" endtime="20201112 12:27:20.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:20.558" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:20.557" endtime="20201112 12:27:20.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.552" endtime="20201112 12:27:20.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.493" endtime="20201112 12:27:20.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.492" endtime="20201112 12:27:20.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.563" endtime="20201112 12:27:20.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.488" endtime="20201112 12:27:20.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.483" endtime="20201112 12:27:20.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.452" endtime="20201112 12:27:20.570"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.593" endtime="20201112 12:27:20.614"></status>
</kw>
<msg timestamp="20201112 12:27:20.615" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.590" endtime="20201112 12:27:20.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.622" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.618" endtime="20201112 12:27:20.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.624" endtime="20201112 12:27:20.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.583" endtime="20201112 12:27:20.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.577" endtime="20201112 12:27:20.631"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.635" endtime="20201112 12:27:20.640"></status>
</kw>
<msg timestamp="20201112 12:27:20.641" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:27:20.633" endtime="20201112 12:27:20.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.651" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:27:20.649" endtime="20201112 12:27:20.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.656" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:27:20.653" endtime="20201112 12:27:20.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.643" endtime="20201112 12:27:20.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.667" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:27:20.665" endtime="20201112 12:27:20.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.672" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:27:20.670" endtime="20201112 12:27:20.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.659" endtime="20201112 12:27:20.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.691" endtime="20201112 12:27:21.038"></status>
</kw>
<msg timestamp="20201112 12:27:21.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126905417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126907583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.687" endtime="20201112 12:27:21.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126905417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126907583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.048" endtime="20201112 12:27:21.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.067" endtime="20201112 12:27:21.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.680" endtime="20201112 12:27:21.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.675" endtime="20201112 12:27:21.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.085" level="INFO">${RESULT} = [{'time': 0.126907583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.165999999997892e-06, 'source_diff': 2.165999999997892e-06}, {'time': 0.12693225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:21.076" endtime="20201112 12:27:21.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:21.118" level="INFO">${OVERHEAD} = {'time': [0.126907583, 0.12693225, 0.126957597, 0.126981417, 0.127007514, 0.127033653, 0.127061778, 0.127088056, 0.127113431, 0.127140264, 0.127166222, 0.127195153, 0.127218208, 0.127247111, 0.1272715...</msg>
<status status="PASS" starttime="20201112 12:27:21.087" endtime="20201112 12:27:21.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.129" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:27:21.127" endtime="20201112 12:27:21.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.135" level="INFO">VALUE: [2.165999999997892e-06, 2.193999999983154e-06, 2.165999999997892e-06, 2.195000000010383e-06, 2.138999999984348e-06, 2.1530000000047345e-06, 2.1669999999973655e-06, 2.1530000000047345e-06, 2.1530000000047345e-06, 2.1669999999973655e-06, 2.110999999999086e-06, 2.1390000000121034e-06, 2.165999999997892e-06, 2.1669999999973655e-06, 2.1530000000047345e-06, 2.1530000000047345e-06, 2.165999999997892e-06, 2.1390000000121034e-06, 2.2219999999961715e-06, 2.1519999999775052e-06, 2.110999999999086e-06, 2.1530000000047345e-06, 2.097000000006455e-06, 2.138999999984348e-06, 2.1390000000121034e-06, 2.152000000005261e-06, 2.1390000000121034e-06, 2.1660000000256474e-06, 2.1669999999973655e-06, 2.152000000005261e-06, 2.165999999997892e-06, 2.1530000000047345e-06, 2.138999999984348e-06, 2.124999999991717e-06, 2.1530000000047345e-06, 2.110999999999086e-06, 2.152999999976979e-06, 2.167000000025121e-06, 2.152000000005261e-06, 2.1530000000047345e-06, 2.1530000000047345e-06, 2.1390000000121034e-06, 2.152999999976979e-06, 2.1669999999973655e-06, 2.1530000000047345e-06, 2.1390000000121034e-06, 2.1669999999973655e-06, 2.138999999984348e-06, 2.152999999976979e-06, 2.1669999999973655e-06]</msg>
<status status="PASS" starttime="20201112 12:27:21.132" endtime="20201112 12:27:21.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.120" endtime="20201112 12:27:21.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.143" endtime="20201112 12:27:21.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.152" endtime="20201112 12:27:21.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.147" endtime="20201112 12:27:21.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.139" endtime="20201112 12:27:21.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.572" endtime="20201112 12:27:21.177"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:20.445" endtime="20201112 12:27:21.180" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.199" endtime="20201112 12:27:21.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.195" endtime="20201112 12:27:21.223"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.256" endtime="20201112 12:27:21.271"></status>
</kw>
<msg timestamp="20201112 12:27:21.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.252" endtime="20201112 12:27:21.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.275" endtime="20201112 12:27:21.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.287" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:21.281" endtime="20201112 12:27:21.288"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:21.245" endtime="20201112 12:27:21.290"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:21.239" endtime="20201112 12:27:21.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.236" endtime="20201112 12:27:21.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:21.301" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:21.299" endtime="20201112 12:27:21.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.294" endtime="20201112 12:27:21.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.234" endtime="20201112 12:27:21.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.233" endtime="20201112 12:27:21.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.304" endtime="20201112 12:27:21.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.228" endtime="20201112 12:27:21.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.224" endtime="20201112 12:27:21.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.193" endtime="20201112 12:27:21.311"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.335" endtime="20201112 12:27:21.443"></status>
</kw>
<msg timestamp="20201112 12:27:21.445" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.331" endtime="20201112 12:27:21.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.451" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.447" endtime="20201112 12:27:21.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.453" endtime="20201112 12:27:21.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.324" endtime="20201112 12:27:21.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.318" endtime="20201112 12:27:21.460"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.464" endtime="20201112 12:27:21.469"></status>
</kw>
<msg timestamp="20201112 12:27:21.470" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:27:21.462" endtime="20201112 12:27:21.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.480" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:27:21.478" endtime="20201112 12:27:21.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.485" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:27:21.483" endtime="20201112 12:27:21.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.472" endtime="20201112 12:27:21.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.496" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:27:21.494" endtime="20201112 12:27:21.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.501" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:27:21.499" endtime="20201112 12:27:21.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.488" endtime="20201112 12:27:21.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.520" endtime="20201112 12:27:21.865"></status>
</kw>
<msg timestamp="20201112 12:27:21.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129596264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129608667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.516" endtime="20201112 12:27:21.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129596264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129608667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.874" endtime="20201112 12:27:21.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.893" endtime="20201112 12:27:21.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.509" endtime="20201112 12:27:21.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.504" endtime="20201112 12:27:21.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.910" level="INFO">${RESULT} = [{'time': 0.129608667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2403000000021924e-05, 'source_diff': 1.2403000000021924e-05}, {'time': 0.131375139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:21.901" endtime="20201112 12:27:21.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:21.943" level="INFO">${OVERHEAD} = {'time': [0.129608667, 0.131375139, 0.133149208, 0.134916931, 0.136683556, 0.138455556, 0.140224111, 0.141992667, 0.143762583, 0.145536111, 0.147304278, 0.149075542, 0.150847222, 0.152619194, 0.154392...</msg>
<status status="PASS" starttime="20201112 12:27:21.912" endtime="20201112 12:27:21.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.954" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:27:21.952" endtime="20201112 12:27:21.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.960" level="INFO">VALUE: [1.2403000000021924e-05, 1.2402999999994169e-05, 1.2401999999994695e-05, 1.2402999999994169e-05, 1.2417000000014555e-05, 1.2402999999994169e-05, 1.2430000000007713e-05, 1.2402999999994169e-05, 1.2401999999994695e-05, 1.24169999999868e-05, 1.2417000000014555e-05, 1.2347999999995363e-05, 1.2402999999994169e-05, 1.240200000002245e-05, 1.2416000000015082e-05, 1.2346999999995889e-05, 1.2402999999994169e-05, 1.2416000000015082e-05, 1.2444000000000344e-05, 1.2402999999994169e-05, 1.2402999999994169e-05, 1.2416000000015082e-05, 1.2402999999994169e-05, 1.2417000000014555e-05, 1.2457999999992975e-05, 1.2416000000015082e-05, 1.2402999999994169e-05, 1.2430000000007713e-05, 1.24169999999868e-05, 1.2402999999994169e-05, 1.2402999999994169e-05, 1.2401999999994695e-05, 1.2401999999994695e-05, 1.2402999999994169e-05, 1.2402999999994169e-05, 1.2346999999995889e-05, 1.2402999999994169e-05, 1.2332999999975502e-05, 1.2388000000002064e-05, 1.24169999999868e-05, 1.2402999999994169e-05, 1.24169999999868e-05, 1.2403000000021924e-05, 1.2417000000014555e-05, 1.2431000000007186e-05, 1.2417000000014555e-05, 1.24169999999868e-05, 1.2402999999994169e-05, 1.2444000000000344e-05, 1.2333000000003258e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.956" endtime="20201112 12:27:21.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.945" endtime="20201112 12:27:21.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.968" endtime="20201112 12:27:21.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.976" endtime="20201112 12:27:21.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.972" endtime="20201112 12:27:22.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.964" endtime="20201112 12:27:22.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.313" endtime="20201112 12:27:22.002"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:21.186" endtime="20201112 12:27:22.005" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.024" endtime="20201112 12:27:22.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.020" endtime="20201112 12:27:22.047"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.081" endtime="20201112 12:27:22.101"></status>
</kw>
<msg timestamp="20201112 12:27:22.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.077" endtime="20201112 12:27:22.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.109" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.105" endtime="20201112 12:27:22.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.116" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:22.111" endtime="20201112 12:27:22.117"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:22.070" endtime="20201112 12:27:22.119"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:22.063" endtime="20201112 12:27:22.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.060" endtime="20201112 12:27:22.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:22.129" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:22.127" endtime="20201112 12:27:22.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.123" endtime="20201112 12:27:22.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.059" endtime="20201112 12:27:22.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.057" endtime="20201112 12:27:22.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.132" endtime="20201112 12:27:22.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.053" endtime="20201112 12:27:22.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.049" endtime="20201112 12:27:22.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.017" endtime="20201112 12:27:22.139"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.162" endtime="20201112 12:27:22.473"></status>
</kw>
<msg timestamp="20201112 12:27:22.474" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.159" endtime="20201112 12:27:22.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.480" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.476" endtime="20201112 12:27:22.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.482" endtime="20201112 12:27:22.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.152" endtime="20201112 12:27:22.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.146" endtime="20201112 12:27:22.489"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.494" endtime="20201112 12:27:22.498"></status>
</kw>
<msg timestamp="20201112 12:27:22.499" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:27:22.491" endtime="20201112 12:27:22.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.509" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:27:22.507" endtime="20201112 12:27:22.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.513" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:27:22.511" endtime="20201112 12:27:22.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.501" endtime="20201112 12:27:22.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.525" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:27:22.523" endtime="20201112 12:27:22.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.529" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:27:22.527" endtime="20201112 12:27:22.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.517" endtime="20201112 12:27:22.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.548" endtime="20201112 12:27:22.886"></status>
</kw>
<msg timestamp="20201112 12:27:22.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135440125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135462958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.544" endtime="20201112 12:27:22.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135440125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135462958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.896" endtime="20201112 12:27:22.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.914" endtime="20201112 12:27:22.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.537" endtime="20201112 12:27:22.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.533" endtime="20201112 12:27:22.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.931" level="INFO">${RESULT} = [{'time': 0.135462958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.283299999999988e-05, 'source_diff': 2.283299999999988e-05}, {'time': 0.14129425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:22.922" endtime="20201112 12:27:22.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:27:22.963" level="INFO">${OVERHEAD} = {'time': [0.135462958, 0.14129425, 0.147127833, 0.152960528, 0.158793472, 0.164628472, 0.170465875, 0.176298139, 0.182135569, 0.187969514, 0.193803389, 0.199634694, 0.205469625, 0.211305417, 0.2171406...</msg>
<status status="PASS" starttime="20201112 12:27:22.933" endtime="20201112 12:27:22.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.974" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:27:22.972" endtime="20201112 12:27:22.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.980" level="INFO">VALUE: [2.283299999999988e-05, 2.281900000000725e-05, 2.283299999999988e-05, 2.2833999999999355e-05, 2.2846999999992512e-05, 2.2846999999992512e-05, 2.2902999999990792e-05, 2.2860999999985143e-05, 2.2860999999985143e-05, 2.2846999999992512e-05, 2.2860999999985143e-05, 2.2846999999992512e-05, 2.2860999999985143e-05, 2.287500000000553e-05, 2.28610000000129e-05, 2.28610000000129e-05, 2.2846999999992512e-05, 2.2860999999985143e-05, 2.281900000000725e-05, 2.28610000000129e-05, 2.283299999999988e-05, 2.286199999995686e-05, 2.2860999999985143e-05, 2.283299999999988e-05, 2.2846999999992512e-05, 2.283299999999988e-05, 2.284800000001974e-05, 2.2847000000048023e-05, 2.2846999999992512e-05, 2.281900000000725e-05, 2.2846999999992512e-05, 2.280600000004185e-05, 2.283299999999988e-05, 2.2846999999992512e-05, 2.283299999999988e-05, 2.2792000000049217e-05, 2.2846999999992512e-05, 2.2847000000048023e-05, 2.2846999999992512e-05, 2.2860999999985143e-05, 2.2861000000040654e-05, 2.2846999999992512e-05, 2.28339999999716e-05, 2.2846999999992512e-05, 2.283299999999988e-05, 2.2819999999978968e-05, 2.283299999999988e-05, 2.2874999999977774e-05, 2.2888999999970405e-05, 2.2862000000012372e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.976" endtime="20201112 12:27:22.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.965" endtime="20201112 12:27:22.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.989" endtime="20201112 12:27:22.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.997" endtime="20201112 12:27:23.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.992" endtime="20201112 12:27:23.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.984" endtime="20201112 12:27:23.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.141" endtime="20201112 12:27:23.022"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:22.011" endtime="20201112 12:27:23.025" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:51.168" endtime="20201112 12:27:23.046"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.219" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:27:23.234" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:27:25.150" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:27:23.216" endtime="20201112 12:27:25.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.156" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:27:25.153" endtime="20201112 12:27:25.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.213" endtime="20201112 12:27:25.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.163" endtime="20201112 12:27:25.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.161" endtime="20201112 12:27:25.494"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.524" endtime="20201112 12:27:25.539"></status>
</kw>
<msg timestamp="20201112 12:27:25.540" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.520" endtime="20201112 12:27:25.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.547" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.543" endtime="20201112 12:27:25.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.553" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:25.549" endtime="20201112 12:27:25.554"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:25.514" endtime="20201112 12:27:25.556"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:25.509" endtime="20201112 12:27:25.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.505" endtime="20201112 12:27:25.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:25.566" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:25.564" endtime="20201112 12:27:25.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.560" endtime="20201112 12:27:25.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.504" endtime="20201112 12:27:25.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.502" endtime="20201112 12:27:25.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.569" endtime="20201112 12:27:25.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.499" endtime="20201112 12:27:25.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.576" endtime="20201112 12:27:25.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.495" endtime="20201112 12:27:25.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.209" endtime="20201112 12:27:25.582"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.598" endtime="20201112 12:27:25.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.594" endtime="20201112 12:27:25.621"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.654" endtime="20201112 12:27:25.669"></status>
</kw>
<msg timestamp="20201112 12:27:25.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.651" endtime="20201112 12:27:25.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.673" endtime="20201112 12:27:25.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.683" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:25.679" endtime="20201112 12:27:25.684"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:25.643" endtime="20201112 12:27:25.686"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:25.637" endtime="20201112 12:27:25.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.635" endtime="20201112 12:27:25.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:25.696" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:25.695" endtime="20201112 12:27:25.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.690" endtime="20201112 12:27:25.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.633" endtime="20201112 12:27:25.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.631" endtime="20201112 12:27:25.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.700" endtime="20201112 12:27:25.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.627" endtime="20201112 12:27:25.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.623" endtime="20201112 12:27:25.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.589" endtime="20201112 12:27:25.707"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.733" endtime="20201112 12:27:25.747"></status>
</kw>
<msg timestamp="20201112 12:27:25.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.729" endtime="20201112 12:27:25.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.750" endtime="20201112 12:27:25.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.756" endtime="20201112 12:27:25.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.722" endtime="20201112 12:27:25.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.716" endtime="20201112 12:27:25.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.782" endtime="20201112 12:27:26.129"></status>
</kw>
<msg timestamp="20201112 12:27:26.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125937472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125954403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.778" endtime="20201112 12:27:26.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125937472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125954403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.138" endtime="20201112 12:27:26.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.157" endtime="20201112 12:27:26.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.769" endtime="20201112 12:27:26.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.765" endtime="20201112 12:27:26.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.174" level="INFO">${RESULT} = [{'time': 0.125954403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.693099999999781e-05, 'source_diff': 1.693099999999781e-05}, {'time': 0.1259815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:26.165" endtime="20201112 12:27:26.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.205" level="INFO">${ACCURACY} = {'time': [0.125954403, 0.1259815, 0.1260065, 0.126031639, 0.126055583, 0.126078736, 0.126106764, 0.126133861, 0.126155792, 0.126183889, 0.126209986, 0.126237097, 0.126265042, 0.126288181, 0.126313167,...</msg>
<status status="PASS" starttime="20201112 12:27:26.176" endtime="20201112 12:27:26.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.217" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.214" endtime="20201112 12:27:26.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.223" level="INFO">VALUE: [1.693099999999781e-05, 1.6777999999995075e-05, 1.708300000000107e-05, 1.70969999999937e-05, 1.6764000000002444e-05, 1.6582999999986692e-05, 1.6764000000002444e-05, 1.706900000000844e-05, 1.6597999999978796e-05, 1.643099999998343e-05, 1.6929999999998335e-05, 1.740299999999917e-05, 1.6749999999982057e-05, 1.6569999999993534e-05, 1.726400000001682e-05, 1.683299999999388e-05, 1.7249999999996435e-05, 1.6486000000009993e-05, 1.726400000001682e-05, 1.6902000000013073e-05, 1.6737000000016655e-05, 1.6749999999982057e-05, 1.6791000000015988e-05, 1.64169999999908e-05, 1.6749999999982057e-05, 1.7249999999996435e-05, 1.6583000000014447e-05, 1.70969999999937e-05, 1.6750000000009813e-05, 1.7236000000003804e-05, 1.7070000000007912e-05, 1.6903000000012547e-05, 1.708300000000107e-05, 1.658400000001392e-05, 1.690299999998479e-05, 1.6847000000014267e-05, 1.6749999999982057e-05, 1.6763999999974688e-05, 1.7111000000014087e-05, 1.673600000001718e-05, 1.6764000000002444e-05, 1.7249999999996435e-05, 1.7111000000014087e-05, 1.6431000000011187e-05, 1.659700000000708e-05, 1.7249999999996435e-05, 1.6943999999990966e-05, 1.7263999999989066e-05, 1.7084000000000543e-05, 1.661099999999971e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.219" endtime="20201112 12:27:26.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.207" endtime="20201112 12:27:26.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.233" endtime="20201112 12:27:26.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.241" endtime="20201112 12:27:26.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.237" endtime="20201112 12:27:26.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.228" endtime="20201112 12:27:26.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.712" endtime="20201112 12:27:26.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.710" endtime="20201112 12:27:26.267"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.289" endtime="20201112 12:27:26.303"></status>
</kw>
<msg timestamp="20201112 12:27:26.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.286" endtime="20201112 12:27:26.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.307" endtime="20201112 12:27:26.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.313" endtime="20201112 12:27:26.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.279" endtime="20201112 12:27:26.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.273" endtime="20201112 12:27:26.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.336" endtime="20201112 12:27:26.669"></status>
</kw>
<msg timestamp="20201112 12:27:26.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039665667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039682222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.333" endtime="20201112 12:27:26.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039665667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039682222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.679" endtime="20201112 12:27:26.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.698" endtime="20201112 12:27:26.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.326" endtime="20201112 12:27:26.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.321" endtime="20201112 12:27:26.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.715" level="INFO">${RESULT} = [{'time': 0.039682222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.655500000000143e-05, 'source_diff': 1.655500000000143e-05}, {'time': 0.039709306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.706" endtime="20201112 12:27:26.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.748" level="INFO">${ACCURACY} = {'time': [0.039682222, 0.039709306, 0.039737375, 0.039759347, 0.039786528, 0.0398095, 0.039831569, 0.039856681, 0.039879681, 0.039903639, 0.039931819, 0.03995475, 0.039980833, 0.040007861, 0.040036014...</msg>
<status status="PASS" starttime="20201112 12:27:26.717" endtime="20201112 12:27:26.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.760" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.757" endtime="20201112 12:27:26.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.765" level="INFO">VALUE: [1.655500000000143e-05, 1.7084000000000543e-05, 1.709700000000064e-05, 1.654100000000186e-05, 1.6750000000002874e-05, 1.637499999999903e-05, 1.6749999999995935e-05, 1.7070000000000973e-05, 1.7250000000003374e-05, 1.6499999999995685e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.711100000000021e-05, 1.6929999999998335e-05, 1.709700000000064e-05, 1.6556000000000903e-05, 1.659700000000014e-05, 1.7098000000000113e-05, 1.659700000000014e-05, 1.7249999999996435e-05, 1.708300000000107e-05, 1.6749999999995935e-05, 1.6473000000002957e-05, 1.7098000000000113e-05, 1.6764000000002444e-05, 1.7236000000003804e-05, 1.691699999999824e-05, 1.6584000000000043e-05, 1.7250000000003374e-05, 1.640299999999817e-05, 1.640299999999817e-05, 1.6750000000002874e-05, 1.6459000000003388e-05, 1.711100000000021e-05, 1.6915999999998765e-05, 1.655500000000143e-05, 1.708300000000107e-05, 1.7263999999996005e-05, 1.7264000000002944e-05, 1.6750000000002874e-05, 1.6570000000000473e-05, 1.7264000000002944e-05, 1.7235999999996865e-05, 1.643099999999731e-05, 1.658300000000057e-05, 1.6931000000004748e-05, 1.7320000000001223e-05, 1.6764000000002444e-05, 1.7165999999999015e-05, 1.6764000000002444e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.762" endtime="20201112 12:27:26.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.750" endtime="20201112 12:27:26.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.775" endtime="20201112 12:27:26.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.783" endtime="20201112 12:27:26.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.779" endtime="20201112 12:27:26.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.770" endtime="20201112 12:27:26.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.269" endtime="20201112 12:27:26.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.268" endtime="20201112 12:27:26.809"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.831" endtime="20201112 12:27:26.846"></status>
</kw>
<msg timestamp="20201112 12:27:26.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.828" endtime="20201112 12:27:26.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.849" endtime="20201112 12:27:26.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.856" endtime="20201112 12:27:26.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.821" endtime="20201112 12:27:26.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.815" endtime="20201112 12:27:26.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.879" endtime="20201112 12:27:27.212"></status>
</kw>
<msg timestamp="20201112 12:27:27.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039978833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03999525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:26.876" endtime="20201112 12:27:27.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039978833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03999525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:27.222" endtime="20201112 12:27:27.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.241" endtime="20201112 12:27:27.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.869" endtime="20201112 12:27:27.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.864" endtime="20201112 12:27:27.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.261" level="INFO">${RESULT} = [{'time': 0.03999525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6417000000004678e-05, 'source_diff': 1.6417000000004678e-05}, {'time': 0.040021403, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:27.251" endtime="20201112 12:27:27.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.292" level="INFO">${ACCURACY} = {'time': [0.03999525, 0.040021403, 0.040046375, 0.040071361, 0.040097458, 0.040124514, 0.040148681, 0.040175764, 0.040197694, 0.040225792, 0.040248861, 0.040273944, 0.040301972, 0.040326958, 0.0403500...</msg>
<status status="PASS" starttime="20201112 12:27:27.263" endtime="20201112 12:27:27.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.303" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.301" endtime="20201112 12:27:27.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.309" level="INFO">VALUE: [1.6417000000004678e-05, 1.644499999999688e-05, 1.6972000000003984e-05, 1.658300000000057e-05, 1.6916000000005704e-05, 1.661099999999971e-05, 1.7084000000000543e-05, 1.6750000000002874e-05, 1.6749999999995935e-05, 1.6348000000006302e-05, 1.661099999999971e-05, 1.708300000000107e-05, 1.708300000000107e-05, 1.6722000000003734e-05, 1.6403000000005108e-05, 1.6749999999995935e-05, 1.6417000000004678e-05, 1.6417000000004678e-05, 1.7070000000000973e-05, 1.7264000000002944e-05, 1.708300000000107e-05, 1.640299999999817e-05, 1.6556000000000903e-05, 1.708299999999413e-05, 1.7277999999995575e-05, 1.6764000000002444e-05, 1.7249999999996435e-05, 1.6749999999995935e-05, 1.637499999999903e-05, 1.691699999999824e-05, 1.658300000000057e-05, 1.6917000000005178e-05, 1.708300000000107e-05, 1.6429999999997835e-05, 1.6750000000002874e-05, 1.6931000000004748e-05, 1.708300000000107e-05, 1.7415999999999265e-05, 1.677700000000254e-05, 1.6929999999998335e-05, 1.6916000000005704e-05, 1.6903000000005608e-05, 1.680500000000168e-05, 1.693099999999781e-05, 1.6778000000002014e-05, 1.6430000000004774e-05, 1.691699999999824e-05, 1.7445000000004818e-05, 1.6431000000004248e-05, 1.7098000000000113e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.306" endtime="20201112 12:27:27.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.294" endtime="20201112 12:27:27.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.318" endtime="20201112 12:27:27.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.327" endtime="20201112 12:27:27.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.322" endtime="20201112 12:27:27.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.314" endtime="20201112 12:27:27.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.811" endtime="20201112 12:27:27.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.810" endtime="20201112 12:27:27.353"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.375" endtime="20201112 12:27:27.390"></status>
</kw>
<msg timestamp="20201112 12:27:27.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.372" endtime="20201112 12:27:27.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.393" endtime="20201112 12:27:27.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.399" endtime="20201112 12:27:27.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.365" endtime="20201112 12:27:27.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.359" endtime="20201112 12:27:27.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.423" endtime="20201112 12:27:27.757"></status>
</kw>
<msg timestamp="20201112 12:27:27.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040212597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040229514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.419" endtime="20201112 12:27:27.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040212597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040229514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.767" endtime="20201112 12:27:27.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.786" endtime="20201112 12:27:27.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.412" endtime="20201112 12:27:27.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.408" endtime="20201112 12:27:27.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.805" level="INFO">${RESULT} = [{'time': 0.040229514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.691699999999824e-05, 'source_diff': 1.691699999999824e-05}, {'time': 0.040254556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.795" endtime="20201112 12:27:27.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.836" level="INFO">${ACCURACY} = {'time': [0.040229514, 0.040254556, 0.040277597, 0.040305597, 0.040329583, 0.040356708, 0.040384722, 0.04040975, 0.040437847, 0.040460931, 0.040486014, 0.040509056, 0.040538111, 0.040564222, 0.0405871...</msg>
<status status="PASS" starttime="20201112 12:27:27.807" endtime="20201112 12:27:27.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.846" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.844" endtime="20201112 12:27:27.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.852" level="INFO">VALUE: [1.691699999999824e-05, 1.647299999999602e-05, 1.6429999999997835e-05, 1.6429999999997835e-05, 1.6901999999999195e-05, 1.6513999999995255e-05, 1.6721999999996795e-05, 1.659700000000014e-05, 1.63889999999986e-05, 1.641699999999774e-05, 1.637499999999903e-05, 1.7098000000000113e-05, 1.7278000000002514e-05, 1.6957999999997475e-05, 1.694499999999738e-05, 1.6389000000005538e-05, 1.6916000000005704e-05, 1.6722000000003734e-05, 1.6443999999997405e-05, 1.6750000000002874e-05, 1.658300000000057e-05, 1.6749999999995935e-05, 1.658300000000057e-05, 1.68889999999991e-05, 1.6763999999995505e-05, 1.6708000000004164e-05, 1.7250000000003374e-05, 1.659700000000014e-05, 1.7236000000003804e-05, 1.659700000000014e-05, 1.691699999999824e-05, 1.6556000000000903e-05, 1.658300000000057e-05, 1.6625000000006218e-05, 1.6792000000001583e-05, 1.6584000000000043e-05, 1.726299999999653e-05, 1.6917000000005178e-05, 1.6584000000000043e-05, 1.7098000000000113e-05, 1.7250000000003374e-05, 1.6929999999998335e-05, 1.659700000000014e-05, 1.6764000000002444e-05, 1.691699999999824e-05, 1.6401999999998695e-05, 1.691699999999824e-05, 1.6597999999999613e-05, 1.70690000000015e-05, 1.6569000000001e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.849" endtime="20201112 12:27:27.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.838" endtime="20201112 12:27:27.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.862" endtime="20201112 12:27:27.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.870" endtime="20201112 12:27:27.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.865" endtime="20201112 12:27:27.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.857" endtime="20201112 12:27:27.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.355" endtime="20201112 12:27:27.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.353" endtime="20201112 12:27:27.896"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.918" endtime="20201112 12:27:27.933"></status>
</kw>
<msg timestamp="20201112 12:27:27.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.915" endtime="20201112 12:27:27.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.936" endtime="20201112 12:27:27.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.942" endtime="20201112 12:27:27.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.908" endtime="20201112 12:27:27.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.902" endtime="20201112 12:27:27.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.966" endtime="20201112 12:27:28.301"></status>
</kw>
<msg timestamp="20201112 12:27:28.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039981681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039998931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.963" endtime="20201112 12:27:28.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039981681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039998931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.311" endtime="20201112 12:27:28.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.330" endtime="20201112 12:27:28.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.955" endtime="20201112 12:27:28.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.951" endtime="20201112 12:27:28.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.348" level="INFO">${RESULT} = [{'time': 0.039998931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7250000000003374e-05, 'source_diff': 1.7250000000003374e-05}, {'time': 0.040023069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:28.339" endtime="20201112 12:27:28.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.379" level="INFO">${ACCURACY} = {'time': [0.039998931, 0.040023069, 0.040048056, 0.040074167, 0.040099222, 0.040127222, 0.040153208, 0.040176306, 0.040198375, 0.040225389, 0.040248486, 0.040275569, 0.040302514, 0.040329639, 0.040353...</msg>
<status status="PASS" starttime="20201112 12:27:28.351" endtime="20201112 12:27:28.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.390" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.388" endtime="20201112 12:27:28.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.396" level="INFO">VALUE: [1.7250000000003374e-05, 1.726300000000347e-05, 1.698699999999609e-05, 1.6556000000000903e-05, 1.690299999999867e-05, 1.6735999999996365e-05, 1.658300000000057e-05, 1.6723000000003208e-05, 1.6736000000003304e-05, 1.658300000000057e-05, 1.7250000000003374e-05, 1.676299999999603e-05, 1.7249999999996435e-05, 1.691699999999824e-05, 1.6403000000005108e-05, 1.658299999999363e-05, 1.6736000000003304e-05, 1.690299999999867e-05, 1.726300000000347e-05, 1.6401999999998695e-05, 1.6584000000000043e-05, 1.7249999999996435e-05, 1.6443999999997405e-05, 1.659700000000014e-05, 1.709700000000064e-05, 1.726300000000347e-05, 1.6556000000000903e-05, 1.6750000000002874e-05, 1.6749999999995935e-05, 1.658300000000057e-05, 1.63889999999986e-05, 1.7236000000003804e-05, 1.744499999999788e-05, 1.7028000000002264e-05, 1.6750000000002874e-05, 1.7263999999996005e-05, 1.6430000000004774e-05, 1.679100000000211e-05, 1.676299999999603e-05, 1.6444000000004344e-05, 1.6749999999995935e-05, 1.659700000000014e-05, 1.711100000000021e-05, 1.7070000000000973e-05, 1.6736000000003304e-05, 1.70690000000015e-05, 1.6556000000000903e-05, 1.7249999999996435e-05, 1.637499999999903e-05, 1.6915999999998765e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.393" endtime="20201112 12:27:28.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.381" endtime="20201112 12:27:28.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.405" endtime="20201112 12:27:28.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.414" endtime="20201112 12:27:28.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.409" endtime="20201112 12:27:28.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.401" endtime="20201112 12:27:28.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.898" endtime="20201112 12:27:28.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.897" endtime="20201112 12:27:28.440"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.462" endtime="20201112 12:27:28.479"></status>
</kw>
<msg timestamp="20201112 12:27:28.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.459" endtime="20201112 12:27:28.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.482" endtime="20201112 12:27:28.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.488" endtime="20201112 12:27:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.452" endtime="20201112 12:27:28.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.446" endtime="20201112 12:27:28.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.511" endtime="20201112 12:27:28.857"></status>
</kw>
<msg timestamp="20201112 12:27:28.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040209444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040225861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.508" endtime="20201112 12:27:28.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040209444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040225861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.867" endtime="20201112 12:27:28.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.885" endtime="20201112 12:27:28.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.501" endtime="20201112 12:27:28.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.496" endtime="20201112 12:27:28.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.904" level="INFO">${RESULT} = [{'time': 0.040225861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6417000000004678e-05, 'source_diff': 1.6417000000004678e-05}, {'time': 0.040248986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:28.895" endtime="20201112 12:27:28.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.937" level="INFO">${ACCURACY} = {'time': [0.040225861, 0.040248986, 0.040273, 0.040299, 0.040322028, 0.040348236, 0.040371236, 0.040393181, 0.040416264, 0.040441264, 0.040467347, 0.040489375, 0.040514542, 0.040541597, 0.040568681, 0...</msg>
<status status="PASS" starttime="20201112 12:27:28.906" endtime="20201112 12:27:28.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.948" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.946" endtime="20201112 12:27:28.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.954" level="INFO">VALUE: [1.6417000000004678e-05, 1.708300000000107e-05, 1.6875000000006468e-05, 1.691699999999824e-05, 1.7070000000000973e-05, 1.6917000000005178e-05, 1.6749999999995935e-05, 1.637499999999903e-05, 1.694499999999738e-05, 1.658300000000057e-05, 1.6569000000001e-05, 1.640299999999817e-05, 1.690299999999867e-05, 1.7249999999996435e-05, 1.7278000000002514e-05, 1.690299999999867e-05, 1.7084000000000543e-05, 1.6736000000003304e-05, 1.7056000000001403e-05, 1.6917000000005178e-05, 1.693099999999781e-05, 1.7222000000004234e-05, 1.6750000000002874e-05, 1.677700000000254e-05, 1.643099999999731e-05, 1.713899999999935e-05, 1.6903000000005608e-05, 1.6749999999995935e-05, 1.6985999999996615e-05, 1.658300000000057e-05, 1.691699999999824e-05, 1.687499999999953e-05, 1.691699999999824e-05, 1.6584000000000043e-05, 1.7249999999996435e-05, 1.7221999999997295e-05, 1.7263999999996005e-05, 1.6749999999995935e-05, 1.731900000000175e-05, 1.6915999999998765e-05, 1.709700000000064e-05, 1.661099999999971e-05, 1.6750000000002874e-05, 1.658300000000057e-05, 1.661099999999971e-05, 1.708300000000107e-05, 1.7235999999996865e-05, 1.6915999999998765e-05, 1.7277999999995575e-05, 1.729100000000261e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.951" endtime="20201112 12:27:28.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.939" endtime="20201112 12:27:28.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.963" endtime="20201112 12:27:28.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.972" endtime="20201112 12:27:28.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.967" endtime="20201112 12:27:28.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.959" endtime="20201112 12:27:28.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.442" endtime="20201112 12:27:28.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.440" endtime="20201112 12:27:28.998"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.021" endtime="20201112 12:27:29.037"></status>
</kw>
<msg timestamp="20201112 12:27:29.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.017" endtime="20201112 12:27:29.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.040" endtime="20201112 12:27:29.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.046" endtime="20201112 12:27:29.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.010" endtime="20201112 12:27:29.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.004" endtime="20201112 12:27:29.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.070" endtime="20201112 12:27:29.409"></status>
</kw>
<msg timestamp="20201112 12:27:29.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:29.066" endtime="20201112 12:27:29.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:29.419" endtime="20201112 12:27:29.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.437" endtime="20201112 12:27:29.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.059" endtime="20201112 12:27:29.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.054" endtime="20201112 12:27:29.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.455" level="INFO">${RESULT} = [{'time': 0.0404585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.708300000000107e-05, 'source_diff': 1.708300000000107e-05}, {'time': 0.040487528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:29.446" endtime="20201112 12:27:29.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.487" level="INFO">${ACCURACY} = {'time': [0.0404585, 0.040487528, 0.040512639, 0.040536597, 0.04056375, 0.040585764, 0.040612889, 0.040638819, 0.040665889, 0.040691986, 0.040716069, 0.040738069, 0.040761056, 0.04078525, 0.040810292,...</msg>
<status status="PASS" starttime="20201112 12:27:29.457" endtime="20201112 12:27:29.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.498" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.496" endtime="20201112 12:27:29.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.503" level="INFO">VALUE: [1.708300000000107e-05, 1.7250000000003374e-05, 1.708300000000107e-05, 1.6764000000002444e-05, 1.7236000000003804e-05, 1.658300000000057e-05, 1.711100000000021e-05, 1.701299999999628e-05, 1.7249999999996435e-05, 1.711100000000021e-05, 1.6929999999998335e-05, 1.658300000000057e-05, 1.641699999999774e-05, 1.659700000000014e-05, 1.6597999999999613e-05, 1.708300000000107e-05, 1.7151999999999445e-05, 1.708300000000107e-05, 1.6750000000002874e-05, 1.7250000000003374e-05, 1.640299999999817e-05, 1.691699999999824e-05, 1.693099999999781e-05, 1.7250000000003374e-05, 1.712499999999978e-05, 1.6569000000001e-05, 1.6764000000002444e-05, 1.6750000000002874e-05, 1.7084000000000543e-05, 1.6917000000005178e-05, 1.6735999999996365e-05, 1.63889999999986e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.6778000000002014e-05, 1.7306000000001653e-05, 1.6487000000002527e-05, 1.726299999999653e-05, 1.7027999999995325e-05, 1.7235999999996865e-05, 1.661099999999971e-05, 1.7249999999996435e-05, 1.658300000000057e-05, 1.641699999999774e-05, 1.70690000000015e-05, 1.6764000000002444e-05, 1.643099999999731e-05, 1.6584000000000043e-05, 1.7221999999997295e-05, 1.6736000000003304e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.500" endtime="20201112 12:27:29.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.489" endtime="20201112 12:27:29.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.518" endtime="20201112 12:27:29.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.526" endtime="20201112 12:27:29.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.522" endtime="20201112 12:27:29.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.513" endtime="20201112 12:27:29.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.000" endtime="20201112 12:27:29.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.999" endtime="20201112 12:27:29.552"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.574" endtime="20201112 12:27:29.591"></status>
</kw>
<msg timestamp="20201112 12:27:29.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.571" endtime="20201112 12:27:29.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.594" endtime="20201112 12:27:29.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.600" endtime="20201112 12:27:29.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.564" endtime="20201112 12:27:29.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.558" endtime="20201112 12:27:29.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.624" endtime="20201112 12:27:29.971"></status>
</kw>
<msg timestamp="20201112 12:27:29.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040050944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040074986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.620" endtime="20201112 12:27:29.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040050944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040074986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.980" endtime="20201112 12:27:29.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.999" endtime="20201112 12:27:30.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.613" endtime="20201112 12:27:30.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.608" endtime="20201112 12:27:30.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.016" level="INFO">${RESULT} = [{'time': 0.040074986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4042000000001895e-05, 'source_diff': 2.4042000000001895e-05}, {'time': 0.040107069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:30.007" endtime="20201112 12:27:30.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.049" level="INFO">${ACCURACY} = {'time': [0.040074986, 0.040107069, 0.040139111, 0.040175097, 0.04020625, 0.040238333, 0.040267403, 0.040300403, 0.0403355, 0.040369514, 0.040401764, 0.040435778, 0.040466778, 0.040501847, 0.040532014...</msg>
<status status="PASS" starttime="20201112 12:27:30.019" endtime="20201112 12:27:30.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.060" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.058" endtime="20201112 12:27:30.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.065" level="INFO">VALUE: [2.4042000000001895e-05, 2.437500000000009e-05, 2.363899999999891e-05, 2.4207999999997787e-05, 2.3528000000001825e-05, 2.436100000000052e-05, 2.3542000000001395e-05, 2.368099999999762e-05, 2.3514000000002255e-05, 2.4208000000004726e-05, 2.39169999999983e-05, 2.4042000000001895e-05, 2.37090000000037e-05, 2.337499999999909e-05, 2.3707999999997287e-05, 2.420899999999726e-05, 2.4070000000001035e-05, 2.3693999999997717e-05, 2.4236000000003866e-05, 2.387499999999959e-05, 2.4000000000003185e-05, 2.3832999999993942e-05, 2.3527999999994886e-05, 2.404100000000242e-05, 2.4028000000002325e-05, 2.436100000000052e-05, 2.37090000000037e-05, 2.386100000000002e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.387499999999959e-05, 2.4056000000001465e-05, 2.402700000000285e-05, 2.369499999999719e-05, 2.4013999999995816e-05, 2.387500000000653e-05, 2.3972000000004046e-05, 2.405500000000199e-05, 2.3693999999997717e-05, 2.386100000000002e-05, 2.337499999999909e-05, 2.4041999999994956e-05, 2.4207999999997787e-05, 2.337499999999909e-05, 2.3527999999994886e-05, 2.3542000000001395e-05, 2.437500000000009e-05, 2.3528000000001825e-05, 2.337499999999909e-05, 2.3707999999997287e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.062" endtime="20201112 12:27:30.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.051" endtime="20201112 12:27:30.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.075" endtime="20201112 12:27:30.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.083" endtime="20201112 12:27:30.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.079" endtime="20201112 12:27:30.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.070" endtime="20201112 12:27:30.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.554" endtime="20201112 12:27:30.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.553" endtime="20201112 12:27:30.109"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.132" endtime="20201112 12:27:30.148"></status>
</kw>
<msg timestamp="20201112 12:27:30.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.128" endtime="20201112 12:27:30.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.152" endtime="20201112 12:27:30.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.158" endtime="20201112 12:27:30.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.121" endtime="20201112 12:27:30.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.115" endtime="20201112 12:27:30.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.181" endtime="20201112 12:27:30.529"></status>
</kw>
<msg timestamp="20201112 12:27:30.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040217042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040240903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.178" endtime="20201112 12:27:30.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040217042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040240903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.539" endtime="20201112 12:27:30.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.558" endtime="20201112 12:27:30.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.171" endtime="20201112 12:27:30.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.166" endtime="20201112 12:27:30.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.575" level="INFO">${RESULT} = [{'time': 0.040240903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.386100000000002e-05, 'source_diff': 2.386100000000002e-05}, {'time': 0.04027, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201112 12:27:30.566" endtime="20201112 12:27:30.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.607" level="INFO">${ACCURACY} = {'time': [0.040240903, 0.04027, 0.040306, 0.040337097, 0.040371167, 0.04040425, 0.040436347, 0.040471403, 0.040506472, 0.040541694, 0.040571625, 0.040601792, 0.040633889, 0.040663861, 0.040698056, 0.0...</msg>
<status status="PASS" starttime="20201112 12:27:30.577" endtime="20201112 12:27:30.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.618" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.616" endtime="20201112 12:27:30.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.624" level="INFO">VALUE: [2.386100000000002e-05, 2.390299999999873e-05, 2.4222000000004296e-05, 2.4208000000004726e-05, 2.4028000000002325e-05, 2.4208000000004726e-05, 2.4040999999995483e-05, 2.419500000000463e-05, 2.3708000000004226e-05, 2.436100000000052e-05, 2.386100000000002e-05, 2.368099999999762e-05, 2.3528000000001825e-05, 2.3708000000004226e-05, 2.4056000000001465e-05, 2.39169999999983e-05, 2.390299999999873e-05, 2.388899999999916e-05, 2.3707999999997287e-05, 2.3542000000001395e-05, 2.419500000000463e-05, 2.3971999999997107e-05, 2.4040999999995483e-05, 2.387499999999959e-05, 2.337500000000603e-05, 2.436100000000052e-05, 2.4014000000002755e-05, 2.387499999999959e-05, 2.3541999999994456e-05, 2.431900000000181e-05, 2.3736000000003366e-05, 2.3528000000001825e-05, 2.4207999999997787e-05, 2.44169999999988e-05, 2.3542000000001395e-05, 2.4042000000001895e-05, 2.42090000000042e-05, 2.4014000000002755e-05, 2.4207999999997787e-05, 2.437500000000009e-05, 2.354100000000192e-05, 2.3528000000001825e-05, 2.4222000000004296e-05, 2.419500000000463e-05, 2.4042000000001895e-05, 2.3735999999996427e-05, 2.387499999999959e-05, 2.3665999999998577e-05, 2.437500000000009e-05, 2.386100000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.621" endtime="20201112 12:27:30.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.609" endtime="20201112 12:27:30.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.633" endtime="20201112 12:27:30.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.641" endtime="20201112 12:27:30.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.637" endtime="20201112 12:27:30.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.629" endtime="20201112 12:27:30.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.111" endtime="20201112 12:27:30.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.110" endtime="20201112 12:27:30.668"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.690" endtime="20201112 12:27:30.705"></status>
</kw>
<msg timestamp="20201112 12:27:30.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.687" endtime="20201112 12:27:30.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.708" endtime="20201112 12:27:30.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.715" endtime="20201112 12:27:30.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.680" endtime="20201112 12:27:30.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.674" endtime="20201112 12:27:30.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.738" endtime="20201112 12:27:31.073"></status>
</kw>
<msg timestamp="20201112 12:27:31.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040249736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040273111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.735" endtime="20201112 12:27:31.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040249736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040273111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.083" endtime="20201112 12:27:31.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.101" endtime="20201112 12:27:31.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.727" endtime="20201112 12:27:31.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.723" endtime="20201112 12:27:31.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.119" level="INFO">${RESULT} = [{'time': 0.040273111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.337499999999909e-05, 'source_diff': 2.337499999999909e-05}, {'time': 0.040303319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.110" endtime="20201112 12:27:31.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.150" level="INFO">${ACCURACY} = {'time': [0.040273111, 0.040303319, 0.040335278, 0.040366319, 0.0403985, 0.040428486, 0.040462667, 0.040493736, 0.040526778, 0.040559847, 0.040595861, 0.040626125, 0.040659097, 0.040689056, 0.04072126...</msg>
<status status="PASS" starttime="20201112 12:27:31.121" endtime="20201112 12:27:31.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.164" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.159" endtime="20201112 12:27:31.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.169" level="INFO">VALUE: [2.337499999999909e-05, 2.4054999999995053e-05, 2.4042000000001895e-05, 2.3540999999994983e-05, 2.4041999999994956e-05, 2.4042000000001895e-05, 2.436100000000052e-05, 2.386100000000002e-05, 2.437500000000009e-05, 2.4208000000004726e-05, 2.4221999999997357e-05, 2.440299999999923e-05, 2.4054999999995053e-05, 2.4028000000002325e-05, 2.3556000000000965e-05, 2.390299999999873e-05, 2.387499999999959e-05, 2.437500000000009e-05, 2.4207999999997787e-05, 2.369499999999719e-05, 2.387499999999959e-05, 2.4014000000002755e-05, 2.337499999999909e-05, 2.361099999999977e-05, 2.370899999999676e-05, 2.368099999999762e-05, 2.388899999999916e-05, 2.436100000000052e-05, 2.3542000000001395e-05, 2.354100000000192e-05, 2.4222000000004296e-05, 2.368099999999762e-05, 2.404100000000242e-05, 2.3528000000001825e-05, 2.4222000000004296e-05, 2.3721999999996857e-05, 2.4014000000002755e-05, 2.3528000000001825e-05, 2.38890000000061e-05, 2.352700000000235e-05, 2.337499999999909e-05, 2.3542000000001395e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.437500000000009e-05, 2.4040999999995483e-05, 2.438899999999966e-05, 2.369500000000413e-05, 2.3528000000001825e-05, 2.4221999999997357e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.166" endtime="20201112 12:27:31.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.152" endtime="20201112 12:27:31.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.179" endtime="20201112 12:27:31.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.187" endtime="20201112 12:27:31.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.183" endtime="20201112 12:27:31.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.174" endtime="20201112 12:27:31.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.670" endtime="20201112 12:27:31.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.668" endtime="20201112 12:27:31.213"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.236" endtime="20201112 12:27:31.251"></status>
</kw>
<msg timestamp="20201112 12:27:31.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.232" endtime="20201112 12:27:31.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.254" endtime="20201112 12:27:31.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.260" endtime="20201112 12:27:31.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.225" endtime="20201112 12:27:31.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.220" endtime="20201112 12:27:31.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.284" endtime="20201112 12:27:31.619"></status>
</kw>
<msg timestamp="20201112 12:27:31.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040133514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040157708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.280" endtime="20201112 12:27:31.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040133514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040157708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.629" endtime="20201112 12:27:31.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.648" endtime="20201112 12:27:31.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.273" endtime="20201112 12:27:31.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.269" endtime="20201112 12:27:31.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.665" level="INFO">${RESULT} = [{'time': 0.040157708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4193999999998217e-05, 'source_diff': 2.4193999999998217e-05}, {'time': 0.040192764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:31.656" endtime="20201112 12:27:31.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.697" level="INFO">${ACCURACY} = {'time': [0.040157708, 0.040192764, 0.040225847, 0.040255861, 0.040285958, 0.040316958, 0.040348042, 0.040383028, 0.040418139, 0.040448208, 0.040479222, 0.040512292, 0.040544444, 0.040575458, 0.040604...</msg>
<status status="PASS" starttime="20201112 12:27:31.667" endtime="20201112 12:27:31.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.708" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.705" endtime="20201112 12:27:31.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.713" level="INFO">VALUE: [2.4193999999998217e-05, 2.4207999999997787e-05, 2.3666000000005516e-05, 2.3513999999995316e-05, 2.386100000000002e-05, 2.338899999999866e-05, 2.369499999999719e-05, 2.4028000000002325e-05, 2.4056000000001465e-05, 2.402700000000285e-05, 2.365300000000542e-05, 2.422299999999683e-05, 2.4012999999996343e-05, 2.3708000000004226e-05, 2.3514000000002255e-05, 2.404100000000242e-05, 2.387499999999959e-05, 2.4041999999994956e-05, 2.35970000000002e-05, 2.351300000000278e-05, 2.354100000000192e-05, 2.386100000000002e-05, 2.3735999999996427e-05, 2.3722000000003796e-05, 2.388899999999916e-05, 2.4361999999999995e-05, 2.4027999999995386e-05, 2.42090000000042e-05, 2.416699999999855e-05, 2.42090000000042e-05, 2.338899999999866e-05, 2.334699999999995e-05, 2.3680000000005086e-05, 2.372300000000327e-05, 2.3693999999997717e-05, 2.333300000000038e-05, 2.387499999999959e-05, 2.3750000000002935e-05, 2.416700000000549e-05, 2.4026999999995913e-05, 2.388899999999916e-05, 2.3306000000000715e-05, 2.37770000000026e-05, 2.354100000000192e-05, 2.3707999999997287e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.387499999999959e-05, 2.3542000000001395e-05, 2.387499999999959e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.710" endtime="20201112 12:27:31.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.699" endtime="20201112 12:27:31.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.723" endtime="20201112 12:27:31.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.732" endtime="20201112 12:27:31.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.726" endtime="20201112 12:27:31.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.718" endtime="20201112 12:27:31.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.215" endtime="20201112 12:27:31.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.214" endtime="20201112 12:27:31.758"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.781" endtime="20201112 12:27:31.796"></status>
</kw>
<msg timestamp="20201112 12:27:31.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.777" endtime="20201112 12:27:31.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.800" endtime="20201112 12:27:31.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.806" endtime="20201112 12:27:31.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.770" endtime="20201112 12:27:31.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.764" endtime="20201112 12:27:31.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.830" endtime="20201112 12:27:32.165"></status>
</kw>
<msg timestamp="20201112 12:27:32.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040144667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040168375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.826" endtime="20201112 12:27:32.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040144667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040168375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.175" endtime="20201112 12:27:32.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.194" endtime="20201112 12:27:32.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.819" endtime="20201112 12:27:32.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.814" endtime="20201112 12:27:32.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.211" level="INFO">${RESULT} = [{'time': 0.040168375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3707999999997287e-05, 'source_diff': 2.3707999999997287e-05}, {'time': 0.040201361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:32.202" endtime="20201112 12:27:32.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.242" level="INFO">${ACCURACY} = {'time': [0.040168375, 0.040201361, 0.040234431, 0.040268556, 0.040302667, 0.040333778, 0.040369764, 0.040401764, 0.040432875, 0.040466958, 0.040498931, 0.040532, 0.040563042, 0.040598125, 0.040633181...</msg>
<status status="PASS" starttime="20201112 12:27:32.213" endtime="20201112 12:27:32.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.253" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.251" endtime="20201112 12:27:32.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.258" level="INFO">VALUE: [2.3707999999997287e-05, 2.333300000000038e-05, 2.337499999999909e-05, 2.4013999999995816e-05, 2.419499999999769e-05, 2.39169999999983e-05, 2.4236000000003866e-05, 2.3707999999997287e-05, 2.4028000000002325e-05, 2.386100000000002e-05, 2.3514000000002255e-05, 2.4193999999998217e-05, 2.4056000000001465e-05, 2.3528000000001825e-05, 2.369499999999719e-05, 2.3499999999995747e-05, 2.387499999999959e-05, 2.384700000000045e-05, 2.418099999999812e-05, 2.4207999999997787e-05, 2.4180000000005586e-05, 2.363899999999891e-05, 2.3665999999998577e-05, 2.369499999999719e-05, 2.386100000000002e-05, 2.4028000000002325e-05, 2.4013999999995816e-05, 2.3542000000001395e-05, 2.337500000000603e-05, 2.386100000000002e-05, 2.3764000000002505e-05, 2.4360999999993582e-05, 2.4042000000001895e-05, 2.4014000000002755e-05, 2.402700000000285e-05, 2.4193999999998217e-05, 2.437500000000009e-05, 2.4360999999993582e-05, 2.358300000000063e-05, 2.383300000000088e-05, 2.3750000000002935e-05, 2.440299999999923e-05, 2.3527999999994886e-05, 2.4208000000004726e-05, 2.434700000000095e-05, 2.3528000000001825e-05, 2.3540999999994983e-05, 2.336099999999952e-05, 2.387499999999959e-05, 2.386100000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.255" endtime="20201112 12:27:32.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.244" endtime="20201112 12:27:32.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.268" endtime="20201112 12:27:32.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.276" endtime="20201112 12:27:32.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.272" endtime="20201112 12:27:32.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.263" endtime="20201112 12:27:32.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.760" endtime="20201112 12:27:32.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.759" endtime="20201112 12:27:32.304"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.326" endtime="20201112 12:27:32.342"></status>
</kw>
<msg timestamp="20201112 12:27:32.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.323" endtime="20201112 12:27:32.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.345" endtime="20201112 12:27:32.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.351" endtime="20201112 12:27:32.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.316" endtime="20201112 12:27:32.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.310" endtime="20201112 12:27:32.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.374" endtime="20201112 12:27:32.710"></status>
</kw>
<msg timestamp="20201112 12:27:32.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040610736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040634431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.371" endtime="20201112 12:27:32.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040610736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040634431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.719" endtime="20201112 12:27:32.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.738" endtime="20201112 12:27:32.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.364" endtime="20201112 12:27:32.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.359" endtime="20201112 12:27:32.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.755" level="INFO">${RESULT} = [{'time': 0.040634431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.369499999999719e-05, 'source_diff': 2.369499999999719e-05}, {'time': 0.040664431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.746" endtime="20201112 12:27:32.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.786" level="INFO">${ACCURACY} = {'time': [0.040634431, 0.040664431, 0.040696431, 0.040726653, 0.040759667, 0.04079475, 0.040825792, 0.040855792, 0.040885806, 0.040918, 0.040951014, 0.040986056, 0.041019194, 0.041049222, 0.041082403,...</msg>
<status status="PASS" starttime="20201112 12:27:32.757" endtime="20201112 12:27:32.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.797" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.795" endtime="20201112 12:27:32.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.803" level="INFO">VALUE: [2.369499999999719e-05, 2.4056000000001465e-05, 2.3347999999999425e-05, 2.4070000000001035e-05, 2.436100000000052e-05, 2.3721999999996857e-05, 2.3542000000001395e-05, 2.418100000000506e-05, 2.3861999999999495e-05, 2.437500000000009e-05, 2.4028000000002325e-05, 2.3361999999998995e-05, 2.437500000000009e-05, 2.412499999999984e-05, 2.3584000000000105e-05, 2.370899999999676e-05, 2.387499999999959e-05, 2.3679999999998147e-05, 2.436100000000052e-05, 2.386100000000002e-05, 2.386100000000002e-05, 2.3708000000004226e-05, 2.3693999999997717e-05, 2.4042000000001895e-05, 2.386100000000002e-05, 2.3528000000001825e-05, 2.4249999999996497e-05, 2.369500000000413e-05, 2.3721999999996857e-05, 2.4056000000001465e-05, 2.3707999999997287e-05, 2.3749999999995997e-05, 2.386100000000002e-05, 2.4193999999998217e-05, 2.3736000000003366e-05, 2.3542000000001395e-05, 2.386100000000002e-05, 2.384700000000045e-05, 2.4194000000005156e-05, 2.4026999999995913e-05, 2.388899999999916e-05, 2.337499999999909e-05, 2.383300000000088e-05, 2.4000000000003185e-05, 2.419500000000463e-05, 2.3764000000002505e-05, 2.404100000000242e-05, 2.4193999999998217e-05, 2.386100000000002e-05, 2.4348000000000425e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.799" endtime="20201112 12:27:32.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.788" endtime="20201112 12:27:32.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.812" endtime="20201112 12:27:32.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.820" endtime="20201112 12:27:32.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.816" endtime="20201112 12:27:32.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.808" endtime="20201112 12:27:32.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.306" endtime="20201112 12:27:32.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.304" endtime="20201112 12:27:32.846"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.871" endtime="20201112 12:27:32.886"></status>
</kw>
<msg timestamp="20201112 12:27:32.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.867" endtime="20201112 12:27:32.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.890" endtime="20201112 12:27:32.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.896" endtime="20201112 12:27:32.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.860" endtime="20201112 12:27:32.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.853" endtime="20201112 12:27:32.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.920" endtime="20201112 12:27:33.258"></status>
</kw>
<msg timestamp="20201112 12:27:33.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041934389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041957944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.916" endtime="20201112 12:27:33.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041934389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041957944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.267" endtime="20201112 12:27:33.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.286" endtime="20201112 12:27:33.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.909" endtime="20201112 12:27:33.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.904" endtime="20201112 12:27:33.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.305" level="INFO">${RESULT} = [{'time': 0.041957944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3554999999994553e-05, 'source_diff': 2.3554999999994553e-05}, {'time': 0.041992014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:33.295" endtime="20201112 12:27:33.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.337" level="INFO">${ACCURACY} = {'time': [0.041957944, 0.041992014, 0.042024042, 0.042057167, 0.042088292, 0.042123222, 0.042156319, 0.042190375, 0.042220514, 0.042251528, 0.042285542, 0.042316764, 0.042345722, 0.042380736, 0.042410...</msg>
<status status="PASS" starttime="20201112 12:27:33.307" endtime="20201112 12:27:33.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.348" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.345" endtime="20201112 12:27:33.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.353" level="INFO">VALUE: [2.3554999999994553e-05, 2.386100000000002e-05, 2.420899999999726e-05, 2.4042000000001895e-05, 2.4235999999996927e-05, 2.337499999999909e-05, 2.3471999999996607e-05, 2.4042000000001895e-05, 2.384700000000045e-05, 2.4041999999994956e-05, 2.369500000000413e-05, 2.4235999999996927e-05, 2.358300000000063e-05, 2.363899999999891e-05, 2.334699999999995e-05, 2.438899999999966e-05, 2.4222000000004296e-05, 2.4360999999993582e-05, 2.388899999999916e-05, 2.337499999999909e-05, 2.420899999999726e-05, 2.336099999999952e-05, 2.386100000000002e-05, 2.3999999999996247e-05, 2.3820000000000785e-05, 2.436100000000052e-05, 2.3707999999997287e-05, 2.3708000000004226e-05, 2.4054999999995053e-05, 2.3362000000005934e-05, 2.4055999999994526e-05, 2.354100000000192e-05, 2.388899999999916e-05, 2.387499999999959e-05, 2.4028000000002325e-05, 2.355500000000149e-05, 2.4014000000002755e-05, 2.387499999999959e-05, 2.3708000000004226e-05, 2.4042000000001895e-05, 2.368099999999762e-05, 2.337500000000603e-05, 2.3555999999994026e-05, 2.4222000000004296e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.354100000000192e-05, 2.4236000000003866e-05, 2.3707999999997287e-05, 2.42090000000042e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.350" endtime="20201112 12:27:33.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.339" endtime="20201112 12:27:33.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.363" endtime="20201112 12:27:33.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.371" endtime="20201112 12:27:33.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.366" endtime="20201112 12:27:33.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.358" endtime="20201112 12:27:33.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.848" endtime="20201112 12:27:33.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.847" endtime="20201112 12:27:33.397"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.421" endtime="20201112 12:27:33.438"></status>
</kw>
<msg timestamp="20201112 12:27:33.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.417" endtime="20201112 12:27:33.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.441" endtime="20201112 12:27:33.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.448" endtime="20201112 12:27:33.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.410" endtime="20201112 12:27:33.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.404" endtime="20201112 12:27:33.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.472" endtime="20201112 12:27:33.806"></status>
</kw>
<msg timestamp="20201112 12:27:33.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041159056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041189917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.469" endtime="20201112 12:27:33.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041159056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041189917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.816" endtime="20201112 12:27:33.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.835" endtime="20201112 12:27:33.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.462" endtime="20201112 12:27:33.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.457" endtime="20201112 12:27:33.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.852" level="INFO">${RESULT} = [{'time': 0.041189917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.086100000000008e-05, 'source_diff': 3.086100000000008e-05}, {'time': 0.041228125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.843" endtime="20201112 12:27:33.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.883" level="INFO">${ACCURACY} = {'time': [0.041189917, 0.041228125, 0.041268125, 0.041307306, 0.041344306, 0.041381417, 0.041419472, 0.041458653, 0.041501708, 0.041538875, 0.041580903, 0.041621083, 0.041661167, 0.041701208, 0.041741...</msg>
<status status="PASS" starttime="20201112 12:27:33.854" endtime="20201112 12:27:33.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.894" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.892" endtime="20201112 12:27:33.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.900" level="INFO">VALUE: [3.086100000000008e-05, 3.122199999999742e-05, 3.072200000000386e-05, 3.137500000000015e-05, 3.105599999999459e-05, 3.083399999999348e-05, 3.054100000000198e-05, 3.0513999999995378e-05, 3.136100000000058e-05, 3.069400000000472e-05, 3.044500000000394e-05, 3.106900000000162e-05, 3.104200000000196e-05, 3.1276999999996224e-05, 3.102799999999545e-05, 3.104100000000248e-05, 3.138899999999972e-05, 3.119399999999828e-05, 3.119399999999828e-05, 3.086100000000008e-05, 3.087499999999965e-05, 3.102800000000239e-05, 3.136100000000058e-05, 3.119399999999828e-05, 3.122200000000436e-05, 3.122299999999689e-05, 3.070799999999735e-05, 3.120799999999785e-05, 3.120799999999785e-05, 3.136100000000058e-05, 3.070799999999735e-05, 3.137500000000015e-05, 3.111100000000033e-05, 3.070800000000429e-05, 3.104100000000248e-05, 3.067999999999821e-05, 3.072200000000386e-05, 3.069399999999778e-05, 3.0486000000003177e-05, 3.119499999999775e-05, 3.052799999999495e-05, 3.086100000000008e-05, 3.069399999999778e-05, 3.111100000000033e-05, 3.0360999999999583e-05, 3.104100000000248e-05, 3.069399999999778e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.087499999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.897" endtime="20201112 12:27:33.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.885" endtime="20201112 12:27:33.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.909" endtime="20201112 12:27:33.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.918" endtime="20201112 12:27:33.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.913" endtime="20201112 12:27:33.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.905" endtime="20201112 12:27:33.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.399" endtime="20201112 12:27:33.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.398" endtime="20201112 12:27:33.944"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.966" endtime="20201112 12:27:33.982"></status>
</kw>
<msg timestamp="20201112 12:27:33.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.963" endtime="20201112 12:27:33.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.985" endtime="20201112 12:27:33.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.991" endtime="20201112 12:27:33.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.956" endtime="20201112 12:27:33.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.950" endtime="20201112 12:27:33.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.016" endtime="20201112 12:27:34.351"></status>
</kw>
<msg timestamp="20201112 12:27:34.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040143597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040174806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.013" endtime="20201112 12:27:34.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040143597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040174806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.361" endtime="20201112 12:27:34.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.380" endtime="20201112 12:27:34.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.004" endtime="20201112 12:27:34.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.999" endtime="20201112 12:27:34.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.397" level="INFO">${RESULT} = [{'time': 0.040174806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.120899999999732e-05, 'source_diff': 3.120899999999732e-05}, {'time': 0.040210958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:34.388" endtime="20201112 12:27:34.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.428" level="INFO">${ACCURACY} = {'time': [0.040174806, 0.040210958, 0.04025, 0.040291167, 0.040332181, 0.040371236, 0.040411375, 0.040450375, 0.040490486, 0.040532667, 0.04057075, 0.040610875, 0.040648014, 0.040686042, 0.040725083, ...</msg>
<status status="PASS" starttime="20201112 12:27:34.399" endtime="20201112 12:27:34.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.439" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.437" endtime="20201112 12:27:34.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.444" level="INFO">VALUE: [3.120899999999732e-05, 3.0513999999995378e-05, 3.0388999999998723e-05, 3.055600000000103e-05, 3.070900000000376e-05, 3.104199999999502e-05, 3.052800000000189e-05, 3.0277999999994698e-05, 3.070799999999735e-05, 3.070900000000376e-05, 3.119400000000522e-05, 3.136100000000058e-05, 3.108300000000119e-05, 3.119499999999775e-05, 3.069400000000472e-05, 3.084700000000051e-05, 3.086100000000008e-05, 3.122200000000436e-05, 3.06249999999994e-05, 3.055500000000155e-05, 3.0374999999999153e-05, 3.104200000000196e-05, 3.102700000000291e-05, 3.0540999999995044e-05, 3.087499999999965e-05, 3.116699999999861e-05, 3.086100000000008e-05, 3.076399999999563e-05, 3.069399999999778e-05, 3.101400000000282e-05, 3.087499999999965e-05, 3.115299999999904e-05, 3.087499999999965e-05, 3.102800000000239e-05, 3.069499999999725e-05, 3.119399999999828e-05, 3.066699999999811e-05, 3.102800000000239e-05, 3.120800000000479e-05, 3.0388999999998723e-05, 3.048599999999624e-05, 3.052800000000189e-05, 3.106900000000162e-05, 3.070800000000429e-05, 3.070899999999682e-05, 3.055500000000155e-05, 3.1013000000003343e-05, 3.120800000000479e-05, 3.070900000000376e-05, 3.136100000000058e-05]</msg>
<status status="PASS" starttime="20201112 12:27:34.441" endtime="20201112 12:27:34.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.430" endtime="20201112 12:27:34.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.454" endtime="20201112 12:27:34.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.462" endtime="20201112 12:27:34.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.458" endtime="20201112 12:27:34.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.449" endtime="20201112 12:27:34.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.946" endtime="20201112 12:27:34.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.944" endtime="20201112 12:27:34.489"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.512" endtime="20201112 12:27:34.528"></status>
</kw>
<msg timestamp="20201112 12:27:34.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.509" endtime="20201112 12:27:34.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.531" endtime="20201112 12:27:34.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.537" endtime="20201112 12:27:34.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.502" endtime="20201112 12:27:34.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.495" endtime="20201112 12:27:34.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.560" endtime="20201112 12:27:34.898"></status>
</kw>
<msg timestamp="20201112 12:27:34.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041486903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041517639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.557" endtime="20201112 12:27:34.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041486903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041517639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.907" endtime="20201112 12:27:34.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.926" endtime="20201112 12:27:34.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.550" endtime="20201112 12:27:34.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.545" endtime="20201112 12:27:34.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.943" level="INFO">${RESULT} = [{'time': 0.041517639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.073600000000343e-05, 'source_diff': 3.073600000000343e-05}, {'time': 0.041556778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:34.934" endtime="20201112 12:27:34.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.974" level="INFO">${ACCURACY} = {'time': [0.041517639, 0.041556778, 0.041598903, 0.041637903, 0.041676986, 0.041718097, 0.041755167, 0.04179525, 0.041833472, 0.0418705, 0.041909653, 0.041951597, 0.041991681, 0.042030819, 0.042068917...</msg>
<status status="PASS" starttime="20201112 12:27:34.945" endtime="20201112 12:27:34.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.985" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.983" endtime="20201112 12:27:34.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.991" level="INFO">VALUE: [3.073600000000343e-05, 3.102800000000239e-05, 3.052800000000189e-05, 3.052799999999495e-05, 3.086100000000008e-05, 3.088899999999922e-05, 3.070900000000376e-05, 3.0306000000000777e-05, 3.072199999999692e-05, 3.118099999999818e-05, 3.122199999999742e-05, 3.120799999999785e-05, 3.068100000000462e-05, 3.119399999999828e-05, 3.0374999999999153e-05, 3.134700000000101e-05, 3.070899999999682e-05, 3.108399999999373e-05, 3.052700000000241e-05, 3.116699999999861e-05, 3.052800000000189e-05, 3.104200000000196e-05, 3.1012999999996405e-05, 3.054199999999452e-05, 3.104100000000248e-05, 3.104100000000248e-05, 3.070799999999735e-05, 3.052799999999495e-05, 3.072299999999639e-05, 3.0513999999995378e-05, 3.102799999999545e-05, 3.066599999999864e-05, 3.104199999999502e-05, 3.084700000000051e-05, 3.073600000000343e-05, 3.0360999999999583e-05, 3.122200000000436e-05, 3.0360999999999583e-05, 3.119500000000469e-05, 3.119499999999775e-05, 3.066599999999864e-05, 3.052800000000189e-05, 3.091699999999836e-05, 3.105500000000205e-05, 3.119500000000469e-05, 3.068099999999768e-05, 3.102799999999545e-05, 3.052799999999495e-05, 3.119399999999828e-05, 3.087499999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:27:34.988" endtime="20201112 12:27:34.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.976" endtime="20201112 12:27:34.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.005" endtime="20201112 12:27:35.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.013" endtime="20201112 12:27:35.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.009" endtime="20201112 12:27:35.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.000" endtime="20201112 12:27:35.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.491" endtime="20201112 12:27:35.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.490" endtime="20201112 12:27:35.039"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.062" endtime="20201112 12:27:35.077"></status>
</kw>
<msg timestamp="20201112 12:27:35.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.059" endtime="20201112 12:27:35.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.081" endtime="20201112 12:27:35.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.087" endtime="20201112 12:27:35.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.051" endtime="20201112 12:27:35.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.046" endtime="20201112 12:27:35.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.110" endtime="20201112 12:27:35.446"></status>
</kw>
<msg timestamp="20201112 12:27:35.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040237931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040268958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.107" endtime="20201112 12:27:35.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040237931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040268958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.456" endtime="20201112 12:27:35.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.475" endtime="20201112 12:27:35.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.100" endtime="20201112 12:27:35.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.095" endtime="20201112 12:27:35.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.492" level="INFO">${RESULT} = [{'time': 0.040268958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.102700000000291e-05, 'source_diff': 3.102700000000291e-05}, {'time': 0.040307111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:35.483" endtime="20201112 12:27:35.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.523" level="INFO">${ACCURACY} = {'time': [0.040268958, 0.040307111, 0.040347042, 0.040388181, 0.040427306, 0.040469292, 0.040508417, 0.040547486, 0.040584556, 0.040623694, 0.040663764, 0.040701792, 0.040740931, 0.040780972, 0.040819...</msg>
<status status="PASS" starttime="20201112 12:27:35.494" endtime="20201112 12:27:35.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.535" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.533" endtime="20201112 12:27:35.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.540" level="INFO">VALUE: [3.102700000000291e-05, 3.054200000000146e-05, 3.118099999999818e-05, 3.0333999999999917e-05, 3.100000000000325e-05, 3.070899999999682e-05, 3.068099999999768e-05, 3.052800000000189e-05, 3.06249999999994e-05, 3.100000000000325e-05, 3.068099999999768e-05, 3.133400000000092e-05, 3.069500000000419e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.083300000000094e-05, 3.0360999999999583e-05, 3.086100000000008e-05, 3.1304999999995364e-05, 3.068000000000515e-05, 3.136100000000058e-05, 3.070899999999682e-05, 3.119399999999828e-05, 3.070899999999682e-05, 3.122199999999742e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.104200000000196e-05, 3.0347000000000013e-05, 3.087499999999965e-05, 3.069399999999778e-05, 3.102799999999545e-05, 3.05700000000006e-05, 3.0486000000003177e-05, 3.105500000000205e-05, 3.070799999999735e-05, 3.0514000000002317e-05, 3.1040999999995544e-05, 3.131900000000187e-05, 3.119399999999828e-05, 3.0514000000002317e-05, 3.08050000000018e-05, 3.119499999999775e-05, 3.120900000000426e-05, 3.117999999999871e-05, 3.070799999999735e-05, 3.069400000000472e-05, 3.136100000000058e-05, 3.087499999999965e-05, 3.088799999999975e-05]</msg>
<status status="PASS" starttime="20201112 12:27:35.537" endtime="20201112 12:27:35.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.525" endtime="20201112 12:27:35.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.550" endtime="20201112 12:27:35.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.558" endtime="20201112 12:27:35.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.554" endtime="20201112 12:27:35.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.545" endtime="20201112 12:27:35.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.041" endtime="20201112 12:27:35.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.040" endtime="20201112 12:27:35.584"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.607" endtime="20201112 12:27:35.622"></status>
</kw>
<msg timestamp="20201112 12:27:35.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.604" endtime="20201112 12:27:35.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.626" endtime="20201112 12:27:35.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.632" endtime="20201112 12:27:35.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.596" endtime="20201112 12:27:35.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.591" endtime="20201112 12:27:35.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.656" endtime="20201112 12:27:35.990"></status>
</kw>
<msg timestamp="20201112 12:27:35.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040426486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040457514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.652" endtime="20201112 12:27:35.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040426486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040457514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.000" endtime="20201112 12:27:36.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.018" endtime="20201112 12:27:36.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.645" endtime="20201112 12:27:36.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.640" endtime="20201112 12:27:36.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.039" level="INFO">${RESULT} = [{'time': 0.040457514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.102800000000239e-05, 'source_diff': 3.102800000000239e-05}, {'time': 0.040499625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.030" endtime="20201112 12:27:36.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.070" level="INFO">${ACCURACY} = {'time': [0.040457514, 0.040499625, 0.040540778, 0.040583764, 0.040623889, 0.040662944, 0.040705, 0.040745236, 0.040783222, 0.040819333, 0.040858389, 0.040897486, 0.040934542, 0.040974764, 0.041015736...</msg>
<status status="PASS" starttime="20201112 12:27:36.041" endtime="20201112 12:27:36.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.081" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.079" endtime="20201112 12:27:36.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.087" level="INFO">VALUE: [3.102800000000239e-05, 3.052799999999495e-05, 3.134700000000101e-05, 3.119500000000469e-05, 3.134700000000101e-05, 3.067999999999821e-05, 3.0347000000000013e-05, 3.137500000000015e-05, 3.115299999999904e-05, 3.069399999999778e-05, 3.070800000000429e-05, 3.054199999999452e-05, 3.070899999999682e-05, 3.073599999999649e-05, 3.0318999999993934e-05, 3.119499999999775e-05, 3.070799999999735e-05, 3.118100000000512e-05, 3.105600000000153e-05, 3.0374999999999153e-05, 3.136100000000058e-05, 3.042999999999796e-05, 3.0514000000002317e-05, 3.091699999999836e-05, 3.102800000000239e-05, 3.118099999999818e-05, 3.066599999999864e-05, 3.140299999999929e-05, 3.120799999999785e-05, 3.0500000000002747e-05, 3.048599999999624e-05, 3.091699999999836e-05, 3.137500000000015e-05, 3.067999999999821e-05, 3.136100000000058e-05, 3.081900000000137e-05, 3.070799999999735e-05, 3.0374999999999153e-05, 3.087499999999965e-05, 3.068099999999768e-05, 3.069400000000472e-05, 3.068099999999768e-05, 3.118100000000512e-05, 3.119500000000469e-05, 3.070799999999735e-05, 3.0861999999999556e-05, 3.101399999999588e-05, 3.119499999999775e-05, 3.069400000000472e-05, 3.133400000000092e-05]</msg>
<status status="PASS" starttime="20201112 12:27:36.084" endtime="20201112 12:27:36.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.072" endtime="20201112 12:27:36.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.096" endtime="20201112 12:27:36.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.104" endtime="20201112 12:27:36.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.100" endtime="20201112 12:27:36.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.092" endtime="20201112 12:27:36.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.586" endtime="20201112 12:27:36.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.585" endtime="20201112 12:27:36.130"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.153" endtime="20201112 12:27:36.168"></status>
</kw>
<msg timestamp="20201112 12:27:36.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.149" endtime="20201112 12:27:36.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.171" endtime="20201112 12:27:36.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.178" endtime="20201112 12:27:36.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.142" endtime="20201112 12:27:36.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.137" endtime="20201112 12:27:36.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.201" endtime="20201112 12:27:36.535"></status>
</kw>
<msg timestamp="20201112 12:27:36.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040151722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040183083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.198" endtime="20201112 12:27:36.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040151722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040183083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.545" endtime="20201112 12:27:36.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.564" endtime="20201112 12:27:36.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.191" endtime="20201112 12:27:36.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.186" endtime="20201112 12:27:36.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.583" level="INFO">${RESULT} = [{'time': 0.040183083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.136100000000058e-05, 'source_diff': 3.136100000000058e-05}, {'time': 0.040223167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.574" endtime="20201112 12:27:36.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.614" level="INFO">${ACCURACY} = {'time': [0.040183083, 0.040223167, 0.040265264, 0.040306264, 0.040345403, 0.040383458, 0.040425583, 0.040467694, 0.040504792, 0.04054075, 0.040577792, 0.040619931, 0.040658097, 0.040699111, 0.0407382...</msg>
<status status="PASS" starttime="20201112 12:27:36.585" endtime="20201112 12:27:36.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.625" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.622" endtime="20201112 12:27:36.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.630" level="INFO">VALUE: [3.136100000000058e-05, 3.070899999999682e-05, 3.104200000000196e-05, 3.119500000000469e-05, 3.070900000000376e-05, 3.117999999999871e-05, 3.084700000000051e-05, 3.0526999999995474e-05, 3.052799999999495e-05, 3.054200000000146e-05, 3.068100000000462e-05, 3.0861999999999556e-05, 3.1082999999994254e-05, 3.0514000000002317e-05, 3.1068999999994684e-05, 3.1362000000000056e-05, 3.073599999999649e-05, 3.073699999999596e-05, 3.138899999999972e-05, 3.069399999999778e-05, 3.070799999999735e-05, 3.055500000000155e-05, 3.081900000000137e-05, 3.070899999999682e-05, 3.068099999999768e-05, 3.105600000000153e-05, 3.137500000000015e-05, 3.101400000000282e-05, 3.055500000000155e-05, 3.0514000000002317e-05, 3.068100000000462e-05, 3.0333000000000443e-05, 3.083400000000042e-05, 3.0526999999995474e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.0360999999999583e-05, 3.052800000000189e-05, 3.083300000000094e-05, 3.086100000000008e-05, 3.119499999999775e-05, 3.120800000000479e-05, 3.087499999999965e-05, 3.067999999999821e-05, 3.055600000000103e-05, 3.087499999999965e-05, 3.0277999999994698e-05, 3.088899999999922e-05, 3.1348000000000487e-05, 3.1026999999995974e-05]</msg>
<status status="PASS" starttime="20201112 12:27:36.627" endtime="20201112 12:27:36.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.616" endtime="20201112 12:27:36.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.640" endtime="20201112 12:27:36.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.648" endtime="20201112 12:27:36.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.644" endtime="20201112 12:27:36.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.635" endtime="20201112 12:27:36.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.132" endtime="20201112 12:27:36.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.131" endtime="20201112 12:27:36.674"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.697" endtime="20201112 12:27:36.712"></status>
</kw>
<msg timestamp="20201112 12:27:36.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.693" endtime="20201112 12:27:36.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.715" endtime="20201112 12:27:36.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.722" endtime="20201112 12:27:36.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.686" endtime="20201112 12:27:36.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.680" endtime="20201112 12:27:36.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.745" endtime="20201112 12:27:37.079"></status>
</kw>
<msg timestamp="20201112 12:27:37.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040225403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.742" endtime="20201112 12:27:37.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040225403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.089" endtime="20201112 12:27:37.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.107" endtime="20201112 12:27:37.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.734" endtime="20201112 12:27:37.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.730" endtime="20201112 12:27:37.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.126" level="INFO">${RESULT} = [{'time': 0.040255778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0374999999999153e-05, 'source_diff': 3.0374999999999153e-05}, {'time': 0.040291917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:37.117" endtime="20201112 12:27:37.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.157" level="INFO">${ACCURACY} = {'time': [0.040255778, 0.040291917, 0.040328917, 0.040368111, 0.040405181, 0.040445139, 0.040481278, 0.040523292, 0.040564486, 0.040606569, 0.040646583, 0.040684542, 0.040725694, 0.040763847, 0.040801...</msg>
<status status="PASS" starttime="20201112 12:27:37.128" endtime="20201112 12:27:37.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.168" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.166" endtime="20201112 12:27:37.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.174" level="INFO">VALUE: [3.0374999999999153e-05, 3.048599999999624e-05, 3.086100000000008e-05, 3.137500000000015e-05, 3.104199999999502e-05, 3.120799999999785e-05, 3.052800000000189e-05, 3.082000000000085e-05, 3.137500000000015e-05, 3.0513000000002843e-05, 3.084700000000051e-05, 3.0333999999999917e-05, 3.0513000000002843e-05, 3.1040999999995544e-05, 3.086100000000008e-05, 3.083300000000094e-05, 3.101400000000282e-05, 3.120799999999785e-05, 3.052700000000241e-05, 3.119499999999775e-05, 3.118099999999818e-05, 3.134700000000101e-05, 3.069499999999725e-05, 3.134700000000101e-05, 3.070899999999682e-05, 3.054200000000146e-05, 3.082000000000085e-05, 3.069399999999778e-05, 3.0861999999999556e-05, 3.069400000000472e-05, 3.102799999999545e-05, 3.069499999999725e-05, 3.0513999999995378e-05, 3.119399999999828e-05, 3.072199999999692e-05, 3.0861999999999556e-05, 3.1068999999994684e-05, 3.119400000000522e-05, 3.055599999999409e-05, 3.0360999999999583e-05, 3.116599999999914e-05, 3.124999999999656e-05, 3.0513999999995378e-05, 3.115199999999957e-05, 3.069399999999778e-05, 3.069500000000419e-05, 3.054200000000146e-05, 3.080600000000128e-05, 3.072200000000386e-05, 3.1362000000000056e-05]</msg>
<status status="PASS" starttime="20201112 12:27:37.171" endtime="20201112 12:27:37.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.159" endtime="20201112 12:27:37.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.183" endtime="20201112 12:27:37.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.192" endtime="20201112 12:27:37.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.187" endtime="20201112 12:27:37.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.179" endtime="20201112 12:27:37.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.676" endtime="20201112 12:27:37.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.675" endtime="20201112 12:27:37.218"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.240" endtime="20201112 12:27:37.256"></status>
</kw>
<msg timestamp="20201112 12:27:37.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.237" endtime="20201112 12:27:37.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.259" endtime="20201112 12:27:37.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.265" endtime="20201112 12:27:37.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.230" endtime="20201112 12:27:37.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.224" endtime="20201112 12:27:37.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.289" endtime="20201112 12:27:37.625"></status>
</kw>
<msg timestamp="20201112 12:27:37.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040150583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040188444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.286" endtime="20201112 12:27:37.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040150583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040188444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.634" endtime="20201112 12:27:37.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.653" endtime="20201112 12:27:37.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.278" endtime="20201112 12:27:37.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.274" endtime="20201112 12:27:37.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.672" level="INFO">${RESULT} = [{'time': 0.040188444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7861000000000145e-05, 'source_diff': 3.7861000000000145e-05}, {'time': 0.040236528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:37.663" endtime="20201112 12:27:37.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.703" level="INFO">${ACCURACY} = {'time': [0.040188444, 0.040236528, 0.040280556, 0.04032375, 0.040371875, 0.040419944, 0.040468042, 0.040516083, 0.040559264, 0.040602389, 0.040652431, 0.040698625, 0.040745583, 0.040792722, 0.0408379...</msg>
<status status="PASS" starttime="20201112 12:27:37.674" endtime="20201112 12:27:37.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.714" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.712" endtime="20201112 12:27:37.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.719" level="INFO">VALUE: [3.7861000000000145e-05, 3.7861000000000145e-05, 3.819500000000475e-05, 3.7819000000001435e-05, 3.800000000000331e-05, 3.8347000000001075e-05, 3.7874999999999714e-05, 3.8027000000002975e-05, 3.776399999999569e-05, 3.7847000000000575e-05, 3.836200000000012e-05, 3.805600000000159e-05, 3.768000000000521e-05, 3.7860999999993206e-05, 3.772200000000392e-05, 3.819399999999834e-05, 3.7861000000000145e-05, 3.751399999999544e-05, 3.7513000000002905e-05, 3.8194999999997814e-05, 3.819400000000528e-05, 3.819399999999834e-05, 3.8152999999999104e-05, 3.76250000000064e-05, 3.791599999999895e-05, 3.799999999999637e-05, 3.76659999999987e-05, 3.8375000000000214e-05, 3.7861000000000145e-05, 3.770799999999741e-05, 3.802799999999551e-05, 3.765300000000554e-05, 3.7624999999999464e-05, 3.8347000000001075e-05, 3.7512999999995966e-05, 3.825000000000356e-05, 3.7319000000000935e-05, 3.752800000000195e-05, 3.8013000000003405e-05, 3.801400000000288e-05, 3.768000000000521e-05, 3.8361000000000645e-05, 3.817999999999877e-05, 3.8361000000000645e-05, 3.800000000000331e-05, 3.7694999999997314e-05, 3.783400000000048e-05, 3.7360999999999644e-05, 3.8347000000001075e-05, 3.804200000000202e-05]</msg>
<status status="PASS" starttime="20201112 12:27:37.716" endtime="20201112 12:27:37.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.705" endtime="20201112 12:27:37.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.729" endtime="20201112 12:27:37.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.737" endtime="20201112 12:27:37.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.733" endtime="20201112 12:27:37.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.724" endtime="20201112 12:27:37.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.220" endtime="20201112 12:27:37.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.218" endtime="20201112 12:27:37.763"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.786" endtime="20201112 12:27:37.802"></status>
</kw>
<msg timestamp="20201112 12:27:37.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.782" endtime="20201112 12:27:37.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.805" endtime="20201112 12:27:37.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.811" endtime="20201112 12:27:37.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.775" endtime="20201112 12:27:37.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.769" endtime="20201112 12:27:37.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.835" endtime="20201112 12:27:38.168"></status>
</kw>
<msg timestamp="20201112 12:27:38.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0403295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:37.831" endtime="20201112 12:27:38.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0403295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:38.177" endtime="20201112 12:27:38.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.196" endtime="20201112 12:27:38.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.824" endtime="20201112 12:27:38.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.819" endtime="20201112 12:27:38.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.217" level="INFO">${RESULT} = [{'time': 0.040367361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7861000000000145e-05, 'source_diff': 3.7861000000000145e-05}, {'time': 0.040416458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.208" endtime="20201112 12:27:38.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.248" level="INFO">${ACCURACY} = {'time': [0.040367361, 0.040416458, 0.040465639, 0.040511681, 0.040555764, 0.040599875, 0.040647986, 0.040697069, 0.040745292, 0.040788333, 0.040834333, 0.040878569, 0.040923625, 0.040970639, 0.041016...</msg>
<status status="PASS" starttime="20201112 12:27:38.219" endtime="20201112 12:27:38.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.259" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.257" endtime="20201112 12:27:38.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.264" level="INFO">VALUE: [3.7861000000000145e-05, 3.7527000000002475e-05, 3.772199999999698e-05, 3.804200000000202e-05, 3.8333000000001505e-05, 3.7861000000000145e-05, 3.8054999999995176e-05, 3.818000000000571e-05, 3.820900000000432e-05, 3.7527000000002475e-05, 3.7319000000000935e-05, 3.7874999999999714e-05, 3.755600000000109e-05, 3.752800000000195e-05, 3.7874999999999714e-05, 3.7861000000000145e-05, 3.767999999999827e-05, 3.7638999999999034e-05, 3.7874999999999714e-05, 3.7874999999999714e-05, 3.7861000000000145e-05, 3.7874999999999714e-05, 3.823599999999705e-05, 3.752799999999501e-05, 3.752800000000195e-05, 3.7680999999997744e-05, 3.7569000000001185e-05, 3.772199999999698e-05, 3.834800000000055e-05, 3.8375000000000214e-05, 3.7833000000001005e-05, 3.770900000000382e-05, 3.833400000000098e-05, 3.7861000000000145e-05, 3.8375000000000214e-05, 3.8333000000001505e-05, 3.767999999999827e-05, 3.7847000000000575e-05, 3.7847000000000575e-05, 3.76659999999987e-05, 3.8347000000001075e-05, 3.802799999999551e-05, 3.750000000000281e-05, 3.7680999999997744e-05, 3.769399999999784e-05, 3.748700000000271e-05, 3.802799999999551e-05, 3.769400000000478e-05, 3.801400000000288e-05, 3.752800000000195e-05]</msg>
<status status="PASS" starttime="20201112 12:27:38.261" endtime="20201112 12:27:38.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.250" endtime="20201112 12:27:38.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.274" endtime="20201112 12:27:38.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.282" endtime="20201112 12:27:38.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.278" endtime="20201112 12:27:38.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.269" endtime="20201112 12:27:38.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.765" endtime="20201112 12:27:38.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.764" endtime="20201112 12:27:38.308"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.331" endtime="20201112 12:27:38.347"></status>
</kw>
<msg timestamp="20201112 12:27:38.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.327" endtime="20201112 12:27:38.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.350" endtime="20201112 12:27:38.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.356" endtime="20201112 12:27:38.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.320" endtime="20201112 12:27:38.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.315" endtime="20201112 12:27:38.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.379" endtime="20201112 12:27:38.714"></status>
</kw>
<msg timestamp="20201112 12:27:38.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040277819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040315486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.376" endtime="20201112 12:27:38.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040277819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040315486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.724" endtime="20201112 12:27:38.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.743" endtime="20201112 12:27:38.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.369" endtime="20201112 12:27:38.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.364" endtime="20201112 12:27:38.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.762" level="INFO">${RESULT} = [{'time': 0.040315486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7666999999998174e-05, 'source_diff': 3.7666999999998174e-05}, {'time': 0.040358542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.753" endtime="20201112 12:27:38.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.793" level="INFO">${ACCURACY} = {'time': [0.040315486, 0.040358542, 0.040401694, 0.040448667, 0.040494819, 0.040541917, 0.040585986, 0.040635083, 0.040681111, 0.040729278, 0.040777333, 0.040823458, 0.040870597, 0.040914625, 0.040963...</msg>
<status status="PASS" starttime="20201112 12:27:38.764" endtime="20201112 12:27:38.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.804" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.801" endtime="20201112 12:27:38.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.809" level="INFO">VALUE: [3.7666999999998174e-05, 3.7722999999996454e-05, 3.7874999999999714e-05, 3.751400000000238e-05, 3.8041000000002545e-05, 3.751399999999544e-05, 3.799999999999637e-05, 3.8333000000001505e-05, 3.7624999999999464e-05, 3.752800000000195e-05, 3.7847000000000575e-05, 3.767999999999827e-05, 3.7833000000001005e-05, 3.818100000000518e-05, 3.7694999999997314e-05, 3.766700000000511e-05, 3.822199999999748e-05, 3.8194999999997814e-05, 3.7874999999999714e-05, 3.8333000000001505e-05, 3.769500000000425e-05, 3.767999999999827e-05, 3.752800000000195e-05, 3.784800000000005e-05, 3.769399999999784e-05, 3.817999999999877e-05, 3.7819000000001435e-05, 3.819399999999834e-05, 3.7972999999996704e-05, 3.784800000000005e-05, 3.7847000000000575e-05, 3.786199999999962e-05, 3.817999999999877e-05, 3.819399999999834e-05, 3.795900000000407e-05, 3.8375000000000214e-05, 3.754199999999458e-05, 3.8361000000000645e-05, 3.802799999999551e-05, 3.834800000000055e-05, 3.7847000000000575e-05, 3.769399999999784e-05, 3.804200000000202e-05, 3.7861000000000145e-05, 3.7861000000000145e-05, 3.7861000000000145e-05, 3.769399999999784e-05, 3.769399999999784e-05, 3.782000000000091e-05, 3.820900000000432e-05]</msg>
<status status="PASS" starttime="20201112 12:27:38.806" endtime="20201112 12:27:38.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.794" endtime="20201112 12:27:38.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.819" endtime="20201112 12:27:38.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.827" endtime="20201112 12:27:38.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.822" endtime="20201112 12:27:38.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.814" endtime="20201112 12:27:38.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.310" endtime="20201112 12:27:38.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.309" endtime="20201112 12:27:38.853"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.875" endtime="20201112 12:27:38.891"></status>
</kw>
<msg timestamp="20201112 12:27:38.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.872" endtime="20201112 12:27:38.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.895" endtime="20201112 12:27:38.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.901" endtime="20201112 12:27:38.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.865" endtime="20201112 12:27:38.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.859" endtime="20201112 12:27:38.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.924" endtime="20201112 12:27:39.260"></status>
</kw>
<msg timestamp="20201112 12:27:39.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040232722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040270569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.921" endtime="20201112 12:27:39.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040232722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040270569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.270" endtime="20201112 12:27:39.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.288" endtime="20201112 12:27:39.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.913" endtime="20201112 12:27:39.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.909" endtime="20201112 12:27:39.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.308" level="INFO">${RESULT} = [{'time': 0.040270569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7847000000000575e-05, 'source_diff': 3.7847000000000575e-05}, {'time': 0.040315778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:39.298" endtime="20201112 12:27:39.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.339" level="INFO">${ACCURACY} = {'time': [0.040270569, 0.040315778, 0.040364778, 0.040412819, 0.040462014, 0.040511069, 0.040556194, 0.040599167, 0.040647319, 0.040695361, 0.0407425, 0.040792625, 0.040839736, 0.040885833, 0.04092991...</msg>
<status status="PASS" starttime="20201112 12:27:39.310" endtime="20201112 12:27:39.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.350" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.348" endtime="20201112 12:27:39.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.356" level="INFO">VALUE: [3.7847000000000575e-05, 3.7694999999997314e-05, 3.752799999999501e-05, 3.7847000000000575e-05, 3.7430999999997494e-05, 3.76659999999987e-05, 3.772199999999698e-05, 3.7680999999997744e-05, 3.738799999999931e-05, 3.7333000000000505e-05, 3.754200000000152e-05, 3.8361000000000645e-05, 3.742999999999802e-05, 3.7861000000000145e-05, 3.751400000000238e-05, 3.838800000000031e-05, 3.818000000000571e-05, 3.7360999999999644e-05, 3.802800000000245e-05, 3.7638999999999034e-05, 3.8347000000001075e-05, 3.7360999999999644e-05, 3.7902999999998854e-05, 3.823599999999705e-05, 3.8361000000000645e-05, 3.841700000000586e-05, 3.7347000000000075e-05, 3.798600000000374e-05, 3.749999999999587e-05, 3.8055000000002115e-05, 3.820799999999791e-05, 3.81659999999992e-05, 3.772199999999698e-05, 3.752800000000195e-05, 3.767999999999827e-05, 3.801399999999594e-05, 3.833400000000098e-05, 3.800000000000331e-05, 3.819399999999834e-05, 3.818100000000518e-05, 3.804200000000202e-05, 3.802800000000245e-05, 3.7861000000000145e-05, 3.8361000000000645e-05, 3.7833000000001005e-05, 3.8375000000000214e-05, 3.833400000000098e-05, 3.751400000000238e-05, 3.830600000000184e-05, 3.76659999999987e-05]</msg>
<status status="PASS" starttime="20201112 12:27:39.352" endtime="20201112 12:27:39.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.341" endtime="20201112 12:27:39.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.366" endtime="20201112 12:27:39.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.374" endtime="20201112 12:27:39.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.370" endtime="20201112 12:27:39.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.361" endtime="20201112 12:27:39.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.855" endtime="20201112 12:27:39.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.854" endtime="20201112 12:27:39.400"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.422" endtime="20201112 12:27:39.438"></status>
</kw>
<msg timestamp="20201112 12:27:39.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.419" endtime="20201112 12:27:39.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.442" endtime="20201112 12:27:39.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.448" endtime="20201112 12:27:39.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.412" endtime="20201112 12:27:39.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.406" endtime="20201112 12:27:39.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.471" endtime="20201112 12:27:39.806"></status>
</kw>
<msg timestamp="20201112 12:27:39.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040203361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040241042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.468" endtime="20201112 12:27:39.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040203361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040241042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.815" endtime="20201112 12:27:39.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.834" endtime="20201112 12:27:39.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.461" endtime="20201112 12:27:39.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.456" endtime="20201112 12:27:39.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.853" level="INFO">${RESULT} = [{'time': 0.040241042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7680999999997744e-05, 'source_diff': 3.7680999999997744e-05}, {'time': 0.04028925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:39.844" endtime="20201112 12:27:39.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.884" level="INFO">${ACCURACY} = {'time': [0.040241042, 0.04028925, 0.040338236, 0.040384389, 0.040428389, 0.040474542, 0.040522583, 0.040571681, 0.040618778, 0.040666958, 0.040713931, 0.040762069, 0.040811222, 0.040857236, 0.0409002...</msg>
<status status="PASS" starttime="20201112 12:27:39.855" endtime="20201112 12:27:39.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.895" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.893" endtime="20201112 12:27:39.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.901" level="INFO">VALUE: [3.7680999999997744e-05, 3.7680999999997744e-05, 3.804200000000202e-05, 3.750000000000281e-05, 3.752800000000195e-05, 3.750000000000281e-05, 3.8347000000001075e-05, 3.7458999999996634e-05, 3.833400000000098e-05, 3.7861000000000145e-05, 3.801400000000288e-05, 3.8361000000000645e-05, 3.819399999999834e-05, 3.799999999999637e-05, 3.76659999999987e-05, 3.8055000000002115e-05, 3.8152999999999104e-05, 3.8040999999995606e-05, 3.833400000000098e-05, 3.818100000000518e-05, 3.7347000000000075e-05, 3.8194999999997814e-05, 3.8361000000000645e-05, 3.7874999999999714e-05, 3.801399999999594e-05, 3.7402999999998354e-05, 3.773599999999655e-05, 3.7847000000000575e-05, 3.834800000000055e-05, 3.752799999999501e-05, 3.768000000000521e-05, 3.8012999999996466e-05, 3.817999999999877e-05, 3.8180999999998244e-05, 3.752799999999501e-05, 3.7680999999997744e-05, 3.817999999999877e-05, 3.804200000000202e-05, 3.833400000000098e-05, 3.8361000000000645e-05, 3.8347000000001075e-05, 3.8347000000001075e-05, 3.752800000000195e-05, 3.816600000000614e-05, 3.769500000000425e-05, 3.799999999999637e-05, 3.8361000000000645e-05, 3.7861000000000145e-05, 3.834800000000055e-05, 3.804200000000202e-05]</msg>
<status status="PASS" starttime="20201112 12:27:39.897" endtime="20201112 12:27:39.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.886" endtime="20201112 12:27:39.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.910" endtime="20201112 12:27:39.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.919" endtime="20201112 12:27:39.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.914" endtime="20201112 12:27:39.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.906" endtime="20201112 12:27:39.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.402" endtime="20201112 12:27:39.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.401" endtime="20201112 12:27:39.944"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.967" endtime="20201112 12:27:39.983"></status>
</kw>
<msg timestamp="20201112 12:27:39.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.964" endtime="20201112 12:27:39.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.986" endtime="20201112 12:27:39.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.993" endtime="20201112 12:27:39.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.956" endtime="20201112 12:27:39.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.951" endtime="20201112 12:27:39.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.016" endtime="20201112 12:27:40.350"></status>
</kw>
<msg timestamp="20201112 12:27:40.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040255097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040292806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.013" endtime="20201112 12:27:40.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040255097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040292806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.359" endtime="20201112 12:27:40.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.378" endtime="20201112 12:27:40.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.006" endtime="20201112 12:27:40.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.001" endtime="20201112 12:27:40.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.399" level="INFO">${RESULT} = [{'time': 0.040292806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.770900000000382e-05, 'source_diff': 3.770900000000382e-05}, {'time': 0.040335903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:40.390" endtime="20201112 12:27:40.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.430" level="INFO">${ACCURACY} = {'time': [0.040292806, 0.040335903, 0.040385958, 0.040433125, 0.040477153, 0.040522236, 0.040571292, 0.040615361, 0.040659514, 0.040708639, 0.040757722, 0.040804903, 0.040851889, 0.040895069, 0.040938...</msg>
<status status="PASS" starttime="20201112 12:27:40.401" endtime="20201112 12:27:40.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.441" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.439" endtime="20201112 12:27:40.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.446" level="INFO">VALUE: [3.770900000000382e-05, 3.7666999999998174e-05, 3.8361000000000645e-05, 3.7874999999999714e-05, 3.820900000000432e-05, 3.766700000000511e-05, 3.819500000000475e-05, 3.751400000000238e-05, 3.8152999999999104e-05, 3.7874999999999714e-05, 3.752800000000195e-05, 3.8208999999997384e-05, 3.802800000000245e-05, 3.7541000000002045e-05, 3.7638999999999034e-05, 3.7833000000001005e-05, 3.754200000000152e-05, 3.7888999999999284e-05, 3.824999999999662e-05, 3.805600000000159e-05, 3.8416999999998924e-05, 3.786199999999962e-05, 3.7374999999999214e-05, 3.8388999999999784e-05, 3.767999999999827e-05, 3.7652999999998604e-05, 3.8208999999997384e-05, 3.8361000000000645e-05, 3.769399999999784e-05, 3.7541000000002045e-05, 3.770800000000435e-05, 3.751400000000238e-05, 3.767999999999827e-05, 3.752800000000195e-05, 3.750000000000281e-05, 3.820900000000432e-05, 3.8375000000000214e-05, 3.801400000000288e-05, 3.8388999999999784e-05, 3.751400000000238e-05, 3.769399999999784e-05, 3.820900000000432e-05, 3.773599999999655e-05, 3.804199999999508e-05, 3.8027000000002975e-05, 3.8361000000000645e-05, 3.752799999999501e-05, 3.752800000000195e-05, 3.8013000000003405e-05, 3.751400000000238e-05]</msg>
<status status="PASS" starttime="20201112 12:27:40.443" endtime="20201112 12:27:40.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.432" endtime="20201112 12:27:40.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.462" endtime="20201112 12:27:40.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.470" endtime="20201112 12:27:40.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.466" endtime="20201112 12:27:40.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.458" endtime="20201112 12:27:40.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.947" endtime="20201112 12:27:40.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.945" endtime="20201112 12:27:40.496"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.519" endtime="20201112 12:27:40.535"></status>
</kw>
<msg timestamp="20201112 12:27:40.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.516" endtime="20201112 12:27:40.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.538" endtime="20201112 12:27:40.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.544" endtime="20201112 12:27:40.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.508" endtime="20201112 12:27:40.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.503" endtime="20201112 12:27:40.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.568" endtime="20201112 12:27:40.902"></status>
</kw>
<msg timestamp="20201112 12:27:40.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040142972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040180833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.564" endtime="20201112 12:27:40.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040142972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040180833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.912" endtime="20201112 12:27:40.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.931" endtime="20201112 12:27:40.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.557" endtime="20201112 12:27:40.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.552" endtime="20201112 12:27:40.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.950" level="INFO">${RESULT} = [{'time': 0.040180833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7861000000000145e-05, 'source_diff': 3.7861000000000145e-05}, {'time': 0.040224944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:40.941" endtime="20201112 12:27:40.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.980" level="INFO">${ACCURACY} = {'time': [0.040180833, 0.040224944, 0.040271125, 0.040319125, 0.040368167, 0.040415278, 0.040461375, 0.040505486, 0.040551694, 0.040595681, 0.040640833, 0.040685944, 0.040730028, 0.040778181, 0.040821...</msg>
<status status="PASS" starttime="20201112 12:27:40.952" endtime="20201112 12:27:40.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.991" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.989" endtime="20201112 12:27:40.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.997" level="INFO">VALUE: [3.7861000000000145e-05, 3.8361000000000645e-05, 3.754199999999458e-05, 3.799999999999637e-05, 3.736100000000658e-05, 3.804200000000202e-05, 3.7319000000000935e-05, 3.754200000000152e-05, 3.7874999999999714e-05, 3.752800000000195e-05, 3.8138999999999534e-05, 3.8027000000002975e-05, 3.802800000000245e-05, 3.7708999999996884e-05, 3.751399999999544e-05, 3.7874999999999714e-05, 3.7694999999997314e-05, 3.7680999999997744e-05, 3.820799999999791e-05, 3.772300000000339e-05, 3.802799999999551e-05, 3.8166999999998674e-05, 3.8361000000000645e-05, 3.750000000000281e-05, 3.830600000000184e-05, 3.8180999999998244e-05, 3.7360999999999644e-05, 3.834799999999361e-05, 3.801399999999594e-05, 3.804199999999508e-05, 3.7874999999999714e-05, 3.751399999999544e-05, 3.769399999999784e-05, 3.8346999999994136e-05, 3.7874999999999714e-05, 3.819399999999834e-05, 3.8027000000002975e-05, 3.817999999999877e-05, 3.767999999999827e-05, 3.7847000000000575e-05, 3.801399999999594e-05, 3.8333000000001505e-05, 3.8166999999998674e-05, 3.754200000000152e-05, 3.801400000000288e-05, 3.7861000000000145e-05, 3.7680999999997744e-05, 3.819399999999834e-05, 3.817999999999877e-05, 3.801400000000288e-05]</msg>
<status status="PASS" starttime="20201112 12:27:40.994" endtime="20201112 12:27:40.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.982" endtime="20201112 12:27:41.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.007" endtime="20201112 12:27:41.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.015" endtime="20201112 12:27:41.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.011" endtime="20201112 12:27:41.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.002" endtime="20201112 12:27:41.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.498" endtime="20201112 12:27:41.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.497" endtime="20201112 12:27:41.041"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.063" endtime="20201112 12:27:41.079"></status>
</kw>
<msg timestamp="20201112 12:27:41.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.060" endtime="20201112 12:27:41.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.083" endtime="20201112 12:27:41.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.089" endtime="20201112 12:27:41.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.053" endtime="20201112 12:27:41.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.047" endtime="20201112 12:27:41.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.112" endtime="20201112 12:27:41.446"></status>
</kw>
<msg timestamp="20201112 12:27:41.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040148944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040193472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.109" endtime="20201112 12:27:41.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040148944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040193472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.456" endtime="20201112 12:27:41.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.475" endtime="20201112 12:27:41.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.102" endtime="20201112 12:27:41.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.097" endtime="20201112 12:27:41.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.494" level="INFO">${RESULT} = [{'time': 0.040193472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.452800000000201e-05, 'source_diff': 4.452800000000201e-05}, {'time': 0.040245611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:41.485" endtime="20201112 12:27:41.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.524" level="INFO">${ACCURACY} = {'time': [0.040193472, 0.040245611, 0.040298653, 0.040350708, 0.040402889, 0.040454056, 0.040508056, 0.040561125, 0.040614333, 0.040667389, 0.040721458, 0.040775556, 0.040825681, 0.04087675, 0.0409309...</msg>
<status status="PASS" starttime="20201112 12:27:41.496" endtime="20201112 12:27:41.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.535" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.533" endtime="20201112 12:27:41.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.541" level="INFO">VALUE: [4.452800000000201e-05, 4.505500000000218e-05, 4.531999999999453e-05, 4.4347000000000136e-05, 4.4666999999998236e-05, 4.500000000000337e-05, 4.534800000000061e-05, 4.451400000000244e-05, 4.468000000000527e-05, 4.4902999999998916e-05, 4.4861000000000206e-05, 4.449999999999593e-05, 4.4709000000003885e-05, 4.4833000000001066e-05, 4.5166999999998736e-05, 4.4347000000000136e-05, 4.4652999999998666e-05, 4.4833000000001066e-05, 4.466599999999876e-05, 4.498599999999686e-05, 4.4833000000001066e-05, 4.4847000000000636e-05, 4.454199999999464e-05, 4.4847000000000636e-05, 4.502799999999557e-05, 4.5195000000004815e-05, 4.502799999999557e-05, 4.450000000000287e-05, 4.4666999999998236e-05, 4.523599999999711e-05, 4.495800000000466e-05, 4.452800000000201e-05, 4.448599999999636e-05, 4.450000000000287e-05, 4.5125000000000026e-05, 4.501400000000294e-05, 4.452799999999507e-05, 4.5361000000000706e-05, 4.4847000000000636e-05, 4.5166999999998736e-05, 4.53469999999942e-05, 4.5347000000001136e-05, 4.536200000000018e-05, 4.4874999999999776e-05, 4.5166999999998736e-05, 4.5138999999999596e-05, 4.4861000000000206e-05, 4.45139999999955e-05, 4.4610999999999956e-05, 4.452800000000201e-05]</msg>
<status status="PASS" starttime="20201112 12:27:41.538" endtime="20201112 12:27:41.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.526" endtime="20201112 12:27:41.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.551" endtime="20201112 12:27:41.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.559" endtime="20201112 12:27:41.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.554" endtime="20201112 12:27:41.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.546" endtime="20201112 12:27:41.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.043" endtime="20201112 12:27:41.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.042" endtime="20201112 12:27:41.585"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.607" endtime="20201112 12:27:41.625"></status>
</kw>
<msg timestamp="20201112 12:27:41.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.604" endtime="20201112 12:27:41.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.628" endtime="20201112 12:27:41.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.634" endtime="20201112 12:27:41.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.597" endtime="20201112 12:27:41.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.591" endtime="20201112 12:27:41.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.658" endtime="20201112 12:27:41.994"></status>
</kw>
<msg timestamp="20201112 12:27:42.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040322222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040370361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.654" endtime="20201112 12:27:42.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040322222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040370361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.003" endtime="20201112 12:27:42.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.022" endtime="20201112 12:27:42.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.647" endtime="20201112 12:27:42.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.643" endtime="20201112 12:27:42.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.041" level="INFO">${RESULT} = [{'time': 0.040370361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8139000000002596e-05, 'source_diff': 4.8139000000002596e-05}, {'time': 0.0404455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:42.032" endtime="20201112 12:27:42.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.072" level="INFO">${ACCURACY} = {'time': [0.040370361, 0.0404455, 0.040523653, 0.040600778, 0.040675903, 0.040756042, 0.040835194, 0.040911375, 0.0409865, 0.041064653, 0.041144819, 0.041222972, 0.041302125, 0.041381278, 0.041461458,...</msg>
<status status="PASS" starttime="20201112 12:27:42.043" endtime="20201112 12:27:42.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.083" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.081" endtime="20201112 12:27:42.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.089" level="INFO">VALUE: [4.8139000000002596e-05, 4.85139999999995e-05, 4.8403000000002416e-05, 4.837499999999634e-05, 4.8445000000001126e-05, 4.888899999999641e-05, 4.849999999999993e-05, 4.912499999999709e-05, 4.886100000000421e-05, 4.8667000000002236e-05, 4.879099999999942e-05, 4.829099999999892e-05, 4.85139999999995e-05, 4.8667000000002236e-05, 4.898600000000086e-05, 4.833300000000457e-05, 4.845800000000122e-05, 4.897199999999435e-05, 4.8415999999995574e-05, 4.849999999999993e-05, 4.8181000000001306e-05, 4.8473000000000266e-05, 4.911100000000446e-05, 4.849999999999993e-05, 4.88339999999976e-05, 4.834700000000414e-05, 4.827799999999882e-05, 4.908299999999838e-05, 4.8709000000000946e-05, 4.9014e-05, 4.87219999999941e-05, 4.88339999999976e-05, 4.830599999999796e-05, 4.81940000000014e-05, 4.8207999999994033e-05, 4.859700000000439e-05, 4.915200000000369e-05, 4.844400000000165e-05, 4.902799999999957e-05, 4.826399999999925e-05, 4.908299999999838e-05, 4.912499999999709e-05, 4.898600000000086e-05, 4.827799999999882e-05, 4.906999999999828e-05, 4.841600000000251e-05, 4.897199999999435e-05, 4.9014e-05, 4.902799999999957e-05, 4.820800000000097e-05]</msg>
<status status="PASS" starttime="20201112 12:27:42.085" endtime="20201112 12:27:42.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.074" endtime="20201112 12:27:42.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.098" endtime="20201112 12:27:42.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.106" endtime="20201112 12:27:42.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.102" endtime="20201112 12:27:42.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.094" endtime="20201112 12:27:42.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.587" endtime="20201112 12:27:42.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.586" endtime="20201112 12:27:42.132"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.155" endtime="20201112 12:27:42.172"></status>
</kw>
<msg timestamp="20201112 12:27:42.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.152" endtime="20201112 12:27:42.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.176" endtime="20201112 12:27:42.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.182" endtime="20201112 12:27:42.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.144" endtime="20201112 12:27:42.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.139" endtime="20201112 12:27:42.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.205" endtime="20201112 12:27:42.541"></status>
</kw>
<msg timestamp="20201112 12:27:42.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040215542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040264875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.202" endtime="20201112 12:27:42.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040215542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040264875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.551" endtime="20201112 12:27:42.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.569" endtime="20201112 12:27:42.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.195" endtime="20201112 12:27:42.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.190" endtime="20201112 12:27:42.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.590" level="INFO">${RESULT} = [{'time': 0.040264875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.933299999999863e-05, 'source_diff': 4.933299999999863e-05}, {'time': 0.040342028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:42.581" endtime="20201112 12:27:42.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.621" level="INFO">${ACCURACY} = {'time': [0.040264875, 0.040342028, 0.040423194, 0.040504375, 0.040583569, 0.040658694, 0.040736875, 0.040817056, 0.040897222, 0.040978403, 0.041054569, 0.041134736, 0.041214903, 0.041296069, 0.041374...</msg>
<status status="PASS" starttime="20201112 12:27:42.592" endtime="20201112 12:27:42.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.632" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.630" endtime="20201112 12:27:42.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.638" level="INFO">VALUE: [4.933299999999863e-05, 4.9195000000001876e-05, 4.959700000000539e-05, 4.987500000000478e-05, 5.011099999999852e-05, 4.9375000000004277e-05, 4.961099999999802e-05, 5.015299999999723e-05, 4.9915999999997074e-05, 5.01669999999968e-05, 4.977700000000085e-05, 4.959699999999845e-05, 4.968099999999587e-05, 4.927700000000035e-05, 4.926300000000078e-05, 4.947200000000179e-05, 4.994400000000315e-05, 4.9917000000003486e-05, 4.954100000000017e-05, 4.931899999999906e-05, 4.980599999999946e-05, 4.908399999999785e-05, 5.011099999999852e-05, 4.925000000000068e-05, 5.013899999999766e-05, 4.958299999999888e-05, 4.93469999999982e-05, 4.962499999999759e-05, 4.96669999999963e-05, 4.959799999999792e-05, 4.926400000000025e-05, 4.927799999999982e-05, 5.00549999999933e-05, 5.0153000000004166e-05, 4.9637999999997684e-05, 4.9165999999996324e-05, 4.941699999999605e-05, 4.9709000000001946e-05, 4.926400000000025e-05, 4.990299999999698e-05, 5.00549999999933e-05, 4.993099999999612e-05, 5.004200000000014e-05, 4.9707999999995534e-05, 5.012499999999809e-05, 4.93339999999981e-05, 4.9679999999996394e-05, 4.987499999999784e-05, 4.937499999999734e-05, 4.954100000000017e-05]</msg>
<status status="PASS" starttime="20201112 12:27:42.634" endtime="20201112 12:27:42.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.623" endtime="20201112 12:27:42.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.647" endtime="20201112 12:27:42.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.655" endtime="20201112 12:27:42.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.651" endtime="20201112 12:27:42.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.643" endtime="20201112 12:27:42.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.134" endtime="20201112 12:27:42.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.133" endtime="20201112 12:27:42.681"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.704" endtime="20201112 12:27:42.721"></status>
</kw>
<msg timestamp="20201112 12:27:42.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.700" endtime="20201112 12:27:42.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.724" endtime="20201112 12:27:42.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.731" endtime="20201112 12:27:42.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.693" endtime="20201112 12:27:42.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.688" endtime="20201112 12:27:42.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.756" endtime="20201112 12:27:43.090"></status>
</kw>
<msg timestamp="20201112 12:27:43.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040079194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.752" endtime="20201112 12:27:43.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040079194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.099" endtime="20201112 12:27:43.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.118" endtime="20201112 12:27:43.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.745" endtime="20201112 12:27:43.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.740" endtime="20201112 12:27:43.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.137" level="INFO">${RESULT} = [{'time': 0.040079194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0221999999995603e-05, 'source_diff': 5.0221999999995603e-05}, {'time': 0.040160389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:43.128" endtime="20201112 12:27:43.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.168" level="INFO">${ACCURACY} = {'time': [0.040079194, 0.040160389, 0.040241514, 0.040320681, 0.040401833, 0.040479014, 0.040561181, 0.040640361, 0.040721514, 0.040798708, 0.040880917, 0.040958028, 0.041039208, 0.041118444, 0.041198...</msg>
<status status="PASS" starttime="20201112 12:27:43.139" endtime="20201112 12:27:43.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.179" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.176" endtime="20201112 12:27:43.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.184" level="INFO">VALUE: [5.0221999999995603e-05, 5.077799999999438e-05, 5.115299999999823e-05, 5.082000000000003e-05, 5.029100000000092e-05, 5.059699999999945e-05, 5.080600000000046e-05, 5.058299999999988e-05, 5.0431000000003556e-05, 5.01940000000034e-05, 5.080600000000046e-05, 5.029200000000039e-05, 5.03469999999992e-05, 5.1151999999998754e-05, 5.036099999999877e-05, 5.112499999999909e-05, 5.0985999999995923e-05, 5.0181000000003306e-05, 5.088900000000535e-05, 5.088899999999841e-05, 5.0417000000003986e-05, 5.0709000000002946e-05, 5.027700000000135e-05, 5.03469999999992e-05, 5.025000000000168e-05, 5.0681000000003806e-05, 5.0401999999998004e-05, 5.0721999999996104e-05, 5.10270000000021e-05, 5.109699999999995e-05, 5.108300000000038e-05, 5.052800000000107e-05, 5.040299999999748e-05, 5.030500000000049e-05, 5.037499999999834e-05, 5.01940000000034e-05, 5.0971999999996354e-05, 5.0667000000004236e-05, 5.109799999999942e-05, 5.043099999999662e-05, 5.0695000000003376e-05, 5.030599999999996e-05, 5.041699999999705e-05, 5.047200000000279e-05, 5.0929999999997644e-05, 5.079200000000089e-05, 5.052799999999413e-05, 5.070899999999601e-05, 5.1165999999998324e-05, 5.054200000000064e-05]</msg>
<status status="PASS" starttime="20201112 12:27:43.181" endtime="20201112 12:27:43.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.170" endtime="20201112 12:27:43.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.194" endtime="20201112 12:27:43.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.202" endtime="20201112 12:27:43.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.198" endtime="20201112 12:27:43.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.189" endtime="20201112 12:27:43.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.683" endtime="20201112 12:27:43.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.682" endtime="20201112 12:27:43.228"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.251" endtime="20201112 12:27:43.268"></status>
</kw>
<msg timestamp="20201112 12:27:43.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.247" endtime="20201112 12:27:43.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.271" endtime="20201112 12:27:43.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.278" endtime="20201112 12:27:43.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.240" endtime="20201112 12:27:43.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.234" endtime="20201112 12:27:43.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.301" endtime="20201112 12:27:43.636"></status>
</kw>
<msg timestamp="20201112 12:27:43.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040151667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040203458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.298" endtime="20201112 12:27:43.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040151667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040203458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.645" endtime="20201112 12:27:43.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.664" endtime="20201112 12:27:43.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.291" endtime="20201112 12:27:43.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.286" endtime="20201112 12:27:43.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.683" level="INFO">${RESULT} = [{'time': 0.040203458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.179099999999548e-05, 'source_diff': 5.179099999999548e-05}, {'time': 0.040281611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:43.674" endtime="20201112 12:27:43.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.714" level="INFO">${ACCURACY} = {'time': [0.040203458, 0.040281611, 0.040361764, 0.040442972, 0.040521153, 0.040598278, 0.040679431, 0.040760667, 0.040843778, 0.040921931, 0.041003069, 0.04108425, 0.041167403, 0.041251583, 0.0413327...</msg>
<status status="PASS" starttime="20201112 12:27:43.685" endtime="20201112 12:27:43.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.725" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.723" endtime="20201112 12:27:43.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.730" level="INFO">VALUE: [5.179099999999548e-05, 5.140299999999848e-05, 5.180600000000146e-05, 5.213899999999966e-05, 5.195899999999726e-05, 5.129200000000139e-05, 5.177800000000232e-05, 5.190299999999898e-05, 5.140299999999848e-05, 5.1709000000003946e-05, 5.145800000000422e-05, 5.136099999999977e-05, 5.179199999999495e-05, 5.205500000000224e-05, 5.219499999999794e-05, 5.1221999999996604e-05, 5.162499999999959e-05, 5.1931000000005056e-05, 5.118099999999737e-05, 5.1401999999999004e-05, 5.205599999999477e-05, 5.127699999999541e-05, 5.148600000000336e-05, 5.120800000000397e-05, 5.129100000000192e-05, 5.1485999999996424e-05, 5.1695000000004376e-05, 5.1653000000005667e-05, 5.119499999999694e-05, 5.113899999999866e-05, 5.1985999999996924e-05, 5.1707999999997534e-05, 5.213899999999966e-05, 5.206900000000181e-05, 5.154200000000164e-05, 5.193099999999812e-05, 5.188899999999941e-05, 5.147299999999633e-05, 5.1637999999999684e-05, 5.198600000000386e-05, 5.179199999999495e-05, 5.197200000000429e-05, 5.179200000000189e-05, 5.137499999999934e-05, 5.1401999999999004e-05, 5.133300000000063e-05, 5.133300000000063e-05, 5.1235999999996173e-05, 5.191699999999855e-05, 5.134799999999967e-05]</msg>
<status status="PASS" starttime="20201112 12:27:43.727" endtime="20201112 12:27:43.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.716" endtime="20201112 12:27:43.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.740" endtime="20201112 12:27:43.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.748" endtime="20201112 12:27:43.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.744" endtime="20201112 12:27:43.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.735" endtime="20201112 12:27:43.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.230" endtime="20201112 12:27:43.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.229" endtime="20201112 12:27:43.775"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.798" endtime="20201112 12:27:43.816"></status>
</kw>
<msg timestamp="20201112 12:27:43.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.795" endtime="20201112 12:27:43.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.819" endtime="20201112 12:27:43.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.826" endtime="20201112 12:27:43.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.787" endtime="20201112 12:27:43.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.781" endtime="20201112 12:27:43.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.849" endtime="20201112 12:27:44.183"></status>
</kw>
<msg timestamp="20201112 12:27:44.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041945083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041997861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.846" endtime="20201112 12:27:44.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041945083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041997861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.192" endtime="20201112 12:27:44.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.211" endtime="20201112 12:27:44.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.838" endtime="20201112 12:27:44.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.834" endtime="20201112 12:27:44.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.230" level="INFO">${RESULT} = [{'time': 0.041997861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277799999999638e-05, 'source_diff': 5.277799999999638e-05}, {'time': 0.042076069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:44.221" endtime="20201112 12:27:44.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:44.261" level="INFO">${ACCURACY} = {'time': [0.041997861, 0.042076069, 0.042156167, 0.042240333, 0.042324514, 0.042405667, 0.042486833, 0.042565028, 0.042646139, 0.042725306, 0.042804458, 0.042887653, 0.042970806, 0.043053972, 0.043133...</msg>
<status status="PASS" starttime="20201112 12:27:44.232" endtime="20201112 12:27:44.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.272" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:44.270" endtime="20201112 12:27:44.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.278" level="INFO">VALUE: [5.277799999999638e-05, 5.2415999999999574e-05, 5.295899999999826e-05, 5.2902000000000504e-05, 5.2707999999998534e-05, 5.237500000000034e-05, 5.25140000000035e-05, 5.219499999999794e-05, 5.287500000000084e-05, 5.237500000000034e-05, 5.2471999999997854e-05, 5.2999999999997494e-05, 5.2237000000003586e-05, 5.225000000000368e-05, 5.315300000000023e-05, 5.226400000000325e-05, 5.2957999999998784e-05, 5.2999999999997494e-05, 5.284800000000117e-05, 5.302800000000357e-05, 5.255600000000221e-05, 5.25140000000035e-05, 5.308300000000238e-05, 5.2695000000005376e-05, 5.251299999999709e-05, 5.313900000000066e-05, 5.308300000000238e-05, 5.276400000000375e-05, 5.252799999999613e-05, 5.2929999999999644e-05, 5.2402000000000004e-05, 5.2916000000000074e-05, 5.2235999999997174e-05, 5.304200000000314e-05, 5.2929999999999644e-05, 5.248600000000436e-05, 5.230500000000249e-05, 5.247200000000479e-05, 5.279200000000289e-05, 5.304200000000314e-05, 5.2707999999998534e-05, 5.256899999999537e-05, 5.244499999999819e-05, 5.2179999999998894e-05, 5.306899999999587e-05, 5.259699999999451e-05, 5.280599999999552e-05, 5.230500000000249e-05, 5.306900000000281e-05, 5.244499999999819e-05]</msg>
<status status="PASS" starttime="20201112 12:27:44.274" endtime="20201112 12:27:44.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.263" endtime="20201112 12:27:44.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.287" endtime="20201112 12:27:44.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.295" endtime="20201112 12:27:44.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.291" endtime="20201112 12:27:44.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.283" endtime="20201112 12:27:44.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.777" endtime="20201112 12:27:44.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.775" endtime="20201112 12:27:44.321"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.344" endtime="20201112 12:27:44.362"></status>
</kw>
<msg timestamp="20201112 12:27:44.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.341" endtime="20201112 12:27:44.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.365" endtime="20201112 12:27:44.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.372" endtime="20201112 12:27:44.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.333" endtime="20201112 12:27:44.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.328" endtime="20201112 12:27:44.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.395" endtime="20201112 12:27:44.731"></status>
</kw>
<msg timestamp="20201112 12:27:44.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040210389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.392" endtime="20201112 12:27:44.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040210389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.741" endtime="20201112 12:27:44.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.760" endtime="20201112 12:27:44.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.385" endtime="20201112 12:27:44.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.380" endtime="20201112 12:27:44.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.781" level="INFO">${RESULT} = [{'time': 0.040263597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3207999999999034e-05, 'source_diff': 5.3207999999999034e-05}, {'time': 0.040347764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:44.772" endtime="20201112 12:27:44.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:44.812" level="INFO">${ACCURACY} = {'time': [0.040263597, 0.040347764, 0.040428944, 0.040512069, 0.040597222, 0.040678389, 0.040762611, 0.040844694, 0.040930875, 0.041016014, 0.041100222, 0.041181333, 0.041265528, 0.041349681, 0.041433...</msg>
<status status="PASS" starttime="20201112 12:27:44.783" endtime="20201112 12:27:44.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.823" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:44.821" endtime="20201112 12:27:44.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.829" level="INFO">VALUE: [5.3207999999999034e-05, 5.359700000000245e-05, 5.3999999999998494e-05, 5.402699999999816e-05, 5.3930000000000644e-05, 5.363900000000116e-05, 5.379199999999695e-05, 5.3707999999999534e-05, 5.413900000000166e-05, 5.3945000000006627e-05, 5.379099999999748e-05, 5.406900000000381e-05, 5.35140000000045e-05, 5.332000000000253e-05, 5.327800000000382e-05, 5.325000000000468e-05, 5.4208000000000034e-05, 5.3165999999993385e-05, 5.35140000000045e-05, 5.338900000000091e-05, 5.340300000000048e-05, 5.3971999999999354e-05, 5.413900000000166e-05, 5.3499999999997994e-05, 5.35419999999967e-05, 5.33749999999944e-05, 5.3485999999998424e-05, 5.412500000000209e-05, 5.311100000000152e-05, 5.393100000000012e-05, 5.412500000000209e-05, 5.3693999999999964e-05, 5.391700000000055e-05, 5.379199999999695e-05, 5.334800000000167e-05, 5.362500000000159e-05, 5.3471999999998854e-05, 5.36670000000003e-05, 5.355500000000374e-05, 5.400000000000543e-05, 5.409699999999601e-05, 5.343099999999962e-05, 5.331900000000306e-05, 5.390300000000098e-05, 5.3235999999998174e-05, 5.391700000000055e-05, 5.390300000000098e-05, 5.33619999999943e-05, 5.406900000000381e-05, 5.363900000000116e-05]</msg>
<status status="PASS" starttime="20201112 12:27:44.826" endtime="20201112 12:27:44.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.814" endtime="20201112 12:27:44.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.839" endtime="20201112 12:27:44.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.847" endtime="20201112 12:27:44.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.843" endtime="20201112 12:27:44.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.834" endtime="20201112 12:27:44.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.323" endtime="20201112 12:27:44.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.322" endtime="20201112 12:27:44.873"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.895" endtime="20201112 12:27:44.913"></status>
</kw>
<msg timestamp="20201112 12:27:44.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.892" endtime="20201112 12:27:44.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.917" endtime="20201112 12:27:44.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.923" endtime="20201112 12:27:44.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.885" endtime="20201112 12:27:44.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.879" endtime="20201112 12:27:44.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.946" endtime="20201112 12:27:45.280"></status>
</kw>
<msg timestamp="20201112 12:27:45.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040195069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040250278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.943" endtime="20201112 12:27:45.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040195069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040250278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.290" endtime="20201112 12:27:45.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.309" endtime="20201112 12:27:45.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.935" endtime="20201112 12:27:45.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.931" endtime="20201112 12:27:45.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:45.328" level="INFO">${RESULT} = [{'time': 0.040250278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.520900000000051e-05, 'source_diff': 5.520900000000051e-05}, {'time': 0.040333403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:45.319" endtime="20201112 12:27:45.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:45.359" level="INFO">${ACCURACY} = {'time': [0.040250278, 0.040333403, 0.040417528, 0.040498694, 0.040578847, 0.040662014, 0.040748153, 0.040834292, 0.040918444, 0.040998569, 0.041080722, 0.041162903, 0.041248056, 0.041330222, 0.041411...</msg>
<status status="PASS" starttime="20201112 12:27:45.330" endtime="20201112 12:27:45.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.370" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:45.368" endtime="20201112 12:27:45.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.375" level="INFO">VALUE: [5.520900000000051e-05, 5.486099999999633e-05, 5.443100000000062e-05, 5.487500000000284e-05, 5.431900000000406e-05, 5.4471999999999854e-05, 5.458400000000335e-05, 5.493100000000112e-05, 5.508299999999744e-05, 5.426299999999884e-05, 5.4944000000001214e-05, 5.506999999999734e-05, 5.447299999999933e-05, 5.508299999999744e-05, 5.483299999999719e-05, 5.4221999999999604e-05, 5.4694000000000964e-05, 5.4944000000001214e-05, 5.43749999999954e-05, 5.486200000000274e-05, 5.48749999999959e-05, 5.4763999999998814e-05, 5.431900000000406e-05, 5.4541999999997703e-05, 5.490300000000198e-05, 5.486100000000327e-05, 5.4694000000000964e-05, 5.456999999999684e-05, 5.44869999999989e-05, 5.4430000000001144e-05, 5.520900000000051e-05, 5.4972000000000354e-05, 5.4221999999999604e-05, 5.50549999999983e-05, 5.433399999999616e-05, 5.434800000000267e-05, 5.4985999999999924e-05, 5.462500000000259e-05, 5.4722000000000104e-05, 5.4652000000002254e-05, 5.441700000000105e-05, 5.427800000000482e-05, 5.46670000000013e-05, 5.4499999999998994e-05, 5.4277999999997883e-05, 5.482000000000403e-05, 5.463900000000216e-05, 5.4680000000001394e-05, 5.418100000000037e-05, 5.515300000000223e-05]</msg>
<status status="PASS" starttime="20201112 12:27:45.372" endtime="20201112 12:27:45.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.361" endtime="20201112 12:27:45.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.385" endtime="20201112 12:27:45.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.393" endtime="20201112 12:27:45.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.389" endtime="20201112 12:27:45.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.380" endtime="20201112 12:27:45.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.875" endtime="20201112 12:27:45.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.874" endtime="20201112 12:27:45.419"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.442" endtime="20201112 12:27:45.459"></status>
</kw>
<msg timestamp="20201112 12:27:45.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.438" endtime="20201112 12:27:45.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.463" endtime="20201112 12:27:45.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.469" endtime="20201112 12:27:45.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.431" endtime="20201112 12:27:45.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.425" endtime="20201112 12:27:45.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.492" endtime="20201112 12:27:45.824"></status>
</kw>
<msg timestamp="20201112 12:27:45.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:45.489" endtime="20201112 12:27:45.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:45.834" endtime="20201112 12:27:45.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.853" endtime="20201112 12:27:45.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.482" endtime="20201112 12:27:45.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.477" endtime="20201112 12:27:45.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:45.872" level="INFO">${RESULT} = [{'time': 0.040248, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5777999999999384e-05, 'source_diff': 5.5777999999999384e-05}, {'time': 0.040330181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:45.863" endtime="20201112 12:27:45.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:45.902" level="INFO">${ACCURACY} = {'time': [0.040248, 0.040330181, 0.040412361, 0.0404945, 0.040580667, 0.040666833, 0.040752069, 0.040837194, 0.040921347, 0.041008556, 0.04109475, 0.041180931, 0.041265083, 0.04135125, 0.041434417, 0....</msg>
<status status="PASS" starttime="20201112 12:27:45.874" endtime="20201112 12:27:45.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.913" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:45.911" endtime="20201112 12:27:45.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.919" level="INFO">VALUE: [5.5777999999999384e-05, 5.547300000000033e-05, 5.530499999999855e-05, 5.581900000000556e-05, 5.547300000000033e-05, 5.527699999999941e-05, 5.536100000000377e-05, 5.586099999999733e-05, 5.562499999999665e-05, 5.541700000000205e-05, 5.543100000000162e-05, 5.545899999999382e-05, 5.613900000000366e-05, 5.590299999999604e-05, 5.595900000000126e-05, 5.527699999999941e-05, 5.584699999999776e-05, 5.593100000000212e-05, 5.530499999999855e-05, 5.587500000000384e-05, 5.597300000000083e-05, 5.538900000000291e-05, 5.6055999999998773e-05, 5.5305999999998023e-05, 5.5736000000000674e-05, 5.5263999999999314e-05, 5.611100000000452e-05, 5.527699999999941e-05, 5.615300000000323e-05, 5.608400000000485e-05, 5.5486000000000424e-05, 5.5527999999999134e-05, 5.5665999999995885e-05, 5.584699999999776e-05, 5.5651999999996316e-05, 5.608299999999844e-05, 5.53749999999964e-05, 5.588900000000341e-05, 5.6014000000000064e-05, 5.5680000000002394e-05, 5.5180000000001894e-05, 5.6014000000000064e-05, 5.5277999999998884e-05, 5.5708000000001534e-05, 5.593100000000212e-05, 5.590300000000298e-05, 5.595900000000126e-05, 5.5486000000000424e-05, 5.545899999999382e-05, 5.595900000000126e-05]</msg>
<status status="PASS" starttime="20201112 12:27:45.915" endtime="20201112 12:27:45.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.904" endtime="20201112 12:27:45.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.935" endtime="20201112 12:27:45.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.943" endtime="20201112 12:27:45.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.939" endtime="20201112 12:27:45.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.930" endtime="20201112 12:27:45.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.421" endtime="20201112 12:27:45.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.420" endtime="20201112 12:27:45.969"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.991" endtime="20201112 12:27:46.009"></status>
</kw>
<msg timestamp="20201112 12:27:46.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.988" endtime="20201112 12:27:46.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.012" endtime="20201112 12:27:46.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.018" endtime="20201112 12:27:46.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.980" endtime="20201112 12:27:46.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.975" endtime="20201112 12:27:46.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.041" endtime="20201112 12:27:46.372"></status>
</kw>
<msg timestamp="20201112 12:27:46.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039858542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039915, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:46.038" endtime="20201112 12:27:46.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039858542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039915, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:46.381" endtime="20201112 12:27:46.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.399" endtime="20201112 12:27:46.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.031" endtime="20201112 12:27:46.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.026" endtime="20201112 12:27:46.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.418" level="INFO">${RESULT} = [{'time': 0.039915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6458000000002284e-05, 'source_diff': 5.6458000000002284e-05}, {'time': 0.040000194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:46.409" endtime="20201112 12:27:46.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:46.449" level="INFO">${ACCURACY} = {'time': [0.039915, 0.040000194, 0.040086361, 0.040174556, 0.040258722, 0.040346931, 0.040433111, 0.040521333, 0.040604514, 0.040693736, 0.040776903, 0.040864083, 0.040949264, 0.041037458, 0.041120639...</msg>
<status status="PASS" starttime="20201112 12:27:46.420" endtime="20201112 12:27:46.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.460" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:46.457" endtime="20201112 12:27:46.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.465" level="INFO">VALUE: [5.6458000000002284e-05, 5.6958000000002784e-05, 5.6458000000002284e-05, 5.693100000000312e-05, 5.6513999999993625e-05, 5.640300000000348e-05, 5.6291999999999454e-05, 5.713899999999772e-05, 5.659699999999851e-05, 5.7014000000001064e-05, 5.662500000000459e-05, 5.65549999999998e-05, 5.715299999999729e-05, 5.6401999999997066e-05, 5.686099999999833e-05, 5.616699999999586e-05, 5.6958000000002784e-05, 5.6500000000000994e-05, 5.668100000000287e-05, 5.663900000000416e-05, 5.711099999999858e-05, 5.6208000000002034e-05, 5.6235999999994235e-05, 5.63470000000052e-05, 5.71670000000038e-05, 5.654100000000023e-05, 5.61670000000028e-05, 5.618099999999543e-05, 5.694500000000269e-05, 5.6291999999999454e-05, 5.657000000000578e-05, 5.706899999999987e-05, 5.638899999999697e-05, 5.6472000000001854e-05, 5.687500000000484e-05, 5.708299999999944e-05, 5.6528000000000134e-05, 5.65549999999998e-05, 5.6222000000001604e-05, 5.618100000000237e-05, 5.6750000000001244e-05, 5.63470000000052e-05, 5.691700000000355e-05, 5.6500000000000994e-05, 5.6986000000001924e-05, 5.644500000000219e-05, 5.6651999999997316e-05, 5.686100000000527e-05, 5.6750000000001244e-05, 5.6958000000002784e-05]</msg>
<status status="PASS" starttime="20201112 12:27:46.462" endtime="20201112 12:27:46.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.451" endtime="20201112 12:27:46.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.474" endtime="20201112 12:27:46.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:46.482" endtime="20201112 12:27:46.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.478" endtime="20201112 12:27:46.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.470" endtime="20201112 12:27:46.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.971" endtime="20201112 12:27:46.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.969" endtime="20201112 12:27:46.508"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.531" endtime="20201112 12:27:46.548"></status>
</kw>
<msg timestamp="20201112 12:27:46.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.527" endtime="20201112 12:27:46.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.552" endtime="20201112 12:27:46.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.558" endtime="20201112 12:27:46.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.520" endtime="20201112 12:27:46.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.514" endtime="20201112 12:27:46.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.581" endtime="20201112 12:27:46.913"></status>
</kw>
<msg timestamp="20201112 12:27:46.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039905486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039962681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.578" endtime="20201112 12:27:46.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039905486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039962681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.922" endtime="20201112 12:27:46.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.941" endtime="20201112 12:27:46.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.571" endtime="20201112 12:27:46.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.566" endtime="20201112 12:27:46.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.961" level="INFO">${RESULT} = [{'time': 0.039962681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.719500000000294e-05, 'source_diff': 5.719500000000294e-05}, {'time': 0.040048875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:46.953" endtime="20201112 12:27:46.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:46.992" level="INFO">${ACCURACY} = {'time': [0.039962681, 0.040048875, 0.040133028, 0.040219194, 0.040306444, 0.040392639, 0.040482778, 0.040571958, 0.040659139, 0.040744347, 0.0408295, 0.040915653, 0.041001861, 0.041090014, 0.04117418...</msg>
<status status="PASS" starttime="20201112 12:27:46.963" endtime="20201112 12:27:46.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.003" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:47.000" endtime="20201112 12:27:47.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.008" level="INFO">VALUE: [5.719500000000294e-05, 5.7528000000001134e-05, 5.745900000000276e-05, 5.756900000000037e-05, 5.733299999999969e-05, 5.7972000000003354e-05, 5.795899999999632e-05, 5.7457999999996345e-05, 5.762499999999865e-05, 5.731900000000012e-05, 5.784699999999976e-05, 5.761100000000602e-05, 5.741699999999711e-05, 5.8000000000002494e-05, 5.716699999999686e-05, 5.7514000000001564e-05, 5.7972000000003354e-05, 5.731900000000012e-05, 5.766699999999736e-05, 5.7694000000003964e-05, 5.8028000000001634e-05, 5.733299999999969e-05, 5.727700000000141e-05, 5.7292000000000454e-05, 5.7194999999996e-05, 5.736099999999883e-05, 5.7250000000001744e-05, 5.797300000000283e-05, 5.736099999999883e-05, 5.787500000000584e-05, 5.812499999999915e-05, 5.7958000000003784e-05, 5.766699999999736e-05, 5.7486000000002424e-05, 5.8165999999998386e-05, 5.811099999999958e-05, 5.7693999999997025e-05, 5.820900000000351e-05, 5.7485999999995485e-05, 5.741699999999711e-05, 5.741699999999711e-05, 5.77629999999954e-05, 5.734699999999926e-05, 5.7887999999998996e-05, 5.7180000000003894e-05, 5.795900000000326e-05, 5.759699999999951e-05, 5.734699999999926e-05, 5.815300000000523e-05, 5.780500000000105e-05]</msg>
<status status="PASS" starttime="20201112 12:27:47.005" endtime="20201112 12:27:47.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.994" endtime="20201112 12:27:47.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.018" endtime="20201112 12:27:47.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:47.026" endtime="20201112 12:27:47.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.021" endtime="20201112 12:27:47.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.013" endtime="20201112 12:27:47.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.510" endtime="20201112 12:27:47.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.509" endtime="20201112 12:27:47.051"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.074" endtime="20201112 12:27:47.091"></status>
</kw>
<msg timestamp="20201112 12:27:47.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.070" endtime="20201112 12:27:47.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.095" endtime="20201112 12:27:47.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.101" endtime="20201112 12:27:47.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.063" endtime="20201112 12:27:47.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.058" endtime="20201112 12:27:47.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.124" endtime="20201112 12:27:47.455"></status>
</kw>
<msg timestamp="20201112 12:27:47.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039576125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03963525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:47.120" endtime="20201112 12:27:47.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039576125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03963525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:47.464" endtime="20201112 12:27:47.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.483" endtime="20201112 12:27:47.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.113" endtime="20201112 12:27:47.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.109" endtime="20201112 12:27:47.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.502" level="INFO">${RESULT} = [{'time': 0.03963525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.912500000000015e-05, 'source_diff': 5.912500000000015e-05}, {'time': 0.039723403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:47.493" endtime="20201112 12:27:47.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:47.532" level="INFO">${ACCURACY} = {'time': [0.03963525, 0.039723403, 0.039809583, 0.039895819, 0.039984958, 0.040072153, 0.040162333, 0.040247542, 0.040332667, 0.040418861, 0.040505028, 0.040590208, 0.040681417, 0.040771569, 0.0408577...</msg>
<status status="PASS" starttime="20201112 12:27:47.504" endtime="20201112 12:27:47.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.543" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:47.541" endtime="20201112 12:27:47.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.548" level="INFO">VALUE: [5.912500000000015e-05, 5.866699999999836e-05, 5.877700000000291e-05, 5.904099999999579e-05, 5.838899999999897e-05, 5.8249999999995805e-05, 5.859700000000051e-05, 5.8513999999995625e-05, 5.8486000000003424e-05, 5.8264000000002314e-05, 5.86949999999975e-05, 5.8916000000006075e-05, 5.912500000000015e-05, 5.879100000000248e-05, 5.891699999999861e-05, 5.9013999999996125e-05, 5.840299999999854e-05, 5.847299999999639e-05, 5.88749999999999e-05, 5.868100000000487e-05, 5.8528000000002134e-05, 5.836099999999983e-05, 5.833300000000069e-05, 5.8556000000001274e-05, 5.9014000000003064e-05, 5.86949999999975e-05, 5.893099999999818e-05, 5.836099999999983e-05, 5.8500000000002994e-05, 5.872300000000358e-05, 5.8763999999995875e-05, 5.8805999999994585e-05, 5.8292000000001454e-05, 5.834700000000026e-05, 5.891699999999861e-05, 5.8250000000002744e-05, 5.886100000000033e-05, 5.9041999999995265e-05, 5.904100000000273e-05, 5.83749999999994e-05, 5.88749999999999e-05, 5.909700000000101e-05, 5.838899999999897e-05, 5.862499999999965e-05, 5.8985999999996985e-05, 5.863899999999922e-05, 5.8971999999997415e-05, 5.8208000000004034e-05, 5.838899999999897e-05, 5.8957999999997845e-05]</msg>
<status status="PASS" starttime="20201112 12:27:47.545" endtime="20201112 12:27:47.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.534" endtime="20201112 12:27:47.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.558" endtime="20201112 12:27:47.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:47.566" endtime="20201112 12:27:47.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.562" endtime="20201112 12:27:47.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.553" endtime="20201112 12:27:47.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.053" endtime="20201112 12:27:47.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.052" endtime="20201112 12:27:47.592"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.614" endtime="20201112 12:27:47.632"></status>
</kw>
<msg timestamp="20201112 12:27:47.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.611" endtime="20201112 12:27:47.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.635" endtime="20201112 12:27:47.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.641" endtime="20201112 12:27:47.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.604" endtime="20201112 12:27:47.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.598" endtime="20201112 12:27:47.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.664" endtime="20201112 12:27:47.997"></status>
</kw>
<msg timestamp="20201112 12:27:48.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039655444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039714931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.661" endtime="20201112 12:27:48.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039655444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039714931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.007" endtime="20201112 12:27:48.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.025" endtime="20201112 12:27:48.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.654" endtime="20201112 12:27:48.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.649" endtime="20201112 12:27:48.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.044" level="INFO">${RESULT} = [{'time': 0.039714931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.94870000000039e-05, 'source_diff': 5.94870000000039e-05}, {'time': 0.039806153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:48.035" endtime="20201112 12:27:48.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:48.075" level="INFO">${ACCURACY} = {'time': [0.039714931, 0.039806153, 0.039894306, 0.039980472, 0.040070639, 0.040161833, 0.040249028, 0.040335181, 0.040426319, 0.040518472, 0.040605667, 0.040696819, 0.040782014, 0.040870194, 0.040958...</msg>
<status status="PASS" starttime="20201112 12:27:48.046" endtime="20201112 12:27:48.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.086" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:48.083" endtime="20201112 12:27:48.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.091" level="INFO">VALUE: [5.94870000000039e-05, 5.984699999999482e-05, 5.943099999999868e-05, 5.9972000000005354e-05, 5.965299999999979e-05, 5.9500000000003994e-05, 5.965299999999979e-05, 5.9791999999996015e-05, 5.9250000000003744e-05, 6.006900000000287e-05, 5.961100000000108e-05, 5.933300000000169e-05, 5.9570000000001844e-05, 5.9652000000000316e-05, 6.009699999999507e-05, 5.968099999999893e-05, 5.938899999999997e-05, 5.9457999999998346e-05, 5.9736000000004674e-05, 5.9429999999999206e-05, 6.0042000000003204e-05, 5.9207999999998095e-05, 5.986100000000133e-05, 5.9193999999998526e-05, 5.9416000000006575e-05, 6.0083999999994975e-05, 5.983300000000219e-05, 6.011100000000158e-05, 5.9221999999997665e-05, 6.0028000000003634e-05, 5.984700000000176e-05, 5.9221999999997665e-05, 5.9806000000002524e-05, 6.0000000000004494e-05, 5.9277999999995945e-05, 5.9584000000001414e-05, 5.988900000000047e-05, 5.958300000000194e-05, 5.998699999999746e-05, 5.9999999999997555e-05, 6.0028000000003634e-05, 5.9277999999995945e-05, 5.9264000000003314e-05, 6.0193999999999526e-05, 5.981899999999568e-05, 5.9263999999996375e-05, 5.930499999999561e-05, 5.9236000000004174e-05, 6.013900000000072e-05, 6.0028000000003634e-05]</msg>
<status status="PASS" starttime="20201112 12:27:48.088" endtime="20201112 12:27:48.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.077" endtime="20201112 12:27:48.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.100" endtime="20201112 12:27:48.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.109" endtime="20201112 12:27:48.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.104" endtime="20201112 12:27:48.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.096" endtime="20201112 12:27:48.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.594" endtime="20201112 12:27:48.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.593" endtime="20201112 12:27:48.134"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.157" endtime="20201112 12:27:48.175"></status>
</kw>
<msg timestamp="20201112 12:27:48.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.154" endtime="20201112 12:27:48.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.178" endtime="20201112 12:27:48.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.184" endtime="20201112 12:27:48.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.146" endtime="20201112 12:27:48.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.141" endtime="20201112 12:27:48.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.207" endtime="20201112 12:27:48.540"></status>
</kw>
<msg timestamp="20201112 12:27:48.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039872819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039933972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.204" endtime="20201112 12:27:48.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039872819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039933972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.549" endtime="20201112 12:27:48.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.567" endtime="20201112 12:27:48.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.197" endtime="20201112 12:27:48.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.192" endtime="20201112 12:27:48.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.586" level="INFO">${RESULT} = [{'time': 0.039933972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.115300000000129e-05, 'source_diff': 6.115300000000129e-05}, {'time': 0.040026167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:48.577" endtime="20201112 12:27:48.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:48.617" level="INFO">${ACCURACY} = {'time': [0.039933972, 0.040026167, 0.040114361, 0.040200583, 0.040289819, 0.040381958, 0.040469139, 0.040560333, 0.040653569, 0.04074275, 0.040832958, 0.040922139, 0.041012347, 0.041103528, 0.0411917...</msg>
<status status="PASS" starttime="20201112 12:27:48.588" endtime="20201112 12:27:48.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.628" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:48.625" endtime="20201112 12:27:48.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.633" level="INFO">VALUE: [6.115300000000129e-05, 6.097299999999889e-05, 6.062500000000165e-05, 6.031899999999618e-05, 6.027699999999747e-05, 6.0986000000005924e-05, 6.059700000000251e-05, 6.031899999999618e-05, 6.113800000000225e-05, 6.0292000000003454e-05, 6.0250000000004744e-05, 6.093100000000018e-05, 6.040300000000054e-05, 6.061100000000208e-05, 6.038900000000097e-05, 6.0221999999998665e-05, 6.0263999999997375e-05, 6.0527999999997195e-05, 6.0334000000002164e-05, 6.059699999999557e-05, 6.081899999999668e-05, 6.090300000000104e-05, 6.109700000000301e-05, 6.0221999999998665e-05, 6.027699999999747e-05, 6.08750000000019e-05, 6.08750000000019e-05, 6.118100000000043e-05, 6.067999999999352e-05, 6.061100000000208e-05, 6.068099999999993e-05, 6.029100000000398e-05, 6.09159999999942e-05, 6.06949999999995e-05, 6.065300000000079e-05, 6.118000000000096e-05, 6.038900000000097e-05, 6.0999999999998555e-05, 6.0263999999997375e-05, 6.03750000000014e-05, 6.0736000000005674e-05, 6.106899999999693e-05, 6.065300000000079e-05, 6.0485999999998485e-05, 6.105599999999684e-05, 6.0805999999996585e-05, 6.0791999999997015e-05, 6.105499999999736e-05, 6.0499999999998055e-05, 6.0457999999999346e-05]</msg>
<status status="PASS" starttime="20201112 12:27:48.630" endtime="20201112 12:27:48.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.619" endtime="20201112 12:27:48.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.642" endtime="20201112 12:27:48.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.651" endtime="20201112 12:27:48.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.646" endtime="20201112 12:27:48.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.638" endtime="20201112 12:27:48.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.136" endtime="20201112 12:27:48.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.135" endtime="20201112 12:27:48.676"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.699" endtime="20201112 12:27:48.718"></status>
</kw>
<msg timestamp="20201112 12:27:48.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.695" endtime="20201112 12:27:48.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.722" endtime="20201112 12:27:48.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.728" endtime="20201112 12:27:48.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.688" endtime="20201112 12:27:48.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.683" endtime="20201112 12:27:48.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.751" endtime="20201112 12:27:49.095"></status>
</kw>
<msg timestamp="20201112 12:27:49.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039880486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039942417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.748" endtime="20201112 12:27:49.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039880486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039942417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.104" endtime="20201112 12:27:49.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.122" endtime="20201112 12:27:49.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.741" endtime="20201112 12:27:49.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.736" endtime="20201112 12:27:49.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:49.143" level="INFO">${RESULT} = [{'time': 0.039942417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.193100000000118e-05, 'source_diff': 6.193100000000118e-05}, {'time': 0.040030597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:49.134" endtime="20201112 12:27:49.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:49.249" level="INFO">${ACCURACY} = {'time': [0.039942417, 0.040030597, 0.040119778, 0.040208972, 0.040300236, 0.040390361, 0.040481542, 0.040574764, 0.040662958, 0.040756236, 0.040845361, 0.040934542, 0.041023722, 0.041111917, 0.041200...</msg>
<status status="PASS" starttime="20201112 12:27:49.145" endtime="20201112 12:27:49.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.260" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:49.257" endtime="20201112 12:27:49.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.265" level="INFO">VALUE: [6.193100000000118e-05, 6.180499999999811e-05, 6.186100000000333e-05, 6.209700000000401e-05, 6.172200000000017e-05, 6.173599999999974e-05, 6.163900000000222e-05, 6.12080000000001e-05, 6.183299999999725e-05, 6.201399999999913e-05, 6.217999999999502e-05, 6.12499999999988e-05, 6.149999999999906e-05, 6.15279999999982e-05, 6.213899999999578e-05, 6.193099999999424e-05, 6.213900000000272e-05, 6.15420000000047e-05, 6.138899999999503e-05, 6.136099999999589e-05, 6.195900000000032e-05, 6.19300000000017e-05, 6.2195000000001e-05, 6.184700000000376e-05, 6.129199999999752e-05, 6.158300000000394e-05, 6.165300000000179e-05, 6.118000000000096e-05, 6.170900000000007e-05, 6.113899999999478e-05, 6.133299999999675e-05, 6.140300000000154e-05, 6.127799999999795e-05, 6.152800000000513e-05, 6.205600000000477e-05, 6.194500000000075e-05, 6.187499999999596e-05, 6.15279999999982e-05, 6.213900000000272e-05, 6.156899999999743e-05, 6.20829999999975e-05, 6.119400000000053e-05, 6.151399999999863e-05, 6.191600000000214e-05, 6.127799999999795e-05, 6.152700000000566e-05, 6.12499999999988e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.213900000000272e-05]</msg>
<status status="PASS" starttime="20201112 12:27:49.262" endtime="20201112 12:27:49.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.251" endtime="20201112 12:27:49.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.274" endtime="20201112 12:27:49.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:49.282" endtime="20201112 12:27:49.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.278" endtime="20201112 12:27:49.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.270" endtime="20201112 12:27:49.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.679" endtime="20201112 12:27:49.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.677" endtime="20201112 12:27:49.308"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.332" endtime="20201112 12:27:49.350"></status>
</kw>
<msg timestamp="20201112 12:27:49.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.327" endtime="20201112 12:27:49.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.353" endtime="20201112 12:27:49.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.359" endtime="20201112 12:27:49.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.320" endtime="20201112 12:27:49.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.314" endtime="20201112 12:27:49.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.382" endtime="20201112 12:27:49.714"></status>
</kw>
<msg timestamp="20201112 12:27:49.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040927444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040989819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.379" endtime="20201112 12:27:49.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040927444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040989819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.723" endtime="20201112 12:27:49.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.742" endtime="20201112 12:27:49.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.372" endtime="20201112 12:27:49.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.367" endtime="20201112 12:27:49.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:49.759" level="INFO">${RESULT} = [{'time': 0.040989819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.237499999999646e-05, 'source_diff': 6.237499999999646e-05}, {'time': 0.04108, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 12:27:49.750" endtime="20201112 12:27:49.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:49.790" level="INFO">${ACCURACY} = {'time': [0.040989819, 0.04108, 0.041171194, 0.041260389, 0.041352583, 0.041443792, 0.041537028, 0.041628181, 0.041719403, 0.041812611, 0.041904833, 0.041999069, 0.042087236, 0.042181472, 0.042270667,...</msg>
<status status="PASS" starttime="20201112 12:27:49.761" endtime="20201112 12:27:49.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.801" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:49.798" endtime="20201112 12:27:49.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.806" level="INFO">VALUE: [6.237499999999646e-05, 6.277799999999945e-05, 6.240200000000307e-05, 6.272200000000117e-05, 6.269399999999509e-05, 6.251399999999963e-05, 6.261099999999714e-05, 6.222300000000014e-05, 6.297200000000142e-05, 6.312499999999721e-05, 6.315200000000382e-05, 6.24300000000022e-05, 6.24300000000022e-05, 6.256899999999843e-05, 6.2195000000001e-05, 6.243100000000168e-05, 6.291700000000261e-05, 6.258300000000494e-05, 6.313899999999678e-05, 6.268000000000246e-05, 6.236199999999636e-05, 6.300000000000056e-05, 6.252699999999972e-05, 6.294499999999481e-05, 6.252800000000613e-05, 6.312499999999721e-05, 6.263900000000322e-05, 6.317999999999602e-05, 6.294500000000175e-05, 6.292999999999577e-05, 6.301300000000065e-05, 6.288900000000347e-05, 6.283399999999773e-05, 6.318000000000296e-05, 6.311100000000458e-05, 6.295900000000132e-05, 6.247200000000092e-05, 6.316600000000339e-05, 6.254199999999877e-05, 6.230499999999861e-05, 6.222200000000067e-05, 6.30279999999997e-05, 6.259699999999757e-05, 6.261100000000408e-05, 6.229199999999852e-05, 6.27500000000003e-05, 6.23750000000034e-05, 6.288799999999706e-05, 6.280599999999859e-05, 6.245799999999441e-05]</msg>
<status status="PASS" starttime="20201112 12:27:49.803" endtime="20201112 12:27:49.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.792" endtime="20201112 12:27:49.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.815" endtime="20201112 12:27:49.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:49.824" endtime="20201112 12:27:49.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.819" endtime="20201112 12:27:49.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.811" endtime="20201112 12:27:49.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.310" endtime="20201112 12:27:49.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.309" endtime="20201112 12:27:49.849"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.872" endtime="20201112 12:27:49.891"></status>
</kw>
<msg timestamp="20201112 12:27:49.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.868" endtime="20201112 12:27:49.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.894" endtime="20201112 12:27:49.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.900" endtime="20201112 12:27:49.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.861" endtime="20201112 12:27:49.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.855" endtime="20201112 12:27:49.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.923" endtime="20201112 12:27:50.270"></status>
</kw>
<msg timestamp="20201112 12:27:50.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040967472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041031542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.920" endtime="20201112 12:27:50.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040967472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041031542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.280" endtime="20201112 12:27:50.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.298" endtime="20201112 12:27:50.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.913" endtime="20201112 12:27:50.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.908" endtime="20201112 12:27:50.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.316" level="INFO">${RESULT} = [{'time': 0.041031542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.40699999999994e-05, 'source_diff': 6.40699999999994e-05}, {'time': 0.041121736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:50.307" endtime="20201112 12:27:50.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:50.347" level="INFO">${ACCURACY} = {'time': [0.041031542, 0.041121736, 0.041217931, 0.041308181, 0.041400333, 0.041494569, 0.041584764, 0.041678, 0.041770194, 0.041866417, 0.041956639, 0.042052903, 0.042147069, 0.042241306, 0.042337528...</msg>
<status status="PASS" starttime="20201112 12:27:50.318" endtime="20201112 12:27:50.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.358" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:50.356" endtime="20201112 12:27:50.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.364" level="INFO">VALUE: [6.40699999999994e-05, 6.345800000000235e-05, 6.408399999999898e-05, 6.383399999999873e-05, 6.379100000000054e-05, 6.329100000000004e-05, 6.329200000000645e-05, 6.355599999999934e-05, 6.401299999999471e-05, 6.405599999999984e-05, 6.351399999999369e-05, 6.405599999999984e-05, 6.379100000000054e-05, 6.358399999999848e-05, 6.394499999999581e-05, 6.363899999999728e-05, 6.404099999999385e-05, 6.380500000000011e-05, 6.415300000000429e-05, 6.331999999999866e-05, 6.366699999999642e-05, 6.40829999999995e-05, 6.326400000000038e-05, 6.341700000000311e-05, 6.367999999999652e-05, 6.331899999999918e-05, 6.322200000000167e-05, 6.40829999999995e-05, 6.334699999999832e-05, 6.362500000000465e-05, 6.37359999999948e-05, 6.419399999999659e-05, 6.361099999999814e-05, 6.384699999999882e-05, 6.381999999999916e-05, 6.397200000000242e-05, 6.377700000000097e-05, 6.338899999999703e-05, 6.397200000000242e-05, 6.404200000000027e-05, 6.336199999999736e-05, 6.363899999999728e-05, 6.336099999999789e-05, 6.34300000000032e-05, 6.340200000000407e-05, 6.362500000000465e-05, 6.39029999999971e-05, 6.336099999999789e-05, 6.329200000000645e-05, 6.32500000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:27:50.361" endtime="20201112 12:27:50.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.349" endtime="20201112 12:27:50.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.373" endtime="20201112 12:27:50.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.382" endtime="20201112 12:27:50.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.377" endtime="20201112 12:27:50.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.369" endtime="20201112 12:27:50.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.851" endtime="20201112 12:27:50.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.850" endtime="20201112 12:27:50.408"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.430" endtime="20201112 12:27:50.450"></status>
</kw>
<msg timestamp="20201112 12:27:50.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.427" endtime="20201112 12:27:50.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.454" endtime="20201112 12:27:50.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.460" endtime="20201112 12:27:50.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.420" endtime="20201112 12:27:50.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.414" endtime="20201112 12:27:50.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.485" endtime="20201112 12:27:50.832"></status>
</kw>
<msg timestamp="20201112 12:27:50.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040388167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:50.482" endtime="20201112 12:27:50.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040388167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:50.841" endtime="20201112 12:27:50.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.860" endtime="20201112 12:27:50.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.473" endtime="20201112 12:27:50.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.468" endtime="20201112 12:27:50.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.878" level="INFO">${RESULT} = [{'time': 0.0404525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.433299999999975e-05, 'source_diff': 6.433299999999975e-05}, {'time': 0.040544667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:50.868" endtime="20201112 12:27:50.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:50.909" level="INFO">${ACCURACY} = {'time': [0.0404525, 0.040544667, 0.040637875, 0.040731097, 0.040824306, 0.040915514, 0.041011667, 0.041104861, 0.041197083, 0.041291333, 0.0413855, 0.041476708, 0.041567861, 0.041664069, 0.041760292,...</msg>
<status status="PASS" starttime="20201112 12:27:50.880" endtime="20201112 12:27:50.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.920" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:50.917" endtime="20201112 12:27:50.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.925" level="INFO">VALUE: [6.433299999999975e-05, 6.455600000000034e-05, 6.434699999999932e-05, 6.466599999999795e-05, 6.455600000000034e-05, 6.473600000000274e-05, 6.501400000000213e-05, 6.481900000000068e-05, 6.504100000000179e-05, 6.436099999999889e-05, 6.511099999999964e-05, 6.423600000000224e-05, 6.492999999999777e-05, 6.476299999999546e-05, 6.424999999999487e-05, 6.42500000000018e-05, 6.483300000000025e-05, 6.509799999999955e-05, 6.472199999999623e-05, 6.479100000000154e-05, 6.44029999999976e-05, 6.419399999999659e-05, 6.479200000000102e-05, 6.465300000000479e-05, 6.483399999999973e-05, 6.516599999999845e-05, 6.44159999999977e-05, 6.426400000000138e-05, 6.480600000000059e-05, 6.430600000000009e-05, 6.419400000000353e-05, 6.450000000000206e-05, 6.487499999999896e-05, 6.462499999999871e-05, 6.468099999999699e-05, 6.502699999999528e-05, 6.430600000000009e-05, 6.484699999999982e-05, 6.479200000000102e-05, 6.482000000000016e-05, 6.506900000000093e-05, 6.459699999999957e-05, 6.5195000000004e-05, 6.443100000000368e-05, 6.431900000000018e-05, 6.419399999999659e-05, 6.511099999999964e-05, 6.481900000000068e-05, 6.433399999999923e-05, 6.512500000000615e-05]</msg>
<status status="PASS" starttime="20201112 12:27:50.922" endtime="20201112 12:27:50.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.910" endtime="20201112 12:27:50.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.941" endtime="20201112 12:27:50.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.949" endtime="20201112 12:27:50.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.945" endtime="20201112 12:27:50.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.936" endtime="20201112 12:27:50.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.410" endtime="20201112 12:27:50.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.409" endtime="20201112 12:27:50.976"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.999" endtime="20201112 12:27:51.019"></status>
</kw>
<msg timestamp="20201112 12:27:51.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.995" endtime="20201112 12:27:51.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.023" endtime="20201112 12:27:51.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.029" endtime="20201112 12:27:51.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.988" endtime="20201112 12:27:51.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.982" endtime="20201112 12:27:51.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.053" endtime="20201112 12:27:51.404"></status>
</kw>
<msg timestamp="20201112 12:27:51.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041473917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041539722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.050" endtime="20201112 12:27:51.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041473917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041539722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.414" endtime="20201112 12:27:51.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.432" endtime="20201112 12:27:51.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.042" endtime="20201112 12:27:51.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.038" endtime="20201112 12:27:51.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:51.450" level="INFO">${RESULT} = [{'time': 0.041539722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.580500000000211e-05, 'source_diff': 6.580500000000211e-05}, {'time': 0.041633931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:51.441" endtime="20201112 12:27:51.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:51.483" level="INFO">${ACCURACY} = {'time': [0.041539722, 0.041633931, 0.041725111, 0.041818292, 0.041911472, 0.042008681, 0.042100903, 0.042199125, 0.042291306, 0.042386514, 0.04248375, 0.042575931, 0.042668139, 0.042762431, 0.0428575...</msg>
<status status="PASS" starttime="20201112 12:27:51.452" endtime="20201112 12:27:51.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.494" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:51.492" endtime="20201112 12:27:51.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.499" level="INFO">VALUE: [6.580500000000211e-05, 6.524999999999587e-05, 6.55280000000022e-05, 6.57229999999967e-05, 6.594399999999834e-05, 6.615299999999935e-05, 6.600000000000356e-05, 6.618099999999849e-05, 6.545900000000382e-05, 6.54029999999986e-05, 6.60280000000027e-05, 6.524999999999587e-05, 6.615299999999935e-05, 6.531999999999372e-05, 6.594399999999834e-05, 6.531900000000118e-05, 6.559700000000057e-05, 6.59029999999991e-05, 6.556900000000143e-05, 6.56950000000045e-05, 6.552799999999526e-05, 6.543099999999774e-05, 6.547200000000392e-05, 6.612500000000021e-05, 6.550000000000306e-05, 6.591699999999867e-05, 6.57909999999956e-05, 6.516699999999792e-05, 6.595799999999791e-05, 6.573699999999627e-05, 6.544500000000425e-05, 6.595900000000432e-05, 6.52359999999963e-05, 6.533300000000075e-05, 6.563900000000622e-05, 6.559700000000057e-05, 6.559800000000005e-05, 6.59159999999992e-05, 6.555600000000134e-05, 6.601400000000313e-05, 6.558400000000048e-05, 6.606999999999447e-05, 6.616699999999892e-05, 6.583400000000073e-05, 6.526400000000238e-05, 6.612500000000021e-05, 6.609700000000107e-05, 6.555500000000186e-05, 6.587499999999996e-05, 6.591699999999867e-05]</msg>
<status status="PASS" starttime="20201112 12:27:51.496" endtime="20201112 12:27:51.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.485" endtime="20201112 12:27:51.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.509" endtime="20201112 12:27:51.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:51.517" endtime="20201112 12:27:51.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.513" endtime="20201112 12:27:51.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.504" endtime="20201112 12:27:51.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.978" endtime="20201112 12:27:51.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.976" endtime="20201112 12:27:51.543"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.566" endtime="20201112 12:27:51.586"></status>
</kw>
<msg timestamp="20201112 12:27:51.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.562" endtime="20201112 12:27:51.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.589" endtime="20201112 12:27:51.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.595" endtime="20201112 12:27:51.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.555" endtime="20201112 12:27:51.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.550" endtime="20201112 12:27:51.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.619" endtime="20201112 12:27:51.966"></status>
</kw>
<msg timestamp="20201112 12:27:51.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040387931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.615" endtime="20201112 12:27:51.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040387931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.975" endtime="20201112 12:27:51.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.994" endtime="20201112 12:27:52.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.608" endtime="20201112 12:27:52.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.604" endtime="20201112 12:27:52.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.013" level="INFO">${RESULT} = [{'time': 0.040454833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.690200000000063e-05, 'source_diff': 6.690200000000063e-05}, {'time': 0.040552014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:52.004" endtime="20201112 12:27:52.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:52.045" level="INFO">${ACCURACY} = {'time': [0.040454833, 0.040552014, 0.040650194, 0.040746375, 0.040840625, 0.040937819, 0.041034972, 0.041128181, 0.041223347, 0.041317556, 0.04141475, 0.041512917, 0.041610083, 0.041703264, 0.0417994...</msg>
<status status="PASS" starttime="20201112 12:27:52.015" endtime="20201112 12:27:52.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.056" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:52.054" endtime="20201112 12:27:52.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.062" level="INFO">VALUE: [6.690200000000063e-05, 6.62359999999973e-05, 6.716600000000045e-05, 6.712500000000121e-05, 6.674999999999737e-05, 6.630500000000261e-05, 6.67080000000056e-05, 6.665299999999985e-05, 6.662500000000071e-05, 6.688900000000053e-05, 6.676399999999694e-05, 6.697300000000489e-05, 6.634700000000132e-05, 6.681999999999522e-05, 6.680499999999617e-05, 6.708400000000198e-05, 6.713800000000131e-05, 6.666699999999942e-05, 6.698600000000499e-05, 6.629200000000252e-05, 6.684700000000182e-05, 6.649999999999712e-05, 6.656900000000243e-05, 6.676400000000388e-05, 6.698599999999805e-05, 6.636100000000089e-05, 6.718000000000002e-05, 6.640200000000013e-05, 6.638900000000003e-05, 6.709700000000207e-05, 6.694399999999934e-05, 6.672300000000464e-05, 6.711100000000164e-05, 6.634799999999386e-05, 6.647199999999798e-05, 6.624999999999687e-05, 6.666699999999942e-05, 6.715300000000035e-05, 6.64159999999997e-05, 6.690200000000063e-05, 6.70830000000025e-05, 6.666599999999995e-05, 6.654200000000277e-05, 6.705500000000336e-05, 6.688900000000053e-05, 6.683300000000225e-05, 6.645899999999788e-05, 6.629199999999558e-05, 6.667999999999952e-05, 6.661200000000062e-05]</msg>
<status status="PASS" starttime="20201112 12:27:52.059" endtime="20201112 12:27:52.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.047" endtime="20201112 12:27:52.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.071" endtime="20201112 12:27:52.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.080" endtime="20201112 12:27:52.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.075" endtime="20201112 12:27:52.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.067" endtime="20201112 12:27:52.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.545" endtime="20201112 12:27:52.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.544" endtime="20201112 12:27:52.106"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.129" endtime="20201112 12:27:52.149"></status>
</kw>
<msg timestamp="20201112 12:27:52.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.125" endtime="20201112 12:27:52.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.152" endtime="20201112 12:27:52.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.158" endtime="20201112 12:27:52.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.118" endtime="20201112 12:27:52.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.112" endtime="20201112 12:27:52.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.182" endtime="20201112 12:27:52.529"></status>
</kw>
<msg timestamp="20201112 12:27:52.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040512931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040580389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.178" endtime="20201112 12:27:52.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040512931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040580389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.538" endtime="20201112 12:27:52.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.557" endtime="20201112 12:27:52.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.171" endtime="20201112 12:27:52.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.166" endtime="20201112 12:27:52.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.576" level="INFO">${RESULT} = [{'time': 0.040580389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.745799999999941e-05, 'source_diff': 6.745799999999941e-05}, {'time': 0.040677569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:52.567" endtime="20201112 12:27:52.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:52.607" level="INFO">${ACCURACY} = {'time': [0.040580389, 0.040677569, 0.040771806, 0.040868028, 0.040966167, 0.041063347, 0.041160556, 0.041256722, 0.041350958, 0.041448069, 0.041542222, 0.041637417, 0.041737583, 0.041833792, 0.041929...</msg>
<status status="PASS" starttime="20201112 12:27:52.578" endtime="20201112 12:27:52.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.618" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:52.616" endtime="20201112 12:27:52.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.624" level="INFO">VALUE: [6.745799999999941e-05, 6.733299999999581e-05, 6.823699999999877e-05, 6.744499999999931e-05, 6.813899999999484e-05, 6.818000000000102e-05, 6.766700000000042e-05, 6.738900000000103e-05, 6.72359999999983e-05, 6.77359999999988e-05, 6.802799999999776e-05, 6.795900000000632e-05, 6.812500000000221e-05, 6.730600000000309e-05, 6.80830000000035e-05, 6.768099999999999e-05, 6.748599999999855e-05, 6.802700000000522e-05, 6.808299999999656e-05, 6.794499999999981e-05, 6.799999999999862e-05, 6.770799999999966e-05, 6.768000000000052e-05, 6.766600000000095e-05, 6.754200000000377e-05, 6.813800000000231e-05, 6.78480000000023e-05, 6.798599999999905e-05, 6.724999999999787e-05, 6.759700000000257e-05, 6.77500000000053e-05, 6.733300000000275e-05, 6.786099999999545e-05, 6.734700000000232e-05, 6.772199999999923e-05, 6.720799999999916e-05, 6.800000000000556e-05, 6.795799999999991e-05, 6.813799999999537e-05, 6.794499999999981e-05, 6.747199999999898e-05, 6.75280000000042e-05, 6.818000000000102e-05, 6.744399999999984e-05, 6.74030000000006e-05, 6.748599999999855e-05, 6.762500000000171e-05, 6.747200000000592e-05, 6.74030000000006e-05, 6.759700000000257e-05]</msg>
<status status="PASS" starttime="20201112 12:27:52.621" endtime="20201112 12:27:52.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.609" endtime="20201112 12:27:52.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.633" endtime="20201112 12:27:52.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.641" endtime="20201112 12:27:52.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.637" endtime="20201112 12:27:52.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.629" endtime="20201112 12:27:52.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.108" endtime="20201112 12:27:52.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.107" endtime="20201112 12:27:52.668"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.690" endtime="20201112 12:27:52.710"></status>
</kw>
<msg timestamp="20201112 12:27:52.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.687" endtime="20201112 12:27:52.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.714" endtime="20201112 12:27:52.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.720" endtime="20201112 12:27:52.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.680" endtime="20201112 12:27:52.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.674" endtime="20201112 12:27:52.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.744" endtime="20201112 12:27:53.090"></status>
</kw>
<msg timestamp="20201112 12:27:53.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040392597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040460903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.740" endtime="20201112 12:27:53.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040392597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040460903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.100" endtime="20201112 12:27:53.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.119" endtime="20201112 12:27:53.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.733" endtime="20201112 12:27:53.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.728" endtime="20201112 12:27:53.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.138" level="INFO">${RESULT} = [{'time': 0.040460903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.830599999999715e-05, 'source_diff': 6.830599999999715e-05}, {'time': 0.040561125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:53.129" endtime="20201112 12:27:53.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:53.169" level="INFO">${ACCURACY} = {'time': [0.040460903, 0.040561125, 0.040659306, 0.040754528, 0.040851694, 0.040948889, 0.041045111, 0.041140278, 0.0412395, 0.041334708, 0.041429889, 0.041530097, 0.041629306, 0.041729556, 0.04182770...</msg>
<status status="PASS" starttime="20201112 12:27:53.140" endtime="20201112 12:27:53.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.182" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:53.179" endtime="20201112 12:27:53.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.187" level="INFO">VALUE: [6.830599999999715e-05, 6.859700000000357e-05, 6.886199999999593e-05, 6.876399999999894e-05, 6.848599999999955e-05, 6.87359999999998e-05, 6.822199999999973e-05, 6.854200000000477e-05, 6.849999999999912e-05, 6.887499999999602e-05, 6.820800000000016e-05, 6.84160000000017e-05, 6.913899999999584e-05, 6.897299999999995e-05, 6.913899999999584e-05, 6.866700000000142e-05, 6.822199999999973e-05, 6.865300000000185e-05, 6.913899999999584e-05, 6.893000000000177e-05, 6.890200000000263e-05, 6.880599999999765e-05, 6.848599999999955e-05, 6.827799999999801e-05, 6.85559999999974e-05, 6.838900000000203e-05, 6.859800000000305e-05, 6.862499999999577e-05, 6.87359999999998e-05, 6.861200000000262e-05, 6.868100000000099e-05, 6.863899999999534e-05, 6.822199999999973e-05, 6.918100000000149e-05, 6.872200000000023e-05, 6.833300000000375e-05, 6.916700000000192e-05, 6.844400000000084e-05, 6.851400000000563e-05, 6.887499999999602e-05, 6.856900000000443e-05, 6.84030000000016e-05, 6.87359999999998e-05, 6.836100000000289e-05, 6.915199999999594e-05, 6.851400000000563e-05, 6.843000000000127e-05, 6.894400000000134e-05, 6.919500000000106e-05, 6.844500000000031e-05]</msg>
<status status="PASS" starttime="20201112 12:27:53.184" endtime="20201112 12:27:53.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.171" endtime="20201112 12:27:53.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.197" endtime="20201112 12:27:53.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:53.205" endtime="20201112 12:27:53.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.201" endtime="20201112 12:27:53.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.192" endtime="20201112 12:27:53.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.670" endtime="20201112 12:27:53.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.668" endtime="20201112 12:27:53.231"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.254" endtime="20201112 12:27:53.274"></status>
</kw>
<msg timestamp="20201112 12:27:53.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.251" endtime="20201112 12:27:53.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.278" endtime="20201112 12:27:53.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.284" endtime="20201112 12:27:53.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.243" endtime="20201112 12:27:53.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.238" endtime="20201112 12:27:53.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.308" endtime="20201112 12:27:53.649"></status>
</kw>
<msg timestamp="20201112 12:27:53.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040191236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040260819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.304" endtime="20201112 12:27:53.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040191236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040260819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.658" endtime="20201112 12:27:53.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.677" endtime="20201112 12:27:53.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.297" endtime="20201112 12:27:53.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.292" endtime="20201112 12:27:53.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.696" level="INFO">${RESULT} = [{'time': 0.040260819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9583000000005e-05, 'source_diff': 6.9583000000005e-05}, {'time': 0.040361972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 12:27:53.687" endtime="20201112 12:27:53.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:53.730" level="INFO">${ACCURACY} = {'time': [0.040260819, 0.040361972, 0.040461153, 0.040560347, 0.040661542, 0.04075875, 0.040859944, 0.040957111, 0.041057306, 0.0411565, 0.041255722, 0.041351917, 0.041450097, 0.041546347, 0.041647542...</msg>
<status status="PASS" starttime="20201112 12:27:53.699" endtime="20201112 12:27:53.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.741" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:53.739" endtime="20201112 12:27:53.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.746" level="INFO">VALUE: [6.9583000000005e-05, 6.94160000000027e-05, 6.969500000000156e-05, 6.938899999999609e-05, 6.991700000000267e-05, 6.922200000000073e-05, 6.950000000000012e-05, 6.951399999999969e-05, 6.924999999999987e-05, 7.002799999999976e-05, 6.998600000000105e-05, 6.97360000000008e-05, 7.015299999999641e-05, 6.969399999999515e-05, 6.933400000000423e-05, 7.009699999999813e-05, 6.976399999999994e-05, 7.013800000000431e-05, 6.92909999999991e-05, 7.002799999999976e-05, 6.998600000000105e-05, 6.977799999999951e-05, 7.002799999999976e-05, 6.979199999999908e-05, 6.97909999999996e-05, 6.995900000000138e-05, 6.995800000000191e-05, 7.004099999999985e-05, 6.979199999999908e-05, 6.984699999999788e-05, 6.958399999999754e-05, 6.97360000000008e-05, 6.924999999999987e-05, 7.001400000000019e-05, 6.998600000000105e-05, 6.924999999999987e-05, 7.009699999999813e-05, 6.955499999999892e-05, 6.99160000000032e-05, 6.922200000000073e-05, 6.934799999999686e-05, 6.95559999999984e-05, 7.009699999999813e-05, 6.924999999999987e-05, 6.926400000000638e-05, 6.92360000000003e-05, 6.933300000000475e-05, 6.923599999999336e-05, 6.969399999999515e-05, 6.952799999999926e-05]</msg>
<status status="PASS" starttime="20201112 12:27:53.743" endtime="20201112 12:27:53.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.732" endtime="20201112 12:27:53.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.756" endtime="20201112 12:27:53.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:53.764" endtime="20201112 12:27:53.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.760" endtime="20201112 12:27:53.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.751" endtime="20201112 12:27:53.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.233" endtime="20201112 12:27:53.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.232" endtime="20201112 12:27:53.790"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.813" endtime="20201112 12:27:53.831"></status>
</kw>
<msg timestamp="20201112 12:27:53.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.810" endtime="20201112 12:27:53.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.835" endtime="20201112 12:27:53.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.841" endtime="20201112 12:27:53.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.802" endtime="20201112 12:27:53.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.797" endtime="20201112 12:27:53.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.864" endtime="20201112 12:27:54.204"></status>
</kw>
<msg timestamp="20201112 12:27:54.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040527083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0405975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:53.861" endtime="20201112 12:27:54.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040527083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0405975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:54.214" endtime="20201112 12:27:54.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.233" endtime="20201112 12:27:54.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.854" endtime="20201112 12:27:54.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.849" endtime="20201112 12:27:54.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:54.250" level="INFO">${RESULT} = [{'time': 0.0405975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.041700000000317e-05, 'source_diff': 7.041700000000317e-05}, {'time': 0.040700653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:54.241" endtime="20201112 12:27:54.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:54.283" level="INFO">${ACCURACY} = {'time': [0.0405975, 0.040700653, 0.040799833, 0.040902028, 0.040999181, 0.041100389, 0.041199556, 0.041297806, 0.041399944, 0.041503139, 0.041602319, 0.041703542, 0.041801708, 0.041904819, 0.04200298...</msg>
<status status="PASS" starttime="20201112 12:27:54.252" endtime="20201112 12:27:54.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.294" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:54.291" endtime="20201112 12:27:54.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.299" level="INFO">VALUE: [7.041700000000317e-05, 7.109700000000607e-05, 7.050000000000112e-05, 7.058399999999854e-05, 7.093100000000324e-05, 7.088899999999759e-05, 7.061199999999768e-05, 7.075000000000137e-05, 7.083299999999931e-05, 7.095800000000291e-05, 7.02360000000013e-05, 7.118100000000349e-05, 7.108299999999956e-05, 7.087500000000496e-05, 7.036099999999795e-05, 7.041700000000317e-05, 7.088799999999812e-05, 7.019400000000259e-05, 7.076400000000094e-05, 7.086099999999845e-05, 7.102699999999434e-05, 7.059700000000557e-05, 7.090199999999769e-05, 7.040299999999666e-05, 7.027800000000001e-05, 7.101400000000119e-05, 7.091699999999673e-05, 7.043000000000327e-05, 7.04030000000036e-05, 7.02360000000013e-05, 7.025000000000087e-05, 7.041699999999623e-05, 7.030499999999967e-05, 7.045899999999494e-05, 7.117999999999708e-05, 7.031899999999924e-05, 7.104199999999339e-05, 7.101400000000119e-05, 7.066699999999648e-05, 7.045900000000188e-05, 7.083299999999931e-05, 7.088799999999812e-05, 7.02360000000013e-05, 7.040199999999719e-05, 7.091699999999673e-05, 7.11109999999987e-05, 7.033299999999881e-05, 7.111100000000564e-05, 7.101400000000119e-05, 7.072200000000223e-05]</msg>
<status status="PASS" starttime="20201112 12:27:54.296" endtime="20201112 12:27:54.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.284" endtime="20201112 12:27:54.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.309" endtime="20201112 12:27:54.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:54.317" endtime="20201112 12:27:54.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.313" endtime="20201112 12:27:54.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.304" endtime="20201112 12:27:54.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.792" endtime="20201112 12:27:54.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.791" endtime="20201112 12:27:54.343"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.366" endtime="20201112 12:27:54.384"></status>
</kw>
<msg timestamp="20201112 12:27:54.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.362" endtime="20201112 12:27:54.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.388" endtime="20201112 12:27:54.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.394" endtime="20201112 12:27:54.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.355" endtime="20201112 12:27:54.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.349" endtime="20201112 12:27:54.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.417" endtime="20201112 12:27:54.752"></status>
</kw>
<msg timestamp="20201112 12:27:54.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040327958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040399361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.414" endtime="20201112 12:27:54.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040327958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040399361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.762" endtime="20201112 12:27:54.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.781" endtime="20201112 12:27:54.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.407" endtime="20201112 12:27:54.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.402" endtime="20201112 12:27:54.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:54.798" level="INFO">${RESULT} = [{'time': 0.040399361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.14030000000046e-05, 'source_diff': 7.14030000000046e-05}, {'time': 0.040497583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:54.789" endtime="20201112 12:27:54.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:54.830" level="INFO">${ACCURACY} = {'time': [0.040399361, 0.040497583, 0.040599792, 0.040701014, 0.040804222, 0.040906431, 0.041005653, 0.041106861, 0.041204056, 0.04130325, 0.041404472, 0.041503681, 0.041604875, 0.041708097, 0.0418062...</msg>
<status status="PASS" starttime="20201112 12:27:54.800" endtime="20201112 12:27:54.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.841" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:54.839" endtime="20201112 12:27:54.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.847" level="INFO">VALUE: [7.14030000000046e-05, 7.174999999999543e-05, 7.209799999999961e-05, 7.136099999999895e-05, 7.205500000000142e-05, 7.186199999999893e-05, 7.150000000000212e-05, 7.130500000000067e-05, 7.159800000000605e-05, 7.152800000000126e-05, 7.151399999999475e-05, 7.190299999999816e-05, 7.138899999999809e-05, 7.195799999999697e-05, 7.168100000000399e-05, 7.159699999999963e-05, 7.188899999999859e-05, 7.14439999999969e-05, 7.15560000000004e-05, 7.166699999999748e-05, 7.215299999999841e-05, 7.177800000000151e-05, 7.148600000000255e-05, 7.19030000000051e-05, 7.187499999999902e-05, 7.182000000000022e-05, 7.195900000000338e-05, 7.141699999999723e-05, 7.220799999999722e-05, 7.182000000000022e-05, 7.213899999999884e-05, 7.183300000000031e-05, 7.16109999999992e-05, 7.194499999999687e-05, 7.220799999999722e-05, 7.12910000000011e-05, 7.162499999999877e-05, 7.129200000000058e-05, 7.207000000000047e-05, 7.155499999999398e-05, 7.174999999999543e-05, 7.145900000000288e-05, 7.176400000000194e-05, 7.133299999999981e-05, 7.172299999999576e-05, 7.19309999999973e-05, 7.199999999999568e-05, 7.218000000000502e-05, 7.150000000000212e-05, 7.198600000000305e-05]</msg>
<status status="PASS" starttime="20201112 12:27:54.844" endtime="20201112 12:27:54.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.832" endtime="20201112 12:27:54.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.856" endtime="20201112 12:27:54.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:54.865" endtime="20201112 12:27:54.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.860" endtime="20201112 12:27:54.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.852" endtime="20201112 12:27:54.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.345" endtime="20201112 12:27:54.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.344" endtime="20201112 12:27:54.890"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.913" endtime="20201112 12:27:54.931"></status>
</kw>
<msg timestamp="20201112 12:27:54.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.910" endtime="20201112 12:27:54.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.935" endtime="20201112 12:27:54.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.941" endtime="20201112 12:27:54.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.902" endtime="20201112 12:27:54.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.897" endtime="20201112 12:27:54.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.964" endtime="20201112 12:27:55.306"></status>
</kw>
<msg timestamp="20201112 12:27:55.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040093056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04016575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:54.961" endtime="20201112 12:27:55.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040093056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04016575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:55.316" endtime="20201112 12:27:55.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.335" endtime="20201112 12:27:55.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.954" endtime="20201112 12:27:55.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.949" endtime="20201112 12:27:55.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.352" level="INFO">${RESULT} = [{'time': 0.04016575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.269399999999815e-05, 'source_diff': 7.269399999999815e-05}, {'time': 0.040267986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:55.343" endtime="20201112 12:27:55.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:55.385" level="INFO">${ACCURACY} = {'time': [0.04016575, 0.040267986, 0.040373236, 0.040477486, 0.040575722, 0.040677903, 0.040782153, 0.040883389, 0.040982597, 0.041084819, 0.041189125, 0.041293347, 0.041392597, 0.041494833, 0.0415940...</msg>
<status status="PASS" starttime="20201112 12:27:55.354" endtime="20201112 12:27:55.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.396" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:55.393" endtime="20201112 12:27:55.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.401" level="INFO">VALUE: [7.269399999999815e-05, 7.236099999999995e-05, 7.3069000000002e-05, 7.26110000000002e-05, 7.22910000000021e-05, 7.312500000000027e-05, 7.237499999999952e-05, 7.283300000000131e-05, 7.248600000000355e-05, 7.225000000000287e-05, 7.302800000000276e-05, 7.297200000000448e-05, 7.254100000000235e-05, 7.301400000000319e-05, 7.256999999999403e-05, 7.269500000000456e-05, 7.313899999999984e-05, 7.309700000000113e-05, 7.259700000000063e-05, 7.255500000000192e-05, 7.302800000000276e-05, 7.286199999999993e-05, 7.232000000000072e-05, 7.283300000000131e-05, 7.223599999999636e-05, 7.295800000000491e-05, 7.315299999999941e-05, 7.284700000000088e-05, 7.236099999999995e-05, 7.320799999999822e-05, 7.251400000000269e-05, 7.297300000000395e-05, 7.276400000000294e-05, 7.233400000000029e-05, 7.319499999999812e-05, 7.30560000000019e-05, 7.304200000000233e-05, 7.295799999999797e-05, 7.245799999999747e-05, 7.312500000000027e-05, 7.272299999999676e-05, 7.263899999999934e-05, 7.300000000000362e-05, 7.313899999999984e-05, 7.301400000000319e-05, 7.315199999999994e-05, 7.269499999999762e-05, 7.295900000000438e-05, 7.262499999999977e-05, 7.268099999999805e-05]</msg>
<status status="PASS" starttime="20201112 12:27:55.398" endtime="20201112 12:27:55.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.386" endtime="20201112 12:27:55.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.411" endtime="20201112 12:27:55.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.419" endtime="20201112 12:27:55.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.414" endtime="20201112 12:27:55.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.406" endtime="20201112 12:27:55.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.893" endtime="20201112 12:27:55.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.891" endtime="20201112 12:27:55.445"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.468" endtime="20201112 12:27:55.488"></status>
</kw>
<msg timestamp="20201112 12:27:55.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.464" endtime="20201112 12:27:55.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.491" endtime="20201112 12:27:55.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.498" endtime="20201112 12:27:55.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.457" endtime="20201112 12:27:55.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.452" endtime="20201112 12:27:55.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.521" endtime="20201112 12:27:55.869"></status>
</kw>
<msg timestamp="20201112 12:27:55.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040481042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040555181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.518" endtime="20201112 12:27:55.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040481042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040555181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.879" endtime="20201112 12:27:55.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.898" endtime="20201112 12:27:55.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.510" endtime="20201112 12:27:55.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.506" endtime="20201112 12:27:55.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.915" level="INFO">${RESULT} = [{'time': 0.040555181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.413900000000084e-05, 'source_diff': 7.413900000000084e-05}, {'time': 0.040659403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:55.906" endtime="20201112 12:27:55.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:55.949" level="INFO">${ACCURACY} = {'time': [0.040555181, 0.040659403, 0.040761625, 0.040862861, 0.040963042, 0.04106825, 0.041170486, 0.041273653, 0.041377861, 0.041481069, 0.041585306, 0.041685528, 0.041787764, 0.041886972, 0.0419871...</msg>
<status status="PASS" starttime="20201112 12:27:55.917" endtime="20201112 12:27:55.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.960" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:55.958" endtime="20201112 12:27:55.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.965" level="INFO">VALUE: [7.413900000000084e-05, 7.388899999999365e-05, 7.408300000000256e-05, 7.395799999999897e-05, 7.362500000000077e-05, 7.329200000000258e-05, 7.416699999999998e-05, 7.388900000000059e-05, 7.325000000000387e-05, 7.419399999999965e-05, 7.368099999999905e-05, 7.369499999999862e-05, 7.358299999999512e-05, 7.35690000000025e-05, 7.36110000000012e-05, 7.391699999999973e-05, 7.350000000000412e-05, 7.397199999999854e-05, 7.350000000000412e-05, 7.412500000000127e-05, 7.336099999999401e-05, 7.337500000000052e-05, 7.394499999999887e-05, 7.365200000000044e-05, 7.373599999999786e-05, 7.347199999999804e-05, 7.372199999999829e-05, 7.349999999999718e-05, 7.351399999999675e-05, 7.408400000000204e-05, 7.420899999999869e-05, 7.341599999999976e-05, 7.351299999999727e-05, 7.344499999999837e-05, 7.348599999999761e-05, 7.39439999999994e-05, 7.37360000000048e-05, 7.36110000000012e-05, 7.336100000000095e-05, 7.32639999999965e-05, 7.369399999999915e-05, 7.363900000000034e-05, 7.326400000000344e-05, 7.370799999999872e-05, 7.354200000000283e-05, 7.39439999999994e-05, 7.379200000000308e-05, 7.397199999999854e-05, 7.347199999999804e-05, 7.413900000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:27:55.962" endtime="20201112 12:27:55.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.951" endtime="20201112 12:27:55.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.980" endtime="20201112 12:27:55.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.988" endtime="20201112 12:27:56.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.984" endtime="20201112 12:27:56.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.975" endtime="20201112 12:27:56.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.447" endtime="20201112 12:27:56.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.446" endtime="20201112 12:27:56.014"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.037" endtime="20201112 12:27:56.057"></status>
</kw>
<msg timestamp="20201112 12:27:56.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.034" endtime="20201112 12:27:56.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.061" endtime="20201112 12:27:56.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.067" endtime="20201112 12:27:56.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.026" endtime="20201112 12:27:56.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.021" endtime="20201112 12:27:56.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.090" endtime="20201112 12:27:56.438"></status>
</kw>
<msg timestamp="20201112 12:27:56.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040616375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040690667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.087" endtime="20201112 12:27:56.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040616375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040690667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.447" endtime="20201112 12:27:56.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.466" endtime="20201112 12:27:56.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.080" endtime="20201112 12:27:56.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.075" endtime="20201112 12:27:56.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:56.483" level="INFO">${RESULT} = [{'time': 0.040690667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429199999999664e-05, 'source_diff': 7.429199999999664e-05}, {'time': 0.040794806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:56.474" endtime="20201112 12:27:56.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:56.515" level="INFO">${ACCURACY} = {'time': [0.040690667, 0.040794806, 0.040900014, 0.041005222, 0.041106444, 0.041209653, 0.041313847, 0.041416125, 0.041519278, 0.041623444, 0.041729625, 0.041831806, 0.041937014, 0.042043208, 0.042143...</msg>
<status status="PASS" starttime="20201112 12:27:56.486" endtime="20201112 12:27:56.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.527" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:56.524" endtime="20201112 12:27:56.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.533" level="INFO">VALUE: [7.429199999999664e-05, 7.482000000000322e-05, 7.497199999999954e-05, 7.479099999999766e-05, 7.511099999999576e-05, 7.50839999999961e-05, 7.512500000000227e-05, 7.51389999999949e-05, 7.42639999999975e-05, 7.513800000000237e-05, 7.479199999999714e-05, 7.515300000000141e-05, 7.434700000000238e-05, 7.47769999999981e-05, 7.438899999999415e-05, 7.466600000000101e-05, 7.426400000000444e-05, 7.441700000000023e-05, 7.484800000000236e-05, 7.445799999999947e-05, 7.505499999999748e-05, 7.440299999999372e-05, 7.420799999999922e-05, 7.462499999999483e-05, 7.448600000000555e-05, 7.458300000000306e-05, 7.419399999999965e-05, 7.473599999999886e-05, 7.444499999999937e-05, 7.505499999999748e-05, 7.430499999999673e-05, 7.470799999999972e-05, 7.462500000000177e-05, 7.433399999999535e-05, 7.479099999999766e-05, 7.51389999999949e-05, 7.512500000000227e-05, 7.484699999999594e-05, 7.469400000000015e-05, 7.437500000000152e-05, 7.47230000000057e-05, 7.515300000000141e-05, 7.459799999999517e-05, 7.42360000000053e-05, 7.477800000000451e-05, 7.423599999999836e-05, 7.44439999999999e-05, 7.448599999999861e-05, 7.46519999999945e-05, 7.427799999999707e-05]</msg>
<status status="PASS" starttime="20201112 12:27:56.530" endtime="20201112 12:27:56.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.517" endtime="20201112 12:27:56.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.542" endtime="20201112 12:27:56.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:56.550" endtime="20201112 12:27:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.546" endtime="20201112 12:27:56.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.538" endtime="20201112 12:27:56.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.016" endtime="20201112 12:27:56.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.015" endtime="20201112 12:27:56.576"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.599" endtime="20201112 12:27:56.620"></status>
</kw>
<msg timestamp="20201112 12:27:56.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.596" endtime="20201112 12:27:56.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.623" endtime="20201112 12:27:56.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.629" endtime="20201112 12:27:56.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.589" endtime="20201112 12:27:56.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.583" endtime="20201112 12:27:56.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.653" endtime="20201112 12:27:57.000"></status>
</kw>
<msg timestamp="20201112 12:27:57.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040551833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040627292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.649" endtime="20201112 12:27:57.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040551833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040627292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.009" endtime="20201112 12:27:57.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.028" endtime="20201112 12:27:57.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.642" endtime="20201112 12:27:57.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.638" endtime="20201112 12:27:57.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.046" level="INFO">${RESULT} = [{'time': 0.040627292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.545899999999994e-05, 'source_diff': 7.545899999999994e-05}, {'time': 0.040735542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:57.037" endtime="20201112 12:27:57.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:57.077" level="INFO">${ACCURACY} = {'time': [0.040627292, 0.040735542, 0.04083875, 0.040941944, 0.041048208, 0.041154389, 0.041257569, 0.041365778, 0.041474014, 0.04157625, 0.041679444, 0.041786694, 0.041890903, 0.041994097, 0.04209931...</msg>
<status status="PASS" starttime="20201112 12:27:57.048" endtime="20201112 12:27:57.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.088" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:57.086" endtime="20201112 12:27:57.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.093" level="INFO">VALUE: [7.545899999999994e-05, 7.613900000000284e-05, 7.570800000000072e-05, 7.601299999999978e-05, 7.537500000000252e-05, 7.577799999999857e-05, 7.604099999999892e-05, 7.594500000000087e-05, 7.612499999999633e-05, 7.6069000000005e-05, 7.605500000000542e-05, 7.558299999999712e-05, 7.551399999999875e-05, 7.574999999999943e-05, 7.566600000000201e-05, 7.572200000000029e-05, 7.569500000000062e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.605599999999796e-05, 7.597200000000054e-05, 7.545800000000047e-05, 7.574999999999943e-05, 7.582000000000422e-05, 7.531999999999678e-05, 7.601399999999925e-05, 7.526400000000544e-05, 7.554200000000483e-05, 7.574999999999943e-05, 7.540200000000219e-05, 7.611199999999624e-05, 7.597300000000001e-05, 7.565299999999497e-05, 7.547200000000004e-05, 7.555499999999798e-05, 7.529200000000458e-05, 7.609700000000413e-05, 7.552799999999832e-05, 7.53890000000021e-05, 7.529199999999764e-05, 7.545899999999994e-05, 7.595800000000097e-05, 7.591600000000226e-05, 7.552799999999832e-05, 7.536100000000295e-05, 7.595900000000044e-05, 7.526400000000544e-05, 7.562500000000277e-05, 7.538899999999515e-05, 7.549999999999918e-05]</msg>
<status status="PASS" starttime="20201112 12:27:57.090" endtime="20201112 12:27:57.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.079" endtime="20201112 12:27:57.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.104" endtime="20201112 12:27:57.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:57.112" endtime="20201112 12:27:57.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.108" endtime="20201112 12:27:57.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.100" endtime="20201112 12:27:57.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.579" endtime="20201112 12:27:57.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.577" endtime="20201112 12:27:57.138"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.161" endtime="20201112 12:27:57.180"></status>
</kw>
<msg timestamp="20201112 12:27:57.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.158" endtime="20201112 12:27:57.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.183" endtime="20201112 12:27:57.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.190" endtime="20201112 12:27:57.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.150" endtime="20201112 12:27:57.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.145" endtime="20201112 12:27:57.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.214" endtime="20201112 12:27:57.550"></status>
</kw>
<msg timestamp="20201112 12:27:57.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040343264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040420264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.211" endtime="20201112 12:27:57.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040343264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040420264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.560" endtime="20201112 12:27:57.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.579" endtime="20201112 12:27:57.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.203" endtime="20201112 12:27:57.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.198" endtime="20201112 12:27:57.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.596" level="INFO">${RESULT} = [{'time': 0.040420264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.700000000000068e-05, 'source_diff': 7.700000000000068e-05}, {'time': 0.040527528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:57.587" endtime="20201112 12:27:57.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:57.627" level="INFO">${ACCURACY} = {'time': [0.040420264, 0.040527528, 0.040630736, 0.040736944, 0.040842111, 0.040948319, 0.0410555, 0.041157722, 0.041260972, 0.041369125, 0.041474292, 0.041577514, 0.04168475, 0.041793972, 0.041900208...</msg>
<status status="PASS" starttime="20201112 12:27:57.598" endtime="20201112 12:27:57.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.638" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:57.636" endtime="20201112 12:27:57.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.644" level="INFO">VALUE: [7.700000000000068e-05, 7.661099999999726e-05, 7.708299999999862e-05, 7.683299999999837e-05, 7.652799999999932e-05, 7.661099999999726e-05, 7.701400000000025e-05, 7.647200000000104e-05, 7.700000000000068e-05, 7.661099999999726e-05, 7.698600000000111e-05, 7.654200000000583e-05, 7.65969999999977e-05, 7.702799999999982e-05, 7.716600000000351e-05, 7.69310000000023e-05, 7.650000000000018e-05, 7.661099999999726e-05, 7.683299999999837e-05, 7.700000000000068e-05, 7.697200000000154e-05, 7.722199999999485e-05, 7.675000000000043e-05, 7.688899999999665e-05, 7.715200000000394e-05, 7.661199999999674e-05, 7.636100000000395e-05, 7.684699999999794e-05, 7.683299999999837e-05, 7.624999999999993e-05, 7.706999999999853e-05, 7.64310000000018e-05, 7.683299999999837e-05, 7.725000000000093e-05, 7.623699999999983e-05, 7.681999999999828e-05, 7.663900000000334e-05, 7.725000000000093e-05, 7.645800000000147e-05, 7.654099999999942e-05, 7.680599999999871e-05, 7.633400000000429e-05, 7.641599999999582e-05, 7.656899999999855e-05, 7.630499999999873e-05, 7.619400000000165e-05, 7.673600000000086e-05, 7.647300000000051e-05, 7.711099999999776e-05, 7.70969999999982e-05]</msg>
<status status="PASS" starttime="20201112 12:27:57.641" endtime="20201112 12:27:57.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.629" endtime="20201112 12:27:57.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.653" endtime="20201112 12:27:57.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:57.663" endtime="20201112 12:27:57.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.659" endtime="20201112 12:27:57.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.649" endtime="20201112 12:27:57.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.141" endtime="20201112 12:27:57.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.139" endtime="20201112 12:27:57.689"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.711" endtime="20201112 12:27:57.730"></status>
</kw>
<msg timestamp="20201112 12:27:57.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.708" endtime="20201112 12:27:57.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.734" endtime="20201112 12:27:57.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.740" endtime="20201112 12:27:57.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.701" endtime="20201112 12:27:57.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.695" endtime="20201112 12:27:57.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.763" endtime="20201112 12:27:58.097"></status>
</kw>
<msg timestamp="20201112 12:27:58.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040047306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.760" endtime="20201112 12:27:58.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040047306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.107" endtime="20201112 12:27:58.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.125" endtime="20201112 12:27:58.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.753" endtime="20201112 12:27:58.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.748" endtime="20201112 12:27:58.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.143" level="INFO">${RESULT} = [{'time': 0.040125056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.775000000000143e-05, 'source_diff': 7.775000000000143e-05}, {'time': 0.040230208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:58.134" endtime="20201112 12:27:58.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:58.176" level="INFO">${ACCURACY} = {'time': [0.040125056, 0.040230208, 0.040338389, 0.040445653, 0.040554875, 0.040662097, 0.040765306, 0.040869542, 0.040975806, 0.041080014, 0.041189306, 0.041292486, 0.041398708, 0.041508931, 0.041615...</msg>
<status status="PASS" starttime="20201112 12:27:58.145" endtime="20201112 12:27:58.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.187" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:58.185" endtime="20201112 12:27:58.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.193" level="INFO">VALUE: [7.775000000000143e-05, 7.745800000000247e-05, 7.725000000000093e-05, 7.744499999999543e-05, 7.794399999999646e-05, 7.815300000000441e-05, 7.750000000000118e-05, 7.811099999999876e-05, 7.727799999999313e-05, 7.79169999999968e-05, 7.768100000000305e-05, 7.730500000000667e-05, 7.772200000000229e-05, 7.805599999999996e-05, 7.744500000000237e-05, 7.786100000000545e-05, 7.815299999999747e-05, 7.804100000000092e-05, 7.7458999999995e-05, 7.733400000000529e-05, 7.74310000000028e-05, 7.762499999999783e-05, 7.773600000000186e-05, 7.805599999999996e-05, 7.7764000000001e-05, 7.783299999999937e-05, 7.742999999999639e-05, 7.779100000000067e-05, 7.819500000000312e-05, 7.781999999999928e-05, 7.822199999999585e-05, 7.766699999999654e-05, 7.807000000000647e-05, 7.81110000000057e-05, 7.736099999999801e-05, 7.740300000000366e-05, 7.780500000000024e-05, 7.795800000000297e-05, 7.738899999999715e-05, 7.722199999999485e-05, 7.801400000000125e-05, 7.726300000000103e-05, 7.755599999999946e-05, 7.805599999999996e-05, 7.820900000000269e-05, 7.754199999999989e-05, 7.751400000000075e-05, 7.805500000000049e-05, 7.78189999999998e-05, 7.81389999999979e-05]</msg>
<status status="PASS" starttime="20201112 12:27:58.190" endtime="20201112 12:27:58.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.178" endtime="20201112 12:27:58.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.202" endtime="20201112 12:27:58.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.210" endtime="20201112 12:27:58.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.206" endtime="20201112 12:27:58.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.198" endtime="20201112 12:27:58.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.691" endtime="20201112 12:27:58.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.690" endtime="20201112 12:27:58.238"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.262" endtime="20201112 12:27:58.281"></status>
</kw>
<msg timestamp="20201112 12:27:58.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.258" endtime="20201112 12:27:58.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.284" endtime="20201112 12:27:58.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.291" endtime="20201112 12:27:58.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.251" endtime="20201112 12:27:58.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.245" endtime="20201112 12:27:58.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.314" endtime="20201112 12:27:58.649"></status>
</kw>
<msg timestamp="20201112 12:27:58.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042960514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043039028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.311" endtime="20201112 12:27:58.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042960514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043039028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.659" endtime="20201112 12:27:58.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.677" endtime="20201112 12:27:58.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.304" endtime="20201112 12:27:58.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.299" endtime="20201112 12:27:58.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.695" level="INFO">${RESULT} = [{'time': 0.043039028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.851400000000175e-05, 'source_diff': 7.851400000000175e-05}, {'time': 0.043144278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:58.686" endtime="20201112 12:27:58.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:58.726" level="INFO">${ACCURACY} = {'time': [0.043039028, 0.043144278, 0.043254472, 0.043360667, 0.043470903, 0.043576125, 0.043686389, 0.043795625, 0.043899819, 0.044005042, 0.044114292, 0.044218486, 0.044324694, 0.044431903, 0.044540...</msg>
<status status="PASS" starttime="20201112 12:27:58.697" endtime="20201112 12:27:58.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.737" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:58.735" endtime="20201112 12:27:58.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.742" level="INFO">VALUE: [7.851400000000175e-05, 7.82640000000015e-05, 7.84440000000039e-05, 7.89589999999965e-05, 7.907000000000053e-05, 7.843099999999686e-05, 7.883300000000037e-05, 7.838899999999815e-05, 7.861099999999926e-05, 7.882000000000028e-05, 7.850000000000218e-05, 7.856900000000056e-05, 7.916599999999857e-05, 7.890300000000516e-05, 7.887499999999908e-05, 7.913900000000584e-05, 7.837500000000552e-05, 7.837499999999858e-05, 7.884699999999994e-05, 7.844399999999696e-05, 7.882000000000028e-05, 7.926299999999609e-05, 7.916599999999857e-05, 7.904100000000192e-05, 7.83190000000003e-05, 7.909799999999967e-05, 7.897299999999607e-05, 7.823600000000236e-05, 7.829100000000117e-05, 7.84719999999961e-05, 7.90269999999954e-05, 7.84169999999973e-05, 7.837499999999858e-05, 7.89169999999978e-05, 7.841700000000423e-05, 7.868000000000458e-05, 7.904200000000139e-05, 7.9151999999999e-05, 7.883300000000037e-05, 7.865299999999797e-05, 7.847300000000251e-05, 7.848599999999567e-05, 7.83190000000003e-05, 7.823600000000236e-05, 7.904099999999498e-05, 7.869399999999721e-05, 7.869399999999721e-05, 7.8458999999996e-05, 7.851300000000228e-05, 7.89310000000043e-05]</msg>
<status status="PASS" starttime="20201112 12:27:58.739" endtime="20201112 12:27:58.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.728" endtime="20201112 12:27:58.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.752" endtime="20201112 12:27:58.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.760" endtime="20201112 12:27:58.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.756" endtime="20201112 12:27:58.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.747" endtime="20201112 12:27:58.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.240" endtime="20201112 12:27:58.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.239" endtime="20201112 12:27:58.786"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.810" endtime="20201112 12:27:58.829"></status>
</kw>
<msg timestamp="20201112 12:27:58.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.807" endtime="20201112 12:27:58.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.833" endtime="20201112 12:27:58.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.839" endtime="20201112 12:27:58.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.800" endtime="20201112 12:27:58.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.793" endtime="20201112 12:27:58.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.862" endtime="20201112 12:27:59.196"></status>
</kw>
<msg timestamp="20201112 12:27:59.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042015694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:58.859" endtime="20201112 12:27:59.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042015694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:59.206" endtime="20201112 12:27:59.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.224" endtime="20201112 12:27:59.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.852" endtime="20201112 12:27:59.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.847" endtime="20201112 12:27:59.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.242" level="INFO">${RESULT} = [{'time': 0.042095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930600000000121e-05, 'source_diff': 7.930600000000121e-05}, {'time': 0.042201208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:59.233" endtime="20201112 12:27:59.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:59.273" level="INFO">${ACCURACY} = {'time': [0.042095, 0.042201208, 0.042309458, 0.042418708, 0.042529917, 0.042636125, 0.042744347, 0.042852583, 0.042964819, 0.043072028, 0.043182264, 0.043293514, 0.043401736, 0.043513042, 0.043625208...</msg>
<status status="PASS" starttime="20201112 12:27:59.244" endtime="20201112 12:27:59.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.285" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:59.282" endtime="20201112 12:27:59.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.291" level="INFO">VALUE: [7.930600000000121e-05, 7.977699999999616e-05, 7.973600000000386e-05, 8.024999999999699e-05, 7.950000000000318e-05, 8.006899999999512e-05, 7.975000000000343e-05, 7.998599999999717e-05, 7.998600000000411e-05, 8.00970000000012e-05, 7.937499999999958e-05, 8.002799999999588e-05, 7.966700000000548e-05, 7.994500000000487e-05, 8.001399999999631e-05, 7.991599999999932e-05, 7.927800000000207e-05, 8.00840000000011e-05, 7.936100000000001e-05, 7.949999999999624e-05, 7.997200000000454e-05, 7.973600000000386e-05, 8.000000000000368e-05, 7.940299999999872e-05, 8.011099999999383e-05, 7.975000000000343e-05, 7.936100000000001e-05, 8.009799999999373e-05, 7.963900000000634e-05, 7.968099999999811e-05, 7.923700000000283e-05, 7.918099999999761e-05, 7.941599999999882e-05, 7.962499999999983e-05, 7.99719999999976e-05, 7.945800000000447e-05, 8.00840000000011e-05, 7.96389999999994e-05, 7.98190000000018e-05, 7.920899999999675e-05, 8.01389999999999e-05, 7.987500000000008e-05, 8.018099999999861e-05, 8.007000000000153e-05, 7.975000000000343e-05, 7.948700000000308e-05, 7.937499999999958e-05, 7.965299999999897e-05, 7.977799999999563e-05, 7.929200000000164e-05]</msg>
<status status="PASS" starttime="20201112 12:27:59.287" endtime="20201112 12:27:59.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.275" endtime="20201112 12:27:59.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.300" endtime="20201112 12:27:59.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:59.309" endtime="20201112 12:27:59.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.304" endtime="20201112 12:27:59.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.295" endtime="20201112 12:27:59.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.788" endtime="20201112 12:27:59.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.787" endtime="20201112 12:27:59.335"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.357" endtime="20201112 12:27:59.376"></status>
</kw>
<msg timestamp="20201112 12:27:59.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.354" endtime="20201112 12:27:59.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.380" endtime="20201112 12:27:59.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.386" endtime="20201112 12:27:59.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.347" endtime="20201112 12:27:59.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.341" endtime="20201112 12:27:59.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.411" endtime="20201112 12:27:59.748"></status>
</kw>
<msg timestamp="20201112 12:27:59.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040250333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040331375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.408" endtime="20201112 12:27:59.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040250333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040331375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.758" endtime="20201112 12:27:59.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.776" endtime="20201112 12:27:59.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.400" endtime="20201112 12:27:59.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.396" endtime="20201112 12:27:59.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.794" level="INFO">${RESULT} = [{'time': 0.040331375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.104200000000339e-05, 'source_diff': 8.104200000000339e-05}, {'time': 0.040438583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:59.785" endtime="20201112 12:27:59.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:59.825" level="INFO">${ACCURACY} = {'time': [0.040331375, 0.040438583, 0.040549819, 0.040662069, 0.040773306, 0.040884542, 0.040996764, 0.041105986, 0.041217222, 0.041325444, 0.041433625, 0.041539819, 0.041652069, 0.041764264, 0.041873...</msg>
<status status="PASS" starttime="20201112 12:27:59.796" endtime="20201112 12:27:59.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.836" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:27:59.834" endtime="20201112 12:27:59.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.842" level="INFO">VALUE: [8.104200000000339e-05, 8.058300000000213e-05, 8.079100000000367e-05, 8.106900000000306e-05, 8.116700000000004e-05, 8.082000000000228e-05, 8.034700000000145e-05, 8.090300000000022e-05, 8.070799999999878e-05, 8.120800000000622e-05, 8.054200000000289e-05, 8.05269999999969e-05, 8.108300000000263e-05, 8.058300000000213e-05, 8.108300000000263e-05, 8.087500000000108e-05, 8.088900000000065e-05, 8.069399999999921e-05, 8.025000000000393e-05, 8.115300000000047e-05, 8.101399999999731e-05, 8.120799999999928e-05, 8.077799999999663e-05, 8.070899999999825e-05, 8.101400000000425e-05, 8.033299999999494e-05, 8.112500000000133e-05, 8.104199999999645e-05, 8.105600000000296e-05, 8.074999999999749e-05, 8.09719999999986e-05, 8.11249999999944e-05, 8.06390000000004e-05, 8.044399999999896e-05, 8.051399999999681e-05, 8.070799999999878e-05, 8.112500000000133e-05, 8.118000000000014e-05, 8.092999999999989e-05, 8.04169999999993e-05, 8.10970000000022e-05, 8.101400000000425e-05, 8.088800000000118e-05, 8.022199999999785e-05, 8.073599999999792e-05, 8.094499999999893e-05, 8.11119999999943e-05, 8.104199999999645e-05, 8.04169999999993e-05, 8.045900000000494e-05]</msg>
<status status="PASS" starttime="20201112 12:27:59.838" endtime="20201112 12:27:59.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.827" endtime="20201112 12:27:59.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.851" endtime="20201112 12:27:59.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:59.859" endtime="20201112 12:27:59.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.855" endtime="20201112 12:27:59.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.846" endtime="20201112 12:27:59.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.337" endtime="20201112 12:27:59.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.336" endtime="20201112 12:27:59.885"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.908" endtime="20201112 12:27:59.927"></status>
</kw>
<msg timestamp="20201112 12:27:59.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.905" endtime="20201112 12:27:59.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.930" endtime="20201112 12:27:59.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.936" endtime="20201112 12:27:59.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.898" endtime="20201112 12:27:59.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.892" endtime="20201112 12:27:59.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.962" endtime="20201112 12:28:00.295"></status>
</kw>
<msg timestamp="20201112 12:28:00.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040151083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.958" endtime="20201112 12:28:00.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040151083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.305" endtime="20201112 12:28:00.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.324" endtime="20201112 12:28:00.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.949" endtime="20201112 12:28:00.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.945" endtime="20201112 12:28:00.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.342" level="INFO">${RESULT} = [{'time': 0.040233083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.200000000000568e-05, 'source_diff': 8.200000000000568e-05}, {'time': 0.040341292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:00.333" endtime="20201112 12:28:00.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:00.375" level="INFO">${ACCURACY} = {'time': [0.040233083, 0.040341292, 0.040450542, 0.040564833, 0.040673, 0.040783194, 0.040894444, 0.04100675, 0.041116917, 0.041229153, 0.041341389, 0.041454639, 0.041563875, 0.041671097, 0.041783347,...</msg>
<status status="PASS" starttime="20201112 12:28:00.344" endtime="20201112 12:28:00.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.386" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:28:00.384" endtime="20201112 12:28:00.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.392" level="INFO">VALUE: [8.200000000000568e-05, 8.218100000000061e-05, 8.21390000000019e-05, 8.21390000000019e-05, 8.20970000000032e-05, 8.134700000000245e-05, 8.133300000000288e-05, 8.1764000000005e-05, 8.219500000000018e-05, 8.19170000000008e-05, 8.201399999999831e-05, 8.123599999999842e-05, 8.204199999999745e-05, 8.127799999999713e-05, 8.137500000000158e-05, 8.156999999999609e-05, 8.16390000000014e-05, 8.183400000000285e-05, 8.208399999999616e-05, 8.216700000000104e-05, 8.220800000000028e-05, 8.1846999999996e-05, 8.14719999999991e-05, 8.165199999999456e-05, 8.126399999999756e-05, 8.19719999999996e-05, 8.218100000000061e-05, 8.204200000000439e-05, 8.21390000000019e-05, 8.20269999999984e-05, 8.202799999999788e-05, 8.183400000000285e-05, 8.132000000000278e-05, 8.197299999999907e-05, 8.166700000000054e-05, 8.197299999999907e-05, 8.136100000000202e-05, 8.136100000000202e-05, 8.1846999999996e-05, 8.220800000000028e-05, 8.144399999999996e-05, 8.212500000000234e-05, 8.186100000000252e-05, 8.127800000000407e-05, 8.127799999999713e-05, 8.159799999999523e-05, 8.204099999999798e-05, 8.148599999999867e-05, 8.20840000000031e-05, 8.204199999999745e-05]</msg>
<status status="PASS" starttime="20201112 12:28:00.389" endtime="20201112 12:28:00.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.377" endtime="20201112 12:28:00.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.401" endtime="20201112 12:28:00.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.410" endtime="20201112 12:28:00.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.405" endtime="20201112 12:28:00.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.397" endtime="20201112 12:28:00.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.888" endtime="20201112 12:28:00.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.886" endtime="20201112 12:28:00.435"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.458" endtime="20201112 12:28:00.477"></status>
</kw>
<msg timestamp="20201112 12:28:00.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.455" endtime="20201112 12:28:00.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.481" endtime="20201112 12:28:00.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.487" endtime="20201112 12:28:00.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.448" endtime="20201112 12:28:00.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.442" endtime="20201112 12:28:00.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.510" endtime="20201112 12:28:00.846"></status>
</kw>
<msg timestamp="20201112 12:28:00.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040260431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040342958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.507" endtime="20201112 12:28:00.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040260431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040342958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.855" endtime="20201112 12:28:00.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.874" endtime="20201112 12:28:00.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.500" endtime="20201112 12:28:00.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.495" endtime="20201112 12:28:00.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.892" level="INFO">${RESULT} = [{'time': 0.040342958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.252699999999891e-05, 'source_diff': 8.252699999999891e-05}, {'time': 0.040452208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:00.883" endtime="20201112 12:28:00.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:00.923" level="INFO">${ACCURACY} = {'time': [0.040342958, 0.040452208, 0.040565444, 0.040679694, 0.040790958, 0.040901292, 0.041009458, 0.041119722, 0.041231944, 0.041343167, 0.041452403, 0.041567708, 0.041677931, 0.041792181, 0.041902...</msg>
<status status="PASS" starttime="20201112 12:28:00.894" endtime="20201112 12:28:00.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.934" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:28:00.931" endtime="20201112 12:28:00.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.939" level="INFO">VALUE: [8.252699999999891e-05, 8.245800000000053e-05, 8.313799999999649e-05, 8.30970000000042e-05, 8.266600000000207e-05, 8.318100000000161e-05, 8.229099999999823e-05, 8.316599999999563e-05, 8.243000000000139e-05, 8.220899999999975e-05, 8.236099999999608e-05, 8.3152000000003e-05, 8.233400000000335e-05, 8.309799999999673e-05, 8.237499999999565e-05, 8.254099999999848e-05, 8.301299999999984e-05, 8.2459e-05, 8.27369999999994e-05, 8.250000000000618e-05, 8.274999999999949e-05, 8.28049999999983e-05, 8.244400000000096e-05, 8.262500000000284e-05, 8.244500000000043e-05, 8.230600000000421e-05, 8.238799999999574e-05, 8.322200000000085e-05, 8.268099999999418e-05, 8.274999999999949e-05, 8.276399999999906e-05, 8.249999999999924e-05, 8.269400000000121e-05, 8.249999999999924e-05, 8.281999999999734e-05, 8.24720000000001e-05, 8.237500000000259e-05, 8.23469999999965e-05, 8.308299999999769e-05, 8.29720000000006e-05, 8.2846999999997e-05, 8.240300000000172e-05, 8.301399999999931e-05, 8.252699999999891e-05, 8.316600000000257e-05, 8.290300000000222e-05, 8.2459e-05, 8.234799999999598e-05, 8.281999999999734e-05, 8.315299999999554e-05]</msg>
<status status="PASS" starttime="20201112 12:28:00.936" endtime="20201112 12:28:00.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.924" endtime="20201112 12:28:00.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.948" endtime="20201112 12:28:00.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.957" endtime="20201112 12:28:00.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.952" endtime="20201112 12:28:00.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.944" endtime="20201112 12:28:00.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.438" endtime="20201112 12:28:00.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.436" endtime="20201112 12:28:00.983"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.005" endtime="20201112 12:28:01.024"></status>
</kw>
<msg timestamp="20201112 12:28:01.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.002" endtime="20201112 12:28:01.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.028" endtime="20201112 12:28:01.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.034" endtime="20201112 12:28:01.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.995" endtime="20201112 12:28:01.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.989" endtime="20201112 12:28:01.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.057" endtime="20201112 12:28:01.405"></status>
</kw>
<msg timestamp="20201112 12:28:01.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040375875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040459847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.054" endtime="20201112 12:28:01.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040375875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040459847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.415" endtime="20201112 12:28:01.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.434" endtime="20201112 12:28:01.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.047" endtime="20201112 12:28:01.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.042" endtime="20201112 12:28:01.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.451" level="INFO">${RESULT} = [{'time': 0.040459847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.39720000000016e-05, 'source_diff': 8.39720000000016e-05}, {'time': 0.040573097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:01.442" endtime="20201112 12:28:01.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:01.482" level="INFO">${ACCURACY} = {'time': [0.040459847, 0.040573097, 0.040683347, 0.040795583, 0.040909819, 0.041021069, 0.041134306, 0.041249569, 0.041360778, 0.041471028, 0.04158225, 0.041692486, 0.041803708, 0.041915944, 0.0420282...</msg>
<status status="PASS" starttime="20201112 12:28:01.453" endtime="20201112 12:28:01.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.493" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:28:01.491" endtime="20201112 12:28:01.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.499" level="INFO">VALUE: [8.39720000000016e-05, 8.405499999999955e-05, 8.39720000000016e-05, 8.400000000000074e-05, 8.38049999999993e-05, 8.352699999999991e-05, 8.372300000000082e-05, 8.356899999999862e-05, 8.361100000000427e-05, 8.383399999999791e-05, 8.404199999999945e-05, 8.351399999999981e-05, 8.351399999999981e-05, 8.411099999999783e-05, 8.333299999999794e-05, 8.344400000000196e-05, 8.348600000000067e-05, 8.393000000000289e-05, 8.419399999999577e-05, 8.420800000000228e-05, 8.422199999999491e-05, 8.354199999999895e-05, 8.384800000000442e-05, 8.334700000000445e-05, 8.33049999999988e-05, 8.340300000000272e-05, 8.404099999999998e-05, 8.412500000000434e-05, 8.338899999999622e-05, 8.373600000000092e-05, 8.327799999999913e-05, 8.386099999999758e-05, 8.391600000000332e-05, 8.39720000000016e-05, 8.375000000000049e-05, 8.352699999999991e-05, 8.401400000000031e-05, 8.355599999999852e-05, 8.415300000000348e-05, 8.329099999999923e-05, 8.366600000000307e-05, 8.413899999999697e-05, 8.336199999999655e-05, 8.41669999999961e-05, 8.358299999999819e-05, 8.40970000000052e-05, 8.36669999999956e-05, 8.409699999999826e-05, 8.377799999999963e-05, 8.394500000000193e-05]</msg>
<status status="PASS" starttime="20201112 12:28:01.496" endtime="20201112 12:28:01.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.484" endtime="20201112 12:28:01.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.509" endtime="20201112 12:28:01.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:01.517" endtime="20201112 12:28:01.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.512" endtime="20201112 12:28:01.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.504" endtime="20201112 12:28:01.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.985" endtime="20201112 12:28:01.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.983" endtime="20201112 12:28:01.543"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.565" endtime="20201112 12:28:01.585"></status>
</kw>
<msg timestamp="20201112 12:28:01.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.562" endtime="20201112 12:28:01.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.588" endtime="20201112 12:28:01.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.594" endtime="20201112 12:28:01.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.555" endtime="20201112 12:28:01.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.549" endtime="20201112 12:28:01.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.618" endtime="20201112 12:28:01.952"></status>
</kw>
<msg timestamp="20201112 12:28:01.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040334361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040418889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.614" endtime="20201112 12:28:01.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040334361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040418889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.962" endtime="20201112 12:28:01.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.980" endtime="20201112 12:28:01.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.607" endtime="20201112 12:28:01.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.603" endtime="20201112 12:28:01.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.999" level="INFO">${RESULT} = [{'time': 0.040418889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.452800000000038e-05, 'source_diff': 8.452800000000038e-05}, {'time': 0.040530111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:01.990" endtime="20201112 12:28:02.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:02.031" level="INFO">${ACCURACY} = {'time': [0.040418889, 0.040530111, 0.040646347, 0.040759569, 0.040870778, 0.040986, 0.041103181, 0.041215375, 0.041328583, 0.041441778, 0.041555, 0.041667222, 0.041781444, 0.041895625, 0.042008861, 0...</msg>
<status status="PASS" starttime="20201112 12:28:02.002" endtime="20201112 12:28:02.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.042" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:28:02.039" endtime="20201112 12:28:02.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.047" level="INFO">VALUE: [8.452800000000038e-05, 8.431899999999937e-05, 8.43469999999985e-05, 8.506900000000012e-05, 8.420900000000175e-05, 8.511099999999883e-05, 8.511200000000524e-05, 8.431899999999937e-05, 8.486100000000552e-05, 8.491699999999686e-05, 8.43469999999985e-05, 8.51249999999984e-05, 8.445800000000253e-05, 8.504200000000045e-05, 8.520800000000328e-05, 8.498600000000217e-05, 8.476400000000106e-05, 8.520799999999634e-05, 8.486099999999858e-05, 8.434700000000545e-05, 8.45840000000056e-05, 8.455599999999952e-05, 8.459699999999876e-05, 8.494399999999652e-05, 8.426399999999362e-05, 8.46249999999979e-05, 8.455599999999952e-05, 8.498600000000217e-05, 8.475000000000149e-05, 8.508299999999969e-05, 8.486100000000552e-05, 8.46390000000044e-05, 8.469499999999575e-05, 8.472200000000235e-05, 8.505600000000002e-05, 8.481899999999987e-05, 8.4459000000002e-05, 8.441599999999688e-05, 8.470800000000278e-05, 8.480599999999977e-05, 8.455599999999952e-05, 8.452800000000038e-05, 8.455599999999952e-05, 8.448600000000167e-05, 8.42919999999997e-05, 8.46669999999966e-05, 8.51669999999971e-05, 8.523600000000242e-05, 8.427800000000013e-05, 8.475000000000149e-05]</msg>
<status status="PASS" starttime="20201112 12:28:02.044" endtime="20201112 12:28:02.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.032" endtime="20201112 12:28:02.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.056" endtime="20201112 12:28:02.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:02.065" endtime="20201112 12:28:02.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.060" endtime="20201112 12:28:02.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.052" endtime="20201112 12:28:02.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.545" endtime="20201112 12:28:02.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.544" endtime="20201112 12:28:02.091"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.113" endtime="20201112 12:28:02.132"></status>
</kw>
<msg timestamp="20201112 12:28:02.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.110" endtime="20201112 12:28:02.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.136" endtime="20201112 12:28:02.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.142" endtime="20201112 12:28:02.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.103" endtime="20201112 12:28:02.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.097" endtime="20201112 12:28:02.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.165" endtime="20201112 12:28:02.499"></status>
</kw>
<msg timestamp="20201112 12:28:02.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040177486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.162" endtime="20201112 12:28:02.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040177486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.508" endtime="20201112 12:28:02.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.527" endtime="20201112 12:28:02.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.155" endtime="20201112 12:28:02.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.150" endtime="20201112 12:28:02.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.546" level="INFO">${RESULT} = [{'time': 0.040263292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.580600000000077e-05, 'source_diff': 8.580600000000077e-05}, {'time': 0.040380472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:02.537" endtime="20201112 12:28:02.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:02.579" level="INFO">${ACCURACY} = {'time': [0.040263292, 0.040380472, 0.040494708, 0.040609958, 0.040726181, 0.040841444, 0.040957736, 0.041069986, 0.041185236, 0.0413015, 0.041412722, 0.041525958, 0.041639208, 0.041754431, 0.04187175...</msg>
<status status="PASS" starttime="20201112 12:28:02.548" endtime="20201112 12:28:02.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.590" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:28:02.588" endtime="20201112 12:28:02.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.596" level="INFO">VALUE: [8.580600000000077e-05, 8.533299999999994e-05, 8.551399999999487e-05, 8.537499999999865e-05, 8.576400000000206e-05, 8.561099999999933e-05, 8.538899999999822e-05, 8.544400000000396e-05, 8.555500000000105e-05, 8.559699999999976e-05, 8.551400000000181e-05, 8.595800000000403e-05, 8.580499999999436e-05, 8.584799999999948e-05, 8.606900000000112e-05, 8.537499999999865e-05, 8.561099999999933e-05, 8.53469999999995e-05, 8.570799999999684e-05, 8.568100000000411e-05, 8.544400000000396e-05, 8.558300000000019e-05, 8.561099999999933e-05, 8.568000000000464e-05, 8.601400000000231e-05, 8.552700000000191e-05, 8.572300000000282e-05, 8.598599999999623e-05, 8.569399999999727e-05, 8.561099999999933e-05, 8.587500000000609e-05, 8.583399999999991e-05, 8.607000000000059e-05, 8.580600000000077e-05, 8.554200000000095e-05, 8.536099999999908e-05, 8.527800000000113e-05, 8.54449999999965e-05, 8.61249999999994e-05, 8.551400000000181e-05, 8.573599999999598e-05, 8.525000000000199e-05, 8.611099999999983e-05, 8.555600000000052e-05, 8.57370000000024e-05, 8.572199999999641e-05, 8.577800000000163e-05, 8.53469999999995e-05, 8.618099999999768e-05, 8.573599999999598e-05]</msg>
<status status="PASS" starttime="20201112 12:28:02.593" endtime="20201112 12:28:02.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.581" endtime="20201112 12:28:02.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.605" endtime="20201112 12:28:02.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:02.614" endtime="20201112 12:28:02.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.609" endtime="20201112 12:28:02.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.601" endtime="20201112 12:28:02.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.093" endtime="20201112 12:28:02.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.092" endtime="20201112 12:28:02.640"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.662" endtime="20201112 12:28:02.681"></status>
</kw>
<msg timestamp="20201112 12:28:02.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.659" endtime="20201112 12:28:02.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.685" endtime="20201112 12:28:02.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.691" endtime="20201112 12:28:02.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.652" endtime="20201112 12:28:02.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.646" endtime="20201112 12:28:02.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.714" endtime="20201112 12:28:03.049"></status>
</kw>
<msg timestamp="20201112 12:28:03.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040170167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040256889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.711" endtime="20201112 12:28:03.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040170167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040256889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.058" endtime="20201112 12:28:03.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.077" endtime="20201112 12:28:03.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.704" endtime="20201112 12:28:03.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.699" endtime="20201112 12:28:03.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.094" level="INFO">${RESULT} = [{'time': 0.040256889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.672199999999741e-05, 'source_diff': 8.672199999999741e-05}, {'time': 0.040375125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:03.085" endtime="20201112 12:28:03.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:03.127" level="INFO">${ACCURACY} = {'time': [0.040256889, 0.040375125, 0.040488389, 0.040602569, 0.040715806, 0.040832056, 0.040947319, 0.041061569, 0.041173806, 0.041289069, 0.041402278, 0.041515514, 0.04163075, 0.041747958, 0.0418661...</msg>
<status status="PASS" starttime="20201112 12:28:03.096" endtime="20201112 12:28:03.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.138" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:28:03.135" endtime="20201112 12:28:03.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.143" level="INFO">VALUE: [8.672199999999741e-05, 8.687500000000015e-05, 8.722199999999791e-05, 8.715200000000006e-05, 8.652800000000238e-05, 8.6944999999998e-05, 8.663799999999999e-05, 8.66799999999987e-05, 8.650000000000324e-05, 8.686100000000058e-05, 8.686100000000058e-05, 8.658300000000119e-05, 8.690299999999929e-05, 8.642999999999845e-05, 8.71799999999992e-05, 8.687500000000015e-05, 8.666700000000555e-05, 8.686100000000058e-05, 8.643099999999793e-05, 8.68199999999944e-05, 8.718099999999868e-05, 8.622200000000385e-05, 8.691599999999938e-05, 8.641599999999888e-05, 8.66249999999999e-05, 8.670799999999784e-05, 8.716600000000657e-05, 8.66249999999999e-05, 8.6332999999994e-05, 8.6847000000001e-05, 8.645800000000453e-05, 8.66249999999999e-05, 8.661100000000033e-05, 8.636100000000008e-05, 8.637499999999965e-05, 8.698600000000417e-05, 8.630600000000127e-05, 8.676400000000306e-05, 8.647199999999716e-05, 8.67920000000022e-05, 8.637499999999965e-05, 8.650000000000324e-05, 8.650000000000324e-05, 8.71250000000004e-05, 8.632000000000084e-05, 8.677799999999569e-05, 8.683300000000144e-05, 8.719399999999877e-05, 8.690199999999981e-05, 8.675000000000349e-05]</msg>
<status status="PASS" starttime="20201112 12:28:03.140" endtime="20201112 12:28:03.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.129" endtime="20201112 12:28:03.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.153" endtime="20201112 12:28:03.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.161" endtime="20201112 12:28:03.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.157" endtime="20201112 12:28:03.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.148" endtime="20201112 12:28:03.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.642" endtime="20201112 12:28:03.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.641" endtime="20201112 12:28:03.187"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.210" endtime="20201112 12:28:03.229"></status>
</kw>
<msg timestamp="20201112 12:28:03.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.206" endtime="20201112 12:28:03.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.233" endtime="20201112 12:28:03.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.239" endtime="20201112 12:28:03.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.199" endtime="20201112 12:28:03.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.193" endtime="20201112 12:28:03.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.262" endtime="20201112 12:28:03.597"></status>
</kw>
<msg timestamp="20201112 12:28:03.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040359458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040447264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.259" endtime="20201112 12:28:03.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040359458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040447264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.607" endtime="20201112 12:28:03.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.625" endtime="20201112 12:28:03.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.252" endtime="20201112 12:28:03.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.247" endtime="20201112 12:28:03.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.643" level="INFO">${RESULT} = [{'time': 0.040447264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.780599999999583e-05, 'source_diff': 8.780599999999583e-05}, {'time': 0.040565528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:03.634" endtime="20201112 12:28:03.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:03.676" level="INFO">${ACCURACY} = {'time': [0.040447264, 0.040565528, 0.040681778, 0.040797014, 0.040914264, 0.041033542, 0.041149806, 0.041266083, 0.041385319, 0.041500569, 0.041615806, 0.041735069, 0.041854333, 0.041970597, 0.042084...</msg>
<status status="PASS" starttime="20201112 12:28:03.645" endtime="20201112 12:28:03.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.687" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:28:03.684" endtime="20201112 12:28:03.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.692" level="INFO">VALUE: [8.780599999999583e-05, 8.813899999999403e-05, 8.737500000000065e-05, 8.751399999999687e-05, 8.769499999999875e-05, 8.748599999999773e-05, 8.822299999999839e-05, 8.823600000000542e-05, 8.724999999999705e-05, 8.791600000000038e-05, 8.797299999999814e-05, 8.758300000000219e-05, 8.783300000000244e-05, 8.770799999999884e-05, 8.788900000000072e-05, 8.729099999999629e-05, 8.773600000000492e-05, 8.827799999999719e-05, 8.808299999999575e-05, 8.744399999999902e-05, 8.744399999999902e-05, 8.745799999999859e-05, 8.759800000000123e-05, 8.741699999999936e-05, 8.783300000000244e-05, 8.772299999999789e-05, 8.76250000000009e-05, 8.734800000000098e-05, 8.754200000000295e-05, 8.770799999999884e-05, 8.792999999999995e-05, 8.754100000000348e-05, 8.761099999999439e-05, 8.780499999999636e-05, 8.738900000000022e-05, 8.798599999999823e-05, 8.777799999999669e-05, 8.751399999999687e-05, 8.819399999999977e-05, 8.804099999999704e-05, 8.754199999999601e-05, 8.815300000000054e-05, 8.752800000000338e-05, 8.805599999999608e-05, 8.820900000000576e-05, 8.759700000000176e-05, 8.776299999999765e-05, 8.736100000000108e-05, 8.751399999999687e-05, 8.813900000000097e-05]</msg>
<status status="PASS" starttime="20201112 12:28:03.689" endtime="20201112 12:28:03.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.678" endtime="20201112 12:28:03.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.702" endtime="20201112 12:28:03.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.710" endtime="20201112 12:28:03.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.706" endtime="20201112 12:28:03.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.697" endtime="20201112 12:28:03.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.189" endtime="20201112 12:28:03.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.188" endtime="20201112 12:28:03.736"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.759" endtime="20201112 12:28:03.778"></status>
</kw>
<msg timestamp="20201112 12:28:03.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.755" endtime="20201112 12:28:03.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.781" endtime="20201112 12:28:03.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.788" endtime="20201112 12:28:03.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.748" endtime="20201112 12:28:03.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.742" endtime="20201112 12:28:03.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.811" endtime="20201112 12:28:04.145"></status>
</kw>
<msg timestamp="20201112 12:28:04.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040320028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.808" endtime="20201112 12:28:04.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040320028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.155" endtime="20201112 12:28:04.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.173" endtime="20201112 12:28:04.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.801" endtime="20201112 12:28:04.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.796" endtime="20201112 12:28:04.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:04.191" level="INFO">${RESULT} = [{'time': 0.040409125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.909699999999632e-05, 'source_diff': 8.909699999999632e-05}, {'time': 0.040526375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:04.182" endtime="20201112 12:28:04.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:04.224" level="INFO">${ACCURACY} = {'time': [0.040409125, 0.040526375, 0.040645611, 0.040761861, 0.040880083, 0.040994333, 0.041110583, 0.041227778, 0.041344028, 0.041463278, 0.041578514, 0.041693708, 0.041808903, 0.041930125, 0.042048...</msg>
<status status="PASS" starttime="20201112 12:28:04.193" endtime="20201112 12:28:04.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.235" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:28:04.232" endtime="20201112 12:28:04.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.240" level="INFO">VALUE: [8.909699999999632e-05, 8.840300000000079e-05, 8.895800000000009e-05, 8.905500000000455e-05, 8.909699999999632e-05, 8.834700000000251e-05, 8.886100000000258e-05, 8.836100000000208e-05, 8.920899999999982e-05, 8.890300000000129e-05, 8.898599999999923e-05, 8.834700000000251e-05, 8.865300000000104e-05, 8.913900000000197e-05, 8.898599999999923e-05, 8.881900000000387e-05, 8.887500000000215e-05, 8.904200000000445e-05, 8.862499999999496e-05, 8.861100000000233e-05, 8.851400000000481e-05, 8.84999999999983e-05, 8.836099999999514e-05, 8.840200000000131e-05, 8.924999999999905e-05, 8.883300000000344e-05, 8.901399999999837e-05, 8.826399999999762e-05, 8.856900000000362e-05, 8.913900000000197e-05, 8.874999999999855e-05, 8.859699999999582e-05, 8.905499999999761e-05, 8.913900000000197e-05, 8.83199999999959e-05, 8.919400000000077e-05, 8.888900000000172e-05, 8.83879999999948e-05, 8.825000000000499e-05, 8.852799999999744e-05, 8.8945e-05, 8.909699999999632e-05, 8.827799999999719e-05, 8.869400000000027e-05, 8.890300000000129e-05, 8.91250000000024e-05, 8.87920000000042e-05, 8.88329999999965e-05, 8.904100000000498e-05, 8.826400000000456e-05]</msg>
<status status="PASS" starttime="20201112 12:28:04.237" endtime="20201112 12:28:04.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.225" endtime="20201112 12:28:04.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.249" endtime="20201112 12:28:04.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:04.258" endtime="20201112 12:28:04.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.253" endtime="20201112 12:28:04.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.245" endtime="20201112 12:28:04.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.738" endtime="20201112 12:28:04.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.737" endtime="20201112 12:28:04.284"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.306" endtime="20201112 12:28:04.326"></status>
</kw>
<msg timestamp="20201112 12:28:04.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.303" endtime="20201112 12:28:04.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.329" endtime="20201112 12:28:04.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.335" endtime="20201112 12:28:04.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.296" endtime="20201112 12:28:04.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.290" endtime="20201112 12:28:04.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.359" endtime="20201112 12:28:04.694"></status>
</kw>
<msg timestamp="20201112 12:28:04.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040531139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.356" endtime="20201112 12:28:04.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040531139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.703" endtime="20201112 12:28:04.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.722" endtime="20201112 12:28:04.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.348" endtime="20201112 12:28:04.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.344" endtime="20201112 12:28:04.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:04.739" level="INFO">${RESULT} = [{'time': 0.040531139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.943100000000093e-05, 'source_diff': 8.943100000000093e-05}, {'time': 0.040648403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:04.730" endtime="20201112 12:28:04.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:04.773" level="INFO">${ACCURACY} = {'time': [0.040531139, 0.040648403, 0.040769667, 0.040889917, 0.041006194, 0.041121486, 0.041237681, 0.041357958, 0.041474208, 0.041594486, 0.041710736, 0.041830972, 0.041951236, 0.042072472, 0.042192...</msg>
<status status="PASS" starttime="20201112 12:28:04.742" endtime="20201112 12:28:04.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.784" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:28:04.782" endtime="20201112 12:28:04.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.790" level="INFO">VALUE: [8.943100000000093e-05, 8.941700000000136e-05, 9.001399999999937e-05, 8.955599999999758e-05, 9.011100000000383e-05, 8.945800000000059e-05, 8.974999999999955e-05, 8.931899999999743e-05, 8.927699999999872e-05, 8.952799999999844e-05, 8.990299999999535e-05, 8.990300000000229e-05, 8.993000000000195e-05, 9.008299999999775e-05, 8.984700000000401e-05, 8.995800000000109e-05, 8.945800000000059e-05, 8.936099999999614e-05, 8.997300000000014e-05, 8.965300000000204e-05, 8.99999999999998e-05, 8.986099999999664e-05, 8.926400000000556e-05, 9.006999999999765e-05, 9.022199999999397e-05, 8.926399999999862e-05, 8.976399999999912e-05, 8.959800000000323e-05, 9.004199999999851e-05, 9.019500000000125e-05, 8.968100000000118e-05, 8.977799999999869e-05, 8.952800000000538e-05, 8.943100000000093e-05, 8.927799999999819e-05, 8.988899999999578e-05, 8.945900000000007e-05, 8.983399999999697e-05, 9.020900000000082e-05, 9.009799999999679e-05, 8.943100000000093e-05, 8.961099999999639e-05, 8.984799999999654e-05, 8.973599999999998e-05, 8.980599999999783e-05, 9.030499999999886e-05, 8.984699999999707e-05, 8.955499999999811e-05, 8.970800000000084e-05, 8.980499999999836e-05]</msg>
<status status="PASS" starttime="20201112 12:28:04.787" endtime="20201112 12:28:04.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.775" endtime="20201112 12:28:04.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.799" endtime="20201112 12:28:04.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:04.808" endtime="20201112 12:28:04.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.803" endtime="20201112 12:28:04.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.795" endtime="20201112 12:28:04.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.286" endtime="20201112 12:28:04.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.285" endtime="20201112 12:28:04.833"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.856" endtime="20201112 12:28:04.876"></status>
</kw>
<msg timestamp="20201112 12:28:04.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.853" endtime="20201112 12:28:04.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.879" endtime="20201112 12:28:04.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.885" endtime="20201112 12:28:04.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.846" endtime="20201112 12:28:04.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.840" endtime="20201112 12:28:04.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.909" endtime="20201112 12:28:05.243"></status>
</kw>
<msg timestamp="20201112 12:28:05.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040520681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04061175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:04.906" endtime="20201112 12:28:05.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040520681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04061175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:05.252" endtime="20201112 12:28:05.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.271" endtime="20201112 12:28:05.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.898" endtime="20201112 12:28:05.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.894" endtime="20201112 12:28:05.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.288" level="INFO">${RESULT} = [{'time': 0.04061175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.106899999999918e-05, 'source_diff': 9.106899999999918e-05}, {'time': 0.040734014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:28:05.279" endtime="20201112 12:28:05.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:05.320" level="INFO">${ACCURACY} = {'time': [0.04061175, 0.040734014, 0.040854319, 0.0409755, 0.041095778, 0.041216042, 0.041336347, 0.041457625, 0.041575917, 0.041693181, 0.041811444, 0.041929708, 0.042049986, 0.042171292, 0.042289542...</msg>
<status status="PASS" starttime="20201112 12:28:05.291" endtime="20201112 12:28:05.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.332" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:28:05.329" endtime="20201112 12:28:05.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.338" level="INFO">VALUE: [9.106899999999918e-05, 9.122200000000191e-05, 9.093000000000295e-05, 9.054199999999901e-05, 9.0945000000002e-05, 9.058400000000466e-05, 9.063900000000347e-05, 9.077799999999969e-05, 9.093099999999549e-05, 9.087500000000415e-05, 9.054100000000648e-05, 9.119400000000277e-05, 9.081899999999893e-05, 9.106999999999865e-05, 9.101400000000037e-05, 9.075000000000055e-05, 9.104199999999951e-05, 9.036099999999714e-05, 9.029199999999876e-05, 9.070800000000184e-05, 9.072200000000141e-05, 9.040300000000279e-05, 9.063900000000347e-05, 9.034700000000451e-05, 9.051399999999987e-05, 9.111100000000483e-05, 9.095800000000209e-05, 9.088899999999678e-05, 9.072200000000141e-05, 9.068099999999524e-05, 9.072200000000141e-05, 9.070800000000184e-05, 9.081899999999893e-05, 9.059700000000476e-05, 9.069500000000175e-05, 9.061099999999739e-05, 9.026399999999962e-05, 9.11670000000031e-05, 9.051399999999987e-05, 9.040300000000279e-05, 9.102700000000047e-05, 9.098600000000123e-05, 9.126400000000062e-05, 9.055499999999911e-05, 9.113899999999703e-05, 9.031899999999843e-05, 9.102799999999994e-05, 9.03199999999979e-05, 9.06529999999961e-05, 9.11529999999966e-05]</msg>
<status status="PASS" starttime="20201112 12:28:05.335" endtime="20201112 12:28:05.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.322" endtime="20201112 12:28:05.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.347" endtime="20201112 12:28:05.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.356" endtime="20201112 12:28:05.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.351" endtime="20201112 12:28:05.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.343" endtime="20201112 12:28:05.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.836" endtime="20201112 12:28:05.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.834" endtime="20201112 12:28:05.382"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.404" endtime="20201112 12:28:05.424"></status>
</kw>
<msg timestamp="20201112 12:28:05.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.401" endtime="20201112 12:28:05.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.427" endtime="20201112 12:28:05.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.433" endtime="20201112 12:28:05.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.394" endtime="20201112 12:28:05.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.388" endtime="20201112 12:28:05.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.457" endtime="20201112 12:28:05.792"></status>
</kw>
<msg timestamp="20201112 12:28:05.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040307903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040399319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.453" endtime="20201112 12:28:05.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040307903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040399319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.801" endtime="20201112 12:28:05.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.820" endtime="20201112 12:28:05.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.446" endtime="20201112 12:28:05.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.442" endtime="20201112 12:28:05.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.838" level="INFO">${RESULT} = [{'time': 0.040399319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.141600000000388e-05, 'source_diff': 9.141600000000388e-05}, {'time': 0.040518583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:05.829" endtime="20201112 12:28:05.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:05.869" level="INFO">${ACCURACY} = {'time': [0.040399319, 0.040518583, 0.040637861, 0.040756139, 0.040877389, 0.041000667, 0.041120944, 0.041242208, 0.041365458, 0.041485722, 0.041604, 0.041726236, 0.041847486, 0.04196775, 0.042089986,...</msg>
<status status="PASS" starttime="20201112 12:28:05.840" endtime="20201112 12:28:05.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.880" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:28:05.878" endtime="20201112 12:28:05.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.886" level="INFO">VALUE: [9.141600000000388e-05, 9.152699999999403e-05, 9.158299999999925e-05, 9.1332999999999e-05, 9.140299999999685e-05, 9.159799999999829e-05, 9.192999999999701e-05, 9.21800000000042e-05, 9.184699999999907e-05, 9.15000000000013e-05, 9.136100000000508e-05, 9.197200000000266e-05, 9.181899999999993e-05, 9.143099999999599e-05, 9.193000000000395e-05, 9.141600000000388e-05, 9.222199999999597e-05, 9.156899999999968e-05, 9.154200000000001e-05, 9.140299999999685e-05, 9.162499999999796e-05, 9.20000000000018e-05, 9.219499999999631e-05, 9.168100000000318e-05, 9.173599999999504e-05, 9.1945000000003e-05, 9.183399999999897e-05, 9.211099999999889e-05, 9.202800000000094e-05, 9.172200000000241e-05, 9.219500000000325e-05, 9.130599999999933e-05, 9.190299999999735e-05, 9.180500000000036e-05, 9.159699999999882e-05, 9.222199999999597e-05, 9.129199999999976e-05, 9.159699999999882e-05, 9.192999999999701e-05, 9.134700000000551e-05, 9.205500000000061e-05, 9.21659999999977e-05, 9.218100000000368e-05, 9.158299999999925e-05, 9.175000000000155e-05, 9.190299999999735e-05, 9.20000000000018e-05, 9.175000000000155e-05, 9.143099999999599e-05, 9.197200000000266e-05]</msg>
<status status="PASS" starttime="20201112 12:28:05.883" endtime="20201112 12:28:05.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.871" endtime="20201112 12:28:05.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.896" endtime="20201112 12:28:05.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.905" endtime="20201112 12:28:05.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.900" endtime="20201112 12:28:05.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.892" endtime="20201112 12:28:05.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.384" endtime="20201112 12:28:05.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.382" endtime="20201112 12:28:05.931"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.953" endtime="20201112 12:28:05.973"></status>
</kw>
<msg timestamp="20201112 12:28:05.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.950" endtime="20201112 12:28:05.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.976" endtime="20201112 12:28:05.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.982" endtime="20201112 12:28:05.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.943" endtime="20201112 12:28:05.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.937" endtime="20201112 12:28:05.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.006" endtime="20201112 12:28:06.341"></status>
</kw>
<msg timestamp="20201112 12:28:06.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040171431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040264056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.003" endtime="20201112 12:28:06.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040171431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040264056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.350" endtime="20201112 12:28:06.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.369" endtime="20201112 12:28:06.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.995" endtime="20201112 12:28:06.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.990" endtime="20201112 12:28:06.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.387" level="INFO">${RESULT} = [{'time': 0.040264056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.262499999999896e-05, 'source_diff': 9.262499999999896e-05}, {'time': 0.040389333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:06.378" endtime="20201112 12:28:06.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:06.418" level="INFO">${ACCURACY} = {'time': [0.040264056, 0.040389333, 0.040508583, 0.040631875, 0.040752111, 0.040870375, 0.040995639, 0.041117917, 0.041242194, 0.041360458, 0.041484722, 0.041607014, 0.041728264, 0.041847514, 0.041966...</msg>
<status status="PASS" starttime="20201112 12:28:06.389" endtime="20201112 12:28:06.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.429" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:28:06.427" endtime="20201112 12:28:06.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.434" level="INFO">VALUE: [9.262499999999896e-05, 9.317999999999826e-05, 9.258300000000025e-05, 9.279200000000126e-05, 9.311099999999989e-05, 9.241699999999742e-05, 9.313899999999903e-05, 9.261099999999939e-05, 9.275000000000255e-05, 9.263900000000547e-05, 9.281900000000093e-05, 9.245799999999665e-05, 9.277800000000169e-05, 9.290300000000529e-05, 9.317999999999826e-05, 9.287499999999921e-05, 9.227699999999478e-05, 9.240300000000479e-05, 9.317999999999826e-05, 9.231900000000043e-05, 9.266699999999767e-05, 9.230600000000033e-05, 9.236099999999914e-05, 9.255500000000111e-05, 9.252800000000144e-05, 9.291599999999844e-05, 9.273600000000298e-05, 9.291700000000486e-05, 9.301400000000237e-05, 9.273599999999604e-05, 9.294499999999706e-05, 9.257000000000015e-05, 9.284700000000007e-05, 9.322199999999697e-05, 9.283399999999997e-05, 9.281900000000093e-05, 9.297199999999672e-05, 9.30000000000028e-05, 9.237499999999871e-05, 9.242999999999751e-05, 9.257000000000015e-05, 9.252800000000144e-05, 9.234699999999957e-05, 9.318100000000468e-05, 9.305599999999414e-05, 9.263899999999853e-05, 9.255600000000058e-05, 9.319499999999731e-05, 9.307000000000065e-05, 9.244400000000402e-05]</msg>
<status status="PASS" starttime="20201112 12:28:06.431" endtime="20201112 12:28:06.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.420" endtime="20201112 12:28:06.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.444" endtime="20201112 12:28:06.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:06.454" endtime="20201112 12:28:06.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.450" endtime="20201112 12:28:06.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.440" endtime="20201112 12:28:06.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.933" endtime="20201112 12:28:06.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.931" endtime="20201112 12:28:06.480"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.504" endtime="20201112 12:28:06.524"></status>
</kw>
<msg timestamp="20201112 12:28:06.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.500" endtime="20201112 12:28:06.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.527" endtime="20201112 12:28:06.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.533" endtime="20201112 12:28:06.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.493" endtime="20201112 12:28:06.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.486" endtime="20201112 12:28:06.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.556" endtime="20201112 12:28:06.891"></status>
</kw>
<msg timestamp="20201112 12:28:06.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041187472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041281569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.553" endtime="20201112 12:28:06.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041187472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041281569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.900" endtime="20201112 12:28:06.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.919" endtime="20201112 12:28:06.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.546" endtime="20201112 12:28:06.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.541" endtime="20201112 12:28:06.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.937" level="INFO">${RESULT} = [{'time': 0.041281569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.409699999999438e-05, 'source_diff': 9.409699999999438e-05}, {'time': 0.041402819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:06.928" endtime="20201112 12:28:06.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:06.968" level="INFO">${ACCURACY} = {'time': [0.041281569, 0.041402819, 0.041526097, 0.041647347, 0.041769639, 0.041889917, 0.042015264, 0.0421345, 0.04225875, 0.042382, 0.042504292, 0.042627514, 0.042747806, 0.042869069, 0.042993347, 0...</msg>
<status status="PASS" starttime="20201112 12:28:06.939" endtime="20201112 12:28:06.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.979" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:28:06.977" endtime="20201112 12:28:06.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.984" level="INFO">VALUE: [9.409699999999438e-05, 9.379100000000279e-05, 9.423599999999754e-05, 9.386100000000064e-05, 9.388899999999978e-05, 9.412500000000046e-05, 9.406999999999471e-05, 9.334700000000057e-05, 9.340299999999885e-05, 9.377800000000269e-05, 9.363899999999953e-05, 9.345799999999765e-05, 9.354200000000201e-05, 9.340199999999937e-05, 9.426400000000362e-05, 9.422199999999797e-05, 9.399999999999686e-05, 9.425000000000405e-05, 9.388899999999978e-05, 9.361100000000039e-05, 9.326399999999568e-05, 9.356900000000168e-05, 9.375000000000355e-05, 9.418099999999874e-05, 9.363900000000647e-05, 9.340199999999937e-05, 9.383400000000097e-05, 9.37079999999979e-05, 9.390299999999935e-05, 9.424999999999711e-05, 9.372199999999747e-05, 9.356999999999421e-05, 9.391699999999892e-05, 9.38059999999949e-05, 9.395899999999763e-05, 9.366699999999867e-05, 9.33059999999944e-05, 9.413900000000003e-05, 9.337499999999971e-05, 9.367999999999876e-05, 9.338899999999928e-05, 9.388899999999978e-05, 9.334800000000004e-05, 9.358300000000125e-05, 9.361199999999986e-05, 9.356900000000168e-05, 9.326399999999568e-05, 9.359700000000082e-05, 9.347199999999722e-05, 9.397200000000466e-05]</msg>
<status status="PASS" starttime="20201112 12:28:06.981" endtime="20201112 12:28:06.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.970" endtime="20201112 12:28:06.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.994" endtime="20201112 12:28:06.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:07.002" endtime="20201112 12:28:07.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.998" endtime="20201112 12:28:07.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.989" endtime="20201112 12:28:07.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.482" endtime="20201112 12:28:07.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.481" endtime="20201112 12:28:07.032"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.054" endtime="20201112 12:28:07.074"></status>
</kw>
<msg timestamp="20201112 12:28:07.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.051" endtime="20201112 12:28:07.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.077" endtime="20201112 12:28:07.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.083" endtime="20201112 12:28:07.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.044" endtime="20201112 12:28:07.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.038" endtime="20201112 12:28:07.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.107" endtime="20201112 12:28:07.441"></status>
</kw>
<msg timestamp="20201112 12:28:07.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040239153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040334125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.103" endtime="20201112 12:28:07.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040239153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040334125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.450" endtime="20201112 12:28:07.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.469" endtime="20201112 12:28:07.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.096" endtime="20201112 12:28:07.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.092" endtime="20201112 12:28:07.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.486" level="INFO">${RESULT} = [{'time': 0.040334125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.497199999999872e-05, 'source_diff': 9.497199999999872e-05}, {'time': 0.040456361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:07.477" endtime="20201112 12:28:07.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:07.517" level="INFO">${ACCURACY} = {'time': [0.040334125, 0.040456361, 0.040580611, 0.040706875, 0.040833125, 0.040956361, 0.041077597, 0.041200847, 0.041327028, 0.04145325, 0.041575444, 0.041696653, 0.041820875, 0.041944069, 0.0420692...</msg>
<status status="PASS" starttime="20201112 12:28:07.488" endtime="20201112 12:28:07.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.529" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:28:07.526" endtime="20201112 12:28:07.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.535" level="INFO">VALUE: [9.497199999999872e-05, 9.486100000000164e-05, 9.487500000000121e-05, 9.490299999999341e-05, 9.48609999999947e-05, 9.491699999999992e-05, 9.430500000000286e-05, 9.50409999999971e-05, 9.484700000000207e-05, 9.441699999999942e-05, 9.50000000000048e-05, 9.422199999999797e-05, 9.481900000000293e-05, 9.506900000000318e-05, 9.480600000000283e-05, 9.491600000000044e-05, 9.48330000000025e-05, 9.46660000000002e-05, 9.5027999999997e-05, 9.490300000000035e-05, 9.513900000000103e-05, 9.508300000000275e-05, 9.449999999999736e-05, 9.516700000000017e-05, 9.431899999999549e-05, 9.513900000000103e-05, 9.429099999999635e-05, 9.454200000000301e-05, 9.513800000000155e-05, 9.448699999999727e-05, 9.508300000000275e-05, 9.484700000000207e-05, 9.44859999999978e-05, 9.487500000000121e-05, 9.493000000000001e-05, 9.476299999999771e-05, 9.474999999999761e-05, 9.51530000000006e-05, 9.509700000000232e-05, 9.46530000000001e-05, 9.467999999999976e-05, 9.425000000000405e-05, 9.505500000000361e-05, 9.445799999999865e-05, 9.452800000000344e-05, 9.433400000000147e-05, 9.508400000000222e-05, 9.498600000000523e-05, 9.447199999999822e-05, 9.522300000000539e-05]</msg>
<status status="PASS" starttime="20201112 12:28:07.531" endtime="20201112 12:28:07.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.519" endtime="20201112 12:28:07.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.545" endtime="20201112 12:28:07.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:07.554" endtime="20201112 12:28:07.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.549" endtime="20201112 12:28:07.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.540" endtime="20201112 12:28:07.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.034" endtime="20201112 12:28:07.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.032" endtime="20201112 12:28:07.580"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.604" endtime="20201112 12:28:07.624"></status>
</kw>
<msg timestamp="20201112 12:28:07.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.601" endtime="20201112 12:28:07.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.627" endtime="20201112 12:28:07.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.633" endtime="20201112 12:28:07.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.593" endtime="20201112 12:28:07.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.586" endtime="20201112 12:28:07.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.657" endtime="20201112 12:28:07.991"></status>
</kw>
<msg timestamp="20201112 12:28:07.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041869111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041965139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.653" endtime="20201112 12:28:07.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041869111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041965139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.001" endtime="20201112 12:28:08.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.020" endtime="20201112 12:28:08.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.646" endtime="20201112 12:28:08.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.642" endtime="20201112 12:28:08.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.037" level="INFO">${RESULT} = [{'time': 0.041965139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.6027999999998e-05, 'source_diff': 9.6027999999998e-05}, {'time': 0.042089361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:28:08.028" endtime="20201112 12:28:08.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:08.068" level="INFO">${ACCURACY} = {'time': [0.041965139, 0.042089361, 0.042212611, 0.042335847, 0.042458083, 0.042584403, 0.042710556, 0.042835792, 0.042963028, 0.043090278, 0.043216542, 0.043341806, 0.043468028, 0.043592292, 0.043719...</msg>
<status status="PASS" starttime="20201112 12:28:08.039" endtime="20201112 12:28:08.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.079" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:28:08.077" endtime="20201112 12:28:08.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.084" level="INFO">VALUE: [9.6027999999998e-05, 9.540300000000085e-05, 9.587499999999527e-05, 9.590300000000135e-05, 9.577699999999828e-05, 9.605599999999714e-05, 9.538899999999434e-05, 9.565299999999416e-05, 9.566700000000067e-05, 9.545900000000607e-05, 9.529199999999682e-05, 9.565299999999416e-05, 9.561099999999545e-05, 9.618100000000074e-05, 9.524999999999811e-05, 9.568000000000076e-05, 9.581900000000393e-05, 9.572299999999895e-05, 9.618100000000074e-05, 9.536100000000214e-05, 9.619500000000031e-05, 9.622199999999997e-05, 9.577800000000469e-05, 9.56660000000012e-05, 9.602800000000494e-05, 9.543099999999999e-05, 9.611200000000236e-05, 9.540300000000085e-05, 9.529099999999735e-05, 9.540300000000085e-05, 9.579099999999785e-05, 9.58059999999969e-05, 9.558400000000272e-05, 9.577799999999775e-05, 9.6027999999998e-05, 9.529199999999682e-05, 9.561099999999545e-05, 9.556999999999621e-05, 9.537500000000171e-05, 9.616700000000117e-05, 9.612499999999552e-05, 9.60000000000058e-05, 9.581900000000393e-05, 9.522199999999897e-05, 9.588900000000178e-05, 9.58330000000035e-05, 9.56530000000011e-05, 9.559700000000282e-05, 9.612500000000246e-05, 9.530600000000333e-05]</msg>
<status status="PASS" starttime="20201112 12:28:08.081" endtime="20201112 12:28:08.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.070" endtime="20201112 12:28:08.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.094" endtime="20201112 12:28:08.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.102" endtime="20201112 12:28:08.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.098" endtime="20201112 12:28:08.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.090" endtime="20201112 12:28:08.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.582" endtime="20201112 12:28:08.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.580" endtime="20201112 12:28:08.128"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.151" endtime="20201112 12:28:08.171"></status>
</kw>
<msg timestamp="20201112 12:28:08.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.147" endtime="20201112 12:28:08.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.174" endtime="20201112 12:28:08.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.180" endtime="20201112 12:28:08.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.140" endtime="20201112 12:28:08.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.134" endtime="20201112 12:28:08.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.205" endtime="20201112 12:28:08.541"></status>
</kw>
<msg timestamp="20201112 12:28:08.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040312111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.202" endtime="20201112 12:28:08.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040312111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.550" endtime="20201112 12:28:08.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.570" endtime="20201112 12:28:08.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.195" endtime="20201112 12:28:08.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.190" endtime="20201112 12:28:08.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.588" level="INFO">${RESULT} = [{'time': 0.040409125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.701399999999943e-05, 'source_diff': 9.701399999999943e-05}, {'time': 0.040536444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:08.579" endtime="20201112 12:28:08.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:08.619" level="INFO">${ACCURACY} = {'time': [0.040409125, 0.040536444, 0.040659722, 0.040787972, 0.040914264, 0.041042542, 0.041169806, 0.041299097, 0.041426347, 0.041553611, 0.041679889, 0.041808167, 0.041934389, 0.042060667, 0.042185...</msg>
<status status="PASS" starttime="20201112 12:28:08.590" endtime="20201112 12:28:08.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.630" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:28:08.628" endtime="20201112 12:28:08.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.636" level="INFO">VALUE: [9.701399999999943e-05, 9.730499999999892e-05, 9.643000000000151e-05, 9.658299999999731e-05, 9.712499999999652e-05, 9.7027999999999e-05, 9.658400000000372e-05, 9.708299999999781e-05, 9.713900000000303e-05, 9.654199999999807e-05, 9.687499999999627e-05, 9.68059999999979e-05, 9.695800000000115e-05, 9.704200000000551e-05, 9.637500000000271e-05, 9.67080000000009e-05, 9.698699999999977e-05, 9.674999999999961e-05, 9.659699999999688e-05, 9.645800000000065e-05, 9.670900000000038e-05, 9.693100000000149e-05, 9.655500000000511e-05, 9.72080000000014e-05, 9.697200000000072e-05, 9.631899999999749e-05, 9.676399999999918e-05, 9.662499999999602e-05, 9.636100000000314e-05, 9.651399999999893e-05, 9.7027999999999e-05, 9.709699999999738e-05, 9.659700000000382e-05, 9.690200000000287e-05, 9.63609999999962e-05, 9.638899999999534e-05, 9.690299999999541e-05, 9.684699999999713e-05, 9.666700000000167e-05, 9.706999999999771e-05, 9.652800000000544e-05, 9.633299999999706e-05, 9.644400000000108e-05, 9.680500000000536e-05, 9.687499999999627e-05, 9.705499999999867e-05, 9.631899999999749e-05, 9.719400000000183e-05, 9.707000000000465e-05, 9.719400000000183e-05]</msg>
<status status="PASS" starttime="20201112 12:28:08.633" endtime="20201112 12:28:08.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.621" endtime="20201112 12:28:08.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.645" endtime="20201112 12:28:08.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.654" endtime="20201112 12:28:08.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.649" endtime="20201112 12:28:08.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.641" endtime="20201112 12:28:08.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.130" endtime="20201112 12:28:08.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.129" endtime="20201112 12:28:08.680"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.702" endtime="20201112 12:28:08.722"></status>
</kw>
<msg timestamp="20201112 12:28:08.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.699" endtime="20201112 12:28:08.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.725" endtime="20201112 12:28:08.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.732" endtime="20201112 12:28:08.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.692" endtime="20201112 12:28:08.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.686" endtime="20201112 12:28:08.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.757" endtime="20201112 12:28:09.091"></status>
</kw>
<msg timestamp="20201112 12:28:09.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040160278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040257694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.753" endtime="20201112 12:28:09.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040160278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040257694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.101" endtime="20201112 12:28:09.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.120" endtime="20201112 12:28:09.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.745" endtime="20201112 12:28:09.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.740" endtime="20201112 12:28:09.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.138" level="INFO">${RESULT} = [{'time': 0.040257694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.7415999999996e-05, 'source_diff': 9.7415999999996e-05}, {'time': 0.040382931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:28:09.128" endtime="20201112 12:28:09.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:09.169" level="INFO">${ACCURACY} = {'time': [0.040257694, 0.040382931, 0.040508208, 0.040635472, 0.040764778, 0.040889042, 0.04101325, 0.041139514, 0.04126675, 0.041391, 0.041517264, 0.041642514, 0.041767778, 0.041893, 0.042018292, 0.0...</msg>
<status status="PASS" starttime="20201112 12:28:09.140" endtime="20201112 12:28:09.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.180" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:28:09.178" endtime="20201112 12:28:09.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.185" level="INFO">VALUE: [9.7415999999996e-05, 9.769499999999487e-05, 9.738899999999634e-05, 9.781899999999899e-05, 9.759700000000482e-05, 9.787499999999727e-05, 9.763900000000353e-05, 9.775000000000061e-05, 9.727799999999925e-05, 9.73609999999972e-05, 9.73609999999972e-05, 9.800000000000086e-05, 9.776400000000018e-05, 9.808299999999881e-05, 9.751399999999993e-05, 9.74860000000008e-05, 9.756999999999821e-05, 9.729099999999935e-05, 9.800000000000086e-05, 9.795900000000163e-05, 9.772200000000147e-05, 9.806899999999924e-05, 9.770799999999497e-05, 9.747200000000122e-05, 9.731899999999849e-05, 9.788899999999684e-05, 9.767999999999583e-05, 9.763900000000353e-05, 9.744499999999462e-05, 9.811099999999795e-05, 9.768000000000276e-05, 9.788899999999684e-05, 9.744399999999515e-05, 9.815299999999666e-05, 9.80139999999935e-05, 9.772199999999454e-05, 9.816700000000317e-05, 9.790299999999641e-05, 9.793000000000301e-05, 9.818100000000274e-05, 9.813899999999709e-05, 9.784699999999813e-05, 9.766700000000267e-05, 9.748599999999386e-05, 9.791699999999598e-05, 9.745800000000165e-05, 9.73609999999972e-05, 9.727799999999925e-05, 9.830499999999992e-05, 9.769400000000233e-05]</msg>
<status status="PASS" starttime="20201112 12:28:09.182" endtime="20201112 12:28:09.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.171" endtime="20201112 12:28:09.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.195" endtime="20201112 12:28:09.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:09.203" endtime="20201112 12:28:09.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.199" endtime="20201112 12:28:09.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.190" endtime="20201112 12:28:09.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.682" endtime="20201112 12:28:09.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.681" endtime="20201112 12:28:09.229"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.253" endtime="20201112 12:28:09.273"></status>
</kw>
<msg timestamp="20201112 12:28:09.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.250" endtime="20201112 12:28:09.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.276" endtime="20201112 12:28:09.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.283" endtime="20201112 12:28:09.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.243" endtime="20201112 12:28:09.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.235" endtime="20201112 12:28:09.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.308" endtime="20201112 12:28:09.669"></status>
</kw>
<msg timestamp="20201112 12:28:09.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041602847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041701569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.304" endtime="20201112 12:28:09.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041602847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041701569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.679" endtime="20201112 12:28:09.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.698" endtime="20201112 12:28:09.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.295" endtime="20201112 12:28:09.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.291" endtime="20201112 12:28:09.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.716" level="INFO">${RESULT} = [{'time': 0.041701569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.872200000000247e-05, 'source_diff': 9.872200000000247e-05}, {'time': 0.041830806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:09.706" endtime="20201112 12:28:09.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:09.748" level="INFO">${ACCURACY} = {'time': [0.041701569, 0.041830806, 0.041956069, 0.042082333, 0.042207597, 0.042337903, 0.042464208, 0.042592472, 0.04271675, 0.042843028, 0.042970306, 0.043095611, 0.043224861, 0.043354153, 0.0434834...</msg>
<status status="PASS" starttime="20201112 12:28:09.718" endtime="20201112 12:28:09.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.759" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:28:09.756" endtime="20201112 12:28:09.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.764" level="INFO">VALUE: [9.872200000000247e-05, 9.904200000000057e-05, 9.847199999999529e-05, 9.922200000000297e-05, 9.873600000000204e-05, 9.918100000000374e-05, 9.894400000000358e-05, 9.867999999999683e-05, 9.844399999999615e-05, 9.908399999999928e-05, 9.844500000000256e-05, 9.833299999999906e-05, 9.905500000000067e-05, 9.906999999999971e-05, 9.906900000000024e-05, 9.85410000000006e-05, 9.904200000000057e-05, 9.87080000000029e-05, 9.862499999999802e-05, 9.895799999999622e-05, 9.838899999999734e-05, 9.833299999999906e-05, 9.84860000000018e-05, 9.863799999999812e-05, 9.855500000000017e-05, 9.927799999999432e-05, 9.890299999999741e-05, 9.890300000000435e-05, 9.838899999999734e-05, 9.859699999999888e-05, 9.916700000000417e-05, 9.833399999999853e-05, 9.837500000000471e-05, 9.837499999999777e-05, 9.904200000000057e-05, 9.86530000000041e-05, 9.873600000000204e-05, 9.900000000000186e-05, 9.826400000000068e-05, 9.843100000000299e-05, 9.83059999999994e-05, 9.90410000000011e-05, 9.880500000000042e-05, 9.923600000000254e-05, 9.911099999999895e-05, 9.862499999999802e-05, 9.862499999999802e-05, 9.874999999999468e-05, 9.913900000000503e-05, 9.87359999999951e-05]</msg>
<status status="PASS" starttime="20201112 12:28:09.761" endtime="20201112 12:28:09.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.749" endtime="20201112 12:28:09.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.774" endtime="20201112 12:28:09.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:09.782" endtime="20201112 12:28:09.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.778" endtime="20201112 12:28:09.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.769" endtime="20201112 12:28:09.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.231" endtime="20201112 12:28:09.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.230" endtime="20201112 12:28:09.809"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.832" endtime="20201112 12:28:09.855"></status>
</kw>
<msg timestamp="20201112 12:28:09.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.828" endtime="20201112 12:28:09.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.859" endtime="20201112 12:28:09.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.865" endtime="20201112 12:28:09.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.821" endtime="20201112 12:28:09.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.815" endtime="20201112 12:28:09.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.889" endtime="20201112 12:28:10.246"></status>
</kw>
<msg timestamp="20201112 12:28:10.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041176097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041275972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.886" endtime="20201112 12:28:10.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041176097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041275972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.256" endtime="20201112 12:28:10.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.275" endtime="20201112 12:28:10.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.878" endtime="20201112 12:28:10.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.873" endtime="20201112 12:28:10.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.293" level="INFO">${RESULT} = [{'time': 0.041275972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.987499999999927e-05, 'source_diff': 9.987499999999927e-05}, {'time': 0.041404236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:10.284" endtime="20201112 12:28:10.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:10.324" level="INFO">${ACCURACY} = {'time': [0.041275972, 0.041404236, 0.041530528, 0.041660819, 0.041786056, 0.041912306, 0.042039597, 0.042169917, 0.042299111, 0.042427389, 0.042558639, 0.042686889, 0.042814153, 0.042946417, 0.043076...</msg>
<status status="PASS" starttime="20201112 12:28:10.295" endtime="20201112 12:28:10.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.336" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:28:10.333" endtime="20201112 12:28:10.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.341" level="INFO">VALUE: [9.987499999999927e-05, 9.948599999999586e-05, 9.954199999999414e-05, 9.990199999999894e-05, 9.943100000000399e-05, 9.931999999999996e-05, 9.962499999999902e-05, 9.954200000000107e-05, 9.933300000000006e-05, 0.00010009700000000038, 9.984700000000013e-05, 9.988899999999884e-05, 9.997200000000372e-05, 0.00010016699999999823, 9.93609999999992e-05, 9.972199999999654e-05, 9.959699999999988e-05, 0.00010011099999999995, 9.962499999999902e-05, 9.933300000000006e-05, 9.976400000000218e-05, 9.966699999999773e-05, 9.943100000000399e-05, 9.973600000000304e-05, 0.00010029200000000182, 0.00010008300000000081, 9.936100000000614e-05, 9.926400000000168e-05, 0.00010012499999999952, 9.951400000000193e-05, 9.958300000000031e-05, 0.0001002080000000044, 9.950000000000236e-05, 0.00010024999999999618, 9.930500000000092e-05, 9.980500000000142e-05, 0.00010029100000000235, 9.988899999999884e-05, 9.965299999999816e-05, 9.969500000000381e-05, 9.963899999999859e-05, 9.944399999999715e-05, 9.961099999999945e-05, 9.950000000000236e-05, 9.966699999999773e-05, 0.00010007000000000071, 9.93609999999992e-05, 9.959699999999988e-05, 9.983300000000056e-05, 9.982000000000046e-05]</msg>
<status status="PASS" starttime="20201112 12:28:10.338" endtime="20201112 12:28:10.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.326" endtime="20201112 12:28:10.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.351" endtime="20201112 12:28:10.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.359" endtime="20201112 12:28:10.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.355" endtime="20201112 12:28:10.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.346" endtime="20201112 12:28:10.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.811" endtime="20201112 12:28:10.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.810" endtime="20201112 12:28:10.386"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.409" endtime="20201112 12:28:10.432"></status>
</kw>
<msg timestamp="20201112 12:28:10.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.405" endtime="20201112 12:28:10.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.436" endtime="20201112 12:28:10.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.442" endtime="20201112 12:28:10.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.398" endtime="20201112 12:28:10.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.392" endtime="20201112 12:28:10.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.466" endtime="20201112 12:28:10.822"></status>
</kw>
<msg timestamp="20201112 12:28:10.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041144431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041245208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.463" endtime="20201112 12:28:10.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041144431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041245208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.831" endtime="20201112 12:28:10.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.850" endtime="20201112 12:28:10.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.455" endtime="20201112 12:28:10.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.450" endtime="20201112 12:28:10.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.869" level="INFO">${RESULT} = [{'time': 0.041245208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010077699999999634, 'source_diff': 0.00010077699999999634}, {'time': 0.041376514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:10.860" endtime="20201112 12:28:10.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:10.900" level="INFO">${ACCURACY} = {'time': [0.041245208, 0.041376514, 0.041505792, 0.041632069, 0.041761347, 0.041888625, 0.042019917, 0.042152236, 0.042282472, 0.04241275, 0.042543, 0.042674306, 0.042806583, 0.042939875, 0.043067153,...</msg>
<status status="PASS" starttime="20201112 12:28:10.872" endtime="20201112 12:28:10.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.912" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:28:10.909" endtime="20201112 12:28:10.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.917" level="INFO">VALUE: [0.00010077699999999634, 0.00010059700000000088, 0.00010069499999999787, 0.000100415999999999, 0.00010115299999999966, 0.00010079199999999539, 0.00010081999999999453, 0.00010030500000000192, 0.00010040299999999891, 0.00010102799999999607, 0.00010112500000000052, 0.00010090299999999941, 0.00010062500000000002, 0.0001011939999999989, 0.00010113900000000009, 0.0001010559999999952, 0.00010107000000000171, 0.00010126400000000368, 0.00010033300000000106, 0.0001004860000000038, 0.00010124999999999718, 0.00010027800000000225, 0.00010106999999999478, 0.00010040300000000585, 0.00010083300000000156, 0.00010052799999999557, 0.00010079200000000232, 0.0001003610000000002, 0.00010037499999999977, 0.00010079199999999539, 0.00010040299999999891, 0.0001006530000000061, 0.0001004860000000038, 0.00010116699999999923, 0.00010042999999999858, 0.00010099999999999693, 0.00010062500000000002, 0.00010100000000000386, 0.00010112499999999358, 0.00010095800000000515, 0.00010116699999999923, 0.00010048599999999686, 0.00010104199999999564, 0.00010104200000000257, 0.00010037499999999977, 0.00010072199999999754, 0.00010033299999999412, 0.00010115299999999966, 0.00010082000000000146, 0.00010090199999999994]</msg>
<status status="PASS" starttime="20201112 12:28:10.914" endtime="20201112 12:28:10.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.902" endtime="20201112 12:28:10.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.927" endtime="20201112 12:28:10.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.935" endtime="20201112 12:28:10.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.931" endtime="20201112 12:28:10.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.922" endtime="20201112 12:28:10.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.388" endtime="20201112 12:28:10.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.387" endtime="20201112 12:28:10.962"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.985" endtime="20201112 12:28:11.009"></status>
</kw>
<msg timestamp="20201112 12:28:11.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.981" endtime="20201112 12:28:11.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.012" endtime="20201112 12:28:11.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.019" endtime="20201112 12:28:11.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.974" endtime="20201112 12:28:11.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.968" endtime="20201112 12:28:11.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.042" endtime="20201112 12:28:11.397"></status>
</kw>
<msg timestamp="20201112 12:28:11.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041526, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041627958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:11.039" endtime="20201112 12:28:11.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041526, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041627958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:11.407" endtime="20201112 12:28:11.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.426" endtime="20201112 12:28:11.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.032" endtime="20201112 12:28:11.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.027" endtime="20201112 12:28:11.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:11.445" level="INFO">${RESULT} = [{'time': 0.041627958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010195799999999922, 'source_diff': 0.00010195799999999922}, {'time': 0.041759264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:11.436" endtime="20201112 12:28:11.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:11.476" level="INFO">${ACCURACY} = {'time': [0.041627958, 0.041759264, 0.041889528, 0.042020819, 0.042154153, 0.042288417, 0.042421694, 0.042550972, 0.042678278, 0.042806528, 0.042935792, 0.043066111, 0.043196347, 0.043323625, 0.043455...</msg>
<status status="PASS" starttime="20201112 12:28:11.447" endtime="20201112 12:28:11.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.487" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:28:11.485" endtime="20201112 12:28:11.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.492" level="INFO">VALUE: [0.00010195799999999922, 0.00010209699999999544, 0.00010211100000000195, 0.00010199999999999793, 0.00010155600000000264, 0.00010216700000000023, 0.0001015410000000036, 0.00010166600000000026, 0.00010149999999999743, 0.00010151400000000393, 0.00010132000000000196, 0.00010216700000000023, 0.00010183300000000256, 0.00010147199999999829, 0.00010226399999999775, 0.00010141699999999948, 0.00010137499999999383, 0.00010172199999999854, 0.0001020139999999975, 0.00010167999999999983, 0.00010127800000000325, 0.00010224999999999818, 0.0001021939999999999, 0.0001020559999999962, 0.00010190300000000041, 0.00010179200000000332, 0.00010144499999999862, 0.00010213899999999415, 0.00010148599999999786, 0.00010224999999999818, 0.00010129200000000282, 0.00010169500000000581, 0.00010188900000000084, 0.00010130499999999598, 0.00010222199999999904, 0.00010190300000000041, 0.00010222199999999904, 0.00010127800000000325, 0.00010143099999999905, 0.00010140200000000044, 0.00010134699999999469, 0.00010133400000000153, 0.00010186200000000117, 0.00010198599999999836, 0.00010138900000000034, 0.00010150000000000436, 0.00010195899999999869, 0.00010224999999999818, 0.00010129199999999589, 0.00010208400000000228]</msg>
<status status="PASS" starttime="20201112 12:28:11.489" endtime="20201112 12:28:11.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.478" endtime="20201112 12:28:11.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.506" endtime="20201112 12:28:11.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:11.515" endtime="20201112 12:28:11.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.510" endtime="20201112 12:28:11.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.502" endtime="20201112 12:28:11.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.964" endtime="20201112 12:28:11.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.962" endtime="20201112 12:28:11.541"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.564" endtime="20201112 12:28:11.588"></status>
</kw>
<msg timestamp="20201112 12:28:11.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.561" endtime="20201112 12:28:11.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.591" endtime="20201112 12:28:11.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.598" endtime="20201112 12:28:11.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.553" endtime="20201112 12:28:11.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.548" endtime="20201112 12:28:11.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.621" endtime="20201112 12:28:11.977"></status>
</kw>
<msg timestamp="20201112 12:28:11.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040950569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041053069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.618" endtime="20201112 12:28:11.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040950569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041053069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.986" endtime="20201112 12:28:12.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.005" endtime="20201112 12:28:12.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.611" endtime="20201112 12:28:12.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.606" endtime="20201112 12:28:12.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.026" level="INFO">${RESULT} = [{'time': 0.041053069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010249999999999843, 'source_diff': 0.00010249999999999843}, {'time': 0.041187389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:12.017" endtime="20201112 12:28:12.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:12.057" level="INFO">${ACCURACY} = {'time': [0.041053069, 0.041187389, 0.041322583, 0.041453917, 0.041586111, 0.041720375, 0.041849639, 0.041983903, 0.042113167, 0.042246444, 0.042376722, 0.042509986, 0.042641208, 0.042773486, 0.042905...</msg>
<status status="PASS" starttime="20201112 12:28:12.028" endtime="20201112 12:28:12.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.068" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:28:12.066" endtime="20201112 12:28:12.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.074" level="INFO">VALUE: [0.00010249999999999843, 0.00010274999999999868, 0.00010320800000000047, 0.00010241700000000048, 0.00010290300000000141, 0.00010315299999999472, 0.00010238900000000134, 0.00010229200000000382, 0.00010237500000000177, 0.00010249999999999843, 0.00010247199999999929, 0.00010249999999999843, 0.0001029160000000015, 0.00010293000000000108, 0.00010254199999999714, 0.00010247199999999929, 0.00010320800000000047, 0.00010311099999999601, 0.0001023480000000021, 0.00010299999999999893, 0.00010308299999999687, 0.00010299999999999893, 0.00010298599999999936, 0.00010245899999999919, 0.00010261200000000192, 0.00010249999999999843, 0.00010248599999999886, 0.00010309699999999644, 0.00010324999999999918, 0.00010312499999999558, 0.0001027359999999991, 0.00010306900000000424, 0.00010240300000000091, 0.00010258299999999637, 0.0001025280000000045, 0.00010277699999999834, 0.00010274999999999868, 0.00010279199999999739, 0.00010324999999999918, 0.00010304199999999764, 0.00010319399999999396, 0.00010279200000000432, 0.0001027359999999991, 0.00010268000000000083, 0.00010240300000000091, 0.00010324999999999918, 0.00010234699999999569, 0.00010290300000000141, 0.00010232000000000296, 0.00010257000000000321]</msg>
<status status="PASS" starttime="20201112 12:28:12.071" endtime="20201112 12:28:12.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.059" endtime="20201112 12:28:12.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.084" endtime="20201112 12:28:12.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:12.092" endtime="20201112 12:28:12.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.088" endtime="20201112 12:28:12.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.079" endtime="20201112 12:28:12.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.543" endtime="20201112 12:28:12.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.542" endtime="20201112 12:28:12.119"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.142" endtime="20201112 12:28:12.165"></status>
</kw>
<msg timestamp="20201112 12:28:12.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.138" endtime="20201112 12:28:12.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.169" endtime="20201112 12:28:12.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.175" endtime="20201112 12:28:12.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.131" endtime="20201112 12:28:12.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.125" endtime="20201112 12:28:12.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.199" endtime="20201112 12:28:12.555"></status>
</kw>
<msg timestamp="20201112 12:28:12.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041157194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041260903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:12.196" endtime="20201112 12:28:12.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041157194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041260903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:12.564" endtime="20201112 12:28:12.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.583" endtime="20201112 12:28:12.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.188" endtime="20201112 12:28:12.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.184" endtime="20201112 12:28:12.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.602" level="INFO">${RESULT} = [{'time': 0.041260903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010370900000000044, 'source_diff': 0.00010370900000000044}, {'time': 0.041396208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:12.593" endtime="20201112 12:28:12.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:12.633" level="INFO">${ACCURACY} = {'time': [0.041260903, 0.041396208, 0.0415305, 0.041660792, 0.041793069, 0.041926361, 0.042059639, 0.042193986, 0.042329278, 0.042463583, 0.042593903, 0.042727208, 0.0428595, 0.042994833, 0.043129139,...</msg>
<status status="PASS" starttime="20201112 12:28:12.604" endtime="20201112 12:28:12.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.644" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:28:12.642" endtime="20201112 12:28:12.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.650" level="INFO">VALUE: [0.00010370900000000044, 0.00010402699999999959, 0.00010427799999999932, 0.00010327800000000525, 0.00010387500000000327, 0.00010399999999999993, 0.00010395800000000122, 0.00010420800000000147, 0.00010370900000000044, 0.000103416000000002, 0.00010425000000000018, 0.0001039160000000025, 0.00010388900000000284, 0.0001037360000000001, 0.00010408299999999787, 0.00010359699999999694, 0.00010345800000000072, 0.00010383299999999762, 0.00010366700000000173, 0.00010366700000000173, 0.00010415300000000266, 0.00010394400000000165, 0.0001042219999999941, 0.00010374999999999968, 0.00010390300000000241, 0.00010402699999999959, 0.00010348599999999986, 0.0001033610000000032, 0.00010356999999999728, 0.00010416699999999529, 0.00010379199999999839, 0.00010402699999999959, 0.0001041810000000018, 0.00010426399999999975, 0.00010413900000000309, 0.00010391599999999557, 0.00010422200000000104, 0.00010391700000000198, 0.00010354199999999814, 0.00010362500000000302, 0.00010386099999999676, 0.00010333299999999712, 0.00010366700000000173, 0.00010372200000000054, 0.00010376399999999925, 0.00010390300000000241, 0.0001040139999999995, 0.00010358300000000431, 0.0001040139999999995, 0.00010340300000000191]</msg>
<status status="PASS" starttime="20201112 12:28:12.647" endtime="20201112 12:28:12.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.635" endtime="20201112 12:28:12.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.660" endtime="20201112 12:28:12.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:12.668" endtime="20201112 12:28:12.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.663" endtime="20201112 12:28:12.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.655" endtime="20201112 12:28:12.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.121" endtime="20201112 12:28:12.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.119" endtime="20201112 12:28:12.695"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.719" endtime="20201112 12:28:12.743"></status>
</kw>
<msg timestamp="20201112 12:28:12.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.715" endtime="20201112 12:28:12.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.746" endtime="20201112 12:28:12.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.753" endtime="20201112 12:28:12.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.708" endtime="20201112 12:28:12.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.702" endtime="20201112 12:28:12.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.777" endtime="20201112 12:28:13.130"></status>
</kw>
<msg timestamp="20201112 12:28:13.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042747986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042852264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:12.773" endtime="20201112 12:28:13.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042747986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042852264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.140" endtime="20201112 12:28:13.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.158" endtime="20201112 12:28:13.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.766" endtime="20201112 12:28:13.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.761" endtime="20201112 12:28:13.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.176" level="INFO">${RESULT} = [{'time': 0.042852264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010427799999999932, 'source_diff': 0.00010427799999999932}, {'time': 0.042986556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:13.168" endtime="20201112 12:28:13.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:13.207" level="INFO">${ACCURACY} = {'time': [0.042852264, 0.042986556, 0.043118847, 0.043250208, 0.0433845, 0.04351575, 0.043649069, 0.043781333, 0.043911625, 0.044047931, 0.044184222, 0.0443205, 0.04445475, 0.044590056, 0.044721319, 0...</msg>
<status status="PASS" starttime="20201112 12:28:13.179" endtime="20201112 12:28:13.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.217" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:28:13.215" endtime="20201112 12:28:13.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.223" level="INFO">VALUE: [0.00010427799999999932, 0.00010469500000000187, 0.00010440300000000291, 0.0001045689999999988, 0.00010452799999999957, 0.00010491699999999604, 0.00010497200000000179, 0.00010483299999999862, 0.00010461100000000445, 0.00010481999999999853, 0.0001046940000000024, 0.00010516699999999629, 0.00010448600000000086, 0.00010450000000000043, 0.00010470800000000197, 0.00010462499999999708, 0.000104416000000003, 0.00010466699999999579, 0.00010494499999999518, 0.00010517999999999639, 0.00010437499999999683, 0.00010479199999999939, 0.00010525000000000118, 0.00010509699999999844, 0.0001051940000000029, 0.00010497200000000179, 0.00010481999999999853, 0.00010454099999999966, 0.00010494399999999571, 0.00010530599999999946, 0.00010499999999999399, 0.000104416000000003, 0.00010445900000000119, 0.00010448600000000086, 0.00010481999999999853, 0.00010531899999999955, 0.00010452799999999957, 0.00010447199999999435, 0.0001050689999999993, 0.0001048610000000047, 0.00010441699999999554, 0.00010455500000000617, 0.00010520800000000247, 0.0001052360000000016, 0.00010512499999999758, 0.00010447200000000129, 0.00010504100000000016, 0.00010493100000000255, 0.00010436199999999674, 0.00010461100000000445]</msg>
<status status="PASS" starttime="20201112 12:28:13.220" endtime="20201112 12:28:13.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.208" endtime="20201112 12:28:13.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.233" endtime="20201112 12:28:13.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.243" endtime="20201112 12:28:13.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.238" endtime="20201112 12:28:13.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.228" endtime="20201112 12:28:13.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.697" endtime="20201112 12:28:13.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.696" endtime="20201112 12:28:13.269"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.292" endtime="20201112 12:28:13.311"></status>
</kw>
<msg timestamp="20201112 12:28:13.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.288" endtime="20201112 12:28:13.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.315" endtime="20201112 12:28:13.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.321" endtime="20201112 12:28:13.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.281" endtime="20201112 12:28:13.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.275" endtime="20201112 12:28:13.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.344" endtime="20201112 12:28:13.678"></status>
</kw>
<msg timestamp="20201112 12:28:13.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040074486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040180056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.341" endtime="20201112 12:28:13.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040074486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040180056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.687" endtime="20201112 12:28:13.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.705" endtime="20201112 12:28:13.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.334" endtime="20201112 12:28:13.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.329" endtime="20201112 12:28:13.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.724" level="INFO">${RESULT} = [{'time': 0.040180056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010556999999999928, 'source_diff': 0.00010556999999999928}, {'time': 0.040313333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:13.715" endtime="20201112 12:28:13.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:13.756" level="INFO">${ACCURACY} = {'time': [0.040180056, 0.040313333, 0.040446611, 0.040582931, 0.040720194, 0.040857486, 0.040991764, 0.041126028, 0.041261292, 0.041394583, 0.041529903, 0.041665097, 0.041800389, 0.041932681, 0.042064...</msg>
<status status="PASS" starttime="20201112 12:28:13.726" endtime="20201112 12:28:13.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.767" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:28:13.765" endtime="20201112 12:28:13.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.772" level="INFO">VALUE: [0.00010556999999999928, 0.00010613899999999815, 0.000105514000000001, 0.00010573700000000158, 0.00010545800000000272, 0.00010563899999999765, 0.00010569500000000287, 0.00010594500000000312, 0.00010595899999999575, 0.00010619399999999696, 0.00010572200000000254, 0.00010527800000000032, 0.00010620800000000347, 0.00010615299999999772, 0.0001055689999999998, 0.00010547200000000229, 0.00010613900000000509, 0.00010602700000000159, 0.00010600000000000193, 0.00010625000000000218, 0.00010619500000000337, 0.00010544400000000315, 0.00010622200000000304, 0.00010541699999999654, 0.00010554200000000014, 0.00010624999999999524, 0.00010577800000000082, 0.00010544400000000315, 0.000105514000000001, 0.00010527800000000032, 0.00010576400000000125, 0.00010601300000000202, 0.0001060560000000002, 0.00010584699999999919, 0.00010591700000000398, 0.0001057219999999956, 0.00010615299999999772, 0.00010558300000000631, 0.00010544400000000315, 0.00010594500000000312, 0.00010590300000000441, 0.00010616699999999729, 0.00010570800000000297, 0.0001060419999999937, 0.00010590300000000441, 0.0001060560000000002, 0.00010562499999999808, 0.00010541700000000348, 0.00010543099999999611, 0.000105514000000001]</msg>
<status status="PASS" starttime="20201112 12:28:13.769" endtime="20201112 12:28:13.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.758" endtime="20201112 12:28:13.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.782" endtime="20201112 12:28:13.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.790" endtime="20201112 12:28:13.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.786" endtime="20201112 12:28:13.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.777" endtime="20201112 12:28:13.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.271" endtime="20201112 12:28:13.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.270" endtime="20201112 12:28:13.816"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.839" endtime="20201112 12:28:13.861"></status>
</kw>
<msg timestamp="20201112 12:28:13.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.835" endtime="20201112 12:28:13.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.865" endtime="20201112 12:28:13.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.871" endtime="20201112 12:28:13.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.828" endtime="20201112 12:28:13.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.822" endtime="20201112 12:28:13.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.894" endtime="20201112 12:28:14.235"></status>
</kw>
<msg timestamp="20201112 12:28:14.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041034222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041141125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.891" endtime="20201112 12:28:14.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041034222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041141125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.245" endtime="20201112 12:28:14.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.263" endtime="20201112 12:28:14.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.884" endtime="20201112 12:28:14.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.879" endtime="20201112 12:28:14.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:14.284" level="INFO">${RESULT} = [{'time': 0.041141125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010690299999999847, 'source_diff': 0.00010690299999999847}, {'time': 0.041274403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:14.275" endtime="20201112 12:28:14.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:14.314" level="INFO">${ACCURACY} = {'time': [0.041141125, 0.041274403, 0.041408708, 0.041545014, 0.041682333, 0.041819625, 0.041955931, 0.042094236, 0.042227528, 0.042360833, 0.042494181, 0.042632458, 0.04277075, 0.042909069, 0.0430413...</msg>
<status status="PASS" starttime="20201112 12:28:14.286" endtime="20201112 12:28:14.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.325" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:28:14.323" endtime="20201112 12:28:14.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.330" level="INFO">VALUE: [0.00010690299999999847, 0.00010713899999999915, 0.0001066940000000044, 0.00010727799999999538, 0.00010698600000000336, 0.00010634699999999969, 0.00010715299999999872, 0.00010702800000000207, 0.00010719499999999743, 0.00010711100000000001, 0.00010695899999999675, 0.00010669399999999746, 0.00010725000000000318, 0.00010726300000000327, 0.00010633300000000012, 0.00010658399999999985, 0.00010690300000000541, 0.00010650000000000243, 0.00010648600000000286, 0.00010658399999999985, 0.00010695799999999728, 0.00010726400000000275, 0.000106901999999999, 0.00010691599999999857, 0.00010637499999999883, 0.00010704200000000164, 0.00010662499999999908, 0.000107208999999997, 0.00010704100000000216, 0.000106416000000005, 0.00010684799999999967, 0.00010661099999999951, 0.00010648599999999592, 0.00010647199999999635, 0.00010725000000000318, 0.00010627800000000132, 0.00010668099999999736, 0.00010726399999999581, 0.00010663899999999865, 0.0001065560000000007, 0.00010707000000000078, 0.00010674999999999574, 0.00010726399999999581, 0.00010676400000000225, 0.00010673599999999617, 0.00010695800000000422, 0.00010657000000000028, 0.00010722200000000404, 0.00010654200000000114, 0.00010645899999999625]</msg>
<status status="PASS" starttime="20201112 12:28:14.327" endtime="20201112 12:28:14.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.316" endtime="20201112 12:28:14.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.340" endtime="20201112 12:28:14.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:14.348" endtime="20201112 12:28:14.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.344" endtime="20201112 12:28:14.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.335" endtime="20201112 12:28:14.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.818" endtime="20201112 12:28:14.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.817" endtime="20201112 12:28:14.374"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.396" endtime="20201112 12:28:14.418"></status>
</kw>
<msg timestamp="20201112 12:28:14.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.393" endtime="20201112 12:28:14.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.422" endtime="20201112 12:28:14.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.428" endtime="20201112 12:28:14.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.386" endtime="20201112 12:28:14.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.380" endtime="20201112 12:28:14.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.451" endtime="20201112 12:28:14.795"></status>
</kw>
<msg timestamp="20201112 12:28:14.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040069514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040177069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.447" endtime="20201112 12:28:14.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040069514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040177069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.804" endtime="20201112 12:28:14.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.822" endtime="20201112 12:28:14.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.440" endtime="20201112 12:28:14.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.436" endtime="20201112 12:28:14.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:14.841" level="INFO">${RESULT} = [{'time': 0.040177069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010755500000000223, 'source_diff': 0.00010755500000000223}, {'time': 0.040313361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:14.832" endtime="20201112 12:28:14.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:14.871" level="INFO">${ACCURACY} = {'time': [0.040177069, 0.040313361, 0.040451694, 0.040584972, 0.040724222, 0.0408585, 0.040996764, 0.041131056, 0.041266347, 0.041401639, 0.041537972, 0.041675181, 0.041809444, 0.041945722, 0.04208501...</msg>
<status status="PASS" starttime="20201112 12:28:14.843" endtime="20201112 12:28:14.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.882" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:28:14.880" endtime="20201112 12:28:14.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.887" level="INFO">VALUE: [0.00010755500000000223, 0.0001082219999999981, 0.00010794400000000565, 0.00010731899999999461, 0.00010756899999999486, 0.00010808300000000187, 0.0001080419999999957, 0.000108208999999998, 0.0001075690000000018, 0.00010794499999999818, 0.00010759700000000094, 0.00010793099999999861, 0.00010817999999999939, 0.00010731899999999461, 0.00010781999999999459, 0.00010748600000000386, 0.0001077089999999975, 0.00010816699999999929, 0.00010737499999999983, 0.00010761100000000051, 0.000107902, 0.00010747199999999735, 0.00010743099999999811, 0.00010819500000000537, 0.0001078889999999999, 0.00010809700000000144, 0.00010761199999999999, 0.0001080560000000022, 0.0001075549999999953, 0.00010815299999999972, 0.0001082219999999981, 0.00010802699999999665, 0.00010744500000000462, 0.00010765199999999975, 0.00010777799999999588, 0.00010759700000000094, 0.0001082219999999981, 0.00010751399999999606, 0.0001082219999999981, 0.00010775000000000368, 0.00010774999999999674, 0.00010809700000000144, 0.0001082219999999981, 0.0001073340000000006, 0.00010775000000000368, 0.00010743000000000558, 0.00010745799999999778, 0.00010734800000000017, 0.00010809700000000144, 0.00010752800000000257]</msg>
<status status="PASS" starttime="20201112 12:28:14.884" endtime="20201112 12:28:14.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.873" endtime="20201112 12:28:14.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.896" endtime="20201112 12:28:14.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:14.904" endtime="20201112 12:28:14.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.900" endtime="20201112 12:28:14.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.892" endtime="20201112 12:28:14.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.376" endtime="20201112 12:28:14.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.375" endtime="20201112 12:28:14.930"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.953" endtime="20201112 12:28:14.973"></status>
</kw>
<msg timestamp="20201112 12:28:14.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.949" endtime="20201112 12:28:14.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.976" endtime="20201112 12:28:14.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.983" endtime="20201112 12:28:14.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.942" endtime="20201112 12:28:14.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.937" endtime="20201112 12:28:14.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.006" endtime="20201112 12:28:15.341"></status>
</kw>
<msg timestamp="20201112 12:28:15.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039885583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039994264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.003" endtime="20201112 12:28:15.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039885583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039994264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.350" endtime="20201112 12:28:15.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.369" endtime="20201112 12:28:15.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.996" endtime="20201112 12:28:15.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.991" endtime="20201112 12:28:15.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.387" level="INFO">${RESULT} = [{'time': 0.039994264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010868099999999936, 'source_diff': 0.00010868099999999936}, {'time': 0.040131542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:15.379" endtime="20201112 12:28:15.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:15.418" level="INFO">${ACCURACY} = {'time': [0.039994264, 0.040131542, 0.040266875, 0.040403111, 0.040543417, 0.040678708, 0.040816056, 0.040951306, 0.041089625, 0.041226931, 0.041366264, 0.041506569, 0.041644889, 0.041786194, 0.041921...</msg>
<status status="PASS" starttime="20201112 12:28:15.389" endtime="20201112 12:28:15.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.429" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:28:15.426" endtime="20201112 12:28:15.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.434" level="INFO">VALUE: [0.00010868099999999936, 0.00010848599999999792, 0.00010884700000000219, 0.00010859700000000194, 0.00010851399999999706, 0.00010908300000000287, 0.00010925000000000518, 0.00010873699999999764, 0.00010893099999999961, 0.00010873700000000458, 0.00010876399999999731, 0.0001087769999999974, 0.00010855599999999577, 0.00010911100000000201, 0.00010886100000000176, 0.0001085690000000028, 0.00010887500000000133, 0.00010880500000000348, 0.00010862500000000108, 0.00010901399999999756, 0.00010866699999999979, 0.00010922299999999857, 0.00010926399999999781, 0.00010855599999999577, 0.0001083890000000004, 0.00010915300000000072, 0.00010852799999999663, 0.00010841600000000007, 0.00010883300000000262, 0.00010834800000000117, 0.00010924999999999824, 0.00010924999999999824, 0.00010894399999999971, 0.0001084020000000005, 0.00010915300000000072, 0.00010923699999999814, 0.0001092219999999991, 0.00010922200000000604, 0.00010845899999999825, 0.0001092360000000056, 0.00010886100000000176, 0.000108514000000004, 0.0001092219999999991, 0.00010893000000000014, 0.000109208999999999, 0.00010872300000000501, 0.00010929199999999695, 0.00010916700000000029, 0.00010855599999999577, 0.00010926399999999781]</msg>
<status status="PASS" starttime="20201112 12:28:15.431" endtime="20201112 12:28:15.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.420" endtime="20201112 12:28:15.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.444" endtime="20201112 12:28:15.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.452" endtime="20201112 12:28:15.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.448" endtime="20201112 12:28:15.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.439" endtime="20201112 12:28:15.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.932" endtime="20201112 12:28:15.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.931" endtime="20201112 12:28:15.478"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.501" endtime="20201112 12:28:15.521"></status>
</kw>
<msg timestamp="20201112 12:28:15.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:15.497" endtime="20201112 12:28:15.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:15.524" endtime="20201112 12:28:15.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.531" endtime="20201112 12:28:15.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.490" endtime="20201112 12:28:15.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.484" endtime="20201112 12:28:15.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.554" endtime="20201112 12:28:15.890"></status>
</kw>
<msg timestamp="20201112 12:28:15.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04023575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040345083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:15.551" endtime="20201112 12:28:15.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04023575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040345083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:15.899" endtime="20201112 12:28:15.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.917" endtime="20201112 12:28:15.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.544" endtime="20201112 12:28:15.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.539" endtime="20201112 12:28:15.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.936" level="INFO">${RESULT} = [{'time': 0.040345083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010933299999999618, 'source_diff': 0.00010933299999999618}, {'time': 0.040483361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:15.927" endtime="20201112 12:28:15.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:15.967" level="INFO">${ACCURACY} = {'time': [0.040345083, 0.040483361, 0.040618639, 0.040755931, 0.04089325, 0.041032514, 0.041170792, 0.041312111, 0.041451417, 0.041592694, 0.041732986, 0.041870292, 0.042005569, 0.042146889, 0.0422851...</msg>
<status status="PASS" starttime="20201112 12:28:15.938" endtime="20201112 12:28:15.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.978" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:28:15.975" endtime="20201112 12:28:15.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.983" level="INFO">VALUE: [0.00010933299999999618, 0.00010994400000000071, 0.00010937499999999489, 0.00011009800000000292, 0.00010979199999999745, 0.00011016700000000129, 0.00010973599999999917, 0.00010983299999999668, 0.00010972299999999907, 0.00011004099999999822, 0.00010997199999999985, 0.00010958400000000285, 0.00010944400000000021, 0.00010948599999999892, 0.00010940300000000097, 0.00011026399999999881, 0.00010932000000000303, 0.00010950000000000543, 0.00010937500000000183, 0.00010948699999999839, 0.00011011100000000301, 0.00010999999999999899, 0.000109596999999996, 0.00010983300000000362, 0.00011009799999999598, 0.00011033399999999666, 0.00011001399999999856, 0.00011004099999999822, 0.00010965300000000122, 0.00010993000000000114, 0.00010974999999999874, 0.00011024999999999924, 0.00010944400000000021, 0.00010991700000000104, 0.00010961099999999557, 0.00010938899999999446, 0.00010947199999999935, 0.00011026400000000575, 0.00010962499999999514, 0.00010991599999999463, 0.00010951399999999806, 0.00010969400000000046, 0.00011011099999999607, 0.00011004099999999822, 0.00010937499999999489, 0.00010937499999999489, 0.00010955500000000423, 0.00010944400000000021, 0.0001098890000000019, 0.00010963899999999471]</msg>
<status status="PASS" starttime="20201112 12:28:15.980" endtime="20201112 12:28:15.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.969" endtime="20201112 12:28:15.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.993" endtime="20201112 12:28:15.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:16.001" endtime="20201112 12:28:16.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.997" endtime="20201112 12:28:16.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.988" endtime="20201112 12:28:16.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.480" endtime="20201112 12:28:16.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.479" endtime="20201112 12:28:16.027"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.050" endtime="20201112 12:28:16.070"></status>
</kw>
<msg timestamp="20201112 12:28:16.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:16.047" endtime="20201112 12:28:16.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:16.074" endtime="20201112 12:28:16.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.080" endtime="20201112 12:28:16.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.039" endtime="20201112 12:28:16.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.034" endtime="20201112 12:28:16.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.103" endtime="20201112 12:28:16.437"></status>
</kw>
<msg timestamp="20201112 12:28:16.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040369319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040480069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.100" endtime="20201112 12:28:16.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040369319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040480069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.446" endtime="20201112 12:28:16.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.464" endtime="20201112 12:28:16.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.093" endtime="20201112 12:28:16.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.088" endtime="20201112 12:28:16.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:16.485" level="INFO">${RESULT} = [{'time': 0.040480069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011074999999999974, 'source_diff': 0.00011074999999999974}, {'time': 0.040620306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:16.476" endtime="20201112 12:28:16.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:16.515" level="INFO">${ACCURACY} = {'time': [0.040480069, 0.040620306, 0.040761597, 0.040901875, 0.041044153, 0.041185431, 0.041326694, 0.041463014, 0.041602194, 0.041740486, 0.041878736, 0.042021069, 0.042160264, 0.042301514, 0.042440...</msg>
<status status="PASS" starttime="20201112 12:28:16.487" endtime="20201112 12:28:16.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.526" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:28:16.524" endtime="20201112 12:28:16.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.532" level="INFO">VALUE: [0.00011074999999999974, 0.00011072300000000007, 0.00011065299999999528, 0.00011123600000000067, 0.00011102799999999913, 0.00011094500000000118, 0.00011058299999999743, 0.00011066700000000179, 0.00011073600000000017, 0.00011065300000000222, 0.0001110549999999988, 0.00011091600000000257, 0.00011118100000000186, 0.00011033299999999718, 0.00011033399999999666, 0.00011055599999999777, 0.00011031999999999709, 0.000111209000000001, 0.00011068100000000136, 0.00011057000000000428, 0.00011115299999999578, 0.00011109700000000444, 0.00011101399999999956, 0.00011059800000000342, 0.00011034700000000369, 0.00011116599999999588, 0.00011087499999999639, 0.00011081899999999811, 0.00011080499999999854, 0.00011106999999999784, 0.00011062499999999614, 0.00011119400000000196, 0.00011084699999999725, 0.00011102799999999913, 0.00011037500000000283, 0.00011063899999999571, 0.00011115299999999578, 0.000111209000000001, 0.00011120800000000153, 0.00011045800000000078, 0.00011036100000000326, 0.00011104099999999922, 0.00011073600000000017, 0.000110514000000006, 0.00011123600000000067, 0.00011062499999999614, 0.0001108890000000029, 0.00011034700000000369, 0.0001107220000000006, 0.00011055500000000523]</msg>
<status status="PASS" starttime="20201112 12:28:16.529" endtime="20201112 12:28:16.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.517" endtime="20201112 12:28:16.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.546" endtime="20201112 12:28:16.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:16.554" endtime="20201112 12:28:16.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.550" endtime="20201112 12:28:16.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.541" endtime="20201112 12:28:16.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.029" endtime="20201112 12:28:16.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.028" endtime="20201112 12:28:16.580"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.603" endtime="20201112 12:28:16.623"></status>
</kw>
<msg timestamp="20201112 12:28:16.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:16.599" endtime="20201112 12:28:16.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:16.626" endtime="20201112 12:28:16.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.633" endtime="20201112 12:28:16.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.592" endtime="20201112 12:28:16.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.586" endtime="20201112 12:28:16.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.656" endtime="20201112 12:28:16.991"></status>
</kw>
<msg timestamp="20201112 12:28:16.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040278736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0403905, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:16.653" endtime="20201112 12:28:16.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040278736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0403905, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:17.000" endtime="20201112 12:28:17.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.019" endtime="20201112 12:28:17.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.645" endtime="20201112 12:28:17.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.641" endtime="20201112 12:28:17.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:17.037" level="INFO">${RESULT} = [{'time': 0.0403905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011176400000000031, 'source_diff': 0.00011176400000000031}, {'time': 0.040533819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:17.029" endtime="20201112 12:28:17.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:17.068" level="INFO">${ACCURACY} = {'time': [0.0403905, 0.040533819, 0.040674181, 0.0408135, 0.040951833, 0.041090181, 0.041232556, 0.041370833, 0.041512153, 0.041653458, 0.04179175, 0.041935069, 0.042073375, 0.042216694, 0.042358, 0.0...</msg>
<status status="PASS" starttime="20201112 12:28:17.039" endtime="20201112 12:28:17.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.079" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:28:17.077" endtime="20201112 12:28:17.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.084" level="INFO">VALUE: [0.00011176400000000031, 0.00011204100000000022, 0.00011180599999999902, 0.0001113890000000034, 0.0001117220000000016, 0.00011191700000000304, 0.00011168099999999542, 0.00011193000000000314, 0.00011169500000000193, 0.0001117770000000004, 0.00011181899999999911, 0.00011225000000000124, 0.00011193100000000261, 0.0001119299999999962, 0.00011138899999999646, 0.00011223599999999473, 0.00011173600000000117, 0.0001122220000000021, 0.00011150000000000049, 0.00011220800000000253, 0.00011165300000000322, 0.00011202800000000013, 0.00011230500000000004, 0.00011179099999999997, 0.00011145800000000178, 0.00011141700000000254, 0.00011194399999999577, 0.00011227800000000038, 0.00011215199999999731, 0.00011198599999999448, 0.00011213899999999721, 0.00011194400000000271, 0.00011152799999999963, 0.0001114169999999956, 0.00011206899999999936, 0.00011186099999999782, 0.0001122770000000009, 0.0001115690000000058, 0.0001115419999999992, 0.00011206899999999936, 0.00011193099999999567, 0.00011158299999999843, 0.00011169400000000246, 0.00011137499999999689, 0.00011166700000000279, 0.00011218099999999592, 0.00011218100000000286, 0.00011165300000000322, 0.00011216699999999635, 0.00011213899999999721]</msg>
<status status="PASS" starttime="20201112 12:28:17.081" endtime="20201112 12:28:17.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.070" endtime="20201112 12:28:17.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.094" endtime="20201112 12:28:17.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:17.102" endtime="20201112 12:28:17.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.098" endtime="20201112 12:28:17.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.089" endtime="20201112 12:28:17.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.582" endtime="20201112 12:28:17.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.581" endtime="20201112 12:28:17.128"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.151" endtime="20201112 12:28:17.171"></status>
</kw>
<msg timestamp="20201112 12:28:17.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.147" endtime="20201112 12:28:17.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.174" endtime="20201112 12:28:17.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.181" endtime="20201112 12:28:17.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.140" endtime="20201112 12:28:17.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.134" endtime="20201112 12:28:17.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.204" endtime="20201112 12:28:17.538"></status>
</kw>
<msg timestamp="20201112 12:28:17.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04021875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040331639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:17.201" endtime="20201112 12:28:17.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04021875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040331639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:17.548" endtime="20201112 12:28:17.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.566" endtime="20201112 12:28:17.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.194" endtime="20201112 12:28:17.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.189" endtime="20201112 12:28:17.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:17.585" level="INFO">${RESULT} = [{'time': 0.040331639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001128890000000049, 'source_diff': 0.0001128890000000049}, {'time': 0.040472875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:17.576" endtime="20201112 12:28:17.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:17.615" level="INFO">${ACCURACY} = {'time': [0.040331639, 0.040472875, 0.040618139, 0.040759389, 0.040901653, 0.041045917, 0.041184181, 0.041323431, 0.041467681, 0.041610972, 0.041751222, 0.041895486, 0.042038792, 0.042178028, 0.042317...</msg>
<status status="PASS" starttime="20201112 12:28:17.587" endtime="20201112 12:28:17.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.626" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:28:17.624" endtime="20201112 12:28:17.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.631" level="INFO">VALUE: [0.0001128890000000049, 0.00011295799999999634, 0.00011315299999999778, 0.0001125420000000002, 0.00011241700000000354, 0.00011234799999999823, 0.00011244500000000268, 0.00011300000000000199, 0.00011319499999999649, 0.00011234700000000569, 0.00011261099999999857, 0.00011295800000000328, 0.00011329200000000095, 0.00011283399999999916, 0.00011238899999999746, 0.00011258300000000637, 0.00011295799999999634, 0.00011262499999999814, 0.00011261099999999857, 0.00011291600000000457, 0.00011308299999999993, 0.00011318099999999692, 0.00011265300000000422, 0.00011265300000000422, 0.00011319399999999702, 0.00011305600000000027, 0.00011280600000000002, 0.00011319400000000396, 0.00011322300000000257, 0.00011245900000000225, 0.00011245800000000278, 0.00011276400000000131, 0.00011293099999999667, 0.00011311099999999907, 0.00011315299999999778, 0.00011269399999999652, 0.00011317999999999745, 0.00011313900000000515, 0.00011316599999999788, 0.00011243100000000311, 0.00011316700000000429, 0.00011298600000000242, 0.00011255599999999977, 0.00011251300000000158, 0.00011312500000000558, 0.00011306999999999984, 0.00011256999999999934, 0.00011266699999999685, 0.00011229199999999995, 0.0001130420000000007]</msg>
<status status="PASS" starttime="20201112 12:28:17.628" endtime="20201112 12:28:17.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.617" endtime="20201112 12:28:17.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.641" endtime="20201112 12:28:17.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:17.649" endtime="20201112 12:28:17.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.645" endtime="20201112 12:28:17.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.636" endtime="20201112 12:28:17.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.130" endtime="20201112 12:28:17.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.129" endtime="20201112 12:28:17.675"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.698" endtime="20201112 12:28:17.719"></status>
</kw>
<msg timestamp="20201112 12:28:17.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.695" endtime="20201112 12:28:17.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.722" endtime="20201112 12:28:17.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.728" endtime="20201112 12:28:17.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.687" endtime="20201112 12:28:17.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.682" endtime="20201112 12:28:17.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.752" endtime="20201112 12:28:18.088"></status>
</kw>
<msg timestamp="20201112 12:28:18.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:17.748" endtime="20201112 12:28:18.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:18.097" endtime="20201112 12:28:18.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.116" endtime="20201112 12:28:18.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.741" endtime="20201112 12:28:18.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.736" endtime="20201112 12:28:18.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.134" level="INFO">${RESULT} = [{'time': 0.0404075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011362499999999914, 'source_diff': 0.00011362499999999914}, {'time': 0.040551764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:18.126" endtime="20201112 12:28:18.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:18.165" level="INFO">${ACCURACY} = {'time': [0.0404075, 0.040551764, 0.040695028, 0.040834278, 0.040976542, 0.041116778, 0.041257028, 0.041400292, 0.041544542, 0.041684806, 0.041824153, 0.041965333, 0.042108569, 0.042248806, 0.04238902...</msg>
<status status="PASS" starttime="20201112 12:28:18.136" endtime="20201112 12:28:18.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.176" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:28:18.174" endtime="20201112 12:28:18.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.181" level="INFO">VALUE: [0.00011362499999999914, 0.0001139169999999981, 0.00011336099999999932, 0.00011365299999999828, 0.00011344499999999674, 0.00011361099999999957, 0.00011329200000000095, 0.0001134169999999976, 0.00011393099999999767, 0.00011377799999999494, 0.00011355600000000077, 0.00011367999999999795, 0.0001137629999999959, 0.00011377800000000188, 0.00011382000000000059, 0.00011343100000000411, 0.00011419499999999749, 0.00011351400000000206, 0.00011332000000000009, 0.00011338899999999846, 0.00011365299999999828, 0.00011390299999999853, 0.00011355600000000077, 0.00011334699999999975, 0.00011368100000000436, 0.00011401399999999562, 0.00011397300000000332, 0.00011334699999999975, 0.00011411100000000007, 0.00011350000000000249, 0.00011373599999999623, 0.00011422199999999716, 0.000114209000000004, 0.00011368099999999742, 0.00011362499999999914, 0.00011338899999999846, 0.0001139299999999982, 0.00011367999999999795, 0.00011420799999999759, 0.00011341599999999813, 0.00011417999999999845, 0.0001142499999999963, 0.00011336099999999932, 0.00011352800000000163, 0.00011377800000000188, 0.000113597, 0.00011352800000000163, 0.00011418099999999792, 0.00011341700000000454, 0.00011348600000000292]</msg>
<status status="PASS" starttime="20201112 12:28:18.178" endtime="20201112 12:28:18.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.167" endtime="20201112 12:28:18.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.191" endtime="20201112 12:28:18.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:18.199" endtime="20201112 12:28:18.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.195" endtime="20201112 12:28:18.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.186" endtime="20201112 12:28:18.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.677" endtime="20201112 12:28:18.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.676" endtime="20201112 12:28:18.225"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.248" endtime="20201112 12:28:18.268"></status>
</kw>
<msg timestamp="20201112 12:28:18.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:18.244" endtime="20201112 12:28:18.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:18.272" endtime="20201112 12:28:18.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.278" endtime="20201112 12:28:18.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.237" endtime="20201112 12:28:18.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.231" endtime="20201112 12:28:18.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.302" endtime="20201112 12:28:18.635"></status>
</kw>
<msg timestamp="20201112 12:28:18.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040274583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040389736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.298" endtime="20201112 12:28:18.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040274583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040389736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.645" endtime="20201112 12:28:18.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.663" endtime="20201112 12:28:18.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.291" endtime="20201112 12:28:18.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.286" endtime="20201112 12:28:18.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.684" level="INFO">${RESULT} = [{'time': 0.040389736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011515299999999978, 'source_diff': 0.00011515299999999978}, {'time': 0.040530069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:18.675" endtime="20201112 12:28:18.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:18.714" level="INFO">${ACCURACY} = {'time': [0.040389736, 0.040530069, 0.040675389, 0.040821694, 0.040966, 0.041108278, 0.041251569, 0.041391875, 0.041533167, 0.041677486, 0.041820833, 0.041965083, 0.042111389, 0.042254708, 0.042400986...</msg>
<status status="PASS" starttime="20201112 12:28:18.686" endtime="20201112 12:28:18.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.725" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:28:18.723" endtime="20201112 12:28:18.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.730" level="INFO">VALUE: [0.00011515299999999978, 0.0001147220000000046, 0.00011477799999999594, 0.00011473599999999723, 0.00011444400000000521, 0.00011516699999999935, 0.00011465199999999981, 0.00011456900000000186, 0.00011436100000000032, 0.0001150550000000028, 0.00011506900000000236, 0.00011481900000000211, 0.0001144169999999986, 0.00011434700000000075, 0.000114597000000001, 0.00011459800000000048, 0.00011452800000000263, 0.00011511100000000107, 0.00011461100000000057, 0.00011513800000000074, 0.00011447200000000435, 0.00011448699999999645, 0.0001144169999999986, 0.00011518100000000586, 0.00011433300000000118, 0.00011455499999999535, 0.00011447300000000382, 0.00011445799999999784, 0.0001148750000000004, 0.0001143749999999999, 0.00011516599999999988, 0.00011522299999999763, 0.00011447200000000435, 0.00011440299999999903, 0.00011504099999999629, 0.00011454100000000272, 0.00011511100000000107, 0.00011506900000000236, 0.00011501399999999662, 0.00011458400000000091, 0.00011527800000000338, 0.00011500000000000399, 0.0001150699999999949, 0.00011480600000000202, 0.00011443099999999817, 0.0001145420000000022, 0.00011529200000000295, 0.00011493099999999867, 0.00011482000000000159, 0.00011522199999999816]</msg>
<status status="PASS" starttime="20201112 12:28:18.727" endtime="20201112 12:28:18.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.716" endtime="20201112 12:28:18.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.740" endtime="20201112 12:28:18.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:18.748" endtime="20201112 12:28:18.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.744" endtime="20201112 12:28:18.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.735" endtime="20201112 12:28:18.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.227" endtime="20201112 12:28:18.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.226" endtime="20201112 12:28:18.774"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.797" endtime="20201112 12:28:18.818"></status>
</kw>
<msg timestamp="20201112 12:28:18.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:18.794" endtime="20201112 12:28:18.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:18.821" endtime="20201112 12:28:18.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.827" endtime="20201112 12:28:18.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.786" endtime="20201112 12:28:18.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.781" endtime="20201112 12:28:18.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.851" endtime="20201112 12:28:19.184"></status>
</kw>
<msg timestamp="20201112 12:28:19.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040387417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.847" endtime="20201112 12:28:19.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040387417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.193" endtime="20201112 12:28:19.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.212" endtime="20201112 12:28:19.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.840" endtime="20201112 12:28:19.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.835" endtime="20201112 12:28:19.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:19.231" level="INFO">${RESULT} = [{'time': 0.040502861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011544399999999927, 'source_diff': 0.00011544399999999927}, {'time': 0.040649139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:19.222" endtime="20201112 12:28:19.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:19.261" level="INFO">${ACCURACY} = {'time': [0.040502861, 0.040649139, 0.040793458, 0.040936764, 0.041080097, 0.041221347, 0.041366653, 0.041510972, 0.041653292, 0.041798583, 0.041941875, 0.042086222, 0.0422305, 0.042374819, 0.04251711...</msg>
<status status="PASS" starttime="20201112 12:28:19.233" endtime="20201112 12:28:19.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.272" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:28:19.270" endtime="20201112 12:28:19.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.277" level="INFO">VALUE: [0.00011544399999999927, 0.00011565300000000028, 0.00011581899999999618, 0.0001155420000000032, 0.00011594399999999977, 0.00011545799999999884, 0.00011590300000000053, 0.00011622199999999916, 0.00011626400000000481, 0.00011573599999999823, 0.00011530600000000252, 0.00011601399999999762, 0.00011551399999999712, 0.0001162499999999983, 0.00011551400000000406, 0.00011555599999999583, 0.00011566599999999344, 0.00011622199999999916, 0.0001155420000000032, 0.00011595799999999934, 0.00011556899999999592, 0.00011563900000000071, 0.0001157770000000044, 0.00011580599999999608, 0.00011593099999999967, 0.0001159300000000002, 0.0001153750000000009, 0.00011547199999999841, 0.00011534800000000123, 0.00011544399999999927, 0.00011590300000000053, 0.00011602800000000413, 0.00011602699999999772, 0.00011611099999999513, 0.00011612500000000164, 0.00011623599999999873, 0.0001158750000000014, 0.00011620799999999959, 0.00011629200000000395, 0.00011622199999999916, 0.0001154169999999996, 0.00011616700000000035, 0.00011616700000000035, 0.00011540300000000003, 0.00011619400000000002, 0.00011543099999999917, 0.00011616700000000035, 0.0001157499999999978, 0.00011536100000000132, 0.00011549999999999755]</msg>
<status status="PASS" starttime="20201112 12:28:19.274" endtime="20201112 12:28:19.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.263" endtime="20201112 12:28:19.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.287" endtime="20201112 12:28:19.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:19.295" endtime="20201112 12:28:19.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.291" endtime="20201112 12:28:19.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.282" endtime="20201112 12:28:19.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.776" endtime="20201112 12:28:19.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.775" endtime="20201112 12:28:19.321"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.344" endtime="20201112 12:28:19.364"></status>
</kw>
<msg timestamp="20201112 12:28:19.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:19.340" endtime="20201112 12:28:19.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:19.368" endtime="20201112 12:28:19.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.374" endtime="20201112 12:28:19.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.333" endtime="20201112 12:28:19.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.327" endtime="20201112 12:28:19.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.398" endtime="20201112 12:28:19.731"></status>
</kw>
<msg timestamp="20201112 12:28:19.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040179542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040296611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.394" endtime="20201112 12:28:19.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040179542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040296611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.740" endtime="20201112 12:28:19.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.759" endtime="20201112 12:28:19.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.387" endtime="20201112 12:28:19.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.382" endtime="20201112 12:28:19.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:19.777" level="INFO">${RESULT} = [{'time': 0.040296611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011706900000000436, 'source_diff': 0.00011706900000000436}, {'time': 0.040444972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:19.769" endtime="20201112 12:28:19.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:19.808" level="INFO">${ACCURACY} = {'time': [0.040296611, 0.040444972, 0.040592208, 0.0407355, 0.040878833, 0.041027069, 0.041174403, 0.041319667, 0.041464986, 0.041612278, 0.041758611, 0.041907861, 0.042056153, 0.042202472, 0.04235177...</msg>
<status status="PASS" starttime="20201112 12:28:19.779" endtime="20201112 12:28:19.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.819" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:28:19.817" endtime="20201112 12:28:19.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.824" level="INFO">VALUE: [0.00011706900000000436, 0.00011694400000000077, 0.00011727699999999897, 0.00011652799999999769, 0.00011734700000000375, 0.00011638800000000199, 0.0001166249999999952, 0.00011631999999999615, 0.0001168750000000024, 0.00011722200000000016, 0.00011705499999999786, 0.0001171249999999957, 0.00011711099999999613, 0.00011649999999999855, 0.00011722200000000016, 0.00011665300000000128, 0.00011722200000000016, 0.00011658300000000343, 0.00011715300000000178, 0.00011634700000000275, 0.00011636100000000232, 0.00011640300000000103, 0.00011679199999999751, 0.00011705499999999786, 0.00011649999999999855, 0.00011690300000000153, 0.0001172499999999993, 0.00011649999999999855, 0.00011668100000000042, 0.00011729100000000547, 0.00011697200000000685, 0.00011666700000000085, 0.00011644400000000027, 0.00011711100000000307, 0.00011683399999999622, 0.00011683299999999675, 0.00011709799999999604, 0.00011638900000000146, 0.00011715300000000178, 0.00011683299999999675, 0.00011716700000000135, 0.00011647299999999888, 0.00011655499999999736, 0.0001172369999999992, 0.000116597000000003, 0.00011693100000000067, 0.00011693100000000067, 0.0001169170000000011, 0.00011649999999999855, 0.0001164300000000007]</msg>
<status status="PASS" starttime="20201112 12:28:19.821" endtime="20201112 12:28:19.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.810" endtime="20201112 12:28:19.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.834" endtime="20201112 12:28:19.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:19.842" endtime="20201112 12:28:19.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.838" endtime="20201112 12:28:19.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.829" endtime="20201112 12:28:19.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.323" endtime="20201112 12:28:19.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.322" endtime="20201112 12:28:19.868"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.891" endtime="20201112 12:28:19.911"></status>
</kw>
<msg timestamp="20201112 12:28:19.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:19.887" endtime="20201112 12:28:19.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:19.915" endtime="20201112 12:28:19.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.922" endtime="20201112 12:28:19.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.880" endtime="20201112 12:28:19.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.874" endtime="20201112 12:28:19.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.946" endtime="20201112 12:28:20.282"></status>
</kw>
<msg timestamp="20201112 12:28:20.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040159486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040277333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.943" endtime="20201112 12:28:20.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040159486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040277333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.291" endtime="20201112 12:28:20.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.309" endtime="20201112 12:28:20.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.935" endtime="20201112 12:28:20.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.930" endtime="20201112 12:28:20.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:20.328" level="INFO">${RESULT} = [{'time': 0.040277333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011784699999999732, 'source_diff': 0.00011784699999999732}, {'time': 0.040425681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:20.320" endtime="20201112 12:28:20.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:20.359" level="INFO">${ACCURACY} = {'time': [0.040277333, 0.040425681, 0.040572917, 0.040717194, 0.040866514, 0.041012792, 0.041160069, 0.041308347, 0.041457653, 0.041606958, 0.041752264, 0.041900542, 0.042047833, 0.042192097, 0.042337...</msg>
<status status="PASS" starttime="20201112 12:28:20.330" endtime="20201112 12:28:20.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.370" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:28:20.368" endtime="20201112 12:28:20.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.375" level="INFO">VALUE: [0.00011784699999999732, 0.00011758399999999697, 0.00011804199999999876, 0.0001177499999999998, 0.00011800000000000005, 0.00011795900000000081, 0.00011827699999999997, 0.00011763900000000271, 0.00011749999999999955, 0.00011740200000000256, 0.0001180699999999979, 0.00011749999999999955, 0.00011791600000000263, 0.000118082999999998, 0.00011758400000000391, 0.00011741599999999519, 0.00011801400000000656, 0.00011754199999999826, 0.00011738800000000299, 0.00011751399999999912, 0.00011776399999999937, 0.00011779199999999851, 0.00011826399999999987, 0.00011787499999999645, 0.00011784699999999732, 0.0001179449999999943, 0.00011736099999999638, 0.00011768000000000195, 0.00011784699999999732, 0.00011758400000000391, 0.00011816699999999541, 0.00011763899999999577, 0.00011798600000000048, 0.00011783299999999775, 0.00011816700000000235, 0.00011816600000000288, 0.00011805599999999833, 0.00011752799999999869, 0.00011773600000000023, 0.00011763899999999577, 0.00011742999999999476, 0.00011800000000000005, 0.00011800000000000005, 0.0001180420000000057, 0.00011772300000000013, 0.00011749999999999955, 0.0001173750000000029, 0.00011802699999999972, 0.00011784700000000425, 0.00011768100000000142]</msg>
<status status="PASS" starttime="20201112 12:28:20.372" endtime="20201112 12:28:20.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.361" endtime="20201112 12:28:20.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.385" endtime="20201112 12:28:20.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:20.393" endtime="20201112 12:28:20.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.389" endtime="20201112 12:28:20.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.380" endtime="20201112 12:28:20.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.870" endtime="20201112 12:28:20.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.869" endtime="20201112 12:28:20.419"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.441" endtime="20201112 12:28:20.463"></status>
</kw>
<msg timestamp="20201112 12:28:20.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:20.438" endtime="20201112 12:28:20.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:20.466" endtime="20201112 12:28:20.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.472" endtime="20201112 12:28:20.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.431" endtime="20201112 12:28:20.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.425" endtime="20201112 12:28:20.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.495" endtime="20201112 12:28:20.830"></status>
</kw>
<msg timestamp="20201112 12:28:20.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040151944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040271014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.492" endtime="20201112 12:28:20.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040151944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040271014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.840" endtime="20201112 12:28:20.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.858" endtime="20201112 12:28:20.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.485" endtime="20201112 12:28:20.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.480" endtime="20201112 12:28:20.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:20.879" level="INFO">${RESULT} = [{'time': 0.040271014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001190699999999989, 'source_diff': 0.0001190699999999989}, {'time': 0.040422347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:20.870" endtime="20201112 12:28:20.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:20.910" level="INFO">${ACCURACY} = {'time': [0.040271014, 0.040422347, 0.040570639, 0.040716958, 0.040862236, 0.041007556, 0.041157847, 0.041303181, 0.0414525, 0.041600819, 0.041749167, 0.041893472, 0.042039792, 0.042185097, 0.04232944...</msg>
<status status="PASS" starttime="20201112 12:28:20.881" endtime="20201112 12:28:20.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.921" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:28:20.918" endtime="20201112 12:28:20.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.926" level="INFO">VALUE: [0.0001190699999999989, 0.00011920799999999565, 0.00011923600000000173, 0.00011913899999999727, 0.00011847200000000141, 0.00011905599999999933, 0.00011852799999999969, 0.00011881999999999865, 0.00011908300000000593, 0.00011861099999999763, 0.00011929200000000001, 0.00011863900000000371, 0.00011891699999999616, 0.00011852799999999969, 0.0001185829999999985, 0.0001193050000000001, 0.00011855599999999883, 0.00011845900000000131, 0.0001189449999999953, 0.00011892999999999626, 0.00011929200000000001, 0.00011879199999999951, 0.000118597000000005, 0.0001191950000000025, 0.00011850000000000055, 0.0001187500000000008, 0.0001192630000000014, 0.00011902800000000019, 0.00011920800000000259, 0.00011845800000000184, 0.00011905599999999933, 0.00011837499999999695, 0.00011911099999999814, 0.00011848600000000098, 0.00011929200000000001, 0.00011841699999999566, 0.00011832000000000509, 0.0001183750000000039, 0.00011847300000000088, 0.000118597000000005, 0.00011898600000000148, 0.00011865200000000381, 0.00011833400000000466, 0.0001185829999999985, 0.0001187500000000008, 0.00011872200000000166, 0.00011852799999999969, 0.00011916699999999641, 0.00011866699999999591, 0.00011908300000000593]</msg>
<status status="PASS" starttime="20201112 12:28:20.923" endtime="20201112 12:28:20.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.912" endtime="20201112 12:28:20.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.935" endtime="20201112 12:28:20.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:20.944" endtime="20201112 12:28:20.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.939" endtime="20201112 12:28:20.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.931" endtime="20201112 12:28:20.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.421" endtime="20201112 12:28:20.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.420" endtime="20201112 12:28:20.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.708" endtime="20201112 12:28:20.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:20.982" endtime="20201112 12:28:21.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.977" endtime="20201112 12:28:21.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.974" endtime="20201112 12:28:21.006"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:25.583" endtime="20201112 12:28:21.007" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:21.025" endtime="20201112 12:28:21.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.021" endtime="20201112 12:28:21.048"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.083" endtime="20201112 12:28:21.099"></status>
</kw>
<msg timestamp="20201112 12:28:21.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:21.078" endtime="20201112 12:28:21.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.106" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:21.102" endtime="20201112 12:28:21.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.113" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:28:21.108" endtime="20201112 12:28:21.113"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:21.071" endtime="20201112 12:28:21.115"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:21.064" endtime="20201112 12:28:21.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.062" endtime="20201112 12:28:21.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:28:21.125" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:28:21.124" endtime="20201112 12:28:21.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.119" endtime="20201112 12:28:21.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.060" endtime="20201112 12:28:21.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.058" endtime="20201112 12:28:21.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.129" endtime="20201112 12:28:21.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.054" endtime="20201112 12:28:21.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.050" endtime="20201112 12:28:21.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.018" endtime="20201112 12:28:21.136"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.162" endtime="20201112 12:28:21.177"></status>
</kw>
<msg timestamp="20201112 12:28:21.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:21.158" endtime="20201112 12:28:21.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:21.180" endtime="20201112 12:28:21.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.186" endtime="20201112 12:28:21.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.150" endtime="20201112 12:28:21.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.145" endtime="20201112 12:28:21.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.210" endtime="20201112 12:28:21.555"></status>
</kw>
<msg timestamp="20201112 12:28:21.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128844097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128866042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:21.207" endtime="20201112 12:28:21.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128844097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128866042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:21.565" endtime="20201112 12:28:21.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.584" endtime="20201112 12:28:21.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.199" endtime="20201112 12:28:21.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.195" endtime="20201112 12:28:21.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:21.602" level="INFO">${RESULT} = [{'time': 0.128866042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.194499999999544e-05, 'source_diff': 2.194499999999544e-05}, {'time': 0.128896208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:21.593" endtime="20201112 12:28:21.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:21.635" level="INFO">${ACCURACY} = {'time': [0.128866042, 0.128896208, 0.128928194, 0.128955292, 0.128987361, 0.129018431, 0.129047389, 0.129076542, 0.129103556, 0.129131569, 0.129159778, 0.129190667, 0.129221847, 0.129251931, 0.129279...</msg>
<status status="PASS" starttime="20201112 12:28:21.604" endtime="20201112 12:28:21.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.646" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:28:21.643" endtime="20201112 12:28:21.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.651" level="INFO">VALUE: [2.194499999999544e-05, 2.1791000000020988e-05, 2.1930000000003336e-05, 2.1110999999990332e-05, 2.1263999999993066e-05, 2.1124999999982963e-05, 2.161100000000471e-05, 2.1305999999998715e-05, 2.1778000000000075e-05, 2.161100000000471e-05, 2.1791999999992706e-05, 2.1264000000020822e-05, 2.1846999999991512e-05, 2.1972999999980702e-05, 2.1806000000013093e-05, 2.1097000000025457e-05, 2.1292000000006084e-05, 2.1791999999992706e-05, 2.158400000001892e-05, 2.1431000000016187e-05, 2.193100000000281e-05, 2.1943999999995967e-05, 2.1110999999990332e-05, 2.1444000000009344e-05, 2.170799999998141e-05, 2.1277999999985697e-05, 2.1610999999976954e-05, 2.1778000000000075e-05, 2.145900000000145e-05, 2.1471999999994607e-05, 2.1778000000000075e-05, 2.147299999999408e-05, 2.1277999999985697e-05, 2.1471999999994607e-05, 2.2097000000026457e-05, 2.161100000000471e-05, 2.1292000000006084e-05, 2.145900000000145e-05, 2.1111000000018088e-05, 2.1943999999995967e-05, 2.1943999999995967e-05, 2.1652000000010885e-05, 2.1111000000018088e-05, 2.1110999999990332e-05, 2.1916000000010705e-05, 2.1598000000011552e-05, 2.1262999999993593e-05, 2.1332999999984503e-05, 2.195899999998807e-05, 2.1957999999988598e-05]</msg>
<status status="PASS" starttime="20201112 12:28:21.648" endtime="20201112 12:28:21.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.636" endtime="20201112 12:28:21.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.660" endtime="20201112 12:28:21.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:21.668" endtime="20201112 12:28:21.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.664" endtime="20201112 12:28:21.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.655" endtime="20201112 12:28:21.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.140" endtime="20201112 12:28:21.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.139" endtime="20201112 12:28:21.698"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.721" endtime="20201112 12:28:21.736"></status>
</kw>
<msg timestamp="20201112 12:28:21.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:21.718" endtime="20201112 12:28:21.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:21.740" endtime="20201112 12:28:21.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.746" endtime="20201112 12:28:21.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.711" endtime="20201112 12:28:21.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.705" endtime="20201112 12:28:21.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.769" endtime="20201112 12:28:22.105"></status>
</kw>
<msg timestamp="20201112 12:28:22.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044902611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044924556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:21.766" endtime="20201112 12:28:22.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044902611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044924556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.115" endtime="20201112 12:28:22.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.134" endtime="20201112 12:28:22.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.759" endtime="20201112 12:28:22.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.754" endtime="20201112 12:28:22.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:22.152" level="INFO">${RESULT} = [{'time': 0.044924556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.194499999999544e-05, 'source_diff': 2.194499999999544e-05}, {'time': 0.044953708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:22.143" endtime="20201112 12:28:22.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:22.184" level="INFO">${ACCURACY} = {'time': [0.044924556, 0.044953708, 0.044985681, 0.045011778, 0.045042903, 0.045068917, 0.045096931, 0.045123097, 0.045151028, 0.045177139, 0.045203153, 0.045229181, 0.045259333, 0.045287333, 0.045314...</msg>
<status status="PASS" starttime="20201112 12:28:22.154" endtime="20201112 12:28:22.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.195" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:28:22.193" endtime="20201112 12:28:22.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.201" level="INFO">VALUE: [2.194499999999544e-05, 2.12770000000001e-05, 2.1764000000000505e-05, 2.1291999999999145e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.1444000000002406e-05, 2.195900000000195e-05, 2.1250000000000435e-05, 2.1277999999999575e-05, 2.1291999999999145e-05, 2.1443999999995467e-05, 2.1264000000000005e-05, 2.1972000000002045e-05, 2.211099999999827e-05, 2.1722000000001795e-05, 2.1957999999995537e-05, 2.1097999999997175e-05, 2.1819999999998785e-05, 2.111100000000421e-05, 2.1291999999999145e-05, 2.1292000000006084e-05, 2.161100000000471e-05, 2.1778000000000075e-05, 2.162499999999734e-05, 2.161100000000471e-05, 2.1458000000001975e-05, 2.1277999999999575e-05, 2.1805999999999215e-05, 2.134700000000489e-05, 2.113900000000335e-05, 2.111100000000421e-05, 2.218099999999612e-05, 2.1514000000000255e-05, 2.162499999999734e-05, 2.1277999999999575e-05, 2.1472000000001545e-05, 2.1707999999995287e-05, 2.144499999999494e-05, 2.111099999999727e-05, 2.112500000000378e-05, 2.111099999999727e-05, 2.162499999999734e-05, 2.1486000000001115e-05, 2.166699999999605e-05, 2.1944000000002906e-05, 2.183299999999888e-05, 2.179100000000017e-05, 2.1277999999999575e-05]</msg>
<status status="PASS" starttime="20201112 12:28:22.198" endtime="20201112 12:28:22.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.186" endtime="20201112 12:28:22.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.211" endtime="20201112 12:28:22.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:22.219" endtime="20201112 12:28:22.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.214" endtime="20201112 12:28:22.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.205" endtime="20201112 12:28:22.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.701" endtime="20201112 12:28:22.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.699" endtime="20201112 12:28:22.245"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.267" endtime="20201112 12:28:22.282"></status>
</kw>
<msg timestamp="20201112 12:28:22.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:22.264" endtime="20201112 12:28:22.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:22.286" endtime="20201112 12:28:22.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.292" endtime="20201112 12:28:22.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.257" endtime="20201112 12:28:22.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.251" endtime="20201112 12:28:22.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.316" endtime="20201112 12:28:22.650"></status>
</kw>
<msg timestamp="20201112 12:28:22.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040467292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.312" endtime="20201112 12:28:22.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040467292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.660" endtime="20201112 12:28:22.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.679" endtime="20201112 12:28:22.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.305" endtime="20201112 12:28:22.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.300" endtime="20201112 12:28:22.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:22.696" level="INFO">${RESULT} = [{'time': 0.040467292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1598000000004614e-05, 'source_diff': 2.1598000000004614e-05}, {'time': 0.040495292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:22.687" endtime="20201112 12:28:22.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:22.728" level="INFO">${ACCURACY} = {'time': [0.040467292, 0.040495292, 0.040525347, 0.040554444, 0.040586569, 0.040617639, 0.040649639, 0.040680736, 0.040708722, 0.040740833, 0.040770931, 0.040802958, 0.040835069, 0.040861083, 0.040893...</msg>
<status status="PASS" starttime="20201112 12:28:22.698" endtime="20201112 12:28:22.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.743" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:28:22.737" endtime="20201112 12:28:22.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.748" level="INFO">VALUE: [2.1598000000004614e-05, 2.1291999999999145e-05, 2.1458000000001975e-05, 2.1458000000001975e-05, 2.112500000000378e-05, 2.1957999999995537e-05, 2.109700000000464e-05, 2.1764000000000505e-05, 2.1277999999999575e-05, 2.10969999999977e-05, 2.1612000000004183e-05, 2.1958000000002476e-05, 2.109700000000464e-05, 2.162499999999734e-05, 2.113900000000335e-05, 2.140300000000317e-05, 2.1222000000001295e-05, 2.143100000000231e-05, 2.1444000000002406e-05, 2.1250000000000435e-05, 2.1943999999995967e-05, 2.184700000000539e-05, 2.179100000000017e-05, 2.1111999999996744e-05, 2.1264000000000005e-05, 2.1778000000000075e-05, 2.187499999999759e-05, 2.162499999999734e-05, 2.1458000000001975e-05, 2.1791999999999645e-05, 2.161099999999777e-05, 2.1778000000000075e-05, 2.112500000000378e-05, 2.112499999999684e-05, 2.1791999999999645e-05, 2.163899999999691e-05, 2.111099999999727e-05, 2.144500000000188e-05, 2.112500000000378e-05, 2.215299999999698e-05, 2.162499999999734e-05, 2.194500000000238e-05, 2.1112000000003683e-05, 2.1583999999998105e-05, 2.1971999999995107e-05, 2.1764000000000505e-05, 2.116699999999555e-05, 2.1764000000000505e-05, 2.1791999999999645e-05, 2.212499999999784e-05]</msg>
<status status="PASS" starttime="20201112 12:28:22.745" endtime="20201112 12:28:22.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.730" endtime="20201112 12:28:22.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.758" endtime="20201112 12:28:22.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:22.766" endtime="20201112 12:28:22.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.762" endtime="20201112 12:28:22.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.753" endtime="20201112 12:28:22.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.247" endtime="20201112 12:28:22.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.246" endtime="20201112 12:28:22.792"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.815" endtime="20201112 12:28:22.830"></status>
</kw>
<msg timestamp="20201112 12:28:22.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:22.811" endtime="20201112 12:28:22.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:22.833" endtime="20201112 12:28:22.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.839" endtime="20201112 12:28:22.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.804" endtime="20201112 12:28:22.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.798" endtime="20201112 12:28:22.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.862" endtime="20201112 12:28:23.198"></status>
</kw>
<msg timestamp="20201112 12:28:23.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040333653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040355583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.859" endtime="20201112 12:28:23.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040333653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040355583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.208" endtime="20201112 12:28:23.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.227" endtime="20201112 12:28:23.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.852" endtime="20201112 12:28:23.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.847" endtime="20201112 12:28:23.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.244" level="INFO">${RESULT} = [{'time': 0.040355583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1930000000003336e-05, 'source_diff': 2.1930000000003336e-05}, {'time': 0.040382681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:23.235" endtime="20201112 12:28:23.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:23.276" level="INFO">${ACCURACY} = {'time': [0.040355583, 0.040382681, 0.040412694, 0.040439806, 0.040465819, 0.040493903, 0.040522042, 0.040551, 0.040577, 0.040603181, 0.040633278, 0.040660167, 0.040689319, 0.040719347, 0.040749417, 0...</msg>
<status status="PASS" starttime="20201112 12:28:23.246" endtime="20201112 12:28:23.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.287" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:28:23.284" endtime="20201112 12:28:23.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.292" level="INFO">VALUE: [2.1930000000003336e-05, 2.144499999999494e-05, 2.162499999999734e-05, 2.1362000000003933e-05, 2.1416000000003266e-05, 2.1264000000000005e-05, 2.193100000000281e-05, 2.162499999999734e-05, 2.1277999999999575e-05, 2.144500000000188e-05, 2.1291999999999145e-05, 2.143099999999537e-05, 2.161100000000471e-05, 2.1958000000002476e-05, 2.1791999999999645e-05, 2.1666000000003516e-05, 2.162499999999734e-05, 2.129099999999967e-05, 2.1249999999993496e-05, 2.212499999999784e-05, 2.1277999999999575e-05, 2.19169999999963e-05, 2.195900000000195e-05, 2.1208000000001725e-05, 2.1305999999998715e-05, 2.197300000000152e-05, 2.1943999999995967e-05, 2.1443999999995467e-05, 2.1750000000000935e-05, 2.194499999999544e-05, 2.179100000000017e-05, 2.1278000000006514e-05, 2.130499999999924e-05, 2.161099999999777e-05, 2.111100000000421e-05, 2.111099999999727e-05, 2.17770000000006e-05, 2.193100000000281e-05, 2.148700000000059e-05, 2.17770000000006e-05, 2.1486000000001115e-05, 2.194500000000238e-05, 2.161100000000471e-05, 2.1443999999995467e-05, 2.180499999999974e-05, 2.1943999999995967e-05, 2.212499999999784e-05, 2.1277999999999575e-05, 2.179100000000017e-05, 2.1084000000004544e-05]</msg>
<status status="PASS" starttime="20201112 12:28:23.289" endtime="20201112 12:28:23.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.278" endtime="20201112 12:28:23.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.302" endtime="20201112 12:28:23.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:23.312" endtime="20201112 12:28:23.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.306" endtime="20201112 12:28:23.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.297" endtime="20201112 12:28:23.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.794" endtime="20201112 12:28:23.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.793" endtime="20201112 12:28:23.337"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.360" endtime="20201112 12:28:23.375"></status>
</kw>
<msg timestamp="20201112 12:28:23.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.357" endtime="20201112 12:28:23.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.378" endtime="20201112 12:28:23.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.385" endtime="20201112 12:28:23.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.349" endtime="20201112 12:28:23.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.344" endtime="20201112 12:28:23.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.408" endtime="20201112 12:28:23.744"></status>
</kw>
<msg timestamp="20201112 12:28:23.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040267278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040288917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.405" endtime="20201112 12:28:23.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040267278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040288917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.753" endtime="20201112 12:28:23.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.772" endtime="20201112 12:28:23.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.397" endtime="20201112 12:28:23.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.393" endtime="20201112 12:28:23.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.789" level="INFO">${RESULT} = [{'time': 0.040288917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.163900000000385e-05, 'source_diff': 2.163900000000385e-05}, {'time': 0.040315944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:23.780" endtime="20201112 12:28:23.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:23.821" level="INFO">${ACCURACY} = {'time': [0.040288917, 0.040315944, 0.040343028, 0.040374, 0.040401069, 0.040427194, 0.04045825, 0.040488361, 0.040516403, 0.040546486, 0.040576458, 0.040603611, 0.040632542, 0.040659694, 0.040687681,...</msg>
<status status="PASS" starttime="20201112 12:28:23.792" endtime="20201112 12:28:23.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.832" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:28:23.830" endtime="20201112 12:28:23.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.837" level="INFO">VALUE: [2.163900000000385e-05, 2.12770000000001e-05, 2.159700000000514e-05, 2.141700000000274e-05, 2.129099999999967e-05, 2.161099999999777e-05, 2.162500000000428e-05, 2.111099999999727e-05, 2.1055999999998465e-05, 2.1277999999999575e-05, 2.180499999999974e-05, 2.1291999999999145e-05, 2.1291999999999145e-05, 2.126300000000053e-05, 2.1778000000000075e-05, 2.1458000000001975e-05, 2.187500000000453e-05, 2.1457999999995037e-05, 2.1791999999999645e-05, 2.1944000000002906e-05, 2.1277999999999575e-05, 2.1791999999999645e-05, 2.1791999999999645e-05, 2.1930000000003336e-05, 2.1443999999995467e-05, 2.111099999999727e-05, 2.1778000000000075e-05, 2.194500000000238e-05, 2.211099999999827e-05, 2.1791999999999645e-05, 2.1458000000001975e-05, 2.1277999999999575e-05, 2.147300000000102e-05, 2.195900000000195e-05, 2.130499999999924e-05, 2.1291999999999145e-05, 2.1764000000000505e-05, 2.1915999999996827e-05, 2.1611999999997245e-05, 2.111099999999727e-05, 2.194500000000238e-05, 2.158299999999863e-05, 2.163899999999691e-05, 2.194500000000238e-05, 2.112500000000378e-05, 2.1222000000001295e-05, 2.1264000000000005e-05, 2.1944000000002906e-05, 2.1750000000000935e-05, 2.1458000000001975e-05]</msg>
<status status="PASS" starttime="20201112 12:28:23.834" endtime="20201112 12:28:23.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.823" endtime="20201112 12:28:23.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.847" endtime="20201112 12:28:23.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:23.855" endtime="20201112 12:28:23.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.851" endtime="20201112 12:28:23.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.842" endtime="20201112 12:28:23.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.339" endtime="20201112 12:28:23.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.338" endtime="20201112 12:28:23.881"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.905" endtime="20201112 12:28:23.920"></status>
</kw>
<msg timestamp="20201112 12:28:23.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.902" endtime="20201112 12:28:23.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.923" endtime="20201112 12:28:23.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.930" endtime="20201112 12:28:23.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.895" endtime="20201112 12:28:23.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.887" endtime="20201112 12:28:23.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.953" endtime="20201112 12:28:24.288"></status>
</kw>
<msg timestamp="20201112 12:28:24.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041947653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041969597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.950" endtime="20201112 12:28:24.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041947653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041969597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.297" endtime="20201112 12:28:24.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.316" endtime="20201112 12:28:24.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.943" endtime="20201112 12:28:24.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.938" endtime="20201112 12:28:24.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:24.334" level="INFO">${RESULT} = [{'time': 0.041969597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1943999999995967e-05, 'source_diff': 2.1943999999995967e-05}, {'time': 0.041997764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:24.324" endtime="20201112 12:28:24.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:24.365" level="INFO">${ACCURACY} = {'time': [0.041969597, 0.041997764, 0.042029708, 0.042058861, 0.042084986, 0.042113042, 0.042143069, 0.042171167, 0.042199097, 0.042225264, 0.042254333, 0.042282375, 0.042310347, 0.042340556, 0.042370...</msg>
<status status="PASS" starttime="20201112 12:28:24.336" endtime="20201112 12:28:24.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.376" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:28:24.374" endtime="20201112 12:28:24.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.381" level="INFO">VALUE: [2.1943999999995967e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.1277999999999575e-05, 2.1486000000001115e-05, 2.17090000000017e-05, 2.1957999999995537e-05, 2.1291999999999145e-05, 2.187499999999759e-05, 2.112499999999684e-05, 2.1943999999995967e-05, 2.186099999999802e-05, 2.1957999999995537e-05, 2.1305999999998715e-05, 2.1791999999999645e-05, 2.162499999999734e-05, 2.195900000000195e-05, 2.14169999999958e-05, 2.1485999999994176e-05, 2.193099999999587e-05, 2.111099999999727e-05, 2.131899999999881e-05, 2.193099999999587e-05, 2.194500000000238e-05, 2.161100000000471e-05, 2.161100000000471e-05, 2.112499999999684e-05, 2.162499999999734e-05, 2.1458000000001975e-05, 2.1084000000004544e-05, 2.1443999999995467e-05, 2.112500000000378e-05, 2.161099999999777e-05, 2.161099999999777e-05, 2.162499999999734e-05, 2.2028000000000325e-05, 2.161099999999777e-05, 2.194500000000238e-05, 2.10969999999977e-05, 2.147300000000102e-05, 2.161099999999777e-05, 2.1458000000001975e-05, 2.1791999999999645e-05, 2.111099999999727e-05, 2.161099999999777e-05, 2.1972000000002045e-05, 2.190299999999673e-05, 2.194499999999544e-05, 2.1944000000002906e-05, 2.1708000000002226e-05]</msg>
<status status="PASS" starttime="20201112 12:28:24.378" endtime="20201112 12:28:24.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.367" endtime="20201112 12:28:24.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.391" endtime="20201112 12:28:24.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:24.399" endtime="20201112 12:28:24.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.395" endtime="20201112 12:28:24.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.386" endtime="20201112 12:28:24.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.883" endtime="20201112 12:28:24.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.882" endtime="20201112 12:28:24.425"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.448" endtime="20201112 12:28:24.464"></status>
</kw>
<msg timestamp="20201112 12:28:24.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:24.445" endtime="20201112 12:28:24.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:24.468" endtime="20201112 12:28:24.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.474" endtime="20201112 12:28:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.437" endtime="20201112 12:28:24.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.432" endtime="20201112 12:28:24.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.498" endtime="20201112 12:28:24.832"></status>
</kw>
<msg timestamp="20201112 12:28:24.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042006792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042028056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.494" endtime="20201112 12:28:24.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042006792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042028056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.842" endtime="20201112 12:28:24.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.861" endtime="20201112 12:28:24.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.487" endtime="20201112 12:28:24.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.482" endtime="20201112 12:28:24.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:24.878" level="INFO">${RESULT} = [{'time': 0.042028056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1264000000000005e-05, 'source_diff': 2.1264000000000005e-05}, {'time': 0.042058111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:24.869" endtime="20201112 12:28:24.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:24.910" level="INFO">${ACCURACY} = {'time': [0.042028056, 0.042058111, 0.042085222, 0.042116208, 0.042142194, 0.042170389, 0.042203403, 0.042232417, 0.042258556, 0.042289583, 0.042318653, 0.042350722, 0.042382778, 0.042412917, 0.042440...</msg>
<status status="PASS" starttime="20201112 12:28:24.880" endtime="20201112 12:28:24.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.921" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:28:24.918" endtime="20201112 12:28:24.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.926" level="INFO">VALUE: [2.1264000000000005e-05, 2.1458000000001975e-05, 2.1943999999995967e-05, 2.17770000000006e-05, 2.1444000000002406e-05, 2.1778000000000075e-05, 2.2014000000000755e-05, 2.111100000000421e-05, 2.1612000000004183e-05, 2.12770000000001e-05, 2.111099999999727e-05, 2.1180000000002586e-05, 2.194500000000238e-05, 2.112500000000378e-05, 2.1791999999999645e-05, 2.1972000000002045e-05, 2.112500000000378e-05, 2.144500000000188e-05, 2.17770000000006e-05, 2.1637999999997437e-05, 2.1791999999999645e-05, 2.112499999999684e-05, 2.1612000000004183e-05, 2.1221999999994356e-05, 2.1277999999999575e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.111100000000421e-05, 2.161100000000471e-05, 2.1957999999995537e-05, 2.1278000000006514e-05, 2.1778000000000075e-05, 2.1347999999997425e-05, 2.1500000000000685e-05, 2.176300000000103e-05, 2.1749999999993996e-05, 2.1638000000004376e-05, 2.1916000000003766e-05, 2.1778000000000075e-05, 2.130500000000618e-05, 2.162500000000428e-05, 2.1597999999997675e-05, 2.1458000000001975e-05, 2.161100000000471e-05, 2.129099999999967e-05, 2.1930000000003336e-05, 2.111100000000421e-05, 2.141700000000274e-05, 2.1291999999999145e-05]</msg>
<status status="PASS" starttime="20201112 12:28:24.923" endtime="20201112 12:28:24.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.911" endtime="20201112 12:28:24.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.935" endtime="20201112 12:28:24.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:24.944" endtime="20201112 12:28:24.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.939" endtime="20201112 12:28:24.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.931" endtime="20201112 12:28:24.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.427" endtime="20201112 12:28:24.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.426" endtime="20201112 12:28:24.970"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.992" endtime="20201112 12:28:25.008"></status>
</kw>
<msg timestamp="20201112 12:28:25.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:24.989" endtime="20201112 12:28:25.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:25.011" endtime="20201112 12:28:25.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.017" endtime="20201112 12:28:25.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.982" endtime="20201112 12:28:25.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.976" endtime="20201112 12:28:25.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.044" endtime="20201112 12:28:25.377"></status>
</kw>
<msg timestamp="20201112 12:28:25.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040361208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040390069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.041" endtime="20201112 12:28:25.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040361208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040390069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.387" endtime="20201112 12:28:25.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.406" endtime="20201112 12:28:25.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.030" endtime="20201112 12:28:25.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.025" endtime="20201112 12:28:25.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.423" level="INFO">${RESULT} = [{'time': 0.040390069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8860999999998083e-05, 'source_diff': 2.8860999999998083e-05}, {'time': 0.040428194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:25.414" endtime="20201112 12:28:25.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:25.454" level="INFO">${ACCURACY} = {'time': [0.040390069, 0.040428194, 0.040465347, 0.040503458, 0.040537528, 0.0405735, 0.040612611, 0.040648667, 0.040684847, 0.040719028, 0.040752931, 0.040788097, 0.040826125, 0.040865264, 0.04090441...</msg>
<status status="PASS" starttime="20201112 12:28:25.425" endtime="20201112 12:28:25.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.465" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:28:25.463" endtime="20201112 12:28:25.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.471" level="INFO">VALUE: [2.8860999999998083e-05, 2.8874999999997653e-05, 2.8222000000001357e-05, 2.8777000000000663e-05, 2.8750000000000997e-05, 2.8736000000001427e-05, 2.8736000000001427e-05, 2.8374999999997152e-05, 2.8722000000001857e-05, 2.8291999999999207e-05, 2.8083999999997666e-05, 2.90970000000057e-05, 2.8082999999998193e-05, 2.8569999999998597e-05, 2.8250000000000497e-05, 2.8527999999999887e-05, 2.8568999999999123e-05, 2.9055999999999527e-05, 2.89170000000033e-05, 2.8235999999993988e-05, 2.8583999999998166e-05, 2.8722000000001857e-05, 2.8069000000005562e-05, 2.890199999999732e-05, 2.8930999999995932e-05, 2.8027999999999387e-05, 2.8374999999997152e-05, 2.838900000000366e-05, 2.843100000000237e-05, 2.9068999999999623e-05, 2.8250000000000497e-05, 2.894399999999603e-05, 2.8222000000001357e-05, 2.8902000000004258e-05, 2.8250000000000497e-05, 2.8291999999999207e-05, 2.8749999999994058e-05, 2.840300000000323e-05, 2.8568999999999123e-05, 2.8236000000000927e-05, 2.8568999999999123e-05, 2.8013999999999817e-05, 2.8598000000004675e-05, 2.8736000000001427e-05, 2.8624999999997403e-05, 2.9068999999999623e-05, 2.8569999999998597e-05, 2.9041999999999957e-05, 2.9082999999999193e-05, 2.8374999999997152e-05]</msg>
<status status="PASS" starttime="20201112 12:28:25.468" endtime="20201112 12:28:25.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.456" endtime="20201112 12:28:25.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.480" endtime="20201112 12:28:25.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:25.489" endtime="20201112 12:28:25.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.484" endtime="20201112 12:28:25.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.476" endtime="20201112 12:28:25.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.972" endtime="20201112 12:28:25.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.971" endtime="20201112 12:28:25.515"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.537" endtime="20201112 12:28:25.552"></status>
</kw>
<msg timestamp="20201112 12:28:25.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:25.534" endtime="20201112 12:28:25.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:25.556" endtime="20201112 12:28:25.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.562" endtime="20201112 12:28:25.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.527" endtime="20201112 12:28:25.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.521" endtime="20201112 12:28:25.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.585" endtime="20201112 12:28:25.921"></status>
</kw>
<msg timestamp="20201112 12:28:25.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040325653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04035425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:25.582" endtime="20201112 12:28:25.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040325653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04035425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:25.931" endtime="20201112 12:28:25.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.950" endtime="20201112 12:28:25.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.575" endtime="20201112 12:28:25.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.570" endtime="20201112 12:28:25.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.967" level="INFO">${RESULT} = [{'time': 0.04035425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8596999999998263e-05, 'source_diff': 2.8596999999998263e-05}, {'time': 0.040388347, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:28:25.958" endtime="20201112 12:28:25.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:25.999" level="INFO">${ACCURACY} = {'time': [0.04035425, 0.040388347, 0.040425333, 0.040460431, 0.040495569, 0.040533583, 0.040569847, 0.040606889, 0.040644042, 0.040679056, 0.040712083, 0.040749153, 0.040783208, 0.040818319, 0.0408574...</msg>
<status status="PASS" starttime="20201112 12:28:25.970" endtime="20201112 12:28:25.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.010" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:28:26.008" endtime="20201112 12:28:26.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.015" level="INFO">VALUE: [2.8596999999998263e-05, 2.9068999999999623e-05, 2.8582999999998693e-05, 2.8083999999997666e-05, 2.8750000000000997e-05, 2.8568999999999123e-05, 2.8486000000001177e-05, 2.840300000000323e-05, 2.845900000000151e-05, 2.9083999999998666e-05, 2.808300000000513e-05, 2.8584000000005105e-05, 2.8026999999999913e-05, 2.8290999999999733e-05, 2.8582999999998693e-05, 2.8584000000005105e-05, 2.8888999999997222e-05, 2.84170000000028e-05, 2.8348000000004425e-05, 2.8568999999999123e-05, 2.838900000000366e-05, 2.8582999999998693e-05, 2.841599999999639e-05, 2.9096999999998763e-05, 2.8708999999994822e-05, 2.8736000000001427e-05, 2.8388999999996722e-05, 2.9096999999998763e-05, 2.8916000000003828e-05, 2.890300000000373e-05, 2.8208000000001787e-05, 2.8568999999999123e-05, 2.819500000000169e-05, 2.9082999999999193e-05, 2.8888999999997222e-05, 2.8736000000001427e-05, 2.8236000000000927e-05, 2.8888999999997222e-05, 2.8568999999999123e-05, 2.8986000000001677e-05, 2.9083999999998666e-05, 2.8569999999998597e-05, 2.8082999999998193e-05, 2.89170000000033e-05, 2.8236000000000927e-05, 2.840300000000323e-05, 2.8236000000000927e-05, 2.8582999999998693e-05, 2.82370000000004e-05, 2.9055999999999527e-05]</msg>
<status status="PASS" starttime="20201112 12:28:26.012" endtime="20201112 12:28:26.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.000" endtime="20201112 12:28:26.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.025" endtime="20201112 12:28:26.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:26.033" endtime="20201112 12:28:26.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.029" endtime="20201112 12:28:26.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.020" endtime="20201112 12:28:26.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.517" endtime="20201112 12:28:26.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.515" endtime="20201112 12:28:26.059"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.082" endtime="20201112 12:28:26.097"></status>
</kw>
<msg timestamp="20201112 12:28:26.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:26.078" endtime="20201112 12:28:26.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:26.100" endtime="20201112 12:28:26.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.107" endtime="20201112 12:28:26.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.071" endtime="20201112 12:28:26.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.065" endtime="20201112 12:28:26.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.131" endtime="20201112 12:28:26.467"></status>
</kw>
<msg timestamp="20201112 12:28:26.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040453694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.128" endtime="20201112 12:28:26.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040453694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.476" endtime="20201112 12:28:26.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.495" endtime="20201112 12:28:26.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.120" endtime="20201112 12:28:26.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.115" endtime="20201112 12:28:26.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:26.513" level="INFO">${RESULT} = [{'time': 0.040482042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8348000000004425e-05, 'source_diff': 2.8348000000004425e-05}, {'time': 0.040519236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:26.504" endtime="20201112 12:28:26.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:26.544" level="INFO">${ACCURACY} = {'time': [0.040482042, 0.040519236, 0.040558208, 0.040592264, 0.040629361, 0.040667444, 0.040706625, 0.040740625, 0.040774764, 0.040810847, 0.040849792, 0.040888042, 0.040923083, 0.040958069, 0.040992...</msg>
<status status="PASS" starttime="20201112 12:28:26.515" endtime="20201112 12:28:26.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.555" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:28:26.553" endtime="20201112 12:28:26.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.561" level="INFO">VALUE: [2.8348000000004425e-05, 2.9110999999998333e-05, 2.9068999999999623e-05, 2.8000000000000247e-05, 2.8554999999999553e-05, 2.8582999999998693e-05, 2.893100000000287e-05, 2.9082999999999193e-05, 2.9096999999998763e-05, 2.9055000000000053e-05, 2.8570000000005535e-05, 2.8264000000000067e-05, 2.8736000000001427e-05, 2.841599999999639e-05, 2.822300000000083e-05, 2.8569999999998597e-05, 2.8777000000000663e-05, 2.893100000000287e-05, 2.9097999999998236e-05, 2.8555999999999027e-05, 2.8374999999997152e-05, 2.8721999999994918e-05, 2.8584000000005105e-05, 2.8082999999998193e-05, 2.9083999999998666e-05, 2.89170000000033e-05, 2.8764000000000567e-05, 2.9068999999999623e-05, 2.8527999999999887e-05, 2.8236000000000927e-05, 2.8569999999998597e-05, 2.8070000000005035e-05, 2.8068999999998623e-05, 2.872300000000133e-05, 2.8070000000005035e-05, 2.8277999999999637e-05, 2.8250000000000497e-05, 2.8082999999998193e-05, 2.8541999999999457e-05, 2.8541999999999457e-05, 2.8568999999999123e-05, 2.8555999999999027e-05, 2.811100000000427e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8582999999998693e-05, 2.8582999999998693e-05, 2.8554999999999553e-05, 2.8916999999996362e-05, 2.8040999999999483e-05]</msg>
<status status="PASS" starttime="20201112 12:28:26.557" endtime="20201112 12:28:26.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.546" endtime="20201112 12:28:26.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.570" endtime="20201112 12:28:26.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:26.579" endtime="20201112 12:28:26.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.574" endtime="20201112 12:28:26.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.566" endtime="20201112 12:28:26.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.061" endtime="20201112 12:28:26.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.060" endtime="20201112 12:28:26.605"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.627" endtime="20201112 12:28:26.643"></status>
</kw>
<msg timestamp="20201112 12:28:26.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:26.624" endtime="20201112 12:28:26.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:26.646" endtime="20201112 12:28:26.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.652" endtime="20201112 12:28:26.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.617" endtime="20201112 12:28:26.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.611" endtime="20201112 12:28:26.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.676" endtime="20201112 12:28:27.022"></status>
</kw>
<msg timestamp="20201112 12:28:27.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040422403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040451125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.672" endtime="20201112 12:28:27.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040422403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040451125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.032" endtime="20201112 12:28:27.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.050" endtime="20201112 12:28:27.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.665" endtime="20201112 12:28:27.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.660" endtime="20201112 12:28:27.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:27.069" level="INFO">${RESULT} = [{'time': 0.040451125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8721999999994918e-05, 'source_diff': 2.8721999999994918e-05}, {'time': 0.040485264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:27.060" endtime="20201112 12:28:27.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:27.100" level="INFO">${ACCURACY} = {'time': [0.040451125, 0.040485264, 0.040521208, 0.040559333, 0.040593375, 0.040628514, 0.040662514, 0.040701583, 0.04073575, 0.040770819, 0.040809792, 0.040843972, 0.040879, 0.040915, 0.040950069, 0....</msg>
<status status="PASS" starttime="20201112 12:28:27.071" endtime="20201112 12:28:27.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.111" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:28:27.109" endtime="20201112 12:28:27.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.117" level="INFO">VALUE: [2.8721999999994918e-05, 2.8888999999997222e-05, 2.838900000000366e-05, 2.8069000000005562e-05, 2.888900000000416e-05, 2.8221999999994418e-05, 2.8221999999994418e-05, 2.891599999999689e-05, 2.84170000000028e-05, 2.8763000000001093e-05, 2.8555999999999027e-05, 2.8902999999996792e-05, 2.8568999999999123e-05, 2.8500000000000747e-05, 2.8540999999999983e-05, 2.8236000000000927e-05, 2.8222000000001357e-05, 2.819399999999528e-05, 2.8582999999998693e-05, 2.8264000000000067e-05, 2.8236000000000927e-05, 2.8554999999999553e-05, 2.8860999999998083e-05, 2.8068999999998623e-05, 2.8250000000000497e-05, 2.8416999999995862e-05, 2.838900000000366e-05, 2.8540999999999983e-05, 2.8222000000001357e-05, 2.8583999999998166e-05, 2.8082999999998193e-05, 2.8750000000000997e-05, 2.818100000000212e-05, 2.848700000000065e-05, 2.8582999999998693e-05, 2.8736000000001427e-05, 2.8568999999999123e-05, 2.8749999999994058e-05, 2.872300000000133e-05, 2.9069999999999097e-05, 2.8792000000006646e-05, 2.8736000000001427e-05, 2.8388999999996722e-05, 2.8027999999999387e-05, 2.9069999999999097e-05, 2.8207999999994848e-05, 2.8388999999996722e-05, 2.865300000000348e-05, 2.8069000000005562e-05, 2.8874999999997653e-05]</msg>
<status status="PASS" starttime="20201112 12:28:27.114" endtime="20201112 12:28:27.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.102" endtime="20201112 12:28:27.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.130" endtime="20201112 12:28:27.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:27.139" endtime="20201112 12:28:27.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.134" endtime="20201112 12:28:27.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.126" endtime="20201112 12:28:27.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.607" endtime="20201112 12:28:27.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.605" endtime="20201112 12:28:27.165"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.189" endtime="20201112 12:28:27.204"></status>
</kw>
<msg timestamp="20201112 12:28:27.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:27.185" endtime="20201112 12:28:27.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:27.208" endtime="20201112 12:28:27.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.214" endtime="20201112 12:28:27.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.178" endtime="20201112 12:28:27.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.172" endtime="20201112 12:28:27.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.237" endtime="20201112 12:28:27.572"></status>
</kw>
<msg timestamp="20201112 12:28:27.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042048625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042077347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.234" endtime="20201112 12:28:27.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042048625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042077347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.581" endtime="20201112 12:28:27.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.600" endtime="20201112 12:28:27.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.227" endtime="20201112 12:28:27.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.222" endtime="20201112 12:28:27.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:27.621" level="INFO">${RESULT} = [{'time': 0.042077347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8722000000001857e-05, 'source_diff': 2.8722000000001857e-05}, {'time': 0.042114403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:27.612" endtime="20201112 12:28:27.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:27.652" level="INFO">${ACCURACY} = {'time': [0.042077347, 0.042114403, 0.042152444, 0.042186583, 0.042222681, 0.042259736, 0.042293736, 0.042328847, 0.042361847, 0.042397028, 0.042434056, 0.042468181, 0.042505181, 0.042541264, 0.042577...</msg>
<status status="PASS" starttime="20201112 12:28:27.623" endtime="20201112 12:28:27.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.663" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:28:27.661" endtime="20201112 12:28:27.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.669" level="INFO">VALUE: [2.8722000000001857e-05, 2.888900000000416e-05, 2.8082999999998193e-05, 2.890199999999732e-05, 2.8430999999995432e-05, 2.8902999999996792e-05, 2.8736000000001427e-05, 2.8430000000002897e-05, 2.840300000000323e-05, 2.8778000000000137e-05, 2.8888999999997222e-05, 2.9083999999998666e-05, 2.840300000000323e-05, 2.8736000000001427e-05, 2.8402999999996292e-05, 2.8874999999997653e-05, 2.8056000000005465e-05, 2.8570000000005535e-05, 2.8235999999993988e-05, 2.9110999999998333e-05, 2.870900000000176e-05, 2.8568999999999123e-05, 2.8846999999998513e-05, 2.838900000000366e-05, 2.822300000000083e-05, 2.8069000000005562e-05, 2.84170000000028e-05, 2.8874999999997653e-05, 2.858300000000563e-05, 2.8721999999994918e-05, 2.8722999999994392e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.8971999999995168e-05, 2.8041999999998957e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.8570000000005535e-05, 2.8902999999996792e-05, 2.891599999999689e-05, 2.9068999999999623e-05, 2.8554999999999553e-05, 2.8402999999996292e-05, 2.8388999999996722e-05, 2.8596999999998263e-05, 2.893100000000287e-05, 2.8416999999995862e-05, 2.890300000000373e-05, 2.8804999999999803e-05, 2.8541999999999457e-05]</msg>
<status status="PASS" starttime="20201112 12:28:27.665" endtime="20201112 12:28:27.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.654" endtime="20201112 12:28:27.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.678" endtime="20201112 12:28:27.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:27.686" endtime="20201112 12:28:27.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.682" endtime="20201112 12:28:27.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.674" endtime="20201112 12:28:27.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.167" endtime="20201112 12:28:27.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.166" endtime="20201112 12:28:27.712"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.735" endtime="20201112 12:28:27.751"></status>
</kw>
<msg timestamp="20201112 12:28:27.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:27.732" endtime="20201112 12:28:27.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:27.754" endtime="20201112 12:28:27.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.760" endtime="20201112 12:28:27.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.724" endtime="20201112 12:28:27.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.719" endtime="20201112 12:28:27.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.783" endtime="20201112 12:28:28.118"></status>
</kw>
<msg timestamp="20201112 12:28:28.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040511292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.780" endtime="20201112 12:28:28.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040511292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.127" endtime="20201112 12:28:28.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.146" endtime="20201112 12:28:28.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.773" endtime="20201112 12:28:28.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.768" endtime="20201112 12:28:28.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.165" level="INFO">${RESULT} = [{'time': 0.040511292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8500000000000747e-05, 'source_diff': 2.8500000000000747e-05}, {'time': 0.040551347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:28.156" endtime="20201112 12:28:28.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:28.197" level="INFO">${ACCURACY} = {'time': [0.040511292, 0.040551347, 0.040591417, 0.040630542, 0.040664583, 0.040699681, 0.040736736, 0.040775722, 0.040812875, 0.040850889, 0.040885, 0.040920139, 0.040959069, 0.040995292, 0.041029306...</msg>
<status status="PASS" starttime="20201112 12:28:28.167" endtime="20201112 12:28:28.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.208" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:28:28.206" endtime="20201112 12:28:28.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.214" level="INFO">VALUE: [2.8500000000000747e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.8236000000000927e-05, 2.8388999999996722e-05, 2.890300000000373e-05, 2.9082999999999193e-05, 2.8736000000001427e-05, 2.8568999999999123e-05, 2.8069999999998096e-05, 2.8236000000000927e-05, 2.8736000000001427e-05, 2.8568999999999123e-05, 2.8570000000005535e-05, 2.82370000000004e-05, 2.8236000000000927e-05, 2.8249999999993558e-05, 2.8124999999996902e-05, 2.82370000000004e-05, 2.8888999999997222e-05, 2.8902000000004258e-05, 2.8694000000002717e-05, 2.8222000000001357e-05, 2.87370000000009e-05, 2.8207999999994848e-05, 2.8263000000000593e-05, 2.8236000000000927e-05, 2.82370000000004e-05, 2.838900000000366e-05, 2.87370000000009e-05, 2.8986000000001677e-05, 2.9069999999999097e-05, 2.8292000000006146e-05, 2.869500000000219e-05, 2.9068999999999623e-05, 2.841599999999639e-05, 2.87370000000009e-05, 2.8250000000000497e-05, 2.838900000000366e-05, 2.8222000000001357e-05, 2.812500000000384e-05, 2.8236000000000927e-05, 2.8541999999999457e-05, 2.9068999999999623e-05, 2.8721999999994918e-05, 2.888900000000416e-05, 2.9082999999999193e-05, 2.8236000000000927e-05, 2.8902999999996792e-05, 2.8388999999996722e-05]</msg>
<status status="PASS" starttime="20201112 12:28:28.211" endtime="20201112 12:28:28.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.199" endtime="20201112 12:28:28.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.224" endtime="20201112 12:28:28.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:28.232" endtime="20201112 12:28:28.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.228" endtime="20201112 12:28:28.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.219" endtime="20201112 12:28:28.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.714" endtime="20201112 12:28:28.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.713" endtime="20201112 12:28:28.258"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.281" endtime="20201112 12:28:28.296"></status>
</kw>
<msg timestamp="20201112 12:28:28.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:28.277" endtime="20201112 12:28:28.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:28.300" endtime="20201112 12:28:28.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.306" endtime="20201112 12:28:28.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.270" endtime="20201112 12:28:28.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.264" endtime="20201112 12:28:28.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.329" endtime="20201112 12:28:28.664"></status>
</kw>
<msg timestamp="20201112 12:28:28.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040521597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040550014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.326" endtime="20201112 12:28:28.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040521597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040550014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.673" endtime="20201112 12:28:28.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.692" endtime="20201112 12:28:28.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.319" endtime="20201112 12:28:28.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.314" endtime="20201112 12:28:28.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.711" level="INFO">${RESULT} = [{'time': 0.040550014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.84170000000028e-05, 'source_diff': 2.84170000000028e-05}, {'time': 0.040587042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:28.702" endtime="20201112 12:28:28.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:28.742" level="INFO">${ACCURACY} = {'time': [0.040550014, 0.040587042, 0.040623153, 0.04066025, 0.040697292, 0.040731403, 0.040769361, 0.040804583, 0.040842639, 0.040878625, 0.040917764, 0.040954819, 0.040987944, 0.041021958, 0.0410590...</msg>
<status status="PASS" starttime="20201112 12:28:28.714" endtime="20201112 12:28:28.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.753" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:28:28.751" endtime="20201112 12:28:28.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.759" level="INFO">VALUE: [2.84170000000028e-05, 2.9069999999999097e-05, 2.9083999999998666e-05, 2.84170000000028e-05, 2.8236000000000927e-05, 2.870900000000176e-05, 2.8221999999994418e-05, 2.891599999999689e-05, 2.9082999999999193e-05, 2.8236000000000927e-05, 2.9082999999999193e-05, 2.858300000000563e-05, 2.8736000000001427e-05, 2.8235999999993988e-05, 2.8569999999998597e-05, 2.8680999999995682e-05, 2.916599999999714e-05, 2.8070000000005035e-05, 2.8582999999998693e-05, 2.8221999999994418e-05, 2.8222000000001357e-05, 2.8041999999998957e-05, 2.837500000000409e-05, 2.8750000000000997e-05, 2.8541999999999457e-05, 2.8221999999994418e-05, 2.8902999999996792e-05, 2.8250000000000497e-05, 2.8569000000006062e-05, 2.8582999999998693e-05, 2.8763999999993628e-05, 2.8555999999999027e-05, 2.84170000000028e-05, 2.8568999999999123e-05, 2.8764000000000567e-05, 2.9055999999999527e-05, 2.820900000000126e-05, 2.8208000000001787e-05, 2.8402999999996292e-05, 2.8597999999997736e-05, 2.8736000000001427e-05, 2.8402999999996292e-05, 2.8235999999993988e-05, 2.84170000000028e-05, 2.8208000000001787e-05, 2.9083000000006132e-05, 2.8888999999997222e-05, 2.8069999999998096e-05, 2.9014000000000817e-05, 2.8236000000000927e-05]</msg>
<status status="PASS" starttime="20201112 12:28:28.756" endtime="20201112 12:28:28.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.744" endtime="20201112 12:28:28.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.768" endtime="20201112 12:28:28.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:28.777" endtime="20201112 12:28:28.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.772" endtime="20201112 12:28:28.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.764" endtime="20201112 12:28:28.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.260" endtime="20201112 12:28:28.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.259" endtime="20201112 12:28:28.803"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.825" endtime="20201112 12:28:28.841"></status>
</kw>
<msg timestamp="20201112 12:28:28.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:28.822" endtime="20201112 12:28:28.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:28.845" endtime="20201112 12:28:28.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.851" endtime="20201112 12:28:28.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.815" endtime="20201112 12:28:28.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.809" endtime="20201112 12:28:28.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.874" endtime="20201112 12:28:29.209"></status>
</kw>
<msg timestamp="20201112 12:28:29.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040520764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040556833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.871" endtime="20201112 12:28:29.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040520764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040556833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:29.219" endtime="20201112 12:28:29.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.238" endtime="20201112 12:28:29.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.864" endtime="20201112 12:28:29.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.859" endtime="20201112 12:28:29.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:29.258" level="INFO">${RESULT} = [{'time': 0.040556833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6068999999999685e-05, 'source_diff': 3.6068999999999685e-05}, {'time': 0.040597944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:29.249" endtime="20201112 12:28:29.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:29.289" level="INFO">${ACCURACY} = {'time': [0.040556833, 0.040597944, 0.040642042, 0.040683139, 0.040727264, 0.040769403, 0.040811444, 0.040851389, 0.040895528, 0.040941611, 0.040985736, 0.041028917, 0.041075014, 0.041117125, 0.041160...</msg>
<status status="PASS" starttime="20201112 12:28:29.260" endtime="20201112 12:28:29.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.300" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:28:29.297" endtime="20201112 12:28:29.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.305" level="INFO">VALUE: [3.6068999999999685e-05, 3.6040999999993606e-05, 3.591700000000336e-05, 3.575000000000106e-05, 3.520800000000185e-05, 3.587500000000465e-05, 3.5583000000005693e-05, 3.556999999999866e-05, 3.520900000000132e-05, 3.540300000000329e-05, 3.543000000000296e-05, 3.523600000000099e-05, 3.541700000000286e-05, 3.572199999999498e-05, 3.5402999999996354e-05, 3.573600000000149e-05, 3.604200000000002e-05, 3.565300000000354e-05, 3.5804999999999865e-05, 3.588900000000422e-05, 3.568000000000321e-05, 3.525000000000056e-05, 3.5568999999999185e-05, 3.605599999999959e-05, 3.508399999999773e-05, 3.540300000000329e-05, 3.5902999999996854e-05, 3.5110999999997394e-05, 3.556999999999866e-05, 3.5568999999999185e-05, 3.540300000000329e-05, 3.541700000000286e-05, 3.5888999999997284e-05, 3.536199999999712e-05, 3.6055000000000115e-05, 3.5388999999996784e-05, 3.541600000000339e-05, 3.540300000000329e-05, 3.605599999999959e-05, 3.523600000000099e-05, 3.541700000000286e-05, 3.502799999999945e-05, 3.573700000000096e-05, 3.5874999999997714e-05, 3.5416999999995924e-05, 3.538799999999731e-05, 3.525000000000056e-05, 3.606999999999916e-05, 3.5402999999996354e-05, 3.523700000000046e-05]</msg>
<status status="PASS" starttime="20201112 12:28:29.302" endtime="20201112 12:28:29.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.291" endtime="20201112 12:28:29.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.315" endtime="20201112 12:28:29.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:29.323" endtime="20201112 12:28:29.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.319" endtime="20201112 12:28:29.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.310" endtime="20201112 12:28:29.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.805" endtime="20201112 12:28:29.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.804" endtime="20201112 12:28:29.349"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.372" endtime="20201112 12:28:29.388"></status>
</kw>
<msg timestamp="20201112 12:28:29.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:29.368" endtime="20201112 12:28:29.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:29.391" endtime="20201112 12:28:29.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.397" endtime="20201112 12:28:29.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.361" endtime="20201112 12:28:29.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.355" endtime="20201112 12:28:29.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.421" endtime="20201112 12:28:29.755"></status>
</kw>
<msg timestamp="20201112 12:28:29.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040419, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:29.417" endtime="20201112 12:28:29.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040419, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:29.765" endtime="20201112 12:28:29.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.784" endtime="20201112 12:28:29.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.410" endtime="20201112 12:28:29.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.405" endtime="20201112 12:28:29.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:29.805" level="INFO">${RESULT} = [{'time': 0.040454083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.508300000000519e-05, 'source_diff': 3.508300000000519e-05}, {'time': 0.040499236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:29.796" endtime="20201112 12:28:29.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:29.836" level="INFO">${ACCURACY} = {'time': [0.040454083, 0.040499236, 0.040541375, 0.040582486, 0.040622444, 0.040663639, 0.040705639, 0.040747792, 0.040793819, 0.040836958, 0.040881083, 0.040923139, 0.040965125, 0.041007222, 0.041052...</msg>
<status status="PASS" starttime="20201112 12:28:29.807" endtime="20201112 12:28:29.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.847" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:28:29.845" endtime="20201112 12:28:29.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.853" level="INFO">VALUE: [3.508300000000519e-05, 3.543000000000296e-05, 3.6068999999999685e-05, 3.523600000000099e-05, 3.5568999999999185e-05, 3.572200000000192e-05, 3.537500000000415e-05, 3.5124999999996964e-05, 3.570800000000235e-05, 3.5582999999998755e-05, 3.5874999999997714e-05, 3.605599999999959e-05, 3.5360999999997644e-05, 3.5055000000006054e-05, 3.555599999999909e-05, 3.523599999999405e-05, 3.572200000000192e-05, 3.5554999999999615e-05, 3.5874999999997714e-05, 3.555599999999909e-05, 3.6068999999999685e-05, 3.6055000000000115e-05, 3.5416999999995924e-05, 3.588900000000422e-05, 3.573700000000096e-05, 3.522200000000142e-05, 3.588900000000422e-05, 3.530599999999884e-05, 3.573600000000149e-05, 3.572199999999498e-05, 3.591700000000336e-05, 3.540199999999688e-05, 3.604200000000002e-05, 3.5541000000000045e-05, 3.5860999999998144e-05, 3.588900000000422e-05, 3.5610999999997894e-05, 3.570800000000235e-05, 3.520800000000185e-05, 3.520800000000185e-05, 3.522200000000142e-05, 3.534700000000501e-05, 3.555599999999909e-05, 3.5874999999997714e-05, 3.593100000000293e-05, 3.52779999999997e-05, 3.5541000000000045e-05, 3.6068999999999685e-05, 3.540300000000329e-05, 3.50700000000051e-05]</msg>
<status status="PASS" starttime="20201112 12:28:29.849" endtime="20201112 12:28:29.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.838" endtime="20201112 12:28:29.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.862" endtime="20201112 12:28:29.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:29.870" endtime="20201112 12:28:29.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.866" endtime="20201112 12:28:29.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.858" endtime="20201112 12:28:29.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.351" endtime="20201112 12:28:29.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.350" endtime="20201112 12:28:29.896"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.919" endtime="20201112 12:28:29.935"></status>
</kw>
<msg timestamp="20201112 12:28:29.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:29.916" endtime="20201112 12:28:29.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:29.938" endtime="20201112 12:28:29.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.945" endtime="20201112 12:28:29.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.909" endtime="20201112 12:28:29.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.903" endtime="20201112 12:28:29.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.968" endtime="20201112 12:28:30.303"></status>
</kw>
<msg timestamp="20201112 12:28:30.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040636958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040672014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:29.965" endtime="20201112 12:28:30.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040636958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040672014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.312" endtime="20201112 12:28:30.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.331" endtime="20201112 12:28:30.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.958" endtime="20201112 12:28:30.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.953" endtime="20201112 12:28:30.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.350" level="INFO">${RESULT} = [{'time': 0.040672014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.505599999999859e-05, 'source_diff': 3.505599999999859e-05}, {'time': 0.040715222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:30.341" endtime="20201112 12:28:30.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:30.381" level="INFO">${ACCURACY} = {'time': [0.040672014, 0.040715222, 0.040758278, 0.040798347, 0.040843375, 0.040885542, 0.040929597, 0.040972653, 0.04101475, 0.041057931, 0.041100958, 0.041141069, 0.041187208, 0.041229306, 0.0412733...</msg>
<status status="PASS" starttime="20201112 12:28:30.352" endtime="20201112 12:28:30.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.392" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:28:30.390" endtime="20201112 12:28:30.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.398" level="INFO">VALUE: [3.505599999999859e-05, 3.575000000000106e-05, 3.570900000000182e-05, 3.523600000000099e-05, 3.5068999999998685e-05, 3.576399999999369e-05, 3.5388999999996784e-05, 3.572199999999498e-05, 3.590300000000379e-05, 3.5416999999995924e-05, 3.5568999999999185e-05, 3.540200000000382e-05, 3.6083000000006193e-05, 3.529199999999927e-05, 3.6068999999999685e-05, 3.6055000000000115e-05, 3.6069000000006624e-05, 3.543000000000296e-05, 3.6124999999997964e-05, 3.5680999999995744e-05, 3.588900000000422e-05, 3.522200000000142e-05, 3.5374999999997214e-05, 3.5916999999996424e-05, 3.508400000000467e-05, 3.5416999999995924e-05, 3.522200000000142e-05, 3.504199999999902e-05, 3.5360999999997644e-05, 3.536100000000458e-05, 3.6055000000000115e-05, 3.5402999999996354e-05, 3.519399999999534e-05, 3.5888999999997284e-05, 3.572199999999498e-05, 3.5554999999999615e-05, 3.6083000000006193e-05, 3.5554999999999615e-05, 3.554199999999952e-05, 3.523600000000099e-05, 3.520800000000185e-05, 3.5554999999999615e-05, 3.5402999999996354e-05, 3.5902999999996854e-05, 3.57780000000002e-05, 3.541700000000286e-05, 3.5388999999996784e-05, 3.505600000000553e-05, 3.541700000000286e-05, 3.572199999999498e-05]</msg>
<status status="PASS" starttime="20201112 12:28:30.395" endtime="20201112 12:28:30.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.383" endtime="20201112 12:28:30.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.407" endtime="20201112 12:28:30.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:30.416" endtime="20201112 12:28:30.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.411" endtime="20201112 12:28:30.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.403" endtime="20201112 12:28:30.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.898" endtime="20201112 12:28:30.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.897" endtime="20201112 12:28:30.441"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.464" endtime="20201112 12:28:30.480"></status>
</kw>
<msg timestamp="20201112 12:28:30.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:30.461" endtime="20201112 12:28:30.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:30.483" endtime="20201112 12:28:30.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.489" endtime="20201112 12:28:30.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.453" endtime="20201112 12:28:30.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.448" endtime="20201112 12:28:30.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.512" endtime="20201112 12:28:30.847"></status>
</kw>
<msg timestamp="20201112 12:28:30.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040223875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040259611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.509" endtime="20201112 12:28:30.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040223875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040259611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.856" endtime="20201112 12:28:30.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.875" endtime="20201112 12:28:30.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.502" endtime="20201112 12:28:30.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.497" endtime="20201112 12:28:30.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.894" level="INFO">${RESULT} = [{'time': 0.040259611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.573600000000149e-05, 'source_diff': 3.573600000000149e-05}, {'time': 0.040302667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:30.885" endtime="20201112 12:28:30.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:30.925" level="INFO">${ACCURACY} = {'time': [0.040259611, 0.040302667, 0.040348792, 0.040389819, 0.040435083, 0.040478167, 0.040524236, 0.040567375, 0.040613472, 0.040656528, 0.040702681, 0.040745764, 0.04078575, 0.040826986, 0.0408730...</msg>
<status status="PASS" starttime="20201112 12:28:30.896" endtime="20201112 12:28:30.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.936" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:28:30.934" endtime="20201112 12:28:30.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.941" level="INFO">VALUE: [3.573600000000149e-05, 3.573600000000149e-05, 3.523600000000099e-05, 3.5874999999997714e-05, 3.540199999999688e-05, 3.606999999999916e-05, 3.5888999999997284e-05, 3.5569000000006123e-05, 3.520799999999491e-05, 3.5402999999996354e-05, 3.555599999999909e-05, 3.606999999999916e-05, 3.5583000000005693e-05, 3.609700000000576e-05, 3.5402999999996354e-05, 3.505599999999859e-05, 3.520800000000185e-05, 3.541599999999645e-05, 3.575000000000106e-05, 3.541599999999645e-05, 3.5874999999997714e-05, 3.501399999999988e-05, 3.523600000000099e-05, 3.523700000000046e-05, 3.523600000000099e-05, 3.506999999999816e-05, 3.6055000000000115e-05, 3.611100000000533e-05, 3.523600000000099e-05, 3.608399999999873e-05, 3.522200000000142e-05, 3.558400000000517e-05, 3.573600000000149e-05, 3.5652999999996604e-05, 3.588800000000475e-05, 3.5582999999998755e-05, 3.588900000000422e-05, 3.541599999999645e-05, 3.590300000000379e-05, 3.563799999999756e-05, 3.505599999999859e-05, 3.525000000000056e-05, 3.522300000000089e-05, 3.570800000000235e-05, 3.5374999999997214e-05, 3.5874999999997714e-05, 3.5430999999995494e-05, 3.6055000000000115e-05, 3.573600000000149e-05, 3.595900000000207e-05]</msg>
<status status="PASS" starttime="20201112 12:28:30.938" endtime="20201112 12:28:30.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.927" endtime="20201112 12:28:30.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.951" endtime="20201112 12:28:30.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:30.959" endtime="20201112 12:28:30.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.955" endtime="20201112 12:28:30.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.946" endtime="20201112 12:28:30.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.443" endtime="20201112 12:28:30.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.442" endtime="20201112 12:28:30.985"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.008" endtime="20201112 12:28:31.024"></status>
</kw>
<msg timestamp="20201112 12:28:31.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:31.005" endtime="20201112 12:28:31.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:31.027" endtime="20201112 12:28:31.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.034" endtime="20201112 12:28:31.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.998" endtime="20201112 12:28:31.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.992" endtime="20201112 12:28:31.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.057" endtime="20201112 12:28:31.393"></status>
</kw>
<msg timestamp="20201112 12:28:31.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0405795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040615069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:31.054" endtime="20201112 12:28:31.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0405795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040615069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:31.402" endtime="20201112 12:28:31.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.421" endtime="20201112 12:28:31.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.046" endtime="20201112 12:28:31.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.042" endtime="20201112 12:28:31.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:31.440" level="INFO">${RESULT} = [{'time': 0.040615069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5568999999999185e-05, 'source_diff': 3.5568999999999185e-05}, {'time': 0.040661111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:31.431" endtime="20201112 12:28:31.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:31.471" level="INFO">${ACCURACY} = {'time': [0.040615069, 0.040661111, 0.040701361, 0.040744444, 0.040789472, 0.040834542, 0.040876611, 0.040922778, 0.040963875, 0.041009944, 0.041055139, 0.041100222, 0.041144278, 0.041190333, 0.041235...</msg>
<status status="PASS" starttime="20201112 12:28:31.442" endtime="20201112 12:28:31.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.482" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:28:31.480" endtime="20201112 12:28:31.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.488" level="INFO">VALUE: [3.5568999999999185e-05, 3.5554999999999615e-05, 3.5416999999995924e-05, 3.6055000000000115e-05, 3.5582999999998755e-05, 3.573600000000149e-05, 3.5902999999996854e-05, 3.530599999999884e-05, 3.573599999999455e-05, 3.590199999999738e-05, 3.6082999999999255e-05, 3.575000000000106e-05, 3.5902999999996854e-05, 3.5583000000005693e-05, 3.573600000000149e-05, 3.547200000000167e-05, 3.570799999999541e-05, 3.5582999999998755e-05, 3.5568999999999185e-05, 3.525000000000056e-05, 3.541700000000286e-05, 3.524999999999362e-05, 3.555599999999909e-05, 3.525000000000056e-05, 3.5846999999998574e-05, 3.531999999999841e-05, 3.555599999999909e-05, 3.522200000000142e-05, 3.523599999999405e-05, 3.541700000000286e-05, 3.541600000000339e-05, 3.5208999999994384e-05, 3.5388999999996784e-05, 3.6082999999999255e-05, 3.543100000000243e-05, 3.5082999999998254e-05, 3.5068999999998685e-05, 3.573600000000149e-05, 3.5582999999998755e-05, 3.576400000000063e-05, 3.540300000000329e-05, 3.5930999999995994e-05, 3.573600000000149e-05, 3.538900000000372e-05, 3.555599999999909e-05, 3.591600000000389e-05, 3.591700000000336e-05, 3.523600000000099e-05, 3.591599999999695e-05, 3.5888999999997284e-05]</msg>
<status status="PASS" starttime="20201112 12:28:31.485" endtime="20201112 12:28:31.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.473" endtime="20201112 12:28:31.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.497" endtime="20201112 12:28:31.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:31.505" endtime="20201112 12:28:31.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.501" endtime="20201112 12:28:31.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.493" endtime="20201112 12:28:31.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.988" endtime="20201112 12:28:31.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.986" endtime="20201112 12:28:31.531"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.554" endtime="20201112 12:28:31.570"></status>
</kw>
<msg timestamp="20201112 12:28:31.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:31.551" endtime="20201112 12:28:31.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:31.573" endtime="20201112 12:28:31.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.579" endtime="20201112 12:28:31.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.543" endtime="20201112 12:28:31.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.538" endtime="20201112 12:28:31.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.603" endtime="20201112 12:28:31.937"></status>
</kw>
<msg timestamp="20201112 12:28:31.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040307861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040343764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.599" endtime="20201112 12:28:31.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040307861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040343764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.947" endtime="20201112 12:28:31.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.965" endtime="20201112 12:28:31.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.592" endtime="20201112 12:28:31.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.587" endtime="20201112 12:28:31.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:31.986" level="INFO">${RESULT} = [{'time': 0.040343764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5902999999996854e-05, 'source_diff': 3.5902999999996854e-05}, {'time': 0.040383903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:31.977" endtime="20201112 12:28:31.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:32.018" level="INFO">${ACCURACY} = {'time': [0.040343764, 0.040383903, 0.040424931, 0.040467181, 0.040509194, 0.040552292, 0.040597333, 0.040637431, 0.040680556, 0.040724639, 0.040768694, 0.040811819, 0.040853958, 0.040899111, 0.040942...</msg>
<status status="PASS" starttime="20201112 12:28:31.988" endtime="20201112 12:28:32.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.029" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:28:32.026" endtime="20201112 12:28:32.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.034" level="INFO">VALUE: [3.5902999999996854e-05, 3.5402999999996354e-05, 3.555599999999909e-05, 3.5638999999997034e-05, 3.5554999999999615e-05, 3.5124999999996964e-05, 3.525000000000056e-05, 3.556999999999866e-05, 3.556999999999866e-05, 3.5082999999998254e-05, 3.5054999999999115e-05, 3.588799999999781e-05, 3.573600000000149e-05, 3.613900000000447e-05, 3.590300000000379e-05, 3.569400000000278e-05, 3.5054999999999115e-05, 3.574999999999412e-05, 3.6069000000006624e-05, 3.538800000000425e-05, 3.5568999999999185e-05, 3.523600000000099e-05, 3.544400000000253e-05, 3.592999999999652e-05, 3.555599999999909e-05, 3.572200000000192e-05, 3.5930999999995994e-05, 3.5554999999999615e-05, 3.565199999999713e-05, 3.540200000000382e-05, 3.573599999999455e-05, 3.541600000000339e-05, 3.5916999999996424e-05, 3.5568999999999185e-05, 3.570900000000182e-05, 3.537500000000415e-05, 3.5402999999996354e-05, 3.5610999999997894e-05, 3.5902999999996854e-05, 3.587500000000465e-05, 3.590300000000379e-05, 3.5541000000000045e-05, 3.592999999999652e-05, 3.604200000000002e-05, 3.540300000000329e-05, 3.523600000000099e-05, 3.518100000000218e-05, 3.559700000000526e-05, 3.554199999999952e-05, 3.5318999999998935e-05]</msg>
<status status="PASS" starttime="20201112 12:28:32.031" endtime="20201112 12:28:32.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.019" endtime="20201112 12:28:32.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.043" endtime="20201112 12:28:32.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:32.052" endtime="20201112 12:28:32.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.047" endtime="20201112 12:28:32.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.039" endtime="20201112 12:28:32.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.533" endtime="20201112 12:28:32.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.532" endtime="20201112 12:28:32.078"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.100" endtime="20201112 12:28:32.116"></status>
</kw>
<msg timestamp="20201112 12:28:32.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:32.097" endtime="20201112 12:28:32.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:32.119" endtime="20201112 12:28:32.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.126" endtime="20201112 12:28:32.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.090" endtime="20201112 12:28:32.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.084" endtime="20201112 12:28:32.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.149" endtime="20201112 12:28:32.484"></status>
</kw>
<msg timestamp="20201112 12:28:32.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040553583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.146" endtime="20201112 12:28:32.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040553583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.493" endtime="20201112 12:28:32.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.512" endtime="20201112 12:28:32.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.139" endtime="20201112 12:28:32.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.134" endtime="20201112 12:28:32.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:32.531" level="INFO">${RESULT} = [{'time': 0.040553583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5068999999998685e-05, 'source_diff': 3.5068999999998685e-05}, {'time': 0.040598694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:32.522" endtime="20201112 12:28:32.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:32.562" level="INFO">${ACCURACY} = {'time': [0.040553583, 0.040598694, 0.040639694, 0.040683903, 0.040727014, 0.040766972, 0.040809222, 0.040852264, 0.040898264, 0.040940472, 0.040980542, 0.041023556, 0.041065736, 0.041110861, 0.041150...</msg>
<status status="PASS" starttime="20201112 12:28:32.533" endtime="20201112 12:28:32.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.573" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:28:32.571" endtime="20201112 12:28:32.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.579" level="INFO">VALUE: [3.5068999999998685e-05, 3.590199999999738e-05, 3.5554999999999615e-05, 3.572200000000192e-05, 3.554199999999952e-05, 3.520800000000185e-05, 3.542999999999602e-05, 3.573600000000149e-05, 3.573599999999455e-05, 3.5888999999997284e-05, 3.519500000000175e-05, 3.505600000000553e-05, 3.5568999999999185e-05, 3.5582999999998755e-05, 3.525000000000056e-05, 3.606999999999916e-05, 3.606999999999916e-05, 3.605599999999959e-05, 3.520800000000185e-05, 3.6082999999999255e-05, 3.574999999999412e-05, 3.520900000000132e-05, 3.523600000000099e-05, 3.523600000000099e-05, 3.573599999999455e-05, 3.573599999999455e-05, 3.523600000000099e-05, 3.538900000000372e-05, 3.605599999999959e-05, 3.588900000000422e-05, 3.573600000000149e-05, 3.505599999999859e-05, 3.5068999999998685e-05, 3.555599999999909e-05, 3.573600000000149e-05, 3.5054999999999115e-05, 3.5554999999999615e-05, 3.5346999999998074e-05, 3.606999999999916e-05, 3.588900000000422e-05, 3.5388999999996784e-05, 3.506999999999816e-05, 3.5402999999996354e-05, 3.572200000000192e-05, 3.5402999999996354e-05, 3.540300000000329e-05, 3.6055000000000115e-05, 3.6055000000000115e-05, 3.573599999999455e-05, 3.504199999999902e-05]</msg>
<status status="PASS" starttime="20201112 12:28:32.576" endtime="20201112 12:28:32.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.564" endtime="20201112 12:28:32.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.595" endtime="20201112 12:28:32.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:32.603" endtime="20201112 12:28:32.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.599" endtime="20201112 12:28:32.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.591" endtime="20201112 12:28:32.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.080" endtime="20201112 12:28:32.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.078" endtime="20201112 12:28:32.629"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.652" endtime="20201112 12:28:32.668"></status>
</kw>
<msg timestamp="20201112 12:28:32.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:32.649" endtime="20201112 12:28:32.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:32.672" endtime="20201112 12:28:32.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.678" endtime="20201112 12:28:32.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.641" endtime="20201112 12:28:32.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.636" endtime="20201112 12:28:32.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.701" endtime="20201112 12:28:33.039"></status>
</kw>
<msg timestamp="20201112 12:28:33.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040481417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040524319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.698" endtime="20201112 12:28:33.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040481417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040524319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.049" endtime="20201112 12:28:33.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.068" endtime="20201112 12:28:33.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.691" endtime="20201112 12:28:33.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.686" endtime="20201112 12:28:33.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.087" level="INFO">${RESULT} = [{'time': 0.040524319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.290200000000438e-05, 'source_diff': 4.290200000000438e-05}, {'time': 0.040573458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:33.078" endtime="20201112 12:28:33.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:33.119" level="INFO">${ACCURACY} = {'time': [0.040524319, 0.040573458, 0.040623611, 0.040673639, 0.040722778, 0.040770917, 0.040823958, 0.040875097, 0.040923278, 0.040976444, 0.041025528, 0.041074667, 0.041123667, 0.041173819, 0.041223...</msg>
<status status="PASS" starttime="20201112 12:28:33.089" endtime="20201112 12:28:33.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.130" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:28:33.128" endtime="20201112 12:28:33.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.135" level="INFO">VALUE: [4.290200000000438e-05, 4.273600000000155e-05, 4.272199999999504e-05, 4.2916999999996486e-05, 4.222200000000148e-05, 4.255599999999915e-05, 4.247200000000173e-05, 4.275000000000112e-05, 4.2709000000001884e-05, 4.2568999999999246e-05, 4.2902999999996916e-05, 4.273600000000155e-05, 4.2375000000004215e-05, 4.240199999999694e-05, 4.290199999999744e-05, 4.305599999999965e-05, 4.2554999999999676e-05, 4.222199999999454e-05, 4.2389000000003785e-05, 4.2888999999997346e-05, 4.222200000000148e-05, 4.229199999999933e-05, 4.21939999999954e-05, 4.2889000000004285e-05, 4.2888999999997346e-05, 4.2304999999999426e-05, 4.238799999999737e-05, 4.2388999999996846e-05, 4.273600000000155e-05, 4.2874999999997776e-05, 4.2223000000000954e-05, 4.272200000000198e-05, 4.3055000000000176e-05, 4.205600000000559e-05, 4.225000000000062e-05, 4.247199999999479e-05, 4.223600000000105e-05, 4.302800000000051e-05, 4.2694999999995376e-05, 4.2709000000001884e-05, 4.2568999999999246e-05, 4.222200000000148e-05, 4.272200000000198e-05, 4.2541000000000107e-05, 4.2417000000002925e-05, 4.2889000000004285e-05, 4.254199999999958e-05, 4.2889000000004285e-05, 4.2889000000004285e-05, 4.2375000000004215e-05]</msg>
<status status="PASS" starttime="20201112 12:28:33.132" endtime="20201112 12:28:33.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.121" endtime="20201112 12:28:33.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.145" endtime="20201112 12:28:33.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:33.153" endtime="20201112 12:28:33.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.149" endtime="20201112 12:28:33.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.140" endtime="20201112 12:28:33.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.631" endtime="20201112 12:28:33.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.630" endtime="20201112 12:28:33.180"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.202" endtime="20201112 12:28:33.218"></status>
</kw>
<msg timestamp="20201112 12:28:33.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:33.199" endtime="20201112 12:28:33.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:33.222" endtime="20201112 12:28:33.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.228" endtime="20201112 12:28:33.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.192" endtime="20201112 12:28:33.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.186" endtime="20201112 12:28:33.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.251" endtime="20201112 12:28:33.586"></status>
</kw>
<msg timestamp="20201112 12:28:33.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040746639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.248" endtime="20201112 12:28:33.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040746639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.596" endtime="20201112 12:28:33.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.615" endtime="20201112 12:28:33.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.241" endtime="20201112 12:28:33.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.236" endtime="20201112 12:28:33.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.634" level="INFO">${RESULT} = [{'time': 0.040746639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2445000000002064e-05, 'source_diff': 4.2445000000002064e-05}, {'time': 0.040794736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:33.625" endtime="20201112 12:28:33.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:33.665" level="INFO">${ACCURACY} = {'time': [0.040746639, 0.040794736, 0.040847875, 0.040900944, 0.040949083, 0.040996111, 0.041045292, 0.041096375, 0.041148556, 0.041201625, 0.04124975, 0.041301958, 0.041352944, 0.041406153, 0.0414541...</msg>
<status status="PASS" starttime="20201112 12:28:33.636" endtime="20201112 12:28:33.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.676" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:28:33.674" endtime="20201112 12:28:33.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.682" level="INFO">VALUE: [4.2445000000002064e-05, 4.2888999999997346e-05, 4.255599999999915e-05, 4.2361000000004645e-05, 4.2874999999997776e-05, 4.2403000000003355e-05, 4.284799999999811e-05, 4.2388999999996846e-05, 4.2223000000000954e-05, 4.2874999999997776e-05, 4.244400000000259e-05, 4.291599999999701e-05, 4.222200000000148e-05, 4.2431000000002494e-05, 4.2388999999996846e-05, 4.220800000000191e-05, 4.305599999999965e-05, 4.233399999999804e-05, 4.240200000000388e-05, 4.258399999999829e-05, 4.223600000000105e-05, 4.272200000000198e-05, 4.2568999999999246e-05, 4.248599999999436e-05, 4.223599999999411e-05, 4.225000000000062e-05, 4.2153000000003105e-05, 4.306999999999922e-05, 4.223600000000105e-05, 4.2902999999996916e-05, 4.2916999999996486e-05, 4.2903000000003855e-05, 4.2290999999999856e-05, 4.255599999999915e-05, 4.2917000000003425e-05, 4.2902999999996916e-05, 4.2403000000003355e-05, 4.2403000000003355e-05, 4.2237000000000524e-05, 4.305599999999965e-05, 4.2569000000006185e-05, 4.2402999999996416e-05, 4.222200000000148e-05, 4.272199999999504e-05, 4.222200000000148e-05, 4.2723000000001454e-05, 4.256999999999872e-05, 4.2916999999996486e-05, 4.2555000000006615e-05, 4.2846999999998636e-05]</msg>
<status status="PASS" starttime="20201112 12:28:33.679" endtime="20201112 12:28:33.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.667" endtime="20201112 12:28:33.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.692" endtime="20201112 12:28:33.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:33.700" endtime="20201112 12:28:33.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.695" endtime="20201112 12:28:33.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.687" endtime="20201112 12:28:33.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.182" endtime="20201112 12:28:33.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.180" endtime="20201112 12:28:33.726"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.750" endtime="20201112 12:28:33.766"></status>
</kw>
<msg timestamp="20201112 12:28:33.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:33.746" endtime="20201112 12:28:33.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:33.770" endtime="20201112 12:28:33.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.776" endtime="20201112 12:28:33.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.739" endtime="20201112 12:28:33.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.732" endtime="20201112 12:28:33.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.800" endtime="20201112 12:28:34.133"></status>
</kw>
<msg timestamp="20201112 12:28:34.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041846139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041888861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.796" endtime="20201112 12:28:34.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041846139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041888861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.142" endtime="20201112 12:28:34.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.161" endtime="20201112 12:28:34.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.789" endtime="20201112 12:28:34.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.784" endtime="20201112 12:28:34.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:34.182" level="INFO">${RESULT} = [{'time': 0.041888861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.272200000000198e-05, 'source_diff': 4.272200000000198e-05}, {'time': 0.041936972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:34.173" endtime="20201112 12:28:34.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:34.213" level="INFO">${ACCURACY} = {'time': [0.041888861, 0.041936972, 0.041989097, 0.042040153, 0.042090292, 0.042138444, 0.042187583, 0.042237625, 0.042288861, 0.042339944, 0.042392028, 0.042444139, 0.042495139, 0.042542278, 0.042590...</msg>
<status status="PASS" starttime="20201112 12:28:34.184" endtime="20201112 12:28:34.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.224" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:28:34.222" endtime="20201112 12:28:34.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.230" level="INFO">VALUE: [4.272200000000198e-05, 4.2875000000004715e-05, 4.2903000000003855e-05, 4.2874999999997776e-05, 4.2889000000004285e-05, 4.288799999999787e-05, 4.294400000000309e-05, 4.222200000000148e-05, 4.220799999999497e-05, 4.2360999999997706e-05, 4.308399999999879e-05, 4.2388999999996846e-05, 4.270800000000241e-05, 4.2403000000003355e-05, 4.254200000000652e-05, 4.290199999999744e-05, 4.2374999999997276e-05, 4.3068999999999746e-05, 4.270800000000241e-05, 4.222200000000148e-05, 4.2055000000006115e-05, 4.273600000000155e-05, 4.2582999999998816e-05, 4.2736999999994085e-05, 4.2709000000001884e-05, 4.244399999999565e-05, 4.252800000000001e-05, 4.2346999999998136e-05, 4.222200000000148e-05, 4.2152999999996166e-05, 4.236199999999718e-05, 4.205599999999865e-05, 4.3055000000000176e-05, 4.2403000000003355e-05, 4.3068999999999746e-05, 4.291599999999701e-05, 4.2568999999999246e-05, 4.272200000000198e-05, 4.304200000000008e-05, 4.220799999999497e-05, 4.2541000000000107e-05, 4.2583000000005755e-05, 4.2347000000005075e-05, 4.2417000000002925e-05, 4.223600000000105e-05, 4.272199999999504e-05, 4.2402999999996416e-05, 4.2554999999999676e-05, 4.306999999999922e-05, 4.2402999999996416e-05]</msg>
<status status="PASS" starttime="20201112 12:28:34.227" endtime="20201112 12:28:34.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.215" endtime="20201112 12:28:34.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.240" endtime="20201112 12:28:34.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:34.248" endtime="20201112 12:28:34.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.244" endtime="20201112 12:28:34.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.235" endtime="20201112 12:28:34.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.728" endtime="20201112 12:28:34.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.727" endtime="20201112 12:28:34.274"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.297" endtime="20201112 12:28:34.313"></status>
</kw>
<msg timestamp="20201112 12:28:34.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:34.293" endtime="20201112 12:28:34.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:34.316" endtime="20201112 12:28:34.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.322" endtime="20201112 12:28:34.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.286" endtime="20201112 12:28:34.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.280" endtime="20201112 12:28:34.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.346" endtime="20201112 12:28:34.680"></status>
</kw>
<msg timestamp="20201112 12:28:34.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040492958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040535708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.343" endtime="20201112 12:28:34.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040492958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040535708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.689" endtime="20201112 12:28:34.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.708" endtime="20201112 12:28:34.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.335" endtime="20201112 12:28:34.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.331" endtime="20201112 12:28:34.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:34.727" level="INFO">${RESULT} = [{'time': 0.040535708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.274999999999418e-05, 'source_diff': 4.274999999999418e-05}, {'time': 0.040588764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:34.718" endtime="20201112 12:28:34.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:34.758" level="INFO">${ACCURACY} = {'time': [0.040535708, 0.040588764, 0.040637903, 0.040686069, 0.040736181, 0.04078325, 0.040834292, 0.040886431, 0.040939486, 0.040986653, 0.041038806, 0.041090931, 0.041139028, 0.041188, 0.041236153,...</msg>
<status status="PASS" starttime="20201112 12:28:34.729" endtime="20201112 12:28:34.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.769" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:28:34.767" endtime="20201112 12:28:34.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.775" level="INFO">VALUE: [4.274999999999418e-05, 4.206999999999822e-05, 4.254199999999958e-05, 4.2374999999997276e-05, 4.2445000000002064e-05, 4.2652999999996666e-05, 4.2223000000000954e-05, 4.2695000000002314e-05, 4.2360999999997706e-05, 4.254199999999958e-05, 4.2722999999994515e-05, 4.2902999999996916e-05, 4.2209000000001384e-05, 4.2818999999999496e-05, 4.2360999999997706e-05, 4.225000000000062e-05, 4.2889000000004285e-05, 4.304200000000008e-05, 4.255599999999915e-05, 4.302800000000051e-05, 4.2389000000003785e-05, 4.223600000000105e-05, 4.304200000000008e-05, 4.222200000000148e-05, 4.222199999999454e-05, 4.277800000000026e-05, 4.222200000000148e-05, 4.2582999999998816e-05, 4.219400000000234e-05, 4.2388999999996846e-05, 4.236199999999718e-05, 4.2722999999994515e-05, 4.220800000000191e-05, 4.2917000000003425e-05, 4.2888999999997346e-05, 4.220800000000191e-05, 4.2153000000003105e-05, 4.288799999999787e-05, 4.284799999999811e-05, 4.273600000000155e-05, 4.3082999999999316e-05, 4.254199999999958e-05, 4.2680999999995806e-05, 4.305599999999965e-05, 4.2889000000004285e-05, 4.202799999999951e-05, 4.294399999999615e-05, 4.2888999999997346e-05, 4.2403000000003355e-05, 4.255600000000609e-05]</msg>
<status status="PASS" starttime="20201112 12:28:34.772" endtime="20201112 12:28:34.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.760" endtime="20201112 12:28:34.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.784" endtime="20201112 12:28:34.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:34.793" endtime="20201112 12:28:34.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.788" endtime="20201112 12:28:34.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.780" endtime="20201112 12:28:34.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.276" endtime="20201112 12:28:34.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.275" endtime="20201112 12:28:34.819"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.842" endtime="20201112 12:28:34.858"></status>
</kw>
<msg timestamp="20201112 12:28:34.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:34.838" endtime="20201112 12:28:34.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:34.861" endtime="20201112 12:28:34.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.868" endtime="20201112 12:28:34.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.831" endtime="20201112 12:28:34.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.825" endtime="20201112 12:28:34.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.892" endtime="20201112 12:28:35.228"></status>
</kw>
<msg timestamp="20201112 12:28:35.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041232931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041275819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.889" endtime="20201112 12:28:35.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041232931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041275819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.237" endtime="20201112 12:28:35.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.256" endtime="20201112 12:28:35.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.881" endtime="20201112 12:28:35.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.876" endtime="20201112 12:28:35.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.275" level="INFO">${RESULT} = [{'time': 0.041275819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.288799999999787e-05, 'source_diff': 4.288799999999787e-05}, {'time': 0.041328958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:35.266" endtime="20201112 12:28:35.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:35.306" level="INFO">${ACCURACY} = {'time': [0.041275819, 0.041328958, 0.041382111, 0.041435306, 0.041488306, 0.041535528, 0.041584611, 0.041631722, 0.041678847, 0.041725806, 0.041777042, 0.041826069, 0.041875181, 0.041923389, 0.041970...</msg>
<status status="PASS" starttime="20201112 12:28:35.277" endtime="20201112 12:28:35.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.317" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:28:35.315" endtime="20201112 12:28:35.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.323" level="INFO">VALUE: [4.288799999999787e-05, 4.2541000000000107e-05, 4.2554999999999676e-05, 4.2680999999995806e-05, 4.2737000000001024e-05, 4.2709000000001884e-05, 4.2582999999998816e-05, 4.2375000000004215e-05, 4.2388999999996846e-05, 4.255599999999915e-05, 4.304200000000008e-05, 4.272200000000198e-05, 4.2388999999996846e-05, 4.220799999999497e-05, 4.2582999999998816e-05, 4.2737000000001024e-05, 4.273600000000155e-05, 4.304200000000008e-05, 4.2375000000004215e-05, 4.2875000000004715e-05, 4.2068999999998746e-05, 4.226400000000019e-05, 4.2888999999997346e-05, 4.254199999999958e-05, 4.300000000000137e-05, 4.2402999999996416e-05, 4.270800000000241e-05, 4.256999999999872e-05, 4.2388999999996846e-05, 4.222200000000148e-05, 4.305599999999965e-05, 4.2889000000004285e-05, 4.2554999999999676e-05, 4.2541000000000107e-05, 4.259799999999786e-05, 4.2209000000001384e-05, 4.3013999999994e-05, 4.206999999999822e-05, 4.256999999999872e-05, 4.238799999999737e-05, 4.2403000000003355e-05, 4.275000000000112e-05, 4.2709000000001884e-05, 4.3055000000000176e-05, 4.223600000000105e-05, 4.2917000000003425e-05, 4.275000000000112e-05, 4.2582999999998816e-05, 4.306999999999922e-05, 4.255599999999915e-05]</msg>
<status status="PASS" starttime="20201112 12:28:35.320" endtime="20201112 12:28:35.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.308" endtime="20201112 12:28:35.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.332" endtime="20201112 12:28:35.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:35.341" endtime="20201112 12:28:35.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.336" endtime="20201112 12:28:35.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.328" endtime="20201112 12:28:35.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.821" endtime="20201112 12:28:35.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.819" endtime="20201112 12:28:35.366"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.389" endtime="20201112 12:28:35.405"></status>
</kw>
<msg timestamp="20201112 12:28:35.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:35.386" endtime="20201112 12:28:35.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:35.409" endtime="20201112 12:28:35.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.416" endtime="20201112 12:28:35.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.379" endtime="20201112 12:28:35.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.373" endtime="20201112 12:28:35.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.440" endtime="20201112 12:28:35.776"></status>
</kw>
<msg timestamp="20201112 12:28:35.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040606375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040649403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.437" endtime="20201112 12:28:35.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040606375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040649403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.786" endtime="20201112 12:28:35.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.805" endtime="20201112 12:28:35.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.429" endtime="20201112 12:28:35.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.424" endtime="20201112 12:28:35.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.824" level="INFO">${RESULT} = [{'time': 0.040649403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.302800000000051e-05, 'source_diff': 4.302800000000051e-05}, {'time': 0.040700542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:35.815" endtime="20201112 12:28:35.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:35.855" level="INFO">${ACCURACY} = {'time': [0.040649403, 0.040700542, 0.040749694, 0.040800722, 0.040853875, 0.040902986, 0.040956111, 0.041008167, 0.041059333, 0.0411125, 0.041165611, 0.041217722, 0.041270806, 0.041320861, 0.04137101...</msg>
<status status="PASS" starttime="20201112 12:28:35.826" endtime="20201112 12:28:35.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.866" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:28:35.864" endtime="20201112 12:28:35.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.871" level="INFO">VALUE: [4.302800000000051e-05, 4.223600000000105e-05, 4.223600000000105e-05, 4.2124999999997026e-05, 4.273599999999461e-05, 4.272200000000198e-05, 4.295800000000266e-05, 4.2888999999997346e-05, 4.251400000000044e-05, 4.2375000000004215e-05, 4.3055000000000176e-05, 4.2888999999997346e-05, 4.2709000000001884e-05, 4.268000000000327e-05, 4.270799999999547e-05, 4.281999999999897e-05, 4.223600000000105e-05, 4.290199999999744e-05, 4.222200000000148e-05, 4.2554999999999676e-05, 4.251400000000044e-05, 4.252800000000001e-05, 4.3068999999999746e-05, 4.2389000000003785e-05, 4.2389000000003785e-05, 4.2096999999997886e-05, 4.226400000000019e-05, 4.2888999999997346e-05, 4.273600000000155e-05, 4.290199999999744e-05, 4.290199999999744e-05, 4.2875000000004715e-05, 4.254199999999958e-05, 4.2388999999996846e-05, 4.2068999999998746e-05, 4.2290999999999856e-05, 4.2888999999997346e-05, 4.223600000000105e-05, 4.2709000000001884e-05, 4.2554999999999676e-05, 4.307000000000616e-05, 4.290200000000438e-05, 4.2680999999995806e-05, 4.272199999999504e-05, 4.2374999999997276e-05, 4.2388999999996846e-05, 4.2902999999996916e-05, 4.275000000000112e-05, 4.2917000000003425e-05, 4.2375000000004215e-05]</msg>
<status status="PASS" starttime="20201112 12:28:35.868" endtime="20201112 12:28:35.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.857" endtime="20201112 12:28:35.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.881" endtime="20201112 12:28:35.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:35.889" endtime="20201112 12:28:35.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.885" endtime="20201112 12:28:35.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.876" endtime="20201112 12:28:35.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.369" endtime="20201112 12:28:35.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.367" endtime="20201112 12:28:35.915"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.938" endtime="20201112 12:28:35.954"></status>
</kw>
<msg timestamp="20201112 12:28:35.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:35.935" endtime="20201112 12:28:35.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:35.958" endtime="20201112 12:28:35.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.964" endtime="20201112 12:28:35.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.927" endtime="20201112 12:28:35.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.922" endtime="20201112 12:28:35.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.987" endtime="20201112 12:28:36.321"></status>
</kw>
<msg timestamp="20201112 12:28:36.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040602639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040645708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.984" endtime="20201112 12:28:36.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040602639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040645708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:36.331" endtime="20201112 12:28:36.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.349" endtime="20201112 12:28:36.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.977" endtime="20201112 12:28:36.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.972" endtime="20201112 12:28:36.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:36.370" level="INFO">${RESULT} = [{'time': 0.040645708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3068999999999746e-05, 'source_diff': 4.3068999999999746e-05}, {'time': 0.040696778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:36.361" endtime="20201112 12:28:36.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:36.401" level="INFO">${ACCURACY} = {'time': [0.040645708, 0.040696778, 0.040747958, 0.040799042, 0.040849222, 0.040902319, 0.040955444, 0.041007597, 0.041060597, 0.041107847, 0.041157944, 0.041206986, 0.041255167, 0.041304278, 0.041353...</msg>
<status status="PASS" starttime="20201112 12:28:36.372" endtime="20201112 12:28:36.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.412" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:28:36.410" endtime="20201112 12:28:36.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.418" level="INFO">VALUE: [4.3068999999999746e-05, 4.2889000000004285e-05, 4.2888999999997346e-05, 4.2860999999998206e-05, 4.294399999999615e-05, 4.2860999999998206e-05, 4.3068999999999746e-05, 4.2374999999997276e-05, 4.220799999999497e-05, 4.270800000000241e-05, 4.220800000000191e-05, 4.218000000000277e-05, 4.2403000000003355e-05, 4.2931000000002995e-05, 4.292999999999658e-05, 4.233399999999804e-05, 4.3055000000000176e-05, 4.2417000000002925e-05, 4.255599999999915e-05, 4.2596999999998386e-05, 4.291599999999701e-05, 4.2541000000000107e-05, 4.258399999999829e-05, 4.2902999999996916e-05, 4.2736999999994085e-05, 4.197200000000123e-05, 4.222200000000148e-05, 4.3110999999998456e-05, 4.2388999999996846e-05, 4.2222999999994015e-05, 4.2888999999997346e-05, 4.2902999999996916e-05, 4.2916999999996486e-05, 4.234799999999761e-05, 4.256999999999872e-05, 4.222199999999454e-05, 4.276400000000069e-05, 4.273600000000155e-05, 4.220800000000191e-05, 4.2195000000001814e-05, 4.2723000000001454e-05, 4.3055000000000176e-05, 4.2860999999998206e-05, 4.255599999999915e-05, 4.254199999999958e-05, 4.2874999999997776e-05, 4.2888999999997346e-05, 4.220799999999497e-05, 4.2222999999994015e-05, 4.306999999999922e-05]</msg>
<status status="PASS" starttime="20201112 12:28:36.414" endtime="20201112 12:28:36.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.403" endtime="20201112 12:28:36.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.427" endtime="20201112 12:28:36.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:36.435" endtime="20201112 12:28:36.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.431" endtime="20201112 12:28:36.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.423" endtime="20201112 12:28:36.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.917" endtime="20201112 12:28:36.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.916" endtime="20201112 12:28:36.462"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.485" endtime="20201112 12:28:36.502"></status>
</kw>
<msg timestamp="20201112 12:28:36.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:36.482" endtime="20201112 12:28:36.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:36.505" endtime="20201112 12:28:36.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.512" endtime="20201112 12:28:36.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.475" endtime="20201112 12:28:36.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.469" endtime="20201112 12:28:36.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.535" endtime="20201112 12:28:36.870"></status>
</kw>
<msg timestamp="20201112 12:28:36.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041775681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041825083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:36.531" endtime="20201112 12:28:36.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041775681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041825083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:36.879" endtime="20201112 12:28:36.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.898" endtime="20201112 12:28:36.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.524" endtime="20201112 12:28:36.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.520" endtime="20201112 12:28:36.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:36.917" level="INFO">${RESULT} = [{'time': 0.041825083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9401999999997004e-05, 'source_diff': 4.9401999999997004e-05}, {'time': 0.041880194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:36.908" endtime="20201112 12:28:36.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:36.948" level="INFO">${ACCURACY} = {'time': [0.041825083, 0.041880194, 0.041935194, 0.041991375, 0.042051528, 0.042110694, 0.042165847, 0.042221903, 0.042278056, 0.042336111, 0.042395361, 0.042455431, 0.042509542, 0.042569639, 0.042627...</msg>
<status status="PASS" starttime="20201112 12:28:36.919" endtime="20201112 12:28:36.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.959" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:28:36.957" endtime="20201112 12:28:36.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.965" level="INFO">VALUE: [4.9401999999997004e-05, 4.955499999999974e-05, 4.922200000000154e-05, 4.954199999999964e-05, 4.988899999999741e-05, 5.005500000000024e-05, 4.983299999999913e-05, 4.922200000000154e-05, 5.008399999999885e-05, 4.9375000000004277e-05, 4.938899999999691e-05, 4.9403000000003416e-05, 4.937499999999734e-05, 5.004200000000014e-05, 4.970800000000247e-05, 4.988899999999741e-05, 4.923600000000111e-05, 4.9445000000002126e-05, 4.93469999999982e-05, 4.956999999999878e-05, 4.972200000000204e-05, 4.904099999999967e-05, 4.922200000000154e-05, 4.9401999999997004e-05, 4.940299999999648e-05, 4.948600000000136e-05, 4.952800000000007e-05, 4.936100000000471e-05, 5.009699999999895e-05, 4.920800000000197e-05, 4.955499999999974e-05, 4.9403000000003416e-05, 4.9901999999997504e-05, 4.922200000000154e-05, 4.937499999999734e-05, 4.972200000000204e-05, 4.9945000000002626e-05, 4.9209000000001446e-05, 4.941699999999605e-05, 4.9389000000003846e-05, 4.970800000000247e-05, 5.005500000000024e-05, 4.998600000000186e-05, 4.986099999999827e-05, 4.955599999999921e-05, 4.955599999999921e-05, 4.925000000000068e-05, 4.91940000000024e-05, 4.972200000000204e-05, 4.987500000000478e-05]</msg>
<status status="PASS" starttime="20201112 12:28:36.961" endtime="20201112 12:28:36.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.950" endtime="20201112 12:28:36.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.974" endtime="20201112 12:28:36.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:36.982" endtime="20201112 12:28:37.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.978" endtime="20201112 12:28:37.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.970" endtime="20201112 12:28:37.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.464" endtime="20201112 12:28:37.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.463" endtime="20201112 12:28:37.008"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.031" endtime="20201112 12:28:37.050"></status>
</kw>
<msg timestamp="20201112 12:28:37.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:37.028" endtime="20201112 12:28:37.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:37.053" endtime="20201112 12:28:37.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.059" endtime="20201112 12:28:37.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.020" endtime="20201112 12:28:37.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.015" endtime="20201112 12:28:37.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.082" endtime="20201112 12:28:37.417"></status>
</kw>
<msg timestamp="20201112 12:28:37.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040572361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040660319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.079" endtime="20201112 12:28:37.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040572361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040660319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.426" endtime="20201112 12:28:37.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.445" endtime="20201112 12:28:37.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.072" endtime="20201112 12:28:37.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.067" endtime="20201112 12:28:37.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:37.464" level="INFO">${RESULT} = [{'time': 0.040660319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.795799999999909e-05, 'source_diff': 8.795799999999909e-05}, {'time': 0.040758583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:37.455" endtime="20201112 12:28:37.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:37.495" level="INFO">${ACCURACY} = {'time': [0.040660319, 0.040758583, 0.040854722, 0.040953069, 0.041052264, 0.041148319, 0.041246681, 0.041339931, 0.041434111, 0.041531222, 0.041626597, 0.041724667, 0.041817861, 0.041917083, 0.042013...</msg>
<status status="PASS" starttime="20201112 12:28:37.466" endtime="20201112 12:28:37.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.507" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:28:37.504" endtime="20201112 12:28:37.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.512" level="INFO">VALUE: [8.795799999999909e-05, 8.913900000000197e-05, 8.890300000000129e-05, 8.919400000000077e-05, 8.895800000000009e-05, 8.891600000000138e-05, 8.757000000000209e-05, 8.872300000000582e-05, 8.704200000000245e-05, 8.819399999999977e-05, 8.905500000000455e-05, 8.895899999999957e-05, 8.844400000000002e-05, 8.865200000000156e-05, 8.715200000000006e-05, 8.897199999999966e-05, 8.841700000000036e-05, 8.836100000000208e-05, 8.840300000000079e-05, 8.86250000000019e-05, 8.836100000000208e-05, 8.854199999999701e-05, 8.836200000000155e-05, 8.824999999999805e-05, 8.845799999999959e-05, 8.86670000000006e-05, 8.841600000000088e-05, 8.852700000000491e-05, 8.927799999999819e-05, 8.86529999999941e-05, 8.865300000000104e-05, 8.905499999999761e-05, 8.818099999999968e-05, 8.756900000000262e-05, 8.863900000000147e-05, 8.844400000000002e-05, 8.861100000000233e-05, 8.81800000000002e-05, 8.891700000000086e-05, 8.873599999999898e-05, 8.884700000000301e-05, 8.822200000000585e-05, 8.851399999999787e-05, 8.854099999999754e-05, 8.880599999999683e-05, 8.884700000000301e-05, 8.91800000000012e-05, 8.818099999999968e-05, 8.863900000000147e-05, 8.884799999999554e-05]</msg>
<status status="PASS" starttime="20201112 12:28:37.509" endtime="20201112 12:28:37.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.497" endtime="20201112 12:28:37.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.522" endtime="20201112 12:28:37.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:37.530" endtime="20201112 12:28:37.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.526" endtime="20201112 12:28:37.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.517" endtime="20201112 12:28:37.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.010" endtime="20201112 12:28:37.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.009" endtime="20201112 12:28:37.556"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.579" endtime="20201112 12:28:37.598"></status>
</kw>
<msg timestamp="20201112 12:28:37.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:37.576" endtime="20201112 12:28:37.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:37.601" endtime="20201112 12:28:37.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.607" endtime="20201112 12:28:37.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.568" endtime="20201112 12:28:37.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.563" endtime="20201112 12:28:37.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.630" endtime="20201112 12:28:37.966"></status>
</kw>
<msg timestamp="20201112 12:28:37.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040628569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040718722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.627" endtime="20201112 12:28:37.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040628569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040718722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.976" endtime="20201112 12:28:37.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.995" endtime="20201112 12:28:38.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.620" endtime="20201112 12:28:38.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.615" endtime="20201112 12:28:38.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.014" level="INFO">${RESULT} = [{'time': 0.040718722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.01529999999956e-05, 'source_diff': 9.01529999999956e-05}, {'time': 0.040816028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:38.005" endtime="20201112 12:28:38.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:38.045" level="INFO">${ACCURACY} = {'time': [0.040718722, 0.040816028, 0.040912222, 0.041008569, 0.041102667, 0.041199847, 0.041296097, 0.041394347, 0.041488528, 0.04158675, 0.041684097, 0.041779208, 0.041875389, 0.041968625, 0.0420638...</msg>
<status status="PASS" starttime="20201112 12:28:38.016" endtime="20201112 12:28:38.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.056" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:28:38.054" endtime="20201112 12:28:38.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.062" level="INFO">VALUE: [9.01529999999956e-05, 8.848599999999873e-05, 8.930499999999786e-05, 8.94999999999993e-05, 8.882000000000334e-05, 9.01529999999956e-05, 8.847199999999916e-05, 8.862499999999496e-05, 8.872199999999941e-05, 8.826399999999762e-05, 9.000000000000674e-05, 8.891600000000138e-05, 8.968100000000118e-05, 8.827800000000413e-05, 8.93050000000048e-05, 8.905599999999708e-05, 8.995800000000109e-05, 8.823599999999848e-05, 8.933399999999647e-05, 8.845799999999959e-05, 8.848599999999873e-05, 8.891600000000138e-05, 8.848599999999873e-05, 9.01670000000021e-05, 8.919500000000025e-05, 8.940200000000231e-05, 8.941700000000136e-05, 8.836099999999514e-05, 9.015200000000306e-05, 8.91250000000024e-05, 8.918100000000068e-05, 8.84999999999983e-05, 8.859700000000276e-05, 8.91250000000024e-05, 8.951399999999887e-05, 8.843099999999993e-05, 8.926399999999862e-05, 8.977799999999869e-05, 8.873599999999898e-05, 9.012499999999646e-05, 8.987500000000315e-05, 8.981899999999793e-05, 8.863900000000147e-05, 8.945800000000059e-05, 8.906999999999665e-05, 8.986100000000358e-05, 8.86670000000006e-05, 8.88050000000043e-05, 8.987500000000315e-05, 8.827800000000413e-05]</msg>
<status status="PASS" starttime="20201112 12:28:38.059" endtime="20201112 12:28:38.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.047" endtime="20201112 12:28:38.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.076" endtime="20201112 12:28:38.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:38.084" endtime="20201112 12:28:38.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.080" endtime="20201112 12:28:38.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.071" endtime="20201112 12:28:38.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.558" endtime="20201112 12:28:38.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.557" endtime="20201112 12:28:38.110"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.133" endtime="20201112 12:28:38.152"></status>
</kw>
<msg timestamp="20201112 12:28:38.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:38.130" endtime="20201112 12:28:38.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:38.155" endtime="20201112 12:28:38.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.161" endtime="20201112 12:28:38.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.122" endtime="20201112 12:28:38.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.117" endtime="20201112 12:28:38.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.184" endtime="20201112 12:28:38.519"></status>
</kw>
<msg timestamp="20201112 12:28:38.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040383847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040473125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.181" endtime="20201112 12:28:38.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040383847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040473125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.528" endtime="20201112 12:28:38.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.547" endtime="20201112 12:28:38.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.174" endtime="20201112 12:28:38.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.169" endtime="20201112 12:28:38.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.569" level="INFO">${RESULT} = [{'time': 0.040473125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.927799999999819e-05, 'source_diff': 8.927799999999819e-05}, {'time': 0.040569333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:38.560" endtime="20201112 12:28:38.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:38.600" level="INFO">${ACCURACY} = {'time': [0.040473125, 0.040569333, 0.040670514, 0.040766833, 0.040860972, 0.040956167, 0.041054333, 0.041153556, 0.041250722, 0.041351, 0.041448153, 0.041547417, 0.041645639, 0.041743833, 0.041840014...</msg>
<status status="PASS" starttime="20201112 12:28:38.571" endtime="20201112 12:28:38.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.611" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:28:38.608" endtime="20201112 12:28:38.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.616" level="INFO">VALUE: [8.927799999999819e-05, 8.959699999999682e-05, 9.10000000000008e-05, 8.981900000000487e-05, 8.944400000000102e-05, 8.933400000000341e-05, 8.96800000000017e-05, 8.937500000000265e-05, 8.979099999999879e-05, 8.927799999999819e-05, 8.977799999999869e-05, 8.941700000000136e-05, 8.952799999999844e-05, 8.934700000000351e-05, 9.001399999999937e-05, 8.976399999999912e-05, 8.931900000000437e-05, 8.980600000000477e-05, 9.006900000000512e-05, 8.9945000000001e-05, 9.018100000000168e-05, 9.011099999999689e-05, 9.01529999999956e-05, 9.073699999999352e-05, 9.023600000000048e-05, 9.026399999999962e-05, 8.973599999999998e-05, 9.009699999999732e-05, 8.977800000000563e-05, 9.005599999999808e-05, 8.937500000000265e-05, 8.937499999999571e-05, 9.009699999999732e-05, 8.956899999999768e-05, 8.934699999999657e-05, 8.972200000000041e-05, 8.958299999999725e-05, 8.945900000000007e-05, 8.979099999999879e-05, 8.957000000000409e-05, 8.970900000000032e-05, 8.958299999999725e-05, 8.990299999999535e-05, 9.058299999999825e-05, 8.968099999999424e-05, 8.987499999999621e-05, 8.994499999999406e-05, 8.957000000000409e-05, 9.001399999999937e-05, 8.938899999999528e-05]</msg>
<status status="PASS" starttime="20201112 12:28:38.613" endtime="20201112 12:28:38.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.601" endtime="20201112 12:28:38.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.625" endtime="20201112 12:28:38.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:38.634" endtime="20201112 12:28:38.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.629" endtime="20201112 12:28:38.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.621" endtime="20201112 12:28:38.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.112" endtime="20201112 12:28:38.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.111" endtime="20201112 12:28:38.660"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.682" endtime="20201112 12:28:38.701"></status>
</kw>
<msg timestamp="20201112 12:28:38.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:38.679" endtime="20201112 12:28:38.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:38.704" endtime="20201112 12:28:38.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.711" endtime="20201112 12:28:38.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.672" endtime="20201112 12:28:38.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.666" endtime="20201112 12:28:38.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.734" endtime="20201112 12:28:39.069"></status>
</kw>
<msg timestamp="20201112 12:28:39.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040344208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040434708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.731" endtime="20201112 12:28:39.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040344208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040434708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:39.078" endtime="20201112 12:28:39.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.097" endtime="20201112 12:28:39.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.723" endtime="20201112 12:28:39.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.719" endtime="20201112 12:28:39.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:39.116" level="INFO">${RESULT} = [{'time': 0.040434708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.05000000000003e-05, 'source_diff': 9.05000000000003e-05}, {'time': 0.040529903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:39.107" endtime="20201112 12:28:39.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:39.147" level="INFO">${ACCURACY} = {'time': [0.040434708, 0.040529903, 0.040626056, 0.040723236, 0.040821458, 0.040917597, 0.041016889, 0.041113986, 0.041209236, 0.041307444, 0.041406597, 0.041507764, 0.041607958, 0.041704167, 0.041804...</msg>
<status status="PASS" starttime="20201112 12:28:39.118" endtime="20201112 12:28:39.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.158" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:28:39.155" endtime="20201112 12:28:39.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.163" level="INFO">VALUE: [9.05000000000003e-05, 9.06529999999961e-05, 9.045900000000107e-05, 9.106900000000612e-05, 9.12079999999954e-05, 9.120800000000234e-05, 9.05000000000003e-05, 9.105499999999961e-05, 9.054200000000595e-05, 9.055499999999911e-05, 9.088900000000372e-05, 9.057000000000509e-05, 9.055499999999911e-05, 9.045900000000107e-05, 9.115199999999712e-05, 9.025000000000005e-05, 9.058299999999825e-05, 9.063899999999653e-05, 9.052699999999997e-05, 9.062499999999696e-05, 9.094400000000252e-05, 9.123700000000096e-05, 9.105499999999961e-05, 9.079199999999926e-05, 9.10130000000009e-05, 9.073600000000098e-05, 9.044399999999508e-05, 9.025000000000005e-05, 9.034699999999757e-05, 9.062499999999696e-05, 9.079199999999926e-05, 9.06250000000039e-05, 9.031899999999843e-05, 9.054199999999901e-05, 9.036099999999714e-05, 9.125000000000105e-05, 9.027800000000613e-05, 9.077700000000022e-05, 9.113899999999703e-05, 9.047200000000116e-05, 9.10000000000008e-05, 9.123600000000148e-05, 9.048600000000073e-05, 9.076400000000012e-05, 9.040300000000279e-05, 9.118100000000268e-05, 9.04870000000002e-05, 9.036100000000408e-05, 9.026399999999962e-05, 9.068100000000218e-05]</msg>
<status status="PASS" starttime="20201112 12:28:39.160" endtime="20201112 12:28:39.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.149" endtime="20201112 12:28:39.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.173" endtime="20201112 12:28:39.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:39.181" endtime="20201112 12:28:39.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.176" endtime="20201112 12:28:39.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.168" endtime="20201112 12:28:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.662" endtime="20201112 12:28:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.661" endtime="20201112 12:28:39.207"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.229" endtime="20201112 12:28:39.248"></status>
</kw>
<msg timestamp="20201112 12:28:39.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:39.226" endtime="20201112 12:28:39.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:39.251" endtime="20201112 12:28:39.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.258" endtime="20201112 12:28:39.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.219" endtime="20201112 12:28:39.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.213" endtime="20201112 12:28:39.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.281" endtime="20201112 12:28:39.617"></status>
</kw>
<msg timestamp="20201112 12:28:39.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040531722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:39.278" endtime="20201112 12:28:39.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040531722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:39.626" endtime="20201112 12:28:39.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.645" endtime="20201112 12:28:39.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.270" endtime="20201112 12:28:39.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.266" endtime="20201112 12:28:39.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:39.664" level="INFO">${RESULT} = [{'time': 0.040531722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.222199999999597e-05, 'source_diff': 9.222199999999597e-05}, {'time': 0.040629861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:39.655" endtime="20201112 12:28:39.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:39.695" level="INFO">${ACCURACY} = {'time': [0.040531722, 0.040629861, 0.040726125, 0.040825264, 0.040922458, 0.041019736, 0.041115861, 0.041217042, 0.04131725, 0.041417361, 0.041516528, 0.041612764, 0.041714944, 0.041811139, 0.0419102...</msg>
<status status="PASS" starttime="20201112 12:28:39.666" endtime="20201112 12:28:39.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.706" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:28:39.704" endtime="20201112 12:28:39.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.712" level="INFO">VALUE: [9.222199999999597e-05, 9.21670000000041e-05, 9.186099999999864e-05, 9.18199999999994e-05, 9.152700000000097e-05, 9.191700000000386e-05, 9.144399999999608e-05, 9.154200000000001e-05, 9.181899999999993e-05, 9.208299999999975e-05, 9.169499999999581e-05, 9.161099999999839e-05, 9.130499999999986e-05, 9.180599999999983e-05, 9.159699999999882e-05, 9.166699999999667e-05, 9.175000000000155e-05, 9.137499999999771e-05, 9.149999999999436e-05, 9.154200000000001e-05, 9.186100000000558e-05, 9.144399999999608e-05, 9.166600000000413e-05, 9.179200000000026e-05, 9.21659999999977e-05, 9.20000000000018e-05, 9.131899999999943e-05, 9.177800000000069e-05, 9.169500000000275e-05, 9.21529999999976e-05, 9.184699999999907e-05, 9.198600000000223e-05, 9.148600000000173e-05, 9.208299999999975e-05, 9.163899999999753e-05, 9.158399999999872e-05, 9.226400000000162e-05, 9.191599999999744e-05, 9.142999999999651e-05, 9.186100000000558e-05, 9.174999999999461e-05, 9.219399999999683e-05, 9.213799999999855e-05, 9.129100000000029e-05, 9.188899999999778e-05, 9.140300000000379e-05, 9.172300000000189e-05, 9.138899999999728e-05, 9.206999999999965e-05, 9.18199999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:28:39.709" endtime="20201112 12:28:39.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.697" endtime="20201112 12:28:39.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.721" endtime="20201112 12:28:39.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:39.729" endtime="20201112 12:28:39.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.725" endtime="20201112 12:28:39.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.717" endtime="20201112 12:28:39.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.209" endtime="20201112 12:28:39.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.208" endtime="20201112 12:28:39.755"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.778" endtime="20201112 12:28:39.797"></status>
</kw>
<msg timestamp="20201112 12:28:39.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:39.775" endtime="20201112 12:28:39.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:39.800" endtime="20201112 12:28:39.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.806" endtime="20201112 12:28:39.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.768" endtime="20201112 12:28:39.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.762" endtime="20201112 12:28:39.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.830" endtime="20201112 12:28:40.165"></status>
</kw>
<msg timestamp="20201112 12:28:40.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040572236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04066525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:39.827" endtime="20201112 12:28:40.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040572236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04066525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:40.174" endtime="20201112 12:28:40.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.193" endtime="20201112 12:28:40.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.819" endtime="20201112 12:28:40.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.815" endtime="20201112 12:28:40.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:40.212" level="INFO">${RESULT} = [{'time': 0.04066525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.301400000000237e-05, 'source_diff': 9.301400000000237e-05}, {'time': 0.040763486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:28:40.203" endtime="20201112 12:28:40.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:40.243" level="INFO">${ACCURACY} = {'time': [0.04066525, 0.040763486, 0.040865722, 0.040966931, 0.041067125, 0.041170403, 0.041269597, 0.041371889, 0.041473097, 0.041575306, 0.041674556, 0.041776819, 0.041876, 0.041977236, 0.042077389,...</msg>
<status status="PASS" starttime="20201112 12:28:40.214" endtime="20201112 12:28:40.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.254" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:28:40.252" endtime="20201112 12:28:40.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.259" level="INFO">VALUE: [9.301400000000237e-05, 9.273600000000298e-05, 9.255500000000111e-05, 9.262499999999896e-05, 9.252800000000144e-05, 9.287499999999921e-05, 9.306900000000118e-05, 9.307000000000065e-05, 9.244399999999708e-05, 9.287499999999921e-05, 9.26529999999981e-05, 9.272199999999647e-05, 9.286099999999964e-05, 9.305500000000161e-05, 9.294499999999706e-05, 9.319399999999783e-05, 9.247199999999622e-05, 9.33200000000009e-05, 9.284700000000007e-05, 9.29729999999962e-05, 9.284700000000007e-05, 9.261099999999939e-05, 9.272200000000341e-05, 9.309700000000032e-05, 9.262499999999896e-05, 9.25000000000023e-05, 9.320899999999688e-05, 9.316699999999817e-05, 9.376400000000312e-05, 9.26529999999981e-05, 9.245800000000359e-05, 9.26529999999981e-05, 9.315200000000606e-05, 9.380500000000236e-05, 9.241700000000436e-05, 9.284700000000007e-05, 9.274999999999561e-05, 9.229100000000129e-05, 9.308300000000075e-05, 9.23879999999988e-05, 9.316700000000511e-05, 9.32079999999974e-05, 9.352800000000244e-05, 9.315199999999912e-05, 9.256900000000068e-05, 9.288899999999878e-05, 9.308300000000075e-05, 9.273700000000246e-05, 9.251399999999493e-05, 9.273599999999604e-05]</msg>
<status status="PASS" starttime="20201112 12:28:40.256" endtime="20201112 12:28:40.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.245" endtime="20201112 12:28:40.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.269" endtime="20201112 12:28:40.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:40.277" endtime="20201112 12:28:40.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.273" endtime="20201112 12:28:40.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.264" endtime="20201112 12:28:40.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.758" endtime="20201112 12:28:40.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.756" endtime="20201112 12:28:40.303"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.326" endtime="20201112 12:28:40.345"></status>
</kw>
<msg timestamp="20201112 12:28:40.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:40.323" endtime="20201112 12:28:40.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:40.348" endtime="20201112 12:28:40.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.354" endtime="20201112 12:28:40.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.315" endtime="20201112 12:28:40.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.310" endtime="20201112 12:28:40.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.378" endtime="20201112 12:28:40.713"></status>
</kw>
<msg timestamp="20201112 12:28:40.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040540347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040634444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:40.374" endtime="20201112 12:28:40.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040540347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040634444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:40.722" endtime="20201112 12:28:40.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.741" endtime="20201112 12:28:40.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.367" endtime="20201112 12:28:40.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.363" endtime="20201112 12:28:40.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:40.762" level="INFO">${RESULT} = [{'time': 0.040634444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.409700000000132e-05, 'source_diff': 9.409700000000132e-05}, {'time': 0.040738639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:40.753" endtime="20201112 12:28:40.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:40.793" level="INFO">${ACCURACY} = {'time': [0.040634444, 0.040738639, 0.040837861, 0.040941139, 0.041044347, 0.041144542, 0.041248736, 0.041351, 0.041454153, 0.041558389, 0.041657653, 0.041762903, 0.041863042, 0.041961361, 0.0420665, ...</msg>
<status status="PASS" starttime="20201112 12:28:40.764" endtime="20201112 12:28:40.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.804" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:28:40.801" endtime="20201112 12:28:40.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.809" level="INFO">VALUE: [9.409700000000132e-05, 9.384700000000107e-05, 9.429200000000276e-05, 9.375000000000355e-05, 9.401400000000337e-05, 9.357000000000115e-05, 9.330500000000186e-05, 9.533299999999606e-05, 9.405600000000208e-05, 9.376400000000312e-05, 9.35000000000033e-05, 9.519499999999931e-05, 9.34450000000045e-05, 9.358300000000125e-05, 9.418099999999874e-05, 9.408299999999481e-05, 9.362499999999996e-05, 9.474999999999761e-05, 9.334700000000057e-05, 9.525000000000505e-05, 9.419399999999883e-05, 9.426399999999668e-05, 9.388899999999978e-05, 9.411099999999395e-05, 9.338899999999928e-05, 9.35000000000033e-05, 9.329199999999482e-05, 9.416699999999917e-05, 9.351400000000287e-05, 9.343000000000545e-05, 9.334700000000057e-05, 9.363899999999953e-05, 9.338899999999928e-05, 9.340299999999885e-05, 9.513800000000155e-05, 9.334700000000057e-05, 9.408300000000175e-05, 9.358300000000125e-05, 9.38330000000015e-05, 9.512500000000146e-05, 9.451399999999693e-05, 9.372199999999747e-05, 9.362499999999996e-05, 9.33609999999932e-05, 9.411200000000036e-05, 9.411100000000089e-05, 9.384700000000107e-05, 9.347199999999722e-05, 9.411099999999395e-05, 9.502800000000394e-05]</msg>
<status status="PASS" starttime="20201112 12:28:40.806" endtime="20201112 12:28:40.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.795" endtime="20201112 12:28:40.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.819" endtime="20201112 12:28:40.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:40.827" endtime="20201112 12:28:40.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.823" endtime="20201112 12:28:40.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.814" endtime="20201112 12:28:40.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.305" endtime="20201112 12:28:40.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.304" endtime="20201112 12:28:40.853"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.876" endtime="20201112 12:28:40.894"></status>
</kw>
<msg timestamp="20201112 12:28:40.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:40.872" endtime="20201112 12:28:40.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:40.898" endtime="20201112 12:28:40.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.904" endtime="20201112 12:28:40.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.865" endtime="20201112 12:28:40.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.859" endtime="20201112 12:28:40.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.927" endtime="20201112 12:28:41.261"></status>
</kw>
<msg timestamp="20201112 12:28:41.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040450861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040547097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:40.924" endtime="20201112 12:28:41.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040450861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040547097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.271" endtime="20201112 12:28:41.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.290" endtime="20201112 12:28:41.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.917" endtime="20201112 12:28:41.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.912" endtime="20201112 12:28:41.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.309" level="INFO">${RESULT} = [{'time': 0.040547097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.623599999999954e-05, 'source_diff': 9.623599999999954e-05}, {'time': 0.040648264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:41.300" endtime="20201112 12:28:41.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:41.340" level="INFO">${ACCURACY} = {'time': [0.040547097, 0.040648264, 0.040750444, 0.040851625, 0.040953875, 0.041054028, 0.041159125, 0.041260569, 0.041361667, 0.041462917, 0.041567097, 0.041672333, 0.041778542, 0.04188175, 0.0419829...</msg>
<status status="PASS" starttime="20201112 12:28:41.311" endtime="20201112 12:28:41.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.351" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:28:41.349" endtime="20201112 12:28:41.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.356" level="INFO">VALUE: [9.623599999999954e-05, 9.497200000000566e-05, 9.611099999999595e-05, 9.529200000000376e-05, 9.627799999999825e-05, 9.451399999999693e-05, 9.597199999999972e-05, 9.587499999999527e-05, 9.445899999999813e-05, 9.611100000000289e-05, 9.487499999999427e-05, 9.537500000000171e-05, 9.594500000000006e-05, 9.501400000000437e-05, 9.555499999999717e-05, 9.599999999999886e-05, 9.490300000000035e-05, 9.523599999999854e-05, 9.612499999999552e-05, 9.619400000000083e-05, 9.445800000000559e-05, 9.556899999999674e-05, 9.480600000000283e-05, 9.45000000000043e-05, 9.563900000000153e-05, 9.483299999999556e-05, 9.523600000000548e-05, 9.470899999999838e-05, 9.601399999999843e-05, 9.44859999999978e-05, 9.591600000000144e-05, 9.590299999999441e-05, 9.440200000000037e-05, 9.586100000000264e-05, 9.458300000000225e-05, 9.573599999999904e-05, 9.440200000000037e-05, 9.576399999999818e-05, 9.522199999999897e-05, 9.455600000000258e-05, 9.617999999999433e-05, 9.509699999999538e-05, 9.436100000000114e-05, 9.616700000000117e-05, 9.451399999999693e-05, 9.58330000000035e-05, 9.427800000000319e-05, 9.463900000000053e-05, 9.502800000000394e-05, 9.590300000000135e-05]</msg>
<status status="PASS" starttime="20201112 12:28:41.353" endtime="20201112 12:28:41.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.342" endtime="20201112 12:28:41.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.366" endtime="20201112 12:28:41.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:41.374" endtime="20201112 12:28:41.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.370" endtime="20201112 12:28:41.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.361" endtime="20201112 12:28:41.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.855" endtime="20201112 12:28:41.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.854" endtime="20201112 12:28:41.400"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.423" endtime="20201112 12:28:41.442"></status>
</kw>
<msg timestamp="20201112 12:28:41.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:41.419" endtime="20201112 12:28:41.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:41.445" endtime="20201112 12:28:41.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.451" endtime="20201112 12:28:41.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.412" endtime="20201112 12:28:41.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.406" endtime="20201112 12:28:41.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.475" endtime="20201112 12:28:41.810"></status>
</kw>
<msg timestamp="20201112 12:28:41.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040499125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040594375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.471" endtime="20201112 12:28:41.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040499125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040594375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.820" endtime="20201112 12:28:41.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.838" endtime="20201112 12:28:41.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.464" endtime="20201112 12:28:41.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.459" endtime="20201112 12:28:41.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.857" level="INFO">${RESULT} = [{'time': 0.040594375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.525000000000505e-05, 'source_diff': 9.525000000000505e-05}, {'time': 0.040695722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:41.848" endtime="20201112 12:28:41.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:41.888" level="INFO">${ACCURACY} = {'time': [0.040594375, 0.040695722, 0.040800931, 0.040905153, 0.04100825, 0.041113597, 0.041218819, 0.041320972, 0.041427292, 0.041530486, 0.041632736, 0.041734806, 0.041839167, 0.041944292, 0.0420464...</msg>
<status status="PASS" starttime="20201112 12:28:41.859" endtime="20201112 12:28:41.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.899" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:28:41.897" endtime="20201112 12:28:41.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.905" level="INFO">VALUE: [9.525000000000505e-05, 9.683299999999756e-05, 9.726399999999968e-05, 9.601399999999843e-05, 9.669400000000133e-05, 9.643000000000151e-05, 9.53609999999952e-05, 9.63609999999962e-05, 9.693099999999455e-05, 9.711099999999695e-05, 9.667999999999483e-05, 9.683399999999703e-05, 9.606999999999671e-05, 9.674999999999961e-05, 9.631900000000443e-05, 9.633299999999706e-05, 9.695800000000115e-05, 9.568100000000024e-05, 9.645900000000013e-05, 9.691700000000192e-05, 9.643100000000099e-05, 9.716599999999576e-05, 9.541600000000094e-05, 9.726399999999968e-05, 9.587500000000221e-05, 9.684699999999713e-05, 9.679199999999832e-05, 9.7333000000005e-05, 9.60409999999981e-05, 9.637499999999577e-05, 9.644400000000108e-05, 9.681999999999746e-05, 9.54870000000052e-05, 9.67080000000009e-05, 9.537499999999477e-05, 9.587500000000221e-05, 9.729199999999882e-05, 9.538899999999434e-05, 9.641600000000194e-05, 9.645900000000013e-05, 9.694400000000158e-05, 9.718100000000174e-05, 9.66530000000021e-05, 9.601399999999843e-05, 9.733399999999753e-05, 9.71530000000026e-05, 9.69860000000003e-05, 9.649999999999936e-05, 9.673600000000004e-05, 9.66530000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:28:41.902" endtime="20201112 12:28:41.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.890" endtime="20201112 12:28:41.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.914" endtime="20201112 12:28:41.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:41.923" endtime="20201112 12:28:41.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.918" endtime="20201112 12:28:41.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.910" endtime="20201112 12:28:41.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.402" endtime="20201112 12:28:41.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.401" endtime="20201112 12:28:41.949"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.971" endtime="20201112 12:28:41.990"></status>
</kw>
<msg timestamp="20201112 12:28:41.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:41.968" endtime="20201112 12:28:41.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:41.994" endtime="20201112 12:28:41.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.000" endtime="20201112 12:28:42.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.961" endtime="20201112 12:28:42.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.955" endtime="20201112 12:28:42.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.023" endtime="20201112 12:28:42.357"></status>
</kw>
<msg timestamp="20201112 12:28:42.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040468931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040565708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:42.020" endtime="20201112 12:28:42.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040468931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040565708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:42.366" endtime="20201112 12:28:42.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.385" endtime="20201112 12:28:42.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.013" endtime="20201112 12:28:42.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.008" endtime="20201112 12:28:42.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:42.404" level="INFO">${RESULT} = [{'time': 0.040565708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.677699999999928e-05, 'source_diff': 9.677699999999928e-05}, {'time': 0.040674056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:42.395" endtime="20201112 12:28:42.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:42.435" level="INFO">${ACCURACY} = {'time': [0.040565708, 0.040674056, 0.040780125, 0.040885486, 0.040991569, 0.041092903, 0.041198125, 0.041305194, 0.041411569, 0.041515611, 0.041622819, 0.041726167, 0.041834222, 0.041936583, 0.042039...</msg>
<status status="PASS" starttime="20201112 12:28:42.406" endtime="20201112 12:28:42.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.446" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:28:42.444" endtime="20201112 12:28:42.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.452" level="INFO">VALUE: [9.677699999999928e-05, 9.818100000000274e-05, 9.800000000000086e-05, 9.717999999999533e-05, 9.750000000000036e-05, 9.670900000000038e-05, 9.805599999999914e-05, 9.754100000000654e-05, 9.808299999999881e-05, 9.72080000000014e-05, 9.731899999999849e-05, 9.818100000000274e-05, 9.758299999999831e-05, 9.743000000000251e-05, 9.705499999999867e-05, 9.791600000000344e-05, 9.741699999999548e-05, 9.83059999999994e-05, 9.761100000000439e-05, 9.63059999999974e-05, 9.772300000000095e-05, 9.743099999999505e-05, 9.634700000000357e-05, 9.699999999999986e-05, 9.729199999999882e-05, 9.665199999999569e-05, 9.722200000000097e-05, 9.7027999999999e-05, 9.763900000000353e-05, 9.773600000000104e-05, 9.79860000000013e-05, 9.755499999999917e-05, 9.788899999999684e-05, 9.754199999999907e-05, 9.784699999999813e-05, 9.793100000000249e-05, 9.808299999999881e-05, 9.641600000000194e-05, 9.655600000000458e-05, 9.695800000000115e-05, 9.695800000000115e-05, 9.762499999999702e-05, 9.801400000000043e-05, 9.737499999999677e-05, 9.640299999999491e-05, 9.819400000000283e-05, 9.819499999999537e-05, 9.686199999999617e-05, 9.758299999999831e-05, 9.79159999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:28:42.449" endtime="20201112 12:28:42.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.437" endtime="20201112 12:28:42.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.461" endtime="20201112 12:28:42.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:42.469" endtime="20201112 12:28:42.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.465" endtime="20201112 12:28:42.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.457" endtime="20201112 12:28:42.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.951" endtime="20201112 12:28:42.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.950" endtime="20201112 12:28:42.495"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.518" endtime="20201112 12:28:42.537"></status>
</kw>
<msg timestamp="20201112 12:28:42.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:42.515" endtime="20201112 12:28:42.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:42.541" endtime="20201112 12:28:42.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.547" endtime="20201112 12:28:42.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.508" endtime="20201112 12:28:42.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.502" endtime="20201112 12:28:42.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.570" endtime="20201112 12:28:42.906"></status>
</kw>
<msg timestamp="20201112 12:28:42.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040686236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040784972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:42.567" endtime="20201112 12:28:42.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040686236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040784972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:42.915" endtime="20201112 12:28:42.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.934" endtime="20201112 12:28:42.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.560" endtime="20201112 12:28:42.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.555" endtime="20201112 12:28:42.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:42.955" level="INFO">${RESULT} = [{'time': 0.040784972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.873600000000204e-05, 'source_diff': 9.873600000000204e-05}, {'time': 0.040894319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:42.946" endtime="20201112 12:28:42.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:42.986" level="INFO">${ACCURACY} = {'time': [0.040784972, 0.040894319, 0.040997389, 0.041101681, 0.041205833, 0.041312042, 0.041415417, 0.041520583, 0.041627847, 0.041730889, 0.041834125, 0.041939431, 0.042043639, 0.042147875, 0.042252...</msg>
<status status="PASS" starttime="20201112 12:28:42.957" endtime="20201112 12:28:42.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.997" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:28:42.995" endtime="20201112 12:28:42.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.003" level="INFO">VALUE: [9.873600000000204e-05, 9.88609999999987e-05, 9.772200000000147e-05, 9.838900000000428e-05, 9.834699999999863e-05, 9.83609999999982e-05, 9.855599999999964e-05, 9.784699999999813e-05, 9.89860000000023e-05, 9.843100000000299e-05, 9.818100000000274e-05, 9.920899999999594e-05, 9.863899999999759e-05, 9.919400000000383e-05, 9.844400000000308e-05, 9.800000000000086e-05, 9.9028000000001e-05, 9.86809999999963e-05, 9.891600000000444e-05, 9.776400000000018e-05, 9.931900000000049e-05, 9.87080000000029e-05, 9.75279999999995e-05, 9.845799999999572e-05, 9.834699999999863e-05, 9.922199999999604e-05, 9.775000000000061e-05, 9.879200000000032e-05, 9.734699999999763e-05, 9.851400000000093e-05, 9.865199999999769e-05, 9.827700000000078e-05, 9.86939999999964e-05, 9.890299999999741e-05, 9.722200000000097e-05, 9.894399999999665e-05, 9.795799999999522e-05, 9.929100000000135e-05, 9.730499999999892e-05, 9.863899999999759e-05, 9.836199999999767e-05, 9.748599999999386e-05, 9.906900000000024e-05, 9.729199999999882e-05, 9.725000000000011e-05, 9.881899999999999e-05, 9.859799999999835e-05, 9.856999999999921e-05, 9.854200000000007e-05, 9.829199999999982e-05]</msg>
<status status="PASS" starttime="20201112 12:28:42.999" endtime="20201112 12:28:43.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.988" endtime="20201112 12:28:43.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.012" endtime="20201112 12:28:43.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.021" endtime="20201112 12:28:43.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.016" endtime="20201112 12:28:43.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.008" endtime="20201112 12:28:43.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.498" endtime="20201112 12:28:43.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.496" endtime="20201112 12:28:43.046"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.069" endtime="20201112 12:28:43.088"></status>
</kw>
<msg timestamp="20201112 12:28:43.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:43.066" endtime="20201112 12:28:43.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:43.091" endtime="20201112 12:28:43.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.098" endtime="20201112 12:28:43.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.059" endtime="20201112 12:28:43.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.053" endtime="20201112 12:28:43.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.121" endtime="20201112 12:28:43.456"></status>
</kw>
<msg timestamp="20201112 12:28:43.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.118" endtime="20201112 12:28:43.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.466" endtime="20201112 12:28:43.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.484" endtime="20201112 12:28:43.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.111" endtime="20201112 12:28:43.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.106" endtime="20201112 12:28:43.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.503" level="INFO">${RESULT} = [{'time': 0.040581972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.98609999999997e-05, 'source_diff': 9.98609999999997e-05}, {'time': 0.040691292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:43.494" endtime="20201112 12:28:43.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:43.534" level="INFO">${ACCURACY} = {'time': [0.040581972, 0.040691292, 0.040798542, 0.040905736, 0.041013028, 0.041118236, 0.041228458, 0.04133275, 0.041439958, 0.041545222, 0.041651458, 0.041758708, 0.041867972, 0.041972194, 0.0420765...</msg>
<status status="PASS" starttime="20201112 12:28:43.505" endtime="20201112 12:28:43.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.545" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:28:43.543" endtime="20201112 12:28:43.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.551" level="INFO">VALUE: [9.98609999999997e-05, 9.894499999999612e-05, 9.866699999999673e-05, 9.965299999999816e-05, 9.920900000000288e-05, 9.912500000000546e-05, 9.933300000000006e-05, 9.923600000000254e-05, 9.95410000000016e-05, 9.833299999999906e-05, 9.92080000000034e-05, 9.933300000000006e-05, 9.90410000000011e-05, 9.905500000000067e-05, 9.944400000000408e-05, 9.972299999999601e-05, 9.856899999999974e-05, 9.945900000000313e-05, 9.886100000000564e-05, 0.00010012499999999952, 0.00010017999999999833, 9.941700000000442e-05, 9.945900000000313e-05, 9.869499999999587e-05, 0.00010007000000000071, 9.891699999999698e-05, 9.93609999999992e-05, 9.988799999999937e-05, 9.941699999999748e-05, 9.963900000000553e-05, 9.926400000000168e-05, 9.988899999999884e-05, 9.912499999999852e-05, 9.855500000000017e-05, 9.96809999999973e-05, 9.84860000000018e-05, 9.845900000000213e-05, 9.906999999999971e-05, 9.957000000000021e-05, 9.849999999999443e-05, 9.899999999999493e-05, 9.936100000000614e-05, 9.86660000000042e-05, 9.859799999999835e-05, 9.905600000000014e-05, 9.863899999999759e-05, 9.887499999999827e-05, 9.88609999999987e-05, 9.945799999999672e-05, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201112 12:28:43.548" endtime="20201112 12:28:43.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.536" endtime="20201112 12:28:43.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.564" endtime="20201112 12:28:43.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.573" endtime="20201112 12:28:43.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.568" endtime="20201112 12:28:43.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.560" endtime="20201112 12:28:43.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.049" endtime="20201112 12:28:43.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.047" endtime="20201112 12:28:43.598"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.621" endtime="20201112 12:28:43.640"></status>
</kw>
<msg timestamp="20201112 12:28:43.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:43.618" endtime="20201112 12:28:43.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:43.644" endtime="20201112 12:28:43.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.650" endtime="20201112 12:28:43.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.611" endtime="20201112 12:28:43.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.605" endtime="20201112 12:28:43.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.674" endtime="20201112 12:28:44.009"></status>
</kw>
<msg timestamp="20201112 12:28:44.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040442681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040543569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.670" endtime="20201112 12:28:44.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040442681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040543569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.018" endtime="20201112 12:28:44.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.037" endtime="20201112 12:28:44.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.663" endtime="20201112 12:28:44.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.658" endtime="20201112 12:28:44.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:44.056" level="INFO">${RESULT} = [{'time': 0.040543569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010088800000000037, 'source_diff': 0.00010088800000000037}, {'time': 0.040649833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:44.047" endtime="20201112 12:28:44.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:44.087" level="INFO">${ACCURACY} = {'time': [0.040543569, 0.040649833, 0.040756056, 0.040866333, 0.040973556, 0.041082792, 0.041188056, 0.04129325, 0.041399542, 0.041509736, 0.041618958, 0.041725208, 0.041829444, 0.041939708, 0.0420458...</msg>
<status status="PASS" starttime="20201112 12:28:44.058" endtime="20201112 12:28:44.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.098" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:28:44.095" endtime="20201112 12:28:44.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.103" level="INFO">VALUE: [0.00010088800000000037, 0.00010005500000000167, 0.00010033400000000053, 9.990199999999894e-05, 0.00010008400000000028, 9.938899999999834e-05, 9.969500000000381e-05, 0.00010008299999999387, 9.948599999999586e-05, 0.00010077799999999582, 0.00010063899999999959, 0.00010055500000000217, 9.973600000000304e-05, 9.965199999999869e-05, 9.966700000000467e-05, 0.0001002080000000044, 0.00010006900000000124, 9.944399999999715e-05, 0.00010120899999999794, 9.988799999999937e-05, 0.00010049999999999643, 9.963900000000553e-05, 9.958300000000031e-05, 9.954200000000107e-05, 9.933300000000006e-05, 9.987499999999927e-05, 9.990300000000535e-05, 0.00010043000000000551, 9.973600000000304e-05, 9.977800000000175e-05, 9.993100000000449e-05, 0.00010022199999999704, 0.00010007000000000071, 9.947199999999629e-05, 0.00010108299999999487, 9.933300000000006e-05, 9.945799999999672e-05, 9.931899999999355e-05, 0.00010034700000000063, 9.99159999999985e-05, 9.931999999999996e-05, 9.972299999999601e-05, 0.00010084700000000113, 9.984700000000013e-05, 9.994399999999765e-05, 9.967999999999783e-05, 9.944500000000356e-05, 9.941700000000442e-05, 0.00010097200000000472, 0.00010006900000000124]</msg>
<status status="PASS" starttime="20201112 12:28:44.100" endtime="20201112 12:28:44.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.089" endtime="20201112 12:28:44.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.113" endtime="20201112 12:28:44.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:44.121" endtime="20201112 12:28:44.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.116" endtime="20201112 12:28:44.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.108" endtime="20201112 12:28:44.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.600" endtime="20201112 12:28:44.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.599" endtime="20201112 12:28:44.147"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.169" endtime="20201112 12:28:44.189"></status>
</kw>
<msg timestamp="20201112 12:28:44.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:44.166" endtime="20201112 12:28:44.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:44.192" endtime="20201112 12:28:44.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.198" endtime="20201112 12:28:44.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.159" endtime="20201112 12:28:44.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.153" endtime="20201112 12:28:44.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.222" endtime="20201112 12:28:44.555"></status>
</kw>
<msg timestamp="20201112 12:28:44.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040485653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040586681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.219" endtime="20201112 12:28:44.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040485653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040586681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.565" endtime="20201112 12:28:44.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.583" endtime="20201112 12:28:44.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.211" endtime="20201112 12:28:44.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.206" endtime="20201112 12:28:44.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:44.602" level="INFO">${RESULT} = [{'time': 0.040586681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010102799999999607, 'source_diff': 0.00010102799999999607}, {'time': 0.040692875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:44.593" endtime="20201112 12:28:44.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:44.632" level="INFO">${ACCURACY} = {'time': [0.040586681, 0.040692875, 0.040802181, 0.040907417, 0.041016639, 0.041125944, 0.041234208, 0.041342528, 0.041450708, 0.041558986, 0.041667236, 0.041774486, 0.041883681, 0.041994972, 0.042106...</msg>
<status status="PASS" starttime="20201112 12:28:44.604" endtime="20201112 12:28:44.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.643" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:28:44.641" endtime="20201112 12:28:44.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.648" level="INFO">VALUE: [0.00010102799999999607, 0.00010168100000000624, 0.0001008060000000019, 0.00010050000000000336, 0.00010165300000000016, 0.00010101299999999702, 0.00010030500000000192, 0.00010066700000000567, 0.00010076400000000318, 0.00010113900000000009, 0.00010027800000000225, 0.0001007359999999971, 0.00010122299999999751, 0.00010098599999999736, 0.00010047199999999729, 0.00010095799999999822, 0.00010116599999999976, 0.00010044399999999815, 0.00010083299999999462, 0.00010158300000000231, 0.00010095799999999822, 0.0001005280000000025, 0.00010105499999999573, 0.00010068100000000524, 0.00010132000000000196, 0.0001010410000000031, 0.00010204199999999664, 0.00010098699999999683, 0.00010094499999999812, 0.00010119499999999837, 0.00010100000000000386, 0.00010097199999999779, 0.00010104200000000257, 0.00010033300000000106, 0.00010208300000000281, 0.00010065299999999916, 0.00010157000000000221, 0.00010029100000000235, 0.00010126400000000368, 0.00010076400000000318, 0.00010220799999999947, 0.00010069500000000481, 0.00010165200000000069, 0.00010077800000000275, 0.00010095899999999769, 0.00010080500000000242, 0.00010220899999999894, 0.00010090300000000635, 0.00010040299999999891, 0.00010204200000000357]</msg>
<status status="PASS" starttime="20201112 12:28:44.645" endtime="20201112 12:28:44.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.634" endtime="20201112 12:28:44.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.658" endtime="20201112 12:28:44.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:44.666" endtime="20201112 12:28:44.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.662" endtime="20201112 12:28:44.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.653" endtime="20201112 12:28:44.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.149" endtime="20201112 12:28:44.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.148" endtime="20201112 12:28:44.692"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.716" endtime="20201112 12:28:44.735"></status>
</kw>
<msg timestamp="20201112 12:28:44.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:44.712" endtime="20201112 12:28:44.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:44.739" endtime="20201112 12:28:44.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.746" endtime="20201112 12:28:44.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.704" endtime="20201112 12:28:44.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.699" endtime="20201112 12:28:44.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.770" endtime="20201112 12:28:45.105"></status>
</kw>
<msg timestamp="20201112 12:28:45.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041550014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041651986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.766" endtime="20201112 12:28:45.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041550014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041651986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:45.114" endtime="20201112 12:28:45.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.133" endtime="20201112 12:28:45.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.759" endtime="20201112 12:28:45.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.754" endtime="20201112 12:28:45.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:45.153" level="INFO">${RESULT} = [{'time': 0.041651986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010197199999999879, 'source_diff': 0.00010197199999999879}, {'time': 0.041760181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:45.145" endtime="20201112 12:28:45.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:45.184" level="INFO">${ACCURACY} = {'time': [0.041651986, 0.041760181, 0.041869375, 0.041979653, 0.042091847, 0.042201111, 0.04230925, 0.042417472, 0.042528694, 0.042638944, 0.042750125, 0.042861361, 0.042972639, 0.043083833, 0.0431950...</msg>
<status status="PASS" starttime="20201112 12:28:45.155" endtime="20201112 12:28:45.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.195" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:28:45.192" endtime="20201112 12:28:45.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.200" level="INFO">VALUE: [0.00010197199999999879, 0.00010161200000000092, 0.0001015280000000035, 0.00010159700000000188, 0.00010195799999999922, 0.00010191699999999998, 0.00010166699999999973, 0.0001019160000000005, 0.00010159700000000188, 0.00010209699999999544, 0.00010129200000000282, 0.00010179200000000332, 0.00010152799999999657, 0.00010177700000000428, 0.000101416, 0.00010132000000000196, 0.00010129100000000335, 0.00010176399999999725, 0.0001017359999999981, 0.00010148599999999786, 0.00010136099999999426, 0.00010155500000000317, 0.00010212500000000152, 0.00010208400000000228, 0.00010205600000000314, 0.00010176300000000471, 0.00010152700000000403, 0.00010219499999999937, 0.0001020139999999975, 0.00010129200000000282, 0.00010202799999999707, 0.0001021939999999999, 0.0001016809999999993, 0.00010155600000000264, 0.00010166600000000026, 0.00010258300000000331, 0.00010220899999999894, 0.00010144399999999915, 0.00010211099999999501, 0.00010141699999999948, 0.00010222199999999904, 0.00010198599999999836, 0.00010226399999999775, 0.0001022359999999986, 0.00010261099999999551, 0.00010212500000000152, 0.00010159800000000135, 0.00010226399999999775, 0.00010199999999999793, 0.00010163900000000059]</msg>
<status status="PASS" starttime="20201112 12:28:45.197" endtime="20201112 12:28:45.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.185" endtime="20201112 12:28:45.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.209" endtime="20201112 12:28:45.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:45.218" endtime="20201112 12:28:45.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.213" endtime="20201112 12:28:45.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.205" endtime="20201112 12:28:45.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.694" endtime="20201112 12:28:45.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.693" endtime="20201112 12:28:45.244"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.266" endtime="20201112 12:28:45.285"></status>
</kw>
<msg timestamp="20201112 12:28:45.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:45.263" endtime="20201112 12:28:45.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:45.289" endtime="20201112 12:28:45.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.295" endtime="20201112 12:28:45.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.256" endtime="20201112 12:28:45.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.250" endtime="20201112 12:28:45.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.319" endtime="20201112 12:28:45.654"></status>
</kw>
<msg timestamp="20201112 12:28:45.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040379167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:45.315" endtime="20201112 12:28:45.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040379167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:45.664" endtime="20201112 12:28:45.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.682" endtime="20201112 12:28:45.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.308" endtime="20201112 12:28:45.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.303" endtime="20201112 12:28:45.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:45.701" level="INFO">${RESULT} = [{'time': 0.040482, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010283299999999662, 'source_diff': 0.00010283299999999662}, {'time': 0.040594292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:28:45.692" endtime="20201112 12:28:45.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:45.731" level="INFO">${ACCURACY} = {'time': [0.040482, 0.040594292, 0.0407035, 0.040813792, 0.040923014, 0.041033319, 0.041146528, 0.041256819, 0.041368028, 0.041479278, 0.041592569, 0.041704833, 0.041815111, 0.041925458, 0.042037653, ...</msg>
<status status="PASS" starttime="20201112 12:28:45.703" endtime="20201112 12:28:45.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.743" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:28:45.740" endtime="20201112 12:28:45.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.748" level="INFO">VALUE: [0.00010283299999999662, 0.00010252799999999757, 0.00010261099999999551, 0.00010243100000000005, 0.00010291700000000098, 0.00010316600000000176, 0.00010229200000000382, 0.00010252699999999809, 0.00010243100000000005, 0.00010266700000000073, 0.00010290200000000194, 0.0001027359999999991, 0.00010395800000000122, 0.00010248599999999886, 0.00010338900000000234, 0.00010293000000000108, 0.00010297199999999979, 0.00010299999999999893, 0.00010243000000000058, 0.00010274999999999868, 0.00010249999999999843, 0.00010283299999999662, 0.00010261100000000245, 0.00010240300000000091, 0.00010258399999999585, 0.00010299999999999893, 0.00010266699999999379, 0.00010263899999999465, 0.00010263900000000159, 0.00010309800000000285, 0.00010309799999999592, 0.00010298599999999936, 0.00010241700000000048, 0.00010316700000000123, 0.00010248699999999833, 0.00010256999999999628, 0.00010261200000000192, 0.00010249999999999843, 0.00010251400000000493, 0.00010316700000000123, 0.00010258300000000331, 0.00010420799999999453, 0.00010249999999999843, 0.0001036940000000014, 0.00010283299999999662, 0.0001026940000000004, 0.00010258300000000331, 0.00010279199999999739, 0.00010249999999999843, 0.00010254200000000407]</msg>
<status status="PASS" starttime="20201112 12:28:45.745" endtime="20201112 12:28:45.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.733" endtime="20201112 12:28:45.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.758" endtime="20201112 12:28:45.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:45.767" endtime="20201112 12:28:45.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.763" endtime="20201112 12:28:45.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.754" endtime="20201112 12:28:45.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.246" endtime="20201112 12:28:45.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.245" endtime="20201112 12:28:45.793"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.816" endtime="20201112 12:28:45.836"></status>
</kw>
<msg timestamp="20201112 12:28:45.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:45.813" endtime="20201112 12:28:45.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:45.839" endtime="20201112 12:28:45.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.845" endtime="20201112 12:28:45.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.806" endtime="20201112 12:28:45.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.800" endtime="20201112 12:28:45.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.869" endtime="20201112 12:28:46.203"></status>
</kw>
<msg timestamp="20201112 12:28:46.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040796667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04090075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:45.865" endtime="20201112 12:28:46.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040796667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04090075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:46.213" endtime="20201112 12:28:46.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.231" endtime="20201112 12:28:46.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.858" endtime="20201112 12:28:46.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.853" endtime="20201112 12:28:46.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.250" level="INFO">${RESULT} = [{'time': 0.04090075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010408299999999787, 'source_diff': 0.00010408299999999787}, {'time': 0.041013028, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:28:46.241" endtime="20201112 12:28:46.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:46.280" level="INFO">${ACCURACY} = {'time': [0.04090075, 0.041013028, 0.041123361, 0.041231611, 0.041339833, 0.041449097, 0.041560403, 0.04167375, 0.041785944, 0.041898222, 0.042010486, 0.042120764, 0.042231056, 0.042345361, 0.04245663...</msg>
<status status="PASS" starttime="20201112 12:28:46.252" endtime="20201112 12:28:46.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.291" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:28:46.289" endtime="20201112 12:28:46.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.296" level="INFO">VALUE: [0.00010408299999999787, 0.00010345900000000019, 0.00010372200000000054, 0.00010358300000000431, 0.00010370800000000097, 0.00010390299999999547, 0.00010427799999999932, 0.0001038060000000049, 0.00010368000000000183, 0.00010349999999999943, 0.00010420800000000147, 0.00010397200000000079, 0.00010361200000000292, 0.00010381899999999805, 0.00010347200000000029, 0.0001036810000000013, 0.0001040139999999995, 0.00010425000000000018, 0.00010362499999999608, 0.00010380599999999796, 0.00010376399999999925, 0.00010415299999999572, 0.00010391700000000198, 0.0001038480000000036, 0.00010359800000000335, 0.00010370800000000097, 0.00010361099999999651, 0.00010381899999999805, 0.00010391700000000198, 0.00010359700000000388, 0.0001034860000000068, 0.00010393100000000155, 0.0001040139999999995, 0.00010384799999999667, 0.00010376399999999925, 0.00010354199999999814, 0.00010390299999999547, 0.00010347200000000029, 0.00010334799999999617, 0.00010337499999999583, 0.0001039160000000025, 0.00010352699999999909, 0.00010336099999999626, 0.00010381900000000499, 0.00010376399999999925, 0.00010402799999999907, 0.00010348699999999933, 0.00010412499999999658, 0.00010372200000000054, 0.00010422200000000104]</msg>
<status status="PASS" starttime="20201112 12:28:46.293" endtime="20201112 12:28:46.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.282" endtime="20201112 12:28:46.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.306" endtime="20201112 12:28:46.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:46.314" endtime="20201112 12:28:46.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.310" endtime="20201112 12:28:46.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.301" endtime="20201112 12:28:46.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.796" endtime="20201112 12:28:46.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.794" endtime="20201112 12:28:46.340"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.363" endtime="20201112 12:28:46.383"></status>
</kw>
<msg timestamp="20201112 12:28:46.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:46.360" endtime="20201112 12:28:46.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:46.386" endtime="20201112 12:28:46.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.392" endtime="20201112 12:28:46.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.352" endtime="20201112 12:28:46.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.347" endtime="20201112 12:28:46.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.416" endtime="20201112 12:28:46.750"></status>
</kw>
<msg timestamp="20201112 12:28:46.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040650556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040754861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.412" endtime="20201112 12:28:46.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040650556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040754861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.759" endtime="20201112 12:28:46.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.777" endtime="20201112 12:28:46.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.405" endtime="20201112 12:28:46.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.400" endtime="20201112 12:28:46.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.797" level="INFO">${RESULT} = [{'time': 0.040754861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010430500000000592, 'source_diff': 0.00010430500000000592}, {'time': 0.040870181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:46.788" endtime="20201112 12:28:46.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:46.828" level="INFO">${ACCURACY} = {'time': [0.040754861, 0.040870181, 0.040983375, 0.041093597, 0.041207819, 0.041318069, 0.041432347, 0.041543639, 0.041656778, 0.041766056, 0.041876222, 0.041986472, 0.042098736, 0.042209917, 0.042322...</msg>
<status status="PASS" starttime="20201112 12:28:46.799" endtime="20201112 12:28:46.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.839" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:28:46.837" endtime="20201112 12:28:46.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.844" level="INFO">VALUE: [0.00010430500000000592, 0.00010441699999999554, 0.00010511100000000495, 0.00010465300000000316, 0.00010502700000000059, 0.00010451300000000052, 0.00010494400000000265, 0.00010520800000000247, 0.00010426399999999975, 0.00010466700000000273, 0.00010447199999999435, 0.0001048889999999969, 0.00010513899999999715, 0.00010450000000000043, 0.0001046810000000023, 0.00010443100000000205, 0.0001048889999999969, 0.00010436099999999726, 0.00010458299999999837, 0.00010455499999999923, 0.00010498600000000136, 0.00010500000000000093, 0.00010447300000000076, 0.00010431899999999855, 0.00010442999999999564, 0.0001051940000000029, 0.00010495800000000222, 0.00010434699999999769, 0.00010509699999999844, 0.00010484799999999767, 0.00010487500000000427, 0.0001048610000000047, 0.00010504199999999964, 0.00010444500000000162, 0.0001051810000000028, 0.00010520900000000194, 0.0001046810000000023, 0.00010448600000000086, 0.00010506999999999878, 0.00010516599999999682, 0.00010484699999999819, 0.0001051940000000029, 0.00010504199999999964, 0.00010438900000000334, 0.00010497200000000179, 0.00010473599999999417, 0.00010511099999999801, 0.00010444500000000162, 0.00010511100000000495, 0.00010529199999999989]</msg>
<status status="PASS" starttime="20201112 12:28:46.841" endtime="20201112 12:28:46.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.830" endtime="20201112 12:28:46.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.854" endtime="20201112 12:28:46.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:46.862" endtime="20201112 12:28:46.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.858" endtime="20201112 12:28:46.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.849" endtime="20201112 12:28:46.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.342" endtime="20201112 12:28:46.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.341" endtime="20201112 12:28:46.888"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.911" endtime="20201112 12:28:46.930"></status>
</kw>
<msg timestamp="20201112 12:28:46.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:46.908" endtime="20201112 12:28:46.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:46.934" endtime="20201112 12:28:46.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.940" endtime="20201112 12:28:46.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.900" endtime="20201112 12:28:46.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.895" endtime="20201112 12:28:46.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.963" endtime="20201112 12:28:47.298"></status>
</kw>
<msg timestamp="20201112 12:28:47.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040411319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040517472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.960" endtime="20201112 12:28:47.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040411319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040517472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:47.307" endtime="20201112 12:28:47.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.325" endtime="20201112 12:28:47.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.953" endtime="20201112 12:28:47.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.948" endtime="20201112 12:28:47.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:47.346" level="INFO">${RESULT} = [{'time': 0.040517472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010615299999999772, 'source_diff': 0.00010615299999999772}, {'time': 0.04063375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:28:47.337" endtime="20201112 12:28:47.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:47.376" level="INFO">${ACCURACY} = {'time': [0.040517472, 0.04063375, 0.040748042, 0.040861222, 0.0409715, 0.041087764, 0.041203, 0.041318222, 0.0414345, 0.041549792, 0.041664056, 0.041779306, 0.041892569, 0.042002833, 0.042117056, 0.0...</msg>
<status status="PASS" starttime="20201112 12:28:47.348" endtime="20201112 12:28:47.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.387" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:28:47.385" endtime="20201112 12:28:47.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.393" level="INFO">VALUE: [0.00010615299999999772, 0.00010548600000000186, 0.00010536099999999826, 0.0001060690000000003, 0.00010566700000000373, 0.00010629200000000089, 0.00010612499999999858, 0.00010609699999999944, 0.00010569399999999646, 0.00010575000000000168, 0.00010534799999999817, 0.00010625000000000218, 0.00010576299999999483, 0.00010550000000000143, 0.00010615299999999772, 0.00010554200000000014, 0.0001060140000000015, 0.00010588900000000484, 0.00010543000000000358, 0.00010567999999999689, 0.00010588900000000484, 0.0001060140000000015, 0.00010581999999999953, 0.00010536199999999774, 0.00010617999999999739, 0.00010605500000000073, 0.00010565199999999775, 0.0001053889999999974, 0.00010593100000000355, 0.00010625000000000218, 0.00010534699999999869, 0.00010556999999999928, 0.00010629100000000141, 0.00010586099999999876, 0.00010554100000000066, 0.0001058889999999979, 0.00010530499999999998, 0.00010550000000000143, 0.00010620800000000347, 0.00010543100000000305, 0.00010577700000000134, 0.00010617999999999739, 0.00010559699999999894, 0.00010536099999999826, 0.00010544400000000315, 0.00010593100000000355, 0.00010581900000000005, 0.00010624999999999524, 0.00010545800000000272, 0.00010543100000000305]</msg>
<status status="PASS" starttime="20201112 12:28:47.390" endtime="20201112 12:28:47.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.378" endtime="20201112 12:28:47.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.402" endtime="20201112 12:28:47.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:47.411" endtime="20201112 12:28:47.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.406" endtime="20201112 12:28:47.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.398" endtime="20201112 12:28:47.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.890" endtime="20201112 12:28:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.889" endtime="20201112 12:28:47.436"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.459" endtime="20201112 12:28:47.479"></status>
</kw>
<msg timestamp="20201112 12:28:47.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:47.456" endtime="20201112 12:28:47.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:47.482" endtime="20201112 12:28:47.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.488" endtime="20201112 12:28:47.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.449" endtime="20201112 12:28:47.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.443" endtime="20201112 12:28:47.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.512" endtime="20201112 12:28:47.846"></status>
</kw>
<msg timestamp="20201112 12:28:47.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040527931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040634653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:47.508" endtime="20201112 12:28:47.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040527931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040634653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:47.856" endtime="20201112 12:28:47.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.874" endtime="20201112 12:28:47.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.501" endtime="20201112 12:28:47.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.496" endtime="20201112 12:28:47.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:47.893" level="INFO">${RESULT} = [{'time': 0.040634653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001067219999999966, 'source_diff': 0.0001067219999999966}, {'time': 0.040749931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:47.884" endtime="20201112 12:28:47.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:47.923" level="INFO">${ACCURACY} = {'time': [0.040634653, 0.040749931, 0.040861153, 0.040974361, 0.041086625, 0.041199875, 0.041312222, 0.041426431, 0.041539694, 0.041654944, 0.041769181, 0.041880444, 0.041993764, 0.042108986, 0.042222...</msg>
<status status="PASS" starttime="20201112 12:28:47.895" endtime="20201112 12:28:47.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.934" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:28:47.932" endtime="20201112 12:28:47.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.939" level="INFO">VALUE: [0.0001067219999999966, 0.0001063480000000061, 0.00010629199999999395, 0.00010634699999999969, 0.0001068889999999989, 0.00010702799999999513, 0.00010727800000000232, 0.00010644499999999668, 0.00010686099999999976, 0.00010717999999999839, 0.00010719500000000437, 0.00010650000000000243, 0.00010702800000000207, 0.0001065690000000008, 0.00010624999999999524, 0.00010674999999999574, 0.0001066940000000044, 0.00010675000000000268, 0.00010687499999999933, 0.00010690299999999847, 0.00010730600000000146, 0.00010686099999999976, 0.00010695899999999675, 0.0001065560000000007, 0.00010645900000000319, 0.00010707000000000078, 0.00010673599999999617, 0.00010692999999999814, 0.00010687500000000627, 0.00010662499999999908, 0.00010717999999999839, 0.00010630600000000046, 0.00010666699999999779, 0.00010670799999999703, 0.00010698700000000283, 0.00010708300000000087, 0.00010668000000000483, 0.00010716599999999882, 0.00010723700000000308, 0.00010700000000000293, 0.00010637499999999883, 0.00010695899999999675, 0.00010687499999999933, 0.00010629199999999395, 0.00010647200000000329, 0.0001072360000000036, 0.00010665299999999822, 0.00010655500000000123, 0.00010661100000000645, 0.00010681900000000105]</msg>
<status status="PASS" starttime="20201112 12:28:47.936" endtime="20201112 12:28:47.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.925" endtime="20201112 12:28:47.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.949" endtime="20201112 12:28:47.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:47.957" endtime="20201112 12:28:47.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.953" endtime="20201112 12:28:47.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.944" endtime="20201112 12:28:47.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.439" endtime="20201112 12:28:47.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.437" endtime="20201112 12:28:47.983"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.006" endtime="20201112 12:28:48.026"></status>
</kw>
<msg timestamp="20201112 12:28:48.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:48.003" endtime="20201112 12:28:48.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:48.029" endtime="20201112 12:28:48.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.035" endtime="20201112 12:28:48.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.995" endtime="20201112 12:28:48.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.990" endtime="20201112 12:28:48.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.058" endtime="20201112 12:28:48.393"></status>
</kw>
<msg timestamp="20201112 12:28:48.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040687917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040795403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:48.055" endtime="20201112 12:28:48.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040687917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040795403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:48.402" endtime="20201112 12:28:48.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.420" endtime="20201112 12:28:48.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.048" endtime="20201112 12:28:48.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.043" endtime="20201112 12:28:48.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:48.439" level="INFO">${RESULT} = [{'time': 0.040795403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010748600000000386, 'source_diff': 0.00010748600000000386}, {'time': 0.040912611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:48.431" endtime="20201112 12:28:48.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:48.470" level="INFO">${ACCURACY} = {'time': [0.040795403, 0.040912611, 0.041027917, 0.041141181, 0.041255375, 0.041374653, 0.041486861, 0.041600181, 0.041715347, 0.041832611, 0.041944903, 0.042063139, 0.042181389, 0.042293611, 0.042411...</msg>
<status status="PASS" starttime="20201112 12:28:48.441" endtime="20201112 12:28:48.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.481" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:28:48.478" endtime="20201112 12:28:48.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.486" level="INFO">VALUE: [0.00010748600000000386, 0.00010767999999999889, 0.00010823599999999767, 0.00010832000000000203, 0.00010745799999999778, 0.00010827799999999638, 0.00010779200000000239, 0.00010826399999999681, 0.00010742999999999864, 0.0001080419999999957, 0.00010765299999999922, 0.00010795799999999828, 0.00010765299999999922, 0.00010729200000000189, 0.00010793099999999861, 0.00010748599999999692, 0.0001082360000000046, 0.00010802800000000307, 0.00010829200000000289, 0.00010792999999999914, 0.00010811100000000101, 0.00010829199999999595, 0.00010795799999999828, 0.00010820800000000547, 0.00010793099999999861, 0.00010819499999999843, 0.00010793099999999861, 0.00010761100000000051, 0.00010777800000000282, 0.00010791699999999904, 0.00010741699999999854, 0.00010807000000000178, 0.00010730600000000146, 0.00010734700000000069, 0.00010798700000000383, 0.0001075549999999953, 0.00010779100000000291, 0.00010797199999999785, 0.00010749999999999649, 0.00010774999999999674, 0.00010817999999999939, 0.00010765299999999922, 0.00010797199999999785, 0.00010795800000000522, 0.00010740299999999897, 0.00010743099999999811, 0.0001074019999999995, 0.00010783299999999468, 0.00010769399999999846, 0.00010815299999999972]</msg>
<status status="PASS" starttime="20201112 12:28:48.483" endtime="20201112 12:28:48.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.471" endtime="20201112 12:28:48.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.495" endtime="20201112 12:28:48.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:48.504" endtime="20201112 12:28:48.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.499" endtime="20201112 12:28:48.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.491" endtime="20201112 12:28:48.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.985" endtime="20201112 12:28:48.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.984" endtime="20201112 12:28:48.530"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.552" endtime="20201112 12:28:48.572"></status>
</kw>
<msg timestamp="20201112 12:28:48.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:48.549" endtime="20201112 12:28:48.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:48.575" endtime="20201112 12:28:48.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.581" endtime="20201112 12:28:48.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.542" endtime="20201112 12:28:48.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.536" endtime="20201112 12:28:48.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.605" endtime="20201112 12:28:48.941"></status>
</kw>
<msg timestamp="20201112 12:28:48.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040405514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040514417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:48.602" endtime="20201112 12:28:48.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040405514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040514417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:48.951" endtime="20201112 12:28:48.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.969" endtime="20201112 12:28:48.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.594" endtime="20201112 12:28:48.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.590" endtime="20201112 12:28:48.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:48.988" level="INFO">${RESULT} = [{'time': 0.040514417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010890300000000047, 'source_diff': 0.00010890300000000047}, {'time': 0.040630694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:48.979" endtime="20201112 12:28:48.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:49.019" level="INFO">${ACCURACY} = {'time': [0.040514417, 0.040630694, 0.040749, 0.040863236, 0.040980528, 0.041095764, 0.041213056, 0.041328319, 0.041447639, 0.041564847, 0.041680125, 0.041796375, 0.041910653, 0.04203, 0.042145181, 0....</msg>
<status status="PASS" starttime="20201112 12:28:48.990" endtime="20201112 12:28:49.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.030" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:28:49.028" endtime="20201112 12:28:49.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.035" level="INFO">VALUE: [0.00010890300000000047, 0.00010893000000000014, 0.00010895799999999928, 0.00010841699999999954, 0.00010932000000000303, 0.00010915300000000072, 0.00010859799999999448, 0.00010908300000000287, 0.00010915300000000072, 0.00010841600000000007, 0.00010876399999999731, 0.00010869399999999946, 0.00010887500000000133, 0.00010855599999999577, 0.00010890299999999353, 0.00010852800000000357, 0.00010877799999999688, 0.00010834699999999475, 0.00010861100000000151, 0.0001088340000000021, 0.00010834700000000169, 0.00010843099999999911, 0.00010913900000000115, 0.00010862500000000108, 0.00010920799999999953, 0.00010927799999999738, 0.00010936100000000226, 0.00010899999999999799, 0.00010881900000000305, 0.000108902000000001, 0.00010915300000000072, 0.00010927800000000432, 0.00010893099999999961, 0.0001087089999999985, 0.00010899999999999799, 0.00010879100000000391, 0.00010894399999999971, 0.00010831900000000255, 0.00010895899999999875, 0.00010909700000000244, 0.00010913900000000115, 0.00010890300000000047, 0.00010916600000000082, 0.00010870799999999903, 0.00010840299999999997, 0.00010893099999999961, 0.00010865300000000022, 0.00010849999999999749, 0.0001083890000000004, 0.00010898599999999842]</msg>
<status status="PASS" starttime="20201112 12:28:49.032" endtime="20201112 12:28:49.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.021" endtime="20201112 12:28:49.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.045" endtime="20201112 12:28:49.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:49.053" endtime="20201112 12:28:49.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.049" endtime="20201112 12:28:49.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.040" endtime="20201112 12:28:49.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.532" endtime="20201112 12:28:49.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.531" endtime="20201112 12:28:49.079"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.102" endtime="20201112 12:28:49.121"></status>
</kw>
<msg timestamp="20201112 12:28:49.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:49.098" endtime="20201112 12:28:49.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:49.125" endtime="20201112 12:28:49.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.131" endtime="20201112 12:28:49.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.091" endtime="20201112 12:28:49.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.085" endtime="20201112 12:28:49.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.154" endtime="20201112 12:28:49.488"></status>
</kw>
<msg timestamp="20201112 12:28:49.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040524292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:49.151" endtime="20201112 12:28:49.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040524292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:49.498" endtime="20201112 12:28:49.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.516" endtime="20201112 12:28:49.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.144" endtime="20201112 12:28:49.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.139" endtime="20201112 12:28:49.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:49.536" level="INFO">${RESULT} = [{'time': 0.040633611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010931899999999661, 'source_diff': 0.00010931899999999661}, {'time': 0.040751944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:49.528" endtime="20201112 12:28:49.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:49.567" level="INFO">${ACCURACY} = {'time': [0.040633611, 0.040751944, 0.040869208, 0.040988542, 0.041103806, 0.041221125, 0.041339403, 0.041454681, 0.041572958, 0.041690222, 0.041810514, 0.041927847, 0.042046111, 0.042160389, 0.042276...</msg>
<status status="PASS" starttime="20201112 12:28:49.538" endtime="20201112 12:28:49.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.578" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:28:49.575" endtime="20201112 12:28:49.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.583" level="INFO">VALUE: [0.00010931899999999661, 0.00010983299999999668, 0.00010991599999999463, 0.00011011100000000301, 0.0001093890000000014, 0.0001100969999999965, 0.00010936099999999532, 0.00011012500000000258, 0.00010999999999999899, 0.00011011099999999607, 0.00010990300000000147, 0.00010951399999999806, 0.00010933299999999618, 0.00010965300000000122, 0.00010959700000000294, 0.00010995800000000028, 0.00010991700000000104, 0.0001093890000000014, 0.00010984699999999625, 0.00010963900000000165, 0.00010961099999999557, 0.00010997299999999932, 0.000109596999999996, 0.00010983299999999668, 0.00010963900000000165, 0.00010973599999999917, 0.00010954200000000414, 0.00010936099999999532, 0.00011026399999999881, 0.00010962499999999514, 0.00010948599999999892, 0.00010951399999999806, 0.00010974999999999874, 0.00010961100000000251, 0.00010956899999999686, 0.00011029199999999795, 0.00010980599999999702, 0.00011002800000000507, 0.00010945799999999978, 0.00010979199999999745, 0.00010956999999999634, 0.00010954200000000414, 0.00010945799999999978, 0.00010990300000000147, 0.00010966700000000079, 0.0001100969999999965, 0.00011026399999999881, 0.00011033399999999666, 0.00011018100000000086, 0.0001100690000000043]</msg>
<status status="PASS" starttime="20201112 12:28:49.580" endtime="20201112 12:28:49.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.569" endtime="20201112 12:28:49.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.593" endtime="20201112 12:28:49.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:49.601" endtime="20201112 12:28:49.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.596" endtime="20201112 12:28:49.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.588" endtime="20201112 12:28:49.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.081" endtime="20201112 12:28:49.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.080" endtime="20201112 12:28:49.627"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.649" endtime="20201112 12:28:49.669"></status>
</kw>
<msg timestamp="20201112 12:28:49.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:49.646" endtime="20201112 12:28:49.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:49.672" endtime="20201112 12:28:49.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.679" endtime="20201112 12:28:49.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.639" endtime="20201112 12:28:49.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.633" endtime="20201112 12:28:49.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.702" endtime="20201112 12:28:50.038"></status>
</kw>
<msg timestamp="20201112 12:28:50.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040499375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040610125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:49.699" endtime="20201112 12:28:50.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040499375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040610125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.047" endtime="20201112 12:28:50.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.066" endtime="20201112 12:28:50.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.691" endtime="20201112 12:28:50.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.687" endtime="20201112 12:28:50.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:50.084" level="INFO">${RESULT} = [{'time': 0.040610125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011074999999999974, 'source_diff': 0.00011074999999999974}, {'time': 0.040727361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:50.076" endtime="20201112 12:28:50.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:50.115" level="INFO">${ACCURACY} = {'time': [0.040610125, 0.040727361, 0.040845639, 0.040962931, 0.041079222, 0.041195458, 0.041311736, 0.041433042, 0.041549306, 0.041666597, 0.041784903, 0.041902167, 0.042018472, 0.042139764, 0.042258...</msg>
<status status="PASS" starttime="20201112 12:28:50.087" endtime="20201112 12:28:50.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.126" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:28:50.124" endtime="20201112 12:28:50.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.131" level="INFO">VALUE: [0.00011074999999999974, 0.00011077799999999888, 0.00011125000000000024, 0.00011068100000000136, 0.00011051399999999906, 0.00011108299999999793, 0.00011069400000000146, 0.00011084800000000367, 0.00011047299999999982, 0.00011068000000000189, 0.00011074999999999974, 0.00011077799999999888, 0.00011083300000000462, 0.00011052800000000557, 0.00011041700000000154, 0.00011125000000000024, 0.00011056899999999786, 0.00011065300000000222, 0.00011044400000000121, 0.00011037499999999589, 0.00011136100000000426, 0.0001108890000000029, 0.00011120800000000153, 0.00011051399999999906, 0.00011052799999999863, 0.00011088899999999596, 0.00011061099999999657, 0.00011099999999999999, 0.00011129200000000589, 0.00011112499999999664, 0.00011074999999999974, 0.00011041700000000154, 0.0001107769999999994, 0.00011072300000000007, 0.00011066600000000232, 0.00011076399999999931, 0.00011036100000000326, 0.00011048599999999992, 0.00011123600000000067, 0.00011047200000000035, 0.00011079199999999845, 0.00011048599999999992, 0.00011040300000000197, 0.00011058300000000437, 0.00011065300000000222, 0.00011132000000000503, 0.00011043000000000164, 0.00011088899999999596, 0.00011129199999999895, 0.00011093100000000161]</msg>
<status status="PASS" starttime="20201112 12:28:50.128" endtime="20201112 12:28:50.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.117" endtime="20201112 12:28:50.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.141" endtime="20201112 12:28:50.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:50.149" endtime="20201112 12:28:50.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.145" endtime="20201112 12:28:50.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.136" endtime="20201112 12:28:50.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.629" endtime="20201112 12:28:50.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.628" endtime="20201112 12:28:50.175"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.198" endtime="20201112 12:28:50.218"></status>
</kw>
<msg timestamp="20201112 12:28:50.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:50.195" endtime="20201112 12:28:50.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:50.221" endtime="20201112 12:28:50.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.227" endtime="20201112 12:28:50.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.187" endtime="20201112 12:28:50.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.182" endtime="20201112 12:28:50.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.251" endtime="20201112 12:28:50.586"></status>
</kw>
<msg timestamp="20201112 12:28:50.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040667917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040780236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.247" endtime="20201112 12:28:50.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040667917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040780236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.595" endtime="20201112 12:28:50.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.614" endtime="20201112 12:28:50.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.240" endtime="20201112 12:28:50.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.235" endtime="20201112 12:28:50.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:50.633" level="INFO">${RESULT} = [{'time': 0.040780236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011231899999999961, 'source_diff': 0.00011231899999999961}, {'time': 0.040901542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:50.624" endtime="20201112 12:28:50.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:50.663" level="INFO">${ACCURACY} = {'time': [0.040780236, 0.040901542, 0.041022861, 0.041143181, 0.041264458, 0.041384764, 0.041501083, 0.041618431, 0.041738819, 0.041861056, 0.041980347, 0.042100667, 0.042217986, 0.042337306, 0.042459...</msg>
<status status="PASS" starttime="20201112 12:28:50.635" endtime="20201112 12:28:50.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.674" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:28:50.672" endtime="20201112 12:28:50.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.679" level="INFO">VALUE: [0.00011231899999999961, 0.00011218099999999592, 0.00011166700000000279, 0.00011150000000000049, 0.00011165199999999681, 0.00011170799999999509, 0.00011147200000000135, 0.00011158399999999791, 0.00011180500000000648, 0.00011175000000000074, 0.00011216600000000382, 0.00011183399999999816, 0.00011188899999999696, 0.00011156999999999834, 0.00011231899999999961, 0.00011227800000000038, 0.00011180599999999902, 0.00011141599999999613, 0.00011150000000000049, 0.00011140300000000297, 0.00011197200000000185, 0.00011229199999999995, 0.00011173600000000117, 0.00011176400000000031, 0.00011229199999999995, 0.00011175000000000074, 0.00011151400000000006, 0.00011144499999999474, 0.00011166699999999585, 0.00011215299999999678, 0.00011176400000000031, 0.00011165200000000375, 0.00011180499999999954, 0.00011188899999999696, 0.00011158299999999843, 0.00011176400000000031, 0.00011223599999999473, 0.00011218099999999592, 0.00011163799999999724, 0.00011166599999999638, 0.00011144500000000168, 0.00011218000000000339, 0.00011165199999999681, 0.00011198600000000142, 0.00011143099999999517, 0.00011226400000000081, 0.00011173599999999423, 0.00011150000000000049, 0.00011218000000000339, 0.00011194499999999524]</msg>
<status status="PASS" starttime="20201112 12:28:50.676" endtime="20201112 12:28:50.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.665" endtime="20201112 12:28:50.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.689" endtime="20201112 12:28:50.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:50.697" endtime="20201112 12:28:50.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.693" endtime="20201112 12:28:50.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.684" endtime="20201112 12:28:50.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.177" endtime="20201112 12:28:50.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.176" endtime="20201112 12:28:50.723"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.746" endtime="20201112 12:28:50.766"></status>
</kw>
<msg timestamp="20201112 12:28:50.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:50.743" endtime="20201112 12:28:50.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:50.769" endtime="20201112 12:28:50.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.775" endtime="20201112 12:28:50.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.735" endtime="20201112 12:28:50.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.730" endtime="20201112 12:28:50.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.799" endtime="20201112 12:28:51.135"></status>
</kw>
<msg timestamp="20201112 12:28:51.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040599514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040712722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.795" endtime="20201112 12:28:51.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040599514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040712722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.145" endtime="20201112 12:28:51.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.163" endtime="20201112 12:28:51.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.788" endtime="20201112 12:28:51.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.783" endtime="20201112 12:28:51.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:51.182" level="INFO">${RESULT} = [{'time': 0.040712722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011320799999999659, 'source_diff': 0.00011320799999999659}, {'time': 0.040836014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:51.173" endtime="20201112 12:28:51.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:51.212" level="INFO">${ACCURACY} = {'time': [0.040712722, 0.040836014, 0.040958361, 0.041077583, 0.041197875, 0.041315125, 0.041437431, 0.041559694, 0.041680986, 0.041800306, 0.041921542, 0.042041875, 0.042165153, 0.0422885, 0.04241175...</msg>
<status status="PASS" starttime="20201112 12:28:51.184" endtime="20201112 12:28:51.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.223" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:28:51.221" endtime="20201112 12:28:51.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.228" level="INFO">VALUE: [0.00011320799999999659, 0.00011269499999999599, 0.00011261099999999857, 0.00011231899999999961, 0.00011293100000000361, 0.00011284699999999925, 0.00011297299999999538, 0.00011284699999999925, 0.0001128890000000049, 0.0001127090000000025, 0.00011275000000000174, 0.00011331900000000061, 0.0001130969999999995, 0.0001130969999999995, 0.00011313899999999821, 0.00011297199999999591, 0.00011301399999999462, 0.00011273599999999523, 0.00011273600000000217, 0.00011294400000000371, 0.00011325000000000224, 0.00011322300000000257, 0.00011313900000000515, 0.00011248599999999498, 0.00011325000000000224, 0.0001124169999999966, 0.00011288899999999796, 0.00011240300000000397, 0.00011250000000000149, 0.00011261099999999857, 0.00011240300000000397, 0.00011234699999999875, 0.00011237500000000483, 0.00011300000000000199, 0.00011290299999999753, 0.00011304100000000122, 0.00011318000000000439, 0.00011326399999999487, 0.00011256999999999934, 0.0001128619999999983, 0.00011327800000000138, 0.0001128749999999984, 0.00011294499999999624, 0.00011302699999999472, 0.00011302800000000113, 0.00011269499999999599, 0.00011286099999999882, 0.00011313899999999821, 0.00011312499999999864, 0.00011283299999999968]</msg>
<status status="PASS" starttime="20201112 12:28:51.225" endtime="20201112 12:28:51.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.214" endtime="20201112 12:28:51.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.238" endtime="20201112 12:28:51.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:51.246" endtime="20201112 12:28:51.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.242" endtime="20201112 12:28:51.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.233" endtime="20201112 12:28:51.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.725" endtime="20201112 12:28:51.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.724" endtime="20201112 12:28:51.272"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.295" endtime="20201112 12:28:51.315"></status>
</kw>
<msg timestamp="20201112 12:28:51.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:51.292" endtime="20201112 12:28:51.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:51.318" endtime="20201112 12:28:51.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.324" endtime="20201112 12:28:51.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.284" endtime="20201112 12:28:51.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.279" endtime="20201112 12:28:51.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.348" endtime="20201112 12:28:51.681"></status>
</kw>
<msg timestamp="20201112 12:28:51.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040623389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040737069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.345" endtime="20201112 12:28:51.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040623389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040737069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.690" endtime="20201112 12:28:51.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.708" endtime="20201112 12:28:51.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.337" endtime="20201112 12:28:51.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.333" endtime="20201112 12:28:51.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:51.729" level="INFO">${RESULT} = [{'time': 0.040737069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011367999999999795, 'source_diff': 0.00011367999999999795}, {'time': 0.040862431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:51.720" endtime="20201112 12:28:51.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:51.759" level="INFO">${ACCURACY} = {'time': [0.040737069, 0.040862431, 0.040985694, 0.041108986, 0.041231319, 0.041353583, 0.041476917, 0.041600153, 0.041719431, 0.041841792, 0.041965111, 0.042085389, 0.042209681, 0.042333028, 0.042454...</msg>
<status status="PASS" starttime="20201112 12:28:51.731" endtime="20201112 12:28:51.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.770" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:28:51.768" endtime="20201112 12:28:51.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.775" level="INFO">VALUE: [0.00011367999999999795, 0.00011434800000000023, 0.00011383300000000068, 0.00011397199999999691, 0.00011384700000000025, 0.00011408300000000093, 0.00011419500000000443, 0.00011373600000000317, 0.00011422300000000357, 0.00011375000000000274, 0.00011380500000000154, 0.00011400000000000299, 0.00011340299999999803, 0.000113597, 0.00011372299999999613, 0.00011394399999999777, 0.00011338899999999846, 0.00011340300000000497, 0.00011363799999999924, 0.00011430600000000152, 0.00011386099999999982, 0.0001133749999999989, 0.00011350000000000249, 0.00011336099999999932, 0.00011419400000000496, 0.00011381900000000111, 0.00011355499999999435, 0.0001138749999999994, 0.00011406900000000136, 0.0001133619999999988, 0.00011393100000000461, 0.00011413899999999921, 0.00011369500000000393, 0.00011411100000000007, 0.00011373700000000264, 0.00011420799999999759, 0.0001139169999999981, 0.00011406900000000136, 0.00011365300000000522, 0.00011398599999999648, 0.00011395899999999681, 0.00011429100000000247, 0.0001135420000000012, 0.00011376399999999537, 0.00011350000000000249, 0.00011352800000000163, 0.0001137220000000036, 0.0001134169999999976, 0.0001133749999999989, 0.00011383400000000016]</msg>
<status status="PASS" starttime="20201112 12:28:51.772" endtime="20201112 12:28:51.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.761" endtime="20201112 12:28:51.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.785" endtime="20201112 12:28:51.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:51.793" endtime="20201112 12:28:51.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.789" endtime="20201112 12:28:51.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.780" endtime="20201112 12:28:51.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.274" endtime="20201112 12:28:51.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.273" endtime="20201112 12:28:51.819"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.842" endtime="20201112 12:28:51.862"></status>
</kw>
<msg timestamp="20201112 12:28:51.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:51.839" endtime="20201112 12:28:51.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:51.865" endtime="20201112 12:28:51.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.871" endtime="20201112 12:28:51.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.831" endtime="20201112 12:28:51.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.826" endtime="20201112 12:28:51.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.895" endtime="20201112 12:28:52.229"></status>
</kw>
<msg timestamp="20201112 12:28:52.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040427681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040542417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.891" endtime="20201112 12:28:52.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040427681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040542417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:52.238" endtime="20201112 12:28:52.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.256" endtime="20201112 12:28:52.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.884" endtime="20201112 12:28:52.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.879" endtime="20201112 12:28:52.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:52.275" level="INFO">${RESULT} = [{'time': 0.040542417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011473599999999723, 'source_diff': 0.00011473599999999723}, {'time': 0.040666667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:52.266" endtime="20201112 12:28:52.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:52.305" level="INFO">${ACCURACY} = {'time': [0.040542417, 0.040666667, 0.040791944, 0.04091225, 0.041031486, 0.041156889, 0.041280153, 0.041403458, 0.041526722, 0.041647986, 0.041768264, 0.041892569, 0.042013847, 0.042134153, 0.0422565...</msg>
<status status="PASS" starttime="20201112 12:28:52.277" endtime="20201112 12:28:52.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.316" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:28:52.314" endtime="20201112 12:28:52.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.322" level="INFO">VALUE: [0.00011473599999999723, 0.00011515299999999978, 0.00011501299999999715, 0.00011505599999999533, 0.000114597000000001, 0.00011482000000000159, 0.00011534700000000175, 0.00011515200000000031, 0.00011470800000000503, 0.00011515299999999978, 0.00011445799999999784, 0.00011497199999999791, 0.00011463899999999971, 0.00011443099999999817, 0.00011501400000000356, 0.00011483300000000168, 0.00011504199999999576, 0.00011505600000000227, 0.00011470799999999809, 0.00011458300000000143, 0.0001147499999999968, 0.00011493000000000614, 0.00011436100000000032, 0.00011449999999999655, 0.00011462500000000014, 0.00011461100000000057, 0.0001143619999999998, 0.00011438899999999946, 0.00011522199999999816, 0.0001145420000000022, 0.00011466699999999885, 0.00011534700000000175, 0.0001152220000000051, 0.00011445800000000478, 0.00011515299999999978, 0.00011468099999999842, 0.00011523599999999773, 0.00011533300000000218, 0.0001153750000000009, 0.00011469399999999852, 0.00011479100000000297, 0.00011499999999999705, 0.00011504099999999629, 0.00011494499999999824, 0.00011491599999999963, 0.00011497300000000432, 0.00011490299999999953, 0.00011482000000000159, 0.00011512500000000064, 0.00011450000000000349]</msg>
<status status="PASS" starttime="20201112 12:28:52.319" endtime="20201112 12:28:52.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.307" endtime="20201112 12:28:52.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.331" endtime="20201112 12:28:52.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:52.340" endtime="20201112 12:28:52.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.335" endtime="20201112 12:28:52.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.327" endtime="20201112 12:28:52.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.821" endtime="20201112 12:28:52.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.820" endtime="20201112 12:28:52.366"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.389" endtime="20201112 12:28:52.410"></status>
</kw>
<msg timestamp="20201112 12:28:52.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:52.385" endtime="20201112 12:28:52.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:52.414" endtime="20201112 12:28:52.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.420" endtime="20201112 12:28:52.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.378" endtime="20201112 12:28:52.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.372" endtime="20201112 12:28:52.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.443" endtime="20201112 12:28:52.791"></status>
</kw>
<msg timestamp="20201112 12:28:52.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040732986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040848556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:52.440" endtime="20201112 12:28:52.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040732986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040848556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:52.800" endtime="20201112 12:28:52.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.818" endtime="20201112 12:28:52.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.433" endtime="20201112 12:28:52.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.428" endtime="20201112 12:28:52.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:52.837" level="INFO">${RESULT} = [{'time': 0.040848556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011557000000000234, 'source_diff': 0.00011557000000000234}, {'time': 0.040968819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:52.828" endtime="20201112 12:28:52.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:52.867" level="INFO">${ACCURACY} = {'time': [0.040848556, 0.040968819, 0.041093181, 0.041217458, 0.041342722, 0.041464, 0.041586292, 0.041707556, 0.041829847, 0.041956153, 0.042079417, 0.042205708, 0.042332, 0.042453292, 0.042575653, 0...</msg>
<status status="PASS" starttime="20201112 12:28:52.839" endtime="20201112 12:28:52.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.878" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:28:52.876" endtime="20201112 12:28:52.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.884" level="INFO">VALUE: [0.00011557000000000234, 0.00011540199999999362, 0.00011627799999999744, 0.00011548599999999798, 0.00011586100000000182, 0.0001159170000000001, 0.00011538899999999352, 0.00011632000000000309, 0.0001155550000000033, 0.00011551400000000406, 0.0001160420000000037, 0.00011538900000000046, 0.00011538900000000046, 0.00011631999999999615, 0.00011629199999999701, 0.00011631899999999668, 0.00011552799999999669, 0.00011600000000000499, 0.00011579099999999704, 0.00011602800000000413, 0.00011588899999999402, 0.00011584799999999479, 0.00011538900000000046, 0.00011538900000000046, 0.00011605600000000327, 0.00011580500000000354, 0.00011601399999999762, 0.00011625000000000524, 0.00011569400000000646, 0.00011595799999999934, 0.00011554199999999626, 0.00011566699999999985, 0.00011620799999999959, 0.0001158750000000014, 0.00011552799999999669, 0.00011551299999999765, 0.00011593099999999967, 0.00011534800000000123, 0.00011601299999999815, 0.00011609699999999556, 0.00011593099999999967, 0.00011602799999999719, 0.00011602699999999772, 0.00011602800000000413, 0.00011623600000000567, 0.00011558300000000243, 0.00011602700000000465, 0.0001160699999999959, 0.0001154169999999996, 0.00011604099999999729]</msg>
<status status="PASS" starttime="20201112 12:28:52.881" endtime="20201112 12:28:52.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.869" endtime="20201112 12:28:52.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.893" endtime="20201112 12:28:52.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:52.902" endtime="20201112 12:28:52.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.897" endtime="20201112 12:28:52.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.889" endtime="20201112 12:28:52.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.368" endtime="20201112 12:28:52.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.367" endtime="20201112 12:28:52.928"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.951" endtime="20201112 12:28:52.972"></status>
</kw>
<msg timestamp="20201112 12:28:52.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:52.947" endtime="20201112 12:28:52.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:52.976" endtime="20201112 12:28:52.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.982" endtime="20201112 12:28:52.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.940" endtime="20201112 12:28:52.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.934" endtime="20201112 12:28:52.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.007" endtime="20201112 12:28:53.356"></status>
</kw>
<msg timestamp="20201112 12:28:53.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040785819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040902833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.004" endtime="20201112 12:28:53.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040785819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040902833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.367" endtime="20201112 12:28:53.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.385" endtime="20201112 12:28:53.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.996" endtime="20201112 12:28:53.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.991" endtime="20201112 12:28:53.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:53.405" level="INFO">${RESULT} = [{'time': 0.040902833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011701399999999862, 'source_diff': 0.00011701399999999862}, {'time': 0.041026111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:53.396" endtime="20201112 12:28:53.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:53.435" level="INFO">${ACCURACY} = {'time': [0.040902833, 0.041026111, 0.041147389, 0.041271653, 0.041393986, 0.041521208, 0.041644528, 0.041771819, 0.041898125, 0.042020403, 0.042142681, 0.042265958, 0.04239125, 0.042517556, 0.0426409...</msg>
<status status="PASS" starttime="20201112 12:28:53.407" endtime="20201112 12:28:53.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.446" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:28:53.444" endtime="20201112 12:28:53.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.452" level="INFO">VALUE: [0.00011701399999999862, 0.00011699999999999905, 0.00011655599999999683, 0.00011701399999999862, 0.00011727799999999844, 0.00011726399999999887, 0.00011680599999999708, 0.00011656900000000386, 0.00011676399999999837, 0.00011638899999999452, 0.00011640300000000103, 0.00011719400000000102, 0.00011648599999999898, 0.00011709799999999604, 0.00011666700000000085, 0.00011651400000000506, 0.00011733299999999725, 0.00011640300000000103, 0.00011693100000000067, 0.00011718000000000145, 0.00011659699999999606, 0.0001164170000000006, 0.00011676399999999837, 0.00011672199999999966, 0.00011686100000000282, 0.00011672199999999966, 0.00011645900000000625, 0.00011706899999999743, 0.00011701400000000556, 0.00011733399999999672, 0.00011719400000000102, 0.00011684699999999631, 0.00011654099999999779, 0.00011692999999999426, 0.0001172499999999993, 0.00011727799999999844, 0.0001172369999999992, 0.00011649999999999855, 0.00011636100000000232, 0.00011675000000000574, 0.00011648700000000539, 0.00011734699999999681, 0.0001164170000000006, 0.00011648599999999898, 0.00011640199999999462, 0.00011690300000000153, 0.00011690300000000153, 0.00011648600000000592, 0.00011669400000000052, 0.00011695899999999981]</msg>
<status status="PASS" starttime="20201112 12:28:53.449" endtime="20201112 12:28:53.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.437" endtime="20201112 12:28:53.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.461" endtime="20201112 12:28:53.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:53.470" endtime="20201112 12:28:53.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.465" endtime="20201112 12:28:53.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.457" endtime="20201112 12:28:53.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.930" endtime="20201112 12:28:53.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.929" endtime="20201112 12:28:53.496"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.518" endtime="20201112 12:28:53.541"></status>
</kw>
<msg timestamp="20201112 12:28:53.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:53.515" endtime="20201112 12:28:53.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:53.544" endtime="20201112 12:28:53.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.550" endtime="20201112 12:28:53.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.508" endtime="20201112 12:28:53.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.502" endtime="20201112 12:28:53.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.574" endtime="20201112 12:28:53.923"></status>
</kw>
<msg timestamp="20201112 12:28:53.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040848431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.571" endtime="20201112 12:28:53.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040848431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.932" endtime="20201112 12:28:53.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.950" endtime="20201112 12:28:53.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.563" endtime="20201112 12:28:53.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.558" endtime="20201112 12:28:53.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:53.971" level="INFO">${RESULT} = [{'time': 0.040848431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011748699999999945, 'source_diff': 0.00011748699999999945}, {'time': 0.040975667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:53.962" endtime="20201112 12:28:53.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:54.001" level="INFO">${ACCURACY} = {'time': [0.040848431, 0.040975667, 0.041099, 0.041222194, 0.041345458, 0.041474806, 0.041597083, 0.041720278, 0.041843556, 0.041971889, 0.042095153, 0.042220403, 0.042344708, 0.042470972, 0.042596333...</msg>
<status status="PASS" starttime="20201112 12:28:53.973" endtime="20201112 12:28:54.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.013" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:28:54.011" endtime="20201112 12:28:54.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.019" level="INFO">VALUE: [0.00011748699999999945, 0.00011812500000000364, 0.000118082999999998, 0.00011744399999999433, 0.0001173750000000029, 0.00011826399999999987, 0.00011769400000000152, 0.00011748599999999998, 0.00011759799999999654, 0.00011784699999999732, 0.00011768100000000142, 0.00011768099999999448, 0.000117597000000004, 0.00011758300000000443, 0.00011772200000000066, 0.00011776399999999937, 0.00011747299999999988, 0.00011737499999999595, 0.00011755599999999783, 0.00011758400000000391, 0.00011772300000000013, 0.00011779099999999904, 0.00011800000000000005, 0.0001181950000000015, 0.00011752799999999869, 0.0001175420000000052, 0.00011781900000000511, 0.00011768099999999448, 0.00011829099999999954, 0.00011754199999999826, 0.00011815299999999584, 0.00011816700000000235, 0.00011823600000000073, 0.00011748599999999998, 0.0001179449999999943, 0.00011805599999999833, 0.00011755600000000477, 0.00011752799999999869, 0.00011770900000000056, 0.00011797300000000038, 0.00011781999999999765, 0.00011798600000000048, 0.00011823600000000073, 0.00011831999999999815, 0.00011743100000000117, 0.0001173750000000029, 0.0001182500000000003, 0.00011793100000000167, 0.00011788899999999602, 0.00011749999999999955]</msg>
<status status="PASS" starttime="20201112 12:28:54.015" endtime="20201112 12:28:54.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.004" endtime="20201112 12:28:54.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.029" endtime="20201112 12:28:54.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:54.038" endtime="20201112 12:28:54.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.034" endtime="20201112 12:28:54.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.024" endtime="20201112 12:28:54.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.498" endtime="20201112 12:28:54.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.497" endtime="20201112 12:28:54.064"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.087" endtime="20201112 12:28:54.107"></status>
</kw>
<msg timestamp="20201112 12:28:54.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:54.084" endtime="20201112 12:28:54.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:54.111" endtime="20201112 12:28:54.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.117" endtime="20201112 12:28:54.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.076" endtime="20201112 12:28:54.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.071" endtime="20201112 12:28:54.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.141" endtime="20201112 12:28:54.476"></status>
</kw>
<msg timestamp="20201112 12:28:54.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040963972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041082694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:54.137" endtime="20201112 12:28:54.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040963972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041082694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:54.485" endtime="20201112 12:28:54.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.504" endtime="20201112 12:28:54.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.130" endtime="20201112 12:28:54.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.125" endtime="20201112 12:28:54.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:54.522" level="INFO">${RESULT} = [{'time': 0.041082694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011872200000000166, 'source_diff': 0.00011872200000000166}, {'time': 0.041206986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:54.514" endtime="20201112 12:28:54.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:54.553" level="INFO">${ACCURACY} = {'time': [0.041082694, 0.041206986, 0.041334292, 0.041461583, 0.041590764, 0.041721111, 0.041847347, 0.041972597, 0.042099903, 0.042223236, 0.042349528, 0.042478792, 0.042607042, 0.042730333, 0.042859...</msg>
<status status="PASS" starttime="20201112 12:28:54.524" endtime="20201112 12:28:54.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.564" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:28:54.561" endtime="20201112 12:28:54.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.569" level="INFO">VALUE: [0.00011872200000000166, 0.00011840300000000303, 0.00011933399999999872, 0.00011922200000000216, 0.000119082999999999, 0.00011936099999999839, 0.00011920800000000259, 0.00011852799999999969, 0.00011880599999999908, 0.00011863899999999677, 0.0001185699999999984, 0.0001185699999999984, 0.00011845899999999437, 0.00011844400000000227, 0.00011847200000000141, 0.00011933299999999925, 0.00011884699999999832, 0.00011856900000000586, 0.00011863899999999677, 0.00011859699999999807, 0.00011918000000000345, 0.00011848600000000098, 0.00011886100000000482, 0.00011844500000000174, 0.00011844400000000227, 0.00011845800000000184, 0.00011927800000000044, 0.00011929200000000001, 0.00011856900000000586, 0.0001190699999999989, 0.00011873600000000123, 0.00011854199999999926, 0.00011850000000000055, 0.00011843099999999523, 0.00011919400000000302, 0.00011906899999999943, 0.00011905499999999986, 0.00011844400000000227, 0.00011852799999999969, 0.00011887499999999745, 0.00011868000000000295, 0.0001189579999999954, 0.00011916699999999641, 0.00011886100000000482, 0.00011838899999999652, 0.00011901400000000062, 0.00011929200000000001, 0.00011927700000000097, 0.0001184300000000027, 0.0001184029999999961]</msg>
<status status="PASS" starttime="20201112 12:28:54.566" endtime="20201112 12:28:54.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.555" endtime="20201112 12:28:54.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.583" endtime="20201112 12:28:54.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:54.592" endtime="20201112 12:28:54.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.588" endtime="20201112 12:28:54.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.579" endtime="20201112 12:28:54.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.066" endtime="20201112 12:28:54.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.065" endtime="20201112 12:28:54.618"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.641" endtime="20201112 12:28:54.662"></status>
</kw>
<msg timestamp="20201112 12:28:54.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:54.637" endtime="20201112 12:28:54.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:54.666" endtime="20201112 12:28:54.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.672" endtime="20201112 12:28:54.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.630" endtime="20201112 12:28:54.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.624" endtime="20201112 12:28:54.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.695" endtime="20201112 12:28:55.044"></status>
</kw>
<msg timestamp="20201112 12:28:55.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040481097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040600764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:54.692" endtime="20201112 12:28:55.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040481097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040600764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:55.053" endtime="20201112 12:28:55.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.072" endtime="20201112 12:28:55.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.685" endtime="20201112 12:28:55.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.680" endtime="20201112 12:28:55.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:55.091" level="INFO">${RESULT} = [{'time': 0.040600764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011966699999999691, 'source_diff': 0.00011966699999999691}, {'time': 0.040725069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:55.082" endtime="20201112 12:28:55.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:55.121" level="INFO">${ACCURACY} = {'time': [0.040600764, 0.040725069, 0.040854389, 0.040982722, 0.041111028, 0.041241347, 0.041370681, 0.041495972, 0.041620319, 0.041750639, 0.041879889, 0.04201025, 0.042141583, 0.042267875, 0.0423951...</msg>
<status status="PASS" starttime="20201112 12:28:55.093" endtime="20201112 12:28:55.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.132" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:28:55.130" endtime="20201112 12:28:55.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.137" level="INFO">VALUE: [0.00011966699999999691, 0.0001195829999999995, 0.00011988899999999802, 0.00011994399999999683, 0.00011951400000000112, 0.00012016599999999794, 0.00012011199999999861, 0.00011950000000000155, 0.00011945800000000284, 0.00011968099999999648, 0.00011980599999999314, 0.00012029200000000101, 0.00012033300000000025, 0.0001200970000000065, 0.00011961099999999864, 0.00011993100000000367, 0.00011977800000000094, 0.0001201249999999987, 0.00011954100000000079, 0.0001194029999999971, 0.00011976400000000137, 0.00011940200000000456, 0.00012027800000000144, 0.00012018000000000445, 0.00012030600000000058, 0.00012016599999999794, 0.00012019499999999655, 0.0001198750000000054, 0.00012015299999999784, 0.0001194029999999971, 0.00012033300000000025, 0.00011945900000000231, 0.00012036099999999939, 0.0001198050000000006, 0.0001193050000000001, 0.00012011099999999914, 0.0001199300000000042, 0.00011993099999999673, 0.00011991599999999769, 0.00011973600000000223, 0.00012020900000000306, 0.00011961099999999864, 0.00011999999999999511, 0.00012034699999999982, 0.00012020799999999665, 0.00011998599999999554, 0.00011976400000000137, 0.00011934699999999882, 0.00011938799999999805, 0.00011943100000000317]</msg>
<status status="PASS" starttime="20201112 12:28:55.134" endtime="20201112 12:28:55.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.123" endtime="20201112 12:28:55.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.147" endtime="20201112 12:28:55.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:55.155" endtime="20201112 12:28:55.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.151" endtime="20201112 12:28:55.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.142" endtime="20201112 12:28:55.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.620" endtime="20201112 12:28:55.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.619" endtime="20201112 12:28:55.181"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.204" endtime="20201112 12:28:55.226"></status>
</kw>
<msg timestamp="20201112 12:28:55.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:55.201" endtime="20201112 12:28:55.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:55.229" endtime="20201112 12:28:55.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.236" endtime="20201112 12:28:55.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.194" endtime="20201112 12:28:55.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.188" endtime="20201112 12:28:55.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.259" endtime="20201112 12:28:55.599"></status>
</kw>
<msg timestamp="20201112 12:28:55.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040838944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040959819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:55.256" endtime="20201112 12:28:55.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040838944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040959819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:55.609" endtime="20201112 12:28:55.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.627" endtime="20201112 12:28:55.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.249" endtime="20201112 12:28:55.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.244" endtime="20201112 12:28:55.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:55.645" level="INFO">${RESULT} = [{'time': 0.040959819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012087499999999946, 'source_diff': 0.00012087499999999946}, {'time': 0.041086125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:55.637" endtime="20201112 12:28:55.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:55.676" level="INFO">${ACCURACY} = {'time': [0.040959819, 0.041086125, 0.041212417, 0.041339736, 0.041469111, 0.041600431, 0.041725778, 0.041853083, 0.041981417, 0.042109722, 0.042237042, 0.042364389, 0.042492722, 0.042618125, 0.042745...</msg>
<status status="PASS" starttime="20201112 12:28:55.648" endtime="20201112 12:28:55.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.687" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:28:55.685" endtime="20201112 12:28:55.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.692" level="INFO">VALUE: [0.00012087499999999946, 0.00012083300000000075, 0.00012084799999999979, 0.00012122200000000416, 0.00012140300000000603, 0.0001212500000000033, 0.0001209449999999973, 0.00012123599999999679, 0.00012108400000000047, 0.00012119400000000502, 0.00012118100000000492, 0.00012093100000000467, 0.00012087499999999946, 0.00012056900000000093, 0.00012087499999999946, 0.0001212779999999955, 0.00012101400000000262, 0.00012115299999999884, 0.00012061099999999964, 0.00012102699999999578, 0.0001209029999999986, 0.00012066600000000538, 0.00012065299999999834, 0.00012143099999999823, 0.00012043099999999723, 0.00012059799999999954, 0.00012106900000000143, 0.00012086099999999989, 0.00012099999999999611, 0.00012119499999999755, 0.00012136100000000039, 0.00012070899999999662, 0.00012131900000000168, 0.0001214029999999991, 0.00012111100000000014, 0.00012063899999999877, 0.00012052800000000169, 0.00012051399999999518, 0.00012129199999999507, 0.00012081899999999424, 0.00012070799999999715, 0.0001213050000000021, 0.0001209029999999986, 0.00012129200000000201, 0.0001211249999999997, 0.00012093099999999773, 0.0001211249999999997, 0.00012109800000000004, 0.00012048600000000298, 0.00012130600000000158]</msg>
<status status="PASS" starttime="20201112 12:28:55.689" endtime="20201112 12:28:55.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.678" endtime="20201112 12:28:55.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.702" endtime="20201112 12:28:55.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:55.710" endtime="20201112 12:28:55.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.706" endtime="20201112 12:28:55.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.697" endtime="20201112 12:28:55.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.183" endtime="20201112 12:28:55.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.182" endtime="20201112 12:28:55.736"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.759" endtime="20201112 12:28:55.779"></status>
</kw>
<msg timestamp="20201112 12:28:55.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:55.756" endtime="20201112 12:28:55.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:55.783" endtime="20201112 12:28:55.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.789" endtime="20201112 12:28:55.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.749" endtime="20201112 12:28:55.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.743" endtime="20201112 12:28:55.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.812" endtime="20201112 12:28:56.146"></status>
</kw>
<msg timestamp="20201112 12:28:56.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040645847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040767875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:55.809" endtime="20201112 12:28:56.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040645847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040767875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:56.156" endtime="20201112 12:28:56.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.174" endtime="20201112 12:28:56.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.802" endtime="20201112 12:28:56.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.797" endtime="20201112 12:28:56.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:56.195" level="INFO">${RESULT} = [{'time': 0.040767875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012202800000000319, 'source_diff': 0.00012202800000000319}, {'time': 0.040897153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:56.186" endtime="20201112 12:28:56.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:56.225" level="INFO">${ACCURACY} = {'time': [0.040767875, 0.040897153, 0.041025472, 0.041157833, 0.041286222, 0.041413514, 0.041542875, 0.041675153, 0.041801458, 0.041933819, 0.042060139, 0.042189458, 0.042320778, 0.042449125, 0.042576...</msg>
<status status="PASS" starttime="20201112 12:28:56.197" endtime="20201112 12:28:56.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.236" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:28:56.234" endtime="20201112 12:28:56.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.242" level="INFO">VALUE: [0.00012202800000000319, 0.00012236100000000139, 0.00012183300000000175, 0.00012206899999999549, 0.000121777999999996, 0.00012234700000000182, 0.00012169399999999858, 0.00012201399999999668, 0.00012166599999999944, 0.00012166599999999944, 0.00012170800000000509, 0.00012209700000000157, 0.0001215700000000014, 0.00012143099999999823, 0.0001219579999999984, 0.00012229199999999607, 0.00012166599999999944, 0.00012215299999999985, 0.00012236100000000139, 0.00012149999999999661, 0.00012174999999999686, 0.00012213900000000028, 0.00012183399999999428, 0.00012151400000000312, 0.0001222080000000056, 0.00012186100000000089, 0.0001222359999999978, 0.00012183300000000175, 0.00012144399999999833, 0.00012159800000000054, 0.0001214579999999979, 0.00012211100000000114, 0.0001223050000000031, 0.00012141699999999866, 0.00012230599999999564, 0.00012144500000000474, 0.00012230499999999617, 0.00012216699999999941, 0.00012138899999999953, 0.00012200000000000405, 0.00012143100000000517, 0.00012201399999999668, 0.00012169499999999805, 0.00012216699999999941, 0.000122292000000003, 0.00012204199999999582, 0.00012194399999999883, 0.00012150000000000355, 0.00012161100000000064, 0.00012234699999999488]</msg>
<status status="PASS" starttime="20201112 12:28:56.239" endtime="20201112 12:28:56.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.227" endtime="20201112 12:28:56.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.251" endtime="20201112 12:28:56.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:56.260" endtime="20201112 12:28:56.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.255" endtime="20201112 12:28:56.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.246" endtime="20201112 12:28:56.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.739" endtime="20201112 12:28:56.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.737" endtime="20201112 12:28:56.286"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.308" endtime="20201112 12:28:56.329"></status>
</kw>
<msg timestamp="20201112 12:28:56.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:56.305" endtime="20201112 12:28:56.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:56.332" endtime="20201112 12:28:56.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.338" endtime="20201112 12:28:56.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.298" endtime="20201112 12:28:56.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.292" endtime="20201112 12:28:56.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.362" endtime="20201112 12:28:56.695"></status>
</kw>
<msg timestamp="20201112 12:28:56.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040762403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:56.358" endtime="20201112 12:28:56.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040762403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:56.704" endtime="20201112 12:28:56.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.722" endtime="20201112 12:28:56.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.351" endtime="20201112 12:28:56.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.346" endtime="20201112 12:28:56.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:56.741" level="INFO">${RESULT} = [{'time': 0.040762403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012332000000000315, 'source_diff': 0.00012332000000000315}, {'time': 0.040892667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:56.732" endtime="20201112 12:28:56.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:56.771" level="INFO">${ACCURACY} = {'time': [0.040762403, 0.040892667, 0.041019917, 0.041148208, 0.041276514, 0.041409861, 0.041537139, 0.041670403, 0.041798736, 0.041929042, 0.042057319, 0.042190597, 0.042324944, 0.042455208, 0.042586...</msg>
<status status="PASS" starttime="20201112 12:28:56.743" endtime="20201112 12:28:56.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.782" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:28:56.780" endtime="20201112 12:28:56.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.788" level="INFO">VALUE: [0.00012332000000000315, 0.0001229449999999993, 0.00012272300000000513, 0.00012270799999999915, 0.0001229579999999994, 0.00012252799999999675, 0.0001224449999999988, 0.00012248600000000498, 0.000123083000000003, 0.0001224449999999988, 0.00012304100000000429, 0.00012279100000000404, 0.00012334700000000282, 0.00012266600000000044, 0.00012331899999999674, 0.0001229030000000006, 0.00012290200000000112, 0.00012286100000000189, 0.00012262499999999427, 0.00012298599999999854, 0.0001225559999999959, 0.00012263900000000078, 0.00012298599999999854, 0.00012270799999999915, 0.00012287500000000146, 0.0001225979999999946, 0.000122568999999996, 0.0001227500000000048, 0.00012316700000000042, 0.00012248599999999804, 0.0001230280000000042, 0.00012300000000000505, 0.0001227359999999983, 0.00012319499999999955, 0.00012268099999999948, 0.00012274999999999786, 0.00012293000000000026, 0.00012276400000000437, 0.0001225700000000024, 0.00012248699999999751, 0.00012270799999999915, 0.00012284699999999538, 0.0001224160000000002, 0.00012280499999999667, 0.0001224030000000001, 0.00012272199999999872, 0.00012291700000000017, 0.00012247199999999847, 0.0001227359999999983, 0.00012304199999999682]</msg>
<status status="PASS" starttime="20201112 12:28:56.785" endtime="20201112 12:28:56.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.773" endtime="20201112 12:28:56.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.797" endtime="20201112 12:28:56.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:56.806" endtime="20201112 12:28:56.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.801" endtime="20201112 12:28:56.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.793" endtime="20201112 12:28:56.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.288" endtime="20201112 12:28:56.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.286" endtime="20201112 12:28:56.832"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.854" endtime="20201112 12:28:56.874"></status>
</kw>
<msg timestamp="20201112 12:28:56.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:56.851" endtime="20201112 12:28:56.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:56.878" endtime="20201112 12:28:56.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.884" endtime="20201112 12:28:56.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.844" endtime="20201112 12:28:56.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.838" endtime="20201112 12:28:56.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.907" endtime="20201112 12:28:57.242"></status>
</kw>
<msg timestamp="20201112 12:28:57.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040488222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040612292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:56.904" endtime="20201112 12:28:57.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040488222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040612292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:57.251" endtime="20201112 12:28:57.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.269" endtime="20201112 12:28:57.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.897" endtime="20201112 12:28:57.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.892" endtime="20201112 12:28:57.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:57.288" level="INFO">${RESULT} = [{'time': 0.040612292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001240700000000039, 'source_diff': 0.0001240700000000039}, {'time': 0.040746556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:57.280" endtime="20201112 12:28:57.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:57.319" level="INFO">${ACCURACY} = {'time': [0.040612292, 0.040746556, 0.040880903, 0.041010153, 0.041142472, 0.041275792, 0.041407125, 0.041538375, 0.041669722, 0.041800014, 0.041933361, 0.042065639, 0.042198958, 0.042328208, 0.042457...</msg>
<status status="PASS" starttime="20201112 12:28:57.290" endtime="20201112 12:28:57.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.330" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:28:57.327" endtime="20201112 12:28:57.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.335" level="INFO">VALUE: [0.0001240700000000039, 0.00012363900000000178, 0.00012384700000000332, 0.0001243199999999972, 0.00012381899999999724, 0.00012419500000000055, 0.00012366700000000092, 0.00012413900000000228, 0.000123568999999997, 0.00012377800000000494, 0.0001242359999999998, 0.00012436100000000339, 0.0001243050000000051, 0.00012394400000000083, 0.00012443000000000176, 0.00012427699999999903, 0.00012369400000000058, 0.00012386099999999595, 0.00012401399999999868, 0.00012386100000000289, 0.00012393000000000126, 0.00012419500000000055, 0.0001238480000000028, 0.00012404100000000529, 0.00012347199999999947, 0.00012341700000000067, 0.00012372199999999972, 0.00012402799999999825, 0.00012413900000000228, 0.00012345899999999937, 0.00012369500000000005, 0.00012384699999999638, 0.00012415300000000185, 0.00012411100000000314, 0.00012365300000000135, 0.00012384699999999638, 0.00012387500000000246, 0.00012352799999999775, 0.00012351400000000512, 0.00012393100000000074, 0.0001236250000000022, 0.00012341700000000067, 0.00012363799999999536, 0.00012391700000000117, 0.0001242500000000063, 0.00012374999999999886, 0.00012390200000000212, 0.00012387500000000246, 0.00012352799999999775, 0.00012382000000000365]</msg>
<status status="PASS" starttime="20201112 12:28:57.332" endtime="20201112 12:28:57.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.321" endtime="20201112 12:28:57.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.345" endtime="20201112 12:28:57.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:57.353" endtime="20201112 12:28:57.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.349" endtime="20201112 12:28:57.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.340" endtime="20201112 12:28:57.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.834" endtime="20201112 12:28:57.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.833" endtime="20201112 12:28:57.379"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.402" endtime="20201112 12:28:57.422"></status>
</kw>
<msg timestamp="20201112 12:28:57.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:57.398" endtime="20201112 12:28:57.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:57.425" endtime="20201112 12:28:57.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.432" endtime="20201112 12:28:57.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.391" endtime="20201112 12:28:57.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.385" endtime="20201112 12:28:57.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.455" endtime="20201112 12:28:57.790"></status>
</kw>
<msg timestamp="20201112 12:28:57.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04054125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040666389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:57.452" endtime="20201112 12:28:57.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04054125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040666389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:57.799" endtime="20201112 12:28:57.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.817" endtime="20201112 12:28:57.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.445" endtime="20201112 12:28:57.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.440" endtime="20201112 12:28:57.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:57.836" level="INFO">${RESULT} = [{'time': 0.040666389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012513899999999634, 'source_diff': 0.00012513899999999634}, {'time': 0.040799667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:57.827" endtime="20201112 12:28:57.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:57.866" level="INFO">${ACCURACY} = {'time': [0.040666389, 0.040799667, 0.040935014, 0.041064292, 0.041197611, 0.041329028, 0.04146025, 0.041594611, 0.041726889, 0.041861208, 0.041990528, 0.042124847, 0.042259139, 0.042391486, 0.0425257...</msg>
<status status="PASS" starttime="20201112 12:28:57.838" endtime="20201112 12:28:57.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.877" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:28:57.875" endtime="20201112 12:28:57.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.883" level="INFO">VALUE: [0.00012513899999999634, 0.00012451399999999918, 0.0001244580000000009, 0.00012488900000000303, 0.00012481900000000518, 0.00012501399999999968, 0.00012447200000000047, 0.00012472199999999378, 0.00012484700000000432, 0.00012458299999999756, 0.00012459699999999713, 0.00012448600000000004, 0.00012526399999999993, 0.00012476399999999943, 0.00012508399999999753, 0.00012508299999999806, 0.000124568999999998, 0.000124568999999998, 0.00012473699999999976, 0.000124680000000002, 0.00012531899999999874, 0.0001250559999999984, 0.000125292000000006, 0.00012525000000000036, 0.0001249030000000026, 0.00012461100000000364, 0.0001246109999999967, 0.00012438899999999559, 0.00012468100000000149, 0.00012533300000000525, 0.0001252230000000007, 0.00012540299999999616, 0.00012498700000000001, 0.00012466700000000192, 0.00012441699999999473, 0.00012436100000000339, 0.00012502799999999925, 0.00012477699999999953, 0.00012443100000000124, 0.00012525000000000036, 0.0001244999999999996, 0.00012508400000000447, 0.00012480499999999867, 0.00012472200000000072, 0.0001245979999999966, 0.0001249450000000013, 0.00012451399999999918, 0.00012523700000000026, 0.00012484699999999738, 0.00012497200000000097]</msg>
<status status="PASS" starttime="20201112 12:28:57.880" endtime="20201112 12:28:57.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.868" endtime="20201112 12:28:57.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.892" endtime="20201112 12:28:57.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:57.901" endtime="20201112 12:28:57.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.896" endtime="20201112 12:28:57.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.888" endtime="20201112 12:28:57.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.381" endtime="20201112 12:28:57.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.380" endtime="20201112 12:28:57.927"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.949" endtime="20201112 12:28:57.970"></status>
</kw>
<msg timestamp="20201112 12:28:57.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:57.946" endtime="20201112 12:28:57.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:57.973" endtime="20201112 12:28:57.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.979" endtime="20201112 12:28:57.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.939" endtime="20201112 12:28:57.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.933" endtime="20201112 12:28:57.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.003" endtime="20201112 12:28:58.338"></status>
</kw>
<msg timestamp="20201112 12:28:58.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040507986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:58.000" endtime="20201112 12:28:58.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040507986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:58.348" endtime="20201112 12:28:58.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.366" endtime="20201112 12:28:58.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.992" endtime="20201112 12:28:58.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.988" endtime="20201112 12:28:58.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:58.387" level="INFO">${RESULT} = [{'time': 0.040633431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012544499999999487, 'source_diff': 0.00012544499999999487}, {'time': 0.040768806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:58.378" endtime="20201112 12:28:58.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:58.417" level="INFO">${ACCURACY} = {'time': [0.040633431, 0.040768806, 0.040904083, 0.041037375, 0.041171681, 0.041304014, 0.041440264, 0.041574639, 0.041706931, 0.04184425, 0.041975583, 0.042109903, 0.04224625, 0.042379569, 0.04251290...</msg>
<status status="PASS" starttime="20201112 12:28:58.389" endtime="20201112 12:28:58.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.428" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:28:58.426" endtime="20201112 12:28:58.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.433" level="INFO">VALUE: [0.00012544499999999487, 0.00012602800000000025, 0.00012543000000000276, 0.00012613900000000428, 0.0001263199999999992, 0.00012634699999999888, 0.00012630599999999964, 0.0001259309999999958, 0.00012620900000000213, 0.00012631899999999974, 0.00012587499999999752, 0.00012634699999999888, 0.0001254580000000019, 0.00012627700000000103, 0.0001259859999999946, 0.0001256529999999964, 0.0001254160000000032, 0.0001262780000000005, 0.00012609699999999863, 0.00012587499999999752, 0.00012631899999999974, 0.00012604100000000035, 0.0001262780000000005, 0.00012616600000000394, 0.00012552799999999975, 0.0001263329999999993, 0.0001258329999999988, 0.00012634799999999835, 0.0001263199999999992, 0.00012638900000000453, 0.000125778, 0.0001254450000000018, 0.00012629200000000007, 0.000125568999999999, 0.0001263199999999992, 0.0001262910000000006, 0.00012587499999999752, 0.00012544499999999487, 0.00012561100000000464, 0.00012623700000000126, 0.00012580599999999914, 0.00012540299999999616, 0.00012602700000000078, 0.00012559699999999813, 0.00012547300000000094, 0.00012584700000000532, 0.0001263889999999976, 0.00012622199999999528, 0.00012548600000000104, 0.00012619400000000308]</msg>
<status status="PASS" starttime="20201112 12:28:58.430" endtime="20201112 12:28:58.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.419" endtime="20201112 12:28:58.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.443" endtime="20201112 12:28:58.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:58.451" endtime="20201112 12:28:58.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.447" endtime="20201112 12:28:58.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.438" endtime="20201112 12:28:58.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.929" endtime="20201112 12:28:58.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.928" endtime="20201112 12:28:58.477"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.500" endtime="20201112 12:28:58.520"></status>
</kw>
<msg timestamp="20201112 12:28:58.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:58.496" endtime="20201112 12:28:58.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:58.524" endtime="20201112 12:28:58.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.530" endtime="20201112 12:28:58.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.489" endtime="20201112 12:28:58.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.483" endtime="20201112 12:28:58.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.553" endtime="20201112 12:28:58.889"></status>
</kw>
<msg timestamp="20201112 12:28:58.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040526431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040653764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:58.550" endtime="20201112 12:28:58.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040526431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040653764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:58.898" endtime="20201112 12:28:58.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.916" endtime="20201112 12:28:58.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.543" endtime="20201112 12:28:58.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.538" endtime="20201112 12:28:58.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:58.935" level="INFO">${RESULT} = [{'time': 0.040653764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001273330000000003, 'source_diff': 0.0001273330000000003}, {'time': 0.040791056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:58.926" endtime="20201112 12:28:58.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:58.965" level="INFO">${ACCURACY} = {'time': [0.040653764, 0.040791056, 0.040926389, 0.041061694, 0.041192986, 0.041328333, 0.041461653, 0.041593972, 0.041731333, 0.041864597, 0.041998986, 0.042134264, 0.042265556, 0.042398944, 0.042532...</msg>
<status status="PASS" starttime="20201112 12:28:58.937" endtime="20201112 12:28:58.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.976" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:28:58.974" endtime="20201112 12:28:58.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.982" level="INFO">VALUE: [0.0001273330000000003, 0.0001269309999999968, 0.00012654200000000032, 0.00012726300000000246, 0.00012690299999999766, 0.00012737499999999902, 0.00012726400000000193, 0.0001270690000000005, 0.00012709699999999963, 0.00012655500000000042, 0.00012829200000000207, 0.00012669499999999612, 0.0001264450000000028, 0.0001270130000000022, 0.0001265000000000016, 0.00012716699999999748, 0.00012713899999999834, 0.00012694400000000383, 0.00012680600000000014, 0.00012637500000000496, 0.0001271109999999992, 0.00012680600000000014, 0.0001272780000000015, 0.00012647199999999553, 0.00012716700000000442, 0.00012676400000000143, 0.00012640299999999716, 0.00012727799999999456, 0.00012652699999999434, 0.00012737499999999902, 0.00012730500000000117, 0.00012658299999999956, 0.00012727700000000203, 0.0001270560000000004, 0.00012680500000000067, 0.00012718099999999705, 0.00012737499999999902, 0.00012702800000000125, 0.0001266109999999987, 0.00012649999999999467, 0.00012723599999999585, 0.00012672200000000272, 0.00012648600000000204, 0.00012675000000000186, 0.00012680600000000014, 0.00012697199999999603, 0.00012669399999999664, 0.00012717999999999757, 0.00012691700000000417, 0.00012643000000000376]</msg>
<status status="PASS" starttime="20201112 12:28:58.979" endtime="20201112 12:28:58.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.967" endtime="20201112 12:28:58.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.991" endtime="20201112 12:28:58.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:59.000" endtime="20201112 12:28:59.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.995" endtime="20201112 12:28:59.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.987" endtime="20201112 12:28:59.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.479" endtime="20201112 12:28:59.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.478" endtime="20201112 12:28:59.026"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.048" endtime="20201112 12:28:59.069"></status>
</kw>
<msg timestamp="20201112 12:28:59.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:59.045" endtime="20201112 12:28:59.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:59.072" endtime="20201112 12:28:59.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.078" endtime="20201112 12:28:59.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.038" endtime="20201112 12:28:59.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.032" endtime="20201112 12:28:59.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.102" endtime="20201112 12:28:59.438"></status>
</kw>
<msg timestamp="20201112 12:28:59.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040506014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:59.099" endtime="20201112 12:28:59.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040506014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:59.448" endtime="20201112 12:28:59.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.466" endtime="20201112 12:28:59.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.091" endtime="20201112 12:28:59.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.086" endtime="20201112 12:28:59.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:59.485" level="INFO">${RESULT} = [{'time': 0.040633681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012766699999999798, 'source_diff': 0.00012766699999999798}, {'time': 0.040772972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:59.476" endtime="20201112 12:28:59.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:59.515" level="INFO">${ACCURACY} = {'time': [0.040633681, 0.040772972, 0.040907278, 0.041043611, 0.041180917, 0.041320292, 0.041457597, 0.041593861, 0.041727181, 0.041860528, 0.041996847, 0.042131208, 0.042264444, 0.042402764, 0.042541...</msg>
<status status="PASS" starttime="20201112 12:28:59.487" endtime="20201112 12:28:59.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.526" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:28:59.524" endtime="20201112 12:28:59.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.531" level="INFO">VALUE: [0.00012766699999999798, 0.00012829099999999566, 0.00012762499999999927, 0.00012772200000000372, 0.0001275560000000009, 0.0001283889999999996, 0.00012792999999999832, 0.00012776400000000243, 0.00012754200000000132, 0.00012840299999999916, 0.0001275409999999949, 0.00012816600000000594, 0.00012740199999999868, 0.00012826400000000293, 0.00012787499999999952, 0.000127680000000005, 0.0001274580000000039, 0.00012781900000000124, 0.00012808400000000053, 0.00012822200000000422, 0.00012830499999999523, 0.00012765199999999893, 0.00012775000000000286, 0.0001282079999999977, 0.00012797199999999703, 0.00012801399999999574, 0.00012822200000000422, 0.0001282360000000038, 0.00012816699999999848, 0.00012830500000000217, 0.00012757000000000046, 0.00012812499999999977, 0.00012797200000000397, 0.00012798600000000354, 0.00012780500000000167, 0.00012744400000000433, 0.0001281110000000002, 0.0001274859999999961, 0.00012776400000000243, 0.00012801399999999574, 0.00012829199999999513, 0.00012836100000000045, 0.00012804200000000182, 0.00012819399999999814, 0.00012755500000000142, 0.0001280560000000014, 0.00012779200000000157, 0.00012757000000000046, 0.0001280000000000031, 0.00012784799999999985]</msg>
<status status="PASS" starttime="20201112 12:28:59.528" endtime="20201112 12:28:59.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.517" endtime="20201112 12:28:59.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.541" endtime="20201112 12:28:59.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:59.549" endtime="20201112 12:28:59.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.545" endtime="20201112 12:28:59.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.536" endtime="20201112 12:28:59.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.028" endtime="20201112 12:28:59.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.027" endtime="20201112 12:28:59.575"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.598" endtime="20201112 12:28:59.619"></status>
</kw>
<msg timestamp="20201112 12:28:59.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:59.595" endtime="20201112 12:28:59.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:59.622" endtime="20201112 12:28:59.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.628" endtime="20201112 12:28:59.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.587" endtime="20201112 12:28:59.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.582" endtime="20201112 12:28:59.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.651" endtime="20201112 12:28:59.986"></status>
</kw>
<msg timestamp="20201112 12:28:59.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040569097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040697833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:59.648" endtime="20201112 12:28:59.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040569097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040697833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:59.995" endtime="20201112 12:29:00.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.014" endtime="20201112 12:29:00.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.641" endtime="20201112 12:29:00.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.636" endtime="20201112 12:29:00.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:00.032" level="INFO">${RESULT} = [{'time': 0.040697833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001287360000000043, 'source_diff': 0.0001287360000000043}, {'time': 0.040834111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:29:00.024" endtime="20201112 12:29:00.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:00.063" level="INFO">${ACCURACY} = {'time': [0.040697833, 0.040834111, 0.040970486, 0.041108847, 0.041247194, 0.041387569, 0.041523986, 0.041662333, 0.041799694, 0.041938069, 0.042075556, 0.042210806, 0.042347125, 0.042486514, 0.042623...</msg>
<status status="PASS" starttime="20201112 12:29:00.034" endtime="20201112 12:29:00.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.074" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:29:00.072" endtime="20201112 12:29:00.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.079" level="INFO">VALUE: [0.0001287360000000043, 0.00012936100000000145, 0.0001293330000000023, 0.0001290409999999964, 0.00012867999999999907, 0.00012937500000000102, 0.00012937500000000102, 0.00012909700000000163, 0.00012859700000000113, 0.00012862500000000027, 0.00012922299999999776, 0.0001293479999999944, 0.00012941699999999973, 0.0001285000000000036, 0.00012941699999999973, 0.00012922200000000522, 0.00012879200000000257, 0.00012901400000000368, 0.00012895899999999794, 0.00012847199999999753, 0.00012927700000000403, 0.00012908400000000153, 0.000128569000000002, 0.00012884700000000138, 0.00012934700000000188, 0.0001291110000000012, 0.000128472999999997, 0.00012912500000000077, 0.00012859700000000113, 0.00012930600000000264, 0.00012874999999999692, 0.0001290969999999947, 0.00012919499999999862, 0.00012880499999999573, 0.00012849999999999667, 0.00012905500000000292, 0.00012927799999999656, 0.00012872299999999726, 0.0001284309999999983, 0.00012862500000000027, 0.0001293059999999957, 0.00012936100000000145, 0.00012907000000000196, 0.00012934700000000188, 0.00012872199999999778, 0.00012862500000000027, 0.00012911099999999426, 0.00012912500000000077, 0.00012931900000000274, 0.00012847199999999753]</msg>
<status status="PASS" starttime="20201112 12:29:00.076" endtime="20201112 12:29:00.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.065" endtime="20201112 12:29:00.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.089" endtime="20201112 12:29:00.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:00.097" endtime="20201112 12:29:00.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.093" endtime="20201112 12:29:00.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.084" endtime="20201112 12:29:00.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.577" endtime="20201112 12:29:00.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.576" endtime="20201112 12:29:00.123"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.146" endtime="20201112 12:29:00.166"></status>
</kw>
<msg timestamp="20201112 12:29:00.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:00.142" endtime="20201112 12:29:00.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:00.170" endtime="20201112 12:29:00.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.176" endtime="20201112 12:29:00.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.135" endtime="20201112 12:29:00.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.129" endtime="20201112 12:29:00.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.200" endtime="20201112 12:29:00.535"></status>
</kw>
<msg timestamp="20201112 12:29:00.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040639556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:00.196" endtime="20201112 12:29:00.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040639556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:00.544" endtime="20201112 12:29:00.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.563" endtime="20201112 12:29:00.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.189" endtime="20201112 12:29:00.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.184" endtime="20201112 12:29:00.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:00.583" level="INFO">${RESULT} = [{'time': 0.040639556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013034800000000235, 'source_diff': 0.00013034800000000235}, {'time': 0.040780875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:00.575" endtime="20201112 12:29:00.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:00.687" level="INFO">${ACCURACY} = {'time': [0.040639556, 0.040780875, 0.040921236, 0.041059583, 0.041197875, 0.041334181, 0.041474542, 0.041612833, 0.041750153, 0.041886472, 0.042024764, 0.042161069, 0.042297361, 0.042435625, 0.042573...</msg>
<status status="PASS" starttime="20201112 12:29:00.585" endtime="20201112 12:29:00.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.698" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:29:00.695" endtime="20201112 12:29:00.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.703" level="INFO">VALUE: [0.00013034800000000235, 0.0001303330000000033, 0.00013030499999999723, 0.00012952699999999734, 0.00012990300000000066, 0.0001303059999999967, 0.0001300000000000051, 0.00012962500000000127, 0.00012997199999999903, 0.00012963900000000084, 0.0001294859999999981, 0.0001300130000000052, 0.00012999999999999817, 0.00012973599999999835, 0.00013012500000000177, 0.00013004100000000435, 0.0001300279999999973, 0.0001298189999999963, 0.00012956999999999552, 0.00013008299999999612, 0.00012984800000000185, 0.00012955500000000342, 0.0001298059999999962, 0.00012979199999999663, 0.0001296530000000004, 0.00012958300000000256, 0.00013022199999999928, 0.0001303330000000033, 0.00012972199999999878, 0.00012962499999999433, 0.0001300839999999956, 0.0001301530000000009, 0.00013034800000000235, 0.0001297079999999992, 0.00012969399999999964, 0.00012979200000000357, 0.00012951399999999724, 0.00013009700000000263, 0.00013037500000000202, 0.00012965200000000093, 0.00012973599999999835, 0.00012947200000000547, 0.00013037500000000202, 0.00012972299999999826, 0.00013005599999999645, 0.00012976400000000443, 0.00012974999999999792, 0.00012963900000000084, 0.00012984699999999544, 0.00012974999999999792]</msg>
<status status="PASS" starttime="20201112 12:29:00.700" endtime="20201112 12:29:00.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.689" endtime="20201112 12:29:00.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.713" endtime="20201112 12:29:00.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:00.721" endtime="20201112 12:29:00.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.717" endtime="20201112 12:29:00.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.708" endtime="20201112 12:29:00.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.125" endtime="20201112 12:29:00.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.124" endtime="20201112 12:29:00.747"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.771" endtime="20201112 12:29:00.792"></status>
</kw>
<msg timestamp="20201112 12:29:00.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:00.767" endtime="20201112 12:29:00.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:00.795" endtime="20201112 12:29:00.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.801" endtime="20201112 12:29:00.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.759" endtime="20201112 12:29:00.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.753" endtime="20201112 12:29:00.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.825" endtime="20201112 12:29:01.159"></status>
</kw>
<msg timestamp="20201112 12:29:01.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041721111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041852278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:00.821" endtime="20201112 12:29:01.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041721111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041852278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.169" endtime="20201112 12:29:01.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.187" endtime="20201112 12:29:01.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.814" endtime="20201112 12:29:01.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.809" endtime="20201112 12:29:01.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:01.204" level="INFO">${RESULT} = [{'time': 0.041852278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013116700000000148, 'source_diff': 0.00013116700000000148}, {'time': 0.041990583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:01.195" endtime="20201112 12:29:01.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:01.235" level="INFO">${ACCURACY} = {'time': [0.041852278, 0.041990583, 0.042125917, 0.042266264, 0.042406667, 0.042547958, 0.042689306, 0.042829653, 0.042971069, 0.043107403, 0.043249792, 0.043386111, 0.0435245, 0.043664861, 0.04380213...</msg>
<status status="PASS" starttime="20201112 12:29:01.206" endtime="20201112 12:29:01.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.246" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:29:01.244" endtime="20201112 12:29:01.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.252" level="INFO">VALUE: [0.00013116700000000148, 0.0001304440000000004, 0.0001305279999999978, 0.00013069500000000012, 0.00013084800000000285, 0.00013133299999999737, 0.00013076400000000543, 0.00013101400000000568, 0.00013051299999999877, 0.00013116700000000148, 0.00013141700000000173, 0.0001306389999999949, 0.0001305279999999978, 0.0001313609999999965, 0.00013111099999999626, 0.0001305000000000056, 0.00013055499999999748, 0.00013091600000000175, 0.0001313609999999965, 0.00013069400000000064, 0.00013140199999999574, 0.00013137499999999608, 0.00013109799999999616, 0.00013061099999999576, 0.0001308200000000037, 0.0001311389999999954, 0.00013049999999999867, 0.0001313059999999977, 0.0001307080000000002, 0.00013076400000000543, 0.00013122199999999334, 0.00013090300000000166, 0.00013094500000000037, 0.00013079099999999816, 0.00013069400000000064, 0.0001313609999999965, 0.00013066700000000098, 0.00013054200000000432, 0.0001312080000000007, 0.00013122200000000028, 0.00013084700000000338, 0.00013072199999999978, 0.00013107000000000396, 0.00013058299999999662, 0.0001306530000000014, 0.00013080499999999773, 0.00013072199999999978, 0.0001309729999999995, 0.0001305969999999962, 0.0001305279999999978]</msg>
<status status="PASS" starttime="20201112 12:29:01.249" endtime="20201112 12:29:01.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.237" endtime="20201112 12:29:01.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.262" endtime="20201112 12:29:01.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:01.270" endtime="20201112 12:29:01.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.265" endtime="20201112 12:29:01.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.257" endtime="20201112 12:29:01.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.749" endtime="20201112 12:29:01.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.748" endtime="20201112 12:29:01.296"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.319" endtime="20201112 12:29:01.341"></status>
</kw>
<msg timestamp="20201112 12:29:01.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:01.315" endtime="20201112 12:29:01.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:01.344" endtime="20201112 12:29:01.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.351" endtime="20201112 12:29:01.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.308" endtime="20201112 12:29:01.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.302" endtime="20201112 12:29:01.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.376" endtime="20201112 12:29:01.732"></status>
</kw>
<msg timestamp="20201112 12:29:01.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042201361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.372" endtime="20201112 12:29:01.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042201361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.742" endtime="20201112 12:29:01.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.760" endtime="20201112 12:29:01.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.364" endtime="20201112 12:29:01.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.359" endtime="20201112 12:29:01.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:01.777" level="INFO">${RESULT} = [{'time': 0.042201361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013154199999999838, 'source_diff': 0.00013154199999999838}, {'time': 0.042340639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:01.769" endtime="20201112 12:29:01.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:01.808" level="INFO">${ACCURACY} = {'time': [0.042201361, 0.042340639, 0.042476917, 0.04261425, 0.042750583, 0.042887875, 0.043026278, 0.043167556, 0.043306903, 0.043445194, 0.043584556, 0.043722861, 0.043865181, 0.044006528, 0.0441478...</msg>
<status status="PASS" starttime="20201112 12:29:01.779" endtime="20201112 12:29:01.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.819" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:29:01.816" endtime="20201112 12:29:01.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.824" level="INFO">VALUE: [0.00013154199999999838, 0.00013151399999999924, 0.00013174999999999992, 0.00013154199999999838, 0.0001319440000000019, 0.00013149999999999967, 0.0001320969999999977, 0.00013212500000000377, 0.00013179199999999863, 0.00013230499999999923, 0.00013162500000000327, 0.00013159700000000413, 0.0001314310000000013, 0.00013159700000000413, 0.0001321389999999964, 0.00013209700000000463, 0.0001319860000000006, 0.00013140300000000216, 0.0001317080000000012, 0.0001315839999999971, 0.00013229099999999966, 0.00013144500000000087, 0.00013240200000000368, 0.00013163900000000284, 0.0001313890000000026, 0.0001315969999999972, 0.00013194500000000137, 0.00013200000000000017, 0.00013234699999999794, 0.0001321939999999952, 0.0001321389999999964, 0.00013140299999999522, 0.0001315839999999971, 0.00013234699999999794, 0.00013237499999999708, 0.00013204199999999888, 0.00013233299999999837, 0.00013201399999999974, 0.00013193000000000232, 0.0001318880000000036, 0.00013234699999999794, 0.0001318890000000031, 0.00013144399999999445, 0.00013165299999999547, 0.0001314860000000001, 0.00013181900000000524, 0.0001320409999999994, 0.00013191600000000275, 0.00013231999999999827, 0.00013166700000000198]</msg>
<status status="PASS" starttime="20201112 12:29:01.821" endtime="20201112 12:29:01.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.810" endtime="20201112 12:29:01.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.834" endtime="20201112 12:29:01.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:01.842" endtime="20201112 12:29:01.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.838" endtime="20201112 12:29:01.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.829" endtime="20201112 12:29:01.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.298" endtime="20201112 12:29:01.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.297" endtime="20201112 12:29:01.868"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.891" endtime="20201112 12:29:01.913"></status>
</kw>
<msg timestamp="20201112 12:29:01.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:01.887" endtime="20201112 12:29:01.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:01.917" endtime="20201112 12:29:01.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.923" endtime="20201112 12:29:01.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.880" endtime="20201112 12:29:01.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.874" endtime="20201112 12:29:01.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.948" endtime="20201112 12:29:02.296"></status>
</kw>
<msg timestamp="20201112 12:29:02.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040598917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040732194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.945" endtime="20201112 12:29:02.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040598917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040732194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:02.306" endtime="20201112 12:29:02.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.324" endtime="20201112 12:29:02.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.936" endtime="20201112 12:29:02.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.931" endtime="20201112 12:29:02.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:02.341" level="INFO">${RESULT} = [{'time': 0.040732194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001332770000000011, 'source_diff': 0.0001332770000000011}, {'time': 0.040870486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:29:02.332" endtime="20201112 12:29:02.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:02.372" level="INFO">${ACCURACY} = {'time': [0.040732194, 0.040870486, 0.041007778, 0.041149111, 0.041287389, 0.041424667, 0.041565, 0.041703292, 0.041846625, 0.041985931, 0.042126208, 0.0422635, 0.042403889, 0.042544111, 0.042687417, ...</msg>
<status status="PASS" starttime="20201112 12:29:02.343" endtime="20201112 12:29:02.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.383" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:29:02.381" endtime="20201112 12:29:02.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.388" level="INFO">VALUE: [0.0001332770000000011, 0.00013292999999999638, 0.00013255599999999895, 0.00013305499999999998, 0.00013250000000000067, 0.0001325279999999998, 0.00013287499999999758, 0.00013251400000000024, 0.00013244399999999545, 0.0001330139999999938, 0.00013270799999999527, 0.0001328890000000041, 0.00013345800000000296, 0.0001327640000000005, 0.00013261099999999776, 0.00013251400000000024, 0.000133264000000001, 0.00013255499999999948, 0.0001333200000000062, 0.00013261099999999776, 0.00013272200000000178, 0.00013274999999999398, 0.00013245900000000144, 0.0001327090000000017, 0.00013329100000000066, 0.00013290199999999724, 0.00013265200000000393, 0.00013256899999999905, 0.00013288899999999715, 0.00013302700000000084, 0.00013334699999999894, 0.00013237499999999708, 0.00013318000000000357, 0.00013279199999999963, 0.0001331530000000039, 0.0001325969999999982, 0.00013277800000000006, 0.00013269500000000212, 0.00013291700000000323, 0.00013279100000000016, 0.0001325279999999998, 0.00013261099999999776, 0.000132860999999998, 0.00013288799999999767, 0.00013304199999999988, 0.000132569000000006, 0.00013275000000000092, 0.0001330410000000004, 0.0001324310000000023, 0.00013259700000000513]</msg>
<status status="PASS" starttime="20201112 12:29:02.385" endtime="20201112 12:29:02.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.374" endtime="20201112 12:29:02.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.398" endtime="20201112 12:29:02.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:02.406" endtime="20201112 12:29:02.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.402" endtime="20201112 12:29:02.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.393" endtime="20201112 12:29:02.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.870" endtime="20201112 12:29:02.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.869" endtime="20201112 12:29:02.432"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.455" endtime="20201112 12:29:02.478"></status>
</kw>
<msg timestamp="20201112 12:29:02.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:02.452" endtime="20201112 12:29:02.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:02.481" endtime="20201112 12:29:02.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.487" endtime="20201112 12:29:02.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.444" endtime="20201112 12:29:02.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.439" endtime="20201112 12:29:02.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.511" endtime="20201112 12:29:02.862"></status>
</kw>
<msg timestamp="20201112 12:29:02.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040865208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040998847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:02.507" endtime="20201112 12:29:02.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040865208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040998847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:02.871" endtime="20201112 12:29:02.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.890" endtime="20201112 12:29:02.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.500" endtime="20201112 12:29:02.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.495" endtime="20201112 12:29:02.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:02.907" level="INFO">${RESULT} = [{'time': 0.040998847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001336389999999979, 'source_diff': 0.0001336389999999979}, {'time': 0.041139153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:29:02.898" endtime="20201112 12:29:02.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:02.940" level="INFO">${ACCURACY} = {'time': [0.040998847, 0.041139153, 0.041283583, 0.041424806, 0.041563125, 0.041706472, 0.041848764, 0.041990042, 0.042132361, 0.042277667, 0.042421931, 0.042565222, 0.042708486, 0.042849806, 0.042991...</msg>
<status status="PASS" starttime="20201112 12:29:02.909" endtime="20201112 12:29:02.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.951" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:29:02.949" endtime="20201112 12:29:02.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.956" level="INFO">VALUE: [0.0001336389999999979, 0.00013422199999999634, 0.00013442999999999788, 0.00013395900000000294, 0.0001335969999999992, 0.00013372200000000278, 0.00013423599999999591, 0.00013416699999999754, 0.00013375000000000192, 0.00013502799999999537, 0.00013379200000000063, 0.00013355500000000048, 0.00013416699999999754, 0.00013407000000000002, 0.0001339719999999961, 0.0001334440000000034, 0.0001337090000000027, 0.0001336660000000045, 0.00013430500000000123, 0.00013437499999999908, 0.00013373600000000235, 0.0001335410000000009, 0.00013398599999999566, 0.00013504200000000188, 0.00013358299999999962, 0.00013358299999999962, 0.00013429200000000113, 0.00013384699999999944, 0.0001344169999999978, 0.00013387499999999858, 0.00013533300000000137, 0.0001341389999999984, 0.00013375000000000192, 0.000134264000000002, 0.00013395799999999652, 0.00013423600000000285, 0.00013440300000000516, 0.00013444399999999745, 0.0001339310000000038, 0.00013397200000000303, 0.0001333890000000046, 0.00013437499999999908, 0.0001340280000000013, 0.00013412499999999883, 0.00013434699999999994, 0.00013365299999999747, 0.00013369499999999618, 0.0001341389999999984, 0.0001335839999999991, 0.0001334310000000033]</msg>
<status status="PASS" starttime="20201112 12:29:02.953" endtime="20201112 12:29:02.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.942" endtime="20201112 12:29:02.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.966" endtime="20201112 12:29:02.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:02.974" endtime="20201112 12:29:02.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.970" endtime="20201112 12:29:02.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.961" endtime="20201112 12:29:02.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.434" endtime="20201112 12:29:03.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.433" endtime="20201112 12:29:03.000"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.023" endtime="20201112 12:29:03.045"></status>
</kw>
<msg timestamp="20201112 12:29:03.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:03.019" endtime="20201112 12:29:03.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:03.049" endtime="20201112 12:29:03.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.055" endtime="20201112 12:29:03.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.012" endtime="20201112 12:29:03.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.006" endtime="20201112 12:29:03.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.078" endtime="20201112 12:29:03.419"></status>
</kw>
<msg timestamp="20201112 12:29:03.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040865417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:03.075" endtime="20201112 12:29:03.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040865417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:03.428" endtime="20201112 12:29:03.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.446" endtime="20201112 12:29:03.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.068" endtime="20201112 12:29:03.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.063" endtime="20201112 12:29:03.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:03.465" level="INFO">${RESULT} = [{'time': 0.040865417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001353060000000017, 'source_diff': 0.0001353060000000017}, {'time': 0.041008722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:29:03.457" endtime="20201112 12:29:03.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:03.496" level="INFO">${ACCURACY} = {'time': [0.040865417, 0.041008722, 0.041150125, 0.041291458, 0.041435778, 0.041576083, 0.041717417, 0.041857778, 0.041999111, 0.042139444, 0.042280764, 0.042425083, 0.042568389, 0.042713806, 0.042857...</msg>
<status status="PASS" starttime="20201112 12:29:03.467" endtime="20201112 12:29:03.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.507" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:29:03.505" endtime="20201112 12:29:03.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.512" level="INFO">VALUE: [0.0001353060000000017, 0.00013531899999999486, 0.0001353060000000017, 0.00013484700000000044, 0.00013499999999999623, 0.00013467999999999813, 0.0001353480000000004, 0.00013520899999999725, 0.0001348190000000013, 0.00013537500000000008, 0.00013523599999999691, 0.00013468000000000507, 0.00013493099999999786, 0.0001354589999999975, 0.00013495900000000394, 0.00013538899999999965, 0.00013466599999999856, 0.0001347640000000025, 0.00013448700000000258, 0.00013533299999999443, 0.00013493099999999786, 0.0001346809999999976, 0.00013505500000000198, 0.00013462499999999933, 0.00013458300000000062, 0.00013565299999999947, 0.00013438899999999865, 0.00013534700000000094, 0.00013462499999999933, 0.00013488899999999915, 0.00013494399999999795, 0.00013534700000000094, 0.00013534700000000094, 0.00013495900000000394, 0.00013508300000000112, 0.00013487499999999958, 0.00013544499999999793, 0.00013501400000000274, 0.0001349860000000036, 0.00013448599999999616, 0.0001350970000000007, 0.00013515299999999897, 0.0001349169999999983, 0.0001348190000000013, 0.00013527800000000256, 0.00013579200000000263, 0.00013488899999999915, 0.00013534700000000094, 0.00013490299999999872, 0.00013490299999999872]</msg>
<status status="PASS" starttime="20201112 12:29:03.509" endtime="20201112 12:29:03.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.498" endtime="20201112 12:29:03.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.522" endtime="20201112 12:29:03.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:03.530" endtime="20201112 12:29:03.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.526" endtime="20201112 12:29:03.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.517" endtime="20201112 12:29:03.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.002" endtime="20201112 12:29:03.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.001" endtime="20201112 12:29:03.556"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.579" endtime="20201112 12:29:03.600"></status>
</kw>
<msg timestamp="20201112 12:29:03.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:03.575" endtime="20201112 12:29:03.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:03.603" endtime="20201112 12:29:03.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.609" endtime="20201112 12:29:03.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.568" endtime="20201112 12:29:03.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.562" endtime="20201112 12:29:03.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.633" endtime="20201112 12:29:03.966"></status>
</kw>
<msg timestamp="20201112 12:29:03.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040557694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040693764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:03.629" endtime="20201112 12:29:03.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040557694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040693764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:03.976" endtime="20201112 12:29:03.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.994" endtime="20201112 12:29:04.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.622" endtime="20201112 12:29:04.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.617" endtime="20201112 12:29:04.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:04.013" level="INFO">${RESULT} = [{'time': 0.040693764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013607000000000202, 'source_diff': 0.00013607000000000202}, {'time': 0.040835083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:04.004" endtime="20201112 12:29:04.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:04.044" level="INFO">${ACCURACY} = {'time': [0.040693764, 0.040835083, 0.040981458, 0.041124764, 0.041271139, 0.041415472, 0.041558764, 0.041705069, 0.041850417, 0.041992722, 0.042138028, 0.042283375, 0.042427681, 0.042572028, 0.042713...</msg>
<status status="PASS" starttime="20201112 12:29:04.015" endtime="20201112 12:29:04.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.055" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:29:04.052" endtime="20201112 12:29:04.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.060" level="INFO">VALUE: [0.00013607000000000202, 0.00013547200000000453, 0.00013722199999999934, 0.000135861000000001, 0.00013587500000000058, 0.0001356389999999999, 0.0001356809999999986, 0.0001358469999999945, 0.00013611100000000126, 0.00013550000000000367, 0.00013629200000000313, 0.00013549999999999673, 0.00013636200000000098, 0.00013615299999999997, 0.00013623599999999791, 0.00013561100000000076, 0.0001356389999999999, 0.00013588900000000015, 0.00013586200000000048, 0.00013570799999999827, 0.00013583300000000187, 0.000136264000000004, 0.00013558299999999468, 0.00013594399999999895, 0.0001356389999999999, 0.00013633300000000237, 0.0001357080000000052, 0.00013620799999999877, 0.00013562500000000033, 0.00013583300000000187, 0.0001356389999999999, 0.00013594399999999895, 0.00013611100000000126, 0.00013591599999999981, 0.00013611100000000126, 0.0001361939999999992, 0.00013545900000000444, 0.00013584700000000144, 0.00013626399999999705, 0.0001356939999999987, 0.00013620799999999877, 0.00013612500000000083, 0.00013611100000000126, 0.00013561099999999382, 0.0001354169999999988, 0.00013556900000000205, 0.00013544499999999793, 0.00013626399999999705, 0.00013612500000000083, 0.0001354860000000041]</msg>
<status status="PASS" starttime="20201112 12:29:04.057" endtime="20201112 12:29:04.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.046" endtime="20201112 12:29:04.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.070" endtime="20201112 12:29:04.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:04.078" endtime="20201112 12:29:04.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.073" endtime="20201112 12:29:04.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.065" endtime="20201112 12:29:04.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.558" endtime="20201112 12:29:04.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.557" endtime="20201112 12:29:04.104"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.126" endtime="20201112 12:29:04.147"></status>
</kw>
<msg timestamp="20201112 12:29:04.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:04.123" endtime="20201112 12:29:04.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:04.151" endtime="20201112 12:29:04.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.157" endtime="20201112 12:29:04.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.116" endtime="20201112 12:29:04.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.110" endtime="20201112 12:29:04.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.180" endtime="20201112 12:29:04.515"></status>
</kw>
<msg timestamp="20201112 12:29:04.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040403069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040540278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:04.177" endtime="20201112 12:29:04.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040403069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040540278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:04.525" endtime="20201112 12:29:04.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.543" endtime="20201112 12:29:04.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.170" endtime="20201112 12:29:04.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.165" endtime="20201112 12:29:04.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:04.562" level="INFO">${RESULT} = [{'time': 0.040540278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013720899999999925, 'source_diff': 0.00013720899999999925}, {'time': 0.040687639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:04.553" endtime="20201112 12:29:04.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:04.592" level="INFO">${ACCURACY} = {'time': [0.040540278, 0.040687639, 0.040829986, 0.040973264, 0.041117625, 0.041262944, 0.041407264, 0.041554625, 0.041701958, 0.041849292, 0.041993639, 0.042137042, 0.042281417, 0.042425764, 0.042572...</msg>
<status status="PASS" starttime="20201112 12:29:04.564" endtime="20201112 12:29:04.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.603" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:29:04.601" endtime="20201112 12:29:04.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.608" level="INFO">VALUE: [0.00013720899999999925, 0.00013656999999999558, 0.0001373049999999973, 0.00013658300000000262, 0.00013690300000000072, 0.00013656900000000305, 0.00013740300000000122, 0.00013666700000000004, 0.00013676399999999755, 0.000136861000000002, 0.0001367919999999967, 0.0001366809999999996, 0.0001368480000000019, 0.00013680599999999626, 0.00013733299999999643, 0.00013707000000000302, 0.00013744400000000045, 0.0001373060000000037, 0.00013730599999999676, 0.0001376390000000019, 0.00013711099999999532, 0.00013693099999999986, 0.0001373049999999973, 0.00013654200000000338, 0.0001365689999999961, 0.00013727699999999815, 0.00013695799999999952, 0.0001364719999999986, 0.00013807000000000402, 0.00013658399999999515, 0.00013698599999999866, 0.00013704199999999694, 0.00013651400000000424, 0.0001371940000000002, 0.00013683400000000234, 0.00013679200000000363, 0.0001364719999999986, 0.00013704199999999694, 0.00013672299999999832, 0.0001365840000000021, 0.00013675000000000492, 0.00013705499999999704, 0.00013749999999999873, 0.00013737499999999514, 0.00013698599999999866, 0.0001369310000000068, 0.00013698599999999866, 0.00013661100000000176, 0.00013645799999999902, 0.00013647299999999807]</msg>
<status status="PASS" starttime="20201112 12:29:04.605" endtime="20201112 12:29:04.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.594" endtime="20201112 12:29:04.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.618" endtime="20201112 12:29:04.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:04.626" endtime="20201112 12:29:04.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.622" endtime="20201112 12:29:04.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.613" endtime="20201112 12:29:04.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.106" endtime="20201112 12:29:04.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.105" endtime="20201112 12:29:04.652"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.675" endtime="20201112 12:29:04.696"></status>
</kw>
<msg timestamp="20201112 12:29:04.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:04.672" endtime="20201112 12:29:04.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:04.699" endtime="20201112 12:29:04.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.706" endtime="20201112 12:29:04.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.664" endtime="20201112 12:29:04.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.659" endtime="20201112 12:29:04.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.729" endtime="20201112 12:29:05.064"></status>
</kw>
<msg timestamp="20201112 12:29:05.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040436444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040574736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:04.726" endtime="20201112 12:29:05.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:05.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040436444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040574736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:05.074" endtime="20201112 12:29:05.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.092" endtime="20201112 12:29:05.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.718" endtime="20201112 12:29:05.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.714" endtime="20201112 12:29:05.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:05.110" level="INFO">${RESULT} = [{'time': 0.040574736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001382919999999982, 'source_diff': 0.0001382919999999982}, {'time': 0.040724083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:29:05.102" endtime="20201112 12:29:05.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:05.143" level="INFO">${ACCURACY} = {'time': [0.040574736, 0.040724083, 0.040868347, 0.041015653, 0.041158917, 0.041302194, 0.041445514, 0.041590833, 0.041734111, 0.041879431, 0.042025736, 0.042169028, 0.042314319, 0.042460653, 0.042606...</msg>
<status status="PASS" starttime="20201112 12:29:05.112" endtime="20201112 12:29:05.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:05.154" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:29:05.152" endtime="20201112 12:29:05.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:05.159" level="INFO">VALUE: [0.0001382919999999982, 0.00013845800000000102, 0.0001380689999999976, 0.0001381810000000011, 0.0001375840000000031, 0.00013822200000000034, 0.00013795800000000052, 0.00013788900000000215, 0.00013749999999999873, 0.00013776399999999855, 0.00013783300000000387, 0.00013741699999999385, 0.00013833300000000437, 0.00013940300000000322, 0.00013754200000000438, 0.0001384170000000018, 0.00013748599999999916, 0.00013816700000000154, 0.0001377770000000056, 0.00013805600000000445, 0.00013798700000000608, 0.00013816600000000206, 0.00013836099999999657, 0.00013773599999999941, 0.00013748599999999916, 0.00013770800000000027, 0.00013763899999999496, 0.00013790299999999478, 0.000137652000000002, 0.0001375139999999983, 0.0001381940000000012, 0.00013830500000000523, 0.00013795799999999359, 0.0001376390000000019, 0.0001375840000000031, 0.0001376390000000019, 0.00013818000000000163, 0.00013743000000000088, 0.00013837500000000308, 0.0001374719999999996, 0.00013743100000000036, 0.00013806999999999708, 0.0001377919999999977, 0.00013824999999999948, 0.00013826399999999905, 0.0001376390000000019, 0.0001376249999999954, 0.00013761099999999582, 0.0001383889999999957, 0.00013816600000000206]</msg>
<status status="PASS" starttime="20201112 12:29:05.156" endtime="20201112 12:29:05.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.145" endtime="20201112 12:29:05.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.175" endtime="20201112 12:29:05.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:05.184" endtime="20201112 12:29:05.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.179" endtime="20201112 12:29:05.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.171" endtime="20201112 12:29:05.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.654" endtime="20201112 12:29:05.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.653" endtime="20201112 12:29:05.210"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.232" endtime="20201112 12:29:05.253"></status>
</kw>
<msg timestamp="20201112 12:29:05.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:05.229" endtime="20201112 12:29:05.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:05.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:05.256" endtime="20201112 12:29:05.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.263" endtime="20201112 12:29:05.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.222" endtime="20201112 12:29:05.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.216" endtime="20201112 12:29:05.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.286" endtime="20201112 12:29:05.620"></status>
</kw>
<msg timestamp="20201112 12:29:05.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040322514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040461514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:05.283" endtime="20201112 12:29:05.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:05.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040322514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040461514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:05.629" endtime="20201112 12:29:05.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.648" endtime="20201112 12:29:05.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.276" endtime="20201112 12:29:05.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.271" endtime="20201112 12:29:05.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:05.666" level="INFO">${RESULT} = [{'time': 0.040461514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013900000000000023, 'source_diff': 0.00013900000000000023}, {'time': 0.040607819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:05.657" endtime="20201112 12:29:05.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:05.697" level="INFO">${ACCURACY} = {'time': [0.040461514, 0.040607819, 0.040754181, 0.0409005, 0.041049861, 0.041199222, 0.041347569, 0.041493958, 0.041640319, 0.041786653, 0.041934986, 0.042084319, 0.042234625, 0.042377931, 0.04252230...</msg>
<status status="PASS" starttime="20201112 12:29:05.668" endtime="20201112 12:29:05.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:05.708" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:29:05.706" endtime="20201112 12:29:05.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:05.714" level="INFO">VALUE: [0.00013900000000000023, 0.00013918000000000263, 0.00013944500000000193, 0.0001389720000000011, 0.00013900000000000023, 0.00013920800000000177, 0.00013859699999999725, 0.00013933299999999843, 0.00013894400000000195, 0.00013930599999999876, 0.00013890300000000272, 0.00013929099999999972, 0.00013930599999999876, 0.00013847300000000007, 0.0001385840000000041, 0.00013874999999999998, 0.00013904199999999894, 0.00013927799999999962, 0.0001384720000000006, 0.00013890299999999578, 0.00013937499999999714, 0.000139346999999998, 0.00013891699999999535, 0.00013918099999999517, 0.0001388049999999988, 0.00013855499999999854, 0.00013940300000000322, 0.00014030599999999976, 0.00013894500000000143, 0.00013870799999999434, 0.00013895800000000152, 0.00013894500000000143, 0.00013852799999999887, 0.00013901300000000033, 0.0001388889999999962, 0.00013869500000000118, 0.00013843100000000136, 0.00013876399999999955, 0.00013880599999999826, 0.00013929200000000613, 0.00013863899999999596, 0.00013849999999999973, 0.0001386390000000029, 0.00013936099999999757, 0.00013936099999999757, 0.00013876399999999955, 0.00013845800000000102, 0.00013930599999999876, 0.00013925000000000048, 0.00013908399999999765]</msg>
<status status="PASS" starttime="20201112 12:29:05.711" endtime="20201112 12:29:05.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.699" endtime="20201112 12:29:05.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.723" endtime="20201112 12:29:05.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:05.732" endtime="20201112 12:29:05.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.727" endtime="20201112 12:29:05.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.719" endtime="20201112 12:29:05.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.212" endtime="20201112 12:29:05.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.210" endtime="20201112 12:29:05.757"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.780" endtime="20201112 12:29:05.801"></status>
</kw>
<msg timestamp="20201112 12:29:05.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:05.777" endtime="20201112 12:29:05.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:05.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:05.805" endtime="20201112 12:29:05.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.811" endtime="20201112 12:29:05.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.770" endtime="20201112 12:29:05.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.764" endtime="20201112 12:29:05.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:05.834" endtime="20201112 12:29:06.169"></status>
</kw>
<msg timestamp="20201112 12:29:06.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040358931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040499194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:05.831" endtime="20201112 12:29:06.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040358931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040499194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:06.179" endtime="20201112 12:29:06.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.197" endtime="20201112 12:29:06.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.824" endtime="20201112 12:29:06.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.819" endtime="20201112 12:29:06.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:06.214" level="INFO">${RESULT} = [{'time': 0.040499194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014026300000000158, 'source_diff': 0.00014026300000000158}, {'time': 0.040647556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:06.205" endtime="20201112 12:29:06.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:06.246" level="INFO">${ACCURACY} = {'time': [0.040499194, 0.040647556, 0.040794986, 0.04094225, 0.041092653, 0.041242028, 0.041392472, 0.04153975, 0.041686125, 0.041834486, 0.041984903, 0.042130278, 0.042280556, 0.042428889, 0.04257522...</msg>
<status status="PASS" starttime="20201112 12:29:06.216" endtime="20201112 12:29:06.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.257" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:29:06.255" endtime="20201112 12:29:06.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.263" level="INFO">VALUE: [0.00014026300000000158, 0.00013987500000000458, 0.00014002800000000037, 0.0001403889999999977, 0.00014011099999999832, 0.00014002800000000037, 0.0001395140000000003, 0.00014027800000000062, 0.00014004199999999994, 0.00013987499999999764, 0.00014024999999999455, 0.00014044500000000293, 0.00013945899999999456, 0.00013974999999999405, 0.00013961100000000476, 0.00014044500000000293, 0.00014016700000000354, 0.00014009699999999875, 0.00014027800000000062, 0.00013948600000000116, 0.00013954199999999944, 0.0001396940000000027, 0.00013998600000000166, 0.00014059800000000566, 0.00014005599999999951, 0.00013968099999999567, 0.00013981899999999936, 0.00013974999999999405, 0.00014026400000000105, 0.00013970900000000175, 0.00013981899999999936, 0.00014016599999999713, 0.00014015299999999703, 0.0001403339999999989, 0.00013993099999999592, 0.0001401119999999978, 0.000140444999999996, 0.00013954199999999944, 0.00013973600000000141, 0.00014059799999999872, 0.00013945799999999509, 0.00014031899999999986, 0.00014011099999999832, 0.00013995800000000252, 0.00013952699999999346, 0.00013965299999999653, 0.00013940300000000322, 0.00013959699999999825, 0.00013987499999999764, 0.00013998600000000166]</msg>
<status status="PASS" starttime="20201112 12:29:06.260" endtime="20201112 12:29:06.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.248" endtime="20201112 12:29:06.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.272" endtime="20201112 12:29:06.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:06.280" endtime="20201112 12:29:06.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.276" endtime="20201112 12:29:06.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.268" endtime="20201112 12:29:06.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.760" endtime="20201112 12:29:06.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:05.758" endtime="20201112 12:29:06.306"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.329" endtime="20201112 12:29:06.350"></status>
</kw>
<msg timestamp="20201112 12:29:06.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:06.326" endtime="20201112 12:29:06.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:06.354" endtime="20201112 12:29:06.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.360" endtime="20201112 12:29:06.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.319" endtime="20201112 12:29:06.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.313" endtime="20201112 12:29:06.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.383" endtime="20201112 12:29:06.719"></status>
</kw>
<msg timestamp="20201112 12:29:06.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040503625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040645069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:06.380" endtime="20201112 12:29:06.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040503625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040645069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:06.729" endtime="20201112 12:29:06.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.747" endtime="20201112 12:29:06.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.373" endtime="20201112 12:29:06.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.368" endtime="20201112 12:29:06.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:06.764" level="INFO">${RESULT} = [{'time': 0.040645069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014144399999999752, 'source_diff': 0.00014144399999999752}, {'time': 0.040792389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:06.755" endtime="20201112 12:29:06.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:06.796" level="INFO">${ACCURACY} = {'time': [0.040645069, 0.040792389, 0.040940806, 0.041087208, 0.041238611, 0.041384944, 0.041532306, 0.041683681, 0.041835069, 0.041981472, 0.042129833, 0.042278153, 0.042426597, 0.042577931, 0.042723...</msg>
<status status="PASS" starttime="20201112 12:29:06.766" endtime="20201112 12:29:06.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.807" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:29:06.805" endtime="20201112 12:29:06.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.812" level="INFO">VALUE: [0.00014144399999999752, 0.00014133300000000043, 0.000140959000000003, 0.00014116599999999813, 0.00014126400000000205, 0.00014058299999999968, 0.0001406249999999984, 0.00014080600000000026, 0.0001406940000000037, 0.0001407219999999959, 0.0001406799999999972, 0.00014095899999999606, 0.00014068000000000414, 0.00014086199999999854, 0.00014097300000000257, 0.00014108399999999965, 0.00014223599999999698, 0.00014137499999999914, 0.00014145799999999709, 0.00014107000000000008, 0.00014077800000000112, 0.0001413889999999987, 0.0001406669999999971, 0.00014148599999999623, 0.0001407920000000007, 0.000141347, 0.00014111099999999932, 0.0001409170000000043, 0.0001413889999999987, 0.00014115299999999803, 0.00014081900000000036, 0.00014142999999999795, 0.00014105500000000104, 0.00014063799999999849, 0.000141444999999997, 0.00014137499999999914, 0.00014141699999999785, 0.0001406249999999984, 0.00014140299999999828, 0.00014051300000000183, 0.0001406249999999984, 0.0001407920000000007, 0.00014086099999999907, 0.00014072200000000284, 0.00014113899999999846, 0.00014144399999999752, 0.00014075000000000198, 0.00014094399999999702, 0.00014137500000000608, 0.00014058300000000662]</msg>
<status status="PASS" starttime="20201112 12:29:06.809" endtime="20201112 12:29:06.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.798" endtime="20201112 12:29:06.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.822" endtime="20201112 12:29:06.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:06.830" endtime="20201112 12:29:06.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.826" endtime="20201112 12:29:06.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.817" endtime="20201112 12:29:06.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.309" endtime="20201112 12:29:06.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.307" endtime="20201112 12:29:06.856"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.879" endtime="20201112 12:29:06.900"></status>
</kw>
<msg timestamp="20201112 12:29:06.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:06.876" endtime="20201112 12:29:06.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:06.904" endtime="20201112 12:29:06.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.910" endtime="20201112 12:29:06.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.869" endtime="20201112 12:29:06.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.863" endtime="20201112 12:29:06.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.933" endtime="20201112 12:29:07.271"></status>
</kw>
<msg timestamp="20201112 12:29:07.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040642167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040783917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:06.930" endtime="20201112 12:29:07.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:07.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040642167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040783917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:07.280" endtime="20201112 12:29:07.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:07.298" endtime="20201112 12:29:07.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.923" endtime="20201112 12:29:07.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.918" endtime="20201112 12:29:07.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:07.315" level="INFO">${RESULT} = [{'time': 0.040783917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014175000000000298, 'source_diff': 0.00014175000000000298}, {'time': 0.040933319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:07.307" endtime="20201112 12:29:07.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:07.349" level="INFO">${ACCURACY} = {'time': [0.040783917, 0.040933319, 0.041079667, 0.041232069, 0.041378431, 0.041528819, 0.041678208, 0.041829597, 0.041982014, 0.042133431, 0.042283806, 0.042434167, 0.042584542, 0.042736917, 0.042886...</msg>
<status status="PASS" starttime="20201112 12:29:07.318" endtime="20201112 12:29:07.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:07.360" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:29:07.358" endtime="20201112 12:29:07.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:07.365" level="INFO">VALUE: [0.00014175000000000298, 0.0001418470000000005, 0.0001416249999999994, 0.00014151300000000283, 0.00014172300000000332, 0.00014145800000000402, 0.0001415140000000023, 0.00014237500000000014, 0.00014197199999999716, 0.00014157000000000058, 0.0001420140000000028, 0.0001423889999999997, 0.00014219500000000468, 0.0001421249999999999, 0.00014154100000000197, 0.00014215300000000597, 0.00014145899999999656, 0.00014152799999999494, 0.0001419999999999963, 0.00014161099999999982, 0.0001416379999999995, 0.00014152799999999494, 0.00014173599999999648, 0.0001418889999999992, 0.00014208300000000118, 0.00014191599999999888, 0.00014197199999999716, 0.00014231900000000186, 0.00014241699999999885, 0.00014244399999999852, 0.00014231899999999492, 0.00014172300000000332, 0.00014243099999999842, 0.00014200000000000323, 0.00014182000000000083, 0.00014234800000000047, 0.00014200000000000323, 0.0001419999999999963, 0.00014223600000000391, 0.00014163899999999896, 0.0001421249999999999, 0.00014320799999999884, 0.00014213899999999946, 0.00014180600000000126, 0.00014233300000000143, 0.00014226400000000305, 0.00014213899999999946, 0.000141959000000004, 0.00014148600000000316, 0.00014186100000000007]</msg>
<status status="PASS" starttime="20201112 12:29:07.362" endtime="20201112 12:29:07.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.351" endtime="20201112 12:29:07.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:07.375" endtime="20201112 12:29:07.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:07.383" endtime="20201112 12:29:07.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.379" endtime="20201112 12:29:07.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.370" endtime="20201112 12:29:07.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.858" endtime="20201112 12:29:07.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.857" endtime="20201112 12:29:07.409"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:07.433" endtime="20201112 12:29:07.454"></status>
</kw>
<msg timestamp="20201112 12:29:07.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:07.429" endtime="20201112 12:29:07.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:07.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:07.458" endtime="20201112 12:29:07.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:07.464" endtime="20201112 12:29:07.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.422" endtime="20201112 12:29:07.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.415" endtime="20201112 12:29:07.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:07.487" endtime="20201112 12:29:07.824"></status>
</kw>
<msg timestamp="20201112 12:29:07.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041714764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041857597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:07.484" endtime="20201112 12:29:07.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:07.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041714764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041857597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:07.833" endtime="20201112 12:29:07.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:07.851" endtime="20201112 12:29:07.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.477" endtime="20201112 12:29:07.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.472" endtime="20201112 12:29:07.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:07.869" level="INFO">${RESULT} = [{'time': 0.041857597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014283300000000193, 'source_diff': 0.00014283300000000193}, {'time': 0.042007944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:07.860" endtime="20201112 12:29:07.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:07.900" level="INFO">${ACCURACY} = {'time': [0.041857597, 0.042007944, 0.042158306, 0.042310667, 0.042460958, 0.042615333, 0.042764694, 0.042913972, 0.043061292, 0.043209681, 0.043360944, 0.043511222, 0.043663556, 0.043816931, 0.043970...</msg>
<status status="PASS" starttime="20201112 12:29:07.871" endtime="20201112 12:29:07.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:07.912" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:29:07.908" endtime="20201112 12:29:07.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:07.917" level="INFO">VALUE: [0.00014283300000000193, 0.00014330499999999635, 0.00014280600000000226, 0.0001430140000000038, 0.00014336100000000157, 0.00014348599999999823, 0.00014430499999999735, 0.0001433050000000033, 0.00014248600000000416, 0.00014291699999999935, 0.00014334699999999506, 0.00014241599999999938, 0.0001429869999999972, 0.00014332000000000233, 0.00014275000000000398, 0.00014319399999999927, 0.00014240299999999928, 0.00014255500000000254, 0.00014245899999999756, 0.0001426810000000056, 0.00014259700000000125, 0.00014337500000000114, 0.00014448599999999923, 0.00014255599999999508, 0.00014292999999999945, 0.00014268000000000614, 0.0001429999999999973, 0.00014318099999999917, 0.00014300000000000423, 0.00014290299999999978, 0.00014245799999999809, 0.00014302800000000337, 0.00014311100000000132, 0.00014252799999999594, 0.00014279100000000322, 0.0001426250000000004, 0.00014332000000000233, 0.0001440969999999958, 0.00014316600000000013, 0.00014276400000000355, 0.00014295799999999859, 0.00014259700000000125, 0.00014300000000000423, 0.000142832999999995, 0.00014248600000000416, 0.00014323600000000491, 0.00014295899999999806, 0.0001428199999999949, 0.00014311100000000132, 0.00014295800000000553]</msg>
<status status="PASS" starttime="20201112 12:29:07.914" endtime="20201112 12:29:07.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.902" endtime="20201112 12:29:07.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:07.927" endtime="20201112 12:29:07.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:07.935" endtime="20201112 12:29:07.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.931" endtime="20201112 12:29:07.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.922" endtime="20201112 12:29:07.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.411" endtime="20201112 12:29:07.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.410" endtime="20201112 12:29:07.961"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:07.984" endtime="20201112 12:29:08.005"></status>
</kw>
<msg timestamp="20201112 12:29:08.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:07.980" endtime="20201112 12:29:08.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:08.008" endtime="20201112 12:29:08.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.015" endtime="20201112 12:29:08.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.973" endtime="20201112 12:29:08.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.967" endtime="20201112 12:29:08.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.038" endtime="20201112 12:29:08.371"></status>
</kw>
<msg timestamp="20201112 12:29:08.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040653986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:08.035" endtime="20201112 12:29:08.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040653986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:08.380" endtime="20201112 12:29:08.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.399" endtime="20201112 12:29:08.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.027" endtime="20201112 12:29:08.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.023" endtime="20201112 12:29:08.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:08.416" level="INFO">${RESULT} = [{'time': 0.040653986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014437500000000214, 'source_diff': 0.00014437500000000214}, {'time': 0.040807347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:08.407" endtime="20201112 12:29:08.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:08.447" level="INFO">${ACCURACY} = {'time': [0.040653986, 0.040807347, 0.040961722, 0.041113111, 0.041261472, 0.041414875, 0.041566208, 0.041717583, 0.041871931, 0.042022292, 0.042171667, 0.042324014, 0.042477389, 0.042629764, 0.042782...</msg>
<status status="PASS" starttime="20201112 12:29:08.418" endtime="20201112 12:29:08.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.458" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:29:08.456" endtime="20201112 12:29:08.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.464" level="INFO">VALUE: [0.00014437500000000214, 0.00014361100000000182, 0.00014358299999999574, 0.0001436250000000014, 0.00014383300000000293, 0.00014523599999999998, 0.00014379099999999728, 0.00014445800000000009, 0.00014441700000000085, 0.00014354200000000344, 0.00014443100000000042, 0.00014361100000000182, 0.0001439449999999995, 0.00014369499999999924, 0.00014420799999999984, 0.0001440140000000048, 0.00014348599999999823, 0.00014441700000000085, 0.00014345799999999909, 0.00014445800000000009, 0.00014366600000000063, 0.0001441250000000019, 0.00014430600000000376, 0.00014431899999999692, 0.000144347000000003, 0.0001438050000000038, 0.0001437769999999977, 0.00014359700000000225, 0.00014394400000000002, 0.0001440270000000049, 0.0001438890000000012, 0.00014357000000000258, 0.00014347199999999866, 0.00014431900000000386, 0.00014376400000000455, 0.0001435419999999965, 0.00014373599999999848, 0.00014409700000000275, 0.0001441670000000006, 0.0001437089999999988, 0.00014348599999999823, 0.00014376399999999762, 0.00014379199999999676, 0.0001449999999999993, 0.00014370799999999934, 0.00014387500000000164, 0.00014345800000000603, 0.00014408399999999572, 0.00014370900000000575, 0.0001437920000000037]</msg>
<status status="PASS" starttime="20201112 12:29:08.461" endtime="20201112 12:29:08.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.449" endtime="20201112 12:29:08.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.475" endtime="20201112 12:29:08.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:08.484" endtime="20201112 12:29:08.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.479" endtime="20201112 12:29:08.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.470" endtime="20201112 12:29:08.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.963" endtime="20201112 12:29:08.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:07.962" endtime="20201112 12:29:08.510"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.532" endtime="20201112 12:29:08.554"></status>
</kw>
<msg timestamp="20201112 12:29:08.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:08.529" endtime="20201112 12:29:08.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:08.557" endtime="20201112 12:29:08.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.563" endtime="20201112 12:29:08.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.522" endtime="20201112 12:29:08.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.516" endtime="20201112 12:29:08.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.586" endtime="20201112 12:29:08.922"></status>
</kw>
<msg timestamp="20201112 12:29:08.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040430931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040576153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:08.583" endtime="20201112 12:29:08.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040430931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040576153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:08.932" endtime="20201112 12:29:08.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.950" endtime="20201112 12:29:08.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.576" endtime="20201112 12:29:08.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.571" endtime="20201112 12:29:08.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:08.967" level="INFO">${RESULT} = [{'time': 0.040576153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014522199999999347, 'source_diff': 0.00014522199999999347}, {'time': 0.040728514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:08.958" endtime="20201112 12:29:08.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:08.998" level="INFO">${ACCURACY} = {'time': [0.040576153, 0.040728514, 0.040877931, 0.041030181, 0.041181528, 0.041335903, 0.041490222, 0.041640569, 0.041793903, 0.04194525, 0.042099583, 0.042251903, 0.042403278, 0.042555639, 0.0427079...</msg>
<status status="PASS" starttime="20201112 12:29:08.969" endtime="20201112 12:29:08.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.009" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:29:09.007" endtime="20201112 12:29:09.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.015" level="INFO">VALUE: [0.00014522199999999347, 0.00014501399999999887, 0.0001448890000000022, 0.00014527799999999869, 0.00014536100000000357, 0.00014508400000000365, 0.00014508299999999724, 0.00014541600000000238, 0.00014526399999999912, 0.00014504200000000494, 0.00014543000000000195, 0.00014527799999999869, 0.00014518100000000117, 0.00014534699999999706, 0.00014497200000000016, 0.00014444399999999358, 0.00014466699999999416, 0.0001447089999999998, 0.00014451399999999837, 0.00014522199999999347, 0.00014491700000000135, 0.00014501399999999887, 0.00014520899999999337, 0.00014461100000000282, 0.00014452799999999794, 0.00014515300000000203, 0.00014461099999999588, 0.00014470800000000034, 0.0001449999999999993, 0.0001447920000000047, 0.00014497200000000016, 0.0001453749999999962, 0.000145041999999998, 0.00014531900000000486, 0.00014472299999999938, 0.00014526299999999964, 0.00014452799999999794, 0.00014458400000000315, 0.00014468099999999373, 0.00014527799999999869, 0.00014501399999999887, 0.00014527800000000562, 0.0001452769999999992, 0.00014524999999999955, 0.00014519400000000127, 0.0001449450000000005, 0.00014458300000000368, 0.00014474999999999905, 0.00014452699999999846, 0.0001452769999999992]</msg>
<status status="PASS" starttime="20201112 12:29:09.012" endtime="20201112 12:29:09.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.000" endtime="20201112 12:29:09.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.024" endtime="20201112 12:29:09.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:09.034" endtime="20201112 12:29:09.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.030" endtime="20201112 12:29:09.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.020" endtime="20201112 12:29:09.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.512" endtime="20201112 12:29:09.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.511" endtime="20201112 12:29:09.060"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.082" endtime="20201112 12:29:09.104"></status>
</kw>
<msg timestamp="20201112 12:29:09.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:09.079" endtime="20201112 12:29:09.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:09.107" endtime="20201112 12:29:09.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.113" endtime="20201112 12:29:09.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.072" endtime="20201112 12:29:09.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.066" endtime="20201112 12:29:09.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.137" endtime="20201112 12:29:09.471"></status>
</kw>
<msg timestamp="20201112 12:29:09.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040496833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:09.133" endtime="20201112 12:29:09.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040496833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:09.480" endtime="20201112 12:29:09.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.499" endtime="20201112 12:29:09.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.126" endtime="20201112 12:29:09.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.122" endtime="20201112 12:29:09.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:09.517" level="INFO">${RESULT} = [{'time': 0.040496833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001468890000000042, 'source_diff': 0.0001468890000000042}, {'time': 0.040648167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:29:09.508" endtime="20201112 12:29:09.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:09.550" level="INFO">${ACCURACY} = {'time': [0.040496833, 0.040648167, 0.0408005, 0.040954889, 0.041110208, 0.041265472, 0.041415792, 0.041571125, 0.041722514, 0.041878764, 0.042032097, 0.042187528, 0.042340833, 0.042494153, 0.0426505,...</msg>
<status status="PASS" starttime="20201112 12:29:09.519" endtime="20201112 12:29:09.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.561" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:29:09.559" endtime="20201112 12:29:09.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.566" level="INFO">VALUE: [0.0001468890000000042, 0.00014618100000000217, 0.00014604200000000594, 0.00014623600000000098, 0.00014626400000000012, 0.00014617999999999576, 0.00014593100000000192, 0.00014569400000000177, 0.0001461250000000039, 0.0001455419999999985, 0.00014556899999999817, 0.00014608400000000465, 0.00014631899999999892, 0.00014605599999999858, 0.00014629199999999926, 0.0001455969999999973, 0.00014576399999999962, 0.00014629199999999926, 0.00014573600000000048, 0.00014597200000000116, 0.0001463329999999985, 0.00014720800000000284, 0.00014625000000000055, 0.00014565300000000253, 0.00014606999999999815, 0.0001459580000000016, 0.00014588899999999627, 0.00014581899999999842, 0.00014586099999999713, 0.00014602799999999944, 0.00014559700000000425, 0.00014548600000000023, 0.00014630499999999935, 0.00014580599999999833, 0.00014736099999999863, 0.00014613900000000346, 0.0001465549999999996, 0.00014611099999999738, 0.00014576399999999962, 0.00014598600000000073, 0.00014629199999999926, 0.0001458749999999967, 0.0001458749999999967, 0.0001455419999999985, 0.00014591599999999594, 0.00014551399999999937, 0.00014569500000000124, 0.00014629199999999926, 0.00014581899999999842, 0.00014576399999999962]</msg>
<status status="PASS" starttime="20201112 12:29:09.563" endtime="20201112 12:29:09.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.552" endtime="20201112 12:29:09.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.576" endtime="20201112 12:29:09.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:09.584" endtime="20201112 12:29:09.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.580" endtime="20201112 12:29:09.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.571" endtime="20201112 12:29:09.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.062" endtime="20201112 12:29:09.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.061" endtime="20201112 12:29:09.611"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.634" endtime="20201112 12:29:09.655"></status>
</kw>
<msg timestamp="20201112 12:29:09.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:09.631" endtime="20201112 12:29:09.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:09.659" endtime="20201112 12:29:09.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.665" endtime="20201112 12:29:09.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.623" endtime="20201112 12:29:09.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.618" endtime="20201112 12:29:09.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.688" endtime="20201112 12:29:10.023"></status>
</kw>
<msg timestamp="20201112 12:29:10.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041647792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041794917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:09.685" endtime="20201112 12:29:10.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:10.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041647792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041794917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:10.032" endtime="20201112 12:29:10.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.051" endtime="20201112 12:29:10.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.678" endtime="20201112 12:29:10.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.673" endtime="20201112 12:29:10.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:10.068" level="INFO">${RESULT} = [{'time': 0.041794917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014712499999999795, 'source_diff': 0.00014712499999999795}, {'time': 0.041950208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:10.059" endtime="20201112 12:29:10.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:10.098" level="INFO">${ACCURACY} = {'time': [0.041794917, 0.041950208, 0.042102556, 0.042259903, 0.042414236, 0.042566514, 0.042723958, 0.04287725, 0.043033625, 0.043187944, 0.043343347, 0.043494694, 0.043650083, 0.043807431, 0.0439627...</msg>
<status status="PASS" starttime="20201112 12:29:10.070" endtime="20201112 12:29:10.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:10.109" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:29:10.107" endtime="20201112 12:29:10.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:10.114" level="INFO">VALUE: [0.00014712499999999795, 0.00014726400000000112, 0.00014679199999999976, 0.0001468890000000042, 0.0001468890000000042, 0.00014670800000000234, 0.00014654100000000003, 0.0001466529999999966, 0.000147042, 0.00014719399999999633, 0.00014679100000000028, 0.00014673600000000148, 0.00014698600000000173, 0.00014730599999999983, 0.00014675000000000105, 0.00014740299999999734, 0.00014652799999999994, 0.00014665200000000406, 0.00014656899999999917, 0.00014697200000000216, 0.0001467220000000019, 0.000146832999999999, 0.0001466529999999966, 0.00014705599999999958, 0.00014656999999999865, 0.00014734699999999906, 0.00014734699999999906, 0.00014666600000000363, 0.00014722300000000188, 0.00014747300000000213, 0.00014715300000000403, 0.00014734699999999906, 0.0001471670000000036, 0.00014675000000000105, 0.00014745799999999615, 0.00014740300000000428, 0.0001471800000000037, 0.00014675000000000105, 0.00014673599999999454, 0.0001476250000000054, 0.0001470000000000013, 0.0001473749999999982, 0.00014733300000000643, 0.00014802699999999502, 0.00014727800000000069, 0.00014715199999999762, 0.0001468749999999977, 0.0001484169999999979, 0.0001470000000000013, 0.00014686100000000507]</msg>
<status status="PASS" starttime="20201112 12:29:10.112" endtime="20201112 12:29:10.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.100" endtime="20201112 12:29:10.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.124" endtime="20201112 12:29:10.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:10.133" endtime="20201112 12:29:10.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.129" endtime="20201112 12:29:10.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.120" endtime="20201112 12:29:10.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.613" endtime="20201112 12:29:10.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.612" endtime="20201112 12:29:10.159"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.184" endtime="20201112 12:29:10.205"></status>
</kw>
<msg timestamp="20201112 12:29:10.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:10.181" endtime="20201112 12:29:10.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:10.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:10.209" endtime="20201112 12:29:10.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.215" endtime="20201112 12:29:10.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.173" endtime="20201112 12:29:10.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.166" endtime="20201112 12:29:10.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.239" endtime="20201112 12:29:10.575"></status>
</kw>
<msg timestamp="20201112 12:29:10.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043221819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043369653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:10.235" endtime="20201112 12:29:10.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:10.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043221819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043369653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:10.584" endtime="20201112 12:29:10.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.602" endtime="20201112 12:29:10.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.228" endtime="20201112 12:29:10.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.223" endtime="20201112 12:29:10.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:10.619" level="INFO">${RESULT} = [{'time': 0.043369653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014783399999999947, 'source_diff': 0.00014783399999999947}, {'time': 0.043524028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:10.611" endtime="20201112 12:29:10.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:10.650" level="INFO">${ACCURACY} = {'time': [0.043369653, 0.043524028, 0.043677403, 0.043834667, 0.043989014, 0.044141347, 0.044296681, 0.044451014, 0.044609361, 0.044762667, 0.044917, 0.045071361, 0.045229736, 0.045385097, 0.045537444...</msg>
<status status="PASS" starttime="20201112 12:29:10.621" endtime="20201112 12:29:10.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:10.661" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:29:10.659" endtime="20201112 12:29:10.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:10.666" level="INFO">VALUE: [0.00014783399999999947, 0.00014763899999999802, 0.000147527999999994, 0.00014840299999999834, 0.0001480969999999998, 0.00014772199999999597, 0.00014799999999999536, 0.00014793099999999698, 0.00014777800000000119, 0.0001482499999999956, 0.00014836099999999963, 0.0001476529999999976, 0.0001483330000000005, 0.00014748600000000223, 0.00014759700000000625, 0.00014809799999999929, 0.00014826400000000212, 0.00014772300000000238, 0.0001478890000000052, 0.00014811100000000632, 0.00014747300000000213, 0.0001480000000000023, 0.0001485550000000016, 0.00014745900000000256, 0.00014772300000000238, 0.00014825000000000255, 0.00014763900000000496, 0.00014766600000000463, 0.0001475420000000005, 0.00014762499999999845, 0.00014751400000000137, 0.0001489580000000046, 0.0001481670000000046, 0.00014754100000000103, 0.00014747300000000213, 0.00014759799999999879, 0.00014780600000000033, 0.00014777800000000119, 0.00014795799999999665, 0.0001483200000000004, 0.00014804100000000153, 0.0001475550000000006, 0.00014823600000000298, 0.00014875000000000305, 0.00014818099999999723, 0.00014822199999999647, 0.00014805600000000058, 0.00014843099999999748, 0.00014806900000000067, 0.00014748600000000223]</msg>
<status status="PASS" starttime="20201112 12:29:10.663" endtime="20201112 12:29:10.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.652" endtime="20201112 12:29:10.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.683" endtime="20201112 12:29:10.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:10.691" endtime="20201112 12:29:10.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.686" endtime="20201112 12:29:10.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.678" endtime="20201112 12:29:10.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.161" endtime="20201112 12:29:10.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.160" endtime="20201112 12:29:10.717"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.739" endtime="20201112 12:29:10.761"></status>
</kw>
<msg timestamp="20201112 12:29:10.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:10.736" endtime="20201112 12:29:10.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:10.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:10.764" endtime="20201112 12:29:10.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.771" endtime="20201112 12:29:10.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.729" endtime="20201112 12:29:10.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.723" endtime="20201112 12:29:10.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:10.796" endtime="20201112 12:29:11.130"></status>
</kw>
<msg timestamp="20201112 12:29:11.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040492403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040641347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:10.793" endtime="20201112 12:29:11.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040492403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040641347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:11.140" endtime="20201112 12:29:11.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.158" endtime="20201112 12:29:11.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.785" endtime="20201112 12:29:11.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.781" endtime="20201112 12:29:11.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:11.175" level="INFO">${RESULT} = [{'time': 0.040641347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014894399999999808, 'source_diff': 0.00014894399999999808}, {'time': 0.040795694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:11.167" endtime="20201112 12:29:11.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:11.206" level="INFO">${ACCURACY} = {'time': [0.040641347, 0.040795694, 0.040950056, 0.041108403, 0.041267736, 0.041426083, 0.041585403, 0.041743736, 0.041903069, 0.042062431, 0.042222819, 0.042382139, 0.042541458, 0.042695736, 0.042855...</msg>
<status status="PASS" starttime="20201112 12:29:11.177" endtime="20201112 12:29:11.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.217" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:29:11.215" endtime="20201112 12:29:11.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.222" level="INFO">VALUE: [0.00014894399999999808, 0.0001492079999999979, 0.0001489169999999984, 0.0001491529999999991, 0.00014856900000000117, 0.00014861099999999988, 0.0001493750000000002, 0.0001485829999999938, 0.00014894399999999808, 0.0001486949999999973, 0.00015044399999999958, 0.0001488749999999997, 0.00014873599999999654, 0.00014913899999999952, 0.0001487770000000027, 0.00014881900000000142, 0.00014940299999999934, 0.00014868100000000467, 0.00014881900000000142, 0.00014927800000000269, 0.00014852800000000194, 0.00014843100000000442, 0.00015008300000000224, 0.00014861099999999988, 0.00014877800000000219, 0.00014881900000000142, 0.00014875000000000305, 0.0001492079999999979, 0.00014929199999999532, 0.00014876399999999568, 0.00014868100000000467, 0.00014916699999999866, 0.0001487220000000039, 0.00015031899999999598, 0.00015029100000000378, 0.0001493200000000014, 0.0001492220000000044, 0.00014919399999999833, 0.0001488059999999944, 0.00014919399999999833, 0.00014866699999999816, 0.00014944499999999805, 0.00014876400000000262, 0.00014923599999999704, 0.00014930499999999541, 0.00014879199999999482, 0.00014870899999999687, 0.00014897199999999722, 0.00014861199999999936, 0.0001485550000000016]</msg>
<status status="PASS" starttime="20201112 12:29:11.219" endtime="20201112 12:29:11.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.208" endtime="20201112 12:29:11.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.232" endtime="20201112 12:29:11.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:11.240" endtime="20201112 12:29:11.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.236" endtime="20201112 12:29:11.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.227" endtime="20201112 12:29:11.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.719" endtime="20201112 12:29:11.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:10.718" endtime="20201112 12:29:11.266"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.289" endtime="20201112 12:29:11.311"></status>
</kw>
<msg timestamp="20201112 12:29:11.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:11.286" endtime="20201112 12:29:11.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:11.314" endtime="20201112 12:29:11.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.320" endtime="20201112 12:29:11.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.278" endtime="20201112 12:29:11.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.273" endtime="20201112 12:29:11.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.345" endtime="20201112 12:29:11.682"></status>
</kw>
<msg timestamp="20201112 12:29:11.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040589292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:11.342" endtime="20201112 12:29:11.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040589292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:11.691" endtime="20201112 12:29:11.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.710" endtime="20201112 12:29:11.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.333" endtime="20201112 12:29:11.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.328" endtime="20201112 12:29:11.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:11.727" level="INFO">${RESULT} = [{'time': 0.040739139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014984700000000156, 'source_diff': 0.00014984700000000156}, {'time': 0.040895486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:11.718" endtime="20201112 12:29:11.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:11.759" level="INFO">${ACCURACY} = {'time': [0.040739139, 0.040895486, 0.041051833, 0.041207194, 0.041364556, 0.041524903, 0.041683306, 0.041841625, 0.042001972, 0.042157333, 0.042315681, 0.042471028, 0.042626361, 0.042781681, 0.042939...</msg>
<status status="PASS" starttime="20201112 12:29:11.729" endtime="20201112 12:29:11.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.770" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:29:11.768" endtime="20201112 12:29:11.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.776" level="INFO">VALUE: [0.00014984700000000156, 0.00014994399999999908, 0.00014951400000000337, 0.00015041600000000044, 0.00014983399999999453, 0.00014997200000000516, 0.00015011200000000086, 0.00014984700000000156, 0.00014997199999999822, 0.00015043, 0.0001513200000000034, 0.0001499859999999978, 0.00014948600000000423, 0.00014975000000000405, 0.00015022300000000488, 0.000149527999999996, 0.00014961100000000088, 0.00014951400000000337, 0.00014961099999999394, 0.0001502079999999989, 0.00014998600000000473, 0.00015030600000000283, 0.0001500970000000018, 0.00015011100000000138, 0.0001497079999999984, 0.0001503750000000012, 0.0001499859999999978, 0.00015061200000000136, 0.0001496949999999983, 0.00015026400000000412, 0.00015005600000000258, 0.00015026399999999718, 0.00015044499999999905, 0.0001497079999999984, 0.00015029200000000326, 0.0001498059999999954, 0.0001497079999999984, 0.00014959699999999437, 0.00014976399999999668, 0.000149429999999999, 0.0001500970000000018, 0.0001512079999999999, 0.00015094400000000008, 0.00015026400000000412, 0.00015030500000000335, 0.0001499299999999995, 0.00015019399999999933, 0.00015027799999999675, 0.0001494729999999972, 0.00015072199999999897]</msg>
<status status="PASS" starttime="20201112 12:29:11.773" endtime="20201112 12:29:11.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.761" endtime="20201112 12:29:11.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.785" endtime="20201112 12:29:11.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:11.793" endtime="20201112 12:29:11.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.789" endtime="20201112 12:29:11.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.781" endtime="20201112 12:29:11.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.268" endtime="20201112 12:29:11.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.267" endtime="20201112 12:29:11.820"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.842" endtime="20201112 12:29:11.864"></status>
</kw>
<msg timestamp="20201112 12:29:11.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:11.839" endtime="20201112 12:29:11.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:11.867" endtime="20201112 12:29:11.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.873" endtime="20201112 12:29:11.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.832" endtime="20201112 12:29:11.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.826" endtime="20201112 12:29:11.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.897" endtime="20201112 12:29:12.234"></status>
</kw>
<msg timestamp="20201112 12:29:12.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040593861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040744528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:11.893" endtime="20201112 12:29:12.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040593861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040744528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:12.244" endtime="20201112 12:29:12.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.262" endtime="20201112 12:29:12.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.886" endtime="20201112 12:29:12.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.882" endtime="20201112 12:29:12.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:12.279" level="INFO">${RESULT} = [{'time': 0.040744528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015066700000000016, 'source_diff': 0.00015066700000000016}, {'time': 0.040902861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:12.270" endtime="20201112 12:29:12.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:12.310" level="INFO">${ACCURACY} = {'time': [0.040744528, 0.040902861, 0.041062181, 0.041218528, 0.041375889, 0.041533222, 0.041692583, 0.041848, 0.042007347, 0.042166819, 0.042328181, 0.042486569, 0.042644972, 0.042801361, 0.042958708...</msg>
<status status="PASS" starttime="20201112 12:29:12.281" endtime="20201112 12:29:12.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.321" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:29:12.318" endtime="20201112 12:29:12.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.326" level="INFO">VALUE: [0.00015066700000000016, 0.00015084699999999562, 0.0001513620000000021, 0.00015077799999999725, 0.0001507079999999994, 0.00015063900000000102, 0.00015095799999999965, 0.0001507780000000042, 0.00015106900000000367, 0.0001506660000000007, 0.0001504729999999982, 0.00015052700000000446, 0.00015106900000000367, 0.0001509170000000004, 0.00015065200000000112, 0.0001513750000000022, 0.0001513750000000022, 0.00015081999999999596, 0.0001508200000000029, 0.00015219400000000133, 0.00015138900000000177, 0.0001512079999999999, 0.00015088900000000127, 0.00015123599999999904, 0.00015099999999999836, 0.0001511530000000011, 0.0001513059999999969, 0.00015093099999999998, 0.0001514170000000009, 0.00015090200000000137, 0.0001510699999999962, 0.0001506530000000006, 0.0001509170000000004, 0.00015094499999999955, 0.00015145800000000015, 0.0001510970000000028, 0.000150833000000003, 0.00015101399999999793, 0.00015097199999999922, 0.00015138899999999483, 0.000152430000000002, 0.0001511660000000012, 0.00015116700000000066, 0.00015101399999999793, 0.0001507499999999981, 0.0001509170000000004, 0.00015106900000000367, 0.00015123599999999904, 0.00015068099999999973, 0.00015099999999999836]</msg>
<status status="PASS" starttime="20201112 12:29:12.323" endtime="20201112 12:29:12.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.311" endtime="20201112 12:29:12.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.335" endtime="20201112 12:29:12.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:12.344" endtime="20201112 12:29:12.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.339" endtime="20201112 12:29:12.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.331" endtime="20201112 12:29:12.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.822" endtime="20201112 12:29:12.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.820" endtime="20201112 12:29:12.370"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.392" endtime="20201112 12:29:12.414"></status>
</kw>
<msg timestamp="20201112 12:29:12.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:12.389" endtime="20201112 12:29:12.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:12.417" endtime="20201112 12:29:12.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.424" endtime="20201112 12:29:12.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.382" endtime="20201112 12:29:12.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.376" endtime="20201112 12:29:12.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.447" endtime="20201112 12:29:12.785"></status>
</kw>
<msg timestamp="20201112 12:29:12.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040429542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:12.444" endtime="20201112 12:29:12.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040429542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:12.795" endtime="20201112 12:29:12.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.813" endtime="20201112 12:29:12.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.436" endtime="20201112 12:29:12.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.432" endtime="20201112 12:29:12.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:12.830" level="INFO">${RESULT} = [{'time': 0.040581389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015184700000000356, 'source_diff': 0.00015184700000000356}, {'time': 0.040741778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:12.821" endtime="20201112 12:29:12.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:12.861" level="INFO">${ACCURACY} = {'time': [0.040581389, 0.040741778, 0.040899097, 0.0410625, 0.041219861, 0.041379222, 0.041538653, 0.041701042, 0.041862472, 0.042019833, 0.042181222, 0.042340639, 0.042500958, 0.042662319, 0.04282366...</msg>
<status status="PASS" starttime="20201112 12:29:12.832" endtime="20201112 12:29:12.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.872" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:29:12.869" endtime="20201112 12:29:12.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.877" level="INFO">VALUE: [0.00015184700000000356, 0.00015243100000000148, 0.00015152800000000494, 0.00015301399999999993, 0.00015167999999999432, 0.00015244400000000158, 0.00015168100000000073, 0.0001519170000000014, 0.00015238899999999583, 0.00015168000000000126, 0.00015216599999999525, 0.0001528059999999984, 0.00015227699999999927, 0.00015222200000000047, 0.00015199999999999936, 0.0001517780000000052, 0.000152430000000002, 0.0001518750000000027, 0.00015236100000000363, 0.00015223600000000004, 0.00015211100000000338, 0.0001515550000000046, 0.00015263900000000302, 0.0001515550000000046, 0.00015230499999999841, 0.00015151299999999895, 0.00015234699999999712, 0.00015201399999999893, 0.0001523330000000045, 0.0001519029999999949, 0.00015156899999999723, 0.00015209699999999687, 0.00015184700000000356, 0.00015223600000000004, 0.00015236100000000363, 0.00015197199999999328, 0.00015251399999999943, 0.00015243100000000148, 0.0001522080000000009, 0.00015184699999999662, 0.00015209699999999687, 0.00015172199999999997, 0.00015172199999999997, 0.00015180499999999791, 0.00015188900000000227, 0.00015165200000000212, 0.00015199999999999936, 0.00015217999999999482, 0.00015173599999999954, 0.00015194400000000108]</msg>
<status status="PASS" starttime="20201112 12:29:12.874" endtime="20201112 12:29:12.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.863" endtime="20201112 12:29:12.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.886" endtime="20201112 12:29:12.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:12.895" endtime="20201112 12:29:12.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.890" endtime="20201112 12:29:12.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.882" endtime="20201112 12:29:12.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.372" endtime="20201112 12:29:12.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.371" endtime="20201112 12:29:12.921"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.944" endtime="20201112 12:29:12.965"></status>
</kw>
<msg timestamp="20201112 12:29:12.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:12.941" endtime="20201112 12:29:12.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:12.969" endtime="20201112 12:29:12.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.975" endtime="20201112 12:29:12.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.933" endtime="20201112 12:29:12.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.927" endtime="20201112 12:29:12.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.999" endtime="20201112 12:29:13.334"></status>
</kw>
<msg timestamp="20201112 12:29:13.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040840333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040993236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:12.995" endtime="20201112 12:29:13.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040840333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040993236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:13.344" endtime="20201112 12:29:13.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.362" endtime="20201112 12:29:13.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.988" endtime="20201112 12:29:13.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.983" endtime="20201112 12:29:13.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:13.381" level="INFO">${RESULT} = [{'time': 0.040993236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015290300000000284, 'source_diff': 0.00015290300000000284}, {'time': 0.041151514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:13.372" endtime="20201112 12:29:13.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:13.412" level="INFO">${ACCURACY} = {'time': [0.040993236, 0.041151514, 0.041314861, 0.041473236, 0.041632528, 0.041795944, 0.041958236, 0.042120625, 0.042280972, 0.042443306, 0.042602653, 0.042760958, 0.042920278, 0.043080625, 0.043241...</msg>
<status status="PASS" starttime="20201112 12:29:13.383" endtime="20201112 12:29:13.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.423" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:29:13.421" endtime="20201112 12:29:13.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.428" level="INFO">VALUE: [0.00015290300000000284, 0.00015245800000000115, 0.00015309699999999787, 0.00015322199999999453, 0.00015251399999999943, 0.00015395800000000265, 0.0001527780000000062, 0.00015347200000000172, 0.00015331899999999898, 0.00015343100000000248, 0.0001529449999999946, 0.00015273600000000054, 0.00015333399999999803, 0.0001533059999999989, 0.00015274999999999317, 0.0001531660000000032, 0.0001529170000000024, 0.00015304199999999907, 0.0001534860000000013, 0.00015266700000000216, 0.00015309699999999787, 0.0001529860000000008, 0.00015322300000000094, 0.00015259699999999737, 0.00015276399999999968, 0.00015305599999999864, 0.00015277799999999925, 0.00015330600000000583, 0.00015306899999999873, 0.00015338900000000377, 0.00015293100000000198, 0.00015281899999999848, 0.00015249999999999986, 0.000153124999999997, 0.00015348599999999435, 0.00015334700000000506, 0.00015327799999999975, 0.00015256900000000517, 0.00015355599999999914, 0.00015331899999999898, 0.0001530409999999996, 0.00015361199999999742, 0.00015277799999999925, 0.00015341699999999597, 0.00015281899999999848, 0.0001529860000000008, 0.00015398599999999485, 0.000153124999999997, 0.0001533200000000054, 0.00015301399999999993]</msg>
<status status="PASS" starttime="20201112 12:29:13.425" endtime="20201112 12:29:13.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.414" endtime="20201112 12:29:13.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.438" endtime="20201112 12:29:13.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:13.447" endtime="20201112 12:29:13.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.442" endtime="20201112 12:29:13.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.433" endtime="20201112 12:29:13.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.923" endtime="20201112 12:29:13.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.922" endtime="20201112 12:29:13.473"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.495" endtime="20201112 12:29:13.517"></status>
</kw>
<msg timestamp="20201112 12:29:13.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:13.492" endtime="20201112 12:29:13.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:13.520" endtime="20201112 12:29:13.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.526" endtime="20201112 12:29:13.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.485" endtime="20201112 12:29:13.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.479" endtime="20201112 12:29:13.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.550" endtime="20201112 12:29:13.887"></status>
</kw>
<msg timestamp="20201112 12:29:13.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040165944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040321042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:13.546" endtime="20201112 12:29:13.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040165944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040321042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:13.896" endtime="20201112 12:29:13.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.915" endtime="20201112 12:29:13.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.539" endtime="20201112 12:29:13.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.534" endtime="20201112 12:29:13.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:13.934" level="INFO">${RESULT} = [{'time': 0.040321042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015509799999999935, 'source_diff': 0.00015509799999999935}, {'time': 0.040479403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:13.925" endtime="20201112 12:29:13.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:13.967" level="INFO">${ACCURACY} = {'time': [0.040321042, 0.040479403, 0.040641847, 0.04080525, 0.040969694, 0.041134153, 0.041295611, 0.041455986, 0.041616528, 0.041777875, 0.041938306, 0.04209975, 0.042262208, 0.042425611, 0.04258708...</msg>
<status status="PASS" starttime="20201112 12:29:13.936" endtime="20201112 12:29:13.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.978" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:29:13.975" endtime="20201112 12:29:13.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.983" level="INFO">VALUE: [0.00015509799999999935, 0.00015354199999999957, 0.0001540410000000006, 0.00015406899999999973, 0.0001538609999999982, 0.00015397200000000222, 0.0001535970000000053, 0.00015400000000000136, 0.0001540280000000005, 0.0001539579999999957, 0.00015401400000000093, 0.0001536939999999959, 0.00015377700000000077, 0.00015430500000000041, 0.00015415199999999768, 0.00015447299999999525, 0.00015379199999999982, 0.0001541809999999963, 0.00015399999999999442, 0.00015481999999999996, 0.00015397199999999528, 0.00015445800000000315, 0.0001537500000000011, 0.000154013999999994, 0.000153737000000001, 0.0001538059999999994, 0.00015505600000000064, 0.00015351300000000095, 0.00015355499999999966, 0.00015393099999999604, 0.00015377800000000025, 0.0001541379999999981, 0.0001535410000000001, 0.0001535410000000001, 0.00015401400000000093, 0.00015398599999999485, 0.00015526299999999577, 0.00015431999999999946, 0.00015368000000000326, 0.00015422200000000247, 0.00015441600000000444, 0.00015412499999999801, 0.0001535410000000001, 0.0001539860000000018, 0.00015358399999999828, 0.0001542359999999951, 0.00015397200000000222, 0.00015393100000000298, 0.00015433299999999955, 0.00015358399999999828]</msg>
<status status="PASS" starttime="20201112 12:29:13.980" endtime="20201112 12:29:13.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.969" endtime="20201112 12:29:13.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.993" endtime="20201112 12:29:13.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:14.001" endtime="20201112 12:29:14.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.997" endtime="20201112 12:29:14.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.988" endtime="20201112 12:29:14.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.475" endtime="20201112 12:29:14.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.474" endtime="20201112 12:29:14.027"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.050" endtime="20201112 12:29:14.074"></status>
</kw>
<msg timestamp="20201112 12:29:14.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:14.047" endtime="20201112 12:29:14.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:14.077" endtime="20201112 12:29:14.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.083" endtime="20201112 12:29:14.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.039" endtime="20201112 12:29:14.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.034" endtime="20201112 12:29:14.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.107" endtime="20201112 12:29:14.456"></status>
</kw>
<msg timestamp="20201112 12:29:14.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040475792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04063125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:14.104" endtime="20201112 12:29:14.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040475792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04063125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:14.465" endtime="20201112 12:29:14.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.483" endtime="20201112 12:29:14.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.096" endtime="20201112 12:29:14.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.091" endtime="20201112 12:29:14.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:14.501" level="INFO">${RESULT} = [{'time': 0.04063125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015545800000000415, 'source_diff': 0.00015545800000000415}, {'time': 0.040791597, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:29:14.492" endtime="20201112 12:29:14.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:14.533" level="INFO">${ACCURACY} = {'time': [0.04063125, 0.040791597, 0.040951931, 0.041114278, 0.041278611, 0.041439931, 0.041599278, 0.041758639, 0.04192, 0.042085375, 0.042249778, 0.042411167, 0.042571472, 0.042735903, 0.042897222, ...</msg>
<status status="PASS" starttime="20201112 12:29:14.503" endtime="20201112 12:29:14.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.544" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:29:14.541" endtime="20201112 12:29:14.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.549" level="INFO">VALUE: [0.00015545800000000415, 0.0001545829999999998, 0.00015486199999999867, 0.00015532000000000046, 0.0001546939999999969, 0.00015491699999999747, 0.00015481999999999996, 0.0001549579999999967, 0.00015537499999999926, 0.00015541699999999797, 0.00015497200000000322, 0.00015570899999999693, 0.00015484699999999962, 0.00015469499999999636, 0.00015455500000000066, 0.00015491699999999747, 0.00015481900000000048, 0.00015456900000000023, 0.00015522300000000294, 0.0001546809999999968, 0.00015613899999999958, 0.0001561939999999984, 0.00015479200000000082, 0.0001545410000000011, 0.00015512499999999901, 0.00015497200000000322, 0.00015531900000000098, 0.00015617999999999882, 0.00015544500000000405, 0.0001546809999999968, 0.00015459699999999937, 0.00015444400000000358, 0.00015533300000000055, 0.00015474999999999517, 0.00015529199999999438, 0.00015520799999999696, 0.00015454200000000057, 0.00015606900000000173, 0.0001553060000000009, 0.00015498599999999585, 0.00015526400000000218, 0.00015459699999999937, 0.00015509699999999987, 0.00015481999999999996, 0.00015451400000000143, 0.00015522300000000294, 0.00015552799999999506, 0.00015494500000000355, 0.00015445800000000315, 0.00015519499999999686]</msg>
<status status="PASS" starttime="20201112 12:29:14.546" endtime="20201112 12:29:14.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.534" endtime="20201112 12:29:14.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.558" endtime="20201112 12:29:14.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:14.567" endtime="20201112 12:29:14.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.562" endtime="20201112 12:29:14.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.554" endtime="20201112 12:29:14.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.029" endtime="20201112 12:29:14.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.028" endtime="20201112 12:29:14.593"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.615" endtime="20201112 12:29:14.639"></status>
</kw>
<msg timestamp="20201112 12:29:14.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:14.612" endtime="20201112 12:29:14.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:14.643" endtime="20201112 12:29:14.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.649" endtime="20201112 12:29:14.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.605" endtime="20201112 12:29:14.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.599" endtime="20201112 12:29:14.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.674" endtime="20201112 12:29:15.010"></status>
</kw>
<msg timestamp="20201112 12:29:15.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040567625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040724264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:14.670" endtime="20201112 12:29:15.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:15.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040567625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040724264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:15.019" endtime="20201112 12:29:15.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.037" endtime="20201112 12:29:15.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.663" endtime="20201112 12:29:15.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.658" endtime="20201112 12:29:15.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:15.054" level="INFO">${RESULT} = [{'time': 0.040724264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015663900000000008, 'source_diff': 0.00015663900000000008}, {'time': 0.040886625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:15.046" endtime="20201112 12:29:15.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:15.086" level="INFO">${ACCURACY} = {'time': [0.040724264, 0.040886625, 0.041051, 0.041217319, 0.041381708, 0.041543028, 0.041708444, 0.041874861, 0.042040222, 0.042202639, 0.042369028, 0.042530347, 0.04269475, 0.042860153, 0.043021514,...</msg>
<status status="PASS" starttime="20201112 12:29:15.056" endtime="20201112 12:29:15.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:15.097" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:29:15.095" endtime="20201112 12:29:15.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:15.103" level="INFO">VALUE: [0.00015663900000000008, 0.00015605600000000164, 0.00015588899999999933, 0.000155430000000005, 0.0001556660000000057, 0.0001559860000000038, 0.0001557909999999954, 0.00015647199999999778, 0.00015595800000000465, 0.0001556809999999978, 0.00015572200000000397, 0.000156430000000006, 0.00015622199999999753, 0.0001562779999999958, 0.00015558299999999387, 0.00015573600000000354, 0.00015750000000000486, 0.00015634700000000112, 0.00015697299999999775, 0.00015637500000000026, 0.00015638899999999983, 0.00015563899999999908, 0.00015584700000000062, 0.00015551400000000243, 0.0001558060000000014, 0.0001562359999999971, 0.00015699999999999742, 0.00015623600000000404, 0.00015684700000000162, 0.00015638899999999983, 0.0001569029999999999, 0.00015559700000000037, 0.00015590199999999943, 0.00015547199999999678, 0.0001567359999999976, 0.0001560280000000025, 0.0001568610000000012, 0.00015548599999999635, 0.00015572200000000397, 0.00015620899999999743, 0.0001574030000000004, 0.0001559579999999977, 0.00015588899999999933, 0.0001556660000000057, 0.00015658400000000128, 0.00015570799999999746, 0.00015568100000000473, 0.0001569860000000048, 0.00015599999999999642, 0.00015638899999999983]</msg>
<status status="PASS" starttime="20201112 12:29:15.100" endtime="20201112 12:29:15.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.088" endtime="20201112 12:29:15.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.112" endtime="20201112 12:29:15.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:15.120" endtime="20201112 12:29:15.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.116" endtime="20201112 12:29:15.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.108" endtime="20201112 12:29:15.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.595" endtime="20201112 12:29:15.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.594" endtime="20201112 12:29:15.146"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.169" endtime="20201112 12:29:15.191"></status>
</kw>
<msg timestamp="20201112 12:29:15.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:15.166" endtime="20201112 12:29:15.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:15.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:15.195" endtime="20201112 12:29:15.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.201" endtime="20201112 12:29:15.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.159" endtime="20201112 12:29:15.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.153" endtime="20201112 12:29:15.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.224" endtime="20201112 12:29:15.560"></status>
</kw>
<msg timestamp="20201112 12:29:15.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040702944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040859597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:15.221" endtime="20201112 12:29:15.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:15.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040702944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040859597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:15.570" endtime="20201112 12:29:15.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.588" endtime="20201112 12:29:15.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.214" endtime="20201112 12:29:15.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.209" endtime="20201112 12:29:15.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:15.605" level="INFO">${RESULT} = [{'time': 0.040859597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015665299999999965, 'source_diff': 0.00015665299999999965}, {'time': 0.041028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:29:15.596" endtime="20201112 12:29:15.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:15.637" level="INFO">${ACCURACY} = {'time': [0.040859597, 0.041028, 0.041194389, 0.041358806, 0.041526194, 0.041690611, 0.041857028, 0.042023472, 0.042188861, 0.042354236, 0.042518625, 0.042685014, 0.042846389, 0.043013806, 0.043176208...</msg>
<status status="PASS" starttime="20201112 12:29:15.607" endtime="20201112 12:29:15.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:15.648" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:29:15.646" endtime="20201112 12:29:15.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:15.654" level="INFO">VALUE: [0.00015665299999999965, 0.0001574030000000004, 0.00015663900000000008, 0.000158222999999999, 0.00015730500000000341, 0.00015662500000000051, 0.00015708399999999484, 0.0001584580000000002, 0.00015712500000000101, 0.00015711100000000144, 0.00015704199999999613, 0.0001571809999999993, 0.0001568610000000012, 0.0001565700000000017, 0.00015694399999999914, 0.00015824999999999867, 0.00015681999999999502, 0.00015740200000000093, 0.0001573480000000016, 0.00015680599999999545, 0.00015679200000000282, 0.0001579449999999996, 0.00015663900000000008, 0.00015677800000000325, 0.00015663900000000008, 0.00015724999999999767, 0.00015672300000000444, 0.00015844400000000064, 0.00015730499999999648, 0.00015800000000000536, 0.00015669400000000583, 0.0001567500000000041, 0.000156528000000003, 0.00015709700000000187, 0.000156916, 0.0001574030000000004, 0.00015692999999999957, 0.00015733299999999562, 0.00015791700000000047, 0.00015672300000000444, 0.0001565830000000018, 0.00015712500000000101, 0.00015654099999999616, 0.00015655499999999573, 0.00015677699999999684, 0.00015736099999999476, 0.00015658400000000128, 0.00015705600000000264, 0.0001567359999999976, 0.00015677800000000325]</msg>
<status status="PASS" starttime="20201112 12:29:15.650" endtime="20201112 12:29:15.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.639" endtime="20201112 12:29:15.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.663" endtime="20201112 12:29:15.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:15.672" endtime="20201112 12:29:15.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.667" endtime="20201112 12:29:15.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.659" endtime="20201112 12:29:15.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.148" endtime="20201112 12:29:15.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.147" endtime="20201112 12:29:15.698"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.721" endtime="20201112 12:29:15.743"></status>
</kw>
<msg timestamp="20201112 12:29:15.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:15.718" endtime="20201112 12:29:15.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:15.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:15.747" endtime="20201112 12:29:15.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.753" endtime="20201112 12:29:15.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.711" endtime="20201112 12:29:15.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.705" endtime="20201112 12:29:15.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.776" endtime="20201112 12:29:16.111"></status>
</kw>
<msg timestamp="20201112 12:29:16.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041385417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041543694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:15.773" endtime="20201112 12:29:16.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041385417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041543694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:16.120" endtime="20201112 12:29:16.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:16.138" endtime="20201112 12:29:16.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.766" endtime="20201112 12:29:16.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.761" endtime="20201112 12:29:16.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:16.156" level="INFO">${RESULT} = [{'time': 0.041543694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015827699999999834, 'source_diff': 0.00015827699999999834}, {'time': 0.041710097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:29:16.147" endtime="20201112 12:29:16.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:29:16.189" level="INFO">${ACCURACY} = {'time': [0.041543694, 0.041710097, 0.041878514, 0.042045792, 0.042211153, 0.042377569, 0.042540833, 0.042704167, 0.042871542, 0.043039931, 0.043209278, 0.043374653, 0.043543056, 0.043711458, 0.043878...</msg>
<status status="PASS" starttime="20201112 12:29:16.158" endtime="20201112 12:29:16.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.200" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:29:16.198" endtime="20201112 12:29:16.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.205" level="INFO">VALUE: [0.00015827699999999834, 0.000157916000000001, 0.00015920800000000096, 0.00015758399999999534, 0.00015791700000000047, 0.00015836099999999576, 0.00015777699999999784, 0.000157528000000004, 0.00015815300000000115, 0.00015937499999999633, 0.00015845899999999968, 0.00015762500000000151, 0.00015762499999999458, 0.00015870800000000046, 0.00015802799999999756, 0.0001575700000000027, 0.0001586940000000009, 0.00015843100000000054, 0.00015829200000000432, 0.00015793100000000004, 0.00015772200000000597, 0.00015870800000000046, 0.0001575830000000028, 0.00015799999999999842, 0.00015783300000000305, 0.00015844400000000064, 0.00015802799999999756, 0.00015761100000000194, 0.00015772199999999903, 0.0001575139999999975, 0.00015837500000000226, 0.00015761100000000194, 0.00015815299999999421, 0.00015802799999999756, 0.00015799999999999842, 0.00015772300000000544, 0.00015786099999999526, 0.0001583610000000027, 0.00015897200000000028, 0.00015804199999999713, 0.00015776399999999774, 0.00015831899999999705, 0.00015813900000000158, 0.00015749999999999792, 0.00015752700000000452, 0.0001579579999999997, 0.00015783300000000305, 0.00015756900000000323, 0.00015754200000000357, 0.00015795899999999918]</msg>
<status status="PASS" starttime="20201112 12:29:16.202" endtime="20201112 12:29:16.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.191" endtime="20201112 12:29:16.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:16.215" endtime="20201112 12:29:16.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:16.223" endtime="20201112 12:29:16.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.219" endtime="20201112 12:29:16.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.210" endtime="20201112 12:29:16.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.700" endtime="20201112 12:29:16.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.699" endtime="20201112 12:29:16.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.137" endtime="20201112 12:29:16.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:16.260" endtime="20201112 12:29:16.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.255" endtime="20201112 12:29:16.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.253" endtime="20201112 12:29:16.284"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:28:21.012" endtime="20201112 12:29:16.285" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:27:23.102" endtime="20201112 12:29:16.295"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.435" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:29:16.450" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:29:18.390" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:29:16.431" endtime="20201112 12:29:18.391"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.397" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:29:18.394" endtime="20201112 12:29:18.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.428" endtime="20201112 12:29:18.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:18.404" endtime="20201112 12:29:18.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.401" endtime="20201112 12:29:18.741"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:18.770" endtime="20201112 12:29:18.786"></status>
</kw>
<msg timestamp="20201112 12:29:18.788" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:18.767" endtime="20201112 12:29:18.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:18.790" endtime="20201112 12:29:18.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.801" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:29:18.797" endtime="20201112 12:29:18.802"></status>
</kw>
<status status="FAIL" starttime="20201112 12:29:18.761" endtime="20201112 12:29:18.804"></status>
</kw>
<status status="FAIL" starttime="20201112 12:29:18.755" endtime="20201112 12:29:18.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.752" endtime="20201112 12:29:18.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:29:18.814" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:29:18.813" endtime="20201112 12:29:18.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.808" endtime="20201112 12:29:18.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.751" endtime="20201112 12:29:18.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.749" endtime="20201112 12:29:18.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:18.820" endtime="20201112 12:29:18.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.746" endtime="20201112 12:29:18.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:18.827" endtime="20201112 12:29:18.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.742" endtime="20201112 12:29:18.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.425" endtime="20201112 12:29:18.833"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:18.848" endtime="20201112 12:29:18.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.844" endtime="20201112 12:29:18.872"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:18.905" endtime="20201112 12:29:18.920"></status>
</kw>
<msg timestamp="20201112 12:29:18.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:18.901" endtime="20201112 12:29:18.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:29:18.924" endtime="20201112 12:29:18.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.934" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:29:18.930" endtime="20201112 12:29:18.935"></status>
</kw>
<status status="FAIL" starttime="20201112 12:29:18.894" endtime="20201112 12:29:18.937"></status>
</kw>
<status status="FAIL" starttime="20201112 12:29:18.888" endtime="20201112 12:29:18.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.885" endtime="20201112 12:29:18.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:29:18.947" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:29:18.945" endtime="20201112 12:29:18.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.941" endtime="20201112 12:29:18.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.883" endtime="20201112 12:29:18.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.882" endtime="20201112 12:29:18.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:18.951" endtime="20201112 12:29:18.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.878" endtime="20201112 12:29:18.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.873" endtime="20201112 12:29:18.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.842" endtime="20201112 12:29:18.958"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:18.966" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:18.989" endtime="20201112 12:29:21.101"></status>
</kw>
<msg timestamp="20201112 12:29:21.102" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 668771, 'wakeups': [678809, 688809, 698809, 708809, 718809, 728809, 73...</msg>
<status status="PASS" starttime="20201112 12:29:18.985" endtime="20201112 12:29:21.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 668771, 'wakeups': [678809, 688809, 698809, 708809, 718809, 728809, 73...</msg>
<status status="PASS" starttime="20201112 12:29:21.105" endtime="20201112 12:29:21.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.112" endtime="20201112 12:29:21.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.976" endtime="20201112 12:29:21.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.971" endtime="20201112 12:29:21.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:21.125" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [678809, 688809, 698809, 708809, 718809, 728809, 738809, 748809, 758809, 768809, 778809, 788809, 798809, 808809, 818809, 828809, 838809, 848809, ...</msg>
<status status="PASS" starttime="20201112 12:29:21.121" endtime="20201112 12:29:21.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.135" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:21.133" endtime="20201112 12:29:21.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.140" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:21.138" endtime="20201112 12:29:21.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.127" endtime="20201112 12:29:21.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.153" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:29:21.151" endtime="20201112 12:29:21.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.157" level="INFO">VALUE: 668771</msg>
<status status="PASS" starttime="20201112 12:29:21.155" endtime="20201112 12:29:21.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.144" endtime="20201112 12:29:21.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.170" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:21.168" endtime="20201112 12:29:21.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.175" level="INFO">VALUE: [678809, 688809, 698809, 708809, 718809, 728809, 738809, 748809, 758809, 768809, 778809, 788809, 798809, 808809, 818809, 828809, 838809, 848809, 858809, 868809, 878809, 888809, 898809, 908809, 918809, 928809, 938809, 948809, 958809, 968809, 978809, 988809, 998809, 1008809, 1018809, 1028809, 1038809, 1048809, 1058809, 1068809, 1078809, 1088809, 1098809, 1108809, 1118809, 1128809, 1138809, 1148809, 1158809, 1168809, 1178809, 1188809, 1198809, 1208809, 1218809, 1228809, 1238809, 1248809, 1258809, 1268809, 1278809, 1288809, 1298809, 1308809, 1318809, 1328809, 1338809, 1348809, 1358809, 1368809, 1378809, 1388809, 1398809, 1408809, 1418809, 1428809, 1438809, 1448809, 1458809, 1468809, 1478809, 1488809, 1498809, 1508809, 1518809, 1528809, 1538809, 1548809, 1558809, 1568809, 1578809, 1588809, 1598809, 1608809, 1618809, 1628809, 1638809, 1648809, 1658809, 1668809]</msg>
<status status="PASS" starttime="20201112 12:29:21.172" endtime="20201112 12:29:21.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.161" endtime="20201112 12:29:21.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.194" endtime="20201112 12:29:21.546"></status>
</kw>
<msg timestamp="20201112 12:29:21.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131456431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141520931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:21.190" endtime="20201112 12:29:21.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131456431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141520931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:21.554" endtime="20201112 12:29:21.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.571" endtime="20201112 12:29:21.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.183" endtime="20201112 12:29:21.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.178" endtime="20201112 12:29:21.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:21.635" level="INFO">${RESULT} = {'time': [0.131456431, 0.141520931, 0.151544889, 0.161569639, 0.171594042, 0.181618153, 0.191644264, 0.201669972, 0.211694181, 0.221719667, 0.231743847, 0.241769417, 0.251794014, 0.2618195, 0.27184470...</msg>
<status status="PASS" starttime="20201112 12:29:21.580" endtime="20201112 12:29:21.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.646" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:29:21.644" endtime="20201112 12:29:21.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.658" level="INFO">VALUE: 0.131456431</msg>
<status status="PASS" starttime="20201112 12:29:21.655" endtime="20201112 12:29:21.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.637" endtime="20201112 12:29:21.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.671" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:21.669" endtime="20201112 12:29:21.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.676" level="INFO">VALUE: [0.141520931, 0.151544889, 0.161569639, 0.171594042, 0.181618153, 0.191644264, 0.201669972, 0.211694181, 0.221719667, 0.231743847, 0.241769417, 0.251794014, 0.2618195, 0.271844708, 0.281871694, 0.291898556, 0.301925056, 0.311951153, 0.321976653, 0.332001833, 0.342027389, 0.352051486, 0.362076194, 0.372101125, 0.382125708, 0.392150014, 0.402174583, 0.412198986, 0.422223611, 0.432247486, 0.442272333, 0.452297458, 0.462323667, 0.472349444, 0.482376333, 0.492402653, 0.502427083, 0.512451153, 0.522475208, 0.532499875, 0.542525778, 0.552550792, 0.562575986, 0.572600222, 0.582624514, 0.592649472, 0.602675722, 0.612701583, 0.622728056, 0.632753944, 0.642780681, 0.652806625, 0.662832972, 0.672858472, 0.682885361, 0.692914431, 0.702943972, 0.712972681, 0.723000597, 0.733029361, 0.743058181, 0.753085958, 0.763114403, 0.773142667, 0.783170861, 0.793198667, 0.803226889, 0.813253194, 0.823279361, 0.833304806, 0.843330694, 0.853356639, 0.863383486, 0.873410194, 0.883437236, 0.893463208, 0.903489958, 0.913515694, 0.923542653, 0.933568083, 0.943593083, 0.953618431, 0.963643986, 0.973669375, 0.983696389, 0.993722375, 1.003746986, 1.01377275, 1.023799042, 1.033825319, 1.043851847, 1.053877708, 1.063904778, 1.073930139, 1.083955778, 1.093980875, 1.104006153, 1.114031653, 1.124058056, 1.134083806] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:21.673" endtime="20201112 12:29:21.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.661" endtime="20201112 12:29:21.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.685" endtime="20201112 12:29:21.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:21.693" endtime="20201112 12:29:21.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.688" endtime="20201112 12:29:21.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.680" endtime="20201112 12:29:21.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.967" endtime="20201112 12:29:21.718"></status>
</kw>
<msg timestamp="20201112 12:29:21.719" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.740" endtime="20201112 12:29:23.855"></status>
</kw>
<msg timestamp="20201112 12:29:23.857" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3412889, 'wakeups': [3422927, 3432927, 3442927, 3452927, 3462927, 3472...</msg>
<status status="PASS" starttime="20201112 12:29:21.736" endtime="20201112 12:29:23.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:23.864" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3412889, 'wakeups': [3422927, 3432927, 3442927, 3452927, 3462927, 3472...</msg>
<status status="PASS" starttime="20201112 12:29:23.859" endtime="20201112 12:29:23.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:23.866" endtime="20201112 12:29:23.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.729" endtime="20201112 12:29:23.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.724" endtime="20201112 12:29:23.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:23.879" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [3422927, 3432927, 3442927, 3452927, 3462927, 3472927, 3482927, 3492927, 3502927, 3512927, 3522927, 3532927, 3542927, 3552927, 3562927, 3572927, ...</msg>
<status status="PASS" starttime="20201112 12:29:23.874" endtime="20201112 12:29:23.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:23.889" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:23.887" endtime="20201112 12:29:23.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:23.894" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:23.891" endtime="20201112 12:29:23.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:23.881" endtime="20201112 12:29:23.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:23.906" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:29:23.904" endtime="20201112 12:29:23.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:23.911" level="INFO">VALUE: 3412889</msg>
<status status="PASS" starttime="20201112 12:29:23.909" endtime="20201112 12:29:23.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:23.897" endtime="20201112 12:29:23.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:23.926" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:23.921" endtime="20201112 12:29:23.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:23.931" level="INFO">VALUE: [3422927, 3432927, 3442927, 3452927, 3462927, 3472927, 3482927, 3492927, 3502927, 3512927, 3522927, 3532927, 3542927, 3552927, 3562927, 3572927, 3582927, 3592927, 3602927, 3612927, 3622927, 3632927, 3642927, 3652927, 3662927, 3672927, 3682927, 3692927, 3702927, 3712927, 3722927, 3732927, 3742927, 3752927, 3762927, 3772927, 3782927, 3792927, 3802927, 3812927, 3822927, 3832927, 3842927, 3852927, 3862927, 3872927, 3882927, 3892927, 3902927, 3912927, 3922927, 3932927, 3942927, 3952927, 3962927, 3972927, 3982927, 3992927, 4002927, 4012927, 4022927, 4032927, 4042927, 4052927, 4062927, 4072927, 4082927, 4092927, 4102927, 4112927, 4122927, 4132927, 4142927, 4152927, 4162927, 4172927, 4182927, 4192927, 4202927, 4212927, 4222927, 4232927, 4242927, 4252927, 4262927, 4272927, 4282927, 4292927, 4302927, 4312927, 4322927, 4332927, 4342927, 4352927, 4362927, 4372927, 4382927, 4392927, 4402927, 4412927]</msg>
<status status="PASS" starttime="20201112 12:29:23.928" endtime="20201112 12:29:23.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:23.915" endtime="20201112 12:29:23.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:23.951" endtime="20201112 12:29:24.296"></status>
</kw>
<msg timestamp="20201112 12:29:24.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037793, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047858875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:29:23.947" endtime="20201112 12:29:24.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037793, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047858875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:29:24.304" endtime="20201112 12:29:24.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:24.321" endtime="20201112 12:29:24.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:23.940" endtime="20201112 12:29:24.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:23.935" endtime="20201112 12:29:24.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:24.385" level="INFO">${RESULT} = {'time': [0.037793, 0.047858875, 0.057885181, 0.067912181, 0.077938278, 0.087964403, 0.097992458, 0.108020292, 0.118047847, 0.128076333, 0.138104972, 0.148133389, 0.158161833, 0.168190069, 0.178217958...</msg>
<status status="PASS" starttime="20201112 12:29:24.330" endtime="20201112 12:29:24.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.396" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:29:24.394" endtime="20201112 12:29:24.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.401" level="INFO">VALUE: 0.037793</msg>
<status status="PASS" starttime="20201112 12:29:24.398" endtime="20201112 12:29:24.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.387" endtime="20201112 12:29:24.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.414" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:24.412" endtime="20201112 12:29:24.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.419" level="INFO">VALUE: [0.047858875, 0.057885181, 0.067912181, 0.077938278, 0.087964403, 0.097992458, 0.108020292, 0.118047847, 0.128076333, 0.138104972, 0.148133389, 0.158161833, 0.168190069, 0.178217958, 0.18824525, 0.198272292, 0.208299833, 0.218326028, 0.228352958, 0.238378972, 0.248406403, 0.258433972, 0.268462069, 0.278489083, 0.288516458, 0.298543514, 0.308570736, 0.318597736, 0.328624236, 0.338649722, 0.348676361, 0.358701722, 0.368727889, 0.378754569, 0.388781681, 0.398808639, 0.408835958, 0.418863708, 0.428891306, 0.4389185, 0.448945792, 0.4589735, 0.469001125, 0.479027806, 0.489054125, 0.499080458, 0.509107542, 0.519134083, 0.529161222, 0.539187875, 0.549215708, 0.559242264, 0.569269694, 0.579295556, 0.589321736, 0.599346736, 0.609373417, 0.619400111, 0.629425986, 0.639452833, 0.649480389, 0.659505944, 0.669531708, 0.679556403, 0.689581361, 0.699606167, 0.709631986, 0.719658042, 0.729684028, 0.739710472, 0.749736083, 0.759761278, 0.769787319, 0.779812458, 0.789838153, 0.799863667, 0.809889264, 0.819915319, 0.829943264, 0.839970792, 0.849998222, 0.860025375, 0.870052292, 0.880078667, 0.89010475, 0.900130778, 0.910157333, 0.920183458, 0.930209181, 0.940234, 0.950260333, 0.960286625, 0.970312889, 0.98033725, 0.990363014, 1.000387319, 1.010411931, 1.020436778, 1.030462139, 1.040488486] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:24.416" endtime="20201112 12:29:24.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.404" endtime="20201112 12:29:24.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:24.428" endtime="20201112 12:29:24.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:24.436" endtime="20201112 12:29:24.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.432" endtime="20201112 12:29:24.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.423" endtime="20201112 12:29:24.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.720" endtime="20201112 12:29:24.462"></status>
</kw>
<msg timestamp="20201112 12:29:24.462" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:24.485" endtime="20201112 12:29:26.601"></status>
</kw>
<msg timestamp="20201112 12:29:26.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6151134, 'wakeups': [6161172, 6171172, 6181172, 6191172, 6201172, 6211...</msg>
<status status="PASS" starttime="20201112 12:29:24.481" endtime="20201112 12:29:26.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.610" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6151134, 'wakeups': [6161172, 6171172, 6181172, 6191172, 6201172, 6211...</msg>
<status status="PASS" starttime="20201112 12:29:26.605" endtime="20201112 12:29:26.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:26.612" endtime="20201112 12:29:26.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.474" endtime="20201112 12:29:26.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.467" endtime="20201112 12:29:26.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:26.625" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [6161172, 6171172, 6181172, 6191172, 6201172, 6211172, 6221172, 6231172, 6241172, 6251172, 6261172, 6271172, 6281172, 6291172, 6301172, 6311172, ...</msg>
<status status="PASS" starttime="20201112 12:29:26.621" endtime="20201112 12:29:26.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.635" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:26.633" endtime="20201112 12:29:26.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.640" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:26.638" endtime="20201112 12:29:26.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.627" endtime="20201112 12:29:26.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.652" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:29:26.650" endtime="20201112 12:29:26.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.656" level="INFO">VALUE: 6151134</msg>
<status status="PASS" starttime="20201112 12:29:26.654" endtime="20201112 12:29:26.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.643" endtime="20201112 12:29:26.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.669" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:26.667" endtime="20201112 12:29:26.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.674" level="INFO">VALUE: [6161172, 6171172, 6181172, 6191172, 6201172, 6211172, 6221172, 6231172, 6241172, 6251172, 6261172, 6271172, 6281172, 6291172, 6301172, 6311172, 6321172, 6331172, 6341172, 6351172, 6361172, 6371172, 6381172, 6391172, 6401172, 6411172, 6421172, 6431172, 6441172, 6451172, 6461172, 6471172, 6481172, 6491172, 6501172, 6511172, 6521172, 6531172, 6541172, 6551172, 6561172, 6571172, 6581172, 6591172, 6601172, 6611172, 6621172, 6631172, 6641172, 6651172, 6661172, 6671172, 6681172, 6691172, 6701172, 6711172, 6721172, 6731172, 6741172, 6751172, 6761172, 6771172, 6781172, 6791172, 6801172, 6811172, 6821172, 6831172, 6841172, 6851172, 6861172, 6871172, 6881172, 6891172, 6901172, 6911172, 6921172, 6931172, 6941172, 6951172, 6961172, 6971172, 6981172, 6991172, 7001172, 7011172, 7021172, 7031172, 7041172, 7051172, 7061172, 7071172, 7081172, 7091172, 7101172, 7111172, 7121172, 7131172, 7141172, 7151172]</msg>
<status status="PASS" starttime="20201112 12:29:26.671" endtime="20201112 12:29:26.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.660" endtime="20201112 12:29:26.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:26.698" endtime="20201112 12:29:27.042"></status>
</kw>
<msg timestamp="20201112 12:29:27.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039321042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049384569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:26.695" endtime="20201112 12:29:27.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039321042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049384569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:27.051" endtime="20201112 12:29:27.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:27.069" endtime="20201112 12:29:27.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.687" endtime="20201112 12:29:27.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.677" endtime="20201112 12:29:27.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:27.133" level="INFO">${RESULT} = {'time': [0.039321042, 0.049384569, 0.059409736, 0.069434847, 0.079458639, 0.08948325, 0.099506236, 0.109528306, 0.119550542, 0.129572472, 0.139594208, 0.149617153, 0.159641083, 0.169665542, 0.1796888...</msg>
<status status="PASS" starttime="20201112 12:29:27.077" endtime="20201112 12:29:27.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.143" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:29:27.141" endtime="20201112 12:29:27.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.148" level="INFO">VALUE: 0.039321042</msg>
<status status="PASS" starttime="20201112 12:29:27.146" endtime="20201112 12:29:27.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.135" endtime="20201112 12:29:27.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.161" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:27.159" endtime="20201112 12:29:27.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.166" level="INFO">VALUE: [0.049384569, 0.059409736, 0.069434847, 0.079458639, 0.08948325, 0.099506236, 0.109528306, 0.119550542, 0.129572472, 0.139594208, 0.149617153, 0.159641083, 0.169665542, 0.179688806, 0.189713486, 0.199738167, 0.209763292, 0.219787792, 0.229813569, 0.239838431, 0.249863722, 0.2598885, 0.269914681, 0.279941806, 0.289969028, 0.299995236, 0.310022111, 0.320047542, 0.330072806, 0.340097375, 0.350122681, 0.360147431, 0.370173111, 0.380198153, 0.390223597, 0.400249042, 0.410275597, 0.420300333, 0.430325569, 0.440350333, 0.450376514, 0.460401764, 0.470427097, 0.480452292, 0.490478722, 0.500503917, 0.510528083, 0.520553014, 0.530578556, 0.54060475, 0.550631097, 0.560655597, 0.570680514, 0.580704931, 0.590730153, 0.600754375, 0.610780042, 0.6208045, 0.630828792, 0.640852167, 0.650877306, 0.660901722, 0.670927389, 0.680953569, 0.690978528, 0.701003431, 0.711028792, 0.7210535, 0.731078736, 0.741103333, 0.7511285, 0.761153736, 0.771180833, 0.781208361, 0.791234222, 0.80125925, 0.811284514, 0.821309153, 0.831333764, 0.841358639, 0.8513835, 0.861409208, 0.871435639, 0.881460611, 0.891486736, 0.901512139, 0.911538153, 0.921564333, 0.931590653, 0.941617, 0.951644208, 0.961670889, 0.971698208, 0.981726028, 0.991753792, 1.001781111, 1.011809347, 1.021837292, 1.031864583, 1.041889389] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:27.163" endtime="20201112 12:29:27.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.151" endtime="20201112 12:29:27.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:27.175" endtime="20201112 12:29:27.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:27.183" endtime="20201112 12:29:27.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.179" endtime="20201112 12:29:27.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.170" endtime="20201112 12:29:27.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.464" endtime="20201112 12:29:27.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.963" endtime="20201112 12:29:27.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.961" endtime="20201112 12:29:27.209"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:27.215" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:27.237" endtime="20201112 12:29:29.353"></status>
</kw>
<msg timestamp="20201112 12:29:29.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8896388, 'wakeups': [8906458, 8916457, 8926457, 8936457, 8946457, 8956...</msg>
<status status="PASS" starttime="20201112 12:29:27.233" endtime="20201112 12:29:29.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.361" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8896388, 'wakeups': [8906458, 8916457, 8926457, 8936457, 8946457, 8956...</msg>
<status status="PASS" starttime="20201112 12:29:29.357" endtime="20201112 12:29:29.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.364" endtime="20201112 12:29:29.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.225" endtime="20201112 12:29:29.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.220" endtime="20201112 12:29:29.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:29.377" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [8906458, 8916457, 8926457, 8936457, 8946457, 8956457, 8966457, 8976457, 8986457, 8996457, 9006457, 9016457, 9026457, 9036457, 9046457, 9056457, ...</msg>
<status status="PASS" starttime="20201112 12:29:29.372" endtime="20201112 12:29:29.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.387" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:29.384" endtime="20201112 12:29:29.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.391" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:29.389" endtime="20201112 12:29:29.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.378" endtime="20201112 12:29:29.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.404" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:29.401" endtime="20201112 12:29:29.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.408" level="INFO">VALUE: 8896388</msg>
<status status="PASS" starttime="20201112 12:29:29.406" endtime="20201112 12:29:29.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.395" endtime="20201112 12:29:29.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.420" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:29.418" endtime="20201112 12:29:29.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.425" level="INFO">VALUE: [8906458, 8916457, 8926457, 8936457, 8946457, 8956457, 8966457, 8976457, 8986457, 8996457, 9006457, 9016457, 9026457, 9036457, 9046457, 9056457, 9066457, 9076457, 9086457, 9096457, 9106458, 9116457, 9126457, 9136457, 9146457, 9156457, 9166457, 9176457, 9186457, 9196457, 9206457, 9216457, 9226457, 9236457, 9246457, 9256457, 9266457, 9276457, 9286457, 9296457, 9306457, 9316457, 9326457, 9336457, 9346457, 9356457, 9366457, 9376457, 9386457, 9396457, 9406457, 9416457, 9426458, 9436457, 9446457, 9456457, 9466457, 9476457, 9486457, 9496457, 9506457, 9516457, 9526457, 9536457, 9546457, 9556457, 9566457, 9576457, 9586457, 9596457, 9606457, 9616457, 9626457, 9636457, 9646457, 9656457, 9666457, 9676457, 9686457, 9696457, 9706457, 9716457, 9726457, 9736457, 9746457, 9756457, 9766457, 9776457, 9786457, 9796457, 9806457, 9816457, 9826457, 9836457, 9846457, 9856457, 9866457, 9876457, 9886457, 9896457]</msg>
<status status="PASS" starttime="20201112 12:29:29.423" endtime="20201112 12:29:29.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.412" endtime="20201112 12:29:29.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.446" endtime="20201112 12:29:29.791"></status>
</kw>
<msg timestamp="20201112 12:29:29.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044727292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054822875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:29.443" endtime="20201112 12:29:29.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044727292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054822875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:29.799" endtime="20201112 12:29:29.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.816" endtime="20201112 12:29:29.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.436" endtime="20201112 12:29:29.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.431" endtime="20201112 12:29:29.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:29.881" level="INFO">${RESULT} = {'time': [0.044727292, 0.054822875, 0.064846028, 0.074869625, 0.084892403, 0.094916458, 0.104940167, 0.114964403, 0.124988458, 0.135013111, 0.145038458, 0.155064389, 0.165089778, 0.175114986, 0.185140...</msg>
<status status="PASS" starttime="20201112 12:29:29.826" endtime="20201112 12:29:29.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.892" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:29.889" endtime="20201112 12:29:29.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.896" level="INFO">VALUE: 0.044727292</msg>
<status status="PASS" starttime="20201112 12:29:29.894" endtime="20201112 12:29:29.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.883" endtime="20201112 12:29:29.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.909" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:29.907" endtime="20201112 12:29:29.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.914" level="INFO">VALUE: [0.054822875, 0.064846028, 0.074869625, 0.084892403, 0.094916458, 0.104940167, 0.114964403, 0.124988458, 0.135013111, 0.145038458, 0.155064389, 0.165089778, 0.175114986, 0.185140139, 0.195165681, 0.205191, 0.215216417, 0.225241875, 0.235267875, 0.245292819, 0.255318958, 0.265343722, 0.275369722, 0.285395847, 0.295421708, 0.305446819, 0.315473528, 0.325498681, 0.335525194, 0.345551278, 0.355577903, 0.365604083, 0.375630306, 0.385656417, 0.395683347, 0.405710139, 0.415737444, 0.425763472, 0.435789792, 0.445816292, 0.45584325, 0.465869139, 0.475894903, 0.485920375, 0.495946181, 0.505971819, 0.515997569, 0.526021806, 0.536046972, 0.546073528, 0.556098431, 0.56612225, 0.576148319, 0.586170931, 0.596195722, 0.606220903, 0.616245917, 0.626270139, 0.636294514, 0.646319972, 0.656344222, 0.666367569, 0.676391847, 0.686416361, 0.696440833, 0.706465597, 0.716490556, 0.726514347, 0.736539569, 0.746564792, 0.756590986, 0.766617, 0.776643347, 0.786669347, 0.796695667, 0.806720861, 0.816746792, 0.826772875, 0.836799111, 0.846825111, 0.856851083, 0.866876597, 0.876901889, 0.886928208, 0.896954819, 0.906980306, 0.917007583, 0.927033278, 0.937058167, 0.947082819, 0.957108389, 0.967134361, 0.977160208, 0.987185389, 0.997212014, 1.007236986, 1.017262347, 1.027286972, 1.037312444, 1.047338042] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:29.912" endtime="20201112 12:29:29.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.900" endtime="20201112 12:29:29.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.923" endtime="20201112 12:29:29.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:29.931" endtime="20201112 12:29:29.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.927" endtime="20201112 12:29:29.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.918" endtime="20201112 12:29:29.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.216" endtime="20201112 12:29:29.956"></status>
</kw>
<msg timestamp="20201112 12:29:29.957" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.980" endtime="20201112 12:29:32.107"></status>
</kw>
<msg timestamp="20201112 12:29:32.108" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11632557, 'wakeups': [11642627, 11652626, 11662626, 11672626, 11682626...</msg>
<status status="PASS" starttime="20201112 12:29:29.976" endtime="20201112 12:29:32.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11632557, 'wakeups': [11642627, 11652626, 11662626, 11672626, 11682626...</msg>
<status status="PASS" starttime="20201112 12:29:32.111" endtime="20201112 12:29:32.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:32.118" endtime="20201112 12:29:32.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.969" endtime="20201112 12:29:32.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.962" endtime="20201112 12:29:32.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:32.131" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [11642627, 11652626, 11662626, 11672626, 11682626, 11692626, 11702626, 11712626, 11722626, 11732626, 11742626, 11752626, 11762626, 11772626, 1178...</msg>
<status status="PASS" starttime="20201112 12:29:32.126" endtime="20201112 12:29:32.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.142" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:32.139" endtime="20201112 12:29:32.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.146" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:32.144" endtime="20201112 12:29:32.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.132" endtime="20201112 12:29:32.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.158" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:32.156" endtime="20201112 12:29:32.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.163" level="INFO">VALUE: 11632557</msg>
<status status="PASS" starttime="20201112 12:29:32.161" endtime="20201112 12:29:32.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.150" endtime="20201112 12:29:32.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.175" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:32.173" endtime="20201112 12:29:32.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.180" level="INFO">VALUE: [11642627, 11652626, 11662626, 11672626, 11682626, 11692626, 11702626, 11712626, 11722626, 11732626, 11742626, 11752626, 11762626, 11772626, 11782626, 11792626, 11802626, 11812626, 11822626, 11832626, 11842626, 11852626, 11862626, 11872626, 11882626, 11892626, 11902626, 11912626, 11922626, 11932626, 11942626, 11952626, 11962626, 11972626, 11982626, 11992626, 12002626, 12012626, 12022626, 12032626, 12042626, 12052626, 12062626, 12072626, 12082626, 12092626, 12102626, 12112626, 12122626, 12132626, 12142626, 12152626, 12162626, 12172626, 12182626, 12192626, 12202626, 12212626, 12222626, 12232626, 12242626, 12252626, 12262626, 12272626, 12282626, 12292626, 12302626, 12312626, 12322626, 12332626, 12342626, 12352626, 12362626, 12372626, 12382626, 12392626, 12402626, 12412626, 12422626, 12432626, 12442626, 12452626, 12462626, 12472626, 12482626, 12492626, 12502626, 12512626, 12522626, 12532626, 12542626, 12552626, 12562626, 12572626, 12582626, 12592626, 12602626, 12612626, 12622626, 12632626]</msg>
<status status="PASS" starttime="20201112 12:29:32.177" endtime="20201112 12:29:32.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.166" endtime="20201112 12:29:32.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:32.200" endtime="20201112 12:29:32.545"></status>
</kw>
<msg timestamp="20201112 12:29:32.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039394236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049490139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:32.196" endtime="20201112 12:29:32.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039394236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049490139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:32.554" endtime="20201112 12:29:32.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:32.571" endtime="20201112 12:29:32.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.189" endtime="20201112 12:29:32.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.184" endtime="20201112 12:29:32.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:32.635" level="INFO">${RESULT} = {'time': [0.039394236, 0.049490139, 0.059514792, 0.069540417, 0.079566639, 0.089593569, 0.099619583, 0.109645792, 0.119671806, 0.129699167, 0.139725208, 0.149751542, 0.159777806, 0.169804097, 0.179829...</msg>
<status status="PASS" starttime="20201112 12:29:32.579" endtime="20201112 12:29:32.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.645" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:32.643" endtime="20201112 12:29:32.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.650" level="INFO">VALUE: 0.039394236</msg>
<status status="PASS" starttime="20201112 12:29:32.648" endtime="20201112 12:29:32.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.637" endtime="20201112 12:29:32.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.663" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:32.661" endtime="20201112 12:29:32.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.669" level="INFO">VALUE: [0.049490139, 0.059514792, 0.069540417, 0.079566639, 0.089593569, 0.099619583, 0.109645792, 0.119671806, 0.129699167, 0.139725208, 0.149751542, 0.159777806, 0.169804097, 0.179829653, 0.18985625, 0.199883264, 0.209910028, 0.219935514, 0.229962014, 0.239987931, 0.250014264, 0.260040292, 0.270066403, 0.280092431, 0.290119958, 0.300146306, 0.310173958, 0.320200389, 0.330228931, 0.340257847, 0.350287264, 0.360316514, 0.370346181, 0.380375472, 0.390404597, 0.400433319, 0.410462361, 0.420491208, 0.430520694, 0.440550236, 0.450580694, 0.460610194, 0.470638375, 0.480668069, 0.490697056, 0.500724778, 0.510753875, 0.520782472, 0.530811069, 0.54083975, 0.550867236, 0.560893417, 0.570920278, 0.580946514, 0.590972403, 0.600999083, 0.611027042, 0.621053431, 0.6310805, 0.641105764, 0.651131278, 0.661157472, 0.671184208, 0.681209972, 0.691236306, 0.701263083, 0.711291194, 0.721317847, 0.731345167, 0.741372083, 0.751398181, 0.76142475, 0.771450653, 0.781476222, 0.791501681, 0.801527264, 0.811551333, 0.821575653, 0.831600222, 0.841624625, 0.851650222, 0.861674931, 0.871699444, 0.881725486, 0.891751153, 0.901777056, 0.911802389, 0.921829056, 0.931855431, 0.941882069, 0.951907736, 0.961932694, 0.971958847, 0.981984389, 0.992010764, 1.00203675, 1.012062264, 1.022086847, 1.032112153, 1.042138069] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:32.666" endtime="20201112 12:29:32.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.653" endtime="20201112 12:29:32.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:32.678" endtime="20201112 12:29:32.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:32.686" endtime="20201112 12:29:32.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.682" endtime="20201112 12:29:32.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.673" endtime="20201112 12:29:32.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.958" endtime="20201112 12:29:32.711"></status>
</kw>
<msg timestamp="20201112 12:29:32.712" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:32.733" endtime="20201112 12:29:34.859"></status>
</kw>
<msg timestamp="20201112 12:29:34.861" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14378460, 'wakeups': [14388530, 14398529, 14408529, 14418529, 14428529...</msg>
<status status="PASS" starttime="20201112 12:29:32.729" endtime="20201112 12:29:34.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.868" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14378460, 'wakeups': [14388530, 14398529, 14408529, 14418529, 14428529...</msg>
<status status="PASS" starttime="20201112 12:29:34.863" endtime="20201112 12:29:34.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:34.870" endtime="20201112 12:29:34.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.722" endtime="20201112 12:29:34.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.717" endtime="20201112 12:29:34.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:34.883" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [14388530, 14398529, 14408529, 14418529, 14428529, 14438529, 14448529, 14458529, 14468529, 14478529, 14488529, 14498529, 14508529, 14518529, 1452...</msg>
<status status="PASS" starttime="20201112 12:29:34.878" endtime="20201112 12:29:34.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.893" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:34.891" endtime="20201112 12:29:34.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.898" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:34.895" endtime="20201112 12:29:34.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.885" endtime="20201112 12:29:34.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.910" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:34.908" endtime="20201112 12:29:34.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.914" level="INFO">VALUE: 14378460</msg>
<status status="PASS" starttime="20201112 12:29:34.912" endtime="20201112 12:29:34.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.901" endtime="20201112 12:29:34.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.926" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:34.924" endtime="20201112 12:29:34.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.932" level="INFO">VALUE: [14388530, 14398529, 14408529, 14418529, 14428529, 14438529, 14448529, 14458529, 14468529, 14478529, 14488529, 14498529, 14508529, 14518529, 14528529, 14538529, 14548529, 14558529, 14568529, 14578529, 14588529, 14598529, 14608529, 14618529, 14628529, 14638529, 14648529, 14658529, 14668529, 14678529, 14688529, 14698529, 14708529, 14718529, 14728529, 14738529, 14748529, 14758529, 14768529, 14778530, 14788529, 14798529, 14808529, 14818529, 14828529, 14838529, 14848529, 14858529, 14868529, 14878529, 14888529, 14898529, 14908529, 14918529, 14928529, 14938529, 14948529, 14958529, 14968529, 14978529, 14988529, 14998529, 15008529, 15018529, 15028529, 15038529, 15048529, 15058529, 15068529, 15078529, 15088529, 15098529, 15108529, 15118529, 15128529, 15138529, 15148529, 15158529, 15168529, 15178529, 15188529, 15198529, 15208529, 15218529, 15228529, 15238529, 15248529, 15258529, 15268529, 15278529, 15288529, 15298529, 15308529, 15318529, 15328529, 15338529, 15348529, 15358529, 15368529, 15378529]</msg>
<status status="PASS" starttime="20201112 12:29:34.929" endtime="20201112 12:29:34.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.918" endtime="20201112 12:29:34.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:34.953" endtime="20201112 12:29:35.298"></status>
</kw>
<msg timestamp="20201112 12:29:35.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037597431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047694722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:34.950" endtime="20201112 12:29:35.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037597431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047694722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:35.307" endtime="20201112 12:29:35.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:35.325" endtime="20201112 12:29:35.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.943" endtime="20201112 12:29:35.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.938" endtime="20201112 12:29:35.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:35.388" level="INFO">${RESULT} = {'time': [0.037597431, 0.047694722, 0.057719431, 0.067745264, 0.077771847, 0.08779925, 0.0978265, 0.107854653, 0.117883319, 0.127911278, 0.137938583, 0.147966194, 0.157993167, 0.168021764, 0.178048764...</msg>
<status status="PASS" starttime="20201112 12:29:35.333" endtime="20201112 12:29:35.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.399" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:35.396" endtime="20201112 12:29:35.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.403" level="INFO">VALUE: 0.037597431</msg>
<status status="PASS" starttime="20201112 12:29:35.401" endtime="20201112 12:29:35.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.390" endtime="20201112 12:29:35.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.417" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:35.414" endtime="20201112 12:29:35.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.421" level="INFO">VALUE: [0.047694722, 0.057719431, 0.067745264, 0.077771847, 0.08779925, 0.0978265, 0.107854653, 0.117883319, 0.127911278, 0.137938583, 0.147966194, 0.157993167, 0.168021764, 0.178048764, 0.188075778, 0.198101667, 0.208128958, 0.218155514, 0.228182569, 0.238208153, 0.248234931, 0.258261583, 0.268287875, 0.278314944, 0.288343875, 0.2983715, 0.308399417, 0.318426847, 0.328453403, 0.338479611, 0.348507875, 0.358536167, 0.368563639, 0.378590833, 0.388619333, 0.398646681, 0.408674583, 0.418700194, 0.428725847, 0.438752653, 0.448780583, 0.458809528, 0.468838042, 0.478866153, 0.488894556, 0.498921292, 0.508949292, 0.518976347, 0.529002514, 0.539029319, 0.549056069, 0.559082528, 0.569110056, 0.579136167, 0.589163014, 0.599188917, 0.609215208, 0.619240986, 0.629267903, 0.639296472, 0.649326208, 0.659355806, 0.669386333, 0.679415819, 0.689445042, 0.699473125, 0.709499083, 0.719524819, 0.729553764, 0.739581917, 0.749610056, 0.759637597, 0.769664167, 0.779690444, 0.789718972, 0.799748222, 0.809777861, 0.819806444, 0.829836, 0.839864431, 0.849894319, 0.859921431, 0.869949069, 0.879976431, 0.890003542, 0.900030736, 0.910059375, 0.920089264, 0.930118472, 0.940145528, 0.950172569, 0.960199708, 0.970226986, 0.980254417, 0.990282556, 1.000310667, 1.010339083, 1.020366958, 1.030394111, 1.040422417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:35.419" endtime="20201112 12:29:35.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.407" endtime="20201112 12:29:35.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:35.430" endtime="20201112 12:29:35.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:35.438" endtime="20201112 12:29:35.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.434" endtime="20201112 12:29:35.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.425" endtime="20201112 12:29:35.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.713" endtime="20201112 12:29:35.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.212" endtime="20201112 12:29:35.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.210" endtime="20201112 12:29:35.466"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:35.471" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:35.494" endtime="20201112 12:29:37.621"></status>
</kw>
<msg timestamp="20201112 12:29:37.623" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17132441, 'wakeups': [17142543, 17152542, 17162542, 17172542, 17182542...</msg>
<status status="PASS" starttime="20201112 12:29:35.490" endtime="20201112 12:29:37.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.630" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17132441, 'wakeups': [17142543, 17152542, 17162542, 17172542, 17182542...</msg>
<status status="PASS" starttime="20201112 12:29:37.625" endtime="20201112 12:29:37.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:37.632" endtime="20201112 12:29:37.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.483" endtime="20201112 12:29:37.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.476" endtime="20201112 12:29:37.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:37.645" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [17142543, 17152542, 17162542, 17172542, 17182542, 17192542, 17202542, 17212542, 17222542, 17232542, 17242542, 17252542, 17262542, 17272542, 1728...</msg>
<status status="PASS" starttime="20201112 12:29:37.640" endtime="20201112 12:29:37.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.655" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:37.653" endtime="20201112 12:29:37.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.659" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:37.657" endtime="20201112 12:29:37.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.647" endtime="20201112 12:29:37.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.672" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:37.669" endtime="20201112 12:29:37.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.676" level="INFO">VALUE: 17132441</msg>
<status status="PASS" starttime="20201112 12:29:37.674" endtime="20201112 12:29:37.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.663" endtime="20201112 12:29:37.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.688" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:37.686" endtime="20201112 12:29:37.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.693" level="INFO">VALUE: [17142543, 17152542, 17162542, 17172542, 17182542, 17192542, 17202542, 17212542, 17222542, 17232542, 17242542, 17252542, 17262542, 17272542, 17282542, 17292542, 17302542, 17312542, 17322542, 17332542, 17342542, 17352542, 17362542, 17372542, 17382542, 17392542, 17402542, 17412542, 17422542, 17432542, 17442542, 17452542, 17462542, 17472542, 17482542, 17492542, 17502542, 17512542, 17522542, 17532542, 17542542, 17552542, 17562542, 17572542, 17582542, 17592542, 17602542, 17612542, 17622542, 17632542, 17642542, 17652542, 17662542, 17672542, 17682542, 17692542, 17702542, 17712542, 17722542, 17732542, 17742542, 17752542, 17762542, 17772542, 17782542, 17792542, 17802542, 17812542, 17822542, 17832542, 17842542, 17852542, 17862542, 17872542, 17882542, 17892542, 17902542, 17912542, 17922542, 17932542, 17942542, 17952542, 17962542, 17972542, 17982542, 17992542, 18002542, 18012542, 18022542, 18032542, 18042542, 18052542, 18062542, 18072542, 18082542, 18092542, 18102542, 18112542, 18122542, 18132542]</msg>
<status status="PASS" starttime="20201112 12:29:37.691" endtime="20201112 12:29:37.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.680" endtime="20201112 12:29:37.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:37.717" endtime="20201112 12:29:38.063"></status>
</kw>
<msg timestamp="20201112 12:29:38.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046066111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056195333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:37.709" endtime="20201112 12:29:38.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046066111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056195333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:38.071" endtime="20201112 12:29:38.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:38.088" endtime="20201112 12:29:38.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.702" endtime="20201112 12:29:38.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.697" endtime="20201112 12:29:38.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:38.152" level="INFO">${RESULT} = {'time': [0.046066111, 0.056195333, 0.06622175, 0.076251694, 0.086278958, 0.096306931, 0.106334014, 0.116361875, 0.126389139, 0.136416694, 0.146444667, 0.156472861, 0.166501264, 0.176529389, 0.1865563...</msg>
<status status="PASS" starttime="20201112 12:29:38.097" endtime="20201112 12:29:38.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.163" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:38.161" endtime="20201112 12:29:38.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.167" level="INFO">VALUE: 0.046066111</msg>
<status status="PASS" starttime="20201112 12:29:38.165" endtime="20201112 12:29:38.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.154" endtime="20201112 12:29:38.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.181" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:38.178" endtime="20201112 12:29:38.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.185" level="INFO">VALUE: [0.056195333, 0.06622175, 0.076251694, 0.086278958, 0.096306931, 0.106334014, 0.116361875, 0.126389139, 0.136416694, 0.146444667, 0.156472861, 0.166501264, 0.176529389, 0.186556333, 0.196583792, 0.206611208, 0.216638611, 0.226665722, 0.236692875, 0.246719917, 0.256746542, 0.266771194, 0.276797806, 0.286824431, 0.296853472, 0.306880347, 0.316907722, 0.326935625, 0.336963431, 0.3469905, 0.357018222, 0.367044792, 0.377071847, 0.38709775, 0.397123764, 0.407149472, 0.417175639, 0.427202528, 0.437229625, 0.4472565, 0.457283486, 0.467310764, 0.477337361, 0.48736475, 0.497392403, 0.5074195, 0.517447417, 0.527475208, 0.537502486, 0.547529458, 0.557555903, 0.567582139, 0.577607889, 0.587633792, 0.597661264, 0.607688694, 0.617716181, 0.627742653, 0.637769444, 0.64779475, 0.65782225, 0.667847889, 0.677874556, 0.687902236, 0.697929181, 0.707956111, 0.717983764, 0.728011069, 0.738038375, 0.748065528, 0.758092472, 0.768118181, 0.778144403, 0.788170167, 0.798195528, 0.808220722, 0.818246236, 0.828271625, 0.838297556, 0.848324889, 0.858353222, 0.868381708, 0.878409319, 0.888436236, 0.898465167, 0.908492306, 0.918520431, 0.928548014, 0.938575403, 0.948601681, 0.958629458, 0.968656806, 0.978683778, 0.988711, 0.998738319, 1.008764833, 1.018791028, 1.028816819, 1.038843111, 1.048869597] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:38.183" endtime="20201112 12:29:38.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.171" endtime="20201112 12:29:38.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:38.194" endtime="20201112 12:29:38.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:38.203" endtime="20201112 12:29:38.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.198" endtime="20201112 12:29:38.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.190" endtime="20201112 12:29:38.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.472" endtime="20201112 12:29:38.228"></status>
</kw>
<msg timestamp="20201112 12:29:38.229" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:38.249" endtime="20201112 12:29:40.376"></status>
</kw>
<msg timestamp="20201112 12:29:40.378" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19881166, 'wakeups': [19891268, 19901267, 19911268, 19921267, 19931267...</msg>
<status status="PASS" starttime="20201112 12:29:38.246" endtime="20201112 12:29:40.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19881166, 'wakeups': [19891268, 19901267, 19911268, 19921267, 19931267...</msg>
<status status="PASS" starttime="20201112 12:29:40.380" endtime="20201112 12:29:40.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:40.388" endtime="20201112 12:29:40.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.239" endtime="20201112 12:29:40.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.234" endtime="20201112 12:29:40.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:40.401" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [19891268, 19901267, 19911268, 19921267, 19931267, 19941267, 19951267, 19961267, 19971267, 19981267, 19991267, 20001267, 20011267, 20021267, 2003...</msg>
<status status="PASS" starttime="20201112 12:29:40.396" endtime="20201112 12:29:40.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.411" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:40.409" endtime="20201112 12:29:40.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.415" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:40.413" endtime="20201112 12:29:40.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.403" endtime="20201112 12:29:40.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.428" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:40.425" endtime="20201112 12:29:40.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.432" level="INFO">VALUE: 19881166</msg>
<status status="PASS" starttime="20201112 12:29:40.430" endtime="20201112 12:29:40.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.419" endtime="20201112 12:29:40.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.445" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:40.443" endtime="20201112 12:29:40.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.453" level="INFO">VALUE: [19891268, 19901267, 19911268, 19921267, 19931267, 19941267, 19951267, 19961267, 19971267, 19981267, 19991267, 20001267, 20011267, 20021267, 20031267, 20041267, 20051267, 20061267, 20071267, 20081267, 20091267, 20101267, 20111267, 20121267, 20131267, 20141267, 20151267, 20161267, 20171267, 20181267, 20191267, 20201267, 20211267, 20221267, 20231267, 20241267, 20251267, 20261267, 20271267, 20281267, 20291267, 20301267, 20311267, 20321267, 20331267, 20341267, 20351267, 20361267, 20371267, 20381267, 20391267, 20401267, 20411267, 20421267, 20431267, 20441267, 20451267, 20461267, 20471267, 20481267, 20491267, 20501267, 20511267, 20521267, 20531267, 20541267, 20551267, 20561267, 20571267, 20581267, 20591267, 20601267, 20611267, 20621267, 20631267, 20641267, 20651267, 20661267, 20671267, 20681267, 20691267, 20701267, 20711267, 20721267, 20731267, 20741267, 20751267, 20761267, 20771267, 20781267, 20791267, 20801267, 20811267, 20821267, 20831267, 20841267, 20851267, 20861267, 20871267, 20881267]</msg>
<status status="PASS" starttime="20201112 12:29:40.448" endtime="20201112 12:29:40.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.436" endtime="20201112 12:29:40.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:40.472" endtime="20201112 12:29:40.816"></status>
</kw>
<msg timestamp="20201112 12:29:40.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037609486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047736583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:40.469" endtime="20201112 12:29:40.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037609486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047736583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:40.825" endtime="20201112 12:29:40.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:40.842" endtime="20201112 12:29:40.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.462" endtime="20201112 12:29:40.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.457" endtime="20201112 12:29:40.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:40.905" level="INFO">${RESULT} = {'time': [0.037609486, 0.047736583, 0.057760403, 0.067786958, 0.077811361, 0.087837444, 0.097863056, 0.107888514, 0.117914014, 0.127939653, 0.137965181, 0.147989653, 0.158014708, 0.168040375, 0.178066...</msg>
<status status="PASS" starttime="20201112 12:29:40.851" endtime="20201112 12:29:40.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.916" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:40.914" endtime="20201112 12:29:40.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.921" level="INFO">VALUE: 0.037609486</msg>
<status status="PASS" starttime="20201112 12:29:40.918" endtime="20201112 12:29:40.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.907" endtime="20201112 12:29:40.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.934" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:40.932" endtime="20201112 12:29:40.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:40.939" level="INFO">VALUE: [0.047736583, 0.057760403, 0.067786958, 0.077811361, 0.087837444, 0.097863056, 0.107888514, 0.117914014, 0.127939653, 0.137965181, 0.147989653, 0.158014708, 0.168040375, 0.178066667, 0.188093097, 0.198118431, 0.208143972, 0.218169764, 0.228195972, 0.238219986, 0.248245083, 0.258269667, 0.268293931, 0.278318431, 0.288342625, 0.298367403, 0.308392569, 0.318417292, 0.328442292, 0.338467833, 0.348493694, 0.358519389, 0.368544347, 0.378569444, 0.388594681, 0.398619889, 0.408645014, 0.418669569, 0.428694208, 0.438718875, 0.44874425, 0.458769444, 0.468795181, 0.478819639, 0.488845486, 0.498871431, 0.508897917, 0.518922389, 0.528947625, 0.538972111, 0.548997208, 0.559022, 0.569048542, 0.579073597, 0.589099347, 0.599125167, 0.609151292, 0.619176361, 0.629201667, 0.639227014, 0.649251778, 0.659276153, 0.669301528, 0.679326181, 0.689351139, 0.699374222, 0.709398667, 0.719423889, 0.729449125, 0.739473444, 0.749496944, 0.759521208, 0.769546431, 0.779571097, 0.789596986, 0.799623056, 0.809649139, 0.819675278, 0.829701333, 0.839726972, 0.849752861, 0.859778514, 0.869803625, 0.879828958, 0.889854028, 0.899877431, 0.909902847, 0.919928625, 0.929954528, 0.939980264, 0.950006347, 0.960032361, 0.970059486, 0.9800855, 0.990111722, 1.000137583, 1.010164181, 1.020190347, 1.030216833, 1.040242931] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:40.936" endtime="20201112 12:29:40.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.924" endtime="20201112 12:29:40.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:40.947" endtime="20201112 12:29:40.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:40.956" endtime="20201112 12:29:40.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.951" endtime="20201112 12:29:40.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.943" endtime="20201112 12:29:40.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.230" endtime="20201112 12:29:40.984"></status>
</kw>
<msg timestamp="20201112 12:29:40.984" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:41.005" endtime="20201112 12:29:43.132"></status>
</kw>
<msg timestamp="20201112 12:29:43.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22630224, 'wakeups': [22640326, 22650325, 22660325, 22670325, 22680325...</msg>
<status status="PASS" starttime="20201112 12:29:41.002" endtime="20201112 12:29:43.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.141" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22630224, 'wakeups': [22640326, 22650325, 22660325, 22670325, 22680325...</msg>
<status status="PASS" starttime="20201112 12:29:43.136" endtime="20201112 12:29:43.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:43.143" endtime="20201112 12:29:43.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.994" endtime="20201112 12:29:43.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.989" endtime="20201112 12:29:43.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:43.156" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [22640326, 22650325, 22660325, 22670325, 22680325, 22690325, 22700325, 22710325, 22720325, 22730325, 22740325, 22750325, 22760325, 22770325, 2278...</msg>
<status status="PASS" starttime="20201112 12:29:43.151" endtime="20201112 12:29:43.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.166" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:43.164" endtime="20201112 12:29:43.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.170" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:43.168" endtime="20201112 12:29:43.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.158" endtime="20201112 12:29:43.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.188" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:43.186" endtime="20201112 12:29:43.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.193" level="INFO">VALUE: 22630224</msg>
<status status="PASS" starttime="20201112 12:29:43.190" endtime="20201112 12:29:43.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.179" endtime="20201112 12:29:43.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.205" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:43.203" endtime="20201112 12:29:43.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.210" level="INFO">VALUE: [22640326, 22650325, 22660325, 22670325, 22680325, 22690325, 22700325, 22710325, 22720325, 22730325, 22740325, 22750325, 22760325, 22770325, 22780325, 22790325, 22800325, 22810325, 22820325, 22830325, 22840325, 22850325, 22860325, 22870325, 22880325, 22890325, 22900325, 22910325, 22920325, 22930325, 22940325, 22950325, 22960325, 22970325, 22980325, 22990325, 23000325, 23010325, 23020325, 23030325, 23040325, 23050325, 23060325, 23070325, 23080325, 23090325, 23100325, 23110325, 23120325, 23130325, 23140325, 23150325, 23160325, 23170325, 23180325, 23190325, 23200325, 23210325, 23220325, 23230325, 23240325, 23250325, 23260325, 23270325, 23280325, 23290325, 23300325, 23310325, 23320325, 23330325, 23340325, 23350325, 23360325, 23370325, 23380325, 23390325, 23400325, 23410325, 23420325, 23430325, 23440325, 23450325, 23460325, 23470325, 23480325, 23490325, 23500325, 23510325, 23520325, 23530325, 23540325, 23550325, 23560325, 23570325, 23580325, 23590325, 23600325, 23610325, 23620325, 23630325]</msg>
<status status="PASS" starttime="20201112 12:29:43.207" endtime="20201112 12:29:43.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.196" endtime="20201112 12:29:43.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:43.229" endtime="20201112 12:29:43.574"></status>
</kw>
<msg timestamp="20201112 12:29:43.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038088556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048218292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:43.225" endtime="20201112 12:29:43.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038088556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048218292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:43.582" endtime="20201112 12:29:43.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:43.600" endtime="20201112 12:29:43.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.218" endtime="20201112 12:29:43.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.214" endtime="20201112 12:29:43.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:43.663" level="INFO">${RESULT} = {'time': [0.038088556, 0.048218292, 0.058244778, 0.068272417, 0.078299528, 0.088326208, 0.098352319, 0.108380056, 0.118406806, 0.128434903, 0.138462389, 0.148490278, 0.158518111, 0.168545417, 0.178572...</msg>
<status status="PASS" starttime="20201112 12:29:43.610" endtime="20201112 12:29:43.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.674" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:43.672" endtime="20201112 12:29:43.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.679" level="INFO">VALUE: 0.038088556</msg>
<status status="PASS" starttime="20201112 12:29:43.676" endtime="20201112 12:29:43.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.665" endtime="20201112 12:29:43.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.692" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:43.690" endtime="20201112 12:29:43.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:43.696" level="INFO">VALUE: [0.048218292, 0.058244778, 0.068272417, 0.078299528, 0.088326208, 0.098352319, 0.108380056, 0.118406806, 0.128434903, 0.138462389, 0.148490278, 0.158518111, 0.168545417, 0.178572097, 0.188599458, 0.198626569, 0.20865225, 0.218677542, 0.228702903, 0.238728681, 0.248755042, 0.258780806, 0.268806958, 0.278832111, 0.288858833, 0.298884847, 0.308911208, 0.318937444, 0.328964431, 0.338991069, 0.349017514, 0.359043639, 0.369070625, 0.379097264, 0.389125389, 0.399152167, 0.409179458, 0.419204222, 0.429229764, 0.439255056, 0.449280931, 0.459306639, 0.469332847, 0.479360167, 0.489387736, 0.499414792, 0.509441917, 0.519469417, 0.529495944, 0.539522264, 0.549548139, 0.559574319, 0.569600375, 0.579626389, 0.589653208, 0.599679972, 0.609706819, 0.619732833, 0.629758583, 0.639784833, 0.649812889, 0.659839444, 0.669867236, 0.679893972, 0.689921278, 0.699948569, 0.709976153, 0.720002625, 0.730029861, 0.740057042, 0.750084625, 0.760111486, 0.770140319, 0.780167903, 0.790195694, 0.800222389, 0.810249806, 0.8202755, 0.830302569, 0.840328778, 0.850356125, 0.860382, 0.870409056, 0.880435903, 0.89046225, 0.900488694, 0.910515361, 0.920542681, 0.9305695, 0.940596236, 0.950623444, 0.960649931, 0.970676625, 0.980702125, 0.990728403, 1.00075525, 1.010782361, 1.020809111, 1.030835264, 1.040861361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:43.694" endtime="20201112 12:29:43.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.682" endtime="20201112 12:29:43.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:43.706" endtime="20201112 12:29:43.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:43.714" endtime="20201112 12:29:43.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.710" endtime="20201112 12:29:43.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.702" endtime="20201112 12:29:43.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:40.985" endtime="20201112 12:29:43.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.468" endtime="20201112 12:29:43.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.466" endtime="20201112 12:29:43.741"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:43.746" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:43.767" endtime="20201112 12:29:45.895"></status>
</kw>
<msg timestamp="20201112 12:29:45.896" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25385449, 'wakeups': [25395589, 25405589, 25415589, 25425589, 25435589...</msg>
<status status="PASS" starttime="20201112 12:29:43.764" endtime="20201112 12:29:45.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:45.903" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25385449, 'wakeups': [25395589, 25405589, 25415589, 25425589, 25435589...</msg>
<status status="PASS" starttime="20201112 12:29:45.899" endtime="20201112 12:29:45.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:45.905" endtime="20201112 12:29:45.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.757" endtime="20201112 12:29:45.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.752" endtime="20201112 12:29:45.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:45.918" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [25395589, 25405589, 25415589, 25425589, 25435589, 25445589, 25455589, 25465589, 25475589, 25485589, 25495589, 25505589, 25515589, 25525589, 2553...</msg>
<status status="PASS" starttime="20201112 12:29:45.914" endtime="20201112 12:29:45.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:45.929" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:45.926" endtime="20201112 12:29:45.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:45.933" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:45.931" endtime="20201112 12:29:45.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:45.920" endtime="20201112 12:29:45.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:45.945" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:45.943" endtime="20201112 12:29:45.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:45.950" level="INFO">VALUE: 25385449</msg>
<status status="PASS" starttime="20201112 12:29:45.948" endtime="20201112 12:29:45.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:45.937" endtime="20201112 12:29:45.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:45.962" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:45.960" endtime="20201112 12:29:45.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:45.967" level="INFO">VALUE: [25395589, 25405589, 25415589, 25425589, 25435589, 25445589, 25455589, 25465589, 25475589, 25485589, 25495589, 25505589, 25515589, 25525589, 25535589, 25545589, 25555589, 25565589, 25575589, 25585589, 25595589, 25605589, 25615589, 25625589, 25635589, 25645589, 25655589, 25665589, 25675589, 25685589, 25695589, 25705589, 25715589, 25725589, 25735589, 25745589, 25755589, 25765589, 25775589, 25785589, 25795589, 25805589, 25815589, 25825589, 25835589, 25845589, 25855589, 25865589, 25875589, 25885589, 25895589, 25905589, 25915589, 25925589, 25935589, 25945589, 25955589, 25965589, 25975589, 25985589, 25995589, 26005589, 26015589, 26025589, 26035589, 26045589, 26055589, 26065589, 26075589, 26085589, 26095589, 26105589, 26115589, 26125589, 26135589, 26145589, 26155589, 26165589, 26175589, 26185589, 26195589, 26205589, 26215589, 26225589, 26235589, 26245589, 26255589, 26265589, 26275589, 26285589, 26295589, 26305589, 26315589, 26325589, 26335589, 26345589, 26355589, 26365589, 26375589, 26385589]</msg>
<status status="PASS" starttime="20201112 12:29:45.964" endtime="20201112 12:29:45.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:45.953" endtime="20201112 12:29:45.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:45.986" endtime="20201112 12:29:46.332"></status>
</kw>
<msg timestamp="20201112 12:29:46.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043977458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054145389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:45.983" endtime="20201112 12:29:46.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043977458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054145389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:46.341" endtime="20201112 12:29:46.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:46.358" endtime="20201112 12:29:46.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:45.976" endtime="20201112 12:29:46.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:45.971" endtime="20201112 12:29:46.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:46.422" level="INFO">${RESULT} = {'time': [0.043977458, 0.054145389, 0.064171611, 0.074198917, 0.084226181, 0.094253472, 0.104281806, 0.114309778, 0.124335514, 0.134361639, 0.144387861, 0.154413736, 0.164440097, 0.174466889, 0.184493...</msg>
<status status="PASS" starttime="20201112 12:29:46.367" endtime="20201112 12:29:46.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.432" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:46.430" endtime="20201112 12:29:46.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.437" level="INFO">VALUE: 0.043977458</msg>
<status status="PASS" starttime="20201112 12:29:46.435" endtime="20201112 12:29:46.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.424" endtime="20201112 12:29:46.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.450" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:46.448" endtime="20201112 12:29:46.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.455" level="INFO">VALUE: [0.054145389, 0.064171611, 0.074198917, 0.084226181, 0.094253472, 0.104281806, 0.114309778, 0.124335514, 0.134361639, 0.144387861, 0.154413736, 0.164440097, 0.174466889, 0.184493264, 0.194519333, 0.204545042, 0.214570194, 0.224595403, 0.234620667, 0.244645264, 0.254670486, 0.264696833, 0.274723708, 0.284750028, 0.294776486, 0.304804292, 0.314832722, 0.324861639, 0.334890069, 0.344917486, 0.354945458, 0.364971653, 0.374997389, 0.385022236, 0.395048625, 0.405074778, 0.415099944, 0.425126486, 0.435155014, 0.445182542, 0.455209542, 0.465236403, 0.475263194, 0.485290556, 0.495318236, 0.505345333, 0.515371486, 0.525395903, 0.535421833, 0.545447056, 0.555473319, 0.565499847, 0.575526722, 0.585552792, 0.595578625, 0.60560475, 0.615632833, 0.625659639, 0.635686694, 0.645712181, 0.655738486, 0.665765194, 0.675791333, 0.685817764, 0.69584425, 0.705870514, 0.715897236, 0.725924292, 0.735951375, 0.745979306, 0.756007111, 0.766033708, 0.776060333, 0.786087069, 0.796115306, 0.806142319, 0.816169833, 0.826197889, 0.836225819, 0.846254111, 0.856282139, 0.866310194, 0.876339639, 0.886367972, 0.896396458, 0.906424083, 0.916451111, 0.926478181, 0.93650475, 0.946530986, 0.956556597, 0.966581639, 0.976606889, 0.986632875, 0.996659222, 1.006685639, 1.016712194, 1.026739431, 1.036766444, 1.046793236] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:46.452" endtime="20201112 12:29:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.440" endtime="20201112 12:29:46.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:46.464" endtime="20201112 12:29:46.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:46.472" endtime="20201112 12:29:46.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.468" endtime="20201112 12:29:46.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.459" endtime="20201112 12:29:46.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.748" endtime="20201112 12:29:46.497"></status>
</kw>
<msg timestamp="20201112 12:29:46.498" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:46.520" endtime="20201112 12:29:48.647"></status>
</kw>
<msg timestamp="20201112 12:29:48.649" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28130574, 'wakeups': [28140714, 28150714, 28160714, 28170714, 28180714...</msg>
<status status="PASS" starttime="20201112 12:29:46.515" endtime="20201112 12:29:48.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:48.655" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28130574, 'wakeups': [28140714, 28150714, 28160714, 28170714, 28180714...</msg>
<status status="PASS" starttime="20201112 12:29:48.651" endtime="20201112 12:29:48.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:48.658" endtime="20201112 12:29:48.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.508" endtime="20201112 12:29:48.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.503" endtime="20201112 12:29:48.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:48.671" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [28140714, 28150714, 28160714, 28170714, 28180714, 28190714, 28200714, 28210714, 28220714, 28230714, 28240714, 28250714, 28260714, 28270714, 2828...</msg>
<status status="PASS" starttime="20201112 12:29:48.666" endtime="20201112 12:29:48.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:48.681" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:48.678" endtime="20201112 12:29:48.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:48.686" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:48.683" endtime="20201112 12:29:48.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:48.672" endtime="20201112 12:29:48.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:48.699" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:48.696" endtime="20201112 12:29:48.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:48.703" level="INFO">VALUE: 28130574</msg>
<status status="PASS" starttime="20201112 12:29:48.701" endtime="20201112 12:29:48.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:48.690" endtime="20201112 12:29:48.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:48.716" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:48.714" endtime="20201112 12:29:48.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:48.721" level="INFO">VALUE: [28140714, 28150714, 28160714, 28170714, 28180714, 28190714, 28200714, 28210714, 28220714, 28230714, 28240714, 28250714, 28260714, 28270714, 28280714, 28290714, 28300714, 28310714, 28320714, 28330714, 28340714, 28350714, 28360714, 28370714, 28380714, 28390714, 28400714, 28410714, 28420714, 28430714, 28440714, 28450714, 28460714, 28470714, 28480714, 28490714, 28500714, 28510714, 28520714, 28530714, 28540714, 28550714, 28560714, 28570714, 28580714, 28590714, 28600714, 28610714, 28620714, 28630714, 28640714, 28650714, 28660714, 28670714, 28680714, 28690714, 28700714, 28710714, 28720714, 28730714, 28740714, 28750714, 28760714, 28770714, 28780714, 28790714, 28800714, 28810714, 28820714, 28830715, 28840714, 28850714, 28860714, 28870714, 28880714, 28890714, 28900714, 28910714, 28920714, 28930714, 28940714, 28950714, 28960714, 28970714, 28980714, 28990714, 29000714, 29010714, 29020714, 29030714, 29040714, 29050714, 29060714, 29070714, 29080714, 29090714, 29100714, 29110714, 29120714, 29130714]</msg>
<status status="PASS" starttime="20201112 12:29:48.719" endtime="20201112 12:29:48.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:48.707" endtime="20201112 12:29:48.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:48.744" endtime="20201112 12:29:49.087"></status>
</kw>
<msg timestamp="20201112 12:29:49.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038504, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048672361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:29:48.740" endtime="20201112 12:29:49.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038504, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048672361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:29:49.095" endtime="20201112 12:29:49.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:49.112" endtime="20201112 12:29:49.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:48.733" endtime="20201112 12:29:49.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:48.728" endtime="20201112 12:29:49.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:49.176" level="INFO">${RESULT} = {'time': [0.038504, 0.048672361, 0.058700264, 0.068728, 0.078755097, 0.088782583, 0.098810125, 0.108837528, 0.118864792, 0.128891069, 0.138917167, 0.148943889, 0.158969306, 0.168995319, 0.179021681, 0...</msg>
<status status="PASS" starttime="20201112 12:29:49.122" endtime="20201112 12:29:49.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.186" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:49.184" endtime="20201112 12:29:49.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.191" level="INFO">VALUE: 0.038504</msg>
<status status="PASS" starttime="20201112 12:29:49.189" endtime="20201112 12:29:49.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.178" endtime="20201112 12:29:49.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.204" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:49.202" endtime="20201112 12:29:49.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.209" level="INFO">VALUE: [0.048672361, 0.058700264, 0.068728, 0.078755097, 0.088782583, 0.098810125, 0.108837528, 0.118864792, 0.128891069, 0.138917167, 0.148943889, 0.158969306, 0.168995319, 0.179021681, 0.189049097, 0.199076486, 0.209102694, 0.219129556, 0.229156861, 0.239184361, 0.249211361, 0.259238194, 0.269266264, 0.27929375, 0.289321625, 0.299348556, 0.309375486, 0.31940175, 0.329429667, 0.339457056, 0.349484819, 0.359512292, 0.369539931, 0.379566583, 0.389594181, 0.399620931, 0.409648958, 0.419677236, 0.429706819, 0.439735236, 0.449763819, 0.459792083, 0.469820458, 0.479848889, 0.489876528, 0.499904306, 0.509932389, 0.519960722, 0.529989167, 0.540017125, 0.550045472, 0.560072486, 0.570100097, 0.580127417, 0.590155917, 0.600184944, 0.610213014, 0.620242653, 0.630272736, 0.640302014, 0.650331028, 0.660360042, 0.670389333, 0.680418153, 0.690446306, 0.700473083, 0.710499875, 0.720526694, 0.730553458, 0.740580653, 0.750606958, 0.760635625, 0.770663972, 0.780691667, 0.790719194, 0.800745264, 0.810771167, 0.820797528, 0.830823097, 0.840849181, 0.850875292, 0.860900639, 0.870926917, 0.880953375, 0.890981583, 0.9010085, 0.911035833, 0.921063292, 0.931090528, 0.941117917, 0.951145653, 0.961172458, 0.97120025, 0.981227222, 0.991254556, 1.001280417, 1.011307222, 1.021334833, 1.031363111, 1.041390278] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:49.206" endtime="20201112 12:29:49.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.194" endtime="20201112 12:29:49.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:49.218" endtime="20201112 12:29:49.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:49.226" endtime="20201112 12:29:49.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.222" endtime="20201112 12:29:49.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.213" endtime="20201112 12:29:49.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.499" endtime="20201112 12:29:49.253"></status>
</kw>
<msg timestamp="20201112 12:29:49.253" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:49.274" endtime="20201112 12:29:51.402"></status>
</kw>
<msg timestamp="20201112 12:29:51.403" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30878169, 'wakeups': [30888309, 30898309, 30908309, 30918309, 30928309...</msg>
<status status="PASS" starttime="20201112 12:29:49.271" endtime="20201112 12:29:51.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.410" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30878169, 'wakeups': [30888309, 30898309, 30908309, 30918309, 30928309...</msg>
<status status="PASS" starttime="20201112 12:29:51.405" endtime="20201112 12:29:51.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:51.412" endtime="20201112 12:29:51.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.264" endtime="20201112 12:29:51.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.258" endtime="20201112 12:29:51.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:51.425" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [30888309, 30898309, 30908309, 30918309, 30928309, 30938309, 30948309, 30958309, 30968309, 30978309, 30988309, 30998309, 31008309, 31018309, 3102...</msg>
<status status="PASS" starttime="20201112 12:29:51.421" endtime="20201112 12:29:51.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.436" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:51.434" endtime="20201112 12:29:51.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.441" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:51.438" endtime="20201112 12:29:51.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.427" endtime="20201112 12:29:51.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.453" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:51.450" endtime="20201112 12:29:51.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.457" level="INFO">VALUE: 30878169</msg>
<status status="PASS" starttime="20201112 12:29:51.455" endtime="20201112 12:29:51.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.444" endtime="20201112 12:29:51.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.469" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:51.467" endtime="20201112 12:29:51.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.474" level="INFO">VALUE: [30888309, 30898309, 30908309, 30918309, 30928309, 30938309, 30948309, 30958309, 30968309, 30978309, 30988309, 30998309, 31008309, 31018309, 31028309, 31038309, 31048309, 31058309, 31068309, 31078309, 31088309, 31098309, 31108309, 31118309, 31128309, 31138309, 31148309, 31158309, 31168309, 31178309, 31188309, 31198309, 31208309, 31218309, 31228309, 31238309, 31248309, 31258309, 31268309, 31278309, 31288309, 31298309, 31308309, 31318309, 31328309, 31338309, 31348309, 31358309, 31368309, 31378309, 31388309, 31398309, 31408309, 31418309, 31428309, 31438309, 31448309, 31458309, 31468309, 31478309, 31488309, 31498309, 31508309, 31518309, 31528309, 31538309, 31548309, 31558309, 31568309, 31578309, 31588309, 31598309, 31608309, 31618309, 31628309, 31638309, 31648309, 31658309, 31668309, 31678309, 31688309, 31698309, 31708309, 31718309, 31728309, 31738309, 31748310, 31758309, 31768309, 31778309, 31788309, 31798309, 31808309, 31818309, 31828309, 31838309, 31848309, 31858309, 31868309, 31878309]</msg>
<status status="PASS" starttime="20201112 12:29:51.472" endtime="20201112 12:29:51.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.461" endtime="20201112 12:29:51.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:51.493" endtime="20201112 12:29:51.839"></status>
</kw>
<msg timestamp="20201112 12:29:51.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037723764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047888278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:51.490" endtime="20201112 12:29:51.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037723764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047888278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:51.848" endtime="20201112 12:29:51.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:51.864" endtime="20201112 12:29:51.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.483" endtime="20201112 12:29:51.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.478" endtime="20201112 12:29:51.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:51.927" level="INFO">${RESULT} = {'time': [0.037723764, 0.047888278, 0.057913069, 0.067938375, 0.077963486, 0.087988514, 0.098013347, 0.108039194, 0.118065542, 0.128091389, 0.138117097, 0.148143625, 0.158170708, 0.168197681, 0.178225...</msg>
<status status="PASS" starttime="20201112 12:29:51.874" endtime="20201112 12:29:51.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.938" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:51.936" endtime="20201112 12:29:51.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.942" level="INFO">VALUE: 0.037723764</msg>
<status status="PASS" starttime="20201112 12:29:51.940" endtime="20201112 12:29:51.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.929" endtime="20201112 12:29:51.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.955" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:51.953" endtime="20201112 12:29:51.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.961" level="INFO">VALUE: [0.047888278, 0.057913069, 0.067938375, 0.077963486, 0.087988514, 0.098013347, 0.108039194, 0.118065542, 0.128091389, 0.138117097, 0.148143625, 0.158170708, 0.168197681, 0.178225889, 0.188253556, 0.198280028, 0.208304778, 0.218328458, 0.228353236, 0.238377667, 0.248403917, 0.258429444, 0.268455778, 0.278482875, 0.288508625, 0.298533014, 0.308558194, 0.318583264, 0.328609403, 0.338635625, 0.348661917, 0.358688361, 0.368715056, 0.378741681, 0.388768514, 0.398793986, 0.408818833, 0.418844806, 0.428871875, 0.438897333, 0.448923069, 0.458949125, 0.468975194, 0.479000736, 0.489027167, 0.499051667, 0.509077847, 0.519104153, 0.529131069, 0.539157125, 0.549183639, 0.559208875, 0.569233736, 0.579258542, 0.589284292, 0.599309625, 0.609335986, 0.619360514, 0.629386792, 0.639412861, 0.649439028, 0.659464792, 0.669491069, 0.679516208, 0.689541056, 0.699565778, 0.709590403, 0.719615611, 0.729641514, 0.739666764, 0.749692653, 0.759717444, 0.769742944, 0.779768417, 0.789795014, 0.799820472, 0.809848042, 0.819874333, 0.829899639, 0.839924778, 0.849950667, 0.859975722, 0.870000653, 0.880024903, 0.890049986, 0.90007475, 0.910099597, 0.920122417, 0.930146694, 0.940170917, 0.950195042, 0.960218361, 0.970241431, 0.980263792, 0.990287069, 1.000310458, 1.010333917, 1.020357806, 1.030382458, 1.040407347] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:51.958" endtime="20201112 12:29:51.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.946" endtime="20201112 12:29:51.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:51.969" endtime="20201112 12:29:51.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:51.978" endtime="20201112 12:29:51.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.973" endtime="20201112 12:29:52.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.965" endtime="20201112 12:29:52.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.255" endtime="20201112 12:29:52.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.743" endtime="20201112 12:29:52.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:43.742" endtime="20201112 12:29:52.004"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:52.010" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:52.030" endtime="20201112 12:29:54.155"></status>
</kw>
<msg timestamp="20201112 12:29:54.156" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33627476, 'wakeups': [33637653, 33647652, 33657651, 33667652, 33677651...</msg>
<status status="PASS" starttime="20201112 12:29:52.027" endtime="20201112 12:29:54.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.163" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33627476, 'wakeups': [33637653, 33647652, 33657651, 33667652, 33677651...</msg>
<status status="PASS" starttime="20201112 12:29:54.158" endtime="20201112 12:29:54.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:54.165" endtime="20201112 12:29:54.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.020" endtime="20201112 12:29:54.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.015" endtime="20201112 12:29:54.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:54.180" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [33637653, 33647652, 33657651, 33667652, 33677651, 33687651, 33697651, 33707651, 33717651, 33727651, 33737651, 33747651, 33757652, 33767651, 3377...</msg>
<status status="PASS" starttime="20201112 12:29:54.175" endtime="20201112 12:29:54.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.190" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:54.188" endtime="20201112 12:29:54.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.194" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:54.192" endtime="20201112 12:29:54.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.182" endtime="20201112 12:29:54.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.206" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:54.204" endtime="20201112 12:29:54.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.211" level="INFO">VALUE: 33627476</msg>
<status status="PASS" starttime="20201112 12:29:54.209" endtime="20201112 12:29:54.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.198" endtime="20201112 12:29:54.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.228" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:54.226" endtime="20201112 12:29:54.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.233" level="INFO">VALUE: [33637653, 33647652, 33657651, 33667652, 33677651, 33687651, 33697651, 33707651, 33717651, 33727651, 33737651, 33747651, 33757652, 33767651, 33777651, 33787651, 33797651, 33807652, 33817651, 33827651, 33837651, 33847651, 33857651, 33867651, 33877651, 33887651, 33897651, 33907651, 33917651, 33927651, 33937652, 33947651, 33957651, 33967651, 33977651, 33987651, 33997651, 34007651, 34017651, 34027652, 34037651, 34047651, 34057651, 34067651, 34077652, 34087651, 34097651, 34107652, 34117651, 34127651, 34137651, 34147652, 34157651, 34167651, 34177651, 34187651, 34197651, 34207651, 34217651, 34227652, 34237651, 34247651, 34257651, 34267651, 34277651, 34287651, 34297651, 34307651, 34317651, 34327651, 34337651, 34347651, 34357651, 34367651, 34377651, 34387651, 34397651, 34407651, 34417651, 34427651, 34437651, 34447651, 34457651, 34467651, 34477652, 34487651, 34497651, 34507651, 34517651, 34527651, 34537651, 34547651, 34557651, 34567651, 34577651, 34587651, 34597651, 34607651, 34617651, 34627651]</msg>
<status status="PASS" starttime="20201112 12:29:54.231" endtime="20201112 12:29:54.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.214" endtime="20201112 12:29:54.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:54.252" endtime="20201112 12:29:54.592"></status>
</kw>
<msg timestamp="20201112 12:29:54.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043522875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053725236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:54.249" endtime="20201112 12:29:54.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043522875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053725236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:54.601" endtime="20201112 12:29:54.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:54.618" endtime="20201112 12:29:54.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.241" endtime="20201112 12:29:54.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.237" endtime="20201112 12:29:54.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:54.681" level="INFO">${RESULT} = {'time': [0.043522875, 0.053725236, 0.063748347, 0.073771944, 0.083797792, 0.093822708, 0.103848542, 0.113875625, 0.123901444, 0.133927111, 0.143951958, 0.153978944, 0.164005625, 0.174032958, 0.184058...</msg>
<status status="PASS" starttime="20201112 12:29:54.626" endtime="20201112 12:29:54.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.692" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:54.690" endtime="20201112 12:29:54.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.696" level="INFO">VALUE: 0.043522875</msg>
<status status="PASS" starttime="20201112 12:29:54.694" endtime="20201112 12:29:54.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.683" endtime="20201112 12:29:54.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.710" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:54.707" endtime="20201112 12:29:54.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.714" level="INFO">VALUE: [0.053725236, 0.063748347, 0.073771944, 0.083797792, 0.093822708, 0.103848542, 0.113875625, 0.123901444, 0.133927111, 0.143951958, 0.153978944, 0.164005625, 0.174032958, 0.184058764, 0.194086319, 0.204112444, 0.214138861, 0.224165958, 0.234191722, 0.244216875, 0.254242264, 0.264268222, 0.274295194, 0.284321667, 0.294349028, 0.304375264, 0.314401083, 0.324427861, 0.334455125, 0.344481472, 0.354508986, 0.364534333, 0.374560319, 0.384586583, 0.394614083, 0.404640944, 0.414668097, 0.424694653, 0.434722278, 0.444749972, 0.454775181, 0.464802028, 0.474829458, 0.484855792, 0.494883111, 0.504909083, 0.514936667, 0.524964528, 0.534989569, 0.545014819, 0.555040958, 0.565067583, 0.575091653, 0.585116931, 0.59514275, 0.605168569, 0.615195819, 0.62522225, 0.635248528, 0.645274944, 0.655299069, 0.665324319, 0.675350222, 0.685375403, 0.695401514, 0.705426944, 0.715453167, 0.725478833, 0.735504736, 0.745529347, 0.755553292, 0.765578528, 0.775604181, 0.785629333, 0.795655111, 0.805680611, 0.815706792, 0.825731139, 0.83575575, 0.845779972, 0.855804764, 0.865829056, 0.875853764, 0.885878042, 0.895903444, 0.905926556, 0.915951278, 0.925975125, 0.935999764, 0.946023764, 0.956048431, 0.966073028, 0.976097667, 0.986123194, 0.996148722, 1.006173042, 1.016198153, 1.026224417, 1.036249639, 1.046274153] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:54.712" endtime="20201112 12:29:54.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.700" endtime="20201112 12:29:54.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:54.723" endtime="20201112 12:29:54.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:54.732" endtime="20201112 12:29:54.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.727" endtime="20201112 12:29:54.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.718" endtime="20201112 12:29:54.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.011" endtime="20201112 12:29:54.757"></status>
</kw>
<msg timestamp="20201112 12:29:54.757" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:54.778" endtime="20201112 12:29:56.903"></status>
</kw>
<msg timestamp="20201112 12:29:56.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36368133, 'wakeups': [36378309, 36388309, 36398308, 36408309, 36418308...</msg>
<status status="PASS" starttime="20201112 12:29:54.775" endtime="20201112 12:29:56.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:56.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36368133, 'wakeups': [36378309, 36388309, 36398308, 36408309, 36418308...</msg>
<status status="PASS" starttime="20201112 12:29:56.906" endtime="20201112 12:29:56.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:56.913" endtime="20201112 12:29:56.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.768" endtime="20201112 12:29:56.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.762" endtime="20201112 12:29:56.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:56.926" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [36378309, 36388309, 36398308, 36408309, 36418308, 36428308, 36438308, 36448308, 36458308, 36468308, 36478309, 36488308, 36498308, 36508308, 3651...</msg>
<status status="PASS" starttime="20201112 12:29:56.921" endtime="20201112 12:29:56.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:56.936" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:56.934" endtime="20201112 12:29:56.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:56.941" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:56.939" endtime="20201112 12:29:56.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:56.928" endtime="20201112 12:29:56.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:56.954" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:56.951" endtime="20201112 12:29:56.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:56.958" level="INFO">VALUE: 36368133</msg>
<status status="PASS" starttime="20201112 12:29:56.956" endtime="20201112 12:29:56.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:56.945" endtime="20201112 12:29:56.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:56.971" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:56.969" endtime="20201112 12:29:56.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:56.976" level="INFO">VALUE: [36378309, 36388309, 36398308, 36408309, 36418308, 36428308, 36438308, 36448308, 36458308, 36468308, 36478309, 36488308, 36498308, 36508308, 36518309, 36528309, 36538308, 36548308, 36558309, 36568308, 36578308, 36588308, 36598308, 36608309, 36618308, 36628309, 36638308, 36648308, 36658308, 36668308, 36678309, 36688308, 36698308, 36708308, 36718308, 36728308, 36738308, 36748308, 36758308, 36768308, 36778308, 36788309, 36798308, 36808309, 36818308, 36828308, 36838308, 36848308, 36858308, 36868308, 36878308, 36888308, 36898308, 36908308, 36918308, 36928309, 36938308, 36948308, 36958308, 36968308, 36978308, 36988308, 36998308, 37008308, 37018308, 37028308, 37038308, 37048308, 37058308, 37068308, 37078308, 37088308, 37098308, 37108308, 37118308, 37128309, 37138308, 37148309, 37158308, 37168308, 37178308, 37188308, 37198308, 37208308, 37218308, 37228308, 37238308, 37248308, 37258308, 37268308, 37278308, 37288308, 37298308, 37308308, 37318308, 37328308, 37338309, 37348308, 37358308, 37368308]</msg>
<status status="PASS" starttime="20201112 12:29:56.973" endtime="20201112 12:29:56.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:56.962" endtime="20201112 12:29:56.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:56.997" endtime="20201112 12:29:57.337"></status>
</kw>
<msg timestamp="20201112 12:29:57.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037150167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047352472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:56.993" endtime="20201112 12:29:57.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037150167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047352472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:57.345" endtime="20201112 12:29:57.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:57.362" endtime="20201112 12:29:57.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:56.986" endtime="20201112 12:29:57.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:56.979" endtime="20201112 12:29:57.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:57.424" level="INFO">${RESULT} = {'time': [0.037150167, 0.047352472, 0.057378042, 0.067402361, 0.077428625, 0.08745325, 0.097479444, 0.107505986, 0.117531806, 0.127558083, 0.137584167, 0.147610958, 0.157634792, 0.167659736, 0.1776855...</msg>
<status status="PASS" starttime="20201112 12:29:57.370" endtime="20201112 12:29:57.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.434" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:57.432" endtime="20201112 12:29:57.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.439" level="INFO">VALUE: 0.037150167</msg>
<status status="PASS" starttime="20201112 12:29:57.436" endtime="20201112 12:29:57.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.425" endtime="20201112 12:29:57.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.452" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:57.450" endtime="20201112 12:29:57.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.456" level="INFO">VALUE: [0.047352472, 0.057378042, 0.067402361, 0.077428625, 0.08745325, 0.097479444, 0.107505986, 0.117531806, 0.127558083, 0.137584167, 0.147610958, 0.157634792, 0.167659736, 0.177685556, 0.187711806, 0.197736361, 0.207761083, 0.217787417, 0.227816056, 0.237842, 0.247870153, 0.257898083, 0.267926792, 0.277955472, 0.287980472, 0.298006875, 0.30803225, 0.318057486, 0.328085389, 0.338111069, 0.348136347, 0.358158903, 0.368183861, 0.378209417, 0.388234111, 0.398257917, 0.408282222, 0.41830725, 0.428332472, 0.438357708, 0.448383319, 0.4584105, 0.468436125, 0.478463222, 0.488488375, 0.498514042, 0.508539542, 0.518565333, 0.5285915, 0.538616722, 0.548642667, 0.558668903, 0.568693972, 0.578719264, 0.588745347, 0.598771972, 0.608796417, 0.618821111, 0.628846514, 0.638872111, 0.648898917, 0.658925792, 0.668952597, 0.678979306, 0.689006542, 0.699033306, 0.709060125, 0.719083667, 0.729108514, 0.73913275, 0.749157972, 0.759182278, 0.769205847, 0.779229069, 0.789253028, 0.799278083, 0.809300597, 0.819324819, 0.829348125, 0.839371361, 0.849394292, 0.859417389, 0.869441222, 0.879464139, 0.889488403, 0.899513236, 0.909538486, 0.919562764, 0.929587333, 0.939611347, 0.949635444, 0.959660361, 0.969686806, 0.979713278, 0.989740125, 0.999766153, 1.009793458, 1.019818972, 1.029845792, 1.039872653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:57.454" endtime="20201112 12:29:57.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.442" endtime="20201112 12:29:57.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:57.465" endtime="20201112 12:29:57.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:57.473" endtime="20201112 12:29:57.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.469" endtime="20201112 12:29:57.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.460" endtime="20201112 12:29:57.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.759" endtime="20201112 12:29:57.499"></status>
</kw>
<msg timestamp="20201112 12:29:57.499" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:57.521" endtime="20201112 12:29:59.646"></status>
</kw>
<msg timestamp="20201112 12:29:59.647" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39104553, 'wakeups': [39114729, 39124728, 39134728, 39144728, 39154728...</msg>
<status status="PASS" starttime="20201112 12:29:57.518" endtime="20201112 12:29:59.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:59.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39104553, 'wakeups': [39114729, 39124728, 39134728, 39144728, 39154728...</msg>
<status status="PASS" starttime="20201112 12:29:59.649" endtime="20201112 12:29:59.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:59.661" endtime="20201112 12:29:59.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.509" endtime="20201112 12:29:59.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.504" endtime="20201112 12:29:59.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:59.674" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [39114729, 39124728, 39134728, 39144728, 39154728, 39164729, 39174728, 39184728, 39194728, 39204728, 39214728, 39224728, 39234728, 39244728, 3925...</msg>
<status status="PASS" starttime="20201112 12:29:59.670" endtime="20201112 12:29:59.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:59.684" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:59.682" endtime="20201112 12:29:59.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:59.688" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:59.686" endtime="20201112 12:29:59.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:59.676" endtime="20201112 12:29:59.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:59.701" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:59.699" endtime="20201112 12:29:59.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:59.705" level="INFO">VALUE: 39104553</msg>
<status status="PASS" starttime="20201112 12:29:59.703" endtime="20201112 12:29:59.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:59.692" endtime="20201112 12:29:59.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:59.717" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:59.715" endtime="20201112 12:29:59.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:59.722" level="INFO">VALUE: [39114729, 39124728, 39134728, 39144728, 39154728, 39164729, 39174728, 39184728, 39194728, 39204728, 39214728, 39224728, 39234728, 39244728, 39254728, 39264728, 39274728, 39284728, 39294728, 39304728, 39314728, 39324728, 39334728, 39344729, 39354728, 39364728, 39374728, 39384728, 39394728, 39404728, 39414728, 39424728, 39434728, 39444728, 39454729, 39464729, 39474728, 39484728, 39494728, 39504729, 39514728, 39524728, 39534728, 39544728, 39554728, 39564728, 39574728, 39584728, 39594728, 39604728, 39614728, 39624728, 39634728, 39644728, 39654728, 39664729, 39674728, 39684728, 39694728, 39704728, 39714728, 39724728, 39734728, 39744728, 39754728, 39764729, 39774729, 39784728, 39794728, 39804728, 39814728, 39824728, 39834729, 39844729, 39854728, 39864728, 39874729, 39884729, 39894729, 39904728, 39914728, 39924728, 39934728, 39944728, 39954728, 39964728, 39974728, 39984728, 39994729, 40004728, 40014728, 40024728, 40034729, 40044728, 40054728, 40064729, 40074728, 40084728, 40094728, 40104728]</msg>
<status status="PASS" starttime="20201112 12:29:59.720" endtime="20201112 12:29:59.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:59.709" endtime="20201112 12:29:59.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:59.741" endtime="20201112 12:30:00.082"></status>
</kw>
<msg timestamp="20201112 12:30:00.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038680819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048883444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:59.738" endtime="20201112 12:30:00.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038680819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048883444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:00.090" endtime="20201112 12:30:00.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:00.107" endtime="20201112 12:30:00.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:59.730" endtime="20201112 12:30:00.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:59.726" endtime="20201112 12:30:00.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:00.171" level="INFO">${RESULT} = {'time': [0.038680819, 0.048883444, 0.058908208, 0.06893575, 0.078962833, 0.088988403, 0.099015153, 0.109040875, 0.11906675, 0.129092472, 0.139118083, 0.149143889, 0.159169333, 0.169196097, 0.17922279...</msg>
<status status="PASS" starttime="20201112 12:30:00.115" endtime="20201112 12:30:00.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.182" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:30:00.180" endtime="20201112 12:30:00.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.187" level="INFO">VALUE: 0.038680819</msg>
<status status="PASS" starttime="20201112 12:30:00.185" endtime="20201112 12:30:00.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.174" endtime="20201112 12:30:00.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.200" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:00.198" endtime="20201112 12:30:00.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.204" level="INFO">VALUE: [0.048883444, 0.058908208, 0.06893575, 0.078962833, 0.088988403, 0.099015153, 0.109040875, 0.11906675, 0.129092472, 0.139118083, 0.149143889, 0.159169333, 0.169196097, 0.179222792, 0.189250069, 0.199277167, 0.209304236, 0.219330458, 0.229358014, 0.239384306, 0.249410778, 0.259438069, 0.269465708, 0.279493528, 0.289518542, 0.299543806, 0.309568528, 0.319593486, 0.329619028, 0.33964375, 0.349668514, 0.359693667, 0.369718264, 0.379743667, 0.389771486, 0.399797653, 0.409822667, 0.419848514, 0.429874528, 0.439900444, 0.449925111, 0.459950764, 0.469978431, 0.480005153, 0.490032181, 0.5000595, 0.510086264, 0.520112625, 0.530139444, 0.540165181, 0.550191736, 0.560216389, 0.570240903, 0.580265486, 0.590291444, 0.600317306, 0.6103415, 0.620366458, 0.630391347, 0.640415889, 0.650441194, 0.660465833, 0.670490639, 0.680515806, 0.690540542, 0.700566431, 0.710591069, 0.720614569, 0.730639583, 0.740664903, 0.750690347, 0.76071475, 0.770742069, 0.780767111, 0.790791431, 0.800816486, 0.810843208, 0.820869764, 0.830896583, 0.840922264, 0.850948931, 0.860975361, 0.871001639, 0.881027597, 0.891054431, 0.901080181, 0.911106667, 0.921133417, 0.931161014, 0.9411855, 0.951212236, 0.961237389, 0.971264361, 0.981289778, 0.991316111, 1.001343486, 1.011369694, 1.021396222, 1.031423875, 1.041449347] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:00.202" endtime="20201112 12:30:00.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.190" endtime="20201112 12:30:00.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:00.213" endtime="20201112 12:30:00.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:00.221" endtime="20201112 12:30:00.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.217" endtime="20201112 12:30:00.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.209" endtime="20201112 12:30:00.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.500" endtime="20201112 12:30:00.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.007" endtime="20201112 12:30:00.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.005" endtime="20201112 12:30:00.248"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:30:00.253" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:00.274" endtime="20201112 12:30:02.398"></status>
</kw>
<msg timestamp="20201112 12:30:02.400" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41850042, 'wakeups': [41860255, 41870254, 41880254, 41890254, 41900254...</msg>
<status status="PASS" starttime="20201112 12:30:00.270" endtime="20201112 12:30:02.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.406" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41850042, 'wakeups': [41860255, 41870254, 41880254, 41890254, 41900254...</msg>
<status status="PASS" starttime="20201112 12:30:02.402" endtime="20201112 12:30:02.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:02.409" endtime="20201112 12:30:02.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.263" endtime="20201112 12:30:02.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.258" endtime="20201112 12:30:02.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:02.422" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [41860255, 41870254, 41880254, 41890254, 41900254, 41910254, 41920254, 41930255, 41940255, 41950254, 41960254, 41970254, 41980254, 41990255, 4200...</msg>
<status status="PASS" starttime="20201112 12:30:02.417" endtime="20201112 12:30:02.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.432" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:02.429" endtime="20201112 12:30:02.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.437" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:02.435" endtime="20201112 12:30:02.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.423" endtime="20201112 12:30:02.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.449" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:30:02.447" endtime="20201112 12:30:02.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.453" level="INFO">VALUE: 41850042</msg>
<status status="PASS" starttime="20201112 12:30:02.451" endtime="20201112 12:30:02.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.440" endtime="20201112 12:30:02.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.467" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:02.465" endtime="20201112 12:30:02.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.472" level="INFO">VALUE: [41860255, 41870254, 41880254, 41890254, 41900254, 41910254, 41920254, 41930255, 41940255, 41950254, 41960254, 41970254, 41980254, 41990255, 42000254, 42010254, 42020256, 42030254, 42040254, 42050254, 42060254, 42070254, 42080254, 42090254, 42100254, 42110254, 42120254, 42130254, 42140254, 42150254, 42160254, 42170254, 42180254, 42190254, 42200254, 42210255, 42220254, 42230255, 42240254, 42250254, 42260254, 42270254, 42280254, 42290254, 42300254, 42310254, 42320254, 42330254, 42340254, 42350254, 42360254, 42370254, 42380254, 42390254, 42400254, 42410254, 42420254, 42430254, 42440255, 42450254, 42460254, 42470254, 42480255, 42490254, 42500254, 42510254, 42520254, 42530254, 42540254, 42550255, 42560254, 42570254, 42580254, 42590255, 42600254, 42610254, 42620254, 42630254, 42640254, 42650254, 42660255, 42670254, 42680254, 42690254, 42700254, 42710254, 42720254, 42730254, 42740254, 42750254, 42760254, 42770254, 42780254, 42790254, 42800254, 42810254, 42820254, 42830254, 42840254, 42850255]</msg>
<status status="PASS" starttime="20201112 12:30:02.470" endtime="20201112 12:30:02.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.457" endtime="20201112 12:30:02.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:02.491" endtime="20201112 12:30:02.832"></status>
</kw>
<msg timestamp="20201112 12:30:02.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053188431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:02.487" endtime="20201112 12:30:02.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053188431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:02.840" endtime="20201112 12:30:02.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:02.857" endtime="20201112 12:30:02.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.480" endtime="20201112 12:30:02.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.476" endtime="20201112 12:30:02.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:02.919" level="INFO">${RESULT} = {'time': [0.042951639, 0.053188431, 0.063212111, 0.073238319, 0.083263958, 0.093289306, 0.103315347, 0.113341667, 0.12336825, 0.133394139, 0.143416819, 0.153441375, 0.163466167, 0.173491486, 0.1835166...</msg>
<status status="PASS" starttime="20201112 12:30:02.865" endtime="20201112 12:30:02.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.929" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:30:02.927" endtime="20201112 12:30:02.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.934" level="INFO">VALUE: 0.042951639</msg>
<status status="PASS" starttime="20201112 12:30:02.932" endtime="20201112 12:30:02.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.921" endtime="20201112 12:30:02.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.947" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:02.945" endtime="20201112 12:30:02.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.952" level="INFO">VALUE: [0.053188431, 0.063212111, 0.073238319, 0.083263958, 0.093289306, 0.103315347, 0.113341667, 0.12336825, 0.133394139, 0.143416819, 0.153441375, 0.163466167, 0.173491486, 0.183516667, 0.193540597, 0.20356575, 0.213594125, 0.223618889, 0.233645222, 0.243670694, 0.253697333, 0.263723417, 0.273749847, 0.283776528, 0.293805319, 0.303830958, 0.3138565, 0.323882542, 0.333907903, 0.343933444, 0.353959361, 0.3639845, 0.374009611, 0.384034375, 0.394059889, 0.404085681, 0.414110278, 0.424135792, 0.434158958, 0.444183347, 0.454209486, 0.464234347, 0.474258736, 0.484283042, 0.494309028, 0.504334542, 0.514360861, 0.524386056, 0.534411708, 0.544437972, 0.554464681, 0.564490375, 0.574517597, 0.58454575, 0.594573278, 0.604599833, 0.61462675, 0.624654, 0.634682, 0.644706917, 0.65473175, 0.664756153, 0.674782167, 0.684805139, 0.694830722, 0.704855944, 0.714882458, 0.724908806, 0.734934333, 0.744959931, 0.754984167, 0.765009861, 0.775034472, 0.785059722, 0.795083861, 0.805111583, 0.815139167, 0.825165208, 0.835191097, 0.845216194, 0.855242694, 0.865267764, 0.875294139, 0.885319694, 0.895345667, 0.905371486, 0.915396556, 0.925421556, 0.935447292, 0.945473792, 0.955499556, 0.965525417, 0.975552653, 0.985578319, 0.995604625, 1.005629792, 1.015655833, 1.025682097, 1.035708444, 1.045734042] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:02.949" endtime="20201112 12:30:02.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.937" endtime="20201112 12:30:02.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:02.961" endtime="20201112 12:30:02.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:02.971" endtime="20201112 12:30:02.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.965" endtime="20201112 12:30:02.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.957" endtime="20201112 12:30:02.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.254" endtime="20201112 12:30:02.996"></status>
</kw>
<msg timestamp="20201112 12:30:02.997" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:03.017" endtime="20201112 12:30:05.142"></status>
</kw>
<msg timestamp="20201112 12:30:05.144" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44587198, 'wakeups': [44597411, 44607411, 44617410, 44627410, 44637410...</msg>
<status status="PASS" starttime="20201112 12:30:03.014" endtime="20201112 12:30:05.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.150" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44587198, 'wakeups': [44597411, 44607411, 44617410, 44627410, 44637410...</msg>
<status status="PASS" starttime="20201112 12:30:05.146" endtime="20201112 12:30:05.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:05.153" endtime="20201112 12:30:05.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.007" endtime="20201112 12:30:05.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.002" endtime="20201112 12:30:05.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:05.166" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [44597411, 44607411, 44617410, 44627410, 44637410, 44647410, 44657410, 44667410, 44677411, 44687410, 44697410, 44707410, 44717410, 44727410, 4473...</msg>
<status status="PASS" starttime="20201112 12:30:05.161" endtime="20201112 12:30:05.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.176" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:05.174" endtime="20201112 12:30:05.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.180" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:05.178" endtime="20201112 12:30:05.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.168" endtime="20201112 12:30:05.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.193" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:30:05.191" endtime="20201112 12:30:05.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.198" level="INFO">VALUE: 44587198</msg>
<status status="PASS" starttime="20201112 12:30:05.195" endtime="20201112 12:30:05.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.184" endtime="20201112 12:30:05.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.211" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:05.208" endtime="20201112 12:30:05.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.216" level="INFO">VALUE: [44597411, 44607411, 44617410, 44627410, 44637410, 44647410, 44657410, 44667410, 44677411, 44687410, 44697410, 44707410, 44717410, 44727410, 44737410, 44747410, 44757410, 44767410, 44777410, 44787410, 44797410, 44807410, 44817410, 44827410, 44837410, 44847410, 44857410, 44867410, 44877410, 44887410, 44897410, 44907410, 44917410, 44927410, 44937410, 44947410, 44957410, 44967410, 44977410, 44987410, 44997410, 45007410, 45017410, 45027410, 45037410, 45047411, 45057410, 45067410, 45077411, 45087410, 45097410, 45107411, 45117410, 45127410, 45137410, 45147410, 45157410, 45167410, 45177410, 45187410, 45197411, 45207410, 45217410, 45227410, 45237410, 45247410, 45257410, 45267410, 45277410, 45287411, 45297410, 45307410, 45317410, 45327410, 45337410, 45347411, 45357410, 45367410, 45377410, 45387410, 45397410, 45407410, 45417412, 45427410, 45437410, 45447410, 45457410, 45467411, 45477410, 45487410, 45497410, 45507410, 45517410, 45527410, 45537410, 45547410, 45557410, 45567410, 45577410, 45587410]</msg>
<status status="PASS" starttime="20201112 12:30:05.213" endtime="20201112 12:30:05.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.202" endtime="20201112 12:30:05.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:05.235" endtime="20201112 12:30:05.578"></status>
</kw>
<msg timestamp="20201112 12:30:05.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037453014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047691403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:05.232" endtime="20201112 12:30:05.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037453014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047691403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:05.587" endtime="20201112 12:30:05.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:05.604" endtime="20201112 12:30:05.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.225" endtime="20201112 12:30:05.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.219" endtime="20201112 12:30:05.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:05.668" level="INFO">${RESULT} = {'time': [0.037453014, 0.047691403, 0.057715417, 0.067738486, 0.077763486, 0.087787806, 0.097812694, 0.107837792, 0.117862583, 0.127889694, 0.137915889, 0.147943458, 0.157970042, 0.167995153, 0.178019...</msg>
<status status="PASS" starttime="20201112 12:30:05.613" endtime="20201112 12:30:05.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.679" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:30:05.677" endtime="20201112 12:30:05.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.683" level="INFO">VALUE: 0.037453014</msg>
<status status="PASS" starttime="20201112 12:30:05.681" endtime="20201112 12:30:05.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.670" endtime="20201112 12:30:05.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.696" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:05.694" endtime="20201112 12:30:05.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.701" level="INFO">VALUE: [0.047691403, 0.057715417, 0.067738486, 0.077763486, 0.087787806, 0.097812694, 0.107837792, 0.117862583, 0.127889694, 0.137915889, 0.147943458, 0.157970042, 0.167995153, 0.178019528, 0.188044514, 0.198068361, 0.208092819, 0.218116458, 0.228140681, 0.238163792, 0.248187167, 0.258210236, 0.268233375, 0.278256806, 0.288282986, 0.298308972, 0.308334931, 0.318360458, 0.328384625, 0.338408986, 0.348433486, 0.3584575, 0.368483, 0.378507986, 0.388533292, 0.398558764, 0.408583389, 0.418608208, 0.428633111, 0.438656569, 0.448679319, 0.458703264, 0.468726792, 0.478751069, 0.488776653, 0.498802958, 0.508827319, 0.518853361, 0.528879806, 0.538903069, 0.548927861, 0.558953931, 0.568977931, 0.579002681, 0.589027264, 0.599050542, 0.609075639, 0.619101083, 0.629127417, 0.639152931, 0.649180222, 0.659205278, 0.669231569, 0.679258139, 0.689285, 0.699310444, 0.709336347, 0.719362181, 0.729388153, 0.739414819, 0.749439222, 0.759465486, 0.769492347, 0.779518583, 0.789544569, 0.799571125, 0.809595597, 0.819621236, 0.829647542, 0.839672319, 0.849698472, 0.859724306, 0.869752306, 0.879776056, 0.889800222, 0.899823444, 0.909848069, 0.91987425, 0.929898417, 0.939923222, 0.949949, 0.959974514, 0.970001736, 0.980028306, 0.990054278, 1.000078292, 1.010102986, 1.020127569, 1.030153125, 1.040178431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:05.699" endtime="20201112 12:30:05.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.687" endtime="20201112 12:30:05.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:05.710" endtime="20201112 12:30:05.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:05.718" endtime="20201112 12:30:05.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.714" endtime="20201112 12:30:05.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.705" endtime="20201112 12:30:05.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.998" endtime="20201112 12:30:05.744"></status>
</kw>
<msg timestamp="20201112 12:30:05.744" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:05.765" endtime="20201112 12:30:07.889"></status>
</kw>
<msg timestamp="20201112 12:30:07.891" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47327794, 'wakeups': [47338007, 47348007, 47358007, 47368006, 47378006...</msg>
<status status="PASS" starttime="20201112 12:30:05.762" endtime="20201112 12:30:07.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:07.898" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47327794, 'wakeups': [47338007, 47348007, 47358007, 47368006, 47378006...</msg>
<status status="PASS" starttime="20201112 12:30:07.893" endtime="20201112 12:30:07.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:07.900" endtime="20201112 12:30:07.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.754" endtime="20201112 12:30:07.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.749" endtime="20201112 12:30:07.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:07.915" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [47338007, 47348007, 47358007, 47368006, 47378006, 47388006, 47398006, 47408006, 47418006, 47428006, 47438006, 47448006, 47458006, 47468006, 4747...</msg>
<status status="PASS" starttime="20201112 12:30:07.909" endtime="20201112 12:30:07.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:07.925" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:07.923" endtime="20201112 12:30:07.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:07.929" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:07.927" endtime="20201112 12:30:07.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:07.917" endtime="20201112 12:30:07.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:07.941" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:30:07.939" endtime="20201112 12:30:07.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:07.946" level="INFO">VALUE: 47327794</msg>
<status status="PASS" starttime="20201112 12:30:07.944" endtime="20201112 12:30:07.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:07.933" endtime="20201112 12:30:07.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:07.958" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:07.956" endtime="20201112 12:30:07.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:07.963" level="INFO">VALUE: [47338007, 47348007, 47358007, 47368006, 47378006, 47388006, 47398006, 47408006, 47418006, 47428006, 47438006, 47448006, 47458006, 47468006, 47478006, 47488006, 47498006, 47508007, 47518006, 47528007, 47538007, 47548007, 47558006, 47568006, 47578006, 47588006, 47598006, 47608006, 47618006, 47628006, 47638006, 47648006, 47658006, 47668006, 47678006, 47688006, 47698006, 47708006, 47718006, 47728006, 47738006, 47748006, 47758006, 47768006, 47778006, 47788006, 47798006, 47808006, 47818007, 47828006, 47838006, 47848006, 47858006, 47868006, 47878007, 47888007, 47898007, 47908007, 47918006, 47928006, 47938007, 47948006, 47958006, 47968006, 47978007, 47988006, 47998006, 48008006, 48018006, 48028006, 48038006, 48048007, 48058006, 48068007, 48078006, 48088006, 48098006, 48108006, 48118006, 48128006, 48138006, 48148007, 48158006, 48168008, 48178006, 48188006, 48198006, 48208006, 48218007, 48228007, 48238007, 48248007, 48258006, 48268006, 48278007, 48288006, 48298006, 48308006, 48318006, 48328006]</msg>
<status status="PASS" starttime="20201112 12:30:07.960" endtime="20201112 12:30:07.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:07.949" endtime="20201112 12:30:07.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:07.981" endtime="20201112 12:30:08.324"></status>
</kw>
<msg timestamp="20201112 12:30:08.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037481889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047721639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:07.978" endtime="20201112 12:30:08.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037481889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047721639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:08.332" endtime="20201112 12:30:08.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:08.349" endtime="20201112 12:30:08.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:07.971" endtime="20201112 12:30:08.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:07.966" endtime="20201112 12:30:08.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:08.412" level="INFO">${RESULT} = {'time': [0.037481889, 0.047721639, 0.057746611, 0.067771806, 0.077795986, 0.087821403, 0.097846222, 0.107871403, 0.117894528, 0.127917917, 0.137941889, 0.147965653, 0.157990208, 0.168014889, 0.178039...</msg>
<status status="PASS" starttime="20201112 12:30:08.357" endtime="20201112 12:30:08.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.423" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:30:08.421" endtime="20201112 12:30:08.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.427" level="INFO">VALUE: 0.037481889</msg>
<status status="PASS" starttime="20201112 12:30:08.425" endtime="20201112 12:30:08.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.414" endtime="20201112 12:30:08.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.440" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:08.438" endtime="20201112 12:30:08.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.445" level="INFO">VALUE: [0.047721639, 0.057746611, 0.067771806, 0.077795986, 0.087821403, 0.097846222, 0.107871403, 0.117894528, 0.127917917, 0.137941889, 0.147965653, 0.157990208, 0.168014889, 0.178039764, 0.188065722, 0.198090458, 0.208117486, 0.218144375, 0.228169042, 0.238194972, 0.248220458, 0.258245986, 0.268270778, 0.278295917, 0.288322556, 0.298347403, 0.308373556, 0.318399111, 0.328424736, 0.338449958, 0.348474958, 0.358499528, 0.368524097, 0.378549264, 0.388573111, 0.398596819, 0.408621875, 0.418647264, 0.428673542, 0.438699917, 0.448727542, 0.458753708, 0.468780278, 0.478806486, 0.488832722, 0.498857778, 0.508883069, 0.518908236, 0.528934486, 0.538958361, 0.548983528, 0.559007222, 0.569032569, 0.579057639, 0.589083528, 0.599108597, 0.609133819, 0.619159, 0.629183708, 0.639209056, 0.649234472, 0.659258278, 0.669283431, 0.679308069, 0.689334653, 0.699359639, 0.709384972, 0.719410125, 0.729436722, 0.739463042, 0.749489042, 0.759515764, 0.769539361, 0.779566681, 0.789593542, 0.799620986, 0.809647611, 0.819672528, 0.829697889, 0.839722083, 0.849747097, 0.859774306, 0.869799472, 0.879828306, 0.889852458, 0.899878319, 0.909904889, 0.919931042, 0.929957806, 0.939983542, 0.950008569, 0.960034097, 0.970059167, 0.980085778, 0.990113556, 1.000139944, 1.010167153, 1.020193153, 1.030219292, 1.040244861] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:08.443" endtime="20201112 12:30:08.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.431" endtime="20201112 12:30:08.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:08.454" endtime="20201112 12:30:08.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:08.462" endtime="20201112 12:30:08.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.458" endtime="20201112 12:30:08.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.449" endtime="20201112 12:30:08.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.746" endtime="20201112 12:30:08.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.250" endtime="20201112 12:30:08.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.249" endtime="20201112 12:30:08.488"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:30:08.494" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:08.514" endtime="20201112 12:30:10.639"></status>
</kw>
<msg timestamp="20201112 12:30:10.640" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50070303, 'wakeups': [50080558, 50090554, 50100554, 50110556, 50120554...</msg>
<status status="PASS" starttime="20201112 12:30:08.511" endtime="20201112 12:30:10.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:10.647" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50070303, 'wakeups': [50080558, 50090554, 50100554, 50110556, 50120554...</msg>
<status status="PASS" starttime="20201112 12:30:10.642" endtime="20201112 12:30:10.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:10.649" endtime="20201112 12:30:10.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.504" endtime="20201112 12:30:10.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.499" endtime="20201112 12:30:10.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:10.662" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [50080558, 50090554, 50100554, 50110556, 50120554, 50130554, 50140554, 50150554, 50160554, 50170554, 50180554, 50190554, 50200554, 50210554, 5022...</msg>
<status status="PASS" starttime="20201112 12:30:10.657" endtime="20201112 12:30:10.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:10.678" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:10.676" endtime="20201112 12:30:10.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:10.683" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:10.681" endtime="20201112 12:30:10.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:10.670" endtime="20201112 12:30:10.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:10.695" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:30:10.692" endtime="20201112 12:30:10.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:10.699" level="INFO">VALUE: 50070303</msg>
<status status="PASS" starttime="20201112 12:30:10.697" endtime="20201112 12:30:10.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:10.686" endtime="20201112 12:30:10.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:10.711" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:10.709" endtime="20201112 12:30:10.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:10.716" level="INFO">VALUE: [50080558, 50090554, 50100554, 50110556, 50120554, 50130554, 50140554, 50150554, 50160554, 50170554, 50180554, 50190554, 50200554, 50210554, 50220555, 50230554, 50240554, 50250554, 50260556, 50270555, 50280554, 50290554, 50300554, 50310554, 50320555, 50330555, 50340554, 50350554, 50360554, 50370554, 50380554, 50390554, 50400554, 50410554, 50420554, 50430554, 50440555, 50450554, 50460554, 50470554, 50480554, 50490555, 50500554, 50510555, 50520554, 50530554, 50540554, 50550554, 50560554, 50570554, 50580554, 50590555, 50600554, 50610554, 50620555, 50630554, 50640554, 50650554, 50660554, 50670554, 50680555, 50690554, 50700554, 50710554, 50720554, 50730554, 50740555, 50750554, 50760554, 50770554, 50780554, 50790555, 50800554, 50810554, 50820554, 50830554, 50840554, 50850554, 50860554, 50870554, 50880555, 50890554, 50900554, 50910554, 50920554, 50930554, 50940554, 50950554, 50960554, 50970554, 50980554, 50990554, 51000554, 51010555, 51020555, 51030555, 51040554, 51050554, 51060555, 51070554]</msg>
<status status="PASS" starttime="20201112 12:30:10.714" endtime="20201112 12:30:10.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:10.703" endtime="20201112 12:30:10.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:10.737" endtime="20201112 12:30:11.078"></status>
</kw>
<msg timestamp="20201112 12:30:11.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043056653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053338097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:10.734" endtime="20201112 12:30:11.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:11.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043056653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053338097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:11.087" endtime="20201112 12:30:11.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:11.103" endtime="20201112 12:30:11.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:10.724" endtime="20201112 12:30:11.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:10.720" endtime="20201112 12:30:11.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:11.166" level="INFO">${RESULT} = {'time': [0.043056653, 0.053338097, 0.0633605, 0.073388194, 0.083417458, 0.093442667, 0.103467986, 0.11349425, 0.123518986, 0.133544375, 0.143568806, 0.153594528, 0.163620792, 0.173647389, 0.183673028...</msg>
<status status="PASS" starttime="20201112 12:30:11.112" endtime="20201112 12:30:11.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:11.176" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:30:11.174" endtime="20201112 12:30:11.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:11.181" level="INFO">VALUE: 0.043056653</msg>
<status status="PASS" starttime="20201112 12:30:11.178" endtime="20201112 12:30:11.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:11.168" endtime="20201112 12:30:11.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:11.194" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:11.192" endtime="20201112 12:30:11.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:11.199" level="INFO">VALUE: [0.053338097, 0.0633605, 0.073388194, 0.083417458, 0.093442667, 0.103467986, 0.11349425, 0.123518986, 0.133544375, 0.143568806, 0.153594528, 0.163620792, 0.173647389, 0.183673028, 0.193700417, 0.203724917, 0.213749931, 0.223775014, 0.233802861, 0.243827347, 0.253851944, 0.263876375, 0.273901361, 0.283924625, 0.293949569, 0.303976181, 0.314004639, 0.324033653, 0.334062806, 0.344089931, 0.354115931, 0.364142111, 0.374168389, 0.384194014, 0.3942205, 0.404246583, 0.414274667, 0.424299944, 0.434325167, 0.444351056, 0.454377333, 0.464403806, 0.474428153, 0.484454319, 0.494478306, 0.504503764, 0.514531042, 0.524558153, 0.534584431, 0.544610847, 0.554638194, 0.564665958, 0.574690958, 0.5847165, 0.594742875, 0.604768056, 0.614794806, 0.624820694, 0.634847792, 0.644874319, 0.654902542, 0.664927542, 0.674954361, 0.684979736, 0.695007486, 0.705035028, 0.715063, 0.725089181, 0.735116361, 0.745143139, 0.755171389, 0.765200306, 0.775227292, 0.785254556, 0.795282375, 0.805309639, 0.815337764, 0.825364889, 0.835391306, 0.845417069, 0.855444597, 0.865469597, 0.875496278, 0.885522069, 0.895549917, 0.905577028, 0.915603444, 0.925628389, 0.935653625, 0.9456785, 0.955704431, 0.965730111, 0.975755875, 0.985782014, 0.995809139, 1.005836222, 1.015862694, 1.025888778, 1.035916222, 1.045941653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:11.197" endtime="20201112 12:30:11.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:11.184" endtime="20201112 12:30:11.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:11.208" endtime="20201112 12:30:11.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:11.216" endtime="20201112 12:30:11.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:11.212" endtime="20201112 12:30:11.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:11.203" endtime="20201112 12:30:11.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.495" endtime="20201112 12:30:11.241"></status>
</kw>
<msg timestamp="20201112 12:30:11.242" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:11.264" endtime="20201112 12:30:13.391"></status>
</kw>
<msg timestamp="20201112 12:30:13.392" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52813312, 'wakeups': [52823565, 52833564, 52843564, 52853563, 52863563...</msg>
<status status="PASS" starttime="20201112 12:30:11.261" endtime="20201112 12:30:13.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.399" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52813312, 'wakeups': [52823565, 52833564, 52843564, 52853563, 52863563...</msg>
<status status="PASS" starttime="20201112 12:30:13.394" endtime="20201112 12:30:13.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:13.401" endtime="20201112 12:30:13.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:11.252" endtime="20201112 12:30:13.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:11.247" endtime="20201112 12:30:13.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:13.414" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [52823565, 52833564, 52843564, 52853563, 52863563, 52873563, 52883564, 52893564, 52903563, 52913563, 52923563, 52933563, 52943563, 52953563, 5296...</msg>
<status status="PASS" starttime="20201112 12:30:13.409" endtime="20201112 12:30:13.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.424" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:13.422" endtime="20201112 12:30:13.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.428" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:13.426" endtime="20201112 12:30:13.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.416" endtime="20201112 12:30:13.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.441" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:30:13.439" endtime="20201112 12:30:13.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.447" level="INFO">VALUE: 52813312</msg>
<status status="PASS" starttime="20201112 12:30:13.443" endtime="20201112 12:30:13.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.432" endtime="20201112 12:30:13.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.465" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:13.462" endtime="20201112 12:30:13.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.471" level="INFO">VALUE: [52823565, 52833564, 52843564, 52853563, 52863563, 52873563, 52883564, 52893564, 52903563, 52913563, 52923563, 52933563, 52943563, 52953563, 52963563, 52973563, 52983563, 52993563, 53003563, 53013564, 53023563, 53033563, 53043563, 53053563, 53063563, 53073564, 53083563, 53093563, 53103563, 53113563, 53123563, 53133565, 53143564, 53153563, 53163563, 53173563, 53183563, 53193563, 53203563, 53213564, 53223563, 53233563, 53243563, 53253563, 53263563, 53273563, 53283564, 53293563, 53303563, 53313563, 53323563, 53333563, 53343563, 53353563, 53363563, 53373564, 53383563, 53393563, 53403564, 53413563, 53423563, 53433563, 53443563, 53453563, 53463563, 53473563, 53483563, 53493565, 53503563, 53513563, 53523563, 53533565, 53543563, 53553563, 53563563, 53573563, 53583563, 53593563, 53603563, 53613563, 53623563, 53633563, 53643563, 53653563, 53663563, 53673563, 53683564, 53693564, 53703564, 53713563, 53723563, 53733563, 53743563, 53753563, 53763563, 53773564, 53783563, 53793564, 53803563, 53813563]</msg>
<status status="PASS" starttime="20201112 12:30:13.468" endtime="20201112 12:30:13.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.453" endtime="20201112 12:30:13.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:13.491" endtime="20201112 12:30:13.835"></status>
</kw>
<msg timestamp="20201112 12:30:13.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038748583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049028778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:13.487" endtime="20201112 12:30:13.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038748583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049028778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:13.844" endtime="20201112 12:30:13.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:13.862" endtime="20201112 12:30:13.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.480" endtime="20201112 12:30:13.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.475" endtime="20201112 12:30:13.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:13.926" level="INFO">${RESULT} = {'time': [0.038748583, 0.049028778, 0.059054347, 0.069081208, 0.079106764, 0.089132583, 0.099157764, 0.109185181, 0.119210931, 0.129235069, 0.139261375, 0.149287972, 0.159313958, 0.169340194, 0.179366...</msg>
<status status="PASS" starttime="20201112 12:30:13.870" endtime="20201112 12:30:13.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.936" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:30:13.934" endtime="20201112 12:30:13.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.941" level="INFO">VALUE: 0.038748583</msg>
<status status="PASS" starttime="20201112 12:30:13.939" endtime="20201112 12:30:13.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.928" endtime="20201112 12:30:13.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.954" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:13.952" endtime="20201112 12:30:13.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:13.959" level="INFO">VALUE: [0.049028778, 0.059054347, 0.069081208, 0.079106764, 0.089132583, 0.099157764, 0.109185181, 0.119210931, 0.129235069, 0.139261375, 0.149287972, 0.159313958, 0.169340194, 0.179366042, 0.189393361, 0.199421486, 0.209447875, 0.219474347, 0.229501125, 0.239528903, 0.24955525, 0.259582069, 0.269609264, 0.279634958, 0.289661639, 0.299688528, 0.309712389, 0.319738222, 0.329763111, 0.339788139, 0.349814875, 0.359842417, 0.369867222, 0.379891014, 0.389916931, 0.399944681, 0.409973528, 0.419999125, 0.430025319, 0.440052111, 0.450077889, 0.460102514, 0.470128056, 0.480153833, 0.490180944, 0.500206764, 0.510233278, 0.520257833, 0.530284639, 0.540311, 0.550336861, 0.560361986, 0.570388375, 0.580413667, 0.59043825, 0.600464361, 0.610488736, 0.6205135, 0.630539014, 0.640562847, 0.650587819, 0.660614903, 0.670643056, 0.680670292, 0.690697708, 0.700724875, 0.710752722, 0.720781347, 0.730805736, 0.740831167, 0.750856875, 0.760885486, 0.770909819, 0.780937153, 0.790964625, 0.800992889, 0.811021069, 0.821047625, 0.831075042, 0.841101639, 0.851127958, 0.861152847, 0.871179847, 0.881207111, 0.891235292, 0.901262056, 0.911290472, 0.921317778, 0.931345236, 0.941372111, 0.951400083, 0.961427389, 0.971454542, 0.981481222, 0.991507694, 1.001535319, 1.011560556, 1.021586542, 1.031610681, 1.041635264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:13.957" endtime="20201112 12:30:13.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.944" endtime="20201112 12:30:13.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:13.968" endtime="20201112 12:30:13.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:13.976" endtime="20201112 12:30:13.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.972" endtime="20201112 12:30:14.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:13.963" endtime="20201112 12:30:14.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:11.243" endtime="20201112 12:30:14.003"></status>
</kw>
<msg timestamp="20201112 12:30:14.003" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:14.024" endtime="20201112 12:30:16.152"></status>
</kw>
<msg timestamp="20201112 12:30:16.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55566449, 'wakeups': [55576701, 55586700, 55596700, 55606700, 55616700...</msg>
<status status="PASS" starttime="20201112 12:30:14.021" endtime="20201112 12:30:16.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.160" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55566449, 'wakeups': [55576701, 55586700, 55596700, 55606700, 55616700...</msg>
<status status="PASS" starttime="20201112 12:30:16.155" endtime="20201112 12:30:16.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:16.162" endtime="20201112 12:30:16.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:14.013" endtime="20201112 12:30:16.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:14.008" endtime="20201112 12:30:16.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:16.175" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [55576701, 55586700, 55596700, 55606700, 55616700, 55626700, 55636700, 55646701, 55656700, 55666701, 55676702, 55686700, 55696701, 55706700, 5571...</msg>
<status status="PASS" starttime="20201112 12:30:16.170" endtime="20201112 12:30:16.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.185" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:16.183" endtime="20201112 12:30:16.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.190" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:16.187" endtime="20201112 12:30:16.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.177" endtime="20201112 12:30:16.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.202" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:30:16.200" endtime="20201112 12:30:16.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.206" level="INFO">VALUE: 55566449</msg>
<status status="PASS" starttime="20201112 12:30:16.204" endtime="20201112 12:30:16.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.193" endtime="20201112 12:30:16.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.219" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:16.216" endtime="20201112 12:30:16.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.223" level="INFO">VALUE: [55576701, 55586700, 55596700, 55606700, 55616700, 55626700, 55636700, 55646701, 55656700, 55666701, 55676702, 55686700, 55696701, 55706700, 55716700, 55726700, 55736700, 55746701, 55756700, 55766700, 55776700, 55786700, 55796700, 55806700, 55816700, 55826700, 55836700, 55846700, 55856700, 55866700, 55876700, 55886700, 55896700, 55906700, 55916700, 55926700, 55936700, 55946700, 55956700, 55966700, 55976700, 55986700, 55996700, 56006700, 56016700, 56026700, 56036700, 56046700, 56056700, 56066700, 56076700, 56086700, 56096700, 56106700, 56116700, 56126700, 56136701, 56146700, 56156700, 56166700, 56176701, 56186701, 56196700, 56206700, 56216700, 56226700, 56236700, 56246700, 56256700, 56266700, 56276700, 56286700, 56296700, 56306700, 56316700, 56326700, 56336700, 56346700, 56356700, 56366700, 56376700, 56386700, 56396700, 56406700, 56416700, 56426700, 56436700, 56446700, 56456700, 56466700, 56476700, 56486701, 56496700, 56506700, 56516700, 56526700, 56536700, 56546700, 56556701, 56566701]</msg>
<status status="PASS" starttime="20201112 12:30:16.221" endtime="20201112 12:30:16.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.210" endtime="20201112 12:30:16.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:16.245" endtime="20201112 12:30:16.590"></status>
</kw>
<msg timestamp="20201112 12:30:16.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037983986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048268139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:16.241" endtime="20201112 12:30:16.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037983986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048268139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:16.599" endtime="20201112 12:30:16.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:16.616" endtime="20201112 12:30:16.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.234" endtime="20201112 12:30:16.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.227" endtime="20201112 12:30:16.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:16.679" level="INFO">${RESULT} = {'time': [0.037983986, 0.048268139, 0.058297056, 0.068326486, 0.0783525, 0.088378889, 0.098405653, 0.108431375, 0.118458667, 0.128483292, 0.138509361, 0.148537028, 0.158563069, 0.168590889, 0.17861659...</msg>
<status status="PASS" starttime="20201112 12:30:16.624" endtime="20201112 12:30:16.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.690" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:30:16.687" endtime="20201112 12:30:16.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.694" level="INFO">VALUE: 0.037983986</msg>
<status status="PASS" starttime="20201112 12:30:16.692" endtime="20201112 12:30:16.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.681" endtime="20201112 12:30:16.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.707" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:16.705" endtime="20201112 12:30:16.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:16.712" level="INFO">VALUE: [0.048268139, 0.058297056, 0.068326486, 0.0783525, 0.088378889, 0.098405653, 0.108431375, 0.118458667, 0.128483292, 0.138509361, 0.148537028, 0.158563069, 0.168590889, 0.178616597, 0.188644125, 0.198671708, 0.208699167, 0.218727861, 0.228753472, 0.238779292, 0.248806681, 0.258834069, 0.268861014, 0.278887111, 0.288912653, 0.298938194, 0.308964542, 0.318990653, 0.329016292, 0.339041972, 0.349069125, 0.359095153, 0.369120903, 0.379146722, 0.389173847, 0.399201097, 0.409228125, 0.419255125, 0.429282931, 0.439309736, 0.449336306, 0.459363542, 0.469390292, 0.479417972, 0.489445681, 0.499472125, 0.509499681, 0.519526028, 0.529553153, 0.539579833, 0.549606903, 0.559634569, 0.569662264, 0.579689167, 0.589716778, 0.599744708, 0.609773653, 0.619799889, 0.629826847, 0.639853889, 0.649880292, 0.659903639, 0.669928, 0.679952014, 0.689978347, 0.700004583, 0.710030806, 0.720056806, 0.730086403, 0.740113972, 0.750141222, 0.760166403, 0.770193472, 0.780221014, 0.790248292, 0.800274986, 0.810302417, 0.820330861, 0.830358875, 0.840385833, 0.850414347, 0.860442875, 0.870470417, 0.880498861, 0.890526972, 0.900555125, 0.910584514, 0.920613486, 0.930642542, 0.940670264, 0.950698292, 0.960726458, 0.970752639, 0.980779931, 0.99080575, 1.000831, 1.010855292, 1.020880542, 1.030905889, 1.040930264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:16.710" endtime="20201112 12:30:16.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.698" endtime="20201112 12:30:16.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:16.721" endtime="20201112 12:30:16.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:16.729" endtime="20201112 12:30:16.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.725" endtime="20201112 12:30:16.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.716" endtime="20201112 12:30:16.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:14.004" endtime="20201112 12:30:16.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.491" endtime="20201112 12:30:16.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.489" endtime="20201112 12:30:16.756"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:30:16.761" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:16.784" endtime="20201112 12:30:18.911"></status>
</kw>
<msg timestamp="20201112 12:30:18.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58319035, 'wakeups': [58329328, 58339327, 58349325, 58359325, 58369325...</msg>
<status status="PASS" starttime="20201112 12:30:16.780" endtime="20201112 12:30:18.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:18.920" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58319035, 'wakeups': [58329328, 58339327, 58349325, 58359325, 58369325...</msg>
<status status="PASS" starttime="20201112 12:30:18.915" endtime="20201112 12:30:18.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:18.922" endtime="20201112 12:30:18.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.772" endtime="20201112 12:30:18.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.766" endtime="20201112 12:30:18.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:18.936" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [58329328, 58339327, 58349325, 58359325, 58369325, 58379324, 58389325, 58399325, 58409325, 58419324, 58429327, 58439325, 58449325, 58459325, 5846...</msg>
<status status="PASS" starttime="20201112 12:30:18.931" endtime="20201112 12:30:18.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:18.946" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:18.943" endtime="20201112 12:30:18.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:18.950" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:18.948" endtime="20201112 12:30:18.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:18.937" endtime="20201112 12:30:18.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:18.962" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:30:18.960" endtime="20201112 12:30:18.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:18.967" level="INFO">VALUE: 58319035</msg>
<status status="PASS" starttime="20201112 12:30:18.965" endtime="20201112 12:30:18.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:18.954" endtime="20201112 12:30:18.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:18.979" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:18.977" endtime="20201112 12:30:18.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:18.984" level="INFO">VALUE: [58329328, 58339327, 58349325, 58359325, 58369325, 58379324, 58389325, 58399325, 58409325, 58419324, 58429327, 58439325, 58449325, 58459325, 58469325, 58479325, 58489327, 58499325, 58509327, 58519327, 58529325, 58539325, 58549325, 58559325, 58569327, 58579325, 58589324, 58599325, 58609325, 58619324, 58629325, 58639325, 58649329, 58659325, 58669325, 58679324, 58689325, 58699327, 58709325, 58719327, 58729327, 58739325, 58749324, 58759324, 58769327, 58779325, 58789325, 58799325, 58809325, 58819324, 58829327, 58839325, 58849325, 58859325, 58869327, 58879329, 58889327, 58899325, 58909324, 58919324, 58929327, 58939325, 58949325, 58959325, 58969325, 58979324, 58989325, 58999325, 59009325, 59019325, 59029325, 59039325, 59049324, 59059325, 59069327, 59079327, 59089327, 59099325, 59109325, 59119325, 59129324, 59139327, 59149327, 59159327, 59169327, 59179324, 59189325, 59199329, 59209324, 59219325, 59229325, 59239325, 59249325, 59259327, 59269325, 59279324, 59289327, 59299324, 59309325, 59319325]</msg>
<status status="PASS" starttime="20201112 12:30:18.981" endtime="20201112 12:30:18.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:18.970" endtime="20201112 12:30:18.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:19.003" endtime="20201112 12:30:19.347"></status>
</kw>
<msg timestamp="20201112 12:30:19.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045344264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055664792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:19.000" endtime="20201112 12:30:19.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:19.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045344264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055664792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:19.355" endtime="20201112 12:30:19.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:19.373" endtime="20201112 12:30:19.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:18.992" endtime="20201112 12:30:19.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:18.988" endtime="20201112 12:30:19.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:19.437" level="INFO">${RESULT} = {'time': [0.045344264, 0.055664792, 0.065689056, 0.075713778, 0.085741167, 0.095767236, 0.105792681, 0.11581975, 0.125845681, 0.135872056, 0.1458965, 0.155925222, 0.165948972, 0.175975, 0.186001847, 0...</msg>
<status status="PASS" starttime="20201112 12:30:19.381" endtime="20201112 12:30:19.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:19.448" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:30:19.446" endtime="20201112 12:30:19.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:19.453" level="INFO">VALUE: 0.045344264</msg>
<status status="PASS" starttime="20201112 12:30:19.450" endtime="20201112 12:30:19.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:19.439" endtime="20201112 12:30:19.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:19.466" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:19.464" endtime="20201112 12:30:19.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:19.470" level="INFO">VALUE: [0.055664792, 0.065689056, 0.075713778, 0.085741167, 0.095767236, 0.105792681, 0.11581975, 0.125845681, 0.135872056, 0.1458965, 0.155925222, 0.165948972, 0.175975, 0.186001847, 0.196029028, 0.206055306, 0.216083542, 0.226107, 0.236136417, 0.246163222, 0.256188278, 0.266214069, 0.276240014, 0.286266097, 0.296295347, 0.306320083, 0.31634575, 0.326373542, 0.336400264, 0.346425222, 0.356452264, 0.366477722, 0.376507167, 0.386529222, 0.396555319, 0.406580403, 0.416606931, 0.426634278, 0.436656875, 0.446682833, 0.456708069, 0.4667305, 0.476754486, 0.486779944, 0.496809236, 0.506832583, 0.516858681, 0.526883833, 0.536908875, 0.546932319, 0.556958153, 0.566980361, 0.577005403, 0.587028986, 0.597056403, 0.607081708, 0.617104514, 0.627127264, 0.637151139, 0.647175056, 0.657202389, 0.667223222, 0.677245694, 0.687268333, 0.697291889, 0.707313528, 0.717338764, 0.727363319, 0.737388681, 0.747413667, 0.757438806, 0.767464, 0.777489819, 0.787516708, 0.797544472, 0.807568931, 0.817593764, 0.827616944, 0.837641653, 0.847666792, 0.857691278, 0.867720639, 0.877748014, 0.887774792, 0.897801764, 0.907824958, 0.917851917, 0.927882194, 0.937902944, 0.947929708, 0.957955903, 0.967981167, 0.978006889, 0.988037264, 0.998060917, 1.008085833, 1.018115417, 1.028137417, 1.03816425, 1.048189181] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:19.468" endtime="20201112 12:30:19.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:19.456" endtime="20201112 12:30:19.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:19.479" endtime="20201112 12:30:19.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:19.488" endtime="20201112 12:30:19.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:19.483" endtime="20201112 12:30:19.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:19.475" endtime="20201112 12:30:19.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.762" endtime="20201112 12:30:19.513"></status>
</kw>
<msg timestamp="20201112 12:30:19.514" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:19.534" endtime="20201112 12:30:21.662"></status>
</kw>
<msg timestamp="20201112 12:30:21.664" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61063145, 'wakeups': [61073438, 61083434, 61093434, 61103434, 61113435...</msg>
<status status="PASS" starttime="20201112 12:30:19.531" endtime="20201112 12:30:21.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:21.670" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61063145, 'wakeups': [61073438, 61083434, 61093434, 61103434, 61113435...</msg>
<status status="PASS" starttime="20201112 12:30:21.666" endtime="20201112 12:30:21.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:21.673" endtime="20201112 12:30:21.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:19.524" endtime="20201112 12:30:21.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:19.519" endtime="20201112 12:30:21.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:21.686" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [61073438, 61083434, 61093434, 61103434, 61113435, 61123437, 61133434, 61143437, 61153437, 61163434, 61173435, 61183435, 61193435, 61203434, 6121...</msg>
<status status="PASS" starttime="20201112 12:30:21.681" endtime="20201112 12:30:21.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:21.697" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:21.694" endtime="20201112 12:30:21.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:21.701" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:21.699" endtime="20201112 12:30:21.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:21.688" endtime="20201112 12:30:21.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:21.719" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:30:21.717" endtime="20201112 12:30:21.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:21.724" level="INFO">VALUE: 61063145</msg>
<status status="PASS" starttime="20201112 12:30:21.721" endtime="20201112 12:30:21.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:21.710" endtime="20201112 12:30:21.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:21.736" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:21.734" endtime="20201112 12:30:21.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:21.741" level="INFO">VALUE: [61073438, 61083434, 61093434, 61103434, 61113435, 61123437, 61133434, 61143437, 61153437, 61163434, 61173435, 61183435, 61193435, 61203434, 61213437, 61223435, 61233434, 61243435, 61253435, 61263434, 61273435, 61283435, 61293437, 61303435, 61313437, 61323437, 61333437, 61343435, 61353437, 61363435, 61373434, 61383435, 61393435, 61403437, 61413435, 61423435, 61433437, 61443435, 61453434, 61463437, 61473437, 61483437, 61493437, 61503435, 61513439, 61523435, 61533437, 61543435, 61553437, 61563437, 61573439, 61583435, 61593434, 61603435, 61613437, 61623435, 61633435, 61643437, 61653435, 61663435, 61673437, 61683435, 61693435, 61703437, 61713435, 61723437, 61733435, 61743435, 61753434, 61763435, 61773437, 61783435, 61793435, 61803434, 61813435, 61823437, 61833434, 61843435, 61853434, 61863435, 61873437, 61883435, 61893437, 61903435, 61913437, 61923435, 61933437, 61943434, 61953437, 61963434, 61973435, 61983435, 61993435, 62003435, 62013435, 62023439, 62033435, 62043435, 62053435, 62063435]</msg>
<status status="PASS" starttime="20201112 12:30:21.738" endtime="20201112 12:30:21.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:21.727" endtime="20201112 12:30:21.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:21.762" endtime="20201112 12:30:22.106"></status>
</kw>
<msg timestamp="20201112 12:30:22.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037769958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048090361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:21.759" endtime="20201112 12:30:22.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:22.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037769958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048090361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:22.114" endtime="20201112 12:30:22.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:22.131" endtime="20201112 12:30:22.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:21.751" endtime="20201112 12:30:22.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:21.744" endtime="20201112 12:30:22.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:22.194" level="INFO">${RESULT} = {'time': [0.037769958, 0.048090361, 0.058113, 0.06813975, 0.078165, 0.088191569, 0.098217792, 0.108238597, 0.118266153, 0.128291444, 0.138313306, 0.148339097, 0.158364361, 0.168390514, 0.178413875, 0....</msg>
<status status="PASS" starttime="20201112 12:30:22.140" endtime="20201112 12:30:22.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:22.205" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:30:22.202" endtime="20201112 12:30:22.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:22.209" level="INFO">VALUE: 0.037769958</msg>
<status status="PASS" starttime="20201112 12:30:22.207" endtime="20201112 12:30:22.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:22.196" endtime="20201112 12:30:22.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:22.222" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:22.220" endtime="20201112 12:30:22.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:22.227" level="INFO">VALUE: [0.048090361, 0.058113, 0.06813975, 0.078165, 0.088191569, 0.098217792, 0.108238597, 0.118266153, 0.128291444, 0.138313306, 0.148339097, 0.158364361, 0.168390514, 0.178413875, 0.188440528, 0.198462153, 0.208486125, 0.218511944, 0.228537167, 0.238560681, 0.248586778, 0.2586115, 0.268639806, 0.278662167, 0.288688542, 0.298712361, 0.308736819, 0.318758181, 0.328785431, 0.338808458, 0.348832542, 0.358858736, 0.368883556, 0.378909972, 0.388933042, 0.398956778, 0.408983639, 0.419007347, 0.429031403, 0.439059778, 0.449086208, 0.459113056, 0.469140264, 0.479166361, 0.489198542, 0.499223028, 0.509254486, 0.519280125, 0.529309347, 0.539336528, 0.549366819, 0.559390417, 0.569416917, 0.579445611, 0.589473264, 0.599496278, 0.609523639, 0.619553681, 0.629579528, 0.639606194, 0.649634333, 0.659657806, 0.669683347, 0.67970975, 0.689732819, 0.699759569, 0.709781944, 0.719807181, 0.729832236, 0.739860111, 0.749887514, 0.759911625, 0.769938792, 0.779963556, 0.789990861, 0.800019875, 0.810044653, 0.820071389, 0.830096431, 0.840122361, 0.850150194, 0.860173014, 0.870201431, 0.880224917, 0.890252944, 0.900277611, 0.910305653, 0.920327944, 0.930356097, 0.940378431, 0.950406556, 0.960432417, 0.970459194, 0.980484194, 0.990508292, 1.000535861, 1.010558361, 1.02058375, 1.030610194, 1.040634736] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:22.225" endtime="20201112 12:30:22.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:22.213" endtime="20201112 12:30:22.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:22.237" endtime="20201112 12:30:22.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:22.245" endtime="20201112 12:30:22.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:22.241" endtime="20201112 12:30:22.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:22.232" endtime="20201112 12:30:22.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:19.515" endtime="20201112 12:30:22.271"></status>
</kw>
<msg timestamp="20201112 12:30:22.271" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:22.295" endtime="20201112 12:30:24.422"></status>
</kw>
<msg timestamp="20201112 12:30:24.424" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63816395, 'wakeups': [63826687, 63836687, 63846687, 63856685, 63866685...</msg>
<status status="PASS" starttime="20201112 12:30:22.291" endtime="20201112 12:30:24.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.431" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63816395, 'wakeups': [63826687, 63836687, 63846687, 63856685, 63866685...</msg>
<status status="PASS" starttime="20201112 12:30:24.426" endtime="20201112 12:30:24.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:24.433" endtime="20201112 12:30:24.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:22.281" endtime="20201112 12:30:24.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:22.276" endtime="20201112 12:30:24.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:24.446" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [63826687, 63836687, 63846687, 63856685, 63866685, 63876684, 63886685, 63896685, 63906687, 63916685, 63926685, 63936687, 63946685, 63956685, 6396...</msg>
<status status="PASS" starttime="20201112 12:30:24.441" endtime="20201112 12:30:24.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.456" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:24.454" endtime="20201112 12:30:24.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.461" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:24.458" endtime="20201112 12:30:24.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.448" endtime="20201112 12:30:24.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.473" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:30:24.471" endtime="20201112 12:30:24.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.477" level="INFO">VALUE: 63816395</msg>
<status status="PASS" starttime="20201112 12:30:24.475" endtime="20201112 12:30:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.464" endtime="20201112 12:30:24.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.490" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:24.487" endtime="20201112 12:30:24.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.494" level="INFO">VALUE: [63826687, 63836687, 63846687, 63856685, 63866685, 63876684, 63886685, 63896685, 63906687, 63916685, 63926685, 63936687, 63946685, 63956685, 63966685, 63976685, 63986685, 63996685, 64006685, 64016687, 64026685, 64036684, 64046685, 64056685, 64066685, 64076685, 64086685, 64096685, 64106687, 64116687, 64126687, 64136684, 64146687, 64156685, 64166685, 64176685, 64186687, 64196685, 64206685, 64216684, 64226685, 64236684, 64246685, 64256685, 64266685, 64276685, 64286685, 64296685, 64306685, 64316684, 64326685, 64336685, 64346684, 64356685, 64366689, 64376685, 64386687, 64396685, 64406685, 64416689, 64426684, 64436685, 64446684, 64456687, 64466687, 64476685, 64486687, 64496685, 64506687, 64516685, 64526685, 64536687, 64546685, 64556687, 64566685, 64576684, 64586687, 64596685, 64606685, 64616685, 64626685, 64636689, 64646685, 64656685, 64666689, 64676687, 64686685, 64696685, 64706687, 64716685, 64726689, 64736684, 64746685, 64756685, 64766685, 64776684, 64786684, 64796687, 64806687, 64816685]</msg>
<status status="PASS" starttime="20201112 12:30:24.492" endtime="20201112 12:30:24.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.481" endtime="20201112 12:30:24.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:24.514" endtime="20201112 12:30:24.858"></status>
</kw>
<msg timestamp="20201112 12:30:24.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040452028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050770333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:24.511" endtime="20201112 12:30:24.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040452028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050770333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:24.867" endtime="20201112 12:30:24.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:24.884" endtime="20201112 12:30:24.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.504" endtime="20201112 12:30:24.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.498" endtime="20201112 12:30:24.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:24.947" level="INFO">${RESULT} = {'time': [0.040452028, 0.050770333, 0.060795083, 0.070820389, 0.080843611, 0.090869847, 0.100893167, 0.110919014, 0.120944042, 0.130971347, 0.140994097, 0.151019486, 0.161046528, 0.171068917, 0.181093...</msg>
<status status="PASS" starttime="20201112 12:30:24.892" endtime="20201112 12:30:24.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.958" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:30:24.956" endtime="20201112 12:30:24.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.963" level="INFO">VALUE: 0.040452028</msg>
<status status="PASS" starttime="20201112 12:30:24.960" endtime="20201112 12:30:24.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.949" endtime="20201112 12:30:24.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.976" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:24.974" endtime="20201112 12:30:24.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:24.981" level="INFO">VALUE: [0.050770333, 0.060795083, 0.070820389, 0.080843611, 0.090869847, 0.100893167, 0.110919014, 0.120944042, 0.130971347, 0.140994097, 0.151019486, 0.161046528, 0.171068917, 0.181093681, 0.191118681, 0.201144153, 0.21117, 0.221195639, 0.231221778, 0.241249264, 0.251272778, 0.261296444, 0.271323028, 0.281348597, 0.291373611, 0.301398083, 0.311426056, 0.321450958, 0.331476944, 0.341500569, 0.351525583, 0.361546403, 0.371574806, 0.381598361, 0.391624208, 0.401649236, 0.411676194, 0.421699875, 0.431726514, 0.441750639, 0.451777597, 0.461801431, 0.471828306, 0.481853514, 0.491879361, 0.501904167, 0.511930389, 0.521957667, 0.531985681, 0.542011694, 0.552038611, 0.562063972, 0.572089597, 0.582117278, 0.592148181, 0.602171208, 0.612200125, 0.622223792, 0.632249986, 0.642279681, 0.652300903, 0.662327597, 0.672353, 0.682382139, 0.692408681, 0.702432319, 0.712461597, 0.722487181, 0.732516083, 0.742541069, 0.752567597, 0.762595778, 0.772620806, 0.782648917, 0.792674139, 0.802698694, 0.812727667, 0.822750931, 0.832776014, 0.842801639, 0.852826819, 0.862856417, 0.872877958, 0.882903, 0.892933292, 0.902958542, 0.912984361, 0.923010681, 0.933039306, 0.943062806, 0.953092861, 0.963113319, 0.973139694, 0.983165167, 0.993191903, 1.003217833, 1.013244028, 1.023271847, 1.033297472, 1.043320917] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:24.978" endtime="20201112 12:30:24.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.966" endtime="20201112 12:30:24.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:24.989" endtime="20201112 12:30:24.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:24.998" endtime="20201112 12:30:25.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.993" endtime="20201112 12:30:25.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:24.985" endtime="20201112 12:30:25.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:22.272" endtime="20201112 12:30:25.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.758" endtime="20201112 12:30:25.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:16.756" endtime="20201112 12:30:25.025"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:30:25.030" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:25.052" endtime="20201112 12:30:27.179"></status>
</kw>
<msg timestamp="20201112 12:30:27.181" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66567048, 'wakeups': [66577389, 66587388, 66597388, 66607387, 66617387...</msg>
<status status="PASS" starttime="20201112 12:30:25.048" endtime="20201112 12:30:27.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.188" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66567048, 'wakeups': [66577389, 66587388, 66597388, 66607387, 66617387...</msg>
<status status="PASS" starttime="20201112 12:30:27.183" endtime="20201112 12:30:27.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:27.190" endtime="20201112 12:30:27.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:25.041" endtime="20201112 12:30:27.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:25.035" endtime="20201112 12:30:27.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:27.203" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [66577389, 66587388, 66597388, 66607387, 66617387, 66627387, 66637388, 66647387, 66657387, 66667387, 66677388, 66687388, 66697388, 66707388, 6671...</msg>
<status status="PASS" starttime="20201112 12:30:27.198" endtime="20201112 12:30:27.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.213" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:27.211" endtime="20201112 12:30:27.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.218" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:27.215" endtime="20201112 12:30:27.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.205" endtime="20201112 12:30:27.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.230" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:30:27.228" endtime="20201112 12:30:27.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.234" level="INFO">VALUE: 66567048</msg>
<status status="PASS" starttime="20201112 12:30:27.232" endtime="20201112 12:30:27.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.221" endtime="20201112 12:30:27.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.247" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:27.244" endtime="20201112 12:30:27.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.252" level="INFO">VALUE: [66577389, 66587388, 66597388, 66607387, 66617387, 66627387, 66637388, 66647387, 66657387, 66667387, 66677388, 66687388, 66697388, 66707388, 66717388, 66727387, 66737387, 66747388, 66757388, 66767388, 66777387, 66787387, 66797387, 66807387, 66817387, 66827388, 66837388, 66847388, 66857387, 66867388, 66877388, 66887387, 66897388, 66907387, 66917387, 66927388, 66937387, 66947388, 66957387, 66967388, 66977387, 66987387, 66997387, 67007387, 67017388, 67027387, 67037387, 67047387, 67057387, 67067387, 67077387, 67087388, 67097387, 67107388, 67117387, 67127387, 67137388, 67147388, 67157388, 67167387, 67177388, 67187387, 67197388, 67207387, 67217387, 67227388, 67237387, 67247387, 67257387, 67267388, 67277387, 67287388, 67297389, 67307387, 67317388, 67327387, 67337387, 67347387, 67357387, 67367387, 67377387, 67387388, 67397389, 67407387, 67417388, 67427387, 67437387, 67447387, 67457388, 67467388, 67477388, 67487387, 67497388, 67507388, 67517388, 67527387, 67537387, 67547388, 67557387, 67567388]</msg>
<status status="PASS" starttime="20201112 12:30:27.249" endtime="20201112 12:30:27.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.238" endtime="20201112 12:30:27.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:27.272" endtime="20201112 12:30:27.617"></status>
</kw>
<msg timestamp="20201112 12:30:27.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044687611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055052764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:27.269" endtime="20201112 12:30:27.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044687611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055052764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:27.626" endtime="20201112 12:30:27.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:27.643" endtime="20201112 12:30:27.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.262" endtime="20201112 12:30:27.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.257" endtime="20201112 12:30:27.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:27.706" level="INFO">${RESULT} = {'time': [0.044687611, 0.055052764, 0.065076028, 0.075100819, 0.085124444, 0.095149028, 0.105173319, 0.115200056, 0.125224667, 0.135250458, 0.145276736, 0.155304458, 0.165329792, 0.175355764, 0.185381...</msg>
<status status="PASS" starttime="20201112 12:30:27.652" endtime="20201112 12:30:27.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.717" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:30:27.715" endtime="20201112 12:30:27.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.722" level="INFO">VALUE: 0.044687611</msg>
<status status="PASS" starttime="20201112 12:30:27.719" endtime="20201112 12:30:27.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.708" endtime="20201112 12:30:27.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.735" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:27.733" endtime="20201112 12:30:27.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:27.740" level="INFO">VALUE: [0.055052764, 0.065076028, 0.075100819, 0.085124444, 0.095149028, 0.105173319, 0.115200056, 0.125224667, 0.135250458, 0.145276736, 0.155304458, 0.165329792, 0.175355764, 0.185381792, 0.195407806, 0.205432014, 0.215456806, 0.225482667, 0.235508361, 0.245533528, 0.255557958, 0.265582542, 0.275608694, 0.285635417, 0.29566175, 0.305688889, 0.315713847, 0.325739403, 0.335764347, 0.345790847, 0.355818722, 0.365844736, 0.375871583, 0.385896292, 0.395923069, 0.405951264, 0.415977167, 0.426005056, 0.436031722, 0.446059528, 0.456084361, 0.46611075, 0.476138375, 0.486163139, 0.496190778, 0.506216236, 0.516242778, 0.526269556, 0.536296486, 0.546321708, 0.556349458, 0.566377389, 0.576403583, 0.586430694, 0.596455792, 0.606481639, 0.616509056, 0.626535611, 0.636561792, 0.646587681, 0.656615653, 0.666640153, 0.676667153, 0.686691972, 0.696717139, 0.706743417, 0.716767986, 0.726794042, 0.736820153, 0.746847181, 0.756872583, 0.766898944, 0.776926611, 0.786950875, 0.796979069, 0.807004, 0.817029722, 0.827055056, 0.837081903, 0.847106653, 0.857131069, 0.867157486, 0.877184764, 0.887207333, 0.897232958, 0.907255583, 0.917280333, 0.92730425, 0.937329097, 0.947353653, 0.957378028, 0.967401458, 0.977427306, 0.987451375, 0.997477472, 1.007503111, 1.017528972, 1.027556431, 1.037581694, 1.047608139] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:27.737" endtime="20201112 12:30:27.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.725" endtime="20201112 12:30:27.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:27.748" endtime="20201112 12:30:27.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:27.757" endtime="20201112 12:30:27.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.752" endtime="20201112 12:30:27.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.744" endtime="20201112 12:30:27.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:25.032" endtime="20201112 12:30:27.784"></status>
</kw>
<msg timestamp="20201112 12:30:27.784" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:27.805" endtime="20201112 12:30:29.933"></status>
</kw>
<msg timestamp="20201112 12:30:29.935" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69313601, 'wakeups': [69323944, 69333941, 69343941, 69353940, 69363941...</msg>
<status status="PASS" starttime="20201112 12:30:27.802" endtime="20201112 12:30:29.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:29.942" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69313601, 'wakeups': [69323944, 69333941, 69343941, 69353940, 69363941...</msg>
<status status="PASS" starttime="20201112 12:30:29.937" endtime="20201112 12:30:29.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:29.944" endtime="20201112 12:30:29.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.795" endtime="20201112 12:30:29.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.789" endtime="20201112 12:30:29.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:29.958" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [69323944, 69333941, 69343941, 69353940, 69363941, 69373940, 69383940, 69393940, 69403941, 69413941, 69423941, 69433940, 69443940, 69453941, 6946...</msg>
<status status="PASS" starttime="20201112 12:30:29.953" endtime="20201112 12:30:29.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:29.969" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:29.967" endtime="20201112 12:30:29.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:29.974" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:29.971" endtime="20201112 12:30:29.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:29.960" endtime="20201112 12:30:29.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:29.986" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:30:29.984" endtime="20201112 12:30:29.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:29.990" level="INFO">VALUE: 69313601</msg>
<status status="PASS" starttime="20201112 12:30:29.988" endtime="20201112 12:30:29.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:29.977" endtime="20201112 12:30:29.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:30.003" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:30.000" endtime="20201112 12:30:30.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:30.008" level="INFO">VALUE: [69323944, 69333941, 69343941, 69353940, 69363941, 69373940, 69383940, 69393940, 69403941, 69413941, 69423941, 69433940, 69443940, 69453941, 69463940, 69473940, 69483941, 69493940, 69503940, 69513940, 69523941, 69533941, 69543941, 69553940, 69563941, 69573940, 69583941, 69593940, 69603940, 69613941, 69623941, 69633940, 69643940, 69653941, 69663940, 69673941, 69683940, 69693941, 69703941, 69713940, 69723940, 69733941, 69743940, 69753941, 69763940, 69773940, 69783941, 69793941, 69803940, 69813940, 69823941, 69833941, 69843941, 69853941, 69863941, 69873941, 69883941, 69893941, 69903941, 69913941, 69923941, 69933941, 69943940, 69953940, 69963941, 69973941, 69983941, 69993940, 70003941, 70013940, 70023941, 70033941, 70043940, 70053941, 70063940, 70073940, 70083940, 70093941, 70103940, 70113941, 70123940, 70133940, 70143941, 70153941, 70163941, 70173940, 70183940, 70193941, 70203941, 70213941, 70223940, 70233940, 70243940, 70253941, 70263941, 70273940, 70283940, 70293941, 70303941, 70313941]</msg>
<status status="PASS" starttime="20201112 12:30:30.005" endtime="20201112 12:30:30.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:29.994" endtime="20201112 12:30:30.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:30.027" endtime="20201112 12:30:30.370"></status>
</kw>
<msg timestamp="20201112 12:30:30.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037881667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048252292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:30.023" endtime="20201112 12:30:30.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:30.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037881667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048252292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:30.379" endtime="20201112 12:30:30.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:30.396" endtime="20201112 12:30:30.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.016" endtime="20201112 12:30:30.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.012" endtime="20201112 12:30:30.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:30.461" level="INFO">${RESULT} = {'time': [0.037881667, 0.048252292, 0.058276139, 0.068302097, 0.078326153, 0.088353569, 0.098378708, 0.108405236, 0.118431056, 0.128458361, 0.138484625, 0.148511403, 0.158536625, 0.168562444, 0.178589...</msg>
<status status="PASS" starttime="20201112 12:30:30.407" endtime="20201112 12:30:30.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:30.472" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:30:30.469" endtime="20201112 12:30:30.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:30.476" level="INFO">VALUE: 0.037881667</msg>
<status status="PASS" starttime="20201112 12:30:30.474" endtime="20201112 12:30:30.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.463" endtime="20201112 12:30:30.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:30.489" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:30.487" endtime="20201112 12:30:30.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:30.495" level="INFO">VALUE: [0.048252292, 0.058276139, 0.068302097, 0.078326153, 0.088353569, 0.098378708, 0.108405236, 0.118431056, 0.128458361, 0.138484625, 0.148511403, 0.158536625, 0.168562444, 0.178589528, 0.188615236, 0.198639625, 0.208664625, 0.218688847, 0.228714958, 0.238741681, 0.248769764, 0.258796486, 0.268824278, 0.278850458, 0.288879264, 0.298903569, 0.308931125, 0.318956972, 0.328983653, 0.339010486, 0.349036278, 0.359061236, 0.369086486, 0.379113778, 0.389139292, 0.399165944, 0.409191528, 0.419218111, 0.429243875, 0.439268431, 0.449294694, 0.459321236, 0.469345542, 0.479371625, 0.489396708, 0.499422972, 0.509452083, 0.519477181, 0.529501514, 0.539526736, 0.549553181, 0.559578722, 0.569604806, 0.579630611, 0.589658819, 0.599687208, 0.609715708, 0.619743667, 0.629773556, 0.639803181, 0.649832847, 0.659860208, 0.669886069, 0.679913931, 0.689944194, 0.699970972, 0.709997222, 0.720023042, 0.730051208, 0.740075653, 0.750102889, 0.760128875, 0.770154569, 0.780182375, 0.790208056, 0.800233583, 0.810260014, 0.820288028, 0.830314, 0.840341528, 0.850366819, 0.860392889, 0.870420542, 0.880447514, 0.890473569, 0.900498278, 0.910524708, 0.920550431, 0.930576069, 0.940601903, 0.950626792, 0.960652694, 0.970678167, 0.980704056, 0.990730083, 1.000755764, 1.010781861, 1.020809389, 1.030836583, 1.040862819] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:30.492" endtime="20201112 12:30:30.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.480" endtime="20201112 12:30:30.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:30.504" endtime="20201112 12:30:30.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:30.512" endtime="20201112 12:30:30.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.508" endtime="20201112 12:30:30.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.499" endtime="20201112 12:30:30.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:27.786" endtime="20201112 12:30:30.538"></status>
</kw>
<msg timestamp="20201112 12:30:30.538" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:30.559" endtime="20201112 12:30:32.686"></status>
</kw>
<msg timestamp="20201112 12:30:32.687" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72060237, 'wakeups': [72070580, 72080576, 72090577, 72100576, 72110576...</msg>
<status status="PASS" starttime="20201112 12:30:30.555" endtime="20201112 12:30:32.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:32.694" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72060237, 'wakeups': [72070580, 72080576, 72090577, 72100576, 72110576...</msg>
<status status="PASS" starttime="20201112 12:30:32.689" endtime="20201112 12:30:32.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:32.696" endtime="20201112 12:30:32.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.548" endtime="20201112 12:30:32.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.543" endtime="20201112 12:30:32.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:32.711" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [72070580, 72080576, 72090577, 72100576, 72110576, 72120577, 72130576, 72140577, 72150576, 72160576, 72170576, 72180577, 72190577, 72200576, 7221...</msg>
<status status="PASS" starttime="20201112 12:30:32.706" endtime="20201112 12:30:32.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:32.721" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:32.719" endtime="20201112 12:30:32.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:32.725" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:32.723" endtime="20201112 12:30:32.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:32.713" endtime="20201112 12:30:32.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:32.738" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:30:32.735" endtime="20201112 12:30:32.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:32.742" level="INFO">VALUE: 72060237</msg>
<status status="PASS" starttime="20201112 12:30:32.740" endtime="20201112 12:30:32.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:32.729" endtime="20201112 12:30:32.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:32.754" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:32.752" endtime="20201112 12:30:32.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:32.764" level="INFO">VALUE: [72070580, 72080576, 72090577, 72100576, 72110576, 72120577, 72130576, 72140577, 72150576, 72160576, 72170576, 72180577, 72190577, 72200576, 72210577, 72220576, 72230576, 72240577, 72250576, 72260576, 72270576, 72280576, 72290576, 72300577, 72310577, 72320577, 72330577, 72340576, 72350576, 72360576, 72370576, 72380576, 72390576, 72400577, 72410577, 72420577, 72430577, 72440576, 72450577, 72460576, 72470576, 72480576, 72490576, 72500576, 72510576, 72520576, 72530576, 72540576, 72550577, 72560576, 72570576, 72580576, 72590576, 72600576, 72610576, 72620576, 72630577, 72640577, 72650577, 72660577, 72670577, 72680577, 72690576, 72700577, 72710576, 72720577, 72730576, 72740577, 72750576, 72760576, 72770576, 72780577, 72790577, 72800577, 72810576, 72820577, 72830576, 72840577, 72850576, 72860576, 72870577, 72880576, 72890577, 72900576, 72910576, 72920576, 72930577, 72940577, 72950576, 72960576, 72970577, 72980576, 72990577, 73000576, 73010576, 73020576, 73030577, 73040576, 73050577, 73060576]</msg>
<status status="PASS" starttime="20201112 12:30:32.761" endtime="20201112 12:30:32.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:32.746" endtime="20201112 12:30:32.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:32.783" endtime="20201112 12:30:33.129"></status>
</kw>
<msg timestamp="20201112 12:30:33.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037625042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047995903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:32.780" endtime="20201112 12:30:33.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:33.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037625042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047995903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:33.137" endtime="20201112 12:30:33.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:33.154" endtime="20201112 12:30:33.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:32.772" endtime="20201112 12:30:33.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:32.768" endtime="20201112 12:30:33.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:33.219" level="INFO">${RESULT} = {'time': [0.037625042, 0.047995903, 0.058017625, 0.068044069, 0.078068681, 0.088093917, 0.098119972, 0.108145236, 0.118170708, 0.12819375, 0.138217333, 0.148240403, 0.158264403, 0.168286583, 0.1783075...</msg>
<status status="PASS" starttime="20201112 12:30:33.163" endtime="20201112 12:30:33.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:33.229" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:30:33.227" endtime="20201112 12:30:33.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:33.234" level="INFO">VALUE: 0.037625042</msg>
<status status="PASS" starttime="20201112 12:30:33.232" endtime="20201112 12:30:33.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.221" endtime="20201112 12:30:33.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:33.247" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:33.245" endtime="20201112 12:30:33.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:33.252" level="INFO">VALUE: [0.047995903, 0.058017625, 0.068044069, 0.078068681, 0.088093917, 0.098119972, 0.108145236, 0.118170708, 0.12819375, 0.138217333, 0.148240403, 0.158264403, 0.168286583, 0.178307583, 0.188333028, 0.198355472, 0.208379542, 0.218405778, 0.228428792, 0.238453569, 0.248479542, 0.258504569, 0.268530097, 0.278556597, 0.288581806, 0.298607486, 0.308633264, 0.318656764, 0.32868275, 0.338706861, 0.348731667, 0.358755472, 0.368780278, 0.378805542, 0.388829736, 0.398853028, 0.408876694, 0.418899597, 0.428924667, 0.438945764, 0.448969181, 0.458991792, 0.469014444, 0.479037347, 0.489060361, 0.499082528, 0.509105556, 0.519127931, 0.529152556, 0.539175278, 0.549199431, 0.559222944, 0.569247097, 0.579270847, 0.589295708, 0.59932, 0.609344667, 0.619368972, 0.629394861, 0.639421264, 0.649447625, 0.659472764, 0.669496722, 0.679521431, 0.68954475, 0.699570097, 0.709593042, 0.719616875, 0.729639667, 0.739662903, 0.749685986, 0.759709417, 0.769733181, 0.779756069, 0.789778083, 0.799802347, 0.809824917, 0.819849431, 0.829873403, 0.839897347, 0.84992275, 0.859945736, 0.869971347, 0.879994903, 0.890020458, 0.900045556, 0.910069847, 0.920092597, 0.930116139, 0.940139125, 0.950164, 0.960186653, 0.97021125, 0.980233903, 0.990258597, 1.000283639, 1.010309264, 1.020332875, 1.030358708, 1.040381403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:33.250" endtime="20201112 12:30:33.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.237" endtime="20201112 12:30:33.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:33.261" endtime="20201112 12:30:33.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:33.269" endtime="20201112 12:30:33.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.265" endtime="20201112 12:30:33.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.256" endtime="20201112 12:30:33.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:30.539" endtime="20201112 12:30:33.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:25.027" endtime="20201112 12:30:33.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:25.025" endtime="20201112 12:30:33.296"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:30:33.302" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:33.328" endtime="20201112 12:30:35.486"></status>
</kw>
<msg timestamp="20201112 12:30:35.488" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74823887, 'wakeups': [74834270, 74844269, 74854271, 74864269, 748742...</msg>
<status status="PASS" starttime="20201112 12:30:33.323" endtime="20201112 12:30:35.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:35.495" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74823887, 'wakeups': [74834270, 74844269, 74854271, 74864269, 748742...</msg>
<status status="PASS" starttime="20201112 12:30:35.490" endtime="20201112 12:30:35.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:35.497" endtime="20201112 12:30:35.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.313" endtime="20201112 12:30:35.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.307" endtime="20201112 12:30:35.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:35.510" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [74834270, 74844269, 74854271, 74864269, 74874270, 74884269, 74894269, 74904269, 74914269, 74924270, 74934270, 74944270, 74954269, 74964270, 749...</msg>
<status status="PASS" starttime="20201112 12:30:35.505" endtime="20201112 12:30:35.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:35.520" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:35.518" endtime="20201112 12:30:35.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:35.525" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:35.523" endtime="20201112 12:30:35.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:35.512" endtime="20201112 12:30:35.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:35.538" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:35.535" endtime="20201112 12:30:35.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:35.542" level="INFO">VALUE: 74823887</msg>
<status status="PASS" starttime="20201112 12:30:35.540" endtime="20201112 12:30:35.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:35.529" endtime="20201112 12:30:35.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:35.555" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:35.553" endtime="20201112 12:30:35.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:35.562" level="INFO">VALUE: [74834270, 74844269, 74854271, 74864269, 74874270, 74884269, 74894269, 74904269, 74914269, 74924270, 74934270, 74944270, 74954269, 74964270, 74974270, 74984269, 74994269, 75004269, 75014270, 75024270, 75034270, 75044269, 75054270, 75064269, 75074270, 75084269, 75094269, 75104269, 75114269, 75124269, 75134270, 75144269, 75154269, 75164270, 75174270, 75184270, 75194269, 75204269, 75214270, 75224271, 75234269, 75244270, 75254269, 75264269, 75274270, 75284269, 75294269, 75304269, 75314269, 75324269, 75334269, 75344269, 75354269, 75364269, 75374269, 75384270, 75394270, 75404269, 75414269, 75424269, 75434270, 75444269, 75454269, 75464269, 75474269, 75484269, 75494269, 75504270, 75514269, 75524270, 75534270, 75544270, 75554269, 75564269, 75574270, 75584269, 75594269, 75604269, 75614269, 75624269, 75634269, 75644270, 75654269, 75664269, 75674269, 75684270, 75694269, 75704269, 75714269, 75724269, 75734270, 75744270, 75754270, 75764269, 75774269, 75784269, 75794269, 75804269, 75814269, 75824269]</msg>
<status status="PASS" starttime="20201112 12:30:35.557" endtime="20201112 12:30:35.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:35.546" endtime="20201112 12:30:35.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:35.583" endtime="20201112 12:30:35.939"></status>
</kw>
<msg timestamp="20201112 12:30:35.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050614069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061021444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:35.579" endtime="20201112 12:30:35.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:35.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050614069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061021444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:35.947" endtime="20201112 12:30:35.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:35.965" endtime="20201112 12:30:35.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:35.571" endtime="20201112 12:30:35.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:35.566" endtime="20201112 12:30:35.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:36.030" level="INFO">${RESULT} = {'time': [0.050614069, 0.061021444, 0.071044458, 0.081071361, 0.091093236, 0.101118472, 0.111141667, 0.121167611, 0.13119225, 0.141217958, 0.151243792, 0.161267681, 0.171293417, 0.181318681, 0.1913436...</msg>
<status status="PASS" starttime="20201112 12:30:35.973" endtime="20201112 12:30:36.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:36.041" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:36.038" endtime="20201112 12:30:36.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:36.045" level="INFO">VALUE: 0.050614069</msg>
<status status="PASS" starttime="20201112 12:30:36.043" endtime="20201112 12:30:36.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:36.032" endtime="20201112 12:30:36.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:36.059" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:36.057" endtime="20201112 12:30:36.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:36.064" level="INFO">VALUE: [0.061021444, 0.071044458, 0.081071361, 0.091093236, 0.101118472, 0.111141667, 0.121167611, 0.13119225, 0.141217958, 0.151243792, 0.161267681, 0.171293417, 0.181318681, 0.191343639, 0.201367653, 0.211390097, 0.221414472, 0.231439014, 0.241463833, 0.251487764, 0.261512569, 0.271535764, 0.281561556, 0.291584361, 0.301610431, 0.311633139, 0.321657514, 0.331680917, 0.341705208, 0.351729181, 0.361754736, 0.371777847, 0.381801431, 0.391825542, 0.401847931, 0.411870708, 0.421893486, 0.431918069, 0.441944417, 0.451969333, 0.461991639, 0.472017514, 0.482041528, 0.492065833, 0.502091472, 0.512113931, 0.522138319, 0.532160458, 0.542184208, 0.552207472, 0.562231444, 0.572255069, 0.582278861, 0.592302347, 0.602325889, 0.612350458, 0.622373667, 0.632396111, 0.642419236, 0.652442194, 0.662466028, 0.672487694, 0.682509611, 0.692531917, 0.702554611, 0.712576875, 0.722598986, 0.732622556, 0.742644875, 0.752669528, 0.762694722, 0.772719569, 0.782744708, 0.792771681, 0.802798653, 0.812823153, 0.822847736, 0.832871958, 0.84289625, 0.852920319, 0.862944042, 0.872968708, 0.882992014, 0.893015653, 0.903040306, 0.913066111, 0.923090528, 0.933116833, 0.943142264, 0.953166361, 0.963193764, 0.973219889, 0.983246194, 0.993271014, 1.003297653, 1.013322806, 1.023348431, 1.03337525, 1.043401861, 1.053429486] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:36.061" endtime="20201112 12:30:36.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:36.049" endtime="20201112 12:30:36.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:36.073" endtime="20201112 12:30:36.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:36.081" endtime="20201112 12:30:36.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:36.077" endtime="20201112 12:30:36.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:36.068" endtime="20201112 12:30:36.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.303" endtime="20201112 12:30:36.107"></status>
</kw>
<msg timestamp="20201112 12:30:36.108" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:36.130" endtime="20201112 12:30:38.288"></status>
</kw>
<msg timestamp="20201112 12:30:38.289" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77618165, 'wakeups': [77628548, 77638547, 77648548, 77658548, 776685...</msg>
<status status="PASS" starttime="20201112 12:30:36.126" endtime="20201112 12:30:38.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.297" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77618165, 'wakeups': [77628548, 77638547, 77648548, 77658548, 776685...</msg>
<status status="PASS" starttime="20201112 12:30:38.291" endtime="20201112 12:30:38.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:38.299" endtime="20201112 12:30:38.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:36.118" endtime="20201112 12:30:38.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:36.113" endtime="20201112 12:30:38.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:38.312" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [77628548, 77638547, 77648548, 77658548, 77668547, 77678548, 77688547, 77698547, 77708548, 77718547, 77728548, 77738547, 77748547, 77758547, 777...</msg>
<status status="PASS" starttime="20201112 12:30:38.308" endtime="20201112 12:30:38.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.322" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:38.320" endtime="20201112 12:30:38.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.327" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:38.325" endtime="20201112 12:30:38.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.314" endtime="20201112 12:30:38.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.340" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:38.337" endtime="20201112 12:30:38.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.344" level="INFO">VALUE: 77618165</msg>
<status status="PASS" starttime="20201112 12:30:38.342" endtime="20201112 12:30:38.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.331" endtime="20201112 12:30:38.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.357" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:38.354" endtime="20201112 12:30:38.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.362" level="INFO">VALUE: [77628548, 77638547, 77648548, 77658548, 77668547, 77678548, 77688547, 77698547, 77708548, 77718547, 77728548, 77738547, 77748547, 77758547, 77768548, 77778547, 77788547, 77798547, 77808548, 77818547, 77828547, 77838548, 77848547, 77858547, 77868547, 77878547, 77888547, 77898548, 77908547, 77918547, 77928547, 77938548, 77948547, 77958547, 77968548, 77978548, 77988547, 77998548, 78008547, 78018547, 78028548, 78038547, 78048547, 78058547, 78068548, 78078547, 78088548, 78098547, 78108548, 78118548, 78128547, 78138548, 78148548, 78158548, 78168547, 78178548, 78188547, 78198547, 78208548, 78218547, 78228547, 78238547, 78248548, 78258547, 78268547, 78278548, 78288547, 78298547, 78308549, 78318547, 78328547, 78338547, 78348548, 78358547, 78368548, 78378547, 78388547, 78398548, 78408548, 78418547, 78428548, 78438548, 78448548, 78458547, 78468547, 78478547, 78488547, 78498547, 78508547, 78518548, 78528548, 78538547, 78548548, 78558547, 78568547, 78578547, 78588547, 78598548, 78608547, 78618547]</msg>
<status status="PASS" starttime="20201112 12:30:38.359" endtime="20201112 12:30:38.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.348" endtime="20201112 12:30:38.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:38.381" endtime="20201112 12:30:38.737"></status>
</kw>
<msg timestamp="20201112 12:30:38.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039463667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049873458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:38.378" endtime="20201112 12:30:38.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039463667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049873458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:38.745" endtime="20201112 12:30:38.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:38.763" endtime="20201112 12:30:38.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.370" endtime="20201112 12:30:38.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.365" endtime="20201112 12:30:38.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:38.828" level="INFO">${RESULT} = {'time': [0.039463667, 0.049873458, 0.05989875, 0.069926472, 0.079953222, 0.089980472, 0.10000675, 0.110031542, 0.120057222, 0.130082944, 0.140104931, 0.150130389, 0.160153056, 0.170176736, 0.18020034...</msg>
<status status="PASS" starttime="20201112 12:30:38.773" endtime="20201112 12:30:38.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.840" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:38.837" endtime="20201112 12:30:38.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.844" level="INFO">VALUE: 0.039463667</msg>
<status status="PASS" starttime="20201112 12:30:38.842" endtime="20201112 12:30:38.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.830" endtime="20201112 12:30:38.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.858" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:38.855" endtime="20201112 12:30:38.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:38.862" level="INFO">VALUE: [0.049873458, 0.05989875, 0.069926472, 0.079953222, 0.089980472, 0.10000675, 0.110031542, 0.120057222, 0.130082944, 0.140104931, 0.150130389, 0.160153056, 0.170176736, 0.180200347, 0.190226583, 0.200250111, 0.210273944, 0.220298444, 0.230323389, 0.240345542, 0.250369569, 0.260393931, 0.270416528, 0.280440583, 0.290465028, 0.300488583, 0.310512583, 0.320538722, 0.330563542, 0.3405875, 0.350613944, 0.360641111, 0.370666, 0.380690944, 0.390718139, 0.400744069, 0.410769611, 0.420796611, 0.430822292, 0.440847833, 0.450873875, 0.460897514, 0.470922625, 0.480947431, 0.490973264, 0.500997333, 0.511024389, 0.521049625, 0.531076681, 0.541102569, 0.551128028, 0.561155069, 0.571181375, 0.581206458, 0.591232111, 0.601259625, 0.611285208, 0.621311167, 0.631337236, 0.641361722, 0.651387917, 0.661412931, 0.671439694, 0.681461917, 0.691486056, 0.701513486, 0.711539292, 0.721564375, 0.731590764, 0.741613792, 0.751638639, 0.761664847, 0.771692139, 0.781715694, 0.791743069, 0.801768583, 0.811796556, 0.821824292, 0.831851292, 0.841876569, 0.851904611, 0.86193075, 0.871956806, 0.8819825, 0.892009389, 0.902035792, 0.912063736, 0.922091111, 0.932117819, 0.942144528, 0.952169847, 0.962195125, 0.972222847, 0.982248069, 0.992274611, 1.002299333, 1.012324931, 1.022351875, 1.032377083, 1.042402236] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:38.860" endtime="20201112 12:30:38.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.848" endtime="20201112 12:30:38.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:38.871" endtime="20201112 12:30:38.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:38.880" endtime="20201112 12:30:38.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.876" endtime="20201112 12:30:38.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.867" endtime="20201112 12:30:38.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:36.109" endtime="20201112 12:30:38.906"></status>
</kw>
<msg timestamp="20201112 12:30:38.906" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:38.928" endtime="20201112 12:30:41.087"></status>
</kw>
<msg timestamp="20201112 12:30:41.088" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80409194, 'wakeups': [80419577, 80429576, 80439576, 80449576, 804595...</msg>
<status status="PASS" starttime="20201112 12:30:38.924" endtime="20201112 12:30:41.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.095" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80409194, 'wakeups': [80419577, 80429576, 80439576, 80449576, 804595...</msg>
<status status="PASS" starttime="20201112 12:30:41.090" endtime="20201112 12:30:41.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:41.097" endtime="20201112 12:30:41.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.917" endtime="20201112 12:30:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.911" endtime="20201112 12:30:41.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:41.112" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [80419577, 80429576, 80439576, 80449576, 80459577, 80469576, 80479576, 80489577, 80499577, 80509576, 80519576, 80529577, 80539576, 80549577, 805...</msg>
<status status="PASS" starttime="20201112 12:30:41.107" endtime="20201112 12:30:41.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.122" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:41.120" endtime="20201112 12:30:41.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.127" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:41.124" endtime="20201112 12:30:41.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.114" endtime="20201112 12:30:41.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.140" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:41.138" endtime="20201112 12:30:41.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.145" level="INFO">VALUE: 80409194</msg>
<status status="PASS" starttime="20201112 12:30:41.142" endtime="20201112 12:30:41.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.131" endtime="20201112 12:30:41.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.157" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:41.155" endtime="20201112 12:30:41.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.162" level="INFO">VALUE: [80419577, 80429576, 80439576, 80449576, 80459577, 80469576, 80479576, 80489577, 80499577, 80509576, 80519576, 80529577, 80539576, 80549577, 80559576, 80569577, 80579576, 80589576, 80599577, 80609576, 80619577, 80629577, 80639577, 80649576, 80659576, 80669577, 80679576, 80689576, 80699576, 80709576, 80719576, 80729576, 80739576, 80749577, 80759576, 80769578, 80779576, 80789576, 80799576, 80809576, 80819577, 80829576, 80839576, 80849577, 80859577, 80869576, 80879576, 80889577, 80899576, 80909577, 80919576, 80929576, 80939577, 80949576, 80959576, 80969577, 80979577, 80989576, 80999577, 81009577, 81019576, 81029576, 81039576, 81049577, 81059577, 81069576, 81079576, 81089577, 81099576, 81109576, 81119577, 81129576, 81139577, 81149577, 81159577, 81169577, 81179576, 81189576, 81199576, 81209576, 81219577, 81229576, 81239577, 81249577, 81259576, 81269576, 81279576, 81289576, 81299576, 81309576, 81319576, 81329577, 81339576, 81349576, 81359577, 81369576, 81379577, 81389576, 81399577, 81409576]</msg>
<status status="PASS" starttime="20201112 12:30:41.159" endtime="20201112 12:30:41.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.148" endtime="20201112 12:30:41.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:41.182" endtime="20201112 12:30:41.539"></status>
</kw>
<msg timestamp="20201112 12:30:41.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038542167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048953389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:41.178" endtime="20201112 12:30:41.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038542167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048953389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:41.547" endtime="20201112 12:30:41.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:41.564" endtime="20201112 12:30:41.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.171" endtime="20201112 12:30:41.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.166" endtime="20201112 12:30:41.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:41.631" level="INFO">${RESULT} = {'time': [0.038542167, 0.048953389, 0.058980194, 0.069006472, 0.07903175, 0.089058819, 0.099083694, 0.109110028, 0.119135556, 0.129159722, 0.139183236, 0.149207625, 0.159234306, 0.169260083, 0.1792877...</msg>
<status status="PASS" starttime="20201112 12:30:41.573" endtime="20201112 12:30:41.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.642" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:41.639" endtime="20201112 12:30:41.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.646" level="INFO">VALUE: 0.038542167</msg>
<status status="PASS" starttime="20201112 12:30:41.644" endtime="20201112 12:30:41.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.633" endtime="20201112 12:30:41.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.660" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:41.657" endtime="20201112 12:30:41.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:41.664" level="INFO">VALUE: [0.048953389, 0.058980194, 0.069006472, 0.07903175, 0.089058819, 0.099083694, 0.109110028, 0.119135556, 0.129159722, 0.139183236, 0.149207625, 0.159234306, 0.169260083, 0.179287792, 0.189313458, 0.199341056, 0.209366917, 0.219393583, 0.229421778, 0.239447042, 0.249474792, 0.259501319, 0.269528792, 0.279555139, 0.289581958, 0.299609181, 0.309635444, 0.319661931, 0.329688319, 0.339712778, 0.349739208, 0.359766014, 0.369791736, 0.379818167, 0.389843333, 0.399871861, 0.409895431, 0.419920986, 0.429946431, 0.439970639, 0.449996194, 0.460019028, 0.470044, 0.480069778, 0.490095597, 0.500119875, 0.510145708, 0.520172944, 0.530198222, 0.540223736, 0.550249028, 0.560274944, 0.570301236, 0.580326097, 0.590352028, 0.600378972, 0.610405014, 0.620430083, 0.630457042, 0.640483083, 0.6505085, 0.660533681, 0.670558972, 0.680585653, 0.690610875, 0.700635542, 0.710661083, 0.720686417, 0.730710028, 0.740734792, 0.750761625, 0.760785653, 0.770812375, 0.780838167, 0.790864778, 0.800891278, 0.810915986, 0.820940319, 0.830964972, 0.840989917, 0.851017125, 0.861042347, 0.871069111, 0.881095153, 0.891120681, 0.901147347, 0.911173, 0.921197931, 0.931223514, 0.941249347, 0.951275319, 0.961302472, 0.971326764, 0.981351917, 0.991378653, 1.001403681, 1.011431042, 1.021456431, 1.031483514, 1.041507139] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:41.662" endtime="20201112 12:30:41.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.650" endtime="20201112 12:30:41.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:41.674" endtime="20201112 12:30:41.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:41.683" endtime="20201112 12:30:41.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.678" endtime="20201112 12:30:41.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:41.669" endtime="20201112 12:30:41.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:38.908" endtime="20201112 12:30:41.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.299" endtime="20201112 12:30:41.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:33.297" endtime="20201112 12:30:41.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.959" endtime="20201112 12:30:41.710"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:29:18.835" endtime="20201112 12:30:41.713" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:29:16.318" endtime="20201112 12:30:41.723"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:26:47.307" endtime="20201112 12:30:41.768"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_samr21-xpro</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
