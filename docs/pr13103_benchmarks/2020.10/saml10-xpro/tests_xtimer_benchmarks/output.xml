<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:25:48.971" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.552" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:49.560" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:25:50.685" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:49.550" endtime="20201112 12:25:50.686"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.688" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:25:50.687" endtime="20201112 12:25:50.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.549" endtime="20201112 12:25:50.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:50.691" endtime="20201112 12:25:50.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.690" endtime="20201112 12:25:50.878"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.891" endtime="20201112 12:25:50.904"></status>
</kw>
<msg timestamp="20201112 12:25:50.904" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.890" endtime="20201112 12:25:50.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.907" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.905" endtime="20201112 12:25:50.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.910" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:50.908" endtime="20201112 12:25:50.910"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:50.887" endtime="20201112 12:25:50.911"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:50.885" endtime="20201112 12:25:50.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.884" endtime="20201112 12:25:50.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:50.916" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:50.915" endtime="20201112 12:25:50.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.913" endtime="20201112 12:25:50.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.883" endtime="20201112 12:25:50.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.882" endtime="20201112 12:25:50.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.918" endtime="20201112 12:25:50.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.881" endtime="20201112 12:25:50.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.921" endtime="20201112 12:25:50.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.879" endtime="20201112 12:25:50.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.547" endtime="20201112 12:25:50.923"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:50.930" endtime="20201112 12:25:50.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.928" endtime="20201112 12:25:50.950"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.971" endtime="20201112 12:25:50.990"></status>
</kw>
<msg timestamp="20201112 12:25:50.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.968" endtime="20201112 12:25:50.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.994" endtime="20201112 12:25:50.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.004" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:50.999" endtime="20201112 12:25:51.004"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:50.962" endtime="20201112 12:25:51.006"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:50.957" endtime="20201112 12:25:51.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.955" endtime="20201112 12:25:51.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:51.015" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:51.014" endtime="20201112 12:25:51.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.009" endtime="20201112 12:25:51.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.954" endtime="20201112 12:25:51.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.953" endtime="20201112 12:25:51.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.019" endtime="20201112 12:25:51.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.952" endtime="20201112 12:25:51.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.950" endtime="20201112 12:25:51.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.927" endtime="20201112 12:25:51.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.041" endtime="20201112 12:25:51.054"></status>
</kw>
<msg timestamp="20201112 12:25:51.055" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.038" endtime="20201112 12:25:51.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.059" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.057" endtime="20201112 12:25:51.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.060" endtime="20201112 12:25:51.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.031" endtime="20201112 12:25:51.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.027" endtime="20201112 12:25:51.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.067" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:25:51.066" endtime="20201112 12:25:51.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.069" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:25:51.068" endtime="20201112 12:25:51.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.063" endtime="20201112 12:25:51.070"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:25:50.924" endtime="20201112 12:25:51.071" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:49.085" endtime="20201112 12:25:51.074"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.130" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:51.138" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:25:52.875" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:51.129" endtime="20201112 12:25:52.876"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.879" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:25:52.877" endtime="20201112 12:25:52.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.127" endtime="20201112 12:25:52.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:52.881" endtime="20201112 12:25:53.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.880" endtime="20201112 12:25:53.109"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.121" endtime="20201112 12:25:53.134"></status>
</kw>
<msg timestamp="20201112 12:25:53.134" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.120" endtime="20201112 12:25:53.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.137" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.135" endtime="20201112 12:25:53.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.140" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:53.138" endtime="20201112 12:25:53.140"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:53.117" endtime="20201112 12:25:53.141"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:53.115" endtime="20201112 12:25:53.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.114" endtime="20201112 12:25:53.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:53.146" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:53.145" endtime="20201112 12:25:53.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.143" endtime="20201112 12:25:53.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.113" endtime="20201112 12:25:53.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.112" endtime="20201112 12:25:53.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.147" endtime="20201112 12:25:53.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.111" endtime="20201112 12:25:53.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.150" endtime="20201112 12:25:53.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.110" endtime="20201112 12:25:53.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.126" endtime="20201112 12:25:53.152"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:53.160" endtime="20201112 12:25:53.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.157" endtime="20201112 12:25:53.180"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.193" endtime="20201112 12:25:53.205"></status>
</kw>
<msg timestamp="20201112 12:25:53.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.191" endtime="20201112 12:25:53.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.208" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.207" endtime="20201112 12:25:53.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.212" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:53.210" endtime="20201112 12:25:53.212"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:53.189" endtime="20201112 12:25:53.212"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:53.186" endtime="20201112 12:25:53.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.185" endtime="20201112 12:25:53.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:53.217" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:53.216" endtime="20201112 12:25:53.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.214" endtime="20201112 12:25:53.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.184" endtime="20201112 12:25:53.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.184" endtime="20201112 12:25:53.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.219" endtime="20201112 12:25:53.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.182" endtime="20201112 12:25:53.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.181" endtime="20201112 12:25:53.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.155" endtime="20201112 12:25:53.221"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:25:53.224" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.232" endtime="20201112 12:25:53.242"></status>
</kw>
<msg timestamp="20201112 12:25:53.244" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.230" endtime="20201112 12:25:53.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.245" endtime="20201112 12:25:53.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.248" endtime="20201112 12:25:53.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.228" endtime="20201112 12:25:53.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.226" endtime="20201112 12:25:53.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.259" endtime="20201112 12:25:53.551"></status>
</kw>
<msg timestamp="20201112 12:25:53.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063204125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063205306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.257" endtime="20201112 12:25:53.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063204125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063205306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.556" endtime="20201112 12:25:53.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.564" endtime="20201112 12:25:53.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.254" endtime="20201112 12:25:53.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.252" endtime="20201112 12:25:53.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.571" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:53.570" endtime="20201112 12:25:53.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.576" level="INFO">VALUE: [{'time': 0.063204125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063205306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.063231833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6526999999998413e-05, 'source_diff': 2.6526999999998413e-05}, {'time': 0.063232917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.063252347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9430000000000835e-05, 'source_diff': 1.9430000000000835e-05}, {'time': 0.063253389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.041999999992771e-06, 'source_diff': 1.041999999992771e-06}, {'time': 0.063273139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9750000000012813e-05, 'source_diff': 1.9750000000012813e-05}, {'time': 0.063274194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.063291458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999989066e-05, 'source_diff': 1.7263999999989066e-05}, {'time': 0.0632925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000066487e-06, 'source_diff': 1.0420000000066487e-06}, {'time': 0.063307903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540299999999717e-05, 'source_diff': 1.540299999999717e-05}, {'time': 0.063308944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.041000000007175e-06, 'source_diff': 1.041000000007175e-06}, {'time': 0.063338347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9402999999997292e-05, 'source_diff': 2.9402999999997292e-05}, {'time': 0.063339403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.063365056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.063366181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999907168e-06, 'source_diff': 1.1249999999907168e-06}, {'time': 0.063377764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1583000000009447e-05, 'source_diff': 1.1583000000009447e-05}, {'time': 0.063378819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.063409472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0652999999991604e-05, 'source_diff': 3.0652999999991604e-05}, {'time': 0.063410528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.063433694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3166000000005016e-05, 'source_diff': 2.3166000000005016e-05}, {'time': 0.063434764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0700000000057885e-06, 'source_diff': 1.0700000000057885e-06}, {'time': 0.063459486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4721999999990918e-05, 'source_diff': 2.4721999999990918e-05}, {'time': 0.063460556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0700000000057885e-06, 'source_diff': 1.0700000000057885e-06}, {'time': 0.063489625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9068999999992684e-05, 'source_diff': 2.9068999999992684e-05}, {'time': 0.063490708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000128237e-06, 'source_diff': 1.0830000000128237e-06}, {'time': 0.063506111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540299999999717e-05, 'source_diff': 1.540299999999717e-05}, {'time': 0.063507125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0139999999936311e-06, 'source_diff': 1.0139999999936311e-06}, {'time': 0.063525944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.881900000000325e-05, 'source_diff': 1.881900000000325e-05}, {'time': 0.063527028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.063556708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9680000000004148e-05, 'source_diff': 2.9680000000004148e-05}, {'time': 0.063557778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999919108e-06, 'source_diff': 1.0699999999919108e-06}, {'time': 0.063585611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.783300000000488e-05, 'source_diff': 2.783300000000488e-05}, {'time': 0.063586667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.06359925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2582999999996569e-05, 'source_diff': 1.2582999999996569e-05}, {'time': 0.063600333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.063616306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5973000000002457e-05, 'source_diff': 1.5973000000002457e-05}, {'time': 0.063617417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.063646778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.936100000000552e-05, 'source_diff': 2.936100000000552e-05}, {'time': 0.063647833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.063668208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.037500000000303e-05, 'source_diff': 2.037500000000303e-05}, {'time': 0.063669264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.063692736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3471999999996607e-05, 'source_diff': 2.3471999999996607e-05}, {'time': 0.063693792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.063705472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.063706569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000054547e-06, 'source_diff': 1.0970000000054547e-06}, {'time': 0.063731222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.063732278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.063755444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3165999999991138e-05, 'source_diff': 2.3165999999991138e-05}, {'time': 0.063756528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0840000000122973e-06, 'source_diff': 1.0840000000122973e-06}, {'time': 0.063770028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.063771083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.063782736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.063783792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.063803528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9735999999992426e-05, 'source_diff': 1.9735999999992426e-05}, {'time': 0.063804597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.069000000006315e-06, 'source_diff': 1.069000000006315e-06}, {'time': 0.063825278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.068099999999462e-05, 'source_diff': 2.068099999999462e-05}, {'time': 0.063826347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.069000000006315e-06, 'source_diff': 1.069000000006315e-06}, {'time': 0.063857292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0944999999990563e-05, 'source_diff': 3.0944999999990563e-05}, {'time': 0.063858361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.069000000006315e-06, 'source_diff': 1.069000000006315e-06}, {'time': 0.063884, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5638999999993972e-05, 'source_diff': 2.5638999999993972e-05}, {'time': 0.063885125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000045945e-06, 'source_diff': 1.1250000000045945e-06}, {'time': 0.063898903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3778000000005952e-05, 'source_diff': 1.3778000000005952e-05}, {'time': 0.063899944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0409999999932973e-06, 'source_diff': 1.0409999999932973e-06}, {'time': 0.063928736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8791999999999707e-05, 'source_diff': 2.8791999999999707e-05}, {'time': 0.063929792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.063941764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.063942819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.063971583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8764000000000567e-05, 'source_diff': 2.8764000000000567e-05}, {'time': 0.063972639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.063998931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6291999999997206e-05, 'source_diff': 2.6291999999997206e-05}, {'time': 0.064, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.069000000006315e-06, 'source_diff': 1.069000000006315e-06}, {'time': 0.064029694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.969399999999678e-05, 'source_diff': 2.969399999999678e-05}, {'time': 0.064030764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0700000000057885e-06, 'source_diff': 1.0700000000057885e-06}, {'time': 0.064048028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7264000000002944e-05, 'source_diff': 1.7264000000002944e-05}, {'time': 0.064049083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.064077528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8444999999988063e-05, 'source_diff': 2.8444999999988063e-05}, {'time': 0.064078583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.064093361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4778000000006952e-05, 'source_diff': 1.4778000000006952e-05}, {'time': 0.064094458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000054547e-06, 'source_diff': 1.0970000000054547e-06}, {'time': 0.064120694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6235999999998927e-05, 'source_diff': 2.6235999999998927e-05}, {'time': 0.06412175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.064140875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999484e-05, 'source_diff': 1.912499999999484e-05}, {'time': 0.064141931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.064158875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6944000000004844e-05, 'source_diff': 1.6944000000004844e-05}, {'time': 0.064159986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.064184028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4042000000001895e-05, 'source_diff': 2.4042000000001895e-05}, {'time': 0.064185111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.064215111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0000000000002247e-05, 'source_diff': 3.0000000000002247e-05}, {'time': 0.064216181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999919108e-06, 'source_diff': 1.0699999999919108e-06}, {'time': 0.064244417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8236000000000927e-05, 'source_diff': 2.8236000000000927e-05}, {'time': 0.064245389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.064268556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.316700000000449e-05, 'source_diff': 2.316700000000449e-05}, {'time': 0.064269625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0689999999924371e-06, 'source_diff': 1.0689999999924371e-06}, {'time': 0.064288431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8805999999996215e-05, 'source_diff': 1.8805999999996215e-05}, {'time': 0.064289486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000136839e-06, 'source_diff': 1.0550000000136839e-06}, {'time': 0.064309236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.064310306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999919108e-06, 'source_diff': 1.0699999999919108e-06}, {'time': 0.064331306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000007124e-05, 'source_diff': 2.1000000000007124e-05}, {'time': 0.064332361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:53.572" endtime="20201112 12:25:53.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.567" endtime="20201112 12:25:53.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:53.602" level="INFO">${debug-compressed} = {'diff': [0, 1.1810000000028742e-06, 2.6526999999998413e-05, 1.0839999999984196e-06, 1.9430000000000835e-05, 1.041999999992771e-06, 1.9750000000012813e-05, 1.054999999999806e-06, 1.7263999999989066e-0...</msg>
<status status="PASS" starttime="20201112 12:25:53.579" endtime="20201112 12:25:53.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.606" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:53.605" endtime="20201112 12:25:53.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.611" level="INFO">VALUE: {'diff': [0, 1.1810000000028742e-06, 2.6526999999998413e-05, 1.0839999999984196e-06, 1.9430000000000835e-05, 1.041999999992771e-06, 1.9750000000012813e-05, 1.054999999999806e-06, 1.7263999999989066e-05, 1.0420000000066487e-06, 1.540299999999717e-05, 1.041000000007175e-06, 2.9402999999997292e-05, 1.0559999999992797e-06, 2.565300000000048e-05, 1.1249999999907168e-06, 1.1583000000009447e-05, 1.054999999999806e-06, 3.0652999999991604e-05, 1.0559999999992797e-06, 2.3166000000005016e-05, 1.0700000000057885e-06, 2.4721999999990918e-05, 1.0700000000057885e-06, 2.9068999999992684e-05, 1.0830000000128237e-06, 1.540299999999717e-05, 1.0139999999936311e-06, 1.881900000000325e-05, 1.0839999999984196e-06, 2.9680000000004148e-05, 1.0699999999919108e-06, 2.783300000000488e-05, 1.0559999999992797e-06, 1.2582999999996569e-05, 1.082999999998946e-06, 1.5973000000002457e-05, 1.1109999999980857e-06, 2.936100000000552e-05, 1.054999999999806e-06, 2.037500000000303e-05, 1.0559999999992797e-06, 2.3471999999996607e-05, 1.0559999999992797e-06, 1.1680000000000024e-05, 1.0970000000054547e-06, 2.465299999999948e-05, 1.0559999999992797e-06, 2.3165999999991138e-05, 1.0840000000122973e-06, 1.3499999999999623e-05, 1.054999999999806e-06, 1.1653000000000358e-05, 1.0559999999992797e-06, 1.9735999999992426e-05, 1.069000000006315e-06, 2.068099999999462e-05, 1.069000000006315e-06, 3.0944999999990563e-05, 1.069000000006315e-06, 2.5638999999993972e-05, 1.1250000000045945e-06, 1.3778000000005952e-05, 1.0409999999932973e-06, 2.8791999999999707e-05, 1.0559999999992797e-06, 1.1971999999998983e-05, 1.054999999999806e-06, 2.8764000000000567e-05, 1.0559999999992797e-06, 2.6291999999997206e-05, 1.069000000006315e-06, 2.969399999999678e-05, 1.0700000000057885e-06, 1.7264000000002944e-05, 1.054999999999806e-06, 2.8444999999988063e-05, 1.054999999999806e-06, 1.4778000000006952e-05, 1.0970000000054547e-06, 2.6235999999998927e-05, 1.0559999999992797e-06, 1.912499999999484e-05, 1.0559999999992797e-06, 1.6944000000004844e-05, 1.1109999999980857e-06, 2.4042000000001895e-05, 1.082999999998946e-06, 3.0000000000002247e-05, 1.0699999999919108e-06, 2.8236000000000927e-05, 9.720000000018603e-07, 2.316700000000449e-05, 1.0689999999924371e-06, 1.8805999999996215e-05, 1.0550000000136839e-06, 1.9749999999998935e-05, 1.0699999999919108e-06, 2.1000000000007124e-05, 1.054999999999806e-06], 'source_diff': [0, 1.1810000000028742e-06, 2.6526999999998413e-05, 1.0839999999984196e-06, 1.9430000000000835e-05, 1.041999999992771e-06, 1.9750000000012813e-05, 1.054999999999806e-06, 1.7263999999989066e-05, 1.0420000000066487e-06, 1.540299999999717e-05, 1.041000000007175e-06, 2.9402999999997292e-05, 1.0559999999992797e-06, 2.565300000000048e-05, 1.1249999999907168e-06, 1.1583000000009447e-05, 1.054999999999806e-06, 3.0652999999991604e-05, 1.0559999999992797e-06, 2.3166000000005016e-05, 1.0700000000057885e-06, 2.4721999999990918e-05, 1.0700000000057885e-06, 2.9068999999992684e-05, 1.0830000000128237e-06, 1.540299999999717e-05, 1.0139999999936311e-06, 1.881900000000325e-05, 1.0839999999984196e-06, 2.9680000000004148e-05, 1.0699999999919108e-06, 2.783300000000488e-05, 1.0559999999992797e-06, 1.2582999999996569e-05, 1.082999999998946e-06, 1.5973000000002457e-05, 1.1109999999980857e-06, 2.936100000000552e-05, 1.054999999999806e-06, 2.037500000000303e-05, 1.0559999999992797e-06, 2.3471999999996607e-05, 1.0559999999992797e-06, 1.1680000000000024e-05, 1.0970000000054547e-06, 2.465299999999948e-05, 1.0559999999992797e-06, 2.3165999999991138e-05, 1.0840000000122973e-06, 1.3499999999999623e-05, 1.054999999999806e-06, 1.1653000000000358e-05, 1.0559999999992797e-06, 1.9735999999992426e-05, 1.069000000006315e-06, 2.068099999999462e-05, 1.069000000006315e-06, 3.0944999999990563e-05, 1.069000000006315e-06, 2.5638999999993972e-05, 1.1250000000045945e-06, 1.3778000000005952e-05, 1.0409999999932973e-06, 2.8791999999999707e-05, 1.0559999999992797e-06, 1.1971999999998983e-05, 1.054999999999806e-06, 2.8764000000000567e-05, 1.0559999999992797e-06, 2.6291999999997206e-05, 1.069000000006315e-06, 2.969399999999678e-05, 1.0700000000057885e-06, 1.7264000000002944e-05, 1.054999999999806e-06, 2.8444999999988063e-05, 1.054999999999806e-06, 1.4778000000006952e-05, 1.0970000000054547e-06, 2.6235999999998927e-05, 1.0559999999992797e-06, 1.912499999999484e-05, 1.0559999999992797e-06, 1.6944000000004844e-05, 1.1109999999980857e-06, 2.4042000000001895e-05, 1.082999999998946e-06, 3.0000000000002247e-05, 1.0699999999919108e-06, 2.8236000000000927e-05, 9.720000000018603e-07, 2.316700000000449e-05, 1.0689999999924371e-06, 1.8805999999996215e-05, 1.0550000000136839e-06, 1.9749999999998935e-05, 1.0699999999919108e-06, 2.1000000000007124e-05, 1.054999999999806e-06], 'time': [0.063204125, 0.063205306, 0.063231833, 0.063232917, 0.063252347, 0.063253389, 0.063273139, 0.063274194, 0.063291458, 0.0632925, 0.063307903, 0.063308944, 0.063338347, 0.063339403, 0.063365056, 0.063366181, 0.063377764, 0.063378819, 0.063409472, 0.063410528, 0.063433694, 0.063434764, 0.063459486, 0.063460556, 0.063489625, 0.063490708, 0.063506111, 0.063507125, 0.063525944, 0.063527028, 0.063556708, 0.063557778, 0.063585611, 0.063586667, 0.06359925, 0.063600333, 0.063616306, 0.063617417, 0.063646778, 0.063647833, 0.063668208, 0.063669264, 0.063692736, 0.063693792, 0.063705472, 0.063706569, 0.063731222, 0.063732278, 0.063755444, 0.063756528, 0.063770028, 0.063771083, 0.063782736, 0.063783792, 0.063803528, 0.063804597, 0.063825278, 0.063826347, 0.063857292, 0.063858361, 0.063884, 0.063885125, 0.063898903, 0.063899944, 0.063928736, 0.063929792, 0.063941764, 0.063942819, 0.063971583, 0.063972639, 0.063998931, 0.064, 0.064029694, 0.064030764, 0.064048028, 0.064049083, 0.064077528, 0.064078583, 0.064093361, 0.064094458, 0.064120694, 0.06412175, 0.064140875, 0.064141931, 0.064158875, 0.064159986, 0.064184028, 0.064185111, 0.064215111, 0.064216181, 0.064244417, 0.064245389, 0.064268556, 0.064269625, 0.064288431, 0.064289486, 0.064309236, 0.064310306, 0.064331306, 0.064332361], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:53.608" endtime="20201112 12:25:53.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.603" endtime="20201112 12:25:53.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:53.616" level="INFO">${RESULT} = [{'time': 0.063205306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.063232917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:53.613" endtime="20201112 12:25:53.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:53.630" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1810000000028742e-06, 1.0839999999984196e-06, 1.041999999992771e-06, 1.054999999999806e-06, 1.0420000000066487e-06, 1.041000000007175e-06, 1.0559999999992797e-06, 1.1249999999907168e-06, 1...</msg>
<status status="PASS" starttime="20201112 12:25:53.617" endtime="20201112 12:25:53.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.635" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:53.634" endtime="20201112 12:25:53.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.637" level="INFO">VALUE: [1.1810000000028742e-06, 1.0839999999984196e-06, 1.041999999992771e-06, 1.054999999999806e-06, 1.0420000000066487e-06, 1.041000000007175e-06, 1.0559999999992797e-06, 1.1249999999907168e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0700000000057885e-06, 1.0700000000057885e-06, 1.0830000000128237e-06, 1.0139999999936311e-06, 1.0839999999984196e-06, 1.0699999999919108e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0970000000054547e-06, 1.0559999999992797e-06, 1.0840000000122973e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.069000000006315e-06, 1.069000000006315e-06, 1.069000000006315e-06, 1.1250000000045945e-06, 1.0409999999932973e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.069000000006315e-06, 1.0700000000057885e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0970000000054547e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.0699999999919108e-06, 9.720000000018603e-07, 1.0689999999924371e-06, 1.0550000000136839e-06, 1.0699999999919108e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:25:53.636" endtime="20201112 12:25:53.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.631" endtime="20201112 12:25:53.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.640" endtime="20201112 12:25:53.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:53.644" endtime="20201112 12:25:53.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.642" endtime="20201112 12:25:53.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.639" endtime="20201112 12:25:53.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.224" endtime="20201112 12:25:53.665"></status>
</kw>
<msg timestamp="20201112 12:25:53.665" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.673" endtime="20201112 12:25:53.682"></status>
</kw>
<msg timestamp="20201112 12:25:53.682" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.671" endtime="20201112 12:25:53.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.683" endtime="20201112 12:25:53.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.686" endtime="20201112 12:25:53.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.669" endtime="20201112 12:25:53.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.667" endtime="20201112 12:25:53.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.695" endtime="20201112 12:25:53.982"></status>
</kw>
<msg timestamp="20201112 12:25:53.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018754736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018755903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.693" endtime="20201112 12:25:53.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018754736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018755903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.986" endtime="20201112 12:25:53.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.994" endtime="20201112 12:25:53.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.691" endtime="20201112 12:25:53.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.689" endtime="20201112 12:25:53.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.002" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:54.001" endtime="20201112 12:25:54.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.008" level="INFO">VALUE: [{'time': 0.018754736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018755903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018781514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5610999999998302e-05, 'source_diff': 2.5610999999998302e-05}, {'time': 0.018782569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018811056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.848700000000065e-05, 'source_diff': 2.848700000000065e-05}, {'time': 0.018812111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018824056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1944999999999317e-05, 'source_diff': 1.1944999999999317e-05}, {'time': 0.018825111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018852028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.69170000000013e-05, 'source_diff': 2.69170000000013e-05}, {'time': 0.018853083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018868472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.538900000000107e-05, 'source_diff': 1.538900000000107e-05}, {'time': 0.018869542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018881167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1625000000001218e-05, 'source_diff': 1.1625000000001218e-05}, {'time': 0.018882236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018901986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.018903042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018915931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2889000000002038e-05, 'source_diff': 1.2889000000002038e-05}, {'time': 0.018917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018934861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.786100000000096e-05, 'source_diff': 1.786100000000096e-05}, {'time': 0.018935917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01896625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333000000000443e-05, 'source_diff': 3.0333000000000443e-05}, {'time': 0.018967333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018982083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.018983139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019005681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.01900675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019032736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5986000000002146e-05, 'source_diff': 2.5986000000002146e-05}, {'time': 0.019033792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019062556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8764000000000567e-05, 'source_diff': 2.8764000000000567e-05}, {'time': 0.019063625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019090514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6888999999998692e-05, 'source_diff': 2.6888999999998692e-05}, {'time': 0.019091625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019106653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.019107708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019133375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.566700000000005e-05, 'source_diff': 2.566700000000005e-05}, {'time': 0.019134431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019152625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.019153681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019169375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.019170431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019192986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2554999999997022e-05, 'source_diff': 2.2554999999997022e-05}, {'time': 0.019194069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019220708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6638999999998442e-05, 'source_diff': 2.6638999999998442e-05}, {'time': 0.019221694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019234583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2888999999998568e-05, 'source_diff': 1.2888999999998568e-05}, {'time': 0.019235694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019263806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8112000000000276e-05, 'source_diff': 2.8112000000000276e-05}, {'time': 0.019264861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019276833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.019277903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019308833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.093000000000193e-05, 'source_diff': 3.093000000000193e-05}, {'time': 0.019309931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.019335875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5943999999999967e-05, 'source_diff': 2.5943999999999967e-05}, {'time': 0.019336931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019348889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.019349972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019363167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.019364222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019394875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.019395917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.0194085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2583000000000039e-05, 'source_diff': 1.2583000000000039e-05}, {'time': 0.019409569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019426819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019427875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019455708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7832999999997943e-05, 'source_diff': 2.7832999999997943e-05}, {'time': 0.019456778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019479028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2249999999997966e-05, 'source_diff': 2.2249999999997966e-05}, {'time': 0.019480139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019491347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1207999999998663e-05, 'source_diff': 1.1207999999998663e-05}, {'time': 0.019492403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01951925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6846999999999982e-05, 'source_diff': 2.6846999999999982e-05}, {'time': 0.019520347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019534153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.019535194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019560278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5084000000001605e-05, 'source_diff': 2.5084000000001605e-05}, {'time': 0.019561306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019591944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.06379999999995e-05, 'source_diff': 3.06379999999995e-05}, {'time': 0.019593, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019622722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9721999999999388e-05, 'source_diff': 2.9721999999999388e-05}, {'time': 0.019623778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019647889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019648931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019668056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.019669111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019682028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.019683069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019707792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.472299999999733e-05, 'source_diff': 2.472299999999733e-05}, {'time': 0.019708861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019732653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3791999999998176e-05, 'source_diff': 2.3791999999998176e-05}, {'time': 0.019733708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019759736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6028000000000856e-05, 'source_diff': 2.6028000000000856e-05}, {'time': 0.019760778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019773944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3166000000001954e-05, 'source_diff': 1.3166000000001954e-05}, {'time': 0.019775028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019804722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9694000000000248e-05, 'source_diff': 2.9694000000000248e-05}, {'time': 0.019805792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019819292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.019820347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019849778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.94309999999999e-05, 'source_diff': 2.94309999999999e-05}, {'time': 0.019850819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:54.003" endtime="20201112 12:25:54.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.998" endtime="20201112 12:25:54.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:54.034" level="INFO">${debug-compressed} = {'diff': [0, 1.1669999999998348e-06, 2.5610999999998302e-05, 1.054999999999806e-06, 2.848700000000065e-05, 1.054999999999806e-06, 1.1944999999999317e-05, 1.054999999999806e-06, 2.69170000000013e-05, 1...</msg>
<status status="PASS" starttime="20201112 12:25:54.010" endtime="20201112 12:25:54.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.038" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:54.037" endtime="20201112 12:25:54.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.042" level="INFO">VALUE: {'diff': [0, 1.1669999999998348e-06, 2.5610999999998302e-05, 1.054999999999806e-06, 2.848700000000065e-05, 1.054999999999806e-06, 1.1944999999999317e-05, 1.054999999999806e-06, 2.69170000000013e-05, 1.054999999999806e-06, 1.538900000000107e-05, 1.0699999999988496e-06, 1.1625000000001218e-05, 1.068999999999376e-06, 1.9749999999998935e-05, 1.0559999999992797e-06, 1.2889000000002038e-05, 1.068999999999376e-06, 1.786100000000096e-05, 1.0559999999992797e-06, 3.0333000000000443e-05, 1.082999999998946e-06, 1.4750000000000874e-05, 1.0559999999992797e-06, 2.2542000000000395e-05, 1.068999999999376e-06, 2.5986000000002146e-05, 1.0559999999992797e-06, 2.8764000000000567e-05, 1.068999999999376e-06, 2.6888999999998692e-05, 1.1110000000015552e-06, 1.5028000000000263e-05, 1.054999999999806e-06, 2.566700000000005e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0560000000027492e-06, 2.2554999999997022e-05, 1.0830000000024154e-06, 2.6638999999998442e-05, 9.860000000014302e-07, 1.2888999999998568e-05, 1.1110000000015552e-06, 2.8112000000000276e-05, 1.054999999999806e-06, 1.1971999999998983e-05, 1.0699999999988496e-06, 3.093000000000193e-05, 1.0979999999979895e-06, 2.5943999999999967e-05, 1.0560000000027492e-06, 1.1957999999999414e-05, 1.082999999998946e-06, 1.3195000000000567e-05, 1.054999999999806e-06, 3.065299999999854e-05, 1.0419999999997098e-06, 1.2583000000000039e-05, 1.0690000000028455e-06, 1.7249999999999904e-05, 1.0559999999992797e-06, 2.7832999999997943e-05, 1.070000000002319e-06, 2.2249999999997966e-05, 1.1110000000015552e-06, 1.1207999999998663e-05, 1.0559999999992797e-06, 2.6846999999999982e-05, 1.0970000000019853e-06, 1.3805999999998153e-05, 1.0410000000002362e-06, 2.5084000000001605e-05, 1.02800000000014e-06, 3.06379999999995e-05, 1.0559999999992797e-06, 2.9721999999999388e-05, 1.0560000000027492e-06, 2.411100000000027e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.054999999999806e-06, 1.2917000000001178e-05, 1.0410000000002362e-06, 2.472299999999733e-05, 1.0690000000028455e-06, 2.3791999999998176e-05, 1.054999999999806e-06, 2.6028000000000856e-05, 1.0419999999997098e-06, 1.3166000000001954e-05, 1.0839999999984196e-06, 2.9694000000000248e-05, 1.0699999999988496e-06, 1.3499999999999623e-05, 1.054999999999806e-06, 2.94309999999999e-05, 1.0410000000002362e-06], 'source_diff': [0, 1.1669999999998348e-06, 2.5610999999998302e-05, 1.054999999999806e-06, 2.848700000000065e-05, 1.054999999999806e-06, 1.1944999999999317e-05, 1.054999999999806e-06, 2.69170000000013e-05, 1.054999999999806e-06, 1.538900000000107e-05, 1.0699999999988496e-06, 1.1625000000001218e-05, 1.068999999999376e-06, 1.9749999999998935e-05, 1.0559999999992797e-06, 1.2889000000002038e-05, 1.068999999999376e-06, 1.786100000000096e-05, 1.0559999999992797e-06, 3.0333000000000443e-05, 1.082999999998946e-06, 1.4750000000000874e-05, 1.0559999999992797e-06, 2.2542000000000395e-05, 1.068999999999376e-06, 2.5986000000002146e-05, 1.0559999999992797e-06, 2.8764000000000567e-05, 1.068999999999376e-06, 2.6888999999998692e-05, 1.1110000000015552e-06, 1.5028000000000263e-05, 1.054999999999806e-06, 2.566700000000005e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0560000000027492e-06, 2.2554999999997022e-05, 1.0830000000024154e-06, 2.6638999999998442e-05, 9.860000000014302e-07, 1.2888999999998568e-05, 1.1110000000015552e-06, 2.8112000000000276e-05, 1.054999999999806e-06, 1.1971999999998983e-05, 1.0699999999988496e-06, 3.093000000000193e-05, 1.0979999999979895e-06, 2.5943999999999967e-05, 1.0560000000027492e-06, 1.1957999999999414e-05, 1.082999999998946e-06, 1.3195000000000567e-05, 1.054999999999806e-06, 3.065299999999854e-05, 1.0419999999997098e-06, 1.2583000000000039e-05, 1.0690000000028455e-06, 1.7249999999999904e-05, 1.0559999999992797e-06, 2.7832999999997943e-05, 1.070000000002319e-06, 2.2249999999997966e-05, 1.1110000000015552e-06, 1.1207999999998663e-05, 1.0559999999992797e-06, 2.6846999999999982e-05, 1.0970000000019853e-06, 1.3805999999998153e-05, 1.0410000000002362e-06, 2.5084000000001605e-05, 1.02800000000014e-06, 3.06379999999995e-05, 1.0559999999992797e-06, 2.9721999999999388e-05, 1.0560000000027492e-06, 2.411100000000027e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.054999999999806e-06, 1.2917000000001178e-05, 1.0410000000002362e-06, 2.472299999999733e-05, 1.0690000000028455e-06, 2.3791999999998176e-05, 1.054999999999806e-06, 2.6028000000000856e-05, 1.0419999999997098e-06, 1.3166000000001954e-05, 1.0839999999984196e-06, 2.9694000000000248e-05, 1.0699999999988496e-06, 1.3499999999999623e-05, 1.054999999999806e-06, 2.94309999999999e-05, 1.0410000000002362e-06], 'time': [0.018754736, 0.018755903, 0.018781514, 0.018782569, 0.018811056, 0.018812111, 0.018824056, 0.018825111, 0.018852028, 0.018853083, 0.018868472, 0.018869542, 0.018881167, 0.018882236, 0.018901986, 0.018903042, 0.018915931, 0.018917, 0.018934861, 0.018935917, 0.01896625, 0.018967333, 0.018982083, 0.018983139, 0.019005681, 0.01900675, 0.019032736, 0.019033792, 0.019062556, 0.019063625, 0.019090514, 0.019091625, 0.019106653, 0.019107708, 0.019133375, 0.019134431, 0.019152625, 0.019153681, 0.019169375, 0.019170431, 0.019192986, 0.019194069, 0.019220708, 0.019221694, 0.019234583, 0.019235694, 0.019263806, 0.019264861, 0.019276833, 0.019277903, 0.019308833, 0.019309931, 0.019335875, 0.019336931, 0.019348889, 0.019349972, 0.019363167, 0.019364222, 0.019394875, 0.019395917, 0.0194085, 0.019409569, 0.019426819, 0.019427875, 0.019455708, 0.019456778, 0.019479028, 0.019480139, 0.019491347, 0.019492403, 0.01951925, 0.019520347, 0.019534153, 0.019535194, 0.019560278, 0.019561306, 0.019591944, 0.019593, 0.019622722, 0.019623778, 0.019647889, 0.019648931, 0.019668056, 0.019669111, 0.019682028, 0.019683069, 0.019707792, 0.019708861, 0.019732653, 0.019733708, 0.019759736, 0.019760778, 0.019773944, 0.019775028, 0.019804722, 0.019805792, 0.019819292, 0.019820347, 0.019849778, 0.019850819], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:54.039" endtime="20201112 12:25:54.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.035" endtime="20201112 12:25:54.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:54.048" level="INFO">${RESULT} = [{'time': 0.018755903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018782569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:54.045" endtime="20201112 12:25:54.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:54.062" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0...</msg>
<status status="PASS" starttime="20201112 12:25:54.049" endtime="20201112 12:25:54.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.066" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:54.065" endtime="20201112 12:25:54.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.069" level="INFO">VALUE: [1.1669999999998348e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0830000000024154e-06, 9.860000000014302e-07, 1.1110000000015552e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0979999999979895e-06, 1.0560000000027492e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.1110000000015552e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.0410000000002362e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0410000000002362e-06]</msg>
<status status="PASS" starttime="20201112 12:25:54.067" endtime="20201112 12:25:54.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.063" endtime="20201112 12:25:54.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.072" endtime="20201112 12:25:54.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:54.075" endtime="20201112 12:25:54.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.074" endtime="20201112 12:25:54.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.070" endtime="20201112 12:25:54.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.665" endtime="20201112 12:25:54.096"></status>
</kw>
<msg timestamp="20201112 12:25:54.096" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.104" endtime="20201112 12:25:54.113"></status>
</kw>
<msg timestamp="20201112 12:25:54.114" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.102" endtime="20201112 12:25:54.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.116" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.115" endtime="20201112 12:25:54.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.117" endtime="20201112 12:25:54.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.100" endtime="20201112 12:25:54.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.098" endtime="20201112 12:25:54.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.127" endtime="20201112 12:25:54.413"></status>
</kw>
<msg timestamp="20201112 12:25:54.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018759208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018760319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.126" endtime="20201112 12:25:54.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018759208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018760319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.417" endtime="20201112 12:25:54.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.426" endtime="20201112 12:25:54.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.123" endtime="20201112 12:25:54.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.121" endtime="20201112 12:25:54.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.432" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:54.431" endtime="20201112 12:25:54.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.437" level="INFO">VALUE: [{'time': 0.018759208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018760319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018784917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4598000000000675e-05, 'source_diff': 2.4598000000000675e-05}, {'time': 0.018786014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018805736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.018806778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018827764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.018828819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018851986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.316700000000102e-05, 'source_diff': 2.316700000000102e-05}, {'time': 0.018853056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018879958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6901999999998788e-05, 'source_diff': 2.6901999999998788e-05}, {'time': 0.018881028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018897972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6943999999997905e-05, 'source_diff': 1.6943999999997905e-05}, {'time': 0.018899028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018925625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.65970000000032e-05, 'source_diff': 2.65970000000032e-05}, {'time': 0.018926653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018937931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.018938986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018969556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.056999999999713e-05, 'source_diff': 3.056999999999713e-05}, {'time': 0.018970639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018985694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.505499999999993e-05, 'source_diff': 1.505499999999993e-05}, {'time': 0.018986764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019006486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.019007542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019036028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8486000000001177e-05, 'source_diff': 2.8486000000001177e-05}, {'time': 0.019037056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019057417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.019058486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019074181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694999999999598e-05, 'source_diff': 1.5694999999999598e-05}, {'time': 0.019075236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019101861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.662500000000234e-05, 'source_diff': 2.662500000000234e-05}, {'time': 0.019102917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019118292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.537499999999803e-05, 'source_diff': 1.537499999999803e-05}, {'time': 0.019119333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019144056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.47230000000008e-05, 'source_diff': 2.47230000000008e-05}, {'time': 0.019145111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019158611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.019159667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019184764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.50970000000017e-05, 'source_diff': 2.50970000000017e-05}, {'time': 0.019185778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019211417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.563900000000091e-05, 'source_diff': 2.563900000000091e-05}, {'time': 0.019212472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019236569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4096999999997232e-05, 'source_diff': 2.4096999999997232e-05}, {'time': 0.019237653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019258931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1277999999999575e-05, 'source_diff': 2.1277999999999575e-05}, {'time': 0.019259986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019285653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.566700000000005e-05, 'source_diff': 2.566700000000005e-05}, {'time': 0.019286708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019314556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7848000000000456e-05, 'source_diff': 2.7848000000000456e-05}, {'time': 0.019315653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019345333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9680000000000678e-05, 'source_diff': 2.9680000000000678e-05}, {'time': 0.019346375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019368292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.191699999999977e-05, 'source_diff': 2.191699999999977e-05}, {'time': 0.019369347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.01939875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.019399792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019418306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8514000000000724e-05, 'source_diff': 1.8514000000000724e-05}, {'time': 0.019419347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019442514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.316700000000102e-05, 'source_diff': 2.316700000000102e-05}, {'time': 0.019443583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019461819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8236000000001334e-05, 'source_diff': 1.8236000000001334e-05}, {'time': 0.019462833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0139999999971006e-06, 'source_diff': 1.0139999999971006e-06}, {'time': 0.019491903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9070000000002566e-05, 'source_diff': 2.9070000000002566e-05}, {'time': 0.019492972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019515514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.019516569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019528833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.019529889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019541542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1652999999996888e-05, 'source_diff': 1.1652999999996888e-05}, {'time': 0.019542597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019559528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.019560597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019583444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.284699999999945e-05, 'source_diff': 2.284699999999945e-05}, {'time': 0.0195845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019615139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.019616208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.0196425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6292000000000676e-05, 'source_diff': 2.6292000000000676e-05}, {'time': 0.019643542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019663611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.006900000000103e-05, 'source_diff': 2.006900000000103e-05}, {'time': 0.019664667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.0196875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.283299999999988e-05, 'source_diff': 2.283299999999988e-05}, {'time': 0.019688569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019712042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.347299999999955e-05, 'source_diff': 2.347299999999955e-05}, {'time': 0.019713139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019733486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.034700000000042e-05, 'source_diff': 2.034700000000042e-05}, {'time': 0.019734583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019763347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8764000000000567e-05, 'source_diff': 2.8764000000000567e-05}, {'time': 0.019764375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019785361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.019786417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019801792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.537499999999803e-05, 'source_diff': 1.537499999999803e-05}, {'time': 0.019802861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019819792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.693099999999781e-05, 'source_diff': 1.693099999999781e-05}, {'time': 0.019820847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019833736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2889000000002038e-05, 'source_diff': 1.2889000000002038e-05}, {'time': 0.019834792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019865125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333000000000443e-05, 'source_diff': 3.0333000000000443e-05}, {'time': 0.019866208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019885931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.972299999999927e-05, 'source_diff': 1.972299999999927e-05}, {'time': 0.019886986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:54.433" endtime="20201112 12:25:54.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.429" endtime="20201112 12:25:54.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:54.464" level="INFO">${debug-compressed} = {'diff': [0, 1.1110000000015552e-06, 2.4598000000000675e-05, 1.0969999999985158e-06, 1.9721999999999795e-05, 1.0419999999997098e-06, 2.0986000000000615e-05, 1.054999999999806e-06, 2.316700000000102e-0...</msg>
<status status="PASS" starttime="20201112 12:25:54.440" endtime="20201112 12:25:54.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.468" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:54.467" endtime="20201112 12:25:54.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.472" level="INFO">VALUE: {'diff': [0, 1.1110000000015552e-06, 2.4598000000000675e-05, 1.0969999999985158e-06, 1.9721999999999795e-05, 1.0419999999997098e-06, 2.0986000000000615e-05, 1.054999999999806e-06, 2.316700000000102e-05, 1.0699999999988496e-06, 2.6901999999998788e-05, 1.070000000002319e-06, 1.6943999999997905e-05, 1.0559999999992797e-06, 2.65970000000032e-05, 1.02800000000014e-06, 1.1277999999999982e-05, 1.054999999999806e-06, 3.056999999999713e-05, 1.0830000000024154e-06, 1.505499999999993e-05, 1.0699999999988496e-06, 1.9721999999999795e-05, 1.0559999999992797e-06, 2.8486000000001177e-05, 1.02800000000014e-06, 2.036099999999999e-05, 1.068999999999376e-06, 1.5694999999999598e-05, 1.054999999999806e-06, 2.662500000000234e-05, 1.0559999999992797e-06, 1.537499999999803e-05, 1.0410000000002362e-06, 2.47230000000008e-05, 1.054999999999806e-06, 1.3499999999999623e-05, 1.0559999999992797e-06, 2.50970000000017e-05, 1.01400000000057e-06, 2.563900000000091e-05, 1.054999999999806e-06, 2.4096999999997232e-05, 1.084000000001889e-06, 2.1277999999999575e-05, 1.054999999999806e-06, 2.566700000000005e-05, 1.054999999999806e-06, 2.7848000000000456e-05, 1.0969999999985158e-06, 2.9680000000000678e-05, 1.0419999999997098e-06, 2.191699999999977e-05, 1.054999999999806e-06, 2.9403000000000762e-05, 1.0419999999997098e-06, 1.8514000000000724e-05, 1.0410000000002362e-06, 2.316700000000102e-05, 1.068999999999376e-06, 1.8236000000001334e-05, 1.0139999999971006e-06, 2.9070000000002566e-05, 1.068999999999376e-06, 2.2542000000000395e-05, 1.054999999999806e-06, 1.2263999999997943e-05, 1.0560000000027492e-06, 1.1652999999996888e-05, 1.054999999999806e-06, 1.693100000000128e-05, 1.068999999999376e-06, 2.284699999999945e-05, 1.0560000000027492e-06, 3.063899999999897e-05, 1.068999999999376e-06, 2.6292000000000676e-05, 1.0419999999997098e-06, 2.006900000000103e-05, 1.0559999999992797e-06, 2.283299999999988e-05, 1.068999999999376e-06, 2.347299999999955e-05, 1.0970000000019853e-06, 2.034700000000042e-05, 1.0969999999985158e-06, 2.8764000000000567e-05, 1.02800000000014e-06, 2.0986000000000615e-05, 1.0559999999992797e-06, 1.537499999999803e-05, 1.0690000000028455e-06, 1.693099999999781e-05, 1.054999999999806e-06, 1.2889000000002038e-05, 1.0559999999992797e-06, 3.0333000000000443e-05, 1.082999999998946e-06, 1.972299999999927e-05, 1.054999999999806e-06], 'source_diff': [0, 1.1110000000015552e-06, 2.4598000000000675e-05, 1.0969999999985158e-06, 1.9721999999999795e-05, 1.0419999999997098e-06, 2.0986000000000615e-05, 1.054999999999806e-06, 2.316700000000102e-05, 1.0699999999988496e-06, 2.6901999999998788e-05, 1.070000000002319e-06, 1.6943999999997905e-05, 1.0559999999992797e-06, 2.65970000000032e-05, 1.02800000000014e-06, 1.1277999999999982e-05, 1.054999999999806e-06, 3.056999999999713e-05, 1.0830000000024154e-06, 1.505499999999993e-05, 1.0699999999988496e-06, 1.9721999999999795e-05, 1.0559999999992797e-06, 2.8486000000001177e-05, 1.02800000000014e-06, 2.036099999999999e-05, 1.068999999999376e-06, 1.5694999999999598e-05, 1.054999999999806e-06, 2.662500000000234e-05, 1.0559999999992797e-06, 1.537499999999803e-05, 1.0410000000002362e-06, 2.47230000000008e-05, 1.054999999999806e-06, 1.3499999999999623e-05, 1.0559999999992797e-06, 2.50970000000017e-05, 1.01400000000057e-06, 2.563900000000091e-05, 1.054999999999806e-06, 2.4096999999997232e-05, 1.084000000001889e-06, 2.1277999999999575e-05, 1.054999999999806e-06, 2.566700000000005e-05, 1.054999999999806e-06, 2.7848000000000456e-05, 1.0969999999985158e-06, 2.9680000000000678e-05, 1.0419999999997098e-06, 2.191699999999977e-05, 1.054999999999806e-06, 2.9403000000000762e-05, 1.0419999999997098e-06, 1.8514000000000724e-05, 1.0410000000002362e-06, 2.316700000000102e-05, 1.068999999999376e-06, 1.8236000000001334e-05, 1.0139999999971006e-06, 2.9070000000002566e-05, 1.068999999999376e-06, 2.2542000000000395e-05, 1.054999999999806e-06, 1.2263999999997943e-05, 1.0560000000027492e-06, 1.1652999999996888e-05, 1.054999999999806e-06, 1.693100000000128e-05, 1.068999999999376e-06, 2.284699999999945e-05, 1.0560000000027492e-06, 3.063899999999897e-05, 1.068999999999376e-06, 2.6292000000000676e-05, 1.0419999999997098e-06, 2.006900000000103e-05, 1.0559999999992797e-06, 2.283299999999988e-05, 1.068999999999376e-06, 2.347299999999955e-05, 1.0970000000019853e-06, 2.034700000000042e-05, 1.0969999999985158e-06, 2.8764000000000567e-05, 1.02800000000014e-06, 2.0986000000000615e-05, 1.0559999999992797e-06, 1.537499999999803e-05, 1.0690000000028455e-06, 1.693099999999781e-05, 1.054999999999806e-06, 1.2889000000002038e-05, 1.0559999999992797e-06, 3.0333000000000443e-05, 1.082999999998946e-06, 1.972299999999927e-05, 1.054999999999806e-06], 'time': [0.018759208, 0.018760319, 0.018784917, 0.018786014, 0.018805736, 0.018806778, 0.018827764, 0.018828819, 0.018851986, 0.018853056, 0.018879958, 0.018881028, 0.018897972, 0.018899028, 0.018925625, 0.018926653, 0.018937931, 0.018938986, 0.018969556, 0.018970639, 0.018985694, 0.018986764, 0.019006486, 0.019007542, 0.019036028, 0.019037056, 0.019057417, 0.019058486, 0.019074181, 0.019075236, 0.019101861, 0.019102917, 0.019118292, 0.019119333, 0.019144056, 0.019145111, 0.019158611, 0.019159667, 0.019184764, 0.019185778, 0.019211417, 0.019212472, 0.019236569, 0.019237653, 0.019258931, 0.019259986, 0.019285653, 0.019286708, 0.019314556, 0.019315653, 0.019345333, 0.019346375, 0.019368292, 0.019369347, 0.01939875, 0.019399792, 0.019418306, 0.019419347, 0.019442514, 0.019443583, 0.019461819, 0.019462833, 0.019491903, 0.019492972, 0.019515514, 0.019516569, 0.019528833, 0.019529889, 0.019541542, 0.019542597, 0.019559528, 0.019560597, 0.019583444, 0.0195845, 0.019615139, 0.019616208, 0.0196425, 0.019643542, 0.019663611, 0.019664667, 0.0196875, 0.019688569, 0.019712042, 0.019713139, 0.019733486, 0.019734583, 0.019763347, 0.019764375, 0.019785361, 0.019786417, 0.019801792, 0.019802861, 0.019819792, 0.019820847, 0.019833736, 0.019834792, 0.019865125, 0.019866208, 0.019885931, 0.019886986], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:54.469" endtime="20201112 12:25:54.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.465" endtime="20201112 12:25:54.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:54.478" level="INFO">${RESULT} = [{'time': 0.018760319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018786014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:54.474" endtime="20201112 12:25:54.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:54.492" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1110000000015552e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1....</msg>
<status status="PASS" starttime="20201112 12:25:54.479" endtime="20201112 12:25:54.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.496" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:54.495" endtime="20201112 12:25:54.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.498" level="INFO">VALUE: [1.1110000000015552e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0139999999971006e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:25:54.497" endtime="20201112 12:25:54.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.493" endtime="20201112 12:25:54.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.502" endtime="20201112 12:25:54.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:54.505" endtime="20201112 12:25:54.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.503" endtime="20201112 12:25:54.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.500" endtime="20201112 12:25:54.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.097" endtime="20201112 12:25:54.526"></status>
</kw>
<msg timestamp="20201112 12:25:54.526" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.534" endtime="20201112 12:25:54.543"></status>
</kw>
<msg timestamp="20201112 12:25:54.543" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.532" endtime="20201112 12:25:54.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.544" endtime="20201112 12:25:54.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.547" endtime="20201112 12:25:54.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.530" endtime="20201112 12:25:54.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.528" endtime="20201112 12:25:54.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.556" endtime="20201112 12:25:54.842"></status>
</kw>
<msg timestamp="20201112 12:25:54.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018592972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018594167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.554" endtime="20201112 12:25:54.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018592972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018594167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.847" endtime="20201112 12:25:54.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.855" endtime="20201112 12:25:54.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.552" endtime="20201112 12:25:54.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.550" endtime="20201112 12:25:54.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.862" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:54.861" endtime="20201112 12:25:54.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.867" level="INFO">VALUE: [{'time': 0.018592972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018594167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1950000000024441e-06, 'source_diff': 1.1950000000024441e-06}, {'time': 0.018615375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1207999999998256e-05, 'source_diff': 2.1207999999998256e-05}, {'time': 0.018616444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018632125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5681000000000028e-05, 'source_diff': 1.5681000000000028e-05}, {'time': 0.018633208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018663514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0306000000000777e-05, 'source_diff': 3.0306000000000777e-05}, {'time': 0.018664583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018681514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.018682597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018709806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.720900000000026e-05, 'source_diff': 2.720900000000026e-05}, {'time': 0.018710931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.018741319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018762292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.097300000000052e-05, 'source_diff': 2.097300000000052e-05}, {'time': 0.018763375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018794014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063900000000244e-05, 'source_diff': 3.063900000000244e-05}, {'time': 0.018795097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018810778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5681000000000028e-05, 'source_diff': 1.5681000000000028e-05}, {'time': 0.018811819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018833431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1612000000000714e-05, 'source_diff': 2.1612000000000714e-05}, {'time': 0.0188345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018847986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.018849042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01888, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.018881056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018904236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3180000000001116e-05, 'source_diff': 2.3180000000001116e-05}, {'time': 0.018905278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018919111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}, {'time': 0.018920167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018944903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4735999999997427e-05, 'source_diff': 2.4735999999997427e-05}, {'time': 0.018946042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018960097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.405499999999893e-05, 'source_diff': 1.405499999999893e-05}, {'time': 0.018961167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018987431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6263999999998067e-05, 'source_diff': 2.6263999999998067e-05}, {'time': 0.018988514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019019153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.019020208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019043986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3777999999998606e-05, 'source_diff': 2.3777999999998606e-05}, {'time': 0.019045056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019059819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.47629999999975e-05, 'source_diff': 1.47629999999975e-05}, {'time': 0.019060903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019090292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9388999999997723e-05, 'source_diff': 2.9388999999997723e-05}, {'time': 0.019091333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019115736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.44030000000027e-05, 'source_diff': 2.44030000000027e-05}, {'time': 0.019116819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019145875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9055999999999527e-05, 'source_diff': 2.9055999999999527e-05}, {'time': 0.019146931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019173222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6291000000001202e-05, 'source_diff': 2.6291000000001202e-05}, {'time': 0.019174292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019194653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.019195708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019208903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.019209972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019221917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1945000000002787e-05, 'source_diff': 1.1945000000002787e-05}, {'time': 0.019222986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019242431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944499999999988e-05, 'source_diff': 1.944499999999988e-05}, {'time': 0.019243514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019261347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.783300000000182e-05, 'source_diff': 1.783300000000182e-05}, {'time': 0.019262403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019279653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019280722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.01931075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0028000000001387e-05, 'source_diff': 3.0028000000001387e-05}, {'time': 0.019311806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019335958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4151999999999507e-05, 'source_diff': 2.4151999999999507e-05}, {'time': 0.019336958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019348611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.019349681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019364417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4735999999997834e-05, 'source_diff': 1.4735999999997834e-05}, {'time': 0.0193655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019380569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.50689999999995e-05, 'source_diff': 1.50689999999995e-05}, {'time': 0.019381611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019409486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.019410583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019439611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9028000000000387e-05, 'source_diff': 2.9028000000000387e-05}, {'time': 0.019440694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019461639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.094499999999791e-05, 'source_diff': 2.094499999999791e-05}, {'time': 0.019462708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019476528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.019477597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019502639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.019503681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019526542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.286100000000249e-05, 'source_diff': 2.286100000000249e-05}, {'time': 0.019527597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019554819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.019555875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019570347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.019571389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019591431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0041999999997895e-05, 'source_diff': 2.0041999999997895e-05}, {'time': 0.0195925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019620042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7542000000001926e-05, 'source_diff': 2.7542000000001926e-05}, {'time': 0.019621111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019635236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.019636278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019663181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.690299999999826e-05, 'source_diff': 2.690299999999826e-05}, {'time': 0.01966425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019686792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.019687847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019700111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.019701167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:54.863" endtime="20201112 12:25:54.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.859" endtime="20201112 12:25:54.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:54.894" level="INFO">${debug-compressed} = {'diff': [0, 1.1950000000024441e-06, 2.1207999999998256e-05, 1.068999999999376e-06, 1.5681000000000028e-05, 1.082999999998946e-06, 3.0306000000000777e-05, 1.068999999999376e-06, 1.693100000000128e-05,...</msg>
<status status="PASS" starttime="20201112 12:25:54.870" endtime="20201112 12:25:54.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.898" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:54.897" endtime="20201112 12:25:54.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.902" level="INFO">VALUE: {'diff': [0, 1.1950000000024441e-06, 2.1207999999998256e-05, 1.068999999999376e-06, 1.5681000000000028e-05, 1.082999999998946e-06, 3.0306000000000777e-05, 1.068999999999376e-06, 1.693100000000128e-05, 1.082999999998946e-06, 2.720900000000026e-05, 1.125000000001125e-06, 2.9332999999999443e-05, 1.054999999999806e-06, 2.097300000000052e-05, 1.082999999998946e-06, 3.063900000000244e-05, 1.082999999998946e-06, 1.5681000000000028e-05, 1.0410000000002362e-06, 2.1612000000000714e-05, 1.068999999999376e-06, 1.3486000000000054e-05, 1.0559999999992797e-06, 3.095800000000107e-05, 1.0559999999992797e-06, 2.3180000000001116e-05, 1.0419999999997098e-06, 1.383299999999782e-05, 1.0560000000027492e-06, 2.4735999999997427e-05, 1.139000000000695e-06, 1.405499999999893e-05, 1.070000000002319e-06, 2.6263999999998067e-05, 1.0830000000024154e-06, 3.063899999999897e-05, 1.054999999999806e-06, 2.3777999999998606e-05, 1.070000000002319e-06, 1.47629999999975e-05, 1.084000000001889e-06, 2.9388999999997723e-05, 1.0410000000002362e-06, 2.44030000000027e-05, 1.082999999998946e-06, 2.9055999999999527e-05, 1.0559999999992797e-06, 2.6291000000001202e-05, 1.0699999999988496e-06, 2.036099999999999e-05, 1.054999999999806e-06, 1.3195000000000567e-05, 1.068999999999376e-06, 1.1945000000002787e-05, 1.068999999999376e-06, 1.944499999999988e-05, 1.082999999998946e-06, 1.783300000000182e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.068999999999376e-06, 3.0028000000001387e-05, 1.0559999999992797e-06, 2.4151999999999507e-05, 1.000000000001e-06, 1.1653000000000358e-05, 1.0699999999988496e-06, 1.4735999999997834e-05, 1.0830000000024154e-06, 1.50689999999995e-05, 1.0419999999997098e-06, 2.7875000000000122e-05, 1.0969999999985158e-06, 2.9028000000000387e-05, 1.0830000000024154e-06, 2.094499999999791e-05, 1.068999999999376e-06, 1.3820000000001192e-05, 1.068999999999376e-06, 2.5041999999999426e-05, 1.0419999999997098e-06, 2.286100000000249e-05, 1.054999999999806e-06, 2.7222000000000357e-05, 1.0559999999992797e-06, 1.4471999999998014e-05, 1.0420000000031793e-06, 2.0041999999997895e-05, 1.068999999999376e-06, 2.7542000000001926e-05, 1.068999999999376e-06, 1.4125000000000248e-05, 1.0419999999997098e-06, 2.690299999999826e-05, 1.0690000000028455e-06, 2.2542000000000395e-05, 1.054999999999806e-06, 1.2263999999997943e-05, 1.0559999999992797e-06], 'source_diff': [0, 1.1950000000024441e-06, 2.1207999999998256e-05, 1.068999999999376e-06, 1.5681000000000028e-05, 1.082999999998946e-06, 3.0306000000000777e-05, 1.068999999999376e-06, 1.693100000000128e-05, 1.082999999998946e-06, 2.720900000000026e-05, 1.125000000001125e-06, 2.9332999999999443e-05, 1.054999999999806e-06, 2.097300000000052e-05, 1.082999999998946e-06, 3.063900000000244e-05, 1.082999999998946e-06, 1.5681000000000028e-05, 1.0410000000002362e-06, 2.1612000000000714e-05, 1.068999999999376e-06, 1.3486000000000054e-05, 1.0559999999992797e-06, 3.095800000000107e-05, 1.0559999999992797e-06, 2.3180000000001116e-05, 1.0419999999997098e-06, 1.383299999999782e-05, 1.0560000000027492e-06, 2.4735999999997427e-05, 1.139000000000695e-06, 1.405499999999893e-05, 1.070000000002319e-06, 2.6263999999998067e-05, 1.0830000000024154e-06, 3.063899999999897e-05, 1.054999999999806e-06, 2.3777999999998606e-05, 1.070000000002319e-06, 1.47629999999975e-05, 1.084000000001889e-06, 2.9388999999997723e-05, 1.0410000000002362e-06, 2.44030000000027e-05, 1.082999999998946e-06, 2.9055999999999527e-05, 1.0559999999992797e-06, 2.6291000000001202e-05, 1.0699999999988496e-06, 2.036099999999999e-05, 1.054999999999806e-06, 1.3195000000000567e-05, 1.068999999999376e-06, 1.1945000000002787e-05, 1.068999999999376e-06, 1.944499999999988e-05, 1.082999999998946e-06, 1.783300000000182e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.068999999999376e-06, 3.0028000000001387e-05, 1.0559999999992797e-06, 2.4151999999999507e-05, 1.000000000001e-06, 1.1653000000000358e-05, 1.0699999999988496e-06, 1.4735999999997834e-05, 1.0830000000024154e-06, 1.50689999999995e-05, 1.0419999999997098e-06, 2.7875000000000122e-05, 1.0969999999985158e-06, 2.9028000000000387e-05, 1.0830000000024154e-06, 2.094499999999791e-05, 1.068999999999376e-06, 1.3820000000001192e-05, 1.068999999999376e-06, 2.5041999999999426e-05, 1.0419999999997098e-06, 2.286100000000249e-05, 1.054999999999806e-06, 2.7222000000000357e-05, 1.0559999999992797e-06, 1.4471999999998014e-05, 1.0420000000031793e-06, 2.0041999999997895e-05, 1.068999999999376e-06, 2.7542000000001926e-05, 1.068999999999376e-06, 1.4125000000000248e-05, 1.0419999999997098e-06, 2.690299999999826e-05, 1.0690000000028455e-06, 2.2542000000000395e-05, 1.054999999999806e-06, 1.2263999999997943e-05, 1.0559999999992797e-06], 'time': [0.018592972, 0.018594167, 0.018615375, 0.018616444, 0.018632125, 0.018633208, 0.018663514, 0.018664583, 0.018681514, 0.018682597, 0.018709806, 0.018710931, 0.018740264, 0.018741319, 0.018762292, 0.018763375, 0.018794014, 0.018795097, 0.018810778, 0.018811819, 0.018833431, 0.0188345, 0.018847986, 0.018849042, 0.01888, 0.018881056, 0.018904236, 0.018905278, 0.018919111, 0.018920167, 0.018944903, 0.018946042, 0.018960097, 0.018961167, 0.018987431, 0.018988514, 0.019019153, 0.019020208, 0.019043986, 0.019045056, 0.019059819, 0.019060903, 0.019090292, 0.019091333, 0.019115736, 0.019116819, 0.019145875, 0.019146931, 0.019173222, 0.019174292, 0.019194653, 0.019195708, 0.019208903, 0.019209972, 0.019221917, 0.019222986, 0.019242431, 0.019243514, 0.019261347, 0.019262403, 0.019279653, 0.019280722, 0.01931075, 0.019311806, 0.019335958, 0.019336958, 0.019348611, 0.019349681, 0.019364417, 0.0193655, 0.019380569, 0.019381611, 0.019409486, 0.019410583, 0.019439611, 0.019440694, 0.019461639, 0.019462708, 0.019476528, 0.019477597, 0.019502639, 0.019503681, 0.019526542, 0.019527597, 0.019554819, 0.019555875, 0.019570347, 0.019571389, 0.019591431, 0.0195925, 0.019620042, 0.019621111, 0.019635236, 0.019636278, 0.019663181, 0.01966425, 0.019686792, 0.019687847, 0.019700111, 0.019701167], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:54.899" endtime="20201112 12:25:54.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.895" endtime="20201112 12:25:54.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:54.908" level="INFO">${RESULT} = [{'time': 0.018594167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1950000000024441e-06, 'source_diff': 1.1950000000024441e-06}, {'time': 0.018616444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:54.904" endtime="20201112 12:25:54.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:54.921" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1950000000024441e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.082...</msg>
<status status="PASS" starttime="20201112 12:25:54.909" endtime="20201112 12:25:54.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.925" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:54.924" endtime="20201112 12:25:54.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.928" level="INFO">VALUE: [1.1950000000024441e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.139000000000695e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.084000000001889e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.0419999999997098e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0420000000031793e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:25:54.926" endtime="20201112 12:25:54.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.922" endtime="20201112 12:25:54.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.931" endtime="20201112 12:25:54.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:54.934" endtime="20201112 12:25:54.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.933" endtime="20201112 12:25:54.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.929" endtime="20201112 12:25:54.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.527" endtime="20201112 12:25:54.955"></status>
</kw>
<msg timestamp="20201112 12:25:54.955" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.963" endtime="20201112 12:25:54.972"></status>
</kw>
<msg timestamp="20201112 12:25:54.973" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.962" endtime="20201112 12:25:54.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.975" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.974" endtime="20201112 12:25:54.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.976" endtime="20201112 12:25:54.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.959" endtime="20201112 12:25:54.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.957" endtime="20201112 12:25:54.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.986" endtime="20201112 12:25:55.273"></status>
</kw>
<msg timestamp="20201112 12:25:55.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018880486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018881667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.985" endtime="20201112 12:25:55.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018880486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018881667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.278" endtime="20201112 12:25:55.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.286" endtime="20201112 12:25:55.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.982" endtime="20201112 12:25:55.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.980" endtime="20201112 12:25:55.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.293" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:55.292" endtime="20201112 12:25:55.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.298" level="INFO">VALUE: [{'time': 0.018880486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018881667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.018897917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.018899, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018918722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.018919792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018944194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4401999999999757e-05, 'source_diff': 2.4401999999999757e-05}, {'time': 0.018945264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018965361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.009700000000017e-05, 'source_diff': 2.009700000000017e-05}, {'time': 0.018966361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018995764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9402999999997292e-05, 'source_diff': 2.9402999999997292e-05}, {'time': 0.018996819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.019020611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3791999999998176e-05, 'source_diff': 2.3791999999998176e-05}, {'time': 0.019021667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019036444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.477700000000054e-05, 'source_diff': 1.477700000000054e-05}, {'time': 0.019037514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019049125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1611000000001648e-05, 'source_diff': 1.1611000000001648e-05}, {'time': 0.019050194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019077125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.693100000000087e-05, 'source_diff': 2.693100000000087e-05}, {'time': 0.019078153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019091347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.019092417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019119, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6583000000000162e-05, 'source_diff': 2.6583000000000162e-05}, {'time': 0.019120069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019144792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.47230000000008e-05, 'source_diff': 2.47230000000008e-05}, {'time': 0.019145847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019172125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6278000000001106e-05, 'source_diff': 2.6278000000001106e-05}, {'time': 0.019173208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019191681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.847299999999802e-05, 'source_diff': 1.847299999999802e-05}, {'time': 0.019192736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019210917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.818100000000253e-05, 'source_diff': 1.818100000000253e-05}, {'time': 0.019211986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019229292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7305999999998184e-05, 'source_diff': 1.7305999999998184e-05}, {'time': 0.019230292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019253458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3166000000001546e-05, 'source_diff': 2.3166000000001546e-05}, {'time': 0.019254528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019276486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1957999999999006e-05, 'source_diff': 2.1957999999999006e-05}, {'time': 0.019277528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019305333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7805000000002272e-05, 'source_diff': 2.7805000000002272e-05}, {'time': 0.019306389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019321181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.019322236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019347264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5027999999999856e-05, 'source_diff': 2.5027999999999856e-05}, {'time': 0.019348306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019364, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.019365069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019383236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.816700000000296e-05, 'source_diff': 1.816700000000296e-05}, {'time': 0.019384306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019400931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.019401986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019414889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2903000000001608e-05, 'source_diff': 1.2903000000001608e-05}, {'time': 0.019415931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019442833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6901999999998788e-05, 'source_diff': 2.6901999999998788e-05}, {'time': 0.019443903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019464889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.019465944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019486319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.037499999999956e-05, 'source_diff': 2.037499999999956e-05}, {'time': 0.019487375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019514306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.69309999999974e-05, 'source_diff': 2.69309999999974e-05}, {'time': 0.019515347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019531028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5681000000000028e-05, 'source_diff': 1.5681000000000028e-05}, {'time': 0.019532083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.01956025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.816700000000255e-05, 'source_diff': 2.816700000000255e-05}, {'time': 0.019561306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019582903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.15969999999982e-05, 'source_diff': 2.15969999999982e-05}, {'time': 0.019583972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019600278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6305999999997184e-05, 'source_diff': 1.6305999999997184e-05}, {'time': 0.019601361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019624819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3458000000000506e-05, 'source_diff': 2.3458000000000506e-05}, {'time': 0.019625903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019654056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8152999999999512e-05, 'source_diff': 2.8152999999999512e-05}, {'time': 0.019655097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019685722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.019686792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019704069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.727699999999957e-05, 'source_diff': 1.727699999999957e-05}, {'time': 0.019705111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019728569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3458000000000506e-05, 'source_diff': 2.3458000000000506e-05}, {'time': 0.019729625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019742514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2888999999998568e-05, 'source_diff': 1.2888999999998568e-05}, {'time': 0.019743597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019758056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4458999999997918e-05, 'source_diff': 1.4458999999997918e-05}, {'time': 0.019759083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.019774153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5069999999998973e-05, 'source_diff': 1.5069999999998973e-05}, {'time': 0.019775222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019794958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9736000000002835e-05, 'source_diff': 1.9736000000002835e-05}, {'time': 0.019796028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019824167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8138999999999942e-05, 'source_diff': 2.8138999999999942e-05}, {'time': 0.019825236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019843111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.019844167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019872667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8500000000000747e-05, 'source_diff': 2.8500000000000747e-05}, {'time': 0.019873764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019897778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4014000000002755e-05, 'source_diff': 2.4014000000002755e-05}, {'time': 0.019898847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019911736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2888999999998568e-05, 'source_diff': 1.2888999999998568e-05}, {'time': 0.019912792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019934417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.0199355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019958375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287500000000206e-05, 'source_diff': 2.287500000000206e-05}, {'time': 0.019959375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:55.294" endtime="20201112 12:25:55.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.290" endtime="20201112 12:25:55.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:55.324" level="INFO">${debug-compressed} = {'diff': [0, 1.1810000000028742e-06, 1.6249999999998904e-05, 1.082999999998946e-06, 1.9721999999999795e-05, 1.070000000002319e-06, 2.4401999999999757e-05, 1.0699999999988496e-06, 2.009700000000017e-05...</msg>
<status status="PASS" starttime="20201112 12:25:55.301" endtime="20201112 12:25:55.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.328" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:55.327" endtime="20201112 12:25:55.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.333" level="INFO">VALUE: {'diff': [0, 1.1810000000028742e-06, 1.6249999999998904e-05, 1.082999999998946e-06, 1.9721999999999795e-05, 1.070000000002319e-06, 2.4401999999999757e-05, 1.0699999999988496e-06, 2.009700000000017e-05, 1.000000000001e-06, 2.9402999999997292e-05, 1.0550000000032755e-06, 2.3791999999998176e-05, 1.0559999999992797e-06, 1.477700000000054e-05, 1.0699999999988496e-06, 1.1611000000001648e-05, 1.068999999999376e-06, 2.693100000000087e-05, 1.02800000000014e-06, 1.3194000000001094e-05, 1.0699999999988496e-06, 2.6583000000000162e-05, 1.068999999999376e-06, 2.47230000000008e-05, 1.054999999999806e-06, 2.6278000000001106e-05, 1.082999999998946e-06, 1.847299999999802e-05, 1.054999999999806e-06, 1.818100000000253e-05, 1.068999999999376e-06, 1.7305999999998184e-05, 1.000000000001e-06, 2.3166000000001546e-05, 1.0699999999988496e-06, 2.1957999999999006e-05, 1.0419999999997098e-06, 2.7805000000002272e-05, 1.0559999999992797e-06, 1.4791999999999583e-05, 1.054999999999806e-06, 2.5027999999999856e-05, 1.0419999999997098e-06, 1.5694000000000125e-05, 1.068999999999376e-06, 1.816700000000296e-05, 1.0699999999988496e-06, 1.662499999999928e-05, 1.054999999999806e-06, 1.2903000000001608e-05, 1.0419999999997098e-06, 2.6901999999998788e-05, 1.0699999999988496e-06, 2.0986000000000615e-05, 1.054999999999806e-06, 2.037499999999956e-05, 1.0560000000027492e-06, 2.69309999999974e-05, 1.0410000000002362e-06, 1.5681000000000028e-05, 1.054999999999806e-06, 2.816700000000255e-05, 1.0559999999992797e-06, 2.15969999999982e-05, 1.0690000000028455e-06, 1.6305999999997184e-05, 1.0830000000024154e-06, 2.3458000000000506e-05, 1.0839999999984196e-06, 2.8152999999999512e-05, 1.0410000000002362e-06, 3.06249999999994e-05, 1.070000000002319e-06, 1.727699999999957e-05, 1.0419999999997098e-06, 2.3458000000000506e-05, 1.0559999999992797e-06, 1.2888999999998568e-05, 1.0830000000024154e-06, 1.4458999999997918e-05, 1.0270000000006663e-06, 1.5069999999998973e-05, 1.068999999999376e-06, 1.9736000000002835e-05, 1.0699999999988496e-06, 2.8138999999999942e-05, 1.068999999999376e-06, 1.787500000000053e-05, 1.0559999999992797e-06, 2.8500000000000747e-05, 1.0969999999985158e-06, 2.4014000000002755e-05, 1.068999999999376e-06, 1.2888999999998568e-05, 1.0559999999992797e-06, 2.162500000000081e-05, 1.082999999998946e-06, 2.287500000000206e-05, 1.000000000001e-06], 'source_diff': [0, 1.1810000000028742e-06, 1.6249999999998904e-05, 1.082999999998946e-06, 1.9721999999999795e-05, 1.070000000002319e-06, 2.4401999999999757e-05, 1.0699999999988496e-06, 2.009700000000017e-05, 1.000000000001e-06, 2.9402999999997292e-05, 1.0550000000032755e-06, 2.3791999999998176e-05, 1.0559999999992797e-06, 1.477700000000054e-05, 1.0699999999988496e-06, 1.1611000000001648e-05, 1.068999999999376e-06, 2.693100000000087e-05, 1.02800000000014e-06, 1.3194000000001094e-05, 1.0699999999988496e-06, 2.6583000000000162e-05, 1.068999999999376e-06, 2.47230000000008e-05, 1.054999999999806e-06, 2.6278000000001106e-05, 1.082999999998946e-06, 1.847299999999802e-05, 1.054999999999806e-06, 1.818100000000253e-05, 1.068999999999376e-06, 1.7305999999998184e-05, 1.000000000001e-06, 2.3166000000001546e-05, 1.0699999999988496e-06, 2.1957999999999006e-05, 1.0419999999997098e-06, 2.7805000000002272e-05, 1.0559999999992797e-06, 1.4791999999999583e-05, 1.054999999999806e-06, 2.5027999999999856e-05, 1.0419999999997098e-06, 1.5694000000000125e-05, 1.068999999999376e-06, 1.816700000000296e-05, 1.0699999999988496e-06, 1.662499999999928e-05, 1.054999999999806e-06, 1.2903000000001608e-05, 1.0419999999997098e-06, 2.6901999999998788e-05, 1.0699999999988496e-06, 2.0986000000000615e-05, 1.054999999999806e-06, 2.037499999999956e-05, 1.0560000000027492e-06, 2.69309999999974e-05, 1.0410000000002362e-06, 1.5681000000000028e-05, 1.054999999999806e-06, 2.816700000000255e-05, 1.0559999999992797e-06, 2.15969999999982e-05, 1.0690000000028455e-06, 1.6305999999997184e-05, 1.0830000000024154e-06, 2.3458000000000506e-05, 1.0839999999984196e-06, 2.8152999999999512e-05, 1.0410000000002362e-06, 3.06249999999994e-05, 1.070000000002319e-06, 1.727699999999957e-05, 1.0419999999997098e-06, 2.3458000000000506e-05, 1.0559999999992797e-06, 1.2888999999998568e-05, 1.0830000000024154e-06, 1.4458999999997918e-05, 1.0270000000006663e-06, 1.5069999999998973e-05, 1.068999999999376e-06, 1.9736000000002835e-05, 1.0699999999988496e-06, 2.8138999999999942e-05, 1.068999999999376e-06, 1.787500000000053e-05, 1.0559999999992797e-06, 2.8500000000000747e-05, 1.0969999999985158e-06, 2.4014000000002755e-05, 1.068999999999376e-06, 1.2888999999998568e-05, 1.0559999999992797e-06, 2.162500000000081e-05, 1.082999999998946e-06, 2.287500000000206e-05, 1.000000000001e-06], 'time': [0.018880486, 0.018881667, 0.018897917, 0.018899, 0.018918722, 0.018919792, 0.018944194, 0.018945264, 0.018965361, 0.018966361, 0.018995764, 0.018996819, 0.019020611, 0.019021667, 0.019036444, 0.019037514, 0.019049125, 0.019050194, 0.019077125, 0.019078153, 0.019091347, 0.019092417, 0.019119, 0.019120069, 0.019144792, 0.019145847, 0.019172125, 0.019173208, 0.019191681, 0.019192736, 0.019210917, 0.019211986, 0.019229292, 0.019230292, 0.019253458, 0.019254528, 0.019276486, 0.019277528, 0.019305333, 0.019306389, 0.019321181, 0.019322236, 0.019347264, 0.019348306, 0.019364, 0.019365069, 0.019383236, 0.019384306, 0.019400931, 0.019401986, 0.019414889, 0.019415931, 0.019442833, 0.019443903, 0.019464889, 0.019465944, 0.019486319, 0.019487375, 0.019514306, 0.019515347, 0.019531028, 0.019532083, 0.01956025, 0.019561306, 0.019582903, 0.019583972, 0.019600278, 0.019601361, 0.019624819, 0.019625903, 0.019654056, 0.019655097, 0.019685722, 0.019686792, 0.019704069, 0.019705111, 0.019728569, 0.019729625, 0.019742514, 0.019743597, 0.019758056, 0.019759083, 0.019774153, 0.019775222, 0.019794958, 0.019796028, 0.019824167, 0.019825236, 0.019843111, 0.019844167, 0.019872667, 0.019873764, 0.019897778, 0.019898847, 0.019911736, 0.019912792, 0.019934417, 0.0199355, 0.019958375, 0.019959375], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:55.330" endtime="20201112 12:25:55.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.325" endtime="20201112 12:25:55.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:55.338" level="INFO">${RESULT} = [{'time': 0.018881667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.018899, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:25:55.335" endtime="20201112 12:25:55.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:55.352" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1810000000028742e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.000000000001e-06, 1.0550000000032755e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.06...</msg>
<status status="PASS" starttime="20201112 12:25:55.339" endtime="20201112 12:25:55.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.356" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:55.355" endtime="20201112 12:25:55.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.359" level="INFO">VALUE: [1.1810000000028742e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.000000000001e-06, 1.0550000000032755e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.0270000000006663e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201112 12:25:55.358" endtime="20201112 12:25:55.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.353" endtime="20201112 12:25:55.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.362" endtime="20201112 12:25:55.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:55.366" endtime="20201112 12:25:55.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.364" endtime="20201112 12:25:55.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.361" endtime="20201112 12:25:55.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.956" endtime="20201112 12:25:55.387"></status>
</kw>
<msg timestamp="20201112 12:25:55.387" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.394" endtime="20201112 12:25:55.404"></status>
</kw>
<msg timestamp="20201112 12:25:55.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.393" endtime="20201112 12:25:55.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.405" endtime="20201112 12:25:55.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.408" endtime="20201112 12:25:55.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.390" endtime="20201112 12:25:55.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.389" endtime="20201112 12:25:55.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.417" endtime="20201112 12:25:55.704"></status>
</kw>
<msg timestamp="20201112 12:25:55.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.415" endtime="20201112 12:25:55.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.708" endtime="20201112 12:25:55.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.717" endtime="20201112 12:25:55.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.413" endtime="20201112 12:25:55.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.411" endtime="20201112 12:25:55.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.723" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:55.722" endtime="20201112 12:25:55.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.728" level="INFO">VALUE: [{'time': 0.018646083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018661042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3777999999999013e-05, 'source_diff': 1.3777999999999013e-05}, {'time': 0.018662083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018679042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6959000000000418e-05, 'source_diff': 1.6959000000000418e-05}, {'time': 0.018680083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018702958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287499999999859e-05, 'source_diff': 2.287499999999859e-05}, {'time': 0.018704028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018717528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.018718569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018742069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3499999999999216e-05, 'source_diff': 2.3499999999999216e-05}, {'time': 0.018743111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018757556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4445000000001817e-05, 'source_diff': 1.4445000000001817e-05}, {'time': 0.018758625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018770903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2277999999997513e-05, 'source_diff': 1.2277999999997513e-05}, {'time': 0.018771944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018786083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.018787153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018808125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0971999999997576e-05, 'source_diff': 2.0971999999997576e-05}, {'time': 0.018809208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018833319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.018834417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.018846931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.018848, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018868347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.034700000000042e-05, 'source_diff': 2.034700000000042e-05}, {'time': 0.018869403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.512500000000084e-05, 'source_diff': 2.512500000000084e-05}, {'time': 0.018895528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018920542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5013999999996817e-05, 'source_diff': 2.5013999999996817e-05}, {'time': 0.018921597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018944514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.291700000000077e-05, 'source_diff': 2.291700000000077e-05}, {'time': 0.018945514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018964944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9430000000000835e-05, 'source_diff': 1.9430000000000835e-05}, {'time': 0.018966014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018992583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6569000000000592e-05, 'source_diff': 2.6569000000000592e-05}, {'time': 0.018993653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019022431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8778000000000137e-05, 'source_diff': 2.8778000000000137e-05}, {'time': 0.019023486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019040417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.019041472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019058417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6945000000000848e-05, 'source_diff': 1.6945000000000848e-05}, {'time': 0.019059542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019087625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8083000000001662e-05, 'source_diff': 2.8083000000001662e-05}, {'time': 0.019088708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019118083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9375000000001622e-05, 'source_diff': 2.9375000000001622e-05}, {'time': 0.019119125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019148542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.019149639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.01918025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.019181278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019201014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9735999999999365e-05, 'source_diff': 1.9735999999999365e-05}, {'time': 0.019202097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019215903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.019216972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019237681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.07090000000007e-05, 'source_diff': 2.07090000000007e-05}, {'time': 0.019238778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6221999999999357e-05, 'source_diff': 2.6221999999999357e-05}, {'time': 0.019266042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019278042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1999999999998123e-05, 'source_diff': 1.1999999999998123e-05}, {'time': 0.019279056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019305042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5986000000002146e-05, 'source_diff': 2.5986000000002146e-05}, {'time': 0.019306083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019326139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0055999999997465e-05, 'source_diff': 2.0055999999997465e-05}, {'time': 0.019327194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019353181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.598700000000162e-05, 'source_diff': 2.598700000000162e-05}, {'time': 0.019354222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.01938425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0027999999997917e-05, 'source_diff': 3.0027999999997917e-05}, {'time': 0.019385306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019401639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.633299999999685e-05, 'source_diff': 1.633299999999685e-05}, {'time': 0.019402681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019418375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.019419431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019438556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.019439625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019469028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.019470069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019492306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.223700000000134e-05, 'source_diff': 2.223700000000134e-05}, {'time': 0.019493361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019510306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6945000000000848e-05, 'source_diff': 1.6945000000000848e-05}, {'time': 0.019511361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019540139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8778000000000137e-05, 'source_diff': 2.8778000000000137e-05}, {'time': 0.019541194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019553167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1972999999998457e-05, 'source_diff': 1.1972999999998457e-05}, {'time': 0.019554222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019571778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7556000000001903e-05, 'source_diff': 1.7556000000001903e-05}, {'time': 0.019572833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019593819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0985999999997146e-05, 'source_diff': 2.0985999999997146e-05}, {'time': 0.019594903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019607153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.019608208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019621722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3514000000002663e-05, 'source_diff': 1.3514000000002663e-05}, {'time': 0.019622778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019644722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1943999999999436e-05, 'source_diff': 2.1943999999999436e-05}, {'time': 0.019645778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019668972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3194000000000686e-05, 'source_diff': 2.3194000000000686e-05}, {'time': 0.019670014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019683194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180000000001524e-05, 'source_diff': 1.3180000000001524e-05}, {'time': 0.019684264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019700278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6014000000001694e-05, 'source_diff': 1.6014000000001694e-05}, {'time': 0.019701319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0409999999967667e-06, 'source_diff': 1.0409999999967667e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:55.724" endtime="20201112 12:25:55.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.720" endtime="20201112 12:25:55.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:55.755" level="INFO">${debug-compressed} = {'diff': [0, 1.1809999999994047e-06, 1.3777999999999013e-05, 1.0410000000002362e-06, 1.6959000000000418e-05, 1.0410000000002362e-06, 2.287499999999859e-05, 1.070000000002319e-06, 1.3499999999999623e-0...</msg>
<status status="PASS" starttime="20201112 12:25:55.731" endtime="20201112 12:25:55.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.759" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:55.757" endtime="20201112 12:25:55.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.763" level="INFO">VALUE: {'diff': [0, 1.1809999999994047e-06, 1.3777999999999013e-05, 1.0410000000002362e-06, 1.6959000000000418e-05, 1.0410000000002362e-06, 2.287499999999859e-05, 1.070000000002319e-06, 1.3499999999999623e-05, 1.0410000000002362e-06, 2.3499999999999216e-05, 1.0419999999997098e-06, 1.4445000000001817e-05, 1.068999999999376e-06, 1.2277999999997513e-05, 1.0410000000002362e-06, 1.4138999999999818e-05, 1.070000000002319e-06, 2.0971999999997576e-05, 1.0830000000024154e-06, 2.411100000000027e-05, 1.0979999999979895e-06, 1.2514000000001663e-05, 1.068999999999376e-06, 2.034700000000042e-05, 1.0559999999992797e-06, 2.512500000000084e-05, 1.000000000001e-06, 2.5013999999996817e-05, 1.054999999999806e-06, 2.291700000000077e-05, 1.000000000001e-06, 1.9430000000000835e-05, 1.0699999999988496e-06, 2.6569000000000592e-05, 1.0699999999988496e-06, 2.8778000000000137e-05, 1.054999999999806e-06, 1.693100000000128e-05, 1.054999999999806e-06, 1.6945000000000848e-05, 1.1249999999976557e-06, 2.8083000000001662e-05, 1.082999999998946e-06, 2.9375000000001622e-05, 1.0419999999997098e-06, 2.9417000000000332e-05, 1.0969999999985158e-06, 3.061099999999983e-05, 1.02800000000014e-06, 1.9735999999999365e-05, 1.0830000000024154e-06, 1.3805999999998153e-05, 1.068999999999376e-06, 2.07090000000007e-05, 1.0970000000019853e-06, 2.6221999999999357e-05, 1.0419999999997098e-06, 1.1999999999998123e-05, 1.01400000000057e-06, 2.5986000000002146e-05, 1.0410000000002362e-06, 2.0055999999997465e-05, 1.054999999999806e-06, 2.598700000000162e-05, 1.0410000000002362e-06, 3.0027999999997917e-05, 1.0560000000027492e-06, 1.633299999999685e-05, 1.0420000000031793e-06, 1.5694000000000125e-05, 1.0559999999992797e-06, 1.912499999999831e-05, 1.068999999999376e-06, 2.9403000000000762e-05, 1.0410000000002362e-06, 2.223700000000134e-05, 1.054999999999806e-06, 1.6945000000000848e-05, 1.054999999999806e-06, 2.8778000000000137e-05, 1.054999999999806e-06, 1.1972999999998457e-05, 1.054999999999806e-06, 1.7556000000001903e-05, 1.054999999999806e-06, 2.0985999999997146e-05, 1.084000000001889e-06, 1.2249999999998373e-05, 1.054999999999806e-06, 1.3514000000002663e-05, 1.0559999999992797e-06, 2.1943999999999436e-05, 1.0559999999992797e-06, 2.3194000000000686e-05, 1.0419999999997098e-06, 1.3180000000001524e-05, 1.0699999999988496e-06, 1.6014000000001694e-05, 1.0409999999967667e-06], 'source_diff': [0, 1.1809999999994047e-06, 1.3777999999999013e-05, 1.0410000000002362e-06, 1.6959000000000418e-05, 1.0410000000002362e-06, 2.287499999999859e-05, 1.070000000002319e-06, 1.3499999999999623e-05, 1.0410000000002362e-06, 2.3499999999999216e-05, 1.0419999999997098e-06, 1.4445000000001817e-05, 1.068999999999376e-06, 1.2277999999997513e-05, 1.0410000000002362e-06, 1.4138999999999818e-05, 1.070000000002319e-06, 2.0971999999997576e-05, 1.0830000000024154e-06, 2.411100000000027e-05, 1.0979999999979895e-06, 1.2514000000001663e-05, 1.068999999999376e-06, 2.034700000000042e-05, 1.0559999999992797e-06, 2.512500000000084e-05, 1.000000000001e-06, 2.5013999999996817e-05, 1.054999999999806e-06, 2.291700000000077e-05, 1.000000000001e-06, 1.9430000000000835e-05, 1.0699999999988496e-06, 2.6569000000000592e-05, 1.0699999999988496e-06, 2.8778000000000137e-05, 1.054999999999806e-06, 1.693100000000128e-05, 1.054999999999806e-06, 1.6945000000000848e-05, 1.1249999999976557e-06, 2.8083000000001662e-05, 1.082999999998946e-06, 2.9375000000001622e-05, 1.0419999999997098e-06, 2.9417000000000332e-05, 1.0969999999985158e-06, 3.061099999999983e-05, 1.02800000000014e-06, 1.9735999999999365e-05, 1.0830000000024154e-06, 1.3805999999998153e-05, 1.068999999999376e-06, 2.07090000000007e-05, 1.0970000000019853e-06, 2.6221999999999357e-05, 1.0419999999997098e-06, 1.1999999999998123e-05, 1.01400000000057e-06, 2.5986000000002146e-05, 1.0410000000002362e-06, 2.0055999999997465e-05, 1.054999999999806e-06, 2.598700000000162e-05, 1.0410000000002362e-06, 3.0027999999997917e-05, 1.0560000000027492e-06, 1.633299999999685e-05, 1.0420000000031793e-06, 1.5694000000000125e-05, 1.0559999999992797e-06, 1.912499999999831e-05, 1.068999999999376e-06, 2.9403000000000762e-05, 1.0410000000002362e-06, 2.223700000000134e-05, 1.054999999999806e-06, 1.6945000000000848e-05, 1.054999999999806e-06, 2.8778000000000137e-05, 1.054999999999806e-06, 1.1972999999998457e-05, 1.054999999999806e-06, 1.7556000000001903e-05, 1.054999999999806e-06, 2.0985999999997146e-05, 1.084000000001889e-06, 1.2249999999998373e-05, 1.054999999999806e-06, 1.3514000000002663e-05, 1.0559999999992797e-06, 2.1943999999999436e-05, 1.0559999999992797e-06, 2.3194000000000686e-05, 1.0419999999997098e-06, 1.3180000000001524e-05, 1.0699999999988496e-06, 1.6014000000001694e-05, 1.0409999999967667e-06], 'time': [0.018646083, 0.018647264, 0.018661042, 0.018662083, 0.018679042, 0.018680083, 0.018702958, 0.018704028, 0.018717528, 0.018718569, 0.018742069, 0.018743111, 0.018757556, 0.018758625, 0.018770903, 0.018771944, 0.018786083, 0.018787153, 0.018808125, 0.018809208, 0.018833319, 0.018834417, 0.018846931, 0.018848, 0.018868347, 0.018869403, 0.018894528, 0.018895528, 0.018920542, 0.018921597, 0.018944514, 0.018945514, 0.018964944, 0.018966014, 0.018992583, 0.018993653, 0.019022431, 0.019023486, 0.019040417, 0.019041472, 0.019058417, 0.019059542, 0.019087625, 0.019088708, 0.019118083, 0.019119125, 0.019148542, 0.019149639, 0.01918025, 0.019181278, 0.019201014, 0.019202097, 0.019215903, 0.019216972, 0.019237681, 0.019238778, 0.019265, 0.019266042, 0.019278042, 0.019279056, 0.019305042, 0.019306083, 0.019326139, 0.019327194, 0.019353181, 0.019354222, 0.01938425, 0.019385306, 0.019401639, 0.019402681, 0.019418375, 0.019419431, 0.019438556, 0.019439625, 0.019469028, 0.019470069, 0.019492306, 0.019493361, 0.019510306, 0.019511361, 0.019540139, 0.019541194, 0.019553167, 0.019554222, 0.019571778, 0.019572833, 0.019593819, 0.019594903, 0.019607153, 0.019608208, 0.019621722, 0.019622778, 0.019644722, 0.019645778, 0.019668972, 0.019670014, 0.019683194, 0.019684264, 0.019700278, 0.019701319], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:55.760" endtime="20201112 12:25:55.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.755" endtime="20201112 12:25:55.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:55.768" level="INFO">${RESULT} = [{'time': 0.018647264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018662083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:55.765" endtime="20201112 12:25:55.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:55.782" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0410000000002362e-06, ...</msg>
<status status="PASS" starttime="20201112 12:25:55.770" endtime="20201112 12:25:55.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.787" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:55.786" endtime="20201112 12:25:55.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.790" level="INFO">VALUE: [1.1809999999994047e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.0979999999979895e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.0969999999985158e-06, 1.02800000000014e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.0419999999997098e-06, 1.01400000000057e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0560000000027492e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0409999999967667e-06]</msg>
<status status="PASS" starttime="20201112 12:25:55.788" endtime="20201112 12:25:55.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.783" endtime="20201112 12:25:55.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.793" endtime="20201112 12:25:55.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:55.797" endtime="20201112 12:25:55.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.795" endtime="20201112 12:25:55.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.791" endtime="20201112 12:25:55.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.387" endtime="20201112 12:25:55.818"></status>
</kw>
<msg timestamp="20201112 12:25:55.818" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.826" endtime="20201112 12:25:55.835"></status>
</kw>
<msg timestamp="20201112 12:25:55.836" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.824" endtime="20201112 12:25:55.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.837" endtime="20201112 12:25:55.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.839" endtime="20201112 12:25:55.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.822" endtime="20201112 12:25:55.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.820" endtime="20201112 12:25:55.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.849" endtime="20201112 12:25:56.136"></status>
</kw>
<msg timestamp="20201112 12:25:56.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018694319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.848" endtime="20201112 12:25:56.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018694319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.140" endtime="20201112 12:25:56.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.149" endtime="20201112 12:25:56.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.844" endtime="20201112 12:25:56.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.842" endtime="20201112 12:25:56.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.156" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:56.155" endtime="20201112 12:25:56.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.161" level="INFO">VALUE: [{'time': 0.018693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018694319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018725194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.087499999999965e-05, 'source_diff': 3.087499999999965e-05}, {'time': 0.018726278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018746, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.018747111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018764319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7208000000001195e-05, 'source_diff': 1.7208000000001195e-05}, {'time': 0.018765389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018790736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5346999999998482e-05, 'source_diff': 2.5346999999998482e-05}, {'time': 0.018791806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.01880375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.018804833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018830528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569499999999919e-05, 'source_diff': 2.569499999999919e-05}, {'time': 0.018831528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018853778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2250000000001435e-05, 'source_diff': 2.2250000000001435e-05}, {'time': 0.018854847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018879861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5014000000000286e-05, 'source_diff': 2.5014000000000286e-05}, {'time': 0.018880944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018903472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2528000000000825e-05, 'source_diff': 2.2528000000000825e-05}, {'time': 0.018904542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018921792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.018922875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018934819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.018935958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.01895125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5292000000000083e-05, 'source_diff': 1.5292000000000083e-05}, {'time': 0.018952319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018970806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8487000000001058e-05, 'source_diff': 1.8487000000001058e-05}, {'time': 0.018971903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018992861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0958000000001475e-05, 'source_diff': 2.0958000000001475e-05}, {'time': 0.018993917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019016486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.256900000000006e-05, 'source_diff': 2.256900000000006e-05}, {'time': 0.019017528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019030736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.019031792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019057778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5986000000002146e-05, 'source_diff': 2.5986000000002146e-05}, {'time': 0.019058833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019085111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6277999999997637e-05, 'source_diff': 2.6277999999997637e-05}, {'time': 0.019086167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019102194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.602699999999832e-05, 'source_diff': 1.602699999999832e-05}, {'time': 0.019103264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019133931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.066700000000158e-05, 'source_diff': 3.066700000000158e-05}, {'time': 0.019134958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.019164028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9069999999999097e-05, 'source_diff': 2.9069999999999097e-05}, {'time': 0.019165097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019188278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.318100000000059e-05, 'source_diff': 2.318100000000059e-05}, {'time': 0.019189361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019217167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7806000000001746e-05, 'source_diff': 2.7806000000001746e-05}, {'time': 0.019218222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019240778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2555999999999965e-05, 'source_diff': 2.2555999999999965e-05}, {'time': 0.019241833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019265944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019267014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019296403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.019297458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019318153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.069500000000113e-05, 'source_diff': 2.069500000000113e-05}, {'time': 0.019319194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2277999999997106e-05, 'source_diff': 2.2277999999997106e-05}, {'time': 0.0193425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019356639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.019357694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.019378389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.069499999999766e-05, 'source_diff': 2.069499999999766e-05}, {'time': 0.019379431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019401069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1638000000000907e-05, 'source_diff': 2.1638000000000907e-05}, {'time': 0.019402111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019428389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6278000000001106e-05, 'source_diff': 2.6278000000001106e-05}, {'time': 0.019429458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019441403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1944999999999317e-05, 'source_diff': 1.1944999999999317e-05}, {'time': 0.019442486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019453778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1292000000003022e-05, 'source_diff': 1.1292000000003022e-05}, {'time': 0.019454806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019477042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.019478056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019496556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8500000000001154e-05, 'source_diff': 1.8500000000001154e-05}, {'time': 0.019497611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019516708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.909699999999917e-05, 'source_diff': 1.909699999999917e-05}, {'time': 0.019517778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019537194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9416000000001266e-05, 'source_diff': 1.9416000000001266e-05}, {'time': 0.019538278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019563611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.533300000000238e-05, 'source_diff': 2.533300000000238e-05}, {'time': 0.019564667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019585694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.102699999999985e-05, 'source_diff': 2.102699999999985e-05}, {'time': 0.019586722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019611819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5096999999998232e-05, 'source_diff': 2.5096999999998232e-05}, {'time': 0.019612819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019633875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1055999999998465e-05, 'source_diff': 2.1055999999998465e-05}, {'time': 0.019634875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019656181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1305999999998715e-05, 'source_diff': 2.1305999999998715e-05}, {'time': 0.019657236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.019679778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2541999999996926e-05, 'source_diff': 2.2541999999996926e-05}, {'time': 0.019680833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019692792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1959000000002357e-05, 'source_diff': 1.1959000000002357e-05}, {'time': 0.019693847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019715167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1319999999998285e-05, 'source_diff': 2.1319999999998285e-05}, {'time': 0.019716222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019746236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0014000000001817e-05, 'source_diff': 3.0014000000001817e-05}, {'time': 0.019747292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019769222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1929999999999866e-05, 'source_diff': 2.1929999999999866e-05}, {'time': 0.019770292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019796875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6583000000000162e-05, 'source_diff': 2.6583000000000162e-05}, {'time': 0.019797931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:56.157" endtime="20201112 12:25:56.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.152" endtime="20201112 12:25:56.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:56.187" level="INFO">${debug-compressed} = {'diff': [0, 1.193999999999501e-06, 3.087499999999965e-05, 1.0839999999984196e-06, 1.9721999999999795e-05, 1.1110000000015552e-06, 1.7208000000001195e-05, 1.0699999999988496e-06, 2.5346999999998482e-0...</msg>
<status status="PASS" starttime="20201112 12:25:56.164" endtime="20201112 12:25:56.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.191" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:56.190" endtime="20201112 12:25:56.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.195" level="INFO">VALUE: {'diff': [0, 1.193999999999501e-06, 3.087499999999965e-05, 1.0839999999984196e-06, 1.9721999999999795e-05, 1.1110000000015552e-06, 1.7208000000001195e-05, 1.0699999999988496e-06, 2.5346999999998482e-05, 1.070000000002319e-06, 1.1943999999999844e-05, 1.082999999998946e-06, 2.569499999999919e-05, 1.000000000001e-06, 2.2250000000001435e-05, 1.068999999999376e-06, 2.5014000000000286e-05, 1.082999999998946e-06, 2.2528000000000825e-05, 1.0699999999988496e-06, 1.7249999999999904e-05, 1.082999999998946e-06, 1.1943999999999844e-05, 1.139000000000695e-06, 1.5292000000000083e-05, 1.068999999999376e-06, 1.8487000000001058e-05, 1.0969999999985158e-06, 2.0958000000001475e-05, 1.0559999999992797e-06, 2.256900000000006e-05, 1.0419999999997098e-06, 1.3208000000000664e-05, 1.0559999999992797e-06, 2.5986000000002146e-05, 1.054999999999806e-06, 2.6277999999997637e-05, 1.0560000000027492e-06, 1.602699999999832e-05, 1.0699999999988496e-06, 3.066700000000158e-05, 1.0270000000006663e-06, 2.9069999999999097e-05, 1.068999999999376e-06, 2.318100000000059e-05, 1.082999999998946e-06, 2.7806000000001746e-05, 1.054999999999806e-06, 2.2555999999999965e-05, 1.054999999999806e-06, 2.411100000000027e-05, 1.0699999999988496e-06, 2.9389000000001192e-05, 1.054999999999806e-06, 2.069500000000113e-05, 1.0410000000002362e-06, 2.2277999999997106e-05, 1.02800000000014e-06, 1.4138999999999818e-05, 1.0550000000032755e-06, 2.069499999999766e-05, 1.0419999999997098e-06, 2.1638000000000907e-05, 1.0419999999997098e-06, 2.6278000000001106e-05, 1.068999999999376e-06, 1.1944999999999317e-05, 1.082999999998946e-06, 1.1292000000003022e-05, 1.02800000000014e-06, 2.2235999999998396e-05, 1.01400000000057e-06, 1.8500000000001154e-05, 1.054999999999806e-06, 1.909699999999917e-05, 1.0699999999988496e-06, 1.9416000000001266e-05, 1.0839999999984196e-06, 2.533300000000238e-05, 1.0559999999992797e-06, 2.102699999999985e-05, 1.02800000000014e-06, 2.5096999999998232e-05, 1.000000000001e-06, 2.1055999999998465e-05, 1.000000000001e-06, 2.1305999999998715e-05, 1.0550000000032755e-06, 2.2541999999996926e-05, 1.054999999999806e-06, 1.1959000000002357e-05, 1.054999999999806e-06, 2.1319999999998285e-05, 1.054999999999806e-06, 3.0014000000001817e-05, 1.0559999999992797e-06, 2.1929999999999866e-05, 1.0699999999988496e-06, 2.6583000000000162e-05, 1.0560000000027492e-06], 'source_diff': [0, 1.193999999999501e-06, 3.087499999999965e-05, 1.0839999999984196e-06, 1.9721999999999795e-05, 1.1110000000015552e-06, 1.7208000000001195e-05, 1.0699999999988496e-06, 2.5346999999998482e-05, 1.070000000002319e-06, 1.1943999999999844e-05, 1.082999999998946e-06, 2.569499999999919e-05, 1.000000000001e-06, 2.2250000000001435e-05, 1.068999999999376e-06, 2.5014000000000286e-05, 1.082999999998946e-06, 2.2528000000000825e-05, 1.0699999999988496e-06, 1.7249999999999904e-05, 1.082999999998946e-06, 1.1943999999999844e-05, 1.139000000000695e-06, 1.5292000000000083e-05, 1.068999999999376e-06, 1.8487000000001058e-05, 1.0969999999985158e-06, 2.0958000000001475e-05, 1.0559999999992797e-06, 2.256900000000006e-05, 1.0419999999997098e-06, 1.3208000000000664e-05, 1.0559999999992797e-06, 2.5986000000002146e-05, 1.054999999999806e-06, 2.6277999999997637e-05, 1.0560000000027492e-06, 1.602699999999832e-05, 1.0699999999988496e-06, 3.066700000000158e-05, 1.0270000000006663e-06, 2.9069999999999097e-05, 1.068999999999376e-06, 2.318100000000059e-05, 1.082999999998946e-06, 2.7806000000001746e-05, 1.054999999999806e-06, 2.2555999999999965e-05, 1.054999999999806e-06, 2.411100000000027e-05, 1.0699999999988496e-06, 2.9389000000001192e-05, 1.054999999999806e-06, 2.069500000000113e-05, 1.0410000000002362e-06, 2.2277999999997106e-05, 1.02800000000014e-06, 1.4138999999999818e-05, 1.0550000000032755e-06, 2.069499999999766e-05, 1.0419999999997098e-06, 2.1638000000000907e-05, 1.0419999999997098e-06, 2.6278000000001106e-05, 1.068999999999376e-06, 1.1944999999999317e-05, 1.082999999998946e-06, 1.1292000000003022e-05, 1.02800000000014e-06, 2.2235999999998396e-05, 1.01400000000057e-06, 1.8500000000001154e-05, 1.054999999999806e-06, 1.909699999999917e-05, 1.0699999999988496e-06, 1.9416000000001266e-05, 1.0839999999984196e-06, 2.533300000000238e-05, 1.0559999999992797e-06, 2.102699999999985e-05, 1.02800000000014e-06, 2.5096999999998232e-05, 1.000000000001e-06, 2.1055999999998465e-05, 1.000000000001e-06, 2.1305999999998715e-05, 1.0550000000032755e-06, 2.2541999999996926e-05, 1.054999999999806e-06, 1.1959000000002357e-05, 1.054999999999806e-06, 2.1319999999998285e-05, 1.054999999999806e-06, 3.0014000000001817e-05, 1.0559999999992797e-06, 2.1929999999999866e-05, 1.0699999999988496e-06, 2.6583000000000162e-05, 1.0560000000027492e-06], 'time': [0.018693125, 0.018694319, 0.018725194, 0.018726278, 0.018746, 0.018747111, 0.018764319, 0.018765389, 0.018790736, 0.018791806, 0.01880375, 0.018804833, 0.018830528, 0.018831528, 0.018853778, 0.018854847, 0.018879861, 0.018880944, 0.018903472, 0.018904542, 0.018921792, 0.018922875, 0.018934819, 0.018935958, 0.01895125, 0.018952319, 0.018970806, 0.018971903, 0.018992861, 0.018993917, 0.019016486, 0.019017528, 0.019030736, 0.019031792, 0.019057778, 0.019058833, 0.019085111, 0.019086167, 0.019102194, 0.019103264, 0.019133931, 0.019134958, 0.019164028, 0.019165097, 0.019188278, 0.019189361, 0.019217167, 0.019218222, 0.019240778, 0.019241833, 0.019265944, 0.019267014, 0.019296403, 0.019297458, 0.019318153, 0.019319194, 0.019341472, 0.0193425, 0.019356639, 0.019357694, 0.019378389, 0.019379431, 0.019401069, 0.019402111, 0.019428389, 0.019429458, 0.019441403, 0.019442486, 0.019453778, 0.019454806, 0.019477042, 0.019478056, 0.019496556, 0.019497611, 0.019516708, 0.019517778, 0.019537194, 0.019538278, 0.019563611, 0.019564667, 0.019585694, 0.019586722, 0.019611819, 0.019612819, 0.019633875, 0.019634875, 0.019656181, 0.019657236, 0.019679778, 0.019680833, 0.019692792, 0.019693847, 0.019715167, 0.019716222, 0.019746236, 0.019747292, 0.019769222, 0.019770292, 0.019796875, 0.019797931], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:56.192" endtime="20201112 12:25:56.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.188" endtime="20201112 12:25:56.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:56.200" level="INFO">${RESULT} = [{'time': 0.018694319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018726278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:56.197" endtime="20201112 12:25:56.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:56.214" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.193999999999501e-06, 1.0839999999984196e-06, 1.1110000000015552e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.0829...</msg>
<status status="PASS" starttime="20201112 12:25:56.201" endtime="20201112 12:25:56.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.218" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:56.217" endtime="20201112 12:25:56.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.221" level="INFO">VALUE: [1.193999999999501e-06, 1.0839999999984196e-06, 1.1110000000015552e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0270000000006663e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.02800000000014e-06, 1.0550000000032755e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.02800000000014e-06, 1.01400000000057e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0550000000032755e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0560000000027492e-06]</msg>
<status status="PASS" starttime="20201112 12:25:56.219" endtime="20201112 12:25:56.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.215" endtime="20201112 12:25:56.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.224" endtime="20201112 12:25:56.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:56.228" endtime="20201112 12:25:56.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.226" endtime="20201112 12:25:56.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.222" endtime="20201112 12:25:56.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.819" endtime="20201112 12:25:56.249"></status>
</kw>
<msg timestamp="20201112 12:25:56.249" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.257" endtime="20201112 12:25:56.266"></status>
</kw>
<msg timestamp="20201112 12:25:56.266" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.255" endtime="20201112 12:25:56.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.269" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.267" endtime="20201112 12:25:56.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.270" endtime="20201112 12:25:56.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.252" endtime="20201112 12:25:56.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.251" endtime="20201112 12:25:56.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.279" endtime="20201112 12:25:56.565"></status>
</kw>
<msg timestamp="20201112 12:25:56.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018637764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.277" endtime="20201112 12:25:56.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018637764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.569" endtime="20201112 12:25:57.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.026" endtime="20201112 12:25:57.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.275" endtime="20201112 12:25:57.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.273" endtime="20201112 12:25:57.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.040" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:57.038" endtime="20201112 12:25:57.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.051" level="INFO">VALUE: [{'time': 0.018637764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018657681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999997935e-05, 'source_diff': 1.8749999999997935e-05}, {'time': 0.018658736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018679417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.068100000000156e-05, 'source_diff': 2.068100000000156e-05}, {'time': 0.018680472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018711431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095900000000054e-05, 'source_diff': 3.095900000000054e-05}, {'time': 0.0187125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018731, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8500000000001154e-05, 'source_diff': 1.8500000000001154e-05}, {'time': 0.018732056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018750917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.886099999999849e-05, 'source_diff': 1.886099999999849e-05}, {'time': 0.018751931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2277000000001509e-05, 'source_diff': 1.2277000000001509e-05}, {'time': 0.01876525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018788736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3485999999999646e-05, 'source_diff': 2.3485999999999646e-05}, {'time': 0.018789792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018820125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333000000000443e-05, 'source_diff': 3.0333000000000443e-05}, {'time': 0.018821181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018846222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5040999999999952e-05, 'source_diff': 2.5040999999999952e-05}, {'time': 0.018847278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018867958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0680000000002086e-05, 'source_diff': 2.0680000000002086e-05}, {'time': 0.018869028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018894681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.01889575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018913375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.762500000000028e-05, 'source_diff': 1.762500000000028e-05}, {'time': 0.018914375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018945014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.018946083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018961139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5055999999999403e-05, 'source_diff': 1.5055999999999403e-05}, {'time': 0.018962208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018975486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3277999999998513e-05, 'source_diff': 1.3277999999998513e-05}, {'time': 0.018976472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.018990306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833999999997293e-05, 'source_diff': 1.3833999999997293e-05}, {'time': 0.018991361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019006125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.019007236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019023208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5971999999999514e-05, 'source_diff': 1.5971999999999514e-05}, {'time': 0.01902425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019041583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.733300000000132e-05, 'source_diff': 1.733300000000132e-05}, {'time': 0.019042583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.019062375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9792000000001114e-05, 'source_diff': 1.9792000000001114e-05}, {'time': 0.019063375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019092764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.019093847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019106097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.019107181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019126597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9415999999997796e-05, 'source_diff': 1.9415999999997796e-05}, {'time': 0.019127681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019156417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8735999999997958e-05, 'source_diff': 2.8735999999997958e-05}, {'time': 0.019157472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019182514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5042000000002895e-05, 'source_diff': 2.5042000000002895e-05}, {'time': 0.019183583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019209875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6292000000000676e-05, 'source_diff': 2.6292000000000676e-05}, {'time': 0.019210931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.755499999999896e-05, 'source_diff': 1.755499999999896e-05}, {'time': 0.019229556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019241806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2250000000001843e-05, 'source_diff': 1.2250000000001843e-05}, {'time': 0.019242903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019272889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9986000000002677e-05, 'source_diff': 2.9986000000002677e-05}, {'time': 0.019273972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019303347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9374999999998153e-05, 'source_diff': 2.9374999999998153e-05}, {'time': 0.019304431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019327278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.284699999999945e-05, 'source_diff': 2.284699999999945e-05}, {'time': 0.019328333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019344958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.019346042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019360486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4443999999998874e-05, 'source_diff': 1.4443999999998874e-05}, {'time': 0.019361528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019375667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.01937675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019399597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.284699999999945e-05, 'source_diff': 2.284699999999945e-05}, {'time': 0.019400708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019429472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8764000000000567e-05, 'source_diff': 2.8764000000000567e-05}, {'time': 0.019430486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019444319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.019445403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019472014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.019473042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019502444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9402000000001288e-05, 'source_diff': 2.9402000000001288e-05}, {'time': 0.019503486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019531014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7527999999998887e-05, 'source_diff': 2.7527999999998887e-05}, {'time': 0.019532069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019554986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.291700000000077e-05, 'source_diff': 2.291700000000077e-05}, {'time': 0.019556028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019581347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5318999999999342e-05, 'source_diff': 2.5318999999999342e-05}, {'time': 0.019582417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019598111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.019599208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019620458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1250000000000435e-05, 'source_diff': 2.1250000000000435e-05}, {'time': 0.019621514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019651556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0042000000000957e-05, 'source_diff': 3.0042000000000957e-05}, {'time': 0.019652639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019671722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.90829999999996e-05, 'source_diff': 1.90829999999996e-05}, {'time': 0.019672792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019696903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019697944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0409999999967667e-06, 'source_diff': 1.0409999999967667e-06}, {'time': 0.019710542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2598000000002552e-05, 'source_diff': 1.2598000000002552e-05}, {'time': 0.019711583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019741292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.970899999999929e-05, 'source_diff': 2.970899999999929e-05}, {'time': 0.019742417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:57.042" endtime="20201112 12:25:57.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.033" endtime="20201112 12:25:57.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:57.111" level="INFO">${debug-compressed} = {'diff': [0, 1.1669999999998348e-06, 1.8749999999997935e-05, 1.054999999999806e-06, 2.068100000000156e-05, 1.054999999999806e-06, 3.095900000000054e-05, 1.068999999999376e-06, 1.8500000000001154e-05, ...</msg>
<status status="PASS" starttime="20201112 12:25:57.057" endtime="20201112 12:25:57.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.119" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:57.117" endtime="20201112 12:25:57.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.128" level="INFO">VALUE: {'diff': [0, 1.1669999999998348e-06, 1.8749999999997935e-05, 1.054999999999806e-06, 2.068100000000156e-05, 1.054999999999806e-06, 3.095900000000054e-05, 1.068999999999376e-06, 1.8500000000001154e-05, 1.0559999999992797e-06, 1.886099999999849e-05, 1.01400000000057e-06, 1.2277000000001509e-05, 1.0419999999997098e-06, 2.3485999999999646e-05, 1.0559999999992797e-06, 3.0333000000000443e-05, 1.0559999999992797e-06, 2.5040999999999952e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0699999999988496e-06, 2.565300000000048e-05, 1.068999999999376e-06, 1.762500000000028e-05, 1.000000000001e-06, 3.063899999999897e-05, 1.068999999999376e-06, 1.5055999999999403e-05, 1.0690000000028455e-06, 1.3277999999998513e-05, 9.860000000014302e-07, 1.3833999999997293e-05, 1.054999999999806e-06, 1.4764000000000443e-05, 1.1110000000015552e-06, 1.5971999999999514e-05, 1.0419999999997098e-06, 1.733300000000132e-05, 9.999999999975306e-07, 1.9792000000001114e-05, 1.000000000001e-06, 2.9389000000001192e-05, 1.082999999998946e-06, 1.2249999999998373e-05, 1.084000000001889e-06, 1.9415999999997796e-05, 1.084000000001889e-06, 2.8735999999997958e-05, 1.054999999999806e-06, 2.5042000000002895e-05, 1.068999999999376e-06, 2.6292000000000676e-05, 1.0559999999992797e-06, 1.755499999999896e-05, 1.0699999999988496e-06, 1.2250000000001843e-05, 1.0969999999985158e-06, 2.9986000000002677e-05, 1.082999999998946e-06, 2.9374999999998153e-05, 1.084000000001889e-06, 2.284699999999945e-05, 1.054999999999806e-06, 1.662499999999928e-05, 1.084000000001889e-06, 1.4443999999998874e-05, 1.0419999999997098e-06, 1.4138999999999818e-05, 1.0830000000024154e-06, 2.284699999999945e-05, 1.1109999999980857e-06, 2.8764000000000567e-05, 1.01400000000057e-06, 1.3833000000001289e-05, 1.0839999999984196e-06, 2.6610999999999302e-05, 1.02800000000014e-06, 2.9402000000001288e-05, 1.0419999999997098e-06, 2.7527999999998887e-05, 1.054999999999806e-06, 2.291700000000077e-05, 1.0419999999997098e-06, 2.5318999999999342e-05, 1.070000000002319e-06, 1.5694000000000125e-05, 1.0969999999985158e-06, 2.1250000000000435e-05, 1.0559999999992797e-06, 3.0042000000000957e-05, 1.082999999998946e-06, 1.90829999999996e-05, 1.070000000002319e-06, 2.411100000000027e-05, 1.0409999999967667e-06, 1.2598000000002552e-05, 1.0410000000002362e-06, 2.970899999999929e-05, 1.125000000001125e-06], 'source_diff': [0, 1.1669999999998348e-06, 1.8749999999997935e-05, 1.054999999999806e-06, 2.068100000000156e-05, 1.054999999999806e-06, 3.095900000000054e-05, 1.068999999999376e-06, 1.8500000000001154e-05, 1.0559999999992797e-06, 1.886099999999849e-05, 1.01400000000057e-06, 1.2277000000001509e-05, 1.0419999999997098e-06, 2.3485999999999646e-05, 1.0559999999992797e-06, 3.0333000000000443e-05, 1.0559999999992797e-06, 2.5040999999999952e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0699999999988496e-06, 2.565300000000048e-05, 1.068999999999376e-06, 1.762500000000028e-05, 1.000000000001e-06, 3.063899999999897e-05, 1.068999999999376e-06, 1.5055999999999403e-05, 1.0690000000028455e-06, 1.3277999999998513e-05, 9.860000000014302e-07, 1.3833999999997293e-05, 1.054999999999806e-06, 1.4764000000000443e-05, 1.1110000000015552e-06, 1.5971999999999514e-05, 1.0419999999997098e-06, 1.733300000000132e-05, 9.999999999975306e-07, 1.9792000000001114e-05, 1.000000000001e-06, 2.9389000000001192e-05, 1.082999999998946e-06, 1.2249999999998373e-05, 1.084000000001889e-06, 1.9415999999997796e-05, 1.084000000001889e-06, 2.8735999999997958e-05, 1.054999999999806e-06, 2.5042000000002895e-05, 1.068999999999376e-06, 2.6292000000000676e-05, 1.0559999999992797e-06, 1.755499999999896e-05, 1.0699999999988496e-06, 1.2250000000001843e-05, 1.0969999999985158e-06, 2.9986000000002677e-05, 1.082999999998946e-06, 2.9374999999998153e-05, 1.084000000001889e-06, 2.284699999999945e-05, 1.054999999999806e-06, 1.662499999999928e-05, 1.084000000001889e-06, 1.4443999999998874e-05, 1.0419999999997098e-06, 1.4138999999999818e-05, 1.0830000000024154e-06, 2.284699999999945e-05, 1.1109999999980857e-06, 2.8764000000000567e-05, 1.01400000000057e-06, 1.3833000000001289e-05, 1.0839999999984196e-06, 2.6610999999999302e-05, 1.02800000000014e-06, 2.9402000000001288e-05, 1.0419999999997098e-06, 2.7527999999998887e-05, 1.054999999999806e-06, 2.291700000000077e-05, 1.0419999999997098e-06, 2.5318999999999342e-05, 1.070000000002319e-06, 1.5694000000000125e-05, 1.0969999999985158e-06, 2.1250000000000435e-05, 1.0559999999992797e-06, 3.0042000000000957e-05, 1.082999999998946e-06, 1.90829999999996e-05, 1.070000000002319e-06, 2.411100000000027e-05, 1.0409999999967667e-06, 1.2598000000002552e-05, 1.0410000000002362e-06, 2.970899999999929e-05, 1.125000000001125e-06], 'time': [0.018637764, 0.018638931, 0.018657681, 0.018658736, 0.018679417, 0.018680472, 0.018711431, 0.0187125, 0.018731, 0.018732056, 0.018750917, 0.018751931, 0.018764208, 0.01876525, 0.018788736, 0.018789792, 0.018820125, 0.018821181, 0.018846222, 0.018847278, 0.018867958, 0.018869028, 0.018894681, 0.01889575, 0.018913375, 0.018914375, 0.018945014, 0.018946083, 0.018961139, 0.018962208, 0.018975486, 0.018976472, 0.018990306, 0.018991361, 0.019006125, 0.019007236, 0.019023208, 0.01902425, 0.019041583, 0.019042583, 0.019062375, 0.019063375, 0.019092764, 0.019093847, 0.019106097, 0.019107181, 0.019126597, 0.019127681, 0.019156417, 0.019157472, 0.019182514, 0.019183583, 0.019209875, 0.019210931, 0.019228486, 0.019229556, 0.019241806, 0.019242903, 0.019272889, 0.019273972, 0.019303347, 0.019304431, 0.019327278, 0.019328333, 0.019344958, 0.019346042, 0.019360486, 0.019361528, 0.019375667, 0.01937675, 0.019399597, 0.019400708, 0.019429472, 0.019430486, 0.019444319, 0.019445403, 0.019472014, 0.019473042, 0.019502444, 0.019503486, 0.019531014, 0.019532069, 0.019554986, 0.019556028, 0.019581347, 0.019582417, 0.019598111, 0.019599208, 0.019620458, 0.019621514, 0.019651556, 0.019652639, 0.019671722, 0.019672792, 0.019696903, 0.019697944, 0.019710542, 0.019711583, 0.019741292, 0.019742417], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:57.121" endtime="20201112 12:25:57.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.113" endtime="20201112 12:25:57.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:57.134" level="INFO">${RESULT} = [{'time': 0.018638931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018658736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:57.130" endtime="20201112 12:25:57.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:57.147" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0...</msg>
<status status="PASS" starttime="20201112 12:25:57.134" endtime="20201112 12:25:57.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.151" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:57.150" endtime="20201112 12:25:57.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.153" level="INFO">VALUE: [1.1669999999998348e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 9.860000000014302e-07, 1.054999999999806e-06, 1.1110000000015552e-06, 1.0419999999997098e-06, 9.999999999975306e-07, 1.000000000001e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.1109999999980857e-06, 1.01400000000057e-06, 1.0839999999984196e-06, 1.02800000000014e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0409999999967667e-06, 1.0410000000002362e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201112 12:25:57.152" endtime="20201112 12:25:57.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.148" endtime="20201112 12:25:57.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.156" endtime="20201112 12:25:57.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:57.160" endtime="20201112 12:25:57.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.158" endtime="20201112 12:25:57.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.155" endtime="20201112 12:25:57.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.249" endtime="20201112 12:25:57.180"></status>
</kw>
<msg timestamp="20201112 12:25:57.181" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.188" endtime="20201112 12:25:57.197"></status>
</kw>
<msg timestamp="20201112 12:25:57.198" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.187" endtime="20201112 12:25:57.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.200" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.199" endtime="20201112 12:25:57.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.201" endtime="20201112 12:25:57.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.184" endtime="20201112 12:25:57.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.182" endtime="20201112 12:25:57.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.210" endtime="20201112 12:25:57.496"></status>
</kw>
<msg timestamp="20201112 12:25:57.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018429069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01843025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:25:57.209" endtime="20201112 12:25:57.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018429069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01843025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:25:57.500" endtime="20201112 12:25:57.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.509" endtime="20201112 12:25:57.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.206" endtime="20201112 12:25:57.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.204" endtime="20201112 12:25:57.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.515" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:57.514" endtime="20201112 12:25:57.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.520" level="INFO">VALUE: [{'time': 0.018429069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01843025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018441472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1222000000001703e-05, 'source_diff': 1.1222000000001703e-05}, {'time': 0.018442597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018473417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.081999999999738e-05, 'source_diff': 3.081999999999738e-05}, {'time': 0.018474472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018490806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6333999999999793e-05, 'source_diff': 1.6333999999999793e-05}, {'time': 0.018491861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018517528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.566700000000005e-05, 'source_diff': 2.566700000000005e-05}, {'time': 0.018518583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018540833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2249999999997966e-05, 'source_diff': 2.2249999999997966e-05}, {'time': 0.018541875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018561639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9764000000001974e-05, 'source_diff': 1.9764000000001974e-05}, {'time': 0.018562694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018590833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8138999999999942e-05, 'source_diff': 2.8138999999999942e-05}, {'time': 0.018591903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018621611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9707999999999818e-05, 'source_diff': 2.9707999999999818e-05}, {'time': 0.018622667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018650819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8152000000000038e-05, 'source_diff': 2.8152000000000038e-05}, {'time': 0.018651889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018665722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}, {'time': 0.018666778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018681847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5069000000002969e-05, 'source_diff': 1.5069000000002969e-05}, {'time': 0.018682931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018704222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.129099999999967e-05, 'source_diff': 2.129099999999967e-05}, {'time': 0.018705278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018719722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4444000000002344e-05, 'source_diff': 1.4444000000002344e-05}, {'time': 0.018720778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01874675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5971999999999107e-05, 'source_diff': 2.5971999999999107e-05}, {'time': 0.018747806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263e-05, 'source_diff': 1.7263e-05}, {'time': 0.018766125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018792417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6291999999997206e-05, 'source_diff': 2.6291999999997206e-05}, {'time': 0.018793486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.01881975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6263999999998067e-05, 'source_diff': 2.6263999999998067e-05}, {'time': 0.018820833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018832472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.018833528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018857625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.018858694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018883736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5042000000002895e-05, 'source_diff': 2.5042000000002895e-05}, {'time': 0.018884792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018898931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.0189, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018913833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.018914889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018929014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.018930083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018948569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8485999999998115e-05, 'source_diff': 1.8485999999998115e-05}, {'time': 0.018949681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018968778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.909699999999917e-05, 'source_diff': 1.909699999999917e-05}, {'time': 0.018969819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018986181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6362000000002402e-05, 'source_diff': 1.6362000000002402e-05}, {'time': 0.018987222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018998514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1291999999999552e-05, 'source_diff': 1.1291999999999552e-05}, {'time': 0.018999528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019026694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7165999999998608e-05, 'source_diff': 2.7165999999998608e-05}, {'time': 0.019027764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019040958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.019042014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019071417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.019072486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019100014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7527999999998887e-05, 'source_diff': 2.7527999999998887e-05}, {'time': 0.019101111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019132069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.019133083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0139999999971006e-06, 'source_diff': 1.0139999999971006e-06}, {'time': 0.019160944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7861000000000552e-05, 'source_diff': 2.7861000000000552e-05}, {'time': 0.019161986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019192014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0028000000001387e-05, 'source_diff': 3.0028000000001387e-05}, {'time': 0.019193069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019206903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3834000000000762e-05, 'source_diff': 1.3834000000000762e-05}, {'time': 0.019207986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019221208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3222000000000234e-05, 'source_diff': 1.3222000000000234e-05}, {'time': 0.01922225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019245083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.283299999999988e-05, 'source_diff': 2.283299999999988e-05}, {'time': 0.019246167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019259361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3193999999997624e-05, 'source_diff': 1.3193999999997624e-05}, {'time': 0.019260417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019273319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2902000000002134e-05, 'source_diff': 1.2902000000002134e-05}, {'time': 0.019274417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.01928975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.533300000000279e-05, 'source_diff': 1.533300000000279e-05}, {'time': 0.019290819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019311792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.097300000000052e-05, 'source_diff': 2.097300000000052e-05}, {'time': 0.019312861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019341319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8457999999998568e-05, 'source_diff': 2.8457999999998568e-05}, {'time': 0.019342403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019361236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.883299999999935e-05, 'source_diff': 1.883299999999935e-05}, {'time': 0.019362278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019376083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.380499999999868e-05, 'source_diff': 1.380499999999868e-05}, {'time': 0.019377139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019397819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0679999999998616e-05, 'source_diff': 2.0679999999998616e-05}, {'time': 0.019398889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019416153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.019417208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019441319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019442361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019463986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.019465042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019482292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019483361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:57.516" endtime="20201112 12:25:57.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.512" endtime="20201112 12:25:57.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:57.546" level="INFO">${debug-compressed} = {'diff': [0, 1.1809999999994047e-06, 1.1222000000001703e-05, 1.125000000001125e-06, 3.081999999999738e-05, 1.054999999999806e-06, 1.6333999999999793e-05, 1.054999999999806e-06, 2.566700000000005e-05, ...</msg>
<status status="PASS" starttime="20201112 12:25:57.523" endtime="20201112 12:25:57.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.550" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:57.549" endtime="20201112 12:25:57.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.554" level="INFO">VALUE: {'diff': [0, 1.1809999999994047e-06, 1.1222000000001703e-05, 1.125000000001125e-06, 3.081999999999738e-05, 1.054999999999806e-06, 1.6333999999999793e-05, 1.054999999999806e-06, 2.566700000000005e-05, 1.0550000000032755e-06, 2.2249999999997966e-05, 1.0419999999997098e-06, 1.9764000000001974e-05, 1.054999999999806e-06, 2.8138999999999942e-05, 1.0699999999988496e-06, 2.9707999999999818e-05, 1.0559999999992797e-06, 2.8152000000000038e-05, 1.070000000002319e-06, 1.383299999999782e-05, 1.0559999999992797e-06, 1.5069000000002969e-05, 1.0839999999984196e-06, 2.129099999999967e-05, 1.0559999999992797e-06, 1.4444000000002344e-05, 1.0559999999992797e-06, 2.5971999999999107e-05, 1.0559999999992797e-06, 1.7263e-05, 1.0560000000027492e-06, 2.6291999999997206e-05, 1.0690000000028455e-06, 2.6263999999998067e-05, 1.082999999998946e-06, 1.1639000000000788e-05, 1.0559999999992797e-06, 2.40970000000007e-05, 1.068999999999376e-06, 2.5042000000002895e-05, 1.0559999999992797e-06, 1.4138999999999818e-05, 1.068999999999376e-06, 1.3833000000001289e-05, 1.0559999999992797e-06, 1.4125000000000248e-05, 1.068999999999376e-06, 1.8485999999998115e-05, 1.1120000000010288e-06, 1.909699999999917e-05, 1.0410000000002362e-06, 1.6362000000002402e-05, 1.0410000000002362e-06, 1.1291999999999552e-05, 1.01400000000057e-06, 2.7165999999998608e-05, 1.0699999999988496e-06, 1.3194000000001094e-05, 1.0559999999992797e-06, 2.9403000000000762e-05, 1.068999999999376e-06, 2.7527999999998887e-05, 1.0970000000019853e-06, 3.095800000000107e-05, 1.0139999999971006e-06, 2.7861000000000552e-05, 1.0419999999997098e-06, 3.0028000000001387e-05, 1.054999999999806e-06, 1.3834000000000762e-05, 1.082999999998946e-06, 1.3222000000000234e-05, 1.0419999999997098e-06, 2.283299999999988e-05, 1.084000000001889e-06, 1.3193999999997624e-05, 1.0559999999992797e-06, 1.2902000000002134e-05, 1.0979999999979895e-06, 1.533300000000279e-05, 1.068999999999376e-06, 2.097300000000052e-05, 1.068999999999376e-06, 2.8457999999998568e-05, 1.084000000001889e-06, 1.883299999999935e-05, 1.0419999999997098e-06, 1.380499999999868e-05, 1.0560000000027492e-06, 2.0679999999998616e-05, 1.0699999999988496e-06, 1.7263999999999474e-05, 1.054999999999806e-06, 2.411100000000027e-05, 1.0419999999997098e-06, 2.162500000000081e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.0690000000028455e-06], 'source_diff': [0, 1.1809999999994047e-06, 1.1222000000001703e-05, 1.125000000001125e-06, 3.081999999999738e-05, 1.054999999999806e-06, 1.6333999999999793e-05, 1.054999999999806e-06, 2.566700000000005e-05, 1.0550000000032755e-06, 2.2249999999997966e-05, 1.0419999999997098e-06, 1.9764000000001974e-05, 1.054999999999806e-06, 2.8138999999999942e-05, 1.0699999999988496e-06, 2.9707999999999818e-05, 1.0559999999992797e-06, 2.8152000000000038e-05, 1.070000000002319e-06, 1.383299999999782e-05, 1.0559999999992797e-06, 1.5069000000002969e-05, 1.0839999999984196e-06, 2.129099999999967e-05, 1.0559999999992797e-06, 1.4444000000002344e-05, 1.0559999999992797e-06, 2.5971999999999107e-05, 1.0559999999992797e-06, 1.7263e-05, 1.0560000000027492e-06, 2.6291999999997206e-05, 1.0690000000028455e-06, 2.6263999999998067e-05, 1.082999999998946e-06, 1.1639000000000788e-05, 1.0559999999992797e-06, 2.40970000000007e-05, 1.068999999999376e-06, 2.5042000000002895e-05, 1.0559999999992797e-06, 1.4138999999999818e-05, 1.068999999999376e-06, 1.3833000000001289e-05, 1.0559999999992797e-06, 1.4125000000000248e-05, 1.068999999999376e-06, 1.8485999999998115e-05, 1.1120000000010288e-06, 1.909699999999917e-05, 1.0410000000002362e-06, 1.6362000000002402e-05, 1.0410000000002362e-06, 1.1291999999999552e-05, 1.01400000000057e-06, 2.7165999999998608e-05, 1.0699999999988496e-06, 1.3194000000001094e-05, 1.0559999999992797e-06, 2.9403000000000762e-05, 1.068999999999376e-06, 2.7527999999998887e-05, 1.0970000000019853e-06, 3.095800000000107e-05, 1.0139999999971006e-06, 2.7861000000000552e-05, 1.0419999999997098e-06, 3.0028000000001387e-05, 1.054999999999806e-06, 1.3834000000000762e-05, 1.082999999998946e-06, 1.3222000000000234e-05, 1.0419999999997098e-06, 2.283299999999988e-05, 1.084000000001889e-06, 1.3193999999997624e-05, 1.0559999999992797e-06, 1.2902000000002134e-05, 1.0979999999979895e-06, 1.533300000000279e-05, 1.068999999999376e-06, 2.097300000000052e-05, 1.068999999999376e-06, 2.8457999999998568e-05, 1.084000000001889e-06, 1.883299999999935e-05, 1.0419999999997098e-06, 1.380499999999868e-05, 1.0560000000027492e-06, 2.0679999999998616e-05, 1.0699999999988496e-06, 1.7263999999999474e-05, 1.054999999999806e-06, 2.411100000000027e-05, 1.0419999999997098e-06, 2.162500000000081e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.0690000000028455e-06], 'time': [0.018429069, 0.01843025, 0.018441472, 0.018442597, 0.018473417, 0.018474472, 0.018490806, 0.018491861, 0.018517528, 0.018518583, 0.018540833, 0.018541875, 0.018561639, 0.018562694, 0.018590833, 0.018591903, 0.018621611, 0.018622667, 0.018650819, 0.018651889, 0.018665722, 0.018666778, 0.018681847, 0.018682931, 0.018704222, 0.018705278, 0.018719722, 0.018720778, 0.01874675, 0.018747806, 0.018765069, 0.018766125, 0.018792417, 0.018793486, 0.01881975, 0.018820833, 0.018832472, 0.018833528, 0.018857625, 0.018858694, 0.018883736, 0.018884792, 0.018898931, 0.0189, 0.018913833, 0.018914889, 0.018929014, 0.018930083, 0.018948569, 0.018949681, 0.018968778, 0.018969819, 0.018986181, 0.018987222, 0.018998514, 0.018999528, 0.019026694, 0.019027764, 0.019040958, 0.019042014, 0.019071417, 0.019072486, 0.019100014, 0.019101111, 0.019132069, 0.019133083, 0.019160944, 0.019161986, 0.019192014, 0.019193069, 0.019206903, 0.019207986, 0.019221208, 0.01922225, 0.019245083, 0.019246167, 0.019259361, 0.019260417, 0.019273319, 0.019274417, 0.01928975, 0.019290819, 0.019311792, 0.019312861, 0.019341319, 0.019342403, 0.019361236, 0.019362278, 0.019376083, 0.019377139, 0.019397819, 0.019398889, 0.019416153, 0.019417208, 0.019441319, 0.019442361, 0.019463986, 0.019465042, 0.019482292, 0.019483361], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:57.551" endtime="20201112 12:25:57.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.547" endtime="20201112 12:25:57.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:57.559" level="INFO">${RESULT} = [{'time': 0.01843025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018442597, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:25:57.556" endtime="20201112 12:25:57.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:57.573" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1....</msg>
<status status="PASS" starttime="20201112 12:25:57.560" endtime="20201112 12:25:57.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.577" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:57.576" endtime="20201112 12:25:57.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.579" level="INFO">VALUE: [1.1809999999994047e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.1120000000010288e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.01400000000057e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.0139999999971006e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.0979999999979895e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0690000000028455e-06]</msg>
<status status="PASS" starttime="20201112 12:25:57.578" endtime="20201112 12:25:57.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.573" endtime="20201112 12:25:57.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.582" endtime="20201112 12:25:57.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:57.586" endtime="20201112 12:25:57.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.584" endtime="20201112 12:25:57.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.581" endtime="20201112 12:25:57.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.181" endtime="20201112 12:25:57.608"></status>
</kw>
<msg timestamp="20201112 12:25:57.608" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.615" endtime="20201112 12:25:57.624"></status>
</kw>
<msg timestamp="20201112 12:25:57.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.614" endtime="20201112 12:25:57.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.627" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.626" endtime="20201112 12:25:57.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.629" endtime="20201112 12:25:57.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.611" endtime="20201112 12:25:57.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.610" endtime="20201112 12:25:57.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.637" endtime="20201112 12:25:57.923"></status>
</kw>
<msg timestamp="20201112 12:25:57.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018580597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018581778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.636" endtime="20201112 12:25:57.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018580597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018581778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.927" endtime="20201112 12:25:57.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.935" endtime="20201112 12:25:57.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.633" endtime="20201112 12:25:57.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.632" endtime="20201112 12:25:57.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.942" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:57.941" endtime="20201112 12:25:57.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.947" level="INFO">VALUE: [{'time': 0.018580597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018581778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018595847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.40689999999985e-05, 'source_diff': 1.40689999999985e-05}, {'time': 0.018596917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018616347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9429999999997366e-05, 'source_diff': 1.9429999999997366e-05}, {'time': 0.018617417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018635583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8166000000000015e-05, 'source_diff': 1.8166000000000015e-05}, {'time': 0.018636681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.018656708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.002700000000232e-05, 'source_diff': 2.002700000000232e-05}, {'time': 0.018657764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018671319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.355499999999843e-05, 'source_diff': 1.355499999999843e-05}, {'time': 0.018672333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018697375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.018698444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018715681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7236999999999808e-05, 'source_diff': 1.7236999999999808e-05}, {'time': 0.018716736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018738361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162499999999734e-05, 'source_diff': 2.162499999999734e-05}, {'time': 0.018739403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.018761639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.018762708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018793653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.094500000000097e-05, 'source_diff': 3.094500000000097e-05}, {'time': 0.018794736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018807931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.018808972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018831514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.018832583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018846097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018847153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018868764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.018869833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018881125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1291999999999552e-05, 'source_diff': 1.1291999999999552e-05}, {'time': 0.018882153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018899347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7194000000001625e-05, 'source_diff': 1.7194000000001625e-05}, {'time': 0.018900403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018916097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.018917153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018936292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.913900000000135e-05, 'source_diff': 1.913900000000135e-05}, {'time': 0.018937333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018958333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.018959389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018985361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5971999999999107e-05, 'source_diff': 2.5971999999999107e-05}, {'time': 0.018986431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019015194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8762999999997624e-05, 'source_diff': 2.8762999999997624e-05}, {'time': 0.019016278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019028819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.254099999999786e-05, 'source_diff': 1.254099999999786e-05}, {'time': 0.019029889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019057417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7527999999998887e-05, 'source_diff': 2.7527999999998887e-05}, {'time': 0.019058486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019081944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3458000000000506e-05, 'source_diff': 2.3458000000000506e-05}, {'time': 0.019083014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019109917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.690300000000173e-05, 'source_diff': 2.690300000000173e-05}, {'time': 0.019110972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019125111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.019126167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019142181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6014000000001694e-05, 'source_diff': 1.6014000000001694e-05}, {'time': 0.01914325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019158306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5055999999999403e-05, 'source_diff': 1.5055999999999403e-05}, {'time': 0.019159375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019171653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.019172694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019192125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.943100000000031e-05, 'source_diff': 1.943100000000031e-05}, {'time': 0.019193208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019222903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.969499999999972e-05, 'source_diff': 2.969499999999972e-05}, {'time': 0.019223958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019240583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.019241653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019257028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.537499999999803e-05, 'source_diff': 1.537499999999803e-05}, {'time': 0.019258083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019283125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5042000000002895e-05, 'source_diff': 2.5042000000002895e-05}, {'time': 0.019284181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019310778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.019311819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019328792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6972999999999988e-05, 'source_diff': 1.6972999999999988e-05}, {'time': 0.019329819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.019348014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819499999999863e-05, 'source_diff': 1.819499999999863e-05}, {'time': 0.019349069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019366333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.019367375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019397708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333000000000443e-05, 'source_diff': 3.0333000000000443e-05}, {'time': 0.019398764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019426292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7528000000002356e-05, 'source_diff': 2.7528000000002356e-05}, {'time': 0.019427347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.01945175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.440299999999923e-05, 'source_diff': 2.440299999999923e-05}, {'time': 0.019452819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019464083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.019465153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019476375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1222000000001703e-05, 'source_diff': 1.1222000000001703e-05}, {'time': 0.019477417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019502083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4665999999999577e-05, 'source_diff': 2.4665999999999577e-05}, {'time': 0.019503139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019531597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8458000000002037e-05, 'source_diff': 2.8458000000002037e-05}, {'time': 0.019532653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.0195605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7847000000000982e-05, 'source_diff': 2.7847000000000982e-05}, {'time': 0.019561569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019585347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3777999999998606e-05, 'source_diff': 2.3777999999998606e-05}, {'time': 0.019586403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019601806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540300000000064e-05, 'source_diff': 1.540300000000064e-05}, {'time': 0.019602847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019625097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2250000000001435e-05, 'source_diff': 2.2250000000001435e-05}, {'time': 0.019626167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:57.943" endtime="20201112 12:25:57.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.939" endtime="20201112 12:25:57.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:57.973" level="INFO">${debug-compressed} = {'diff': [0, 1.1809999999994047e-06, 1.40689999999985e-05, 1.070000000002319e-06, 1.9429999999997366e-05, 1.070000000002319e-06, 1.8166000000000015e-05, 1.0979999999979895e-06, 2.002700000000232e-05, ...</msg>
<status status="PASS" starttime="20201112 12:25:57.949" endtime="20201112 12:25:57.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.977" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:57.976" endtime="20201112 12:25:57.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.981" level="INFO">VALUE: {'diff': [0, 1.1809999999994047e-06, 1.40689999999985e-05, 1.070000000002319e-06, 1.9429999999997366e-05, 1.070000000002319e-06, 1.8166000000000015e-05, 1.0979999999979895e-06, 2.002700000000232e-05, 1.0559999999992797e-06, 1.355499999999843e-05, 1.01400000000057e-06, 2.5041999999999426e-05, 1.0690000000028455e-06, 1.7236999999999808e-05, 1.054999999999806e-06, 2.162499999999734e-05, 1.0420000000031793e-06, 2.2235999999998396e-05, 1.068999999999376e-06, 3.094500000000097e-05, 1.082999999998946e-06, 1.3195000000000567e-05, 1.0410000000002362e-06, 2.2542000000000395e-05, 1.068999999999376e-06, 1.3513999999999193e-05, 1.0559999999992797e-06, 2.161100000000124e-05, 1.068999999999376e-06, 1.1291999999999552e-05, 1.02800000000014e-06, 1.7194000000001625e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0559999999992797e-06, 1.913900000000135e-05, 1.0410000000002362e-06, 2.1000000000000185e-05, 1.0559999999992797e-06, 2.5971999999999107e-05, 1.070000000002319e-06, 2.8762999999997624e-05, 1.084000000001889e-06, 1.254099999999786e-05, 1.070000000002319e-06, 2.7527999999998887e-05, 1.068999999999376e-06, 2.3458000000000506e-05, 1.0699999999988496e-06, 2.690300000000173e-05, 1.054999999999806e-06, 1.4138999999999818e-05, 1.0559999999992797e-06, 1.6014000000001694e-05, 1.068999999999376e-06, 1.5055999999999403e-05, 1.068999999999376e-06, 1.2278000000000983e-05, 1.0410000000002362e-06, 1.943100000000031e-05, 1.082999999998946e-06, 2.969499999999972e-05, 1.054999999999806e-06, 1.662499999999928e-05, 1.070000000002319e-06, 1.537499999999803e-05, 1.054999999999806e-06, 2.5042000000002895e-05, 1.0559999999992797e-06, 2.6596999999999732e-05, 1.0410000000002362e-06, 1.6972999999999988e-05, 1.0270000000006663e-06, 1.819499999999863e-05, 1.054999999999806e-06, 1.7263999999999474e-05, 1.0419999999997098e-06, 3.0333000000000443e-05, 1.0559999999992797e-06, 2.7528000000002356e-05, 1.054999999999806e-06, 2.440299999999923e-05, 1.068999999999376e-06, 1.1264000000000413e-05, 1.0699999999988496e-06, 1.1222000000001703e-05, 1.0419999999997098e-06, 2.4665999999999577e-05, 1.0559999999992797e-06, 2.8458000000002037e-05, 1.0559999999992797e-06, 2.7847000000000982e-05, 1.068999999999376e-06, 2.3777999999998606e-05, 1.0559999999992797e-06, 1.540300000000064e-05, 1.0410000000002362e-06, 2.2250000000001435e-05, 1.0699999999988496e-06], 'source_diff': [0, 1.1809999999994047e-06, 1.40689999999985e-05, 1.070000000002319e-06, 1.9429999999997366e-05, 1.070000000002319e-06, 1.8166000000000015e-05, 1.0979999999979895e-06, 2.002700000000232e-05, 1.0559999999992797e-06, 1.355499999999843e-05, 1.01400000000057e-06, 2.5041999999999426e-05, 1.0690000000028455e-06, 1.7236999999999808e-05, 1.054999999999806e-06, 2.162499999999734e-05, 1.0420000000031793e-06, 2.2235999999998396e-05, 1.068999999999376e-06, 3.094500000000097e-05, 1.082999999998946e-06, 1.3195000000000567e-05, 1.0410000000002362e-06, 2.2542000000000395e-05, 1.068999999999376e-06, 1.3513999999999193e-05, 1.0559999999992797e-06, 2.161100000000124e-05, 1.068999999999376e-06, 1.1291999999999552e-05, 1.02800000000014e-06, 1.7194000000001625e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0559999999992797e-06, 1.913900000000135e-05, 1.0410000000002362e-06, 2.1000000000000185e-05, 1.0559999999992797e-06, 2.5971999999999107e-05, 1.070000000002319e-06, 2.8762999999997624e-05, 1.084000000001889e-06, 1.254099999999786e-05, 1.070000000002319e-06, 2.7527999999998887e-05, 1.068999999999376e-06, 2.3458000000000506e-05, 1.0699999999988496e-06, 2.690300000000173e-05, 1.054999999999806e-06, 1.4138999999999818e-05, 1.0559999999992797e-06, 1.6014000000001694e-05, 1.068999999999376e-06, 1.5055999999999403e-05, 1.068999999999376e-06, 1.2278000000000983e-05, 1.0410000000002362e-06, 1.943100000000031e-05, 1.082999999998946e-06, 2.969499999999972e-05, 1.054999999999806e-06, 1.662499999999928e-05, 1.070000000002319e-06, 1.537499999999803e-05, 1.054999999999806e-06, 2.5042000000002895e-05, 1.0559999999992797e-06, 2.6596999999999732e-05, 1.0410000000002362e-06, 1.6972999999999988e-05, 1.0270000000006663e-06, 1.819499999999863e-05, 1.054999999999806e-06, 1.7263999999999474e-05, 1.0419999999997098e-06, 3.0333000000000443e-05, 1.0559999999992797e-06, 2.7528000000002356e-05, 1.054999999999806e-06, 2.440299999999923e-05, 1.068999999999376e-06, 1.1264000000000413e-05, 1.0699999999988496e-06, 1.1222000000001703e-05, 1.0419999999997098e-06, 2.4665999999999577e-05, 1.0559999999992797e-06, 2.8458000000002037e-05, 1.0559999999992797e-06, 2.7847000000000982e-05, 1.068999999999376e-06, 2.3777999999998606e-05, 1.0559999999992797e-06, 1.540300000000064e-05, 1.0410000000002362e-06, 2.2250000000001435e-05, 1.0699999999988496e-06], 'time': [0.018580597, 0.018581778, 0.018595847, 0.018596917, 0.018616347, 0.018617417, 0.018635583, 0.018636681, 0.018656708, 0.018657764, 0.018671319, 0.018672333, 0.018697375, 0.018698444, 0.018715681, 0.018716736, 0.018738361, 0.018739403, 0.018761639, 0.018762708, 0.018793653, 0.018794736, 0.018807931, 0.018808972, 0.018831514, 0.018832583, 0.018846097, 0.018847153, 0.018868764, 0.018869833, 0.018881125, 0.018882153, 0.018899347, 0.018900403, 0.018916097, 0.018917153, 0.018936292, 0.018937333, 0.018958333, 0.018959389, 0.018985361, 0.018986431, 0.019015194, 0.019016278, 0.019028819, 0.019029889, 0.019057417, 0.019058486, 0.019081944, 0.019083014, 0.019109917, 0.019110972, 0.019125111, 0.019126167, 0.019142181, 0.01914325, 0.019158306, 0.019159375, 0.019171653, 0.019172694, 0.019192125, 0.019193208, 0.019222903, 0.019223958, 0.019240583, 0.019241653, 0.019257028, 0.019258083, 0.019283125, 0.019284181, 0.019310778, 0.019311819, 0.019328792, 0.019329819, 0.019348014, 0.019349069, 0.019366333, 0.019367375, 0.019397708, 0.019398764, 0.019426292, 0.019427347, 0.01945175, 0.019452819, 0.019464083, 0.019465153, 0.019476375, 0.019477417, 0.019502083, 0.019503139, 0.019531597, 0.019532653, 0.0195605, 0.019561569, 0.019585347, 0.019586403, 0.019601806, 0.019602847, 0.019625097, 0.019626167], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:57.978" endtime="20201112 12:25:57.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.974" endtime="20201112 12:25:57.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:57.986" level="INFO">${RESULT} = [{'time': 0.018581778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018596917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:57.983" endtime="20201112 12:25:57.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:58.000" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.0979999999979895e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0...</msg>
<status status="PASS" starttime="20201112 12:25:57.987" endtime="20201112 12:25:58.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.004" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:58.003" endtime="20201112 12:25:58.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.006" level="INFO">VALUE: [1.1809999999994047e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.0979999999979895e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0420000000031793e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.084000000001889e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0270000000006663e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201112 12:25:58.005" endtime="20201112 12:25:58.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.001" endtime="20201112 12:25:58.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.009" endtime="20201112 12:25:58.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.013" endtime="20201112 12:25:58.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.011" endtime="20201112 12:25:58.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.008" endtime="20201112 12:25:58.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.608" endtime="20201112 12:25:58.033"></status>
</kw>
<msg timestamp="20201112 12:25:58.034" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.041" endtime="20201112 12:25:58.050"></status>
</kw>
<msg timestamp="20201112 12:25:58.051" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.040" endtime="20201112 12:25:58.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.053" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.052" endtime="20201112 12:25:58.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.054" endtime="20201112 12:25:58.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.037" endtime="20201112 12:25:58.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.035" endtime="20201112 12:25:58.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.063" endtime="20201112 12:25:58.349"></status>
</kw>
<msg timestamp="20201112 12:25:58.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.062" endtime="20201112 12:25:58.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.353" endtime="20201112 12:25:58.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.362" endtime="20201112 12:25:58.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.059" endtime="20201112 12:25:58.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.057" endtime="20201112 12:25:58.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.368" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:58.367" endtime="20201112 12:25:58.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.373" level="INFO">VALUE: [{'time': 0.018368069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.018397361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8097000000001232e-05, 'source_diff': 2.8097000000001232e-05}, {'time': 0.018398417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018422194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3776999999999132e-05, 'source_diff': 2.3776999999999132e-05}, {'time': 0.018423264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018438333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.50689999999995e-05, 'source_diff': 1.50689999999995e-05}, {'time': 0.018439389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018453847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4457999999998444e-05, 'source_diff': 1.4457999999998444e-05}, {'time': 0.018454917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018473431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8513999999997255e-05, 'source_diff': 1.8513999999997255e-05}, {'time': 0.018474486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018492333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.784700000000139e-05, 'source_diff': 1.784700000000139e-05}, {'time': 0.018493403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018521861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8458000000002037e-05, 'source_diff': 2.8458000000002037e-05}, {'time': 0.018522917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018551694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8777000000000663e-05, 'source_diff': 2.8777000000000663e-05}, {'time': 0.01855275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018566667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3916999999998708e-05, 'source_diff': 1.3916999999998708e-05}, {'time': 0.018567639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.018585208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.756899999999853e-05, 'source_diff': 1.756899999999853e-05}, {'time': 0.018586264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.0186085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.018609569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018629625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0056000000000934e-05, 'source_diff': 2.0056000000000934e-05}, {'time': 0.018630681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018648236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.755499999999896e-05, 'source_diff': 1.755499999999896e-05}, {'time': 0.018649319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018661639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319999999999692e-05, 'source_diff': 1.2319999999999692e-05}, {'time': 0.018662639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018676458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.018677569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018694764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.719499999999763e-05, 'source_diff': 1.719499999999763e-05}, {'time': 0.018695833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018721861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6028000000000856e-05, 'source_diff': 2.6028000000000856e-05}, {'time': 0.018722861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018750097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.018751167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018778403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.018779444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018794486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5041999999999833e-05, 'source_diff': 1.5041999999999833e-05}, {'time': 0.018795542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018812792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.018813861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018828611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4749999999997404e-05, 'source_diff': 1.4749999999997404e-05}, {'time': 0.018829681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018847236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.755499999999896e-05, 'source_diff': 1.755499999999896e-05}, {'time': 0.018848319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018871806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.348700000000259e-05, 'source_diff': 2.348700000000259e-05}, {'time': 0.018872903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018891653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000001404e-05, 'source_diff': 1.8750000000001404e-05}, {'time': 0.018892722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018921167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.844499999999847e-05, 'source_diff': 2.844499999999847e-05}, {'time': 0.01892225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.01893575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.018936806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018967778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097200000000064e-05, 'source_diff': 3.097200000000064e-05}, {'time': 0.018968833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018997306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847299999999761e-05, 'source_diff': 2.847299999999761e-05}, {'time': 0.018998347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019016889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8541999999999864e-05, 'source_diff': 1.8541999999999864e-05}, {'time': 0.019017917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019036708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.879100000000064e-05, 'source_diff': 1.879100000000064e-05}, {'time': 0.019037764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019064667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.690300000000173e-05, 'source_diff': 2.690300000000173e-05}, {'time': 0.019065736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019077375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.019078444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019096014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7570000000001473e-05, 'source_diff': 1.7570000000001473e-05}, {'time': 0.019097056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019115861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.880500000000021e-05, 'source_diff': 1.880500000000021e-05}, {'time': 0.019116944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019128194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.019129278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019156139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6860999999999552e-05, 'source_diff': 2.6860999999999552e-05}, {'time': 0.019157167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019182278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.511100000000127e-05, 'source_diff': 2.511100000000127e-05}, {'time': 0.019183264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.019197097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.019198153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019224444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6291000000001202e-05, 'source_diff': 2.6291000000001202e-05}, {'time': 0.0192255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019253014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7513999999999317e-05, 'source_diff': 2.7513999999999317e-05}, {'time': 0.019254083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019277875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3791999999998176e-05, 'source_diff': 2.3791999999998176e-05}, {'time': 0.019278931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019291278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.019292264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019316042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3777999999998606e-05, 'source_diff': 2.3777999999998606e-05}, {'time': 0.019317111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019341514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.440299999999923e-05, 'source_diff': 2.440299999999923e-05}, {'time': 0.019342583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019372597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0013999999998348e-05, 'source_diff': 3.0013999999998348e-05}, {'time': 0.019373667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019393722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.005499999999799e-05, 'source_diff': 2.005499999999799e-05}, {'time': 0.019394764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019413264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8500000000001154e-05, 'source_diff': 1.8500000000001154e-05}, {'time': 0.019414319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019434694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.037499999999956e-05, 'source_diff': 2.037499999999956e-05}, {'time': 0.01943575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:58.369" endtime="20201112 12:25:58.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.365" endtime="20201112 12:25:58.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:58.399" level="INFO">${debug-compressed} = {'diff': [0, 1.1949999999989747e-06, 2.8097000000001232e-05, 1.0559999999992797e-06, 2.3776999999999132e-05, 1.070000000002319e-06, 1.50689999999995e-05, 1.0559999999992797e-06, 1.4457999999998444e-05...</msg>
<status status="PASS" starttime="20201112 12:25:58.376" endtime="20201112 12:25:58.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.403" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:58.402" endtime="20201112 12:25:58.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.407" level="INFO">VALUE: {'diff': [0, 1.1949999999989747e-06, 2.8097000000001232e-05, 1.0559999999992797e-06, 2.3776999999999132e-05, 1.070000000002319e-06, 1.50689999999995e-05, 1.0559999999992797e-06, 1.4457999999998444e-05, 1.070000000002319e-06, 1.8513999999997255e-05, 1.054999999999806e-06, 1.784700000000139e-05, 1.0699999999988496e-06, 2.8458000000002037e-05, 1.0559999999992797e-06, 2.8777000000000663e-05, 1.0559999999992797e-06, 1.3916999999998708e-05, 9.720000000018603e-07, 1.756899999999853e-05, 1.0560000000027492e-06, 2.2235999999998396e-05, 1.068999999999376e-06, 2.0056000000000934e-05, 1.0559999999992797e-06, 1.755499999999896e-05, 1.0830000000024154e-06, 1.2319999999999692e-05, 1.000000000001e-06, 1.381899999999825e-05, 1.1110000000015552e-06, 1.719499999999763e-05, 1.068999999999376e-06, 2.6028000000000856e-05, 1.000000000001e-06, 2.7235999999999927e-05, 1.0699999999988496e-06, 2.7235999999999927e-05, 1.0410000000002362e-06, 1.5041999999999833e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.0690000000028455e-06, 1.4749999999997404e-05, 1.070000000002319e-06, 1.755499999999896e-05, 1.082999999998946e-06, 2.348700000000259e-05, 1.0969999999985158e-06, 1.8750000000001404e-05, 1.068999999999376e-06, 2.844499999999847e-05, 1.0830000000024154e-06, 1.3499999999999623e-05, 1.0559999999992797e-06, 3.097200000000064e-05, 1.054999999999806e-06, 2.847299999999761e-05, 1.0410000000002362e-06, 1.8541999999999864e-05, 1.02800000000014e-06, 1.879100000000064e-05, 1.0559999999992797e-06, 2.690300000000173e-05, 1.068999999999376e-06, 1.1639000000000788e-05, 1.068999999999376e-06, 1.7570000000001473e-05, 1.0419999999997098e-06, 1.880500000000021e-05, 1.082999999998946e-06, 1.1250000000000843e-05, 1.0839999999984196e-06, 2.6860999999999552e-05, 1.02800000000014e-06, 2.511100000000127e-05, 9.859999999979607e-07, 1.3833000000001289e-05, 1.0559999999992797e-06, 2.6291000000001202e-05, 1.0559999999992797e-06, 2.7513999999999317e-05, 1.0690000000028455e-06, 2.3791999999998176e-05, 1.0559999999992797e-06, 1.2346999999999358e-05, 9.860000000014302e-07, 2.3777999999998606e-05, 1.0690000000028455e-06, 2.440299999999923e-05, 1.068999999999376e-06, 3.0013999999998348e-05, 1.070000000002319e-06, 2.005499999999799e-05, 1.0419999999997098e-06, 1.8500000000001154e-05, 1.054999999999806e-06, 2.037499999999956e-05, 1.0560000000027492e-06], 'source_diff': [0, 1.1949999999989747e-06, 2.8097000000001232e-05, 1.0559999999992797e-06, 2.3776999999999132e-05, 1.070000000002319e-06, 1.50689999999995e-05, 1.0559999999992797e-06, 1.4457999999998444e-05, 1.070000000002319e-06, 1.8513999999997255e-05, 1.054999999999806e-06, 1.784700000000139e-05, 1.0699999999988496e-06, 2.8458000000002037e-05, 1.0559999999992797e-06, 2.8777000000000663e-05, 1.0559999999992797e-06, 1.3916999999998708e-05, 9.720000000018603e-07, 1.756899999999853e-05, 1.0560000000027492e-06, 2.2235999999998396e-05, 1.068999999999376e-06, 2.0056000000000934e-05, 1.0559999999992797e-06, 1.755499999999896e-05, 1.0830000000024154e-06, 1.2319999999999692e-05, 1.000000000001e-06, 1.381899999999825e-05, 1.1110000000015552e-06, 1.719499999999763e-05, 1.068999999999376e-06, 2.6028000000000856e-05, 1.000000000001e-06, 2.7235999999999927e-05, 1.0699999999988496e-06, 2.7235999999999927e-05, 1.0410000000002362e-06, 1.5041999999999833e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.0690000000028455e-06, 1.4749999999997404e-05, 1.070000000002319e-06, 1.755499999999896e-05, 1.082999999998946e-06, 2.348700000000259e-05, 1.0969999999985158e-06, 1.8750000000001404e-05, 1.068999999999376e-06, 2.844499999999847e-05, 1.0830000000024154e-06, 1.3499999999999623e-05, 1.0559999999992797e-06, 3.097200000000064e-05, 1.054999999999806e-06, 2.847299999999761e-05, 1.0410000000002362e-06, 1.8541999999999864e-05, 1.02800000000014e-06, 1.879100000000064e-05, 1.0559999999992797e-06, 2.690300000000173e-05, 1.068999999999376e-06, 1.1639000000000788e-05, 1.068999999999376e-06, 1.7570000000001473e-05, 1.0419999999997098e-06, 1.880500000000021e-05, 1.082999999998946e-06, 1.1250000000000843e-05, 1.0839999999984196e-06, 2.6860999999999552e-05, 1.02800000000014e-06, 2.511100000000127e-05, 9.859999999979607e-07, 1.3833000000001289e-05, 1.0559999999992797e-06, 2.6291000000001202e-05, 1.0559999999992797e-06, 2.7513999999999317e-05, 1.0690000000028455e-06, 2.3791999999998176e-05, 1.0559999999992797e-06, 1.2346999999999358e-05, 9.860000000014302e-07, 2.3777999999998606e-05, 1.0690000000028455e-06, 2.440299999999923e-05, 1.068999999999376e-06, 3.0013999999998348e-05, 1.070000000002319e-06, 2.005499999999799e-05, 1.0419999999997098e-06, 1.8500000000001154e-05, 1.054999999999806e-06, 2.037499999999956e-05, 1.0560000000027492e-06], 'time': [0.018368069, 0.018369264, 0.018397361, 0.018398417, 0.018422194, 0.018423264, 0.018438333, 0.018439389, 0.018453847, 0.018454917, 0.018473431, 0.018474486, 0.018492333, 0.018493403, 0.018521861, 0.018522917, 0.018551694, 0.01855275, 0.018566667, 0.018567639, 0.018585208, 0.018586264, 0.0186085, 0.018609569, 0.018629625, 0.018630681, 0.018648236, 0.018649319, 0.018661639, 0.018662639, 0.018676458, 0.018677569, 0.018694764, 0.018695833, 0.018721861, 0.018722861, 0.018750097, 0.018751167, 0.018778403, 0.018779444, 0.018794486, 0.018795542, 0.018812792, 0.018813861, 0.018828611, 0.018829681, 0.018847236, 0.018848319, 0.018871806, 0.018872903, 0.018891653, 0.018892722, 0.018921167, 0.01892225, 0.01893575, 0.018936806, 0.018967778, 0.018968833, 0.018997306, 0.018998347, 0.019016889, 0.019017917, 0.019036708, 0.019037764, 0.019064667, 0.019065736, 0.019077375, 0.019078444, 0.019096014, 0.019097056, 0.019115861, 0.019116944, 0.019128194, 0.019129278, 0.019156139, 0.019157167, 0.019182278, 0.019183264, 0.019197097, 0.019198153, 0.019224444, 0.0192255, 0.019253014, 0.019254083, 0.019277875, 0.019278931, 0.019291278, 0.019292264, 0.019316042, 0.019317111, 0.019341514, 0.019342583, 0.019372597, 0.019373667, 0.019393722, 0.019394764, 0.019413264, 0.019414319, 0.019434694, 0.01943575], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:58.404" endtime="20201112 12:25:58.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.400" endtime="20201112 12:25:58.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:58.413" level="INFO">${RESULT} = [{'time': 0.018369264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.018398417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:58.409" endtime="20201112 12:25:58.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:58.426" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1949999999989747e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1...</msg>
<status status="PASS" starttime="20201112 12:25:58.413" endtime="20201112 12:25:58.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.430" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:58.429" endtime="20201112 12:25:58.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.432" level="INFO">VALUE: [1.1949999999989747e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 9.720000000018603e-07, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.000000000001e-06, 1.1110000000015552e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.02800000000014e-06, 9.859999999979607e-07, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 9.860000000014302e-07, 1.0690000000028455e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0560000000027492e-06]</msg>
<status status="PASS" starttime="20201112 12:25:58.431" endtime="20201112 12:25:58.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.427" endtime="20201112 12:25:58.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.435" endtime="20201112 12:25:58.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.439" endtime="20201112 12:25:58.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.437" endtime="20201112 12:25:58.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.434" endtime="20201112 12:25:58.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.034" endtime="20201112 12:25:58.459"></status>
</kw>
<msg timestamp="20201112 12:25:58.460" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.468" endtime="20201112 12:25:58.477"></status>
</kw>
<msg timestamp="20201112 12:25:58.478" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.467" endtime="20201112 12:25:58.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.480" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.479" endtime="20201112 12:25:58.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.481" endtime="20201112 12:25:58.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.463" endtime="20201112 12:25:58.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.462" endtime="20201112 12:25:58.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.490" endtime="20201112 12:25:58.775"></status>
</kw>
<msg timestamp="20201112 12:25:58.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019265889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019267069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.489" endtime="20201112 12:25:58.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019265889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019267069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.779" endtime="20201112 12:25:58.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.788" endtime="20201112 12:25:58.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.486" endtime="20201112 12:25:58.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.484" endtime="20201112 12:25:58.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.794" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:58.793" endtime="20201112 12:25:58.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.799" level="INFO">VALUE: [{'time': 0.019265889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019267069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019291431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4361999999999995e-05, 'source_diff': 2.4361999999999995e-05}, {'time': 0.0192925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019317222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4721999999997857e-05, 'source_diff': 2.4721999999997857e-05}, {'time': 0.019318264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019344236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5971999999999107e-05, 'source_diff': 2.5971999999999107e-05}, {'time': 0.019345292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019370639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5346999999998482e-05, 'source_diff': 2.5346999999998482e-05}, {'time': 0.019371736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019388958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7222000000000764e-05, 'source_diff': 1.7222000000000764e-05}, {'time': 0.019390028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019420986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.019422028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019442708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0679999999998616e-05, 'source_diff': 2.0679999999998616e-05}, {'time': 0.019443764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019460708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6944000000001375e-05, 'source_diff': 1.6944000000001375e-05}, {'time': 0.019461764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019488042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6278000000001106e-05, 'source_diff': 2.6278000000001106e-05}, {'time': 0.019489111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019510097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.019511167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019533403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2236000000001865e-05, 'source_diff': 2.2236000000001865e-05}, {'time': 0.019534458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019551111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.665299999999842e-05, 'source_diff': 1.665299999999842e-05}, {'time': 0.019552153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019582472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0319000000000873e-05, 'source_diff': 3.0319000000000873e-05}, {'time': 0.019583611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019613306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.969499999999972e-05, 'source_diff': 2.969499999999972e-05}, {'time': 0.019614319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.019641861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7541999999998457e-05, 'source_diff': 2.7541999999998457e-05}, {'time': 0.019642903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019660167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.019661208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019681264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0056000000000934e-05, 'source_diff': 2.0056000000000934e-05}, {'time': 0.019682333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019695528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.019696583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019710111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.019711167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019730292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.019731375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019761056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9681000000000152e-05, 'source_diff': 2.9681000000000152e-05}, {'time': 0.019762125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019776583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4458000000001914e-05, 'source_diff': 1.4458000000001914e-05}, {'time': 0.019777625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019801736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019802792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019820042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019821111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019837736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662500000000275e-05, 'source_diff': 1.662500000000275e-05}, {'time': 0.019838806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019861667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.286099999999902e-05, 'source_diff': 2.286099999999902e-05}, {'time': 0.01986275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019886806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4056000000001465e-05, 'source_diff': 2.4056000000001465e-05}, {'time': 0.019887889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019903569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5680000000000555e-05, 'source_diff': 1.5680000000000555e-05}, {'time': 0.019904639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019925014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.037500000000303e-05, 'source_diff': 2.037500000000303e-05}, {'time': 0.019926056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019946778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0721999999997326e-05, 'source_diff': 2.0721999999997326e-05}, {'time': 0.019947792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019966611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.881899999999978e-05, 'source_diff': 1.881899999999978e-05}, {'time': 0.019967694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019984361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.666699999999799e-05, 'source_diff': 1.666699999999799e-05}, {'time': 0.019985375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019999236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.02000025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.020017194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6943999999997905e-05, 'source_diff': 1.6943999999997905e-05}, {'time': 0.020018278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.020043278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000000716e-05, 'source_diff': 2.5000000000000716e-05}, {'time': 0.020044347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020069069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4721999999997857e-05, 'source_diff': 2.4721999999997857e-05}, {'time': 0.020070153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.020092056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.19030000000002e-05, 'source_diff': 2.19030000000002e-05}, {'time': 0.020093125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020111361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8236000000001334e-05, 'source_diff': 1.8236000000001334e-05}, {'time': 0.020112361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.020141458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9097000000002232e-05, 'source_diff': 2.9097000000002232e-05}, {'time': 0.020142514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020163194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0679999999998616e-05, 'source_diff': 2.0679999999998616e-05}, {'time': 0.02016425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.020183069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.881899999999978e-05, 'source_diff': 1.881899999999978e-05}, {'time': 0.020184125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020205153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1027999999999325e-05, 'source_diff': 2.1027999999999325e-05}, {'time': 0.020206181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.020222806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.020223875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020254514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063900000000244e-05, 'source_diff': 3.063900000000244e-05}, {'time': 0.020255597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.020285972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0374999999999153e-05, 'source_diff': 3.0374999999999153e-05}, {'time': 0.020286986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.020304847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.786100000000096e-05, 'source_diff': 1.786100000000096e-05}, {'time': 0.020305944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.020330653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.470900000000123e-05, 'source_diff': 2.470900000000123e-05}, {'time': 0.020331722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020343347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1625000000001218e-05, 'source_diff': 1.1625000000001218e-05}, {'time': 0.020344417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.020358542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.020359625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:58.795" endtime="20201112 12:25:58.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.791" endtime="20201112 12:25:58.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:58.825" level="INFO">${debug-compressed} = {'diff': [0, 1.179999999999931e-06, 2.4361999999999995e-05, 1.068999999999376e-06, 2.4721999999997857e-05, 1.0420000000031793e-06, 2.5971999999999107e-05, 1.0559999999992797e-06, 2.5346999999998482e-0...</msg>
<status status="PASS" starttime="20201112 12:25:58.802" endtime="20201112 12:25:58.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.829" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:58.828" endtime="20201112 12:25:58.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.834" level="INFO">VALUE: {'diff': [0, 1.179999999999931e-06, 2.4361999999999995e-05, 1.068999999999376e-06, 2.4721999999997857e-05, 1.0420000000031793e-06, 2.5971999999999107e-05, 1.0559999999992797e-06, 2.5346999999998482e-05, 1.0970000000019853e-06, 1.7222000000000764e-05, 1.0699999999988496e-06, 3.095800000000107e-05, 1.0419999999997098e-06, 2.0679999999998616e-05, 1.0559999999992797e-06, 1.6944000000001375e-05, 1.0559999999992797e-06, 2.6278000000001106e-05, 1.068999999999376e-06, 2.0986000000000615e-05, 1.0699999999988496e-06, 2.2236000000001865e-05, 1.054999999999806e-06, 1.665299999999842e-05, 1.0419999999997098e-06, 3.0319000000000873e-05, 1.139000000000695e-06, 2.969499999999972e-05, 1.0130000000010964e-06, 2.7541999999998457e-05, 1.0419999999997098e-06, 1.7263999999999474e-05, 1.0410000000002362e-06, 2.0056000000000934e-05, 1.068999999999376e-06, 1.3195000000000567e-05, 1.054999999999806e-06, 1.3527999999998763e-05, 1.0560000000027492e-06, 1.912499999999831e-05, 1.082999999998946e-06, 2.9681000000000152e-05, 1.068999999999376e-06, 1.4458000000001914e-05, 1.0419999999997098e-06, 2.411100000000027e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.068999999999376e-06, 1.662500000000275e-05, 1.0699999999988496e-06, 2.286099999999902e-05, 1.082999999998946e-06, 2.4056000000001465e-05, 1.082999999998946e-06, 1.5680000000000555e-05, 1.0699999999988496e-06, 2.037500000000303e-05, 1.0419999999997098e-06, 2.0721999999997326e-05, 1.01400000000057e-06, 1.881899999999978e-05, 1.0830000000024154e-06, 1.666699999999799e-05, 1.01400000000057e-06, 1.3861000000000429e-05, 1.01400000000057e-06, 1.6943999999997905e-05, 1.084000000001889e-06, 2.5000000000000716e-05, 1.068999999999376e-06, 2.4721999999997857e-05, 1.084000000001889e-06, 2.19030000000002e-05, 1.068999999999376e-06, 1.8236000000001334e-05, 9.999999999975306e-07, 2.9097000000002232e-05, 1.0559999999992797e-06, 2.0679999999998616e-05, 1.0560000000027492e-06, 1.881899999999978e-05, 1.0559999999992797e-06, 2.1027999999999325e-05, 1.02800000000014e-06, 1.662499999999928e-05, 1.068999999999376e-06, 3.063900000000244e-05, 1.082999999998946e-06, 3.0374999999999153e-05, 1.01400000000057e-06, 1.786100000000096e-05, 1.0969999999985158e-06, 2.470900000000123e-05, 1.068999999999376e-06, 1.1625000000001218e-05, 1.0699999999988496e-06, 1.4125000000000248e-05, 1.082999999998946e-06], 'source_diff': [0, 1.179999999999931e-06, 2.4361999999999995e-05, 1.068999999999376e-06, 2.4721999999997857e-05, 1.0420000000031793e-06, 2.5971999999999107e-05, 1.0559999999992797e-06, 2.5346999999998482e-05, 1.0970000000019853e-06, 1.7222000000000764e-05, 1.0699999999988496e-06, 3.095800000000107e-05, 1.0419999999997098e-06, 2.0679999999998616e-05, 1.0559999999992797e-06, 1.6944000000001375e-05, 1.0559999999992797e-06, 2.6278000000001106e-05, 1.068999999999376e-06, 2.0986000000000615e-05, 1.0699999999988496e-06, 2.2236000000001865e-05, 1.054999999999806e-06, 1.665299999999842e-05, 1.0419999999997098e-06, 3.0319000000000873e-05, 1.139000000000695e-06, 2.969499999999972e-05, 1.0130000000010964e-06, 2.7541999999998457e-05, 1.0419999999997098e-06, 1.7263999999999474e-05, 1.0410000000002362e-06, 2.0056000000000934e-05, 1.068999999999376e-06, 1.3195000000000567e-05, 1.054999999999806e-06, 1.3527999999998763e-05, 1.0560000000027492e-06, 1.912499999999831e-05, 1.082999999998946e-06, 2.9681000000000152e-05, 1.068999999999376e-06, 1.4458000000001914e-05, 1.0419999999997098e-06, 2.411100000000027e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.068999999999376e-06, 1.662500000000275e-05, 1.0699999999988496e-06, 2.286099999999902e-05, 1.082999999998946e-06, 2.4056000000001465e-05, 1.082999999998946e-06, 1.5680000000000555e-05, 1.0699999999988496e-06, 2.037500000000303e-05, 1.0419999999997098e-06, 2.0721999999997326e-05, 1.01400000000057e-06, 1.881899999999978e-05, 1.0830000000024154e-06, 1.666699999999799e-05, 1.01400000000057e-06, 1.3861000000000429e-05, 1.01400000000057e-06, 1.6943999999997905e-05, 1.084000000001889e-06, 2.5000000000000716e-05, 1.068999999999376e-06, 2.4721999999997857e-05, 1.084000000001889e-06, 2.19030000000002e-05, 1.068999999999376e-06, 1.8236000000001334e-05, 9.999999999975306e-07, 2.9097000000002232e-05, 1.0559999999992797e-06, 2.0679999999998616e-05, 1.0560000000027492e-06, 1.881899999999978e-05, 1.0559999999992797e-06, 2.1027999999999325e-05, 1.02800000000014e-06, 1.662499999999928e-05, 1.068999999999376e-06, 3.063900000000244e-05, 1.082999999998946e-06, 3.0374999999999153e-05, 1.01400000000057e-06, 1.786100000000096e-05, 1.0969999999985158e-06, 2.470900000000123e-05, 1.068999999999376e-06, 1.1625000000001218e-05, 1.0699999999988496e-06, 1.4125000000000248e-05, 1.082999999998946e-06], 'time': [0.019265889, 0.019267069, 0.019291431, 0.0192925, 0.019317222, 0.019318264, 0.019344236, 0.019345292, 0.019370639, 0.019371736, 0.019388958, 0.019390028, 0.019420986, 0.019422028, 0.019442708, 0.019443764, 0.019460708, 0.019461764, 0.019488042, 0.019489111, 0.019510097, 0.019511167, 0.019533403, 0.019534458, 0.019551111, 0.019552153, 0.019582472, 0.019583611, 0.019613306, 0.019614319, 0.019641861, 0.019642903, 0.019660167, 0.019661208, 0.019681264, 0.019682333, 0.019695528, 0.019696583, 0.019710111, 0.019711167, 0.019730292, 0.019731375, 0.019761056, 0.019762125, 0.019776583, 0.019777625, 0.019801736, 0.019802792, 0.019820042, 0.019821111, 0.019837736, 0.019838806, 0.019861667, 0.01986275, 0.019886806, 0.019887889, 0.019903569, 0.019904639, 0.019925014, 0.019926056, 0.019946778, 0.019947792, 0.019966611, 0.019967694, 0.019984361, 0.019985375, 0.019999236, 0.02000025, 0.020017194, 0.020018278, 0.020043278, 0.020044347, 0.020069069, 0.020070153, 0.020092056, 0.020093125, 0.020111361, 0.020112361, 0.020141458, 0.020142514, 0.020163194, 0.02016425, 0.020183069, 0.020184125, 0.020205153, 0.020206181, 0.020222806, 0.020223875, 0.020254514, 0.020255597, 0.020285972, 0.020286986, 0.020304847, 0.020305944, 0.020330653, 0.020331722, 0.020343347, 0.020344417, 0.020358542, 0.020359625], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:58.830" endtime="20201112 12:25:58.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.826" endtime="20201112 12:25:58.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:58.840" level="INFO">${RESULT} = [{'time': 0.019267069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.0192925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:25:58.836" endtime="20201112 12:25:58.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:58.854" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.179999999999931e-06, 1.068999999999376e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, ...</msg>
<status status="PASS" starttime="20201112 12:25:58.841" endtime="20201112 12:25:58.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.858" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:58.857" endtime="20201112 12:25:58.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.860" level="INFO">VALUE: [1.179999999999931e-06, 1.068999999999376e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.139000000000695e-06, 1.0130000000010964e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.01400000000057e-06, 1.0830000000024154e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.068999999999376e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.01400000000057e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 12:25:58.859" endtime="20201112 12:25:58.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.854" endtime="20201112 12:25:58.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.863" endtime="20201112 12:25:58.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.867" endtime="20201112 12:25:58.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.865" endtime="20201112 12:25:58.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.862" endtime="20201112 12:25:58.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.460" endtime="20201112 12:25:58.888"></status>
</kw>
<msg timestamp="20201112 12:25:58.888" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.895" endtime="20201112 12:25:58.905"></status>
</kw>
<msg timestamp="20201112 12:25:58.905" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.894" endtime="20201112 12:25:58.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.907" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.906" endtime="20201112 12:25:58.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.909" endtime="20201112 12:25:58.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.891" endtime="20201112 12:25:58.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.890" endtime="20201112 12:25:58.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.917" endtime="20201112 12:25:59.204"></status>
</kw>
<msg timestamp="20201112 12:25:59.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018615097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.916" endtime="20201112 12:25:59.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018615097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.208" endtime="20201112 12:25:59.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.216" endtime="20201112 12:25:59.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.913" endtime="20201112 12:25:59.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.912" endtime="20201112 12:25:59.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.223" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:59.222" endtime="20201112 12:25:59.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.229" level="INFO">VALUE: [{'time': 0.018613917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018615097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018628569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.018629611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018651222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161099999999777e-05, 'source_diff': 2.161099999999777e-05}, {'time': 0.018652319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018666417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4098000000000582e-05, 'source_diff': 1.4098000000000582e-05}, {'time': 0.0186675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018689097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.15969999999982e-05, 'source_diff': 2.15969999999982e-05}, {'time': 0.018690153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018719903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9749999999998528e-05, 'source_diff': 2.9749999999998528e-05}, {'time': 0.018720931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018739111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8179999999999585e-05, 'source_diff': 1.8179999999999585e-05}, {'time': 0.018740181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018753431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3249999999999373e-05, 'source_diff': 1.3249999999999373e-05}, {'time': 0.018754431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.018768569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138000000000345e-05, 'source_diff': 1.4138000000000345e-05}, {'time': 0.018769639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.01878875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.911099999999874e-05, 'source_diff': 1.911099999999874e-05}, {'time': 0.018789806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018812361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.255500000000049e-05, 'source_diff': 2.255500000000049e-05}, {'time': 0.018813417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018844069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065200000000254e-05, 'source_diff': 3.065200000000254e-05}, {'time': 0.018845139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018867056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.191699999999977e-05, 'source_diff': 2.191699999999977e-05}, {'time': 0.018868097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018881347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3249999999999373e-05, 'source_diff': 1.3249999999999373e-05}, {'time': 0.018882361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018906792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.443099999999837e-05, 'source_diff': 2.443099999999837e-05}, {'time': 0.018907833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018934111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6278000000001106e-05, 'source_diff': 2.6278000000001106e-05}, {'time': 0.018935181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018955847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0666000000002516e-05, 'source_diff': 2.0666000000002516e-05}, {'time': 0.018956917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018986319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9402000000001288e-05, 'source_diff': 2.9402000000001288e-05}, {'time': 0.018987361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019012403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.019013486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019036625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.313900000000188e-05, 'source_diff': 2.313900000000188e-05}, {'time': 0.019037722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019054625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.690299999999867e-05, 'source_diff': 1.690299999999867e-05}, {'time': 0.019055708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019076681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.097300000000052e-05, 'source_diff': 2.097300000000052e-05}, {'time': 0.01907775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019095625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.019096667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019119222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.255500000000049e-05, 'source_diff': 2.255500000000049e-05}, {'time': 0.019120278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019140639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.019141722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019153708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.01915475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019177264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2513999999997786e-05, 'source_diff': 2.2513999999997786e-05}, {'time': 0.019178319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019192792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4473000000000957e-05, 'source_diff': 1.4473000000000957e-05}, {'time': 0.019193833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019208597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.019209667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019229708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.004100000000189e-05, 'source_diff': 2.004100000000189e-05}, {'time': 0.019230778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019245542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.019246611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019270375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3763999999999036e-05, 'source_diff': 2.3763999999999036e-05}, {'time': 0.019271444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.0192915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0056000000000934e-05, 'source_diff': 2.0056000000000934e-05}, {'time': 0.019292556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019308875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.631900000000075e-05, 'source_diff': 1.631900000000075e-05}, {'time': 0.019309931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019339639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9707999999999818e-05, 'source_diff': 2.9707999999999818e-05}, {'time': 0.019340694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019367597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.690300000000173e-05, 'source_diff': 2.690300000000173e-05}, {'time': 0.019368667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019389028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.019390125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019419181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9055999999999527e-05, 'source_diff': 2.9055999999999527e-05}, {'time': 0.019420222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019442458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.019443542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019469486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5943999999999967e-05, 'source_diff': 2.5943999999999967e-05}, {'time': 0.019470583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019499944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9361000000002052e-05, 'source_diff': 2.9361000000002052e-05}, {'time': 0.019501, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.0195195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8499999999997685e-05, 'source_diff': 1.8499999999997685e-05}, {'time': 0.019520556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019549653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9096999999998763e-05, 'source_diff': 2.9096999999998763e-05}, {'time': 0.019550708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019564847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.019565903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019590958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5054999999999522e-05, 'source_diff': 2.5054999999999522e-05}, {'time': 0.019592, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019618625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.662500000000234e-05, 'source_diff': 2.662500000000234e-05}, {'time': 0.019619667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019633486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.019634583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019659958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.537500000000109e-05, 'source_diff': 2.537500000000109e-05}, {'time': 0.019660958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.019690042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9084000000002136e-05, 'source_diff': 2.9084000000002136e-05}, {'time': 0.019691097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019709917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8819999999999254e-05, 'source_diff': 1.8819999999999254e-05}, {'time': 0.019710986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:59.225" endtime="20201112 12:25:59.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.219" endtime="20201112 12:25:59.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:59.254" level="INFO">${debug-compressed} = {'diff': [0, 1.179999999999931e-06, 1.3472000000000484e-05, 1.0419999999997098e-06, 2.161099999999777e-05, 1.0970000000019853e-06, 1.4098000000000582e-05, 1.082999999998946e-06, 2.15969999999982e-05, ...</msg>
<status status="PASS" starttime="20201112 12:25:59.231" endtime="20201112 12:25:59.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.258" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:59.257" endtime="20201112 12:25:59.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.262" level="INFO">VALUE: {'diff': [0, 1.179999999999931e-06, 1.3472000000000484e-05, 1.0419999999997098e-06, 2.161099999999777e-05, 1.0970000000019853e-06, 1.4098000000000582e-05, 1.082999999998946e-06, 2.15969999999982e-05, 1.0560000000027492e-06, 2.9749999999998528e-05, 1.02800000000014e-06, 1.8179999999999585e-05, 1.070000000002319e-06, 1.3249999999999373e-05, 9.999999999975306e-07, 1.4138000000000345e-05, 1.070000000002319e-06, 1.911099999999874e-05, 1.0559999999992797e-06, 2.255500000000049e-05, 1.0559999999992797e-06, 3.065200000000254e-05, 1.0699999999988496e-06, 2.191699999999977e-05, 1.0410000000002362e-06, 1.3249999999999373e-05, 1.01400000000057e-06, 2.443099999999837e-05, 1.0410000000002362e-06, 2.6278000000001106e-05, 1.0699999999988496e-06, 2.0666000000002516e-05, 1.0699999999988496e-06, 2.9402000000001288e-05, 1.0419999999997098e-06, 2.5041999999999426e-05, 1.082999999998946e-06, 2.313900000000188e-05, 1.0969999999985158e-06, 1.690299999999867e-05, 1.0830000000024154e-06, 2.097300000000052e-05, 1.068999999999376e-06, 1.787500000000053e-05, 1.0419999999997098e-06, 2.255500000000049e-05, 1.0559999999992797e-06, 2.036099999999999e-05, 1.082999999998946e-06, 1.1985999999998553e-05, 1.0420000000031793e-06, 2.2513999999997786e-05, 1.054999999999806e-06, 1.4473000000000957e-05, 1.0410000000002362e-06, 1.4764000000000443e-05, 1.0699999999988496e-06, 2.004100000000189e-05, 1.0699999999988496e-06, 1.4764000000000443e-05, 1.068999999999376e-06, 2.3763999999999036e-05, 1.068999999999376e-06, 2.0056000000000934e-05, 1.0559999999992797e-06, 1.631900000000075e-05, 1.0559999999992797e-06, 2.9707999999999818e-05, 1.054999999999806e-06, 2.690300000000173e-05, 1.0699999999988496e-06, 2.036099999999999e-05, 1.0970000000019853e-06, 2.9055999999999527e-05, 1.0410000000002362e-06, 2.2235999999998396e-05, 1.084000000001889e-06, 2.5943999999999967e-05, 1.0969999999985158e-06, 2.9361000000002052e-05, 1.0559999999992797e-06, 1.8499999999997685e-05, 1.0560000000027492e-06, 2.9096999999998763e-05, 1.054999999999806e-06, 1.4138999999999818e-05, 1.0559999999992797e-06, 2.5054999999999522e-05, 1.0419999999997098e-06, 2.662500000000234e-05, 1.0419999999997098e-06, 1.381899999999825e-05, 1.0970000000019853e-06, 2.537500000000109e-05, 9.999999999975306e-07, 2.9084000000002136e-05, 1.054999999999806e-06, 1.8819999999999254e-05, 1.068999999999376e-06], 'source_diff': [0, 1.179999999999931e-06, 1.3472000000000484e-05, 1.0419999999997098e-06, 2.161099999999777e-05, 1.0970000000019853e-06, 1.4098000000000582e-05, 1.082999999998946e-06, 2.15969999999982e-05, 1.0560000000027492e-06, 2.9749999999998528e-05, 1.02800000000014e-06, 1.8179999999999585e-05, 1.070000000002319e-06, 1.3249999999999373e-05, 9.999999999975306e-07, 1.4138000000000345e-05, 1.070000000002319e-06, 1.911099999999874e-05, 1.0559999999992797e-06, 2.255500000000049e-05, 1.0559999999992797e-06, 3.065200000000254e-05, 1.0699999999988496e-06, 2.191699999999977e-05, 1.0410000000002362e-06, 1.3249999999999373e-05, 1.01400000000057e-06, 2.443099999999837e-05, 1.0410000000002362e-06, 2.6278000000001106e-05, 1.0699999999988496e-06, 2.0666000000002516e-05, 1.0699999999988496e-06, 2.9402000000001288e-05, 1.0419999999997098e-06, 2.5041999999999426e-05, 1.082999999998946e-06, 2.313900000000188e-05, 1.0969999999985158e-06, 1.690299999999867e-05, 1.0830000000024154e-06, 2.097300000000052e-05, 1.068999999999376e-06, 1.787500000000053e-05, 1.0419999999997098e-06, 2.255500000000049e-05, 1.0559999999992797e-06, 2.036099999999999e-05, 1.082999999998946e-06, 1.1985999999998553e-05, 1.0420000000031793e-06, 2.2513999999997786e-05, 1.054999999999806e-06, 1.4473000000000957e-05, 1.0410000000002362e-06, 1.4764000000000443e-05, 1.0699999999988496e-06, 2.004100000000189e-05, 1.0699999999988496e-06, 1.4764000000000443e-05, 1.068999999999376e-06, 2.3763999999999036e-05, 1.068999999999376e-06, 2.0056000000000934e-05, 1.0559999999992797e-06, 1.631900000000075e-05, 1.0559999999992797e-06, 2.9707999999999818e-05, 1.054999999999806e-06, 2.690300000000173e-05, 1.0699999999988496e-06, 2.036099999999999e-05, 1.0970000000019853e-06, 2.9055999999999527e-05, 1.0410000000002362e-06, 2.2235999999998396e-05, 1.084000000001889e-06, 2.5943999999999967e-05, 1.0969999999985158e-06, 2.9361000000002052e-05, 1.0559999999992797e-06, 1.8499999999997685e-05, 1.0560000000027492e-06, 2.9096999999998763e-05, 1.054999999999806e-06, 1.4138999999999818e-05, 1.0559999999992797e-06, 2.5054999999999522e-05, 1.0419999999997098e-06, 2.662500000000234e-05, 1.0419999999997098e-06, 1.381899999999825e-05, 1.0970000000019853e-06, 2.537500000000109e-05, 9.999999999975306e-07, 2.9084000000002136e-05, 1.054999999999806e-06, 1.8819999999999254e-05, 1.068999999999376e-06], 'time': [0.018613917, 0.018615097, 0.018628569, 0.018629611, 0.018651222, 0.018652319, 0.018666417, 0.0186675, 0.018689097, 0.018690153, 0.018719903, 0.018720931, 0.018739111, 0.018740181, 0.018753431, 0.018754431, 0.018768569, 0.018769639, 0.01878875, 0.018789806, 0.018812361, 0.018813417, 0.018844069, 0.018845139, 0.018867056, 0.018868097, 0.018881347, 0.018882361, 0.018906792, 0.018907833, 0.018934111, 0.018935181, 0.018955847, 0.018956917, 0.018986319, 0.018987361, 0.019012403, 0.019013486, 0.019036625, 0.019037722, 0.019054625, 0.019055708, 0.019076681, 0.01907775, 0.019095625, 0.019096667, 0.019119222, 0.019120278, 0.019140639, 0.019141722, 0.019153708, 0.01915475, 0.019177264, 0.019178319, 0.019192792, 0.019193833, 0.019208597, 0.019209667, 0.019229708, 0.019230778, 0.019245542, 0.019246611, 0.019270375, 0.019271444, 0.0192915, 0.019292556, 0.019308875, 0.019309931, 0.019339639, 0.019340694, 0.019367597, 0.019368667, 0.019389028, 0.019390125, 0.019419181, 0.019420222, 0.019442458, 0.019443542, 0.019469486, 0.019470583, 0.019499944, 0.019501, 0.0195195, 0.019520556, 0.019549653, 0.019550708, 0.019564847, 0.019565903, 0.019590958, 0.019592, 0.019618625, 0.019619667, 0.019633486, 0.019634583, 0.019659958, 0.019660958, 0.019690042, 0.019691097, 0.019709917, 0.019710986], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 12:25:59.259" endtime="20201112 12:25:59.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.255" endtime="20201112 12:25:59.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:59.268" level="INFO">${RESULT} = [{'time': 0.018615097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018629611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:59.265" endtime="20201112 12:25:59.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:59.281" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.179999999999931e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.02800000000014e-06, 1.070000000002319e-06, 9.999999999975306e-07, 1.07...</msg>
<status status="PASS" starttime="20201112 12:25:59.269" endtime="20201112 12:25:59.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.285" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:59.284" endtime="20201112 12:25:59.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.288" level="INFO">VALUE: [1.179999999999931e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.02800000000014e-06, 1.070000000002319e-06, 9.999999999975306e-07, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.01400000000057e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0970000000019853e-06, 1.0410000000002362e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 9.999999999975306e-07, 1.054999999999806e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:25:59.287" endtime="20201112 12:25:59.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.282" endtime="20201112 12:25:59.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.291" endtime="20201112 12:25:59.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:59.294" endtime="20201112 12:25:59.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.293" endtime="20201112 12:25:59.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.289" endtime="20201112 12:25:59.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.888" endtime="20201112 12:25:59.315"></status>
</kw>
<msg timestamp="20201112 12:25:59.315" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.323" endtime="20201112 12:25:59.333"></status>
</kw>
<msg timestamp="20201112 12:25:59.333" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.321" endtime="20201112 12:25:59.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.336" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.334" endtime="20201112 12:25:59.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.337" endtime="20201112 12:25:59.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.319" endtime="20201112 12:25:59.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.317" endtime="20201112 12:25:59.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.346" endtime="20201112 12:25:59.629"></status>
</kw>
<msg timestamp="20201112 12:25:59.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019246903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.344" endtime="20201112 12:25:59.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019246903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.634" endtime="20201112 12:25:59.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.642" endtime="20201112 12:25:59.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.342" endtime="20201112 12:25:59.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.340" endtime="20201112 12:25:59.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.649" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:59.648" endtime="20201112 12:25:59.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.654" level="INFO">VALUE: [{'time': 0.019246903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019274306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.62230000000023e-05, 'source_diff': 2.62230000000023e-05}, {'time': 0.019275389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019294486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.909699999999917e-05, 'source_diff': 1.909699999999917e-05}, {'time': 0.019295569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019318417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2848000000002394e-05, 'source_diff': 2.2848000000002394e-05}, {'time': 0.019319458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019335792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6333999999999793e-05, 'source_diff': 1.6333999999999793e-05}, {'time': 0.019336833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019367167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333999999999917e-05, 'source_diff': 3.0333999999999917e-05}, {'time': 0.019368222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019392653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.443099999999837e-05, 'source_diff': 2.443099999999837e-05}, {'time': 0.019393708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019419361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.019420431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019434861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4430000000002774e-05, 'source_diff': 1.4430000000002774e-05}, {'time': 0.019435944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019452556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6611999999999183e-05, 'source_diff': 1.6611999999999183e-05}, {'time': 0.019453681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019480194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6512999999998843e-05, 'source_diff': 2.6512999999998843e-05}, {'time': 0.019481264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019497958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6693999999997655e-05, 'source_diff': 1.6693999999997655e-05}, {'time': 0.019498944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019510931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1986999999998027e-05, 'source_diff': 1.1986999999998027e-05}, {'time': 0.019512028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019541667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9638999999997973e-05, 'source_diff': 2.9638999999997973e-05}, {'time': 0.01954275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019558417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.566700000000046e-05, 'source_diff': 1.566700000000046e-05}, {'time': 0.019559486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019590444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.09579999999976e-05, 'source_diff': 3.09579999999976e-05}, {'time': 0.0195915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019622458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.09579999999976e-05, 'source_diff': 3.09579999999976e-05}, {'time': 0.0196235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019648569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.506900000000256e-05, 'source_diff': 2.506900000000256e-05}, {'time': 0.019649611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019669667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0055999999997465e-05, 'source_diff': 2.0055999999997465e-05}, {'time': 0.019670708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019701361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065300000000201e-05, 'source_diff': 3.065300000000201e-05}, {'time': 0.019702417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019730875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8457999999998568e-05, 'source_diff': 2.8457999999998568e-05}, {'time': 0.019731931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019750444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.851299999999778e-05, 'source_diff': 1.851299999999778e-05}, {'time': 0.019751486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019765944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4458000000001914e-05, 'source_diff': 1.4458000000001914e-05}, {'time': 0.019767, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019783625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.019784681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019795958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277000000000509e-05, 'source_diff': 1.1277000000000509e-05}, {'time': 0.019797028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019815778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999997935e-05, 'source_diff': 1.8749999999997935e-05}, {'time': 0.019816833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019828472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.019829528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019853306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3778000000002075e-05, 'source_diff': 2.3778000000002075e-05}, {'time': 0.019854389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019877222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.283299999999988e-05, 'source_diff': 2.283299999999988e-05}, {'time': 0.019878292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019902708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4416000000002797e-05, 'source_diff': 2.4416000000002797e-05}, {'time': 0.01990375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019932833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9082999999999193e-05, 'source_diff': 2.9082999999999193e-05}, {'time': 0.019933917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019955194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.12770000000001e-05, 'source_diff': 2.12770000000001e-05}, {'time': 0.01995625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019973514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7264000000002944e-05, 'source_diff': 1.7264000000002944e-05}, {'time': 0.019974569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019997764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.319500000000016e-05, 'source_diff': 2.319500000000016e-05}, {'time': 0.019998792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.020027569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8776999999997194e-05, 'source_diff': 2.8776999999997194e-05}, {'time': 0.020028639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.020046806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.816699999999949e-05, 'source_diff': 1.816699999999949e-05}, {'time': 0.020047931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020073583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5651999999997538e-05, 'source_diff': 2.5651999999997538e-05}, {'time': 0.020074583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.02009775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.316700000000102e-05, 'source_diff': 2.316700000000102e-05}, {'time': 0.020098806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020125708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6901999999998788e-05, 'source_diff': 2.6901999999998788e-05}, {'time': 0.020126778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.02014625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9471999999999545e-05, 'source_diff': 1.9471999999999545e-05}, {'time': 0.020147264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.020171042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3777999999998606e-05, 'source_diff': 2.3777999999998606e-05}, {'time': 0.020172125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.020199653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7528000000002356e-05, 'source_diff': 2.7528000000002356e-05}, {'time': 0.020200694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.020231333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.020232403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.020251528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.020252583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020271403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8819999999999254e-05, 'source_diff': 1.8819999999999254e-05}, {'time': 0.020272486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.020303139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065300000000201e-05, 'source_diff': 3.065300000000201e-05}, {'time': 0.020304139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.020331361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.020332417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020348736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.631900000000075e-05, 'source_diff': 1.631900000000075e-05}, {'time': 0.020349792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020370153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.020371208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020399694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8486000000001177e-05, 'source_diff': 2.8486000000001177e-05}, {'time': 0.020400736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:59.650" endtime="20201112 12:25:59.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.645" endtime="20201112 12:25:59.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:59.679" level="INFO">${debug-compressed} = {'diff': [0, 1.179999999999931e-06, 2.62230000000023e-05, 1.082999999998946e-06, 1.909699999999917e-05, 1.082999999998946e-06, 2.2848000000002394e-05, 1.0410000000002362e-06, 1.6333999999999793e-05, 1...</msg>
<status status="PASS" starttime="20201112 12:25:59.656" endtime="20201112 12:25:59.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.683" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:59.682" endtime="20201112 12:25:59.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.687" level="INFO">VALUE: {'diff': [0, 1.179999999999931e-06, 2.62230000000023e-05, 1.082999999998946e-06, 1.909699999999917e-05, 1.082999999998946e-06, 2.2848000000002394e-05, 1.0410000000002362e-06, 1.6333999999999793e-05, 1.0410000000002362e-06, 3.0333999999999917e-05, 1.054999999999806e-06, 2.443099999999837e-05, 1.054999999999806e-06, 2.565300000000048e-05, 1.0699999999988496e-06, 1.4430000000002774e-05, 1.082999999998946e-06, 1.6611999999999183e-05, 1.125000000001125e-06, 2.6512999999998843e-05, 1.070000000002319e-06, 1.6693999999997655e-05, 9.860000000014302e-07, 1.1986999999998027e-05, 1.0970000000019853e-06, 2.9638999999997973e-05, 1.0830000000024154e-06, 1.566700000000046e-05, 1.068999999999376e-06, 3.09579999999976e-05, 1.0560000000027492e-06, 3.09579999999976e-05, 1.0419999999997098e-06, 2.506900000000256e-05, 1.0419999999997098e-06, 2.0055999999997465e-05, 1.0410000000002362e-06, 3.065300000000201e-05, 1.0559999999992797e-06, 2.8457999999998568e-05, 1.0560000000027492e-06, 1.851299999999778e-05, 1.0419999999997098e-06, 1.4458000000001914e-05, 1.0559999999992797e-06, 1.662499999999928e-05, 1.0559999999992797e-06, 1.1277000000000509e-05, 1.070000000002319e-06, 1.8749999999997935e-05, 1.054999999999806e-06, 1.1639000000000788e-05, 1.0559999999992797e-06, 2.3778000000002075e-05, 1.082999999998946e-06, 2.283299999999988e-05, 1.0699999999988496e-06, 2.4416000000002797e-05, 1.0419999999997098e-06, 2.9082999999999193e-05, 1.0839999999984196e-06, 2.12770000000001e-05, 1.0559999999992797e-06, 1.7264000000002944e-05, 1.054999999999806e-06, 2.319500000000016e-05, 1.02800000000014e-06, 2.8776999999997194e-05, 1.070000000002319e-06, 1.816699999999949e-05, 1.125000000001125e-06, 2.5651999999997538e-05, 1.000000000001e-06, 2.316700000000102e-05, 1.0559999999992797e-06, 2.6901999999998788e-05, 1.070000000002319e-06, 1.9471999999999545e-05, 1.01400000000057e-06, 2.3777999999998606e-05, 1.082999999998946e-06, 2.7528000000002356e-05, 1.0410000000002362e-06, 3.063899999999897e-05, 1.0699999999988496e-06, 1.912500000000178e-05, 1.054999999999806e-06, 1.8819999999999254e-05, 1.082999999998946e-06, 3.065300000000201e-05, 9.999999999975306e-07, 2.7222000000000357e-05, 1.0559999999992797e-06, 1.631900000000075e-05, 1.0559999999992797e-06, 2.036099999999999e-05, 1.054999999999806e-06, 2.8486000000001177e-05, 1.0419999999997098e-06], 'source_diff': [0, 1.179999999999931e-06, 2.62230000000023e-05, 1.082999999998946e-06, 1.909699999999917e-05, 1.082999999998946e-06, 2.2848000000002394e-05, 1.0410000000002362e-06, 1.6333999999999793e-05, 1.0410000000002362e-06, 3.0333999999999917e-05, 1.054999999999806e-06, 2.443099999999837e-05, 1.054999999999806e-06, 2.565300000000048e-05, 1.0699999999988496e-06, 1.4430000000002774e-05, 1.082999999998946e-06, 1.6611999999999183e-05, 1.125000000001125e-06, 2.6512999999998843e-05, 1.070000000002319e-06, 1.6693999999997655e-05, 9.860000000014302e-07, 1.1986999999998027e-05, 1.0970000000019853e-06, 2.9638999999997973e-05, 1.0830000000024154e-06, 1.566700000000046e-05, 1.068999999999376e-06, 3.09579999999976e-05, 1.0560000000027492e-06, 3.09579999999976e-05, 1.0419999999997098e-06, 2.506900000000256e-05, 1.0419999999997098e-06, 2.0055999999997465e-05, 1.0410000000002362e-06, 3.065300000000201e-05, 1.0559999999992797e-06, 2.8457999999998568e-05, 1.0560000000027492e-06, 1.851299999999778e-05, 1.0419999999997098e-06, 1.4458000000001914e-05, 1.0559999999992797e-06, 1.662499999999928e-05, 1.0559999999992797e-06, 1.1277000000000509e-05, 1.070000000002319e-06, 1.8749999999997935e-05, 1.054999999999806e-06, 1.1639000000000788e-05, 1.0559999999992797e-06, 2.3778000000002075e-05, 1.082999999998946e-06, 2.283299999999988e-05, 1.0699999999988496e-06, 2.4416000000002797e-05, 1.0419999999997098e-06, 2.9082999999999193e-05, 1.0839999999984196e-06, 2.12770000000001e-05, 1.0559999999992797e-06, 1.7264000000002944e-05, 1.054999999999806e-06, 2.319500000000016e-05, 1.02800000000014e-06, 2.8776999999997194e-05, 1.070000000002319e-06, 1.816699999999949e-05, 1.125000000001125e-06, 2.5651999999997538e-05, 1.000000000001e-06, 2.316700000000102e-05, 1.0559999999992797e-06, 2.6901999999998788e-05, 1.070000000002319e-06, 1.9471999999999545e-05, 1.01400000000057e-06, 2.3777999999998606e-05, 1.082999999998946e-06, 2.7528000000002356e-05, 1.0410000000002362e-06, 3.063899999999897e-05, 1.0699999999988496e-06, 1.912500000000178e-05, 1.054999999999806e-06, 1.8819999999999254e-05, 1.082999999998946e-06, 3.065300000000201e-05, 9.999999999975306e-07, 2.7222000000000357e-05, 1.0559999999992797e-06, 1.631900000000075e-05, 1.0559999999992797e-06, 2.036099999999999e-05, 1.054999999999806e-06, 2.8486000000001177e-05, 1.0419999999997098e-06], 'time': [0.019246903, 0.019248083, 0.019274306, 0.019275389, 0.019294486, 0.019295569, 0.019318417, 0.019319458, 0.019335792, 0.019336833, 0.019367167, 0.019368222, 0.019392653, 0.019393708, 0.019419361, 0.019420431, 0.019434861, 0.019435944, 0.019452556, 0.019453681, 0.019480194, 0.019481264, 0.019497958, 0.019498944, 0.019510931, 0.019512028, 0.019541667, 0.01954275, 0.019558417, 0.019559486, 0.019590444, 0.0195915, 0.019622458, 0.0196235, 0.019648569, 0.019649611, 0.019669667, 0.019670708, 0.019701361, 0.019702417, 0.019730875, 0.019731931, 0.019750444, 0.019751486, 0.019765944, 0.019767, 0.019783625, 0.019784681, 0.019795958, 0.019797028, 0.019815778, 0.019816833, 0.019828472, 0.019829528, 0.019853306, 0.019854389, 0.019877222, 0.019878292, 0.019902708, 0.01990375, 0.019932833, 0.019933917, 0.019955194, 0.01995625, 0.019973514, 0.019974569, 0.019997764, 0.019998792, 0.020027569, 0.020028639, 0.020046806, 0.020047931, 0.020073583, 0.020074583, 0.02009775, 0.020098806, 0.020125708, 0.020126778, 0.02014625, 0.020147264, 0.020171042, 0.020172125, 0.020199653, 0.020200694, 0.020231333, 0.020232403, 0.020251528, 0.020252583, 0.020271403, 0.020272486, 0.020303139, 0.020304139, 0.020331361, 0.020332417, 0.020348736, 0.020349792, 0.020370153, 0.020371208, 0.020399694, 0.020400736], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:25:59.684" endtime="20201112 12:25:59.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.680" endtime="20201112 12:25:59.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:59.693" level="INFO">${RESULT} = [{'time': 0.019248083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019275389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:59.689" endtime="20201112 12:25:59.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:59.707" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.179999999999931e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0...</msg>
<status status="PASS" starttime="20201112 12:25:59.694" endtime="20201112 12:25:59.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.711" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:59.710" endtime="20201112 12:25:59.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.713" level="INFO">VALUE: [1.179999999999931e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.070000000002319e-06, 9.860000000014302e-07, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.070000000002319e-06, 1.125000000001125e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.01400000000057e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.082999999998946e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 12:25:59.712" endtime="20201112 12:25:59.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.708" endtime="20201112 12:25:59.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.717" endtime="20201112 12:25:59.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:59.720" endtime="20201112 12:25:59.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.718" endtime="20201112 12:25:59.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.715" endtime="20201112 12:25:59.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.316" endtime="20201112 12:25:59.741"></status>
</kw>
<msg timestamp="20201112 12:25:59.741" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.748" endtime="20201112 12:25:59.757"></status>
</kw>
<msg timestamp="20201112 12:25:59.758" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.747" endtime="20201112 12:25:59.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.759" endtime="20201112 12:25:59.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.761" endtime="20201112 12:25:59.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.744" endtime="20201112 12:25:59.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.743" endtime="20201112 12:25:59.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.770" endtime="20201112 12:26:00.056"></status>
</kw>
<msg timestamp="20201112 12:26:00.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018455208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018456361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.769" endtime="20201112 12:26:00.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018455208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018456361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.060" endtime="20201112 12:26:00.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.069" endtime="20201112 12:26:00.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.766" endtime="20201112 12:26:00.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.765" endtime="20201112 12:26:00.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.075" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:00.074" endtime="20201112 12:26:00.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.080" level="INFO">VALUE: [{'time': 0.018455208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018456361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018472931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6570000000000473e-05, 'source_diff': 1.6570000000000473e-05}, {'time': 0.018474, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018497486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3485999999999646e-05, 'source_diff': 2.3485999999999646e-05}, {'time': 0.018498528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018517653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.018518722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018532222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.018533306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.01854775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4443999999998874e-05, 'source_diff': 1.4443999999998874e-05}, {'time': 0.018548792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.018567, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8207999999998725e-05, 'source_diff': 1.8207999999998725e-05}, {'time': 0.018568042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018589653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.018590722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018621375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.018622417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018637486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5069000000002969e-05, 'source_diff': 1.5069000000002969e-05}, {'time': 0.018638542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018668875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333000000000443e-05, 'source_diff': 3.0333000000000443e-05}, {'time': 0.018669931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018693097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3165999999998077e-05, 'source_diff': 2.3165999999998077e-05}, {'time': 0.018694167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018717097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2929999999997397e-05, 'source_diff': 2.2929999999997397e-05}, {'time': 0.018718069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.01874, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.193099999999934e-05, 'source_diff': 2.193099999999934e-05}, {'time': 0.018741069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018764222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.315300000000145e-05, 'source_diff': 2.315300000000145e-05}, {'time': 0.018765292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018785042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.018786097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018807694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.15969999999982e-05, 'source_diff': 2.15969999999982e-05}, {'time': 0.018808764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018837222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8458000000002037e-05, 'source_diff': 2.8458000000002037e-05}, {'time': 0.018838278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018863639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.536100000000152e-05, 'source_diff': 2.536100000000152e-05}, {'time': 0.018864694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018887861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.316699999999755e-05, 'source_diff': 2.316699999999755e-05}, {'time': 0.018888917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018918319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.940199999999782e-05, 'source_diff': 2.940199999999782e-05}, {'time': 0.018919389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018938806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.941699999999727e-05, 'source_diff': 1.941699999999727e-05}, {'time': 0.018939889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018953069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3179999999998054e-05, 'source_diff': 1.3179999999998054e-05}, {'time': 0.018954139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018985097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.018986153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018999347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.019000444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019028889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.844500000000194e-05, 'source_diff': 2.844500000000194e-05}, {'time': 0.019029931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019050931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.019052, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019065181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.019066264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019079764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.019080819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019108347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7528000000002356e-05, 'source_diff': 2.7528000000002356e-05}, {'time': 0.019109417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019127292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.019128403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019153083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4680000000002617e-05, 'source_diff': 2.4680000000002617e-05}, {'time': 0.019154139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019182931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8791999999999707e-05, 'source_diff': 2.8791999999999707e-05}, {'time': 0.019183972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019214, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0027999999997917e-05, 'source_diff': 3.0027999999997917e-05}, {'time': 0.019215069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019243903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8833999999998416e-05, 'source_diff': 2.8833999999998416e-05}, {'time': 0.019244903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019256542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.019257597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019275472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.787499999999706e-05, 'source_diff': 1.787499999999706e-05}, {'time': 0.019276528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019300028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3499999999999216e-05, 'source_diff': 2.3499999999999216e-05}, {'time': 0.019301069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019319569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8500000000001154e-05, 'source_diff': 1.8500000000001154e-05}, {'time': 0.019320653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019343181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2528000000000825e-05, 'source_diff': 2.2528000000000825e-05}, {'time': 0.019344236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019371472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.019372514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019401611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9096999999998763e-05, 'source_diff': 2.9096999999998763e-05}, {'time': 0.019402736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019432681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.994499999999997e-05, 'source_diff': 2.994499999999997e-05}, {'time': 0.019433778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019449764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5986000000002554e-05, 'source_diff': 1.5986000000002554e-05}, {'time': 0.019450875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.0194665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.562500000000175e-05, 'source_diff': 1.562500000000175e-05}, {'time': 0.019467583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019490736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.315300000000145e-05, 'source_diff': 2.315300000000145e-05}, {'time': 0.019491792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019515583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3790999999998702e-05, 'source_diff': 2.3790999999998702e-05}, {'time': 0.019516667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019528611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.019529667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019551014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.134699999999795e-05, 'source_diff': 2.134699999999795e-05}, {'time': 0.019552056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019578333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6276999999998163e-05, 'source_diff': 2.6276999999998163e-05}, {'time': 0.019579431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:00.076" endtime="20201112 12:26:00.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.072" endtime="20201112 12:26:00.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:00.107" level="INFO">${debug-compressed} = {'diff': [0, 1.153000000000265e-06, 1.6570000000000473e-05, 1.068999999999376e-06, 2.3485999999999646e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.0690000000028455e-06, 1.3499999999999623e-05...</msg>
<status status="PASS" starttime="20201112 12:26:00.083" endtime="20201112 12:26:00.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.110" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:00.109" endtime="20201112 12:26:00.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.114" level="INFO">VALUE: {'diff': [0, 1.153000000000265e-06, 1.6570000000000473e-05, 1.068999999999376e-06, 2.3485999999999646e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.0690000000028455e-06, 1.3499999999999623e-05, 1.0839999999984196e-06, 1.4443999999998874e-05, 1.0420000000031793e-06, 1.8207999999998725e-05, 1.0419999999997098e-06, 2.161100000000124e-05, 1.068999999999376e-06, 3.065299999999854e-05, 1.0419999999997098e-06, 1.5069000000002969e-05, 1.0559999999992797e-06, 3.0333000000000443e-05, 1.0559999999992797e-06, 2.3165999999998077e-05, 1.070000000002319e-06, 2.2929999999997397e-05, 9.720000000018603e-07, 2.193099999999934e-05, 1.068999999999376e-06, 2.315300000000145e-05, 1.0699999999988496e-06, 1.9749999999998935e-05, 1.0550000000032755e-06, 2.15969999999982e-05, 1.0699999999988496e-06, 2.8458000000002037e-05, 1.0559999999992797e-06, 2.536100000000152e-05, 1.054999999999806e-06, 2.316699999999755e-05, 1.0560000000027492e-06, 2.940199999999782e-05, 1.070000000002319e-06, 1.941699999999727e-05, 1.0830000000024154e-06, 1.3179999999998054e-05, 1.0699999999988496e-06, 3.095800000000107e-05, 1.0559999999992797e-06, 1.3194000000001094e-05, 1.0969999999985158e-06, 2.844500000000194e-05, 1.0419999999997098e-06, 2.1000000000000185e-05, 1.068999999999376e-06, 1.3181000000000997e-05, 1.082999999998946e-06, 1.3499999999999623e-05, 1.054999999999806e-06, 2.7528000000002356e-05, 1.0699999999988496e-06, 1.787500000000053e-05, 1.1109999999980857e-06, 2.4680000000002617e-05, 1.0559999999992797e-06, 2.8791999999999707e-05, 1.0410000000002362e-06, 3.0027999999997917e-05, 1.0690000000028455e-06, 2.8833999999998416e-05, 1.000000000001e-06, 1.1639000000000788e-05, 1.054999999999806e-06, 1.787499999999706e-05, 1.0560000000027492e-06, 2.3499999999999216e-05, 1.0410000000002362e-06, 1.8500000000001154e-05, 1.0839999999984196e-06, 2.2528000000000825e-05, 1.054999999999806e-06, 2.7235999999999927e-05, 1.0419999999997098e-06, 2.9096999999998763e-05, 1.125000000001125e-06, 2.994499999999997e-05, 1.0969999999985158e-06, 1.5986000000002554e-05, 1.1109999999980857e-06, 1.562500000000175e-05, 1.082999999998946e-06, 2.315300000000145e-05, 1.0559999999992797e-06, 2.3790999999998702e-05, 1.084000000001889e-06, 1.1943999999999844e-05, 1.0559999999992797e-06, 2.134699999999795e-05, 1.0420000000031793e-06, 2.6276999999998163e-05, 1.098000000001459e-06], 'source_diff': [0, 1.153000000000265e-06, 1.6570000000000473e-05, 1.068999999999376e-06, 2.3485999999999646e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.0690000000028455e-06, 1.3499999999999623e-05, 1.0839999999984196e-06, 1.4443999999998874e-05, 1.0420000000031793e-06, 1.8207999999998725e-05, 1.0419999999997098e-06, 2.161100000000124e-05, 1.068999999999376e-06, 3.065299999999854e-05, 1.0419999999997098e-06, 1.5069000000002969e-05, 1.0559999999992797e-06, 3.0333000000000443e-05, 1.0559999999992797e-06, 2.3165999999998077e-05, 1.070000000002319e-06, 2.2929999999997397e-05, 9.720000000018603e-07, 2.193099999999934e-05, 1.068999999999376e-06, 2.315300000000145e-05, 1.0699999999988496e-06, 1.9749999999998935e-05, 1.0550000000032755e-06, 2.15969999999982e-05, 1.0699999999988496e-06, 2.8458000000002037e-05, 1.0559999999992797e-06, 2.536100000000152e-05, 1.054999999999806e-06, 2.316699999999755e-05, 1.0560000000027492e-06, 2.940199999999782e-05, 1.070000000002319e-06, 1.941699999999727e-05, 1.0830000000024154e-06, 1.3179999999998054e-05, 1.0699999999988496e-06, 3.095800000000107e-05, 1.0559999999992797e-06, 1.3194000000001094e-05, 1.0969999999985158e-06, 2.844500000000194e-05, 1.0419999999997098e-06, 2.1000000000000185e-05, 1.068999999999376e-06, 1.3181000000000997e-05, 1.082999999998946e-06, 1.3499999999999623e-05, 1.054999999999806e-06, 2.7528000000002356e-05, 1.0699999999988496e-06, 1.787500000000053e-05, 1.1109999999980857e-06, 2.4680000000002617e-05, 1.0559999999992797e-06, 2.8791999999999707e-05, 1.0410000000002362e-06, 3.0027999999997917e-05, 1.0690000000028455e-06, 2.8833999999998416e-05, 1.000000000001e-06, 1.1639000000000788e-05, 1.054999999999806e-06, 1.787499999999706e-05, 1.0560000000027492e-06, 2.3499999999999216e-05, 1.0410000000002362e-06, 1.8500000000001154e-05, 1.0839999999984196e-06, 2.2528000000000825e-05, 1.054999999999806e-06, 2.7235999999999927e-05, 1.0419999999997098e-06, 2.9096999999998763e-05, 1.125000000001125e-06, 2.994499999999997e-05, 1.0969999999985158e-06, 1.5986000000002554e-05, 1.1109999999980857e-06, 1.562500000000175e-05, 1.082999999998946e-06, 2.315300000000145e-05, 1.0559999999992797e-06, 2.3790999999998702e-05, 1.084000000001889e-06, 1.1943999999999844e-05, 1.0559999999992797e-06, 2.134699999999795e-05, 1.0420000000031793e-06, 2.6276999999998163e-05, 1.098000000001459e-06], 'time': [0.018455208, 0.018456361, 0.018472931, 0.018474, 0.018497486, 0.018498528, 0.018517653, 0.018518722, 0.018532222, 0.018533306, 0.01854775, 0.018548792, 0.018567, 0.018568042, 0.018589653, 0.018590722, 0.018621375, 0.018622417, 0.018637486, 0.018638542, 0.018668875, 0.018669931, 0.018693097, 0.018694167, 0.018717097, 0.018718069, 0.01874, 0.018741069, 0.018764222, 0.018765292, 0.018785042, 0.018786097, 0.018807694, 0.018808764, 0.018837222, 0.018838278, 0.018863639, 0.018864694, 0.018887861, 0.018888917, 0.018918319, 0.018919389, 0.018938806, 0.018939889, 0.018953069, 0.018954139, 0.018985097, 0.018986153, 0.018999347, 0.019000444, 0.019028889, 0.019029931, 0.019050931, 0.019052, 0.019065181, 0.019066264, 0.019079764, 0.019080819, 0.019108347, 0.019109417, 0.019127292, 0.019128403, 0.019153083, 0.019154139, 0.019182931, 0.019183972, 0.019214, 0.019215069, 0.019243903, 0.019244903, 0.019256542, 0.019257597, 0.019275472, 0.019276528, 0.019300028, 0.019301069, 0.019319569, 0.019320653, 0.019343181, 0.019344236, 0.019371472, 0.019372514, 0.019401611, 0.019402736, 0.019432681, 0.019433778, 0.019449764, 0.019450875, 0.0194665, 0.019467583, 0.019490736, 0.019491792, 0.019515583, 0.019516667, 0.019528611, 0.019529667, 0.019551014, 0.019552056, 0.019578333, 0.019579431], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:26:00.111" endtime="20201112 12:26:00.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.108" endtime="20201112 12:26:00.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.120" level="INFO">${RESULT} = [{'time': 0.018456361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018474, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:00.117" endtime="20201112 12:26:00.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.133" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.153000000000265e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0690000000028455e-06, 1.0839999999984196e-06, 1.0420000000031793e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1...</msg>
<status status="PASS" starttime="20201112 12:26:00.121" endtime="20201112 12:26:00.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.137" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:00.136" endtime="20201112 12:26:00.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.140" level="INFO">VALUE: [1.153000000000265e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0690000000028455e-06, 1.0839999999984196e-06, 1.0420000000031793e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 9.720000000018603e-07, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0550000000032755e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0690000000028455e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0410000000002362e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.0420000000031793e-06, 1.098000000001459e-06]</msg>
<status status="PASS" starttime="20201112 12:26:00.138" endtime="20201112 12:26:00.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.134" endtime="20201112 12:26:00.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.143" endtime="20201112 12:26:00.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.146" endtime="20201112 12:26:00.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.145" endtime="20201112 12:26:00.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.141" endtime="20201112 12:26:00.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.741" endtime="20201112 12:26:00.167"></status>
</kw>
<msg timestamp="20201112 12:26:00.167" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.175" endtime="20201112 12:26:00.184"></status>
</kw>
<msg timestamp="20201112 12:26:00.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.173" endtime="20201112 12:26:00.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.187" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.185" endtime="20201112 12:26:00.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.188" endtime="20201112 12:26:00.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.171" endtime="20201112 12:26:00.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.169" endtime="20201112 12:26:00.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.197" endtime="20201112 12:26:00.483"></status>
</kw>
<msg timestamp="20201112 12:26:00.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018358875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.196" endtime="20201112 12:26:00.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018358875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.487" endtime="20201112 12:26:00.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.495" endtime="20201112 12:26:00.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.193" endtime="20201112 12:26:00.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.192" endtime="20201112 12:26:00.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.502" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:00.501" endtime="20201112 12:26:00.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.507" level="INFO">VALUE: [{'time': 0.018358875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018372583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527000000001759e-05, 'source_diff': 1.2527000000001759e-05}, {'time': 0.018373667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018395306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.163900000000038e-05, 'source_diff': 2.163900000000038e-05}, {'time': 0.018396319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.018423833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7513999999999317e-05, 'source_diff': 2.7513999999999317e-05}, {'time': 0.018424917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018451486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6569000000000592e-05, 'source_diff': 2.6569000000000592e-05}, {'time': 0.018452542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018472292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9750000000002405e-05, 'source_diff': 1.9750000000002405e-05}, {'time': 0.018473347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018497764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.44169999999988e-05, 'source_diff': 2.44169999999988e-05}, {'time': 0.018498819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018520486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.166699999999952e-05, 'source_diff': 2.166699999999952e-05}, {'time': 0.0185215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018545306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3806000000001215e-05, 'source_diff': 2.3806000000001215e-05}, {'time': 0.018546347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018576361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0013999999998348e-05, 'source_diff': 3.0013999999998348e-05}, {'time': 0.018577444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018593764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6320000000000223e-05, 'source_diff': 1.6320000000000223e-05}, {'time': 0.018594847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018616722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.187499999999759e-05, 'source_diff': 2.187499999999759e-05}, {'time': 0.018617792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018631611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.018632667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018648986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.631900000000075e-05, 'source_diff': 1.631900000000075e-05}, {'time': 0.018650056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018670736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0679999999998616e-05, 'source_diff': 2.0679999999998616e-05}, {'time': 0.018671792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018685944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4151999999999915e-05, 'source_diff': 1.4151999999999915e-05}, {'time': 0.018686986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018698653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.018699694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018716014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6320000000000223e-05, 'source_diff': 1.6320000000000223e-05}, {'time': 0.018717069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018734653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7584000000001043e-05, 'source_diff': 1.7584000000001043e-05}, {'time': 0.018735722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018753903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.818099999999906e-05, 'source_diff': 1.818099999999906e-05}, {'time': 0.018755014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018773764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999997935e-05, 'source_diff': 1.8749999999997935e-05}, {'time': 0.018774819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018794875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0055999999997465e-05, 'source_diff': 2.0055999999997465e-05}, {'time': 0.018795944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018812569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662500000000275e-05, 'source_diff': 1.662500000000275e-05}, {'time': 0.018813639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018844278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.018845333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018856611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.018857667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018879847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2180000000000116e-05, 'source_diff': 2.2180000000000116e-05}, {'time': 0.018880889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018910292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9402999999997292e-05, 'source_diff': 2.9402999999997292e-05}, {'time': 0.018911361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018935139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3777999999998606e-05, 'source_diff': 2.3777999999998606e-05}, {'time': 0.018936222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018962861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.663900000000191e-05, 'source_diff': 2.663900000000191e-05}, {'time': 0.018963861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.018983625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9764000000001974e-05, 'source_diff': 1.9764000000001974e-05}, {'time': 0.018984681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019001917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7236000000000334e-05, 'source_diff': 1.7236000000000334e-05}, {'time': 0.019002986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019016194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.019017236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019046667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.94309999999999e-05, 'source_diff': 2.94309999999999e-05}, {'time': 0.019047708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019064708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6999999999999654e-05, 'source_diff': 1.6999999999999654e-05}, {'time': 0.019065708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019089514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3805999999997746e-05, 'source_diff': 2.3805999999997746e-05}, {'time': 0.019090556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019112847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2290999999997202e-05, 'source_diff': 2.2290999999997202e-05}, {'time': 0.019113847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019134833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.019135917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019155319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9402000000001696e-05, 'source_diff': 1.9402000000001696e-05}, {'time': 0.019156403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019181736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.533300000000238e-05, 'source_diff': 2.533300000000238e-05}, {'time': 0.019182792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019207542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4750000000000466e-05, 'source_diff': 2.4750000000000466e-05}, {'time': 0.019208583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019227083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8499999999997685e-05, 'source_diff': 1.8499999999997685e-05}, {'time': 0.019228153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019246347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.019247403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019267194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.979100000000164e-05, 'source_diff': 1.979100000000164e-05}, {'time': 0.019268208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0139999999971006e-06, 'source_diff': 1.0139999999971006e-06}, {'time': 0.019283264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5056000000002873e-05, 'source_diff': 1.5056000000002873e-05}, {'time': 0.019284333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019314056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972299999999886e-05, 'source_diff': 2.972299999999886e-05}, {'time': 0.019315097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019339514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.44169999999988e-05, 'source_diff': 2.44169999999988e-05}, {'time': 0.019340569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019369028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.845900000000151e-05, 'source_diff': 2.845900000000151e-05}, {'time': 0.019370097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019389514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.941700000000074e-05, 'source_diff': 1.941700000000074e-05}, {'time': 0.019390583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.0194085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.791699999999924e-05, 'source_diff': 1.791699999999924e-05}, {'time': 0.019409514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019434556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.019435611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:00.503" endtime="20201112 12:26:00.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.499" endtime="20201112 12:26:00.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:00.533" level="INFO">${debug-compressed} = {'diff': [0, 1.1809999999994047e-06, 1.2527000000001759e-05, 1.0839999999984196e-06, 2.163900000000038e-05, 1.0130000000010964e-06, 2.7513999999999317e-05, 1.0839999999984196e-06, 2.6569000000000592e-...</msg>
<status status="PASS" starttime="20201112 12:26:00.509" endtime="20201112 12:26:00.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.536" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:00.535" endtime="20201112 12:26:00.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.541" level="INFO">VALUE: {'diff': [0, 1.1809999999994047e-06, 1.2527000000001759e-05, 1.0839999999984196e-06, 2.163900000000038e-05, 1.0130000000010964e-06, 2.7513999999999317e-05, 1.0839999999984196e-06, 2.6569000000000592e-05, 1.0559999999992797e-06, 1.9750000000002405e-05, 1.054999999999806e-06, 2.44169999999988e-05, 1.054999999999806e-06, 2.166699999999952e-05, 1.01400000000057e-06, 2.3806000000001215e-05, 1.0410000000002362e-06, 3.0013999999998348e-05, 1.082999999998946e-06, 1.6320000000000223e-05, 1.0830000000024154e-06, 2.187499999999759e-05, 1.070000000002319e-06, 1.381899999999825e-05, 1.0559999999992797e-06, 1.631900000000075e-05, 1.070000000002319e-06, 2.0679999999998616e-05, 1.0559999999992797e-06, 1.4151999999999915e-05, 1.0419999999997098e-06, 1.1666999999999927e-05, 1.0410000000002362e-06, 1.6320000000000223e-05, 1.054999999999806e-06, 1.7584000000001043e-05, 1.068999999999376e-06, 1.818099999999906e-05, 1.1110000000015552e-06, 1.8749999999997935e-05, 1.0550000000032755e-06, 2.0055999999997465e-05, 1.068999999999376e-06, 1.662500000000275e-05, 1.0699999999988496e-06, 3.063899999999897e-05, 1.054999999999806e-06, 1.1277999999999982e-05, 1.0560000000027492e-06, 2.2180000000000116e-05, 1.0419999999997098e-06, 2.9402999999997292e-05, 1.0690000000028455e-06, 2.3777999999998606e-05, 1.082999999998946e-06, 2.663900000000191e-05, 9.999999999975306e-07, 1.9764000000001974e-05, 1.0559999999992797e-06, 1.7236000000000334e-05, 1.068999999999376e-06, 1.3208000000000664e-05, 1.0419999999997098e-06, 2.94309999999999e-05, 1.0410000000002362e-06, 1.6999999999999654e-05, 1.000000000001e-06, 2.3805999999997746e-05, 1.0420000000031793e-06, 2.2290999999997202e-05, 1.000000000001e-06, 2.0986000000000615e-05, 1.0839999999984196e-06, 1.9402000000001696e-05, 1.0839999999984196e-06, 2.533300000000238e-05, 1.0559999999992797e-06, 2.4750000000000466e-05, 1.0410000000002362e-06, 1.8499999999997685e-05, 1.070000000002319e-06, 1.8193999999999155e-05, 1.0559999999992797e-06, 1.979100000000164e-05, 1.0139999999971006e-06, 1.5056000000002873e-05, 1.068999999999376e-06, 2.972299999999886e-05, 1.0410000000002362e-06, 2.44169999999988e-05, 1.054999999999806e-06, 2.845900000000151e-05, 1.068999999999376e-06, 1.941700000000074e-05, 1.068999999999376e-06, 1.791699999999924e-05, 1.01400000000057e-06, 2.5041999999999426e-05, 1.054999999999806e-06], 'source_diff': [0, 1.1809999999994047e-06, 1.2527000000001759e-05, 1.0839999999984196e-06, 2.163900000000038e-05, 1.0130000000010964e-06, 2.7513999999999317e-05, 1.0839999999984196e-06, 2.6569000000000592e-05, 1.0559999999992797e-06, 1.9750000000002405e-05, 1.054999999999806e-06, 2.44169999999988e-05, 1.054999999999806e-06, 2.166699999999952e-05, 1.01400000000057e-06, 2.3806000000001215e-05, 1.0410000000002362e-06, 3.0013999999998348e-05, 1.082999999998946e-06, 1.6320000000000223e-05, 1.0830000000024154e-06, 2.187499999999759e-05, 1.070000000002319e-06, 1.381899999999825e-05, 1.0559999999992797e-06, 1.631900000000075e-05, 1.070000000002319e-06, 2.0679999999998616e-05, 1.0559999999992797e-06, 1.4151999999999915e-05, 1.0419999999997098e-06, 1.1666999999999927e-05, 1.0410000000002362e-06, 1.6320000000000223e-05, 1.054999999999806e-06, 1.7584000000001043e-05, 1.068999999999376e-06, 1.818099999999906e-05, 1.1110000000015552e-06, 1.8749999999997935e-05, 1.0550000000032755e-06, 2.0055999999997465e-05, 1.068999999999376e-06, 1.662500000000275e-05, 1.0699999999988496e-06, 3.063899999999897e-05, 1.054999999999806e-06, 1.1277999999999982e-05, 1.0560000000027492e-06, 2.2180000000000116e-05, 1.0419999999997098e-06, 2.9402999999997292e-05, 1.0690000000028455e-06, 2.3777999999998606e-05, 1.082999999998946e-06, 2.663900000000191e-05, 9.999999999975306e-07, 1.9764000000001974e-05, 1.0559999999992797e-06, 1.7236000000000334e-05, 1.068999999999376e-06, 1.3208000000000664e-05, 1.0419999999997098e-06, 2.94309999999999e-05, 1.0410000000002362e-06, 1.6999999999999654e-05, 1.000000000001e-06, 2.3805999999997746e-05, 1.0420000000031793e-06, 2.2290999999997202e-05, 1.000000000001e-06, 2.0986000000000615e-05, 1.0839999999984196e-06, 1.9402000000001696e-05, 1.0839999999984196e-06, 2.533300000000238e-05, 1.0559999999992797e-06, 2.4750000000000466e-05, 1.0410000000002362e-06, 1.8499999999997685e-05, 1.070000000002319e-06, 1.8193999999999155e-05, 1.0559999999992797e-06, 1.979100000000164e-05, 1.0139999999971006e-06, 1.5056000000002873e-05, 1.068999999999376e-06, 2.972299999999886e-05, 1.0410000000002362e-06, 2.44169999999988e-05, 1.054999999999806e-06, 2.845900000000151e-05, 1.068999999999376e-06, 1.941700000000074e-05, 1.068999999999376e-06, 1.791699999999924e-05, 1.01400000000057e-06, 2.5041999999999426e-05, 1.054999999999806e-06], 'time': [0.018358875, 0.018360056, 0.018372583, 0.018373667, 0.018395306, 0.018396319, 0.018423833, 0.018424917, 0.018451486, 0.018452542, 0.018472292, 0.018473347, 0.018497764, 0.018498819, 0.018520486, 0.0185215, 0.018545306, 0.018546347, 0.018576361, 0.018577444, 0.018593764, 0.018594847, 0.018616722, 0.018617792, 0.018631611, 0.018632667, 0.018648986, 0.018650056, 0.018670736, 0.018671792, 0.018685944, 0.018686986, 0.018698653, 0.018699694, 0.018716014, 0.018717069, 0.018734653, 0.018735722, 0.018753903, 0.018755014, 0.018773764, 0.018774819, 0.018794875, 0.018795944, 0.018812569, 0.018813639, 0.018844278, 0.018845333, 0.018856611, 0.018857667, 0.018879847, 0.018880889, 0.018910292, 0.018911361, 0.018935139, 0.018936222, 0.018962861, 0.018963861, 0.018983625, 0.018984681, 0.019001917, 0.019002986, 0.019016194, 0.019017236, 0.019046667, 0.019047708, 0.019064708, 0.019065708, 0.019089514, 0.019090556, 0.019112847, 0.019113847, 0.019134833, 0.019135917, 0.019155319, 0.019156403, 0.019181736, 0.019182792, 0.019207542, 0.019208583, 0.019227083, 0.019228153, 0.019246347, 0.019247403, 0.019267194, 0.019268208, 0.019283264, 0.019284333, 0.019314056, 0.019315097, 0.019339514, 0.019340569, 0.019369028, 0.019370097, 0.019389514, 0.019390583, 0.0194085, 0.019409514, 0.019434556, 0.019435611], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source}</msg>
<status status="PASS" starttime="20201112 12:26:00.538" endtime="20201112 12:26:00.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.534" endtime="20201112 12:26:00.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.546" level="INFO">${RESULT} = [{'time': 0.018360056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018373667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:00.543" endtime="20201112 12:26:00.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.560" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.0839999999984196e-06, 1.0130000000010964e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1....</msg>
<status status="PASS" starttime="20201112 12:26:00.547" endtime="20201112 12:26:00.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.564" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:00.563" endtime="20201112 12:26:00.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.566" level="INFO">VALUE: [1.1809999999994047e-06, 1.0839999999984196e-06, 1.0130000000010964e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.0550000000032755e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.000000000001e-06, 1.0420000000031793e-06, 1.000000000001e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0139999999971006e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.01400000000057e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:26:00.565" endtime="20201112 12:26:00.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.561" endtime="20201112 12:26:00.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.569" endtime="20201112 12:26:00.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.573" endtime="20201112 12:26:00.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.571" endtime="20201112 12:26:00.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.568" endtime="20201112 12:26:00.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.168" endtime="20201112 12:26:00.594"></status>
</kw>
<msg timestamp="20201112 12:26:00.594" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.601" endtime="20201112 12:26:00.610"></status>
</kw>
<msg timestamp="20201112 12:26:00.611" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.600" endtime="20201112 12:26:00.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.613" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.612" endtime="20201112 12:26:00.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.614" endtime="20201112 12:26:00.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.597" endtime="20201112 12:26:00.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.596" endtime="20201112 12:26:00.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.623" endtime="20201112 12:26:00.909"></status>
</kw>
<msg timestamp="20201112 12:26:00.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018449347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018450542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.622" endtime="20201112 12:26:00.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018449347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018450542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.913" endtime="20201112 12:26:00.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.921" endtime="20201112 12:26:00.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.619" endtime="20201112 12:26:00.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.617" endtime="20201112 12:26:00.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.928" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:00.927" endtime="20201112 12:26:00.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.933" level="INFO">VALUE: [{'time': 0.018449347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018450542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.018470583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.004099999999842e-05, 'source_diff': 2.004099999999842e-05}, {'time': 0.018471597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018501917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0320000000000347e-05, 'source_diff': 3.0320000000000347e-05}, {'time': 0.018502972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018523972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.018525042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018545389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.034700000000042e-05, 'source_diff': 2.034700000000042e-05}, {'time': 0.018546458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018572736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6278000000001106e-05, 'source_diff': 2.6278000000001106e-05}, {'time': 0.018573792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018588569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.477700000000054e-05, 'source_diff': 1.477700000000054e-05}, {'time': 0.018589625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018614347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4722000000001326e-05, 'source_diff': 2.4722000000001326e-05}, {'time': 0.018615417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018633611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8194000000002625e-05, 'source_diff': 1.8194000000002625e-05}, {'time': 0.018634653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018647861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.018648931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018668375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9444000000000405e-05, 'source_diff': 1.9444000000000405e-05}, {'time': 0.018669417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018697264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7847000000000982e-05, 'source_diff': 2.7847000000000982e-05}, {'time': 0.018698361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018722125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3763999999999036e-05, 'source_diff': 2.3763999999999036e-05}, {'time': 0.018723181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018742625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9444000000000405e-05, 'source_diff': 1.9444000000000405e-05}, {'time': 0.018743667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018762486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.881899999999978e-05, 'source_diff': 1.881899999999978e-05}, {'time': 0.018763542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018782694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9151999999997976e-05, 'source_diff': 1.9151999999997976e-05}, {'time': 0.018783722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018813139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.018814222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.01883425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0028000000001794e-05, 'source_diff': 2.0028000000001794e-05}, {'time': 0.018835333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018865625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0292000000001207e-05, 'source_diff': 3.0292000000001207e-05}, {'time': 0.018866708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018888944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2236000000001865e-05, 'source_diff': 2.2236000000001865e-05}, {'time': 0.018890042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.018914403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.436100000000052e-05, 'source_diff': 2.436100000000052e-05}, {'time': 0.018915458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018943931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847300000000108e-05, 'source_diff': 2.847300000000108e-05}, {'time': 0.018944986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018959125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.018960194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018978083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.78890000000001e-05, 'source_diff': 1.78890000000001e-05}, {'time': 0.018979125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019008292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9167000000000082e-05, 'source_diff': 2.9167000000000082e-05}, {'time': 0.019009292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019025903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.661099999999971e-05, 'source_diff': 1.661099999999971e-05}, {'time': 0.019026958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019038944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.019039986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019064097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019065139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.01908925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019090319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019111292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.097299999999705e-05, 'source_diff': 2.097299999999705e-05}, {'time': 0.019112361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019135542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.318099999999712e-05, 'source_diff': 2.318099999999712e-05}, {'time': 0.019136583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019154153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7570000000001473e-05, 'source_diff': 1.7570000000001473e-05}, {'time': 0.019155208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019180875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.566700000000005e-05, 'source_diff': 2.566700000000005e-05}, {'time': 0.019181944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019199181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7236999999999808e-05, 'source_diff': 1.7236999999999808e-05}, {'time': 0.019200306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019212514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.019213625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019237986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.436099999999705e-05, 'source_diff': 2.436099999999705e-05}, {'time': 0.019239056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019264708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5651999999997538e-05, 'source_diff': 2.5651999999997538e-05}, {'time': 0.019265764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019290194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4429999999998897e-05, 'source_diff': 2.4429999999998897e-05}, {'time': 0.019291236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019313778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.019314833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019334014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.918100000000006e-05, 'source_diff': 1.918100000000006e-05}, {'time': 0.019335028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019349792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.019350847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019363139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2292000000000552e-05, 'source_diff': 1.2292000000000552e-05}, {'time': 0.019364181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019390778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.019391847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019414694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.284699999999945e-05, 'source_diff': 2.284699999999945e-05}, {'time': 0.019415764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019432139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.63750000000025e-05, 'source_diff': 1.63750000000025e-05}, {'time': 0.019433125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.019450694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7569000000002e-05, 'source_diff': 1.7569000000002e-05}, {'time': 0.01945175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019465875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.019466944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019496972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0028000000001387e-05, 'source_diff': 3.0028000000001387e-05}, {'time': 0.019498028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019523375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5346999999998482e-05, 'source_diff': 2.5346999999998482e-05}, {'time': 0.019524444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019538889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4445000000001817e-05, 'source_diff': 1.4445000000001817e-05}, {'time': 0.019539944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:00.929" endtime="20201112 12:26:00.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.925" endtime="20201112 12:26:00.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:00.959" level="INFO">${debug-compressed} = {'diff': [0, 1.1949999999989747e-06, 2.004099999999842e-05, 1.01400000000057e-06, 3.0320000000000347e-05, 1.054999999999806e-06, 2.1000000000000185e-05, 1.0699999999988496e-06, 2.034700000000042e-05, ...</msg>
<status status="PASS" starttime="20201112 12:26:00.936" endtime="20201112 12:26:00.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.963" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:00.962" endtime="20201112 12:26:00.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.967" level="INFO">VALUE: {'diff': [0, 1.1949999999989747e-06, 2.004099999999842e-05, 1.01400000000057e-06, 3.0320000000000347e-05, 1.054999999999806e-06, 2.1000000000000185e-05, 1.0699999999988496e-06, 2.034700000000042e-05, 1.068999999999376e-06, 2.6278000000001106e-05, 1.0559999999992797e-06, 1.477700000000054e-05, 1.0559999999992797e-06, 2.4722000000001326e-05, 1.0699999999988496e-06, 1.8194000000002625e-05, 1.0419999999997098e-06, 1.3208000000000664e-05, 1.0699999999988496e-06, 1.9444000000000405e-05, 1.0419999999997098e-06, 2.7847000000000982e-05, 1.0969999999985158e-06, 2.3763999999999036e-05, 1.0559999999992797e-06, 1.9444000000000405e-05, 1.0419999999997098e-06, 1.881899999999978e-05, 1.0560000000027492e-06, 1.9151999999997976e-05, 1.02800000000014e-06, 2.9417000000000332e-05, 1.082999999998946e-06, 2.0028000000001794e-05, 1.082999999998946e-06, 3.0292000000001207e-05, 1.082999999998946e-06, 2.2236000000001865e-05, 1.0979999999979895e-06, 2.436100000000052e-05, 1.054999999999806e-06, 2.847300000000108e-05, 1.054999999999806e-06, 1.4138999999999818e-05, 1.068999999999376e-06, 1.78890000000001e-05, 1.0419999999997098e-06, 2.9167000000000082e-05, 1.000000000001e-06, 1.661099999999971e-05, 1.054999999999806e-06, 1.1985999999998553e-05, 1.0419999999997098e-06, 2.411100000000027e-05, 1.0419999999997098e-06, 2.411100000000027e-05, 1.0690000000028455e-06, 2.097299999999705e-05, 1.0690000000028455e-06, 2.318099999999712e-05, 1.0410000000002362e-06, 1.7570000000001473e-05, 1.054999999999806e-06, 2.566700000000005e-05, 1.068999999999376e-06, 1.7236999999999808e-05, 1.125000000001125e-06, 1.2207999999999664e-05, 1.1110000000015552e-06, 2.436099999999705e-05, 1.070000000002319e-06, 2.5651999999997538e-05, 1.0560000000027492e-06, 2.4429999999998897e-05, 1.0419999999997098e-06, 2.2542000000000395e-05, 1.054999999999806e-06, 1.918100000000006e-05, 1.01400000000057e-06, 1.4764000000000443e-05, 1.054999999999806e-06, 1.2292000000000552e-05, 1.0419999999997098e-06, 2.6596999999999732e-05, 1.068999999999376e-06, 2.284699999999945e-05, 1.0699999999988496e-06, 1.63750000000025e-05, 9.859999999979607e-07, 1.7569000000002e-05, 1.0559999999992797e-06, 1.4125000000000248e-05, 1.068999999999376e-06, 3.0028000000001387e-05, 1.0559999999992797e-06, 2.5346999999998482e-05, 1.068999999999376e-06, 1.4445000000001817e-05, 1.054999999999806e-06], 'source_diff': [0, 1.1949999999989747e-06, 2.004099999999842e-05, 1.01400000000057e-06, 3.0320000000000347e-05, 1.054999999999806e-06, 2.1000000000000185e-05, 1.0699999999988496e-06, 2.034700000000042e-05, 1.068999999999376e-06, 2.6278000000001106e-05, 1.0559999999992797e-06, 1.477700000000054e-05, 1.0559999999992797e-06, 2.4722000000001326e-05, 1.0699999999988496e-06, 1.8194000000002625e-05, 1.0419999999997098e-06, 1.3208000000000664e-05, 1.0699999999988496e-06, 1.9444000000000405e-05, 1.0419999999997098e-06, 2.7847000000000982e-05, 1.0969999999985158e-06, 2.3763999999999036e-05, 1.0559999999992797e-06, 1.9444000000000405e-05, 1.0419999999997098e-06, 1.881899999999978e-05, 1.0560000000027492e-06, 1.9151999999997976e-05, 1.02800000000014e-06, 2.9417000000000332e-05, 1.082999999998946e-06, 2.0028000000001794e-05, 1.082999999998946e-06, 3.0292000000001207e-05, 1.082999999998946e-06, 2.2236000000001865e-05, 1.0979999999979895e-06, 2.436100000000052e-05, 1.054999999999806e-06, 2.847300000000108e-05, 1.054999999999806e-06, 1.4138999999999818e-05, 1.068999999999376e-06, 1.78890000000001e-05, 1.0419999999997098e-06, 2.9167000000000082e-05, 1.000000000001e-06, 1.661099999999971e-05, 1.054999999999806e-06, 1.1985999999998553e-05, 1.0419999999997098e-06, 2.411100000000027e-05, 1.0419999999997098e-06, 2.411100000000027e-05, 1.0690000000028455e-06, 2.097299999999705e-05, 1.0690000000028455e-06, 2.318099999999712e-05, 1.0410000000002362e-06, 1.7570000000001473e-05, 1.054999999999806e-06, 2.566700000000005e-05, 1.068999999999376e-06, 1.7236999999999808e-05, 1.125000000001125e-06, 1.2207999999999664e-05, 1.1110000000015552e-06, 2.436099999999705e-05, 1.070000000002319e-06, 2.5651999999997538e-05, 1.0560000000027492e-06, 2.4429999999998897e-05, 1.0419999999997098e-06, 2.2542000000000395e-05, 1.054999999999806e-06, 1.918100000000006e-05, 1.01400000000057e-06, 1.4764000000000443e-05, 1.054999999999806e-06, 1.2292000000000552e-05, 1.0419999999997098e-06, 2.6596999999999732e-05, 1.068999999999376e-06, 2.284699999999945e-05, 1.0699999999988496e-06, 1.63750000000025e-05, 9.859999999979607e-07, 1.7569000000002e-05, 1.0559999999992797e-06, 1.4125000000000248e-05, 1.068999999999376e-06, 3.0028000000001387e-05, 1.0559999999992797e-06, 2.5346999999998482e-05, 1.068999999999376e-06, 1.4445000000001817e-05, 1.054999999999806e-06], 'time': [0.018449347, 0.018450542, 0.018470583, 0.018471597, 0.018501917, 0.018502972, 0.018523972, 0.018525042, 0.018545389, 0.018546458, 0.018572736, 0.018573792, 0.018588569, 0.018589625, 0.018614347, 0.018615417, 0.018633611, 0.018634653, 0.018647861, 0.018648931, 0.018668375, 0.018669417, 0.018697264, 0.018698361, 0.018722125, 0.018723181, 0.018742625, 0.018743667, 0.018762486, 0.018763542, 0.018782694, 0.018783722, 0.018813139, 0.018814222, 0.01883425, 0.018835333, 0.018865625, 0.018866708, 0.018888944, 0.018890042, 0.018914403, 0.018915458, 0.018943931, 0.018944986, 0.018959125, 0.018960194, 0.018978083, 0.018979125, 0.019008292, 0.019009292, 0.019025903, 0.019026958, 0.019038944, 0.019039986, 0.019064097, 0.019065139, 0.01908925, 0.019090319, 0.019111292, 0.019112361, 0.019135542, 0.019136583, 0.019154153, 0.019155208, 0.019180875, 0.019181944, 0.019199181, 0.019200306, 0.019212514, 0.019213625, 0.019237986, 0.019239056, 0.019264708, 0.019265764, 0.019290194, 0.019291236, 0.019313778, 0.019314833, 0.019334014, 0.019335028, 0.019349792, 0.019350847, 0.019363139, 0.019364181, 0.019390778, 0.019391847, 0.019414694, 0.019415764, 0.019432139, 0.019433125, 0.019450694, 0.01945175, 0.019465875, 0.019466944, 0.019496972, 0.019498028, 0.019523375, 0.019524444, 0.019538889, 0.019539944], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:26:00.964" endtime="20201112 12:26:00.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.960" endtime="20201112 12:26:00.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.973" level="INFO">${RESULT} = [{'time': 0.018450542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.018471597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:00.969" endtime="20201112 12:26:00.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.986" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1949999999989747e-06, 1.01400000000057e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1....</msg>
<status status="PASS" starttime="20201112 12:26:00.974" endtime="20201112 12:26:00.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.990" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:00.989" endtime="20201112 12:26:00.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.992" level="INFO">VALUE: [1.1949999999989747e-06, 1.01400000000057e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0690000000028455e-06, 1.0690000000028455e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.070000000002319e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 9.859999999979607e-07, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:26:00.991" endtime="20201112 12:26:00.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.987" endtime="20201112 12:26:00.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.995" endtime="20201112 12:26:00.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.999" endtime="20201112 12:26:01.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.997" endtime="20201112 12:26:01.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.994" endtime="20201112 12:26:01.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.594" endtime="20201112 12:26:01.020"></status>
</kw>
<msg timestamp="20201112 12:26:01.020" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.028" endtime="20201112 12:26:01.037"></status>
</kw>
<msg timestamp="20201112 12:26:01.037" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.026" endtime="20201112 12:26:01.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.038" endtime="20201112 12:26:01.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.041" endtime="20201112 12:26:01.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.023" endtime="20201112 12:26:01.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.022" endtime="20201112 12:26:01.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.051" endtime="20201112 12:26:01.337"></status>
</kw>
<msg timestamp="20201112 12:26:01.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01873425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:01.049" endtime="20201112 12:26:01.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01873425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:01.341" endtime="20201112 12:26:02.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.999" endtime="20201112 12:26:03.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.047" endtime="20201112 12:26:03.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.045" endtime="20201112 12:26:03.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.013" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:03.011" endtime="20201112 12:26:03.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.024" level="INFO">VALUE: [{'time': 0.01873425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018753875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.018754931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018776847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1916000000000296e-05, 'source_diff': 2.1916000000000296e-05}, {'time': 0.018777903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01880575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7847000000000982e-05, 'source_diff': 2.7847000000000982e-05}, {'time': 0.018806819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018826847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0028000000001794e-05, 'source_diff': 2.0028000000001794e-05}, {'time': 0.018827944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018857306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9362000000001526e-05, 'source_diff': 2.9362000000001526e-05}, {'time': 0.018858361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018879347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.018880417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.01890175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.133299999999838e-05, 'source_diff': 2.133299999999838e-05}, {'time': 0.018902778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018917542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.018918611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018938667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0056000000000934e-05, 'source_diff': 2.0056000000000934e-05}, {'time': 0.018939708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018963486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3778000000002075e-05, 'source_diff': 2.3778000000002075e-05}, {'time': 0.018964542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018980236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.018981306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019002306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.019003347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019024972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.019026028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019042028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5999999999998654e-05, 'source_diff': 1.5999999999998654e-05}, {'time': 0.019043083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019066278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.319500000000016e-05, 'source_diff': 2.319500000000016e-05}, {'time': 0.019067375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019079889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.019080972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019101681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.070899999999723e-05, 'source_diff': 2.070899999999723e-05}, {'time': 0.019102681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019130278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7597000000000732e-05, 'source_diff': 2.7597000000000732e-05}, {'time': 0.019131264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.019157847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6583000000000162e-05, 'source_diff': 2.6583000000000162e-05}, {'time': 0.019158903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019183958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5054999999999522e-05, 'source_diff': 2.5054999999999522e-05}, {'time': 0.019185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019206042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1041999999998895e-05, 'source_diff': 2.1041999999998895e-05}, {'time': 0.019207042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019235194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8152000000000038e-05, 'source_diff': 2.8152000000000038e-05}, {'time': 0.01923625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019256944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0694000000001656e-05, 'source_diff': 2.0694000000001656e-05}, {'time': 0.019258, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019274306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6306000000000653e-05, 'source_diff': 1.6306000000000653e-05}, {'time': 0.019275361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019293569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8207999999998725e-05, 'source_diff': 1.8207999999998725e-05}, {'time': 0.019294625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019310292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.566700000000046e-05, 'source_diff': 1.566700000000046e-05}, {'time': 0.019311361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019336694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.533300000000238e-05, 'source_diff': 2.533300000000238e-05}, {'time': 0.019337764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019356569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.880500000000021e-05, 'source_diff': 1.880500000000021e-05}, {'time': 0.019357653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019372389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4736000000001304e-05, 'source_diff': 1.4736000000001304e-05}, {'time': 0.019373444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019385139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.019386139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019411847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5707999999999287e-05, 'source_diff': 2.5707999999999287e-05}, {'time': 0.019412861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019434167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1305999999998715e-05, 'source_diff': 2.1305999999998715e-05}, {'time': 0.019435208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019462736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7528000000002356e-05, 'source_diff': 2.7528000000002356e-05}, {'time': 0.019463792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019489458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5666000000000577e-05, 'source_diff': 2.5666000000000577e-05}, {'time': 0.019490528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019511514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.019512556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019524819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.226299999999847e-05, 'source_diff': 1.226299999999847e-05}, {'time': 0.019525889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019545319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9429999999997366e-05, 'source_diff': 1.9429999999997366e-05}, {'time': 0.019546375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019577333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.09579999999976e-05, 'source_diff': 3.09579999999976e-05}, {'time': 0.019578389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019594736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.634699999999989e-05, 'source_diff': 1.634699999999989e-05}, {'time': 0.019595778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019608028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.019609097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019620361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.019621417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019640806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.93890000000016e-05, 'source_diff': 1.93890000000016e-05}, {'time': 0.019641847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019667222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.537500000000109e-05, 'source_diff': 2.537500000000109e-05}, {'time': 0.019668264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019690486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2221999999998826e-05, 'source_diff': 2.2221999999998826e-05}, {'time': 0.019691542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019703222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.019704319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019716514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.019717569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019745097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7527999999998887e-05, 'source_diff': 2.7527999999998887e-05}, {'time': 0.019746181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019760292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4110999999997209e-05, 'source_diff': 1.4110999999997209e-05}, {'time': 0.019761389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019787958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6569000000000592e-05, 'source_diff': 2.6569000000000592e-05}, {'time': 0.019789014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:03.015" endtime="20201112 12:26:03.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.006" endtime="20201112 12:26:03.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:03.078" level="INFO">${debug-compressed} = {'diff': [0, 1.193999999999501e-06, 1.843099999999931e-05, 1.0559999999992797e-06, 2.1916000000000296e-05, 1.0559999999992797e-06, 2.7847000000000982e-05, 1.068999999999376e-06, 2.0028000000001794e-05...</msg>
<status status="PASS" starttime="20201112 12:26:03.030" endtime="20201112 12:26:03.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.082" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:03.081" endtime="20201112 12:26:03.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.086" level="INFO">VALUE: {'diff': [0, 1.193999999999501e-06, 1.843099999999931e-05, 1.0559999999992797e-06, 2.1916000000000296e-05, 1.0559999999992797e-06, 2.7847000000000982e-05, 1.068999999999376e-06, 2.0028000000001794e-05, 1.0969999999985158e-06, 2.9362000000001526e-05, 1.054999999999806e-06, 2.0986000000000615e-05, 1.0699999999988496e-06, 2.133299999999838e-05, 1.02800000000014e-06, 1.4764000000000443e-05, 1.068999999999376e-06, 2.0056000000000934e-05, 1.0410000000002362e-06, 2.3778000000002075e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0699999999988496e-06, 2.1000000000000185e-05, 1.0410000000002362e-06, 2.162500000000081e-05, 1.0559999999992797e-06, 1.5999999999998654e-05, 1.054999999999806e-06, 2.319500000000016e-05, 1.0970000000019853e-06, 1.2513999999998193e-05, 1.0830000000024154e-06, 2.070899999999723e-05, 1.000000000001e-06, 2.7597000000000732e-05, 9.859999999979607e-07, 2.6583000000000162e-05, 1.0560000000027492e-06, 2.5054999999999522e-05, 1.0419999999997098e-06, 2.1041999999998895e-05, 1.000000000001e-06, 2.8152000000000038e-05, 1.0559999999992797e-06, 2.0694000000001656e-05, 1.0559999999992797e-06, 1.6306000000000653e-05, 1.054999999999806e-06, 1.8207999999998725e-05, 1.0559999999992797e-06, 1.566700000000046e-05, 1.068999999999376e-06, 2.533300000000238e-05, 1.0699999999988496e-06, 1.880500000000021e-05, 1.0839999999984196e-06, 1.4736000000001304e-05, 1.054999999999806e-06, 1.1694999999999067e-05, 1.000000000001e-06, 2.5707999999999287e-05, 1.01400000000057e-06, 2.1305999999998715e-05, 1.0410000000002362e-06, 2.7528000000002356e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.0699999999988496e-06, 2.0986000000000615e-05, 1.0419999999997098e-06, 1.226299999999847e-05, 1.070000000002319e-06, 1.9429999999997366e-05, 1.0560000000027492e-06, 3.09579999999976e-05, 1.0560000000027492e-06, 1.634699999999989e-05, 1.0419999999997098e-06, 1.2249999999998373e-05, 1.068999999999376e-06, 1.1264000000000413e-05, 1.0559999999992797e-06, 1.93890000000016e-05, 1.0410000000002362e-06, 2.537500000000109e-05, 1.0419999999997098e-06, 2.2221999999998826e-05, 1.0559999999992797e-06, 1.1680000000000024e-05, 1.0970000000019853e-06, 1.2194999999999567e-05, 1.054999999999806e-06, 2.7527999999998887e-05, 1.084000000001889e-06, 1.4110999999997209e-05, 1.0970000000019853e-06, 2.6569000000000592e-05, 1.0559999999992797e-06], 'source_diff': [0, 1.193999999999501e-06, 1.843099999999931e-05, 1.0559999999992797e-06, 2.1916000000000296e-05, 1.0559999999992797e-06, 2.7847000000000982e-05, 1.068999999999376e-06, 2.0028000000001794e-05, 1.0969999999985158e-06, 2.9362000000001526e-05, 1.054999999999806e-06, 2.0986000000000615e-05, 1.0699999999988496e-06, 2.133299999999838e-05, 1.02800000000014e-06, 1.4764000000000443e-05, 1.068999999999376e-06, 2.0056000000000934e-05, 1.0410000000002362e-06, 2.3778000000002075e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0699999999988496e-06, 2.1000000000000185e-05, 1.0410000000002362e-06, 2.162500000000081e-05, 1.0559999999992797e-06, 1.5999999999998654e-05, 1.054999999999806e-06, 2.319500000000016e-05, 1.0970000000019853e-06, 1.2513999999998193e-05, 1.0830000000024154e-06, 2.070899999999723e-05, 1.000000000001e-06, 2.7597000000000732e-05, 9.859999999979607e-07, 2.6583000000000162e-05, 1.0560000000027492e-06, 2.5054999999999522e-05, 1.0419999999997098e-06, 2.1041999999998895e-05, 1.000000000001e-06, 2.8152000000000038e-05, 1.0559999999992797e-06, 2.0694000000001656e-05, 1.0559999999992797e-06, 1.6306000000000653e-05, 1.054999999999806e-06, 1.8207999999998725e-05, 1.0559999999992797e-06, 1.566700000000046e-05, 1.068999999999376e-06, 2.533300000000238e-05, 1.0699999999988496e-06, 1.880500000000021e-05, 1.0839999999984196e-06, 1.4736000000001304e-05, 1.054999999999806e-06, 1.1694999999999067e-05, 1.000000000001e-06, 2.5707999999999287e-05, 1.01400000000057e-06, 2.1305999999998715e-05, 1.0410000000002362e-06, 2.7528000000002356e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.0699999999988496e-06, 2.0986000000000615e-05, 1.0419999999997098e-06, 1.226299999999847e-05, 1.070000000002319e-06, 1.9429999999997366e-05, 1.0560000000027492e-06, 3.09579999999976e-05, 1.0560000000027492e-06, 1.634699999999989e-05, 1.0419999999997098e-06, 1.2249999999998373e-05, 1.068999999999376e-06, 1.1264000000000413e-05, 1.0559999999992797e-06, 1.93890000000016e-05, 1.0410000000002362e-06, 2.537500000000109e-05, 1.0419999999997098e-06, 2.2221999999998826e-05, 1.0559999999992797e-06, 1.1680000000000024e-05, 1.0970000000019853e-06, 1.2194999999999567e-05, 1.054999999999806e-06, 2.7527999999998887e-05, 1.084000000001889e-06, 1.4110999999997209e-05, 1.0970000000019853e-06, 2.6569000000000592e-05, 1.0559999999992797e-06], 'time': [0.01873425, 0.018735444, 0.018753875, 0.018754931, 0.018776847, 0.018777903, 0.01880575, 0.018806819, 0.018826847, 0.018827944, 0.018857306, 0.018858361, 0.018879347, 0.018880417, 0.01890175, 0.018902778, 0.018917542, 0.018918611, 0.018938667, 0.018939708, 0.018963486, 0.018964542, 0.018980236, 0.018981306, 0.019002306, 0.019003347, 0.019024972, 0.019026028, 0.019042028, 0.019043083, 0.019066278, 0.019067375, 0.019079889, 0.019080972, 0.019101681, 0.019102681, 0.019130278, 0.019131264, 0.019157847, 0.019158903, 0.019183958, 0.019185, 0.019206042, 0.019207042, 0.019235194, 0.01923625, 0.019256944, 0.019258, 0.019274306, 0.019275361, 0.019293569, 0.019294625, 0.019310292, 0.019311361, 0.019336694, 0.019337764, 0.019356569, 0.019357653, 0.019372389, 0.019373444, 0.019385139, 0.019386139, 0.019411847, 0.019412861, 0.019434167, 0.019435208, 0.019462736, 0.019463792, 0.019489458, 0.019490528, 0.019511514, 0.019512556, 0.019524819, 0.019525889, 0.019545319, 0.019546375, 0.019577333, 0.019578389, 0.019594736, 0.019595778, 0.019608028, 0.019609097, 0.019620361, 0.019621417, 0.019640806, 0.019641847, 0.019667222, 0.019668264, 0.019690486, 0.019691542, 0.019703222, 0.019704319, 0.019716514, 0.019717569, 0.019745097, 0.019746181, 0.019760292, 0.019761389, 0.019787958, 0.019789014], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:26:03.083" endtime="20201112 12:26:03.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.079" endtime="20201112 12:26:03.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.091" level="INFO">${RESULT} = [{'time': 0.018735444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018754931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:03.088" endtime="20201112 12:26:03.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.105" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.193999999999501e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.0...</msg>
<status status="PASS" starttime="20201112 12:26:03.092" endtime="20201112 12:26:03.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.109" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:03.108" endtime="20201112 12:26:03.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.111" level="INFO">VALUE: [1.193999999999501e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.000000000001e-06, 9.859999999979607e-07, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.0970000000019853e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.110" endtime="20201112 12:26:03.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.106" endtime="20201112 12:26:03.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.114" endtime="20201112 12:26:03.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.118" endtime="20201112 12:26:03.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.116" endtime="20201112 12:26:03.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.113" endtime="20201112 12:26:03.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.020" endtime="20201112 12:26:03.139"></status>
</kw>
<msg timestamp="20201112 12:26:03.139" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.147" endtime="20201112 12:26:03.157"></status>
</kw>
<msg timestamp="20201112 12:26:03.157" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.145" endtime="20201112 12:26:03.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.160" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.158" endtime="20201112 12:26:03.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.161" endtime="20201112 12:26:03.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.142" endtime="20201112 12:26:03.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.141" endtime="20201112 12:26:03.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.169" endtime="20201112 12:26:03.455"></status>
</kw>
<msg timestamp="20201112 12:26:03.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.168" endtime="20201112 12:26:03.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.460" endtime="20201112 12:26:03.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.468" endtime="20201112 12:26:03.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.165" endtime="20201112 12:26:03.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.164" endtime="20201112 12:26:03.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.474" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:03.473" endtime="20201112 12:26:03.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.480" level="INFO">VALUE: [{'time': 0.019613431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2219999999986408e-06, 'source_diff': 1.2219999999986408e-06}, {'time': 0.019644944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0291000000001733e-05, 'source_diff': 3.0291000000001733e-05}, {'time': 0.019645944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.019670986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5042000000002895e-05, 'source_diff': 2.5042000000002895e-05}, {'time': 0.019672056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019703028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097200000000064e-05, 'source_diff': 3.097200000000064e-05}, {'time': 0.019704083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019726014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.193099999999934e-05, 'source_diff': 2.193099999999934e-05}, {'time': 0.019727056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019747736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0679999999998616e-05, 'source_diff': 2.0679999999998616e-05}, {'time': 0.019748778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019779431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.019780486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019802722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.019803792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019819792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5999999999998654e-05, 'source_diff': 1.5999999999998654e-05}, {'time': 0.019820847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019832819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1972000000002453e-05, 'source_diff': 1.1972000000002453e-05}, {'time': 0.019833875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019854556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.068099999999809e-05, 'source_diff': 2.068099999999809e-05}, {'time': 0.019855611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019876903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1292000000002614e-05, 'source_diff': 2.1292000000002614e-05}, {'time': 0.019877958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019892722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.019893806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019917903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.019918958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019946472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7513999999999317e-05, 'source_diff': 2.7513999999999317e-05}, {'time': 0.019947569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.01996075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.019961861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019985903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4041999999998426e-05, 'source_diff': 2.4041999999998426e-05}, {'time': 0.019987, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.020006097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.909699999999917e-05, 'source_diff': 1.909699999999917e-05}, {'time': 0.020007167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.020035972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8804999999999803e-05, 'source_diff': 2.8804999999999803e-05}, {'time': 0.020036986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.020067681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.069500000000072e-05, 'source_diff': 3.069500000000072e-05}, {'time': 0.020068722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.020099653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.093099999999793e-05, 'source_diff': 3.093099999999793e-05}, {'time': 0.020100722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.020131403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.068099999999768e-05, 'source_diff': 3.068099999999768e-05}, {'time': 0.020132444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.020159958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7513999999999317e-05, 'source_diff': 2.7513999999999317e-05}, {'time': 0.020161014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.020181069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.005499999999799e-05, 'source_diff': 2.005499999999799e-05}, {'time': 0.020182181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.020202194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.001299999999928e-05, 'source_diff': 2.001299999999928e-05}, {'time': 0.020203264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.020231417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.815300000000298e-05, 'source_diff': 2.815300000000298e-05}, {'time': 0.020232486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020259097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.020260139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.020285181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.020286236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020314389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8152999999999512e-05, 'source_diff': 2.8152999999999512e-05}, {'time': 0.020315458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.020337069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161099999999777e-05, 'source_diff': 2.161099999999777e-05}, {'time': 0.020338125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020356306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.818100000000253e-05, 'source_diff': 1.818100000000253e-05}, {'time': 0.020357403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.020374625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7222000000000764e-05, 'source_diff': 1.7222000000000764e-05}, {'time': 0.020375681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020400403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4722000000001326e-05, 'source_diff': 2.4722000000001326e-05}, {'time': 0.020401472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020422514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1041999999998895e-05, 'source_diff': 2.1041999999998895e-05}, {'time': 0.020423542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.020445139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.159700000000167e-05, 'source_diff': 2.159700000000167e-05}, {'time': 0.020446194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020457472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.020458542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.020470431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.020471486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020484083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2596999999999609e-05, 'source_diff': 1.2596999999999609e-05}, {'time': 0.020485139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020499889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.020500958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020530347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.020531458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.020549611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.815299999999992e-05, 'source_diff': 1.815299999999992e-05}, {'time': 0.020550722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.020562306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1583999999998512e-05, 'source_diff': 1.1583999999998512e-05}, {'time': 0.020563375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020591528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.815300000000298e-05, 'source_diff': 2.815300000000298e-05}, {'time': 0.020592583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020615153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2569999999999535e-05, 'source_diff': 2.2569999999999535e-05}, {'time': 0.020616194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.020627847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.020628958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.020640181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1223000000001176e-05, 'source_diff': 1.1223000000001176e-05}, {'time': 0.020641264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.02067025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8986000000001677e-05, 'source_diff': 2.8986000000001677e-05}, {'time': 0.020671333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.020699167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7834000000000886e-05, 'source_diff': 2.7834000000000886e-05}, {'time': 0.020700222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020721208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.020722264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020741069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.880500000000021e-05, 'source_diff': 1.880500000000021e-05}, {'time': 0.020742153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:03.476" endtime="20201112 12:26:03.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.471" endtime="20201112 12:26:03.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:03.506" level="INFO">${debug-compressed} = {'diff': [0, 1.2219999999986408e-06, 3.0291000000001733e-05, 9.999999999975306e-07, 2.5042000000002895e-05, 1.0699999999988496e-06, 3.097200000000064e-05, 1.054999999999806e-06, 2.193099999999934e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:03.482" endtime="20201112 12:26:03.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.510" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:03.509" endtime="20201112 12:26:03.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.514" level="INFO">VALUE: {'diff': [0, 1.2219999999986408e-06, 3.0291000000001733e-05, 9.999999999975306e-07, 2.5042000000002895e-05, 1.0699999999988496e-06, 3.097200000000064e-05, 1.054999999999806e-06, 2.193099999999934e-05, 1.0419999999997098e-06, 2.0679999999998616e-05, 1.0420000000031793e-06, 3.065299999999854e-05, 1.054999999999806e-06, 2.2235999999998396e-05, 1.070000000002319e-06, 1.5999999999998654e-05, 1.054999999999806e-06, 1.1972000000002453e-05, 1.0559999999992797e-06, 2.068099999999809e-05, 1.054999999999806e-06, 2.1292000000002614e-05, 1.054999999999806e-06, 1.4764000000000443e-05, 1.0839999999984196e-06, 2.40970000000007e-05, 1.054999999999806e-06, 2.7513999999999317e-05, 1.0969999999985158e-06, 1.3181000000000997e-05, 1.1110000000015552e-06, 2.4041999999998426e-05, 1.0970000000019853e-06, 1.909699999999917e-05, 1.0699999999988496e-06, 2.8804999999999803e-05, 1.01400000000057e-06, 3.069500000000072e-05, 1.0410000000002362e-06, 3.093099999999793e-05, 1.0690000000028455e-06, 3.068099999999768e-05, 1.0410000000002362e-06, 2.7513999999999317e-05, 1.0560000000027492e-06, 2.005499999999799e-05, 1.1120000000010288e-06, 2.001299999999928e-05, 1.0699999999988496e-06, 2.815300000000298e-05, 1.068999999999376e-06, 2.6610999999999302e-05, 1.0419999999997098e-06, 2.5041999999999426e-05, 1.054999999999806e-06, 2.8152999999999512e-05, 1.0690000000028455e-06, 2.161099999999777e-05, 1.0559999999992797e-06, 1.818100000000253e-05, 1.0969999999985158e-06, 1.7222000000000764e-05, 1.0559999999992797e-06, 2.4722000000001326e-05, 1.068999999999376e-06, 2.1041999999998895e-05, 1.02800000000014e-06, 2.159700000000167e-05, 1.054999999999806e-06, 1.1277999999999982e-05, 1.0699999999988496e-06, 1.1889000000001038e-05, 1.054999999999806e-06, 1.2596999999999609e-05, 1.0559999999992797e-06, 1.4750000000000874e-05, 1.068999999999376e-06, 2.9389000000001192e-05, 1.1109999999980857e-06, 1.815299999999992e-05, 1.1110000000015552e-06, 1.1583999999998512e-05, 1.068999999999376e-06, 2.815300000000298e-05, 1.054999999999806e-06, 2.2569999999999535e-05, 1.0410000000002362e-06, 1.1653000000000358e-05, 1.1109999999980857e-06, 1.1223000000001176e-05, 1.082999999998946e-06, 2.8986000000001677e-05, 1.082999999998946e-06, 2.7834000000000886e-05, 1.054999999999806e-06, 2.0986000000000615e-05, 1.0559999999992797e-06, 1.880500000000021e-05, 1.0839999999984196e-06], 'source_diff': [0, 1.2219999999986408e-06, 3.0291000000001733e-05, 9.999999999975306e-07, 2.5042000000002895e-05, 1.0699999999988496e-06, 3.097200000000064e-05, 1.054999999999806e-06, 2.193099999999934e-05, 1.0419999999997098e-06, 2.0679999999998616e-05, 1.0420000000031793e-06, 3.065299999999854e-05, 1.054999999999806e-06, 2.2235999999998396e-05, 1.070000000002319e-06, 1.5999999999998654e-05, 1.054999999999806e-06, 1.1972000000002453e-05, 1.0559999999992797e-06, 2.068099999999809e-05, 1.054999999999806e-06, 2.1292000000002614e-05, 1.054999999999806e-06, 1.4764000000000443e-05, 1.0839999999984196e-06, 2.40970000000007e-05, 1.054999999999806e-06, 2.7513999999999317e-05, 1.0969999999985158e-06, 1.3181000000000997e-05, 1.1110000000015552e-06, 2.4041999999998426e-05, 1.0970000000019853e-06, 1.909699999999917e-05, 1.0699999999988496e-06, 2.8804999999999803e-05, 1.01400000000057e-06, 3.069500000000072e-05, 1.0410000000002362e-06, 3.093099999999793e-05, 1.0690000000028455e-06, 3.068099999999768e-05, 1.0410000000002362e-06, 2.7513999999999317e-05, 1.0560000000027492e-06, 2.005499999999799e-05, 1.1120000000010288e-06, 2.001299999999928e-05, 1.0699999999988496e-06, 2.815300000000298e-05, 1.068999999999376e-06, 2.6610999999999302e-05, 1.0419999999997098e-06, 2.5041999999999426e-05, 1.054999999999806e-06, 2.8152999999999512e-05, 1.0690000000028455e-06, 2.161099999999777e-05, 1.0559999999992797e-06, 1.818100000000253e-05, 1.0969999999985158e-06, 1.7222000000000764e-05, 1.0559999999992797e-06, 2.4722000000001326e-05, 1.068999999999376e-06, 2.1041999999998895e-05, 1.02800000000014e-06, 2.159700000000167e-05, 1.054999999999806e-06, 1.1277999999999982e-05, 1.0699999999988496e-06, 1.1889000000001038e-05, 1.054999999999806e-06, 1.2596999999999609e-05, 1.0559999999992797e-06, 1.4750000000000874e-05, 1.068999999999376e-06, 2.9389000000001192e-05, 1.1109999999980857e-06, 1.815299999999992e-05, 1.1110000000015552e-06, 1.1583999999998512e-05, 1.068999999999376e-06, 2.815300000000298e-05, 1.054999999999806e-06, 2.2569999999999535e-05, 1.0410000000002362e-06, 1.1653000000000358e-05, 1.1109999999980857e-06, 1.1223000000001176e-05, 1.082999999998946e-06, 2.8986000000001677e-05, 1.082999999998946e-06, 2.7834000000000886e-05, 1.054999999999806e-06, 2.0986000000000615e-05, 1.0559999999992797e-06, 1.880500000000021e-05, 1.0839999999984196e-06], 'time': [0.019613431, 0.019614653, 0.019644944, 0.019645944, 0.019670986, 0.019672056, 0.019703028, 0.019704083, 0.019726014, 0.019727056, 0.019747736, 0.019748778, 0.019779431, 0.019780486, 0.019802722, 0.019803792, 0.019819792, 0.019820847, 0.019832819, 0.019833875, 0.019854556, 0.019855611, 0.019876903, 0.019877958, 0.019892722, 0.019893806, 0.019917903, 0.019918958, 0.019946472, 0.019947569, 0.01996075, 0.019961861, 0.019985903, 0.019987, 0.020006097, 0.020007167, 0.020035972, 0.020036986, 0.020067681, 0.020068722, 0.020099653, 0.020100722, 0.020131403, 0.020132444, 0.020159958, 0.020161014, 0.020181069, 0.020182181, 0.020202194, 0.020203264, 0.020231417, 0.020232486, 0.020259097, 0.020260139, 0.020285181, 0.020286236, 0.020314389, 0.020315458, 0.020337069, 0.020338125, 0.020356306, 0.020357403, 0.020374625, 0.020375681, 0.020400403, 0.020401472, 0.020422514, 0.020423542, 0.020445139, 0.020446194, 0.020457472, 0.020458542, 0.020470431, 0.020471486, 0.020484083, 0.020485139, 0.020499889, 0.020500958, 0.020530347, 0.020531458, 0.020549611, 0.020550722, 0.020562306, 0.020563375, 0.020591528, 0.020592583, 0.020615153, 0.020616194, 0.020627847, 0.020628958, 0.020640181, 0.020641264, 0.02067025, 0.020671333, 0.020699167, 0.020700222, 0.020721208, 0.020722264, 0.020741069, 0.020742153], 'eventsource}</msg>
<status status="PASS" starttime="20201112 12:26:03.511" endtime="20201112 12:26:03.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.507" endtime="20201112 12:26:03.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.519" level="INFO">${RESULT} = [{'time': 0.019614653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2219999999986408e-06, 'source_diff': 1.2219999999986408e-06}, {'time': 0.019645944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:03.516" endtime="20201112 12:26:03.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.533" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2219999999986408e-06, 9.999999999975306e-07, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1....</msg>
<status status="PASS" starttime="20201112 12:26:03.520" endtime="20201112 12:26:03.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.537" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:03.536" endtime="20201112 12:26:03.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.539" level="INFO">VALUE: [1.2219999999986408e-06, 9.999999999975306e-07, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.01400000000057e-06, 1.0410000000002362e-06, 1.0690000000028455e-06, 1.0410000000002362e-06, 1.0560000000027492e-06, 1.1120000000010288e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0839999999984196e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.538" endtime="20201112 12:26:03.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.534" endtime="20201112 12:26:03.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.542" endtime="20201112 12:26:03.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.546" endtime="20201112 12:26:03.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.544" endtime="20201112 12:26:03.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.541" endtime="20201112 12:26:03.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.139" endtime="20201112 12:26:03.567"></status>
</kw>
<msg timestamp="20201112 12:26:03.567" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.574" endtime="20201112 12:26:03.583"></status>
</kw>
<msg timestamp="20201112 12:26:03.584" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.573" endtime="20201112 12:26:03.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.586" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.585" endtime="20201112 12:26:03.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.587" endtime="20201112 12:26:03.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.570" endtime="20201112 12:26:03.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.569" endtime="20201112 12:26:03.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.597" endtime="20201112 12:26:03.883"></status>
</kw>
<msg timestamp="20201112 12:26:03.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018445542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.595" endtime="20201112 12:26:03.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018445542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.887" endtime="20201112 12:26:03.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.896" endtime="20201112 12:26:03.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.593" endtime="20201112 12:26:03.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.591" endtime="20201112 12:26:03.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.902" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:03.901" endtime="20201112 12:26:03.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.907" level="INFO">VALUE: [{'time': 0.018444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018445542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2639999999973506e-06, 'source_diff': 1.2639999999973506e-06}, {'time': 0.018469194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3652000000002477e-05, 'source_diff': 2.3652000000002477e-05}, {'time': 0.018470264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018499042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8778000000000137e-05, 'source_diff': 2.8778000000000137e-05}, {'time': 0.018500111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018525222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.511100000000127e-05, 'source_diff': 2.511100000000127e-05}, {'time': 0.018526222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.018547194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0972000000001045e-05, 'source_diff': 2.0972000000001045e-05}, {'time': 0.01854825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018564611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.636100000000293e-05, 'source_diff': 1.636100000000293e-05}, {'time': 0.018565667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018595056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9388999999997723e-05, 'source_diff': 2.9388999999997723e-05}, {'time': 0.018596153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018626444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0290999999998264e-05, 'source_diff': 3.0290999999998264e-05}, {'time': 0.018627542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018642875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.533299999999932e-05, 'source_diff': 1.533299999999932e-05}, {'time': 0.018643958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018655903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1945000000002787e-05, 'source_diff': 1.1945000000002787e-05}, {'time': 0.018656958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.01867175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.018672806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018702181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9374999999998153e-05, 'source_diff': 2.9374999999998153e-05}, {'time': 0.018703278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018720264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6986000000000084e-05, 'source_diff': 1.6986000000000084e-05}, {'time': 0.01872125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.018748472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.018749542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018769347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.980499999999774e-05, 'source_diff': 1.980499999999774e-05}, {'time': 0.018770333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.018786417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6083999999999543e-05, 'source_diff': 1.6083999999999543e-05}, {'time': 0.018787403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.018802167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.018803236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018814889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018815931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018835056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.018836139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018856833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0694000000001656e-05, 'source_diff': 2.0694000000001656e-05}, {'time': 0.018857889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018875431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7542000000002334e-05, 'source_diff': 1.7542000000002334e-05}, {'time': 0.018876486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018907139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.018908208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018919472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.018920528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018944264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.018945333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018956986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1652999999996888e-05, 'source_diff': 1.1652999999996888e-05}, {'time': 0.018958042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018986819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8776999999997194e-05, 'source_diff': 2.8776999999997194e-05}, {'time': 0.018987875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019000792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2916999999997708e-05, 'source_diff': 1.2916999999997708e-05}, {'time': 0.019001847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.0190275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.019028556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01904425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.019045319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019057583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.019058667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019088042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9374999999998153e-05, 'source_diff': 2.9374999999998153e-05}, {'time': 0.019089125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019102, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2875000000002468e-05, 'source_diff': 1.2875000000002468e-05}, {'time': 0.019103069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019123806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.073699999999984e-05, 'source_diff': 2.073699999999984e-05}, {'time': 0.019124806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019148917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019149986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019162903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2916999999997708e-05, 'source_diff': 1.2916999999997708e-05}, {'time': 0.019163944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019176847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2903000000001608e-05, 'source_diff': 1.2903000000001608e-05}, {'time': 0.019177889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019205417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7527999999998887e-05, 'source_diff': 2.7527999999998887e-05}, {'time': 0.019206472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019219069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2596999999999609e-05, 'source_diff': 1.2596999999999609e-05}, {'time': 0.019220111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019243319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3207999999996787e-05, 'source_diff': 2.3207999999996787e-05}, {'time': 0.019244417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.019273444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9027000000000913e-05, 'source_diff': 2.9027000000000913e-05}, {'time': 0.019274514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019291139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.019292194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019314125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.193100000000281e-05, 'source_diff': 2.193100000000281e-05}, {'time': 0.019315222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019335556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0334000000000324e-05, 'source_diff': 2.0334000000000324e-05}, {'time': 0.019336611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.0193545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.78890000000001e-05, 'source_diff': 1.78890000000001e-05}, {'time': 0.019355556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01937375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.019374806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019395167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.019396236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019415042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8805999999999684e-05, 'source_diff': 1.8805999999999684e-05}, {'time': 0.019416125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019442708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6583000000000162e-05, 'source_diff': 2.6583000000000162e-05}, {'time': 0.019443764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019462597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.883300000000282e-05, 'source_diff': 1.883300000000282e-05}, {'time': 0.019463667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019480264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.659700000000014e-05, 'source_diff': 1.659700000000014e-05}, {'time': 0.019481361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:03.903" endtime="20201112 12:26:03.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.899" endtime="20201112 12:26:03.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:03.933" level="INFO">${debug-compressed} = {'diff': [0, 1.2639999999973506e-06, 2.3652000000002477e-05, 1.0699999999988496e-06, 2.8778000000000137e-05, 1.068999999999376e-06, 2.511100000000127e-05, 9.999999999975306e-07, 2.0972000000001045e-05...</msg>
<status status="PASS" starttime="20201112 12:26:03.910" endtime="20201112 12:26:03.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.937" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:03.936" endtime="20201112 12:26:03.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.941" level="INFO">VALUE: {'diff': [0, 1.2639999999973506e-06, 2.3652000000002477e-05, 1.0699999999988496e-06, 2.8778000000000137e-05, 1.068999999999376e-06, 2.511100000000127e-05, 9.999999999975306e-07, 2.0972000000001045e-05, 1.0559999999992797e-06, 1.636100000000293e-05, 1.0559999999992797e-06, 2.9388999999997723e-05, 1.0970000000019853e-06, 3.0290999999998264e-05, 1.098000000001459e-06, 1.533299999999932e-05, 1.082999999998946e-06, 1.1945000000002787e-05, 1.054999999999806e-06, 1.4791999999999583e-05, 1.0559999999992797e-06, 2.9374999999998153e-05, 1.0970000000019853e-06, 1.6986000000000084e-05, 9.859999999979607e-07, 2.7222000000000357e-05, 1.070000000002319e-06, 1.980499999999774e-05, 9.860000000014302e-07, 1.6083999999999543e-05, 9.860000000014302e-07, 1.4764000000000443e-05, 1.068999999999376e-06, 1.1653000000000358e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.082999999998946e-06, 2.0694000000001656e-05, 1.0559999999992797e-06, 1.7542000000002334e-05, 1.054999999999806e-06, 3.065299999999854e-05, 1.068999999999376e-06, 1.1264000000000413e-05, 1.0559999999992797e-06, 2.3735999999999896e-05, 1.0690000000028455e-06, 1.1652999999996888e-05, 1.0560000000027492e-06, 2.8776999999997194e-05, 1.0560000000027492e-06, 1.2916999999997708e-05, 1.054999999999806e-06, 2.565300000000048e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0690000000028455e-06, 1.2263999999997943e-05, 1.084000000001889e-06, 2.9374999999998153e-05, 1.082999999998946e-06, 1.2875000000002468e-05, 1.068999999999376e-06, 2.073699999999984e-05, 1.000000000001e-06, 2.411100000000027e-05, 1.068999999999376e-06, 1.2916999999997708e-05, 1.0410000000002362e-06, 1.2903000000001608e-05, 1.0419999999997098e-06, 2.7527999999998887e-05, 1.054999999999806e-06, 1.2596999999999609e-05, 1.0420000000031793e-06, 2.3207999999996787e-05, 1.098000000001459e-06, 2.9027000000000913e-05, 1.0699999999988496e-06, 1.662499999999928e-05, 1.054999999999806e-06, 2.193100000000281e-05, 1.0969999999985158e-06, 2.0334000000000324e-05, 1.054999999999806e-06, 1.78890000000001e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0560000000027492e-06, 2.036099999999999e-05, 1.068999999999376e-06, 1.8805999999999684e-05, 1.082999999998946e-06, 2.6583000000000162e-05, 1.0559999999992797e-06, 1.883300000000282e-05, 1.0699999999988496e-06, 1.659700000000014e-05, 1.0969999999985158e-06], 'source_diff': [0, 1.2639999999973506e-06, 2.3652000000002477e-05, 1.0699999999988496e-06, 2.8778000000000137e-05, 1.068999999999376e-06, 2.511100000000127e-05, 9.999999999975306e-07, 2.0972000000001045e-05, 1.0559999999992797e-06, 1.636100000000293e-05, 1.0559999999992797e-06, 2.9388999999997723e-05, 1.0970000000019853e-06, 3.0290999999998264e-05, 1.098000000001459e-06, 1.533299999999932e-05, 1.082999999998946e-06, 1.1945000000002787e-05, 1.054999999999806e-06, 1.4791999999999583e-05, 1.0559999999992797e-06, 2.9374999999998153e-05, 1.0970000000019853e-06, 1.6986000000000084e-05, 9.859999999979607e-07, 2.7222000000000357e-05, 1.070000000002319e-06, 1.980499999999774e-05, 9.860000000014302e-07, 1.6083999999999543e-05, 9.860000000014302e-07, 1.4764000000000443e-05, 1.068999999999376e-06, 1.1653000000000358e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.082999999998946e-06, 2.0694000000001656e-05, 1.0559999999992797e-06, 1.7542000000002334e-05, 1.054999999999806e-06, 3.065299999999854e-05, 1.068999999999376e-06, 1.1264000000000413e-05, 1.0559999999992797e-06, 2.3735999999999896e-05, 1.0690000000028455e-06, 1.1652999999996888e-05, 1.0560000000027492e-06, 2.8776999999997194e-05, 1.0560000000027492e-06, 1.2916999999997708e-05, 1.054999999999806e-06, 2.565300000000048e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0690000000028455e-06, 1.2263999999997943e-05, 1.084000000001889e-06, 2.9374999999998153e-05, 1.082999999998946e-06, 1.2875000000002468e-05, 1.068999999999376e-06, 2.073699999999984e-05, 1.000000000001e-06, 2.411100000000027e-05, 1.068999999999376e-06, 1.2916999999997708e-05, 1.0410000000002362e-06, 1.2903000000001608e-05, 1.0419999999997098e-06, 2.7527999999998887e-05, 1.054999999999806e-06, 1.2596999999999609e-05, 1.0420000000031793e-06, 2.3207999999996787e-05, 1.098000000001459e-06, 2.9027000000000913e-05, 1.0699999999988496e-06, 1.662499999999928e-05, 1.054999999999806e-06, 2.193100000000281e-05, 1.0969999999985158e-06, 2.0334000000000324e-05, 1.054999999999806e-06, 1.78890000000001e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0560000000027492e-06, 2.036099999999999e-05, 1.068999999999376e-06, 1.8805999999999684e-05, 1.082999999998946e-06, 2.6583000000000162e-05, 1.0559999999992797e-06, 1.883300000000282e-05, 1.0699999999988496e-06, 1.659700000000014e-05, 1.0969999999985158e-06], 'time': [0.018444278, 0.018445542, 0.018469194, 0.018470264, 0.018499042, 0.018500111, 0.018525222, 0.018526222, 0.018547194, 0.01854825, 0.018564611, 0.018565667, 0.018595056, 0.018596153, 0.018626444, 0.018627542, 0.018642875, 0.018643958, 0.018655903, 0.018656958, 0.01867175, 0.018672806, 0.018702181, 0.018703278, 0.018720264, 0.01872125, 0.018748472, 0.018749542, 0.018769347, 0.018770333, 0.018786417, 0.018787403, 0.018802167, 0.018803236, 0.018814889, 0.018815931, 0.018835056, 0.018836139, 0.018856833, 0.018857889, 0.018875431, 0.018876486, 0.018907139, 0.018908208, 0.018919472, 0.018920528, 0.018944264, 0.018945333, 0.018956986, 0.018958042, 0.018986819, 0.018987875, 0.019000792, 0.019001847, 0.0190275, 0.019028556, 0.01904425, 0.019045319, 0.019057583, 0.019058667, 0.019088042, 0.019089125, 0.019102, 0.019103069, 0.019123806, 0.019124806, 0.019148917, 0.019149986, 0.019162903, 0.019163944, 0.019176847, 0.019177889, 0.019205417, 0.019206472, 0.019219069, 0.019220111, 0.019243319, 0.019244417, 0.019273444, 0.019274514, 0.019291139, 0.019292194, 0.019314125, 0.019315222, 0.019335556, 0.019336611, 0.0193545, 0.019355556, 0.01937375, 0.019374806, 0.019395167, 0.019396236, 0.019415042, 0.019416125, 0.019442708, 0.019443764, 0.019462597, 0.019463667, 0.019480264, 0.019481361], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 12:26:03.938" endtime="20201112 12:26:03.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.934" endtime="20201112 12:26:03.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.947" level="INFO">${RESULT} = [{'time': 0.018445542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2639999999973506e-06, 'source_diff': 1.2639999999973506e-06}, {'time': 0.018470264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:03.943" endtime="20201112 12:26:03.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.960" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2639999999973506e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.098000000001459e-06, 1...</msg>
<status status="PASS" starttime="20201112 12:26:03.948" endtime="20201112 12:26:03.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.965" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:03.964" endtime="20201112 12:26:03.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.967" level="INFO">VALUE: [1.2639999999973506e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 9.859999999979607e-07, 1.070000000002319e-06, 9.860000000014302e-07, 9.860000000014302e-07, 1.068999999999376e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0420000000031793e-06, 1.098000000001459e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.966" endtime="20201112 12:26:03.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.961" endtime="20201112 12:26:03.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.970" endtime="20201112 12:26:03.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.974" endtime="20201112 12:26:03.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.972" endtime="20201112 12:26:03.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.969" endtime="20201112 12:26:03.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.567" endtime="20201112 12:26:03.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.223" endtime="20201112 12:26:03.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.999" endtime="20201112 12:26:04.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.998" endtime="20201112 12:26:04.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.996" endtime="20201112 12:26:04.020"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:25:53.153" endtime="20201112 12:26:04.021" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.029" endtime="20201112 12:26:04.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.027" endtime="20201112 12:26:04.049"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.062" endtime="20201112 12:26:04.074"></status>
</kw>
<msg timestamp="20201112 12:26:04.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.060" endtime="20201112 12:26:04.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.075" endtime="20201112 12:26:04.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.080" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:04.078" endtime="20201112 12:26:04.081"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:04.058" endtime="20201112 12:26:04.081"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:04.055" endtime="20201112 12:26:04.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.054" endtime="20201112 12:26:04.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:04.087" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:04.086" endtime="20201112 12:26:04.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.083" endtime="20201112 12:26:04.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.053" endtime="20201112 12:26:04.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.053" endtime="20201112 12:26:04.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.089" endtime="20201112 12:26:04.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.051" endtime="20201112 12:26:04.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.049" endtime="20201112 12:26:04.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.026" endtime="20201112 12:26:04.091"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:04.094" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.101" endtime="20201112 12:26:04.112"></status>
</kw>
<msg timestamp="20201112 12:26:04.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.100" endtime="20201112 12:26:04.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.114" endtime="20201112 12:26:04.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.116" endtime="20201112 12:26:04.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.097" endtime="20201112 12:26:04.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.096" endtime="20201112 12:26:04.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.125" endtime="20201112 12:26:04.410"></status>
</kw>
<msg timestamp="20201112 12:26:04.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063303778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063316194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.124" endtime="20201112 12:26:04.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063303778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063316194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.415" endtime="20201112 12:26:04.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.424" endtime="20201112 12:26:04.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.121" endtime="20201112 12:26:04.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.119" endtime="20201112 12:26:04.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.431" level="INFO">${RESULT} = [{'time': 0.063316194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2416000000001204e-05, 'source_diff': 1.2416000000001204e-05}, {'time': 0.063341292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:04.428" endtime="20201112 12:26:04.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.445" level="INFO">${OVERHEAD} = {'diff': [1.2416000000001204e-05, 1.1708999999998637e-05, 1.1721999999991795e-05, 1.1680000000000024e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1694000000006533e-05...</msg>
<status status="PASS" starttime="20201112 12:26:04.432" endtime="20201112 12:26:04.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.450" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:04.449" endtime="20201112 12:26:04.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.452" level="INFO">VALUE: [1.2416000000001204e-05, 1.1708999999998637e-05, 1.1721999999991795e-05, 1.1680000000000024e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1694000000006533e-05, 1.1694999999992128e-05, 1.1653000000000358e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1722999999991268e-05, 1.1707999999999164e-05, 1.1778000000003952e-05, 1.1695000000006006e-05, 1.1735999999998303e-05, 1.1722999999991268e-05, 1.1735999999998303e-05, 1.1722000000005672e-05, 1.1707999999999164e-05, 1.1694999999992128e-05, 1.1750000000004812e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1694000000006533e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1694000000006533e-05, 1.1778000000003952e-05, 1.1694000000006533e-05, 1.1721999999991795e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1694000000006533e-05, 1.1722999999991268e-05, 1.1694000000006533e-05, 1.1735999999998303e-05, 1.1721999999991795e-05, 1.1708999999998637e-05, 1.1722999999991268e-05, 1.1723000000005146e-05, 1.1736999999997777e-05, 1.1694000000006533e-05, 1.1707999999999164e-05, 1.1722000000005672e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1735999999998303e-05]</msg>
<status status="PASS" starttime="20201112 12:26:04.451" endtime="20201112 12:26:04.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.446" endtime="20201112 12:26:04.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.455" endtime="20201112 12:26:04.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.460" endtime="20201112 12:26:04.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.458" endtime="20201112 12:26:04.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.454" endtime="20201112 12:26:04.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.094" endtime="20201112 12:26:04.480"></status>
</kw>
<msg timestamp="20201112 12:26:04.481" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.488" endtime="20201112 12:26:04.499"></status>
</kw>
<msg timestamp="20201112 12:26:04.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.487" endtime="20201112 12:26:04.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.502" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.501" endtime="20201112 12:26:04.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.503" endtime="20201112 12:26:04.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.484" endtime="20201112 12:26:04.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.482" endtime="20201112 12:26:04.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.512" endtime="20201112 12:26:04.798"></status>
</kw>
<msg timestamp="20201112 12:26:04.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.510" endtime="20201112 12:26:04.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.803" endtime="20201112 12:26:04.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.812" endtime="20201112 12:26:04.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.508" endtime="20201112 12:26:04.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.506" endtime="20201112 12:26:04.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.819" level="INFO">${RESULT} = [{'time': 0.019403819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2444000000000344e-05, 'source_diff': 1.2444000000000344e-05}, {'time': 0.019442597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:04.815" endtime="20201112 12:26:04.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.833" level="INFO">${OVERHEAD} = {'diff': [1.2444000000000344e-05, 1.1721999999998733e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1721999999998733e-05, 1.1737000000001246e-05...</msg>
<status status="PASS" starttime="20201112 12:26:04.820" endtime="20201112 12:26:04.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.837" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:04.836" endtime="20201112 12:26:04.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.840" level="INFO">VALUE: [1.2444000000000344e-05, 1.1721999999998733e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1721999999998733e-05, 1.1737000000001246e-05, 1.1736000000001773e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1778000000000483e-05, 1.1709000000002107e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1735999999998303e-05, 1.1805000000000149e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1666999999999927e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1723000000001677e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1624999999997748e-05, 1.1681000000002967e-05, 1.1723000000001677e-05, 1.1694999999999067e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1723000000001677e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1653000000000358e-05]</msg>
<status status="PASS" starttime="20201112 12:26:04.838" endtime="20201112 12:26:04.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.834" endtime="20201112 12:26:04.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.843" endtime="20201112 12:26:04.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.847" endtime="20201112 12:26:04.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.845" endtime="20201112 12:26:04.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.841" endtime="20201112 12:26:04.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.481" endtime="20201112 12:26:04.868"></status>
</kw>
<msg timestamp="20201112 12:26:04.868" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.876" endtime="20201112 12:26:04.888"></status>
</kw>
<msg timestamp="20201112 12:26:04.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.874" endtime="20201112 12:26:04.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.889" endtime="20201112 12:26:04.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.892" endtime="20201112 12:26:04.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.872" endtime="20201112 12:26:04.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.870" endtime="20201112 12:26:04.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.901" endtime="20201112 12:26:05.187"></status>
</kw>
<msg timestamp="20201112 12:26:05.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020305931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.899" endtime="20201112 12:26:05.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020305931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.191" endtime="20201112 12:26:05.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.203" endtime="20201112 12:26:05.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.897" endtime="20201112 12:26:05.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.895" endtime="20201112 12:26:05.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.218" level="INFO">${RESULT} = [{'time': 0.020318319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2388000000002064e-05, 'source_diff': 1.2388000000002064e-05}, {'time': 0.020361208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:05.211" endtime="20201112 12:26:05.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.248" level="INFO">${OVERHEAD} = {'diff': [1.2388000000002064e-05, 1.1735999999998303e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1694999999999067e-05...</msg>
<status status="PASS" starttime="20201112 12:26:05.220" endtime="20201112 12:26:05.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.257" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:05.254" endtime="20201112 12:26:05.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.262" level="INFO">VALUE: [1.2388000000002064e-05, 1.1735999999998303e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1694999999999067e-05, 1.1750000000001343e-05, 1.1708000000002633e-05, 1.1666999999999927e-05, 1.1666999999999927e-05, 1.1736999999997777e-05, 1.1681000000002967e-05, 1.1792000000000052e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1680999999999497e-05, 1.1750000000001343e-05, 1.1695000000002537e-05, 1.1666999999999927e-05, 1.1693999999999594e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1736000000001773e-05, 1.1735999999998303e-05, 1.1708000000002633e-05, 1.1666999999999927e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1805999999999622e-05, 1.1750000000001343e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1694999999999067e-05, 1.1708000000002633e-05, 1.1764000000000913e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1791000000000579e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1694999999999067e-05]</msg>
<status status="PASS" starttime="20201112 12:26:05.259" endtime="20201112 12:26:05.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.250" endtime="20201112 12:26:05.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.268" endtime="20201112 12:26:05.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.276" endtime="20201112 12:26:05.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.272" endtime="20201112 12:26:05.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.265" endtime="20201112 12:26:05.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.869" endtime="20201112 12:26:05.299"></status>
</kw>
<msg timestamp="20201112 12:26:05.300" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.307" endtime="20201112 12:26:05.318"></status>
</kw>
<msg timestamp="20201112 12:26:05.318" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.305" endtime="20201112 12:26:05.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.321" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.319" endtime="20201112 12:26:05.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.322" endtime="20201112 12:26:05.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.303" endtime="20201112 12:26:05.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.301" endtime="20201112 12:26:05.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.331" endtime="20201112 12:26:05.616"></status>
</kw>
<msg timestamp="20201112 12:26:05.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.329" endtime="20201112 12:26:05.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.621" endtime="20201112 12:26:05.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.629" endtime="20201112 12:26:05.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.327" endtime="20201112 12:26:05.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.325" endtime="20201112 12:26:05.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.636" level="INFO">${RESULT} = [{'time': 0.020491236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2388999999998068e-05, 'source_diff': 1.2388999999998068e-05}, {'time': 0.020515403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:05.633" endtime="20201112 12:26:05.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.649" level="INFO">${OVERHEAD} = {'diff': [1.2388999999998068e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1750000000001343e-05, 1.1722000000002203e-05, 1.1709000000002107e-05, 1.1722999999998207e-05...</msg>
<status status="PASS" starttime="20201112 12:26:05.637" endtime="20201112 12:26:05.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.653" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:05.652" endtime="20201112 12:26:05.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.656" level="INFO">VALUE: [1.2388999999998068e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1750000000001343e-05, 1.1722000000002203e-05, 1.1709000000002107e-05, 1.1722999999998207e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1680000000000024e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1764000000000913e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1723000000001677e-05, 1.1666999999999927e-05, 1.1722999999998207e-05, 1.1653000000000358e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1638999999997318e-05, 1.1736999999997777e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1708999999998637e-05, 1.1764000000000913e-05, 1.1651999999997414e-05, 1.1709000000002107e-05, 1.1735999999998303e-05, 1.1708000000002633e-05, 1.1709000000002107e-05]</msg>
<status status="PASS" starttime="20201112 12:26:05.654" endtime="20201112 12:26:05.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.650" endtime="20201112 12:26:05.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.659" endtime="20201112 12:26:05.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.663" endtime="20201112 12:26:05.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.661" endtime="20201112 12:26:05.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.657" endtime="20201112 12:26:05.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.300" endtime="20201112 12:26:05.684"></status>
</kw>
<msg timestamp="20201112 12:26:05.684" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.692" endtime="20201112 12:26:05.702"></status>
</kw>
<msg timestamp="20201112 12:26:05.703" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.690" endtime="20201112 12:26:05.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.705" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.704" endtime="20201112 12:26:05.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.706" endtime="20201112 12:26:05.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.687" endtime="20201112 12:26:05.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.686" endtime="20201112 12:26:05.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.715" endtime="20201112 12:26:06.002"></status>
</kw>
<msg timestamp="20201112 12:26:06.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019152903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019165306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.714" endtime="20201112 12:26:06.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019152903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019165306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.007" endtime="20201112 12:26:06.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.015" endtime="20201112 12:26:06.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.711" endtime="20201112 12:26:06.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.709" endtime="20201112 12:26:06.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.021" level="INFO">${RESULT} = [{'time': 0.019165306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2403000000001108e-05, 'source_diff': 1.2403000000001108e-05}, {'time': 0.019196069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:06.018" endtime="20201112 12:26:06.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.036" level="INFO">${OVERHEAD} = {'diff': [1.2403000000001108e-05, 1.176299999999797e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1722999999998207e-05, 1.1708999999998637e-05, 1.1721999999998733e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:06.022" endtime="20201112 12:26:06.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.040" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:06.039" endtime="20201112 12:26:06.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.042" level="INFO">VALUE: [1.2403000000001108e-05, 1.176299999999797e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1722999999998207e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1666000000000454e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1722000000002203e-05, 1.1722000000002203e-05, 1.1736000000001773e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1695000000002537e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1708000000002633e-05, 1.1778000000000483e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1651999999997414e-05, 1.1736000000001773e-05, 1.1722999999998207e-05, 1.1694999999999067e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1736000000001773e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1736000000001773e-05, 1.1736000000001773e-05, 1.1693999999999594e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.1736000000001773e-05, 1.1708000000002633e-05, 1.1750000000001343e-05, 1.1709000000002107e-05]</msg>
<status status="PASS" starttime="20201112 12:26:06.041" endtime="20201112 12:26:06.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.037" endtime="20201112 12:26:06.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.045" endtime="20201112 12:26:06.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.049" endtime="20201112 12:26:06.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.047" endtime="20201112 12:26:06.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.044" endtime="20201112 12:26:06.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.684" endtime="20201112 12:26:06.070"></status>
</kw>
<msg timestamp="20201112 12:26:06.070" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.078" endtime="20201112 12:26:06.089"></status>
</kw>
<msg timestamp="20201112 12:26:06.089" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.076" endtime="20201112 12:26:06.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.090" endtime="20201112 12:26:06.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.093" endtime="20201112 12:26:06.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.074" endtime="20201112 12:26:06.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.072" endtime="20201112 12:26:06.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.102" endtime="20201112 12:26:06.387"></status>
</kw>
<msg timestamp="20201112 12:26:06.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019246764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019259194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.100" endtime="20201112 12:26:06.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019246764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019259194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.391" endtime="20201112 12:26:06.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.399" endtime="20201112 12:26:06.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.098" endtime="20201112 12:26:06.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.096" endtime="20201112 12:26:06.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.406" level="INFO">${RESULT} = [{'time': 0.019259194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2430000000000774e-05, 'source_diff': 1.2430000000000774e-05}, {'time': 0.019298903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:06.403" endtime="20201112 12:26:06.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.419" level="INFO">${OVERHEAD} = {'diff': [1.2430000000000774e-05, 1.1708999999998637e-05, 1.1723000000001677e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1680999999999497e-05, 1.1721999999998733e-05, 1.1708000000002633e-05...</msg>
<status status="PASS" starttime="20201112 12:26:06.407" endtime="20201112 12:26:06.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.424" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:06.423" endtime="20201112 12:26:06.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.426" level="INFO">VALUE: [1.2430000000000774e-05, 1.1708999999998637e-05, 1.1723000000001677e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1680999999999497e-05, 1.1721999999998733e-05, 1.1708000000002633e-05, 1.1708999999998637e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1694999999999067e-05, 1.1653000000000358e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1722000000002203e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1722000000002203e-05, 1.1681000000002967e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1764000000000913e-05, 1.1721999999998733e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1694000000003063e-05, 1.1694999999999067e-05, 1.1792000000000052e-05, 1.1666999999999927e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1693999999999594e-05]</msg>
<status status="PASS" starttime="20201112 12:26:06.425" endtime="20201112 12:26:06.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.420" endtime="20201112 12:26:06.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.429" endtime="20201112 12:26:06.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.433" endtime="20201112 12:26:06.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.431" endtime="20201112 12:26:06.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.427" endtime="20201112 12:26:06.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.071" endtime="20201112 12:26:06.454"></status>
</kw>
<msg timestamp="20201112 12:26:06.454" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.462" endtime="20201112 12:26:06.473"></status>
</kw>
<msg timestamp="20201112 12:26:06.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.460" endtime="20201112 12:26:06.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.475" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.474" endtime="20201112 12:26:06.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.591" endtime="20201112 12:26:06.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.458" endtime="20201112 12:26:06.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.456" endtime="20201112 12:26:06.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.600" endtime="20201112 12:26:06.902"></status>
</kw>
<msg timestamp="20201112 12:26:06.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019119806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019132208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.598" endtime="20201112 12:26:06.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019119806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019132208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.906" endtime="20201112 12:26:06.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.914" endtime="20201112 12:26:06.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.595" endtime="20201112 12:26:06.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.594" endtime="20201112 12:26:06.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.921" level="INFO">${RESULT} = [{'time': 0.019132208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2402000000001634e-05, 'source_diff': 1.2402000000001634e-05}, {'time': 0.019156694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:06.917" endtime="20201112 12:26:06.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.934" level="INFO">${OVERHEAD} = {'diff': [1.2402000000001634e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.1764000000000913e-05...</msg>
<status status="PASS" starttime="20201112 12:26:06.922" endtime="20201112 12:26:06.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.938" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:06.937" endtime="20201112 12:26:06.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.941" level="INFO">VALUE: [1.2402000000001634e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.1764000000000913e-05, 1.1708000000002633e-05, 1.1735999999998303e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1764000000000913e-05, 1.1666999999999927e-05, 1.1681000000002967e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1651999999997414e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1695000000002537e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1708000000002633e-05, 1.1721999999998733e-05, 1.1653000000000358e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1707999999999164e-05, 1.1736000000001773e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1708999999998637e-05]</msg>
<status status="PASS" starttime="20201112 12:26:06.939" endtime="20201112 12:26:06.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.935" endtime="20201112 12:26:06.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.944" endtime="20201112 12:26:06.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.948" endtime="20201112 12:26:06.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.946" endtime="20201112 12:26:06.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.942" endtime="20201112 12:26:06.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.455" endtime="20201112 12:26:06.969"></status>
</kw>
<msg timestamp="20201112 12:26:06.969" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.977" endtime="20201112 12:26:06.989"></status>
</kw>
<msg timestamp="20201112 12:26:06.989" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.976" endtime="20201112 12:26:06.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.992" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.990" endtime="20201112 12:26:06.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.993" endtime="20201112 12:26:06.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.973" endtime="20201112 12:26:06.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.971" endtime="20201112 12:26:06.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.002" endtime="20201112 12:26:07.287"></status>
</kw>
<msg timestamp="20201112 12:26:07.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020752375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020764764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.000" endtime="20201112 12:26:07.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020752375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020764764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.291" endtime="20201112 12:26:07.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.299" endtime="20201112 12:26:07.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.998" endtime="20201112 12:26:07.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.996" endtime="20201112 12:26:07.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.306" level="INFO">${RESULT} = [{'time': 0.020764764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.02079025, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:07.302" endtime="20201112 12:26:07.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.319" level="INFO">${OVERHEAD} = {'diff': [1.2389000000001538e-05, 1.1764000000000913e-05, 1.1749999999997873e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1708999999998637e-05...</msg>
<status status="PASS" starttime="20201112 12:26:07.307" endtime="20201112 12:26:07.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.323" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:07.322" endtime="20201112 12:26:07.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.325" level="INFO">VALUE: [1.2389000000001538e-05, 1.1764000000000913e-05, 1.1749999999997873e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1680000000000024e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1638000000001314e-05, 1.1791000000000579e-05, 1.1722999999998207e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1750000000001343e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1708000000002633e-05, 1.1708999999998637e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1737000000001246e-05, 1.1666999999999927e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1665999999996984e-05, 1.1680999999999497e-05, 1.1735999999998303e-05, 1.1764000000000913e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1666999999999927e-05, 1.1694000000003063e-05, 1.1681000000002967e-05, 1.1736000000001773e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1666999999999927e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1709000000002107e-05]</msg>
<status status="PASS" starttime="20201112 12:26:07.324" endtime="20201112 12:26:07.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.320" endtime="20201112 12:26:07.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.329" endtime="20201112 12:26:07.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.333" endtime="20201112 12:26:07.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.330" endtime="20201112 12:26:07.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.327" endtime="20201112 12:26:07.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.970" endtime="20201112 12:26:07.353"></status>
</kw>
<msg timestamp="20201112 12:26:07.354" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.362" endtime="20201112 12:26:07.372"></status>
</kw>
<msg timestamp="20201112 12:26:07.373" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.360" endtime="20201112 12:26:07.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.375" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.374" endtime="20201112 12:26:07.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.376" endtime="20201112 12:26:07.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.358" endtime="20201112 12:26:07.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.355" endtime="20201112 12:26:07.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.385" endtime="20201112 12:26:07.670"></status>
</kw>
<msg timestamp="20201112 12:26:07.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019581264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.384" endtime="20201112 12:26:07.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019581264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.674" endtime="20201112 12:26:07.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.683" endtime="20201112 12:26:07.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.381" endtime="20201112 12:26:07.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.380" endtime="20201112 12:26:07.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.689" level="INFO">${RESULT} = [{'time': 0.019581264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.019610722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:07.686" endtime="20201112 12:26:07.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.704" level="INFO">${OVERHEAD} = {'diff': [1.2389000000001538e-05, 1.1722000000002203e-05, 1.1723000000001677e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1694999999999067e-05, 1.1721999999998733e-05...</msg>
<status status="PASS" starttime="20201112 12:26:07.690" endtime="20201112 12:26:07.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.708" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:07.707" endtime="20201112 12:26:07.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.710" level="INFO">VALUE: [1.2389000000001538e-05, 1.1722000000002203e-05, 1.1723000000001677e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1694999999999067e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1723000000001677e-05, 1.1666999999999927e-05, 1.1693999999999594e-05, 1.1708000000002633e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1680999999999497e-05, 1.1708000000002633e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1722999999998207e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1652000000000884e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1764000000000913e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1735999999998303e-05, 1.1723000000001677e-05, 1.1723000000001677e-05, 1.1707999999999164e-05]</msg>
<status status="PASS" starttime="20201112 12:26:07.709" endtime="20201112 12:26:07.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.704" endtime="20201112 12:26:07.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.713" endtime="20201112 12:26:07.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.717" endtime="20201112 12:26:07.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.715" endtime="20201112 12:26:07.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.712" endtime="20201112 12:26:07.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.354" endtime="20201112 12:26:07.739"></status>
</kw>
<msg timestamp="20201112 12:26:07.739" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.746" endtime="20201112 12:26:07.757"></status>
</kw>
<msg timestamp="20201112 12:26:07.758" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.745" endtime="20201112 12:26:07.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.760" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.759" endtime="20201112 12:26:07.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.761" endtime="20201112 12:26:07.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.742" endtime="20201112 12:26:07.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.741" endtime="20201112 12:26:07.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.770" endtime="20201112 12:26:08.056"></status>
</kw>
<msg timestamp="20201112 12:26:08.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019161847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01917425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:07.768" endtime="20201112 12:26:08.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019161847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01917425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:08.060" endtime="20201112 12:26:08.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.068" endtime="20201112 12:26:08.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.766" endtime="20201112 12:26:08.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.764" endtime="20201112 12:26:08.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.075" level="INFO">${RESULT} = [{'time': 0.01917425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2403000000001108e-05, 'source_diff': 1.2403000000001108e-05}, {'time': 0.019200597, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:08.072" endtime="20201112 12:26:08.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.090" level="INFO">${OVERHEAD} = {'diff': [1.2403000000001108e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1792000000000052e-05, 1.1680999999999497e-05, 1.1722999999998207e-05, 1.1750000000001343e-05...</msg>
<status status="PASS" starttime="20201112 12:26:08.077" endtime="20201112 12:26:08.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.094" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:08.093" endtime="20201112 12:26:08.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.097" level="INFO">VALUE: [1.2403000000001108e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1792000000000052e-05, 1.1680999999999497e-05, 1.1722999999998207e-05, 1.1750000000001343e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1694999999999067e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1722999999998207e-05, 1.1709000000002107e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1653000000000358e-05, 1.1736000000001773e-05, 1.1723000000001677e-05, 1.1666999999999927e-05, 1.1708000000002633e-05, 1.1722999999998207e-05, 1.1750000000001343e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1722000000002203e-05, 1.1708000000002633e-05, 1.1695000000002537e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1722000000002203e-05, 1.1666999999999927e-05, 1.1694999999999067e-05, 1.1708000000002633e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1707999999999164e-05]</msg>
<status status="PASS" starttime="20201112 12:26:08.095" endtime="20201112 12:26:08.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.091" endtime="20201112 12:26:08.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.100" endtime="20201112 12:26:08.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.105" endtime="20201112 12:26:08.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.102" endtime="20201112 12:26:08.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.099" endtime="20201112 12:26:08.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.739" endtime="20201112 12:26:08.125"></status>
</kw>
<msg timestamp="20201112 12:26:08.126" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.133" endtime="20201112 12:26:08.144"></status>
</kw>
<msg timestamp="20201112 12:26:08.144" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.132" endtime="20201112 12:26:08.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.147" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.146" endtime="20201112 12:26:08.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.148" endtime="20201112 12:26:08.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.129" endtime="20201112 12:26:08.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.127" endtime="20201112 12:26:08.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.157" endtime="20201112 12:26:08.459"></status>
</kw>
<msg timestamp="20201112 12:26:08.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019289222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019301625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.156" endtime="20201112 12:26:08.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019289222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019301625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.463" endtime="20201112 12:26:08.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.472" endtime="20201112 12:26:08.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.153" endtime="20201112 12:26:08.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.151" endtime="20201112 12:26:08.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.479" level="INFO">${RESULT} = [{'time': 0.019301625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2402999999997638e-05, 'source_diff': 1.2402999999997638e-05}, {'time': 0.019332333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:08.475" endtime="20201112 12:26:08.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.493" level="INFO">${OVERHEAD} = {'diff': [1.2402999999997638e-05, 1.1666000000000454e-05, 1.1694999999999067e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1722999999998207e-05, 1.1722000000002203e-05, 1.1708999999998637e-05...</msg>
<status status="PASS" starttime="20201112 12:26:08.480" endtime="20201112 12:26:08.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.497" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:08.496" endtime="20201112 12:26:08.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.500" level="INFO">VALUE: [1.2402999999997638e-05, 1.1666000000000454e-05, 1.1694999999999067e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1722999999998207e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1737000000001246e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1709000000002107e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1737000000001246e-05, 1.1707999999999164e-05, 1.1763000000001439e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1653000000000358e-05, 1.1737000000001246e-05, 1.1708000000002633e-05, 1.1736000000001773e-05, 1.1723000000001677e-05, 1.1708999999998637e-05, 1.1695000000002537e-05, 1.1707999999999164e-05, 1.1791000000000579e-05, 1.1722000000002203e-05, 1.1763999999997443e-05, 1.1735999999998303e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.1763999999997443e-05, 1.1708000000002633e-05, 1.1693999999999594e-05, 1.1694000000003063e-05, 1.1707999999999164e-05]</msg>
<status status="PASS" starttime="20201112 12:26:08.498" endtime="20201112 12:26:08.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.494" endtime="20201112 12:26:08.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.503" endtime="20201112 12:26:08.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.507" endtime="20201112 12:26:08.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.505" endtime="20201112 12:26:08.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.501" endtime="20201112 12:26:08.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.126" endtime="20201112 12:26:08.528"></status>
</kw>
<msg timestamp="20201112 12:26:08.528" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.536" endtime="20201112 12:26:08.547"></status>
</kw>
<msg timestamp="20201112 12:26:08.547" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.534" endtime="20201112 12:26:08.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.550" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.548" endtime="20201112 12:26:08.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.551" endtime="20201112 12:26:08.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.532" endtime="20201112 12:26:08.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.530" endtime="20201112 12:26:08.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.560" endtime="20201112 12:26:08.846"></status>
</kw>
<msg timestamp="20201112 12:26:08.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019345403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019357792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.558" endtime="20201112 12:26:08.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019345403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019357792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.850" endtime="20201112 12:26:08.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.858" endtime="20201112 12:26:08.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.556" endtime="20201112 12:26:08.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.554" endtime="20201112 12:26:08.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.865" level="INFO">${RESULT} = [{'time': 0.019357792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2388999999998068e-05, 'source_diff': 1.2388999999998068e-05}, {'time': 0.019395986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:08.862" endtime="20201112 12:26:08.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.878" level="INFO">${OVERHEAD} = {'diff': [1.2388999999998068e-05, 1.1722000000002203e-05, 1.1722000000002203e-05, 1.1694999999999067e-05, 1.1792000000000052e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1736000000001773e-05...</msg>
<status status="PASS" starttime="20201112 12:26:08.866" endtime="20201112 12:26:08.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.883" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:08.882" endtime="20201112 12:26:08.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.885" level="INFO">VALUE: [1.2388999999998068e-05, 1.1722000000002203e-05, 1.1722000000002203e-05, 1.1694999999999067e-05, 1.1792000000000052e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1750000000001343e-05, 1.1736000000001773e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1680000000000024e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1666999999999927e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1722000000002203e-05, 1.1805999999999622e-05, 1.1694000000003063e-05, 1.1721999999998733e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1666999999999927e-05, 1.1722999999998207e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1708000000002633e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1666000000000454e-05, 1.1723000000001677e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1708000000002633e-05]</msg>
<status status="PASS" starttime="20201112 12:26:08.884" endtime="20201112 12:26:08.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.879" endtime="20201112 12:26:08.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.889" endtime="20201112 12:26:08.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.893" endtime="20201112 12:26:08.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.891" endtime="20201112 12:26:08.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.887" endtime="20201112 12:26:08.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.529" endtime="20201112 12:26:08.914"></status>
</kw>
<msg timestamp="20201112 12:26:08.914" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.922" endtime="20201112 12:26:08.933"></status>
</kw>
<msg timestamp="20201112 12:26:08.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.920" endtime="20201112 12:26:08.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.936" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.934" endtime="20201112 12:26:08.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.937" endtime="20201112 12:26:08.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.918" endtime="20201112 12:26:08.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.916" endtime="20201112 12:26:08.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.946" endtime="20201112 12:26:09.245"></status>
</kw>
<msg timestamp="20201112 12:26:09.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019327097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019339486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.944" endtime="20201112 12:26:09.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019327097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019339486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.249" endtime="20201112 12:26:09.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.258" endtime="20201112 12:26:09.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.942" endtime="20201112 12:26:09.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.940" endtime="20201112 12:26:09.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.264" level="INFO">${RESULT} = [{'time': 0.019339486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2388999999998068e-05, 'source_diff': 1.2388999999998068e-05}, {'time': 0.019366472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:09.261" endtime="20201112 12:26:09.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.279" level="INFO">${OVERHEAD} = {'diff': [1.2388999999998068e-05, 1.1721999999998733e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1680999999999497e-05, 1.1680000000000024e-05, 1.1708000000002633e-05...</msg>
<status status="PASS" starttime="20201112 12:26:09.265" endtime="20201112 12:26:09.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.283" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:09.282" endtime="20201112 12:26:09.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.286" level="INFO">VALUE: [1.2388999999998068e-05, 1.1721999999998733e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1680999999999497e-05, 1.1680000000000024e-05, 1.1708000000002633e-05, 1.1693999999999594e-05, 1.1778000000000483e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1736000000001773e-05, 1.1694999999999067e-05, 1.1736000000001773e-05, 1.1721999999998733e-05, 1.1709000000002107e-05, 1.1735999999998303e-05, 1.1735999999998303e-05, 1.1708999999998637e-05, 1.1709000000002107e-05, 1.1722000000002203e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1637999999997845e-05, 1.1666999999999927e-05, 1.1722000000002203e-05, 1.1695000000002537e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1777000000001009e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1638999999997318e-05, 1.1721999999998733e-05, 1.1695000000002537e-05, 1.1721999999998733e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1639000000000788e-05, 1.1695000000002537e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1707999999999164e-05]</msg>
<status status="PASS" starttime="20201112 12:26:09.284" endtime="20201112 12:26:09.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.280" endtime="20201112 12:26:09.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.289" endtime="20201112 12:26:09.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.293" endtime="20201112 12:26:09.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.291" endtime="20201112 12:26:09.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.288" endtime="20201112 12:26:09.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.915" endtime="20201112 12:26:09.314"></status>
</kw>
<msg timestamp="20201112 12:26:09.315" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.322" endtime="20201112 12:26:09.333"></status>
</kw>
<msg timestamp="20201112 12:26:09.334" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.321" endtime="20201112 12:26:09.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.336" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.335" endtime="20201112 12:26:09.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.337" endtime="20201112 12:26:09.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.318" endtime="20201112 12:26:09.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.316" endtime="20201112 12:26:09.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.347" endtime="20201112 12:26:09.633"></status>
</kw>
<msg timestamp="20201112 12:26:09.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.345" endtime="20201112 12:26:09.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.638" endtime="20201112 12:26:09.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.646" endtime="20201112 12:26:09.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.342" endtime="20201112 12:26:09.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.341" endtime="20201112 12:26:09.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.653" level="INFO">${RESULT} = [{'time': 0.019452556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2374999999998498e-05, 'source_diff': 1.2374999999998498e-05}, {'time': 0.019476708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:09.649" endtime="20201112 12:26:09.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.666" level="INFO">${OVERHEAD} = {'diff': [1.2374999999998498e-05, 1.1721999999998733e-05, 1.1653000000000358e-05, 1.1694999999999067e-05, 1.1680000000000024e-05, 1.1736000000001773e-05, 1.176299999999797e-05, 1.1694999999999067e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:09.654" endtime="20201112 12:26:09.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.671" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:09.669" endtime="20201112 12:26:09.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.673" level="INFO">VALUE: [1.2374999999998498e-05, 1.1721999999998733e-05, 1.1653000000000358e-05, 1.1694999999999067e-05, 1.1680000000000024e-05, 1.1736000000001773e-05, 1.176299999999797e-05, 1.1694999999999067e-05, 1.1721999999998733e-05, 1.1708000000002633e-05, 1.1750000000001343e-05, 1.1694999999999067e-05, 1.1666999999999927e-05, 1.1749999999997873e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1736000000001773e-05, 1.1708999999998637e-05, 1.1723000000001677e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1763999999997443e-05, 1.1722999999998207e-05, 1.1708000000002633e-05, 1.1695000000002537e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1709000000002107e-05, 1.1695000000002537e-05, 1.1653000000000358e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1694000000003063e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1680000000000024e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1680999999999497e-05, 1.1778000000000483e-05, 1.1721999999998733e-05, 1.1723000000001677e-05, 1.1722999999998207e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1693999999999594e-05]</msg>
<status status="PASS" starttime="20201112 12:26:09.672" endtime="20201112 12:26:09.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.667" endtime="20201112 12:26:09.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.677" endtime="20201112 12:26:09.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.681" endtime="20201112 12:26:09.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.679" endtime="20201112 12:26:09.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.675" endtime="20201112 12:26:09.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.315" endtime="20201112 12:26:09.702"></status>
</kw>
<msg timestamp="20201112 12:26:09.702" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.710" endtime="20201112 12:26:09.721"></status>
</kw>
<msg timestamp="20201112 12:26:09.721" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.708" endtime="20201112 12:26:09.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.722" endtime="20201112 12:26:09.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.725" endtime="20201112 12:26:09.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.705" endtime="20201112 12:26:09.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.704" endtime="20201112 12:26:09.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.734" endtime="20201112 12:26:10.020"></status>
</kw>
<msg timestamp="20201112 12:26:10.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019348514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019360875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.732" endtime="20201112 12:26:10.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019348514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019360875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.025" endtime="20201112 12:26:10.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.033" endtime="20201112 12:26:10.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.730" endtime="20201112 12:26:10.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.728" endtime="20201112 12:26:10.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.040" level="INFO">${RESULT} = [{'time': 0.019360875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.019399361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:10.037" endtime="20201112 12:26:10.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.054" level="INFO">${OVERHEAD} = {'diff': [1.2360999999998928e-05, 1.1666999999999927e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1750000000001343e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1722999999998207e-05...</msg>
<status status="PASS" starttime="20201112 12:26:10.041" endtime="20201112 12:26:10.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.058" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:10.057" endtime="20201112 12:26:10.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.060" level="INFO">VALUE: [1.2360999999998928e-05, 1.1666999999999927e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1750000000001343e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1708000000002633e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.176299999999797e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1722999999998207e-05, 1.1666000000000454e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1735999999998303e-05, 1.1722999999998207e-05, 1.1693999999999594e-05, 1.1694000000003063e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1722999999998207e-05, 1.1708000000002633e-05, 1.1778000000000483e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1736000000001773e-05, 1.1693999999999594e-05, 1.1708000000002633e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1708000000002633e-05, 1.1639000000000788e-05, 1.1722000000002203e-05]</msg>
<status status="PASS" starttime="20201112 12:26:10.059" endtime="20201112 12:26:10.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.055" endtime="20201112 12:26:10.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.064" endtime="20201112 12:26:10.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.068" endtime="20201112 12:26:10.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.066" endtime="20201112 12:26:10.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.062" endtime="20201112 12:26:10.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.703" endtime="20201112 12:26:10.089"></status>
</kw>
<msg timestamp="20201112 12:26:10.089" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.097" endtime="20201112 12:26:10.108"></status>
</kw>
<msg timestamp="20201112 12:26:10.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.095" endtime="20201112 12:26:10.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.111" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.109" endtime="20201112 12:26:10.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.112" endtime="20201112 12:26:10.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.093" endtime="20201112 12:26:10.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.091" endtime="20201112 12:26:10.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.121" endtime="20201112 12:26:10.407"></status>
</kw>
<msg timestamp="20201112 12:26:10.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.119" endtime="20201112 12:26:10.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.411" endtime="20201112 12:26:10.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.419" endtime="20201112 12:26:10.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.117" endtime="20201112 12:26:10.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.115" endtime="20201112 12:26:10.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.426" level="INFO">${RESULT} = [{'time': 0.019375139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2403000000001108e-05, 'source_diff': 1.2403000000001108e-05}, {'time': 0.019407097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:10.423" endtime="20201112 12:26:10.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.440" level="INFO">${OVERHEAD} = {'diff': [1.2403000000001108e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1666999999999927e-05, 1.1708999999998637e-05, 1.1722999999998207e-05, 1.1680999999999497e-05, 1.1693999999999594e-05...</msg>
<status status="PASS" starttime="20201112 12:26:10.427" endtime="20201112 12:26:10.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.444" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:10.443" endtime="20201112 12:26:10.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.446" level="INFO">VALUE: [1.2403000000001108e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1666999999999927e-05, 1.1708999999998637e-05, 1.1722999999998207e-05, 1.1680999999999497e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1792000000000052e-05, 1.1707999999999164e-05, 1.1666999999999927e-05, 1.1693999999999594e-05, 1.1722999999998207e-05, 1.1721999999998733e-05, 1.1694999999999067e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1736000000001773e-05, 1.1694000000003063e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1680999999999497e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1680999999999497e-05, 1.1708000000002633e-05, 1.1708000000002633e-05, 1.1639000000000788e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1708000000002633e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1707999999999164e-05]</msg>
<status status="PASS" starttime="20201112 12:26:10.445" endtime="20201112 12:26:10.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.441" endtime="20201112 12:26:10.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.450" endtime="20201112 12:26:10.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.454" endtime="20201112 12:26:10.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.452" endtime="20201112 12:26:10.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.448" endtime="20201112 12:26:10.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.090" endtime="20201112 12:26:10.475"></status>
</kw>
<msg timestamp="20201112 12:26:10.475" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.483" endtime="20201112 12:26:10.494"></status>
</kw>
<msg timestamp="20201112 12:26:10.494" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.481" endtime="20201112 12:26:10.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.497" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.495" endtime="20201112 12:26:10.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.498" endtime="20201112 12:26:10.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.479" endtime="20201112 12:26:10.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.477" endtime="20201112 12:26:10.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.507" endtime="20201112 12:26:10.794"></status>
</kw>
<msg timestamp="20201112 12:26:10.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019402806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.505" endtime="20201112 12:26:10.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019402806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.798" endtime="20201112 12:26:10.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.806" endtime="20201112 12:26:10.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.503" endtime="20201112 12:26:10.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.501" endtime="20201112 12:26:10.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.813" level="INFO">${RESULT} = [{'time': 0.019415222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2415999999997734e-05, 'source_diff': 1.2415999999997734e-05}, {'time': 0.019442167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:10.809" endtime="20201112 12:26:10.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.827" level="INFO">${OVERHEAD} = {'diff': [1.2415999999997734e-05, 1.1708999999998637e-05, 1.177699999999754e-05, 1.1721999999998733e-05, 1.1723000000001677e-05, 1.1694000000003063e-05, 1.1708000000002633e-05, 1.1666999999999927e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:10.814" endtime="20201112 12:26:10.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.831" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:10.830" endtime="20201112 12:26:10.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.834" level="INFO">VALUE: [1.2415999999997734e-05, 1.1708999999998637e-05, 1.177699999999754e-05, 1.1721999999998733e-05, 1.1723000000001677e-05, 1.1694000000003063e-05, 1.1708000000002633e-05, 1.1666999999999927e-05, 1.1723000000001677e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1694000000003063e-05, 1.1721999999998733e-05, 1.1694000000003063e-05, 1.1708000000002633e-05, 1.1709000000002107e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1736000000001773e-05, 1.1708000000002633e-05, 1.1792000000000052e-05, 1.1723000000001677e-05, 1.1708999999998637e-05, 1.1708999999998637e-05, 1.1723000000001677e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1695000000002537e-05, 1.1653000000000358e-05, 1.1707999999999164e-05, 1.1681000000002967e-05, 1.1707999999999164e-05, 1.1736000000001773e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.1721999999998733e-05, 1.1764000000000913e-05, 1.1735999999998303e-05, 1.1723000000001677e-05, 1.1639000000000788e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1624999999997748e-05, 1.1722999999998207e-05, 1.1694000000003063e-05]</msg>
<status status="PASS" starttime="20201112 12:26:10.833" endtime="20201112 12:26:10.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.828" endtime="20201112 12:26:10.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.838" endtime="20201112 12:26:10.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.842" endtime="20201112 12:26:10.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.840" endtime="20201112 12:26:10.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.836" endtime="20201112 12:26:10.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.476" endtime="20201112 12:26:10.863"></status>
</kw>
<msg timestamp="20201112 12:26:10.863" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.871" endtime="20201112 12:26:10.882"></status>
</kw>
<msg timestamp="20201112 12:26:10.882" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.869" endtime="20201112 12:26:10.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.883" endtime="20201112 12:26:10.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.886" endtime="20201112 12:26:10.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.866" endtime="20201112 12:26:10.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.865" endtime="20201112 12:26:10.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.895" endtime="20201112 12:26:11.181"></status>
</kw>
<msg timestamp="20201112 12:26:11.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019381153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.893" endtime="20201112 12:26:11.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019381153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.185" endtime="20201112 12:26:11.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.194" endtime="20201112 12:26:11.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.891" endtime="20201112 12:26:11.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.889" endtime="20201112 12:26:11.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.201" level="INFO">${RESULT} = [{'time': 0.019381153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.019412792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:11.197" endtime="20201112 12:26:11.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.214" level="INFO">${OVERHEAD} = {'diff': [1.2389000000001538e-05, 1.1695000000002537e-05, 1.1708999999998637e-05, 1.1708000000002633e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1722999999998207e-05, 1.1707999999999164e-05...</msg>
<status status="PASS" starttime="20201112 12:26:11.202" endtime="20201112 12:26:11.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.218" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:11.217" endtime="20201112 12:26:11.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.221" level="INFO">VALUE: [1.2389000000001538e-05, 1.1695000000002537e-05, 1.1708999999998637e-05, 1.1708000000002633e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1722999999998207e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1651999999997414e-05, 1.1722999999998207e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1749999999997873e-05, 1.1708999999998637e-05, 1.1708000000002633e-05, 1.1721999999998733e-05, 1.1694999999999067e-05, 1.1737000000001246e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1723000000001677e-05, 1.1653000000000358e-05, 1.1722000000002203e-05, 1.1694999999999067e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1624999999997748e-05, 1.1693999999999594e-05, 1.1723000000001677e-05, 1.1721999999998733e-05, 1.1653000000000358e-05, 1.1666999999999927e-05, 1.1708000000002633e-05, 1.1722000000002203e-05, 1.1680000000000024e-05, 1.1750000000001343e-05, 1.1694999999999067e-05, 1.1778000000000483e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1695000000002537e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1778000000000483e-05]</msg>
<status status="PASS" starttime="20201112 12:26:11.219" endtime="20201112 12:26:11.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.215" endtime="20201112 12:26:11.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.224" endtime="20201112 12:26:11.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.229" endtime="20201112 12:26:11.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.226" endtime="20201112 12:26:11.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.223" endtime="20201112 12:26:11.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.863" endtime="20201112 12:26:11.249"></status>
</kw>
<msg timestamp="20201112 12:26:11.250" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.257" endtime="20201112 12:26:11.268"></status>
</kw>
<msg timestamp="20201112 12:26:11.269" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.256" endtime="20201112 12:26:11.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.270" endtime="20201112 12:26:11.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.272" endtime="20201112 12:26:11.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.253" endtime="20201112 12:26:11.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.252" endtime="20201112 12:26:11.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.282" endtime="20201112 12:26:11.567"></status>
</kw>
<msg timestamp="20201112 12:26:11.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0194935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:11.280" endtime="20201112 12:26:11.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0194935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:11.572" endtime="20201112 12:26:11.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.580" endtime="20201112 12:26:11.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.277" endtime="20201112 12:26:11.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.276" endtime="20201112 12:26:11.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.587" level="INFO">${RESULT} = [{'time': 0.0194935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2417000000000677e-05, 'source_diff': 1.2417000000000677e-05}, {'time': 0.019526375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:11.583" endtime="20201112 12:26:11.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.600" level="INFO">${OVERHEAD} = {'diff': [1.2417000000000677e-05, 1.1666999999999927e-05, 1.1722000000002203e-05, 1.1777999999997013e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1750000000001343e-05...</msg>
<status status="PASS" starttime="20201112 12:26:11.588" endtime="20201112 12:26:11.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.604" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:11.603" endtime="20201112 12:26:11.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.607" level="INFO">VALUE: [1.2417000000000677e-05, 1.1666999999999927e-05, 1.1722000000002203e-05, 1.1777999999997013e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1750000000001343e-05, 1.1736000000001773e-05, 1.1721999999998733e-05, 1.1709000000002107e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1750000000001343e-05, 1.1777000000001009e-05, 1.1722000000002203e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.1653000000000358e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1764000000000913e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1708000000002633e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1707999999999164e-05, 1.1764000000000913e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1666999999999927e-05, 1.1792000000000052e-05, 1.1709000000002107e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1763999999997443e-05, 1.1750000000001343e-05]</msg>
<status status="PASS" starttime="20201112 12:26:11.606" endtime="20201112 12:26:11.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.601" endtime="20201112 12:26:11.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.678" endtime="20201112 12:26:11.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.682" endtime="20201112 12:26:11.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.680" endtime="20201112 12:26:11.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.676" endtime="20201112 12:26:11.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.250" endtime="20201112 12:26:11.703"></status>
</kw>
<msg timestamp="20201112 12:26:11.703" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.711" endtime="20201112 12:26:11.722"></status>
</kw>
<msg timestamp="20201112 12:26:11.722" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.709" endtime="20201112 12:26:11.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.723" endtime="20201112 12:26:11.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.726" endtime="20201112 12:26:11.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.707" endtime="20201112 12:26:11.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.705" endtime="20201112 12:26:11.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.735" endtime="20201112 12:26:12.035"></status>
</kw>
<msg timestamp="20201112 12:26:12.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019410069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.733" endtime="20201112 12:26:12.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019410069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.045" endtime="20201112 12:26:12.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.064" endtime="20201112 12:26:12.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.731" endtime="20201112 12:26:12.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.729" endtime="20201112 12:26:12.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.073" level="INFO">${RESULT} = [{'time': 0.019410069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2387999999998595e-05, 'source_diff': 1.2387999999998595e-05}, {'time': 0.019445528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:12.070" endtime="20201112 12:26:12.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.087" level="INFO">${OVERHEAD} = {'diff': [1.2387999999998595e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1693999999999594e-05...</msg>
<status status="PASS" starttime="20201112 12:26:12.074" endtime="20201112 12:26:12.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.091" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:12.090" endtime="20201112 12:26:12.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.094" level="INFO">VALUE: [1.2387999999998595e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1695000000002537e-05, 1.1708000000002633e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1722999999998207e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1680000000000024e-05, 1.1693999999999594e-05, 1.1749999999997873e-05, 1.1694999999999067e-05, 1.1709000000002107e-05, 1.1723000000001677e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.1694999999999067e-05, 1.1694999999999067e-05, 1.1722000000002203e-05, 1.1694000000003063e-05, 1.1721999999998733e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1792000000000052e-05, 1.1708999999998637e-05, 1.1722000000002203e-05, 1.1722000000002203e-05, 1.1722000000002203e-05, 1.1666999999999927e-05, 1.1708999999998637e-05, 1.1637999999997845e-05, 1.1707999999999164e-05, 1.1707999999999164e-05]</msg>
<status status="PASS" starttime="20201112 12:26:12.092" endtime="20201112 12:26:12.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.088" endtime="20201112 12:26:12.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.097" endtime="20201112 12:26:12.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.101" endtime="20201112 12:26:12.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.099" endtime="20201112 12:26:12.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.096" endtime="20201112 12:26:12.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.704" endtime="20201112 12:26:12.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.093" endtime="20201112 12:26:12.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.129" endtime="20201112 12:26:12.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.127" endtime="20201112 12:26:12.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.125" endtime="20201112 12:26:12.149"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:04.023" endtime="20201112 12:26:12.150" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.158" endtime="20201112 12:26:12.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.156" endtime="20201112 12:26:12.178"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.191" endtime="20201112 12:26:12.203"></status>
</kw>
<msg timestamp="20201112 12:26:12.203" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.189" endtime="20201112 12:26:12.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.206" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.204" endtime="20201112 12:26:12.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.209" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:12.207" endtime="20201112 12:26:12.209"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:12.186" endtime="20201112 12:26:12.210"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:12.184" endtime="20201112 12:26:12.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.183" endtime="20201112 12:26:12.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:12.215" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:12.214" endtime="20201112 12:26:12.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.212" endtime="20201112 12:26:12.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.182" endtime="20201112 12:26:12.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.181" endtime="20201112 12:26:12.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.216" endtime="20201112 12:26:12.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.180" endtime="20201112 12:26:12.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.178" endtime="20201112 12:26:12.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.155" endtime="20201112 12:26:12.219"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.230" endtime="20201112 12:26:12.251"></status>
</kw>
<msg timestamp="20201112 12:26:12.251" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.229" endtime="20201112 12:26:12.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.254" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.252" endtime="20201112 12:26:12.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.255" endtime="20201112 12:26:12.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.226" endtime="20201112 12:26:12.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.222" endtime="20201112 12:26:12.258"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.260" endtime="20201112 12:26:12.261"></status>
</kw>
<msg timestamp="20201112 12:26:12.262" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:12.258" endtime="20201112 12:26:12.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.266" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:12.265" endtime="20201112 12:26:12.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.268" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:12.267" endtime="20201112 12:26:12.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.263" endtime="20201112 12:26:12.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.273" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:12.272" endtime="20201112 12:26:12.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.275" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:12.274" endtime="20201112 12:26:12.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.269" endtime="20201112 12:26:12.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.282" endtime="20201112 12:26:12.568"></status>
</kw>
<msg timestamp="20201112 12:26:12.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065762222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065794611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.280" endtime="20201112 12:26:12.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065762222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065794611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.572" endtime="20201112 12:26:12.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.580" endtime="20201112 12:26:12.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.278" endtime="20201112 12:26:12.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.276" endtime="20201112 12:26:12.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.587" level="INFO">${RESULT} = [{'time': 0.065794611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.238900000000766e-05, 'source_diff': 3.238900000000766e-05}, {'time': 0.065856319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:12.583" endtime="20201112 12:26:12.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.601" level="INFO">${OVERHEAD} = {'diff': [3.238900000000766e-05, 3.194399999999209e-05, 3.197199999999123e-05, 3.199999999999037e-05, 3.197199999999123e-05, 3.197200000000511e-05, 3.194500000000544e-05, 3.194400000000597e-05, 3.2000...</msg>
<status status="PASS" starttime="20201112 12:26:12.588" endtime="20201112 12:26:12.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.606" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:12.605" endtime="20201112 12:26:12.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.609" level="INFO">VALUE: [3.238900000000766e-05, 3.194399999999209e-05, 3.197199999999123e-05, 3.199999999999037e-05, 3.197199999999123e-05, 3.197200000000511e-05, 3.194500000000544e-05, 3.194400000000597e-05, 3.200000000000425e-05, 3.1958000000012476e-05, 3.198599999999774e-05, 3.1986000000011616e-05, 3.19579999999986e-05, 3.193099999999893e-05, 3.197200000000511e-05, 3.194500000000544e-05, 3.194400000000597e-05, 3.197200000000511e-05, 3.19579999999986e-05, 3.197200000000511e-05, 3.194399999999209e-05, 3.195899999999807e-05, 3.194500000000544e-05, 3.197200000000511e-05, 3.195899999999807e-05, 3.197300000000458e-05, 3.194500000000544e-05, 3.200000000000425e-05, 3.194500000000544e-05, 3.197300000000458e-05, 3.195899999999807e-05, 3.193099999999893e-05, 3.194400000000597e-05, 3.194399999999209e-05, 3.195900000001195e-05, 3.194399999999209e-05, 3.2014000000010756e-05, 3.195899999999807e-05, 3.195899999999807e-05, 3.19579999999986e-05, 3.1944999999991563e-05, 3.19579999999986e-05, 3.201399999999688e-05, 3.19579999999986e-05, 3.197199999999123e-05, 3.187500000000065e-05, 3.195899999999807e-05, 3.193099999999893e-05, 3.192999999999946e-05, 3.19579999999986e-05]</msg>
<status status="PASS" starttime="20201112 12:26:12.607" endtime="20201112 12:26:12.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.602" endtime="20201112 12:26:12.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.612" endtime="20201112 12:26:12.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.615" endtime="20201112 12:26:12.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.614" endtime="20201112 12:26:12.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.610" endtime="20201112 12:26:12.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.220" endtime="20201112 12:26:12.636"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:12.152" endtime="20201112 12:26:12.637" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.645" endtime="20201112 12:26:12.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.643" endtime="20201112 12:26:12.665"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.678" endtime="20201112 12:26:12.690"></status>
</kw>
<msg timestamp="20201112 12:26:12.691" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.676" endtime="20201112 12:26:12.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.693" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.692" endtime="20201112 12:26:12.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.696" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:12.694" endtime="20201112 12:26:12.697"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:12.674" endtime="20201112 12:26:12.697"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:12.671" endtime="20201112 12:26:12.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.670" endtime="20201112 12:26:12.698"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:12.702" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:12.701" endtime="20201112 12:26:12.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.699" endtime="20201112 12:26:12.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.669" endtime="20201112 12:26:12.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.669" endtime="20201112 12:26:12.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.704" endtime="20201112 12:26:12.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.667" endtime="20201112 12:26:12.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.666" endtime="20201112 12:26:12.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.642" endtime="20201112 12:26:12.706"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.717" endtime="20201112 12:26:12.953"></status>
</kw>
<msg timestamp="20201112 12:26:12.953" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.715" endtime="20201112 12:26:12.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.956" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.954" endtime="20201112 12:26:12.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.957" endtime="20201112 12:26:12.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.713" endtime="20201112 12:26:12.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.709" endtime="20201112 12:26:12.960"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.962" endtime="20201112 12:26:12.963"></status>
</kw>
<msg timestamp="20201112 12:26:12.964" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:12.960" endtime="20201112 12:26:12.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.968" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:12.967" endtime="20201112 12:26:12.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.970" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:12.969" endtime="20201112 12:26:12.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.965" endtime="20201112 12:26:12.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.975" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:12.974" endtime="20201112 12:26:12.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.977" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:12.976" endtime="20201112 12:26:12.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.971" endtime="20201112 12:26:12.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.984" endtime="20201112 12:26:13.276"></status>
</kw>
<msg timestamp="20201112 12:26:13.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068616208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068757958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.982" endtime="20201112 12:26:13.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068616208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068757958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.279" endtime="20201112 12:26:13.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.287" endtime="20201112 12:26:13.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.980" endtime="20201112 12:26:13.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.978" endtime="20201112 12:26:13.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:13.294" level="INFO">${RESULT} = [{'time': 0.068757958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014174999999999605, 'source_diff': 0.00014174999999999605}, {'time': 0.073102306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:13.290" endtime="20201112 12:26:13.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:13.308" level="INFO">${OVERHEAD} = {'diff': [0.00014174999999999605, 0.00014037500000001202, 0.00014037499999999814, 0.00014036099999999163, 0.00014038899999999077, 0.00014038900000000465, 0.00014038899999999077, 0.0001403610000000055,...</msg>
<status status="PASS" starttime="20201112 12:26:13.295" endtime="20201112 12:26:13.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.313" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:13.312" endtime="20201112 12:26:13.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.316" level="INFO">VALUE: [0.00014174999999999605, 0.00014037500000001202, 0.00014037499999999814, 0.00014036099999999163, 0.00014038899999999077, 0.00014038900000000465, 0.00014038899999999077, 0.0001403610000000055, 0.00014037500000001202, 0.00014037499999999814, 0.00014037499999999814, 0.0001403329999999925, 0.00014030599999999283, 0.00014034700000001288, 0.00014038899999999077, 0.00014037499999999814, 0.00014040300000001116, 0.00014036200000000498, 0.00014037499999999814, 0.00014037499999999814, 0.00014040199999998393, 0.00014038899999999077, 0.00014040300000001116, 0.0001404170000000038, 0.00014040300000001116, 0.00014038900000001853, 0.00014037499999999814, 0.00014037499999999814, 0.00014037499999999814, 0.0001403329999999925, 0.00014043100000002418, 0.00014037499999999814, 0.00014036200000000498, 0.00014038899999999077, 0.00014036099999997775, 0.00014037499999999814, 0.0001403610000000055, 0.0001403879999999913, 0.0001403610000000055, 0.00014029199999998632, 0.00014038899999999077, 0.0001403329999999925, 0.00014034699999998512, 0.0001402910000000146, 0.0001403750000000259, 0.00014040300000001116, 0.00014034699999998512, 0.00014038899999996302, 0.00014030600000003446, 0.00014030500000000723]</msg>
<status status="PASS" starttime="20201112 12:26:13.314" endtime="20201112 12:26:13.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.309" endtime="20201112 12:26:13.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.319" endtime="20201112 12:26:13.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.323" endtime="20201112 12:26:13.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.321" endtime="20201112 12:26:13.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.318" endtime="20201112 12:26:13.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.707" endtime="20201112 12:26:13.344"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:12.639" endtime="20201112 12:26:13.345" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.353" endtime="20201112 12:26:13.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.352" endtime="20201112 12:26:13.373"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.386" endtime="20201112 12:26:13.399"></status>
</kw>
<msg timestamp="20201112 12:26:13.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.385" endtime="20201112 12:26:13.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.402" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.400" endtime="20201112 12:26:13.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.404" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:13.403" endtime="20201112 12:26:13.405"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:13.382" endtime="20201112 12:26:13.405"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:13.380" endtime="20201112 12:26:13.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.379" endtime="20201112 12:26:13.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:13.410" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:13.409" endtime="20201112 12:26:13.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.407" endtime="20201112 12:26:13.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.378" endtime="20201112 12:26:13.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.377" endtime="20201112 12:26:13.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.413" endtime="20201112 12:26:13.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.375" endtime="20201112 12:26:13.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.374" endtime="20201112 12:26:13.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.350" endtime="20201112 12:26:13.416"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.426" endtime="20201112 12:26:14.246"></status>
</kw>
<msg timestamp="20201112 12:26:14.247" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.424" endtime="20201112 12:26:14.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.252" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.249" endtime="20201112 12:26:14.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.254" endtime="20201112 12:26:14.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.421" endtime="20201112 12:26:14.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.419" endtime="20201112 12:26:14.260"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.264" endtime="20201112 12:26:14.268"></status>
</kw>
<msg timestamp="20201112 12:26:14.269" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:14.262" endtime="20201112 12:26:14.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.277" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:14.275" endtime="20201112 12:26:14.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.282" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:14.280" endtime="20201112 12:26:14.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.270" endtime="20201112 12:26:14.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.292" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:14.290" endtime="20201112 12:26:14.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.296" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:14.294" endtime="20201112 12:26:14.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.285" endtime="20201112 12:26:14.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.304" endtime="20201112 12:26:14.595"></status>
</kw>
<msg timestamp="20201112 12:26:14.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078758042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079021167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.302" endtime="20201112 12:26:14.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078758042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079021167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.599" endtime="20201112 12:26:14.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.607" endtime="20201112 12:26:14.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.300" endtime="20201112 12:26:14.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.298" endtime="20201112 12:26:14.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.613" level="INFO">${RESULT} = [{'time': 0.079021167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00026312500000000294, 'source_diff': 0.00026312500000000294}, {'time': 0.094902569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:14.610" endtime="20201112 12:26:14.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:14.628" level="INFO">${OVERHEAD} = {'diff': [0.00026312500000000294, 0.0002567220000000009, 0.00025676400000000654, 0.0002567770000000136, 0.00025675000000000003, 0.00025675000000000003, 0.00025675000000000003, 0.00025677800000001305, ...</msg>
<status status="PASS" starttime="20201112 12:26:14.615" endtime="20201112 12:26:14.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.632" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:14.631" endtime="20201112 12:26:14.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.635" level="INFO">VALUE: [0.00026312500000000294, 0.0002567220000000009, 0.00025676400000000654, 0.0002567770000000136, 0.00025675000000000003, 0.00025675000000000003, 0.00025675000000000003, 0.00025677800000001305, 0.0002568190000000192, 0.0002568059999999983, 0.00025670899999999386, 0.0002567499999999723, 0.0002567769999999858, 0.0002567499999999723, 0.0002567640000000204, 0.0002567499999999723, 0.00025673599999997965, 0.000256721999999987, 0.00025679099999997845, 0.0002568050000000266, 0.0002567639999999649, 0.0002567920000000057, 0.00025681999999999094, 0.0002568189999999637, 0.00025687499999998975, 0.0002568189999999637, 0.00025681999999999094, 0.0002567500000000278, 0.0002568609999999971, 0.00025679199999995017, 0.0002568059999999983, 0.0002568059999999983, 0.0002569030000000305, 0.00025683300000001186, 0.0002568189999999637, 0.0002567500000000278, 0.0002567639999999649, 0.00025682000000004646, 0.00025676400000007593, 0.00025672200000004253, 0.00025681900000007474, 0.00025679099999997845, 0.0002568889999999824, 0.00025681999999993543, 0.00025684700000006, 0.000256846999999949, 0.0002568480000000317, 0.00025677800000001305, 0.00025679199999995017, 0.00025683300000001186]</msg>
<status status="PASS" starttime="20201112 12:26:14.633" endtime="20201112 12:26:14.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.629" endtime="20201112 12:26:14.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.638" endtime="20201112 12:26:14.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.641" endtime="20201112 12:26:14.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.640" endtime="20201112 12:26:14.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.636" endtime="20201112 12:26:14.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.417" endtime="20201112 12:26:14.662"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:13.347" endtime="20201112 12:26:14.663" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.672" endtime="20201112 12:26:14.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.670" endtime="20201112 12:26:14.692"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.705" endtime="20201112 12:26:14.717"></status>
</kw>
<msg timestamp="20201112 12:26:14.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.703" endtime="20201112 12:26:14.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.720" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.719" endtime="20201112 12:26:14.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.725" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:14.721" endtime="20201112 12:26:14.725"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:14.701" endtime="20201112 12:26:14.726"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:14.698" endtime="20201112 12:26:14.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.697" endtime="20201112 12:26:14.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:14.731" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:14.730" endtime="20201112 12:26:14.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.728" endtime="20201112 12:26:14.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.696" endtime="20201112 12:26:14.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.695" endtime="20201112 12:26:14.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.733" endtime="20201112 12:26:14.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.694" endtime="20201112 12:26:14.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.692" endtime="20201112 12:26:14.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.669" endtime="20201112 12:26:14.735"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.745" endtime="20201112 12:26:14.766"></status>
</kw>
<msg timestamp="20201112 12:26:14.766" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.743" endtime="20201112 12:26:14.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.769" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.767" endtime="20201112 12:26:14.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.770" endtime="20201112 12:26:14.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.741" endtime="20201112 12:26:14.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.739" endtime="20201112 12:26:14.772"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.775" endtime="20201112 12:26:14.776"></status>
</kw>
<msg timestamp="20201112 12:26:14.777" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:14.773" endtime="20201112 12:26:14.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.781" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:14.780" endtime="20201112 12:26:14.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.783" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:14.782" endtime="20201112 12:26:14.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.778" endtime="20201112 12:26:14.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.788" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:14.787" endtime="20201112 12:26:14.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.790" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:14.789" endtime="20201112 12:26:14.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.784" endtime="20201112 12:26:14.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.797" endtime="20201112 12:26:15.083"></status>
</kw>
<msg timestamp="20201112 12:26:15.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066325528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066331625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.795" endtime="20201112 12:26:15.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066325528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066331625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.087" endtime="20201112 12:26:15.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.096" endtime="20201112 12:26:15.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.793" endtime="20201112 12:26:15.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.791" endtime="20201112 12:26:15.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.103" level="INFO">${RESULT} = [{'time': 0.066331625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000010455e-06, 'source_diff': 6.097000000010455e-06}, {'time': 0.066386389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:15.100" endtime="20201112 12:26:15.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:15.116" level="INFO">${OVERHEAD} = {'diff': [6.097000000010455e-06, 5.8200000000036e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.861000000009775e-06, 5.860999999995897e-06, 5.903000...</msg>
<status status="PASS" starttime="20201112 12:26:15.104" endtime="20201112 12:26:15.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.121" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:15.120" endtime="20201112 12:26:15.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.124" level="INFO">VALUE: [6.097000000010455e-06, 5.8200000000036e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.861000000009775e-06, 5.860999999995897e-06, 5.903000000001546e-06, 5.84800000000274e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.8190000000041264e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.847000000003266e-06, 5.875000000002406e-06, 5.8329999999967574e-06, 5.860999999995897e-06, 5.875000000002406e-06, 5.8469999999893885e-06, 5.930000000001212e-06, 5.805999999997091e-06, 5.861999999995371e-06, 5.860999999995897e-06, 5.875000000002406e-06, 5.860999999995897e-06, 5.847000000003266e-06, 5.805999999997091e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.8469999999893885e-06, 5.875000000002406e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.875000000002406e-06, 5.8200000000036e-06, 5.930000000001212e-06, 5.875000000002406e-06, 5.8469999999893885e-06, 5.861999999995371e-06, 5.833999999996231e-06, 5.861999999995371e-06, 5.875000000002406e-06, 5.8469999999893885e-06, 5.860999999995897e-06, 5.875000000002406e-06, 5.8190000000041264e-06, 5.8469999999893885e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.122" endtime="20201112 12:26:15.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.117" endtime="20201112 12:26:15.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.128" endtime="20201112 12:26:15.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.131" endtime="20201112 12:26:15.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.130" endtime="20201112 12:26:15.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.126" endtime="20201112 12:26:15.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.736" endtime="20201112 12:26:15.152"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:14.665" endtime="20201112 12:26:15.154" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.162" endtime="20201112 12:26:15.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.161" endtime="20201112 12:26:15.182"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.195" endtime="20201112 12:26:15.209"></status>
</kw>
<msg timestamp="20201112 12:26:15.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.194" endtime="20201112 12:26:15.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.210" endtime="20201112 12:26:15.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.215" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:15.213" endtime="20201112 12:26:15.215"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:15.191" endtime="20201112 12:26:15.216"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:15.189" endtime="20201112 12:26:15.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.188" endtime="20201112 12:26:15.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:15.221" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:15.220" endtime="20201112 12:26:15.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.218" endtime="20201112 12:26:15.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.187" endtime="20201112 12:26:15.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.186" endtime="20201112 12:26:15.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.222" endtime="20201112 12:26:15.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.185" endtime="20201112 12:26:15.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.183" endtime="20201112 12:26:15.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.160" endtime="20201112 12:26:15.225"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.235" endtime="20201112 12:26:15.474"></status>
</kw>
<msg timestamp="20201112 12:26:15.474" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.233" endtime="20201112 12:26:15.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.477" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.475" endtime="20201112 12:26:15.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.478" endtime="20201112 12:26:15.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.231" endtime="20201112 12:26:15.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.228" endtime="20201112 12:26:15.481"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.483" endtime="20201112 12:26:15.484"></status>
</kw>
<msg timestamp="20201112 12:26:15.485" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:15.481" endtime="20201112 12:26:15.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.489" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:15.488" endtime="20201112 12:26:15.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.491" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:15.490" endtime="20201112 12:26:15.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.485" endtime="20201112 12:26:15.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.496" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:15.495" endtime="20201112 12:26:15.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.498" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:15.497" endtime="20201112 12:26:15.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.492" endtime="20201112 12:26:15.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.505" endtime="20201112 12:26:15.818"></status>
</kw>
<msg timestamp="20201112 12:26:15.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069400375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069434208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.504" endtime="20201112 12:26:15.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069400375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069434208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.822" endtime="20201112 12:26:15.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.831" endtime="20201112 12:26:15.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.501" endtime="20201112 12:26:15.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.499" endtime="20201112 12:26:15.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.838" level="INFO">${RESULT} = [{'time': 0.069434208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3832999999997004e-05, 'source_diff': 3.3832999999997004e-05}, {'time': 0.073815722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:15.834" endtime="20201112 12:26:15.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:15.851" level="INFO">${OVERHEAD} = {'diff': [3.3832999999997004e-05, 3.3555000000004553e-05, 3.366700000000111e-05, 3.3568999999997184e-05, 3.361200000000231e-05, 3.358300000000369e-05, 3.3555000000004553e-05, 3.3568999999997184e-05, 3...</msg>
<status status="PASS" starttime="20201112 12:26:15.839" endtime="20201112 12:26:15.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.856" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:15.855" endtime="20201112 12:26:15.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.858" level="INFO">VALUE: [3.3832999999997004e-05, 3.3555000000004553e-05, 3.366700000000111e-05, 3.3568999999997184e-05, 3.361200000000231e-05, 3.358300000000369e-05, 3.3555000000004553e-05, 3.3568999999997184e-05, 3.358300000000369e-05, 3.358400000000317e-05, 3.35970000000102e-05, 3.3555000000004553e-05, 3.3570000000010536e-05, 3.358299999997594e-05, 3.3610999999988955e-05, 3.3556000000017905e-05, 3.3596999999996324e-05, 3.358400000000317e-05, 3.363900000000197e-05, 3.358400000000317e-05, 3.355500000001843e-05, 3.3554999999990676e-05, 3.3570000000010536e-05, 3.358400000000317e-05, 3.3570000000010536e-05, 3.3554999999990676e-05, 3.3527000000005414e-05, 3.3624999999981586e-05, 3.3556000000017905e-05, 3.3596999999996324e-05, 3.358400000000317e-05, 3.354199999999752e-05, 3.356899999998331e-05, 3.355599999999015e-05, 3.358300000000369e-05, 3.358400000000317e-05, 3.356999999998278e-05, 3.356899999998331e-05, 3.361100000001671e-05, 3.356899999998331e-05, 3.356900000001106e-05, 3.354199999999752e-05, 3.354099999997029e-05, 3.3596999999996324e-05, 3.358400000003092e-05, 3.3596999999996324e-05, 3.356900000001106e-05, 3.356900000001106e-05, 3.358300000000369e-05, 3.356999999998278e-05]</msg>
<status status="PASS" starttime="20201112 12:26:15.857" endtime="20201112 12:26:15.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.852" endtime="20201112 12:26:15.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.861" endtime="20201112 12:26:15.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.865" endtime="20201112 12:26:15.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.863" endtime="20201112 12:26:15.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.860" endtime="20201112 12:26:15.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.226" endtime="20201112 12:26:15.886"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:15.156" endtime="20201112 12:26:15.887" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.895" endtime="20201112 12:26:15.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.894" endtime="20201112 12:26:15.916"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.930" endtime="20201112 12:26:15.942"></status>
</kw>
<msg timestamp="20201112 12:26:15.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.928" endtime="20201112 12:26:15.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.945" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.943" endtime="20201112 12:26:15.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.949" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:15.946" endtime="20201112 12:26:15.949"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:15.924" endtime="20201112 12:26:15.950"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:15.922" endtime="20201112 12:26:15.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.921" endtime="20201112 12:26:15.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:15.954" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:15.953" endtime="20201112 12:26:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.951" endtime="20201112 12:26:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.920" endtime="20201112 12:26:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.919" endtime="20201112 12:26:15.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.956" endtime="20201112 12:26:15.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.918" endtime="20201112 12:26:15.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.916" endtime="20201112 12:26:15.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.893" endtime="20201112 12:26:15.959"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.968" endtime="20201112 12:26:16.793"></status>
</kw>
<msg timestamp="20201112 12:26:16.794" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.966" endtime="20201112 12:26:16.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.800" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.796" endtime="20201112 12:26:16.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.802" endtime="20201112 12:26:16.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.964" endtime="20201112 12:26:16.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.962" endtime="20201112 12:26:16.807"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.812" endtime="20201112 12:26:16.815"></status>
</kw>
<msg timestamp="20201112 12:26:16.816" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:16.809" endtime="20201112 12:26:16.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.824" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:16.822" endtime="20201112 12:26:16.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.829" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:16.827" endtime="20201112 12:26:16.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.818" endtime="20201112 12:26:16.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.839" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:16.837" endtime="20201112 12:26:16.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.843" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:16.841" endtime="20201112 12:26:16.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.832" endtime="20201112 12:26:16.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.856" endtime="20201112 12:26:17.147"></status>
</kw>
<msg timestamp="20201112 12:26:17.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079277611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079339458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.853" endtime="20201112 12:26:17.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079277611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079339458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.211" endtime="20201112 12:26:17.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.219" endtime="20201112 12:26:17.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.850" endtime="20201112 12:26:17.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.846" endtime="20201112 12:26:17.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.226" level="INFO">${RESULT} = [{'time': 0.079339458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.184700000000376e-05, 'source_diff': 6.184700000000376e-05}, {'time': 0.095303986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:17.223" endtime="20201112 12:26:17.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:17.239" level="INFO">${OVERHEAD} = {'diff': [6.184700000000376e-05, 6.158299999999006e-05, 6.163900000000222e-05, 6.159799999999604e-05, 6.162500000000959e-05, 6.162500000000959e-05, 6.16109999999892e-05, 6.16109999999892e-05, 6.161100...</msg>
<status status="PASS" starttime="20201112 12:26:17.227" endtime="20201112 12:26:17.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.244" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:17.243" endtime="20201112 12:26:17.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.246" level="INFO">VALUE: [6.184700000000376e-05, 6.158299999999006e-05, 6.163900000000222e-05, 6.159799999999604e-05, 6.162500000000959e-05, 6.162500000000959e-05, 6.16109999999892e-05, 6.16109999999892e-05, 6.161100000001696e-05, 6.162500000000959e-05, 6.158400000000341e-05, 6.159699999996882e-05, 6.158400000000341e-05, 6.159700000002433e-05, 6.159800000005156e-05, 6.162500000000959e-05, 6.162500000000959e-05, 6.152700000000566e-05, 6.161100000001696e-05, 6.158299999997618e-05, 6.163900000000222e-05, 6.159700000002433e-05, 6.159700000002433e-05, 6.159699999996882e-05, 6.159699999996882e-05, 6.162500000000959e-05, 6.161200000004419e-05, 6.161100000001696e-05, 6.159699999996882e-05, 6.15700000000663e-05, 6.166699999998748e-05, 6.161100000001696e-05, 6.159699999996882e-05, 6.16250000000651e-05, 6.162499999995408e-05, 6.161100000001696e-05, 6.158400000000341e-05, 6.162499999995408e-05, 6.161099999990594e-05, 6.16250000000651e-05, 6.162499999995408e-05, 6.159699999996882e-05, 6.161100000001696e-05, 6.159800000005156e-05, 6.16250000000651e-05, 6.161100000001696e-05, 6.159700000007984e-05, 6.161100000001696e-05, 6.159699999996882e-05, 6.162499999995408e-05]</msg>
<status status="PASS" starttime="20201112 12:26:17.245" endtime="20201112 12:26:17.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.240" endtime="20201112 12:26:17.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.250" endtime="20201112 12:26:17.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.253" endtime="20201112 12:26:17.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.252" endtime="20201112 12:26:17.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.248" endtime="20201112 12:26:17.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.960" endtime="20201112 12:26:17.274"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:15.890" endtime="20201112 12:26:17.275" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:51.082" endtime="20201112 12:26:17.283"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.353" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:17.361" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:18.812" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:17.352" endtime="20201112 12:26:18.813"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.815" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:18.814" endtime="20201112 12:26:18.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.350" endtime="20201112 12:26:18.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.818" endtime="20201112 12:26:19.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.817" endtime="20201112 12:26:19.005"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.018" endtime="20201112 12:26:19.031"></status>
</kw>
<msg timestamp="20201112 12:26:19.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.016" endtime="20201112 12:26:19.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.033" endtime="20201112 12:26:19.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.037" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:19.035" endtime="20201112 12:26:19.038"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.014" endtime="20201112 12:26:19.038"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.011" endtime="20201112 12:26:19.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.010" endtime="20201112 12:26:19.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:19.043" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:19.042" endtime="20201112 12:26:19.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.040" endtime="20201112 12:26:19.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.009" endtime="20201112 12:26:19.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.008" endtime="20201112 12:26:19.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.045" endtime="20201112 12:26:19.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.007" endtime="20201112 12:26:19.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.048" endtime="20201112 12:26:19.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.005" endtime="20201112 12:26:19.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.349" endtime="20201112 12:26:19.050"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.056" endtime="20201112 12:26:19.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.055" endtime="20201112 12:26:19.076"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.089" endtime="20201112 12:26:19.102"></status>
</kw>
<msg timestamp="20201112 12:26:19.102" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.088" endtime="20201112 12:26:19.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.103" endtime="20201112 12:26:19.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.108" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:19.106" endtime="20201112 12:26:19.108"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.085" endtime="20201112 12:26:19.109"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.083" endtime="20201112 12:26:19.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.082" endtime="20201112 12:26:19.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:19.115" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:19.113" endtime="20201112 12:26:19.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.110" endtime="20201112 12:26:19.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.081" endtime="20201112 12:26:19.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.080" endtime="20201112 12:26:19.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.117" endtime="20201112 12:26:19.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.079" endtime="20201112 12:26:19.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.077" endtime="20201112 12:26:19.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.053" endtime="20201112 12:26:19.119"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.130" endtime="20201112 12:26:19.143"></status>
</kw>
<msg timestamp="20201112 12:26:19.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.128" endtime="20201112 12:26:19.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.145" endtime="20201112 12:26:19.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.147" endtime="20201112 12:26:19.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.125" endtime="20201112 12:26:19.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.123" endtime="20201112 12:26:19.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.156" endtime="20201112 12:26:19.447"></status>
</kw>
<msg timestamp="20201112 12:26:19.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065193458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065212389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.155" endtime="20201112 12:26:19.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065193458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065212389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.451" endtime="20201112 12:26:19.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.460" endtime="20201112 12:26:19.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.152" endtime="20201112 12:26:19.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.150" endtime="20201112 12:26:19.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.467" level="INFO">${RESULT} = [{'time': 0.065212389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.893099999999981e-05, 'source_diff': 1.893099999999981e-05}, {'time': 0.065260028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:19.463" endtime="20201112 12:26:19.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:19.480" level="INFO">${ACCURACY} = {'diff': [1.893099999999981e-05, 1.8056000000002403e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.7957999999998475e-05, 1.7957999999998475e-05, 1.8000000000004124e-05, 1.8013999999996755e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:19.468" endtime="20201112 12:26:19.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.485" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:19.484" endtime="20201112 12:26:19.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.487" level="INFO">VALUE: [1.893099999999981e-05, 1.8056000000002403e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.7957999999998475e-05, 1.7957999999998475e-05, 1.8000000000004124e-05, 1.8013999999996755e-05, 1.8013999999996755e-05, 1.8014000000010633e-05, 1.7944000000005844e-05, 1.8028000000003264e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.8013999999996755e-05, 1.8000000000004124e-05, 1.7929999999999335e-05, 1.7985999999997615e-05, 1.8027999999989386e-05, 1.806899999999556e-05, 1.8013999999996755e-05, 1.8000000000004124e-05, 1.7999999999990246e-05, 1.8013999999996755e-05, 1.8028000000003264e-05, 1.7999999999990246e-05, 1.8055999999988526e-05, 1.8000000000004124e-05, 1.7957999999998475e-05, 1.8042000000009772e-05, 1.8013999999996755e-05, 1.801299999999728e-05, 1.7999999999990246e-05, 1.8069999999995034e-05, 1.8000000000004124e-05, 1.7999999999990246e-05, 1.8027999999989386e-05, 1.8000000000004124e-05, 1.7985999999997615e-05, 1.8041999999995895e-05, 1.8014000000010633e-05, 1.8013999999996755e-05, 1.8000000000004124e-05, 1.7945000000005318e-05, 1.795899999999795e-05, 1.7999999999990246e-05, 1.7929999999999335e-05, 1.8013999999996755e-05]</msg>
<status status="PASS" starttime="20201112 12:26:19.486" endtime="20201112 12:26:19.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.481" endtime="20201112 12:26:19.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.491" endtime="20201112 12:26:19.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.495" endtime="20201112 12:26:19.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.494" endtime="20201112 12:26:19.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.489" endtime="20201112 12:26:19.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.122" endtime="20201112 12:26:19.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.121" endtime="20201112 12:26:19.516"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.525" endtime="20201112 12:26:19.539"></status>
</kw>
<msg timestamp="20201112 12:26:19.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.523" endtime="20201112 12:26:19.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.540" endtime="20201112 12:26:19.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.542" endtime="20201112 12:26:19.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.521" endtime="20201112 12:26:19.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.519" endtime="20201112 12:26:19.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.552" endtime="20201112 12:26:19.837"></status>
</kw>
<msg timestamp="20201112 12:26:19.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021557444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.550" endtime="20201112 12:26:19.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021557444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.842" endtime="20201112 12:26:19.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.850" endtime="20201112 12:26:19.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.547" endtime="20201112 12:26:19.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.546" endtime="20201112 12:26:19.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.857" level="INFO">${RESULT} = [{'time': 0.021557444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8929999999996866e-05, 'source_diff': 1.8929999999996866e-05}, {'time': 0.021604139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:19.853" endtime="20201112 12:26:19.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:19.870" level="INFO">${ACCURACY} = {'diff': [1.8929999999996866e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8042000000002834e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.794500000000185e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:19.858" endtime="20201112 12:26:19.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.875" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:19.874" endtime="20201112 12:26:19.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.877" level="INFO">VALUE: [1.8929999999996866e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8042000000002834e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.794500000000185e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.7986000000001084e-05, 1.8041999999999364e-05, 1.8013999999996755e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8055999999998934e-05, 1.7985999999997615e-05, 1.8014000000000224e-05, 1.804099999999989e-05, 1.8000000000000654e-05, 1.8055999999998934e-05, 1.8000000000000654e-05, 1.802700000000032e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.7985999999997615e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.801300000000075e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.7929999999999335e-05, 1.7986000000001084e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.8000000000000654e-05, 1.8014000000000224e-05]</msg>
<status status="PASS" starttime="20201112 12:26:19.876" endtime="20201112 12:26:19.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.871" endtime="20201112 12:26:19.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.881" endtime="20201112 12:26:19.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.885" endtime="20201112 12:26:19.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.884" endtime="20201112 12:26:19.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.879" endtime="20201112 12:26:19.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.517" endtime="20201112 12:26:19.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.517" endtime="20201112 12:26:19.907"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.915" endtime="20201112 12:26:19.929"></status>
</kw>
<msg timestamp="20201112 12:26:19.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.914" endtime="20201112 12:26:19.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.930" endtime="20201112 12:26:19.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.933" endtime="20201112 12:26:19.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.911" endtime="20201112 12:26:19.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.909" endtime="20201112 12:26:19.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.942" endtime="20201112 12:26:20.228"></status>
</kw>
<msg timestamp="20201112 12:26:20.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021591153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.940" endtime="20201112 12:26:20.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021591153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.232" endtime="20201112 12:26:20.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.241" endtime="20201112 12:26:20.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.938" endtime="20201112 12:26:20.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.936" endtime="20201112 12:26:20.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.247" level="INFO">${RESULT} = [{'time': 0.021591153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.893099999999981e-05, 'source_diff': 1.893099999999981e-05}, {'time': 0.021636861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:20.244" endtime="20201112 12:26:20.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:20.261" level="INFO">${ACCURACY} = {'diff': [1.893099999999981e-05, 1.8000000000000654e-05, 1.806899999999903e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7943999999998905e-05, 1.805499999999946e-05, 1...</msg>
<status status="PASS" starttime="20201112 12:26:20.248" endtime="20201112 12:26:20.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.265" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:20.264" endtime="20201112 12:26:20.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.268" level="INFO">VALUE: [1.893099999999981e-05, 1.8000000000000654e-05, 1.806899999999903e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7943999999998905e-05, 1.805499999999946e-05, 1.8000000000000654e-05, 1.7987000000000558e-05, 1.7999999999997185e-05, 1.8041999999999364e-05, 1.7986000000001084e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.801299999999728e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7999999999997185e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.794499999999838e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.80829999999986e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8055999999998934e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7985999999997615e-05, 1.7985999999997615e-05, 1.80829999999986e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.7999999999997185e-05]</msg>
<status status="PASS" starttime="20201112 12:26:20.267" endtime="20201112 12:26:20.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.262" endtime="20201112 12:26:20.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.272" endtime="20201112 12:26:20.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.277" endtime="20201112 12:26:20.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.276" endtime="20201112 12:26:20.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.270" endtime="20201112 12:26:20.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.908" endtime="20201112 12:26:20.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.907" endtime="20201112 12:26:20.298"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.307" endtime="20201112 12:26:20.321"></status>
</kw>
<msg timestamp="20201112 12:26:20.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.306" endtime="20201112 12:26:20.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.322" endtime="20201112 12:26:20.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.325" endtime="20201112 12:26:20.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.303" endtime="20201112 12:26:20.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.301" endtime="20201112 12:26:20.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.334" endtime="20201112 12:26:20.619"></status>
</kw>
<msg timestamp="20201112 12:26:20.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.332" endtime="20201112 12:26:20.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.624" endtime="20201112 12:26:20.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.632" endtime="20201112 12:26:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.330" endtime="20201112 12:26:20.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.328" endtime="20201112 12:26:20.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.639" level="INFO">${RESULT} = [{'time': 0.021780125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8943999999999905e-05, 'source_diff': 1.8943999999999905e-05}, {'time': 0.021822417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:20.635" endtime="20201112 12:26:20.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:20.652" level="INFO">${ACCURACY} = {'diff': [1.8943999999999905e-05, 1.7973000000000988e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8042000000002834e-05, 1.7985999999997615e-05, 1.8000000000000654e-05...</msg>
<status status="PASS" starttime="20201112 12:26:20.640" endtime="20201112 12:26:20.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.657" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:20.656" endtime="20201112 12:26:20.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.659" level="INFO">VALUE: [1.8943999999999905e-05, 1.7973000000000988e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8042000000002834e-05, 1.7985999999997615e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.805499999999946e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.8014000000000224e-05, 1.7985999999997615e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.7972000000001515e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.7985999999997615e-05, 1.8000000000000654e-05, 1.7999999999997185e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.8014000000000224e-05, 1.7986000000001084e-05, 1.8027999999999794e-05, 1.8000000000000654e-05]</msg>
<status status="PASS" starttime="20201112 12:26:20.658" endtime="20201112 12:26:20.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.653" endtime="20201112 12:26:20.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.663" endtime="20201112 12:26:20.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.667" endtime="20201112 12:26:20.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.665" endtime="20201112 12:26:20.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.661" endtime="20201112 12:26:20.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.299" endtime="20201112 12:26:20.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.299" endtime="20201112 12:26:20.688"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.697" endtime="20201112 12:26:20.711"></status>
</kw>
<msg timestamp="20201112 12:26:20.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.695" endtime="20201112 12:26:20.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.712" endtime="20201112 12:26:20.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.715" endtime="20201112 12:26:20.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.693" endtime="20201112 12:26:20.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.691" endtime="20201112 12:26:20.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.724" endtime="20201112 12:26:21.010"></status>
</kw>
<msg timestamp="20201112 12:26:21.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021501069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.722" endtime="20201112 12:26:21.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021501069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.014" endtime="20201112 12:26:21.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.022" endtime="20201112 12:26:21.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.720" endtime="20201112 12:26:21.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.718" endtime="20201112 12:26:21.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.029" level="INFO">${RESULT} = [{'time': 0.021501069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8888000000001626e-05, 'source_diff': 1.8888000000001626e-05}, {'time': 0.021538361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:21.025" endtime="20201112 12:26:21.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:21.042" level="INFO">${ACCURACY} = {'diff': [1.8888000000001626e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.793100000000228e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.7999999999997185e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:21.030" endtime="20201112 12:26:21.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.047" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.046" endtime="20201112 12:26:21.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.049" level="INFO">VALUE: [1.8888000000001626e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.793100000000228e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.802700000000032e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.802700000000032e-05, 1.8042000000002834e-05, 1.8014000000000224e-05, 1.7985999999997615e-05, 1.8027999999999794e-05, 1.7986000000001084e-05, 1.7986000000001084e-05, 1.802700000000032e-05, 1.8014000000000224e-05, 1.7985999999997615e-05, 1.8013999999996755e-05, 1.805499999999946e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.801300000000075e-05, 1.7986000000001084e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.801300000000075e-05, 1.7971999999998045e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8028000000003264e-05, 1.794500000000185e-05, 1.7985999999997615e-05]</msg>
<status status="PASS" starttime="20201112 12:26:21.048" endtime="20201112 12:26:21.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.043" endtime="20201112 12:26:21.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.053" endtime="20201112 12:26:21.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.057" endtime="20201112 12:26:21.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.056" endtime="20201112 12:26:21.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.051" endtime="20201112 12:26:21.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.689" endtime="20201112 12:26:21.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.689" endtime="20201112 12:26:21.078"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.087" endtime="20201112 12:26:21.101"></status>
</kw>
<msg timestamp="20201112 12:26:21.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.085" endtime="20201112 12:26:21.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.102" endtime="20201112 12:26:21.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.105" endtime="20201112 12:26:21.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.083" endtime="20201112 12:26:21.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.081" endtime="20201112 12:26:21.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.114" endtime="20201112 12:26:21.400"></status>
</kw>
<msg timestamp="20201112 12:26:21.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.113" endtime="20201112 12:26:21.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.404" endtime="20201112 12:26:21.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.412" endtime="20201112 12:26:21.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.110" endtime="20201112 12:26:21.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.108" endtime="20201112 12:26:21.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.419" level="INFO">${RESULT} = [{'time': 0.021506097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3832999999997412e-05, 'source_diff': 2.3832999999997412e-05}, {'time': 0.021545736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:21.416" endtime="20201112 12:26:21.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:21.432" level="INFO">${ACCURACY} = {'diff': [2.3832999999997412e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.290299999999773e-05, 2.29030000000012e-05, 2.286099999999902e-05, 2.2874...</msg>
<status status="PASS" starttime="20201112 12:26:21.420" endtime="20201112 12:26:21.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.437" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.436" endtime="20201112 12:26:21.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.440" level="INFO">VALUE: [2.3832999999997412e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.290299999999773e-05, 2.29030000000012e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286100000000249e-05, 2.294499999999991e-05, 2.284699999999945e-05, 2.284699999999945e-05, 2.288900000000163e-05, 2.284700000000292e-05, 2.2862000000001964e-05, 2.286100000000249e-05, 2.288900000000163e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.280500000000074e-05, 2.2819999999999785e-05, 2.291700000000077e-05, 2.2819999999999785e-05, 2.29030000000012e-05, 2.2930000000000866e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.2833999999999355e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.283299999999988e-05, 2.288899999999816e-05, 2.288900000000163e-05, 2.290299999999773e-05, 2.286099999999902e-05, 2.2930000000000866e-05, 2.286100000000249e-05, 2.29169999999973e-05, 2.286100000000249e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.280500000000074e-05, 2.284699999999945e-05, 2.286100000000249e-05, 2.288899999999816e-05]</msg>
<status status="PASS" starttime="20201112 12:26:21.438" endtime="20201112 12:26:21.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.433" endtime="20201112 12:26:21.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.443" endtime="20201112 12:26:21.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.447" endtime="20201112 12:26:21.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.446" endtime="20201112 12:26:21.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.442" endtime="20201112 12:26:21.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.079" endtime="20201112 12:26:21.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.079" endtime="20201112 12:26:21.468"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.477" endtime="20201112 12:26:21.491"></status>
</kw>
<msg timestamp="20201112 12:26:21.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.476" endtime="20201112 12:26:21.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.493" endtime="20201112 12:26:21.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.495" endtime="20201112 12:26:21.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.473" endtime="20201112 12:26:21.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.471" endtime="20201112 12:26:21.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.504" endtime="20201112 12:26:21.790"></status>
</kw>
<msg timestamp="20201112 12:26:21.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021890514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.503" endtime="20201112 12:26:21.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021890514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.794" endtime="20201112 12:26:21.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.802" endtime="20201112 12:26:21.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.500" endtime="20201112 12:26:21.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.498" endtime="20201112 12:26:21.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.809" level="INFO">${RESULT} = [{'time': 0.021890514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3791999999998176e-05, 'source_diff': 2.3791999999998176e-05}, {'time': 0.021947319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:21.805" endtime="20201112 12:26:21.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:21.822" level="INFO">${ACCURACY} = {'diff': [2.3791999999998176e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.284700000000292e-05, 2.2847999999998925e-05, 2.288900000000163e-05, 2.287499999999859e-05, 2.28...</msg>
<status status="PASS" starttime="20201112 12:26:21.810" endtime="20201112 12:26:21.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.827" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.826" endtime="20201112 12:26:21.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.829" level="INFO">VALUE: [2.3791999999998176e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.284700000000292e-05, 2.2847999999998925e-05, 2.288900000000163e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.291700000000077e-05, 2.286099999999902e-05, 2.287500000000206e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.2847999999998925e-05, 2.287500000000206e-05, 2.2848000000002394e-05, 2.288899999999816e-05, 2.287500000000206e-05, 2.286099999999902e-05, 2.280500000000074e-05, 2.280500000000074e-05, 2.293100000000034e-05, 2.293100000000034e-05, 2.287499999999859e-05, 2.2833999999999355e-05, 2.286099999999902e-05, 2.2848000000002394e-05, 2.2790999999997702e-05, 2.2901999999998257e-05, 2.283299999999988e-05, 2.286099999999902e-05, 2.287500000000206e-05, 2.286099999999902e-05, 2.287500000000206e-05, 2.286099999999902e-05, 2.294499999999991e-05, 2.288900000000163e-05, 2.286099999999902e-05, 2.288900000000163e-05, 2.290299999999773e-05, 2.286100000000249e-05, 2.279100000000117e-05, 2.286100000000249e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.287500000000206e-05, 2.2888000000002157e-05, 2.2862000000001964e-05]</msg>
<status status="PASS" starttime="20201112 12:26:21.828" endtime="20201112 12:26:21.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.823" endtime="20201112 12:26:21.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.833" endtime="20201112 12:26:21.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.838" endtime="20201112 12:26:21.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.837" endtime="20201112 12:26:21.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.831" endtime="20201112 12:26:21.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.469" endtime="20201112 12:26:21.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.469" endtime="20201112 12:26:21.859"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.868" endtime="20201112 12:26:21.882"></status>
</kw>
<msg timestamp="20201112 12:26:21.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.867" endtime="20201112 12:26:21.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.883" endtime="20201112 12:26:21.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.886" endtime="20201112 12:26:21.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.864" endtime="20201112 12:26:21.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.862" endtime="20201112 12:26:21.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.895" endtime="20201112 12:26:22.181"></status>
</kw>
<msg timestamp="20201112 12:26:22.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579792, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:21.893" endtime="20201112 12:26:22.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579792, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:22.185" endtime="20201112 12:26:22.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.193" endtime="20201112 12:26:22.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.891" endtime="20201112 12:26:22.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.889" endtime="20201112 12:26:22.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.200" level="INFO">${RESULT} = [{'time': 0.021579792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3792000000001645e-05, 'source_diff': 2.3792000000001645e-05}, {'time': 0.021624444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:22.197" endtime="20201112 12:26:22.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:22.214" level="INFO">${ACCURACY} = {'diff': [2.3792000000001645e-05, 2.286099999999902e-05, 2.2916000000001296e-05, 2.286099999999902e-05, 2.287500000000206e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.28...</msg>
<status status="PASS" starttime="20201112 12:26:22.201" endtime="20201112 12:26:22.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.218" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:26:22.217" endtime="20201112 12:26:22.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.221" level="INFO">VALUE: [2.3792000000001645e-05, 2.286099999999902e-05, 2.2916000000001296e-05, 2.286099999999902e-05, 2.287500000000206e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.2819999999999785e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.293100000000034e-05, 2.286100000000249e-05, 2.286100000000249e-05, 2.288900000000163e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.284699999999945e-05, 2.287500000000206e-05, 2.287499999999859e-05, 2.2834000000002824e-05, 2.286099999999902e-05, 2.2847999999998925e-05, 2.287500000000206e-05, 2.2848000000002394e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.2847999999998925e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.2847999999998925e-05, 2.286099999999902e-05, 2.280500000000074e-05, 2.284700000000292e-05, 2.287499999999859e-05, 2.280500000000074e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.284699999999945e-05, 2.283299999999988e-05, 2.286100000000249e-05, 2.286099999999902e-05, 2.2848000000002394e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.2847999999998925e-05, 2.286099999999902e-05, 2.287499999999859e-05]</msg>
<status status="PASS" starttime="20201112 12:26:22.219" endtime="20201112 12:26:22.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.215" endtime="20201112 12:26:22.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.335" endtime="20201112 12:26:22.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.342" endtime="20201112 12:26:22.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.337" endtime="20201112 12:26:22.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.333" endtime="20201112 12:26:22.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.860" endtime="20201112 12:26:22.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.860" endtime="20201112 12:26:22.367"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.386" endtime="20201112 12:26:22.407"></status>
</kw>
<msg timestamp="20201112 12:26:22.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.382" endtime="20201112 12:26:22.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.410" endtime="20201112 12:26:22.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.415" endtime="20201112 12:26:22.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.377" endtime="20201112 12:26:22.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.373" endtime="20201112 12:26:22.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.435" endtime="20201112 12:26:22.723"></status>
</kw>
<msg timestamp="20201112 12:26:22.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036975389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036999181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.431" endtime="20201112 12:26:22.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036975389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036999181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.727" endtime="20201112 12:26:22.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.735" endtime="20201112 12:26:22.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.426" endtime="20201112 12:26:22.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.422" endtime="20201112 12:26:22.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.742" level="INFO">${RESULT} = [{'time': 0.036999181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3792000000001645e-05, 'source_diff': 2.3792000000001645e-05}, {'time': 0.037036333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:22.739" endtime="20201112 12:26:22.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:22.755" level="INFO">${ACCURACY} = {'diff': [2.3792000000001645e-05, 2.288899999999816e-05, 2.2862000000005434e-05, 2.2888000000005626e-05, 2.284699999999945e-05, 2.283299999999988e-05, 2.2847999999998925e-05, 2.286099999999902e-05, 2....</msg>
<status status="PASS" starttime="20201112 12:26:22.743" endtime="20201112 12:26:22.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.760" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:26:22.759" endtime="20201112 12:26:22.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.762" level="INFO">VALUE: [2.3792000000001645e-05, 2.288899999999816e-05, 2.2862000000005434e-05, 2.2888000000005626e-05, 2.284699999999945e-05, 2.283299999999988e-05, 2.2847999999998925e-05, 2.286099999999902e-05, 2.290299999999773e-05, 2.287499999999859e-05, 2.293099999999687e-05, 2.2901999999998257e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.2861999999998495e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.288899999999816e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.2778000000001075e-05, 2.2806000000000215e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.287500000000553e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.2848000000005864e-05, 2.286100000000596e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.2833999999999355e-05, 2.286100000000596e-05, 2.283299999999988e-05, 2.287500000000553e-05, 2.286099999999902e-05, 2.283299999999988e-05, 2.290299999999773e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.2862000000005434e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.286100000000596e-05, 2.287499999999859e-05, 2.286099999999902e-05]</msg>
<status status="PASS" starttime="20201112 12:26:22.761" endtime="20201112 12:26:22.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.756" endtime="20201112 12:26:22.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.766" endtime="20201112 12:26:22.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.770" endtime="20201112 12:26:22.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.769" endtime="20201112 12:26:22.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.764" endtime="20201112 12:26:22.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.369" endtime="20201112 12:26:22.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.368" endtime="20201112 12:26:22.791"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.800" endtime="20201112 12:26:22.814"></status>
</kw>
<msg timestamp="20201112 12:26:22.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.798" endtime="20201112 12:26:22.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.816" endtime="20201112 12:26:22.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.818" endtime="20201112 12:26:22.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.796" endtime="20201112 12:26:22.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.794" endtime="20201112 12:26:22.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.827" endtime="20201112 12:26:23.112"></status>
</kw>
<msg timestamp="20201112 12:26:23.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.826" endtime="20201112 12:26:23.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.117" endtime="20201112 12:26:23.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.125" endtime="20201112 12:26:23.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.823" endtime="20201112 12:26:23.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.821" endtime="20201112 12:26:23.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.132" level="INFO">${RESULT} = [{'time': 0.021706403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3805999999997746e-05, 'source_diff': 2.3805999999997746e-05}, {'time': 0.02175125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:23.128" endtime="20201112 12:26:23.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.145" level="INFO">${ACCURACY} = {'diff': [2.3805999999997746e-05, 2.7722000000000857e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.772300000000033e-05, 2.286099999999902e-05, 2.7777999999999137e-05, 2.7679999999998678e-05, 2....</msg>
<status status="PASS" starttime="20201112 12:26:23.133" endtime="20201112 12:26:23.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.150" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.149" endtime="20201112 12:26:23.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.152" level="INFO">VALUE: [2.3805999999997746e-05, 2.7722000000000857e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.772300000000033e-05, 2.286099999999902e-05, 2.7777999999999137e-05, 2.7679999999998678e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.288900000000163e-05, 2.286100000000249e-05, 2.2833999999999355e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.286100000000249e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.2888000000002157e-05, 2.2834000000002824e-05, 2.281900000000031e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.288900000000163e-05, 2.286100000000249e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.772300000000033e-05, 2.284699999999945e-05, 2.284699999999945e-05, 2.766700000000205e-05, 2.291700000000077e-05, 2.2806000000000215e-05, 2.284699999999945e-05, 2.286100000000249e-05, 2.287499999999859e-05, 2.287500000000206e-05, 2.287500000000206e-05, 2.2847999999998925e-05, 2.2862000000001964e-05, 2.2861999999998495e-05, 2.7708000000001287e-05, 2.287500000000206e-05, 2.281900000000031e-05]</msg>
<status status="PASS" starttime="20201112 12:26:23.151" endtime="20201112 12:26:23.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.146" endtime="20201112 12:26:23.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.156" endtime="20201112 12:26:23.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.160" endtime="20201112 12:26:23.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.158" endtime="20201112 12:26:23.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.154" endtime="20201112 12:26:23.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.792" endtime="20201112 12:26:23.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.792" endtime="20201112 12:26:23.181"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.190" endtime="20201112 12:26:23.204"></status>
</kw>
<msg timestamp="20201112 12:26:23.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.188" endtime="20201112 12:26:23.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.205" endtime="20201112 12:26:23.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.208" endtime="20201112 12:26:23.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.185" endtime="20201112 12:26:23.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.183" endtime="20201112 12:26:23.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.217" endtime="20201112 12:26:23.504"></status>
</kw>
<msg timestamp="20201112 12:26:23.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.216" endtime="20201112 12:26:23.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.508" endtime="20201112 12:26:23.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.517" endtime="20201112 12:26:23.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.213" endtime="20201112 12:26:23.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.211" endtime="20201112 12:26:23.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.523" level="INFO">${RESULT} = [{'time': 0.021683417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8653000000000012e-05, 'source_diff': 2.8653000000000012e-05}, {'time': 0.021742306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:23.520" endtime="20201112 12:26:23.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.537" level="INFO">${ACCURACY} = {'diff': [2.8653000000000012e-05, 2.7749999999999997e-05, 2.7722000000000857e-05, 2.7707999999997818e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7721999999997388e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:23.524" endtime="20201112 12:26:23.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.542" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.541" endtime="20201112 12:26:23.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.544" level="INFO">VALUE: [2.8653000000000012e-05, 2.7749999999999997e-05, 2.7722000000000857e-05, 2.7707999999997818e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.770900000000076e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 2.7707999999997818e-05, 2.772299999999686e-05, 2.770900000000076e-05, 2.772300000000033e-05, 2.772300000000033e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.770899999999729e-05, 2.7707999999997818e-05, 2.7721999999997388e-05, 2.770900000000076e-05, 2.7707999999997818e-05, 2.7707999999997818e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7707999999997818e-05, 2.770899999999729e-05, 2.7707999999997818e-05, 2.7749999999999997e-05, 2.766700000000205e-05, 2.772300000000033e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.7707999999997818e-05, 2.7749999999999997e-05, 2.7721999999997388e-05, 2.772300000000033e-05, 2.7749999999999997e-05, 2.772300000000033e-05, 2.7736000000000427e-05, 2.7736000000000427e-05]</msg>
<status status="PASS" starttime="20201112 12:26:23.543" endtime="20201112 12:26:23.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.538" endtime="20201112 12:26:23.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.548" endtime="20201112 12:26:23.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.553" endtime="20201112 12:26:23.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.551" endtime="20201112 12:26:23.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.546" endtime="20201112 12:26:23.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.182" endtime="20201112 12:26:23.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.181" endtime="20201112 12:26:23.574"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.583" endtime="20201112 12:26:23.597"></status>
</kw>
<msg timestamp="20201112 12:26:23.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.581" endtime="20201112 12:26:23.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.598" endtime="20201112 12:26:23.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.601" endtime="20201112 12:26:23.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.578" endtime="20201112 12:26:23.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.576" endtime="20201112 12:26:23.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.610" endtime="20201112 12:26:23.895"></status>
</kw>
<msg timestamp="20201112 12:26:23.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.608" endtime="20201112 12:26:23.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.899" endtime="20201112 12:26:23.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.907" endtime="20201112 12:26:23.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.606" endtime="20201112 12:26:23.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.604" endtime="20201112 12:26:23.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.914" level="INFO">${RESULT} = [{'time': 0.021597167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.868099999999915e-05, 'source_diff': 2.868099999999915e-05}, {'time': 0.021652264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:23.911" endtime="20201112 12:26:23.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.928" level="INFO">${ACCURACY} = {'diff': [2.868099999999915e-05, 2.766700000000205e-05, 2.7722000000000857e-05, 2.768100000000162e-05, 2.7721999999997388e-05, 2.772300000000033e-05, 2.7736000000000427e-05, 2.7791999999998707e-05, 2....</msg>
<status status="PASS" starttime="20201112 12:26:23.915" endtime="20201112 12:26:23.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.932" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.931" endtime="20201112 12:26:23.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.935" level="INFO">VALUE: [2.868099999999915e-05, 2.766700000000205e-05, 2.7722000000000857e-05, 2.768100000000162e-05, 2.7721999999997388e-05, 2.772300000000033e-05, 2.7736000000000427e-05, 2.7791999999998707e-05, 2.772300000000033e-05, 2.7708000000001287e-05, 2.7735999999996958e-05, 2.7708000000001287e-05, 2.770900000000076e-05, 2.7736000000000427e-05, 2.772300000000033e-05, 2.7721999999997388e-05, 2.7708000000001287e-05, 2.772300000000033e-05, 2.77369999999999e-05, 2.7791999999998707e-05, 2.7749999999999997e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.7721999999997388e-05, 2.7776999999999663e-05, 2.7721999999997388e-05, 2.7722000000000857e-05, 2.7707999999997818e-05, 2.7722000000000857e-05, 2.772300000000033e-05, 2.7722000000000857e-05, 2.7792000000002176e-05, 2.769499999999772e-05, 2.7722000000000857e-05, 2.7665999999999108e-05, 2.772300000000033e-05, 2.7708000000001287e-05, 2.7736000000000427e-05, 2.7708000000001287e-05, 2.768099999999815e-05, 2.7721999999997388e-05, 2.7707999999997818e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.7708000000001287e-05, 2.770900000000076e-05, 2.7736000000000427e-05, 2.7736000000000427e-05]</msg>
<status status="PASS" starttime="20201112 12:26:23.933" endtime="20201112 12:26:23.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.929" endtime="20201112 12:26:23.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.939" endtime="20201112 12:26:23.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.943" endtime="20201112 12:26:23.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.940" endtime="20201112 12:26:23.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.937" endtime="20201112 12:26:23.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.575" endtime="20201112 12:26:23.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.574" endtime="20201112 12:26:23.964"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.972" endtime="20201112 12:26:23.987"></status>
</kw>
<msg timestamp="20201112 12:26:23.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.971" endtime="20201112 12:26:23.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.988" endtime="20201112 12:26:23.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.991" endtime="20201112 12:26:23.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.968" endtime="20201112 12:26:23.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.966" endtime="20201112 12:26:23.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.000" endtime="20201112 12:26:24.286"></status>
</kw>
<msg timestamp="20201112 12:26:24.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.998" endtime="20201112 12:26:24.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.290" endtime="20201112 12:26:24.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.299" endtime="20201112 12:26:24.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.995" endtime="20201112 12:26:24.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.994" endtime="20201112 12:26:24.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.305" level="INFO">${RESULT} = [{'time': 0.021802181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8653000000000012e-05, 'source_diff': 2.8653000000000012e-05}, {'time': 0.021846417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:24.302" endtime="20201112 12:26:24.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.319" level="INFO">${ACCURACY} = {'diff': [2.8653000000000012e-05, 2.7749999999999997e-05, 2.770900000000076e-05, 2.770900000000076e-05, 2.770900000000076e-05, 2.772300000000033e-05, 2.7735999999996958e-05, 2.7722000000000857e-05, 2....</msg>
<status status="PASS" starttime="20201112 12:26:24.306" endtime="20201112 12:26:24.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.323" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.322" endtime="20201112 12:26:24.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.326" level="INFO">VALUE: [2.8653000000000012e-05, 2.7749999999999997e-05, 2.770900000000076e-05, 2.770900000000076e-05, 2.770900000000076e-05, 2.772300000000033e-05, 2.7735999999996958e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 2.7777999999999137e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7665999999999108e-05, 2.7708000000001287e-05, 2.7694000000001717e-05, 2.770900000000076e-05, 2.772300000000033e-05, 2.7736000000000427e-05, 2.7721999999997388e-05, 2.77369999999999e-05, 2.7722000000000857e-05, 2.7708000000001287e-05, 2.7708000000001287e-05, 2.7749999999999997e-05, 2.7708000000001287e-05, 2.7735999999996958e-05, 2.7721999999997388e-05, 2.7721999999997388e-05, 2.7749999999999997e-05, 2.7708000000001287e-05, 2.769500000000119e-05, 2.77369999999999e-05, 2.772300000000033e-05, 2.772300000000033e-05, 2.766700000000205e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.772300000000033e-05, 2.7749999999999997e-05, 2.772300000000033e-05, 2.7722000000000857e-05]</msg>
<status status="PASS" starttime="20201112 12:26:24.325" endtime="20201112 12:26:24.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.320" endtime="20201112 12:26:24.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.330" endtime="20201112 12:26:24.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.334" endtime="20201112 12:26:24.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.332" endtime="20201112 12:26:24.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.328" endtime="20201112 12:26:24.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.964" endtime="20201112 12:26:24.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.964" endtime="20201112 12:26:24.355"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.363" endtime="20201112 12:26:24.378"></status>
</kw>
<msg timestamp="20201112 12:26:24.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.362" endtime="20201112 12:26:24.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.379" endtime="20201112 12:26:24.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.381" endtime="20201112 12:26:24.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.359" endtime="20201112 12:26:24.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.357" endtime="20201112 12:26:24.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.391" endtime="20201112 12:26:24.676"></status>
</kw>
<msg timestamp="20201112 12:26:24.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.389" endtime="20201112 12:26:24.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.681" endtime="20201112 12:26:24.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.689" endtime="20201112 12:26:24.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.386" endtime="20201112 12:26:24.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.385" endtime="20201112 12:26:24.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.695" level="INFO">${RESULT} = [{'time': 0.021526611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8679999999999678e-05, 'source_diff': 2.8679999999999678e-05}, {'time': 0.021583583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:24.692" endtime="20201112 12:26:24.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.709" level="INFO">${ACCURACY} = {'diff': [2.8679999999999678e-05, 2.7722000000000857e-05, 2.7708000000001287e-05, 2.766700000000205e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.769500000000119e-05, 2.7721999999997388e-05, ...</msg>
<status status="PASS" starttime="20201112 12:26:24.696" endtime="20201112 12:26:24.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.713" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.712" endtime="20201112 12:26:24.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.716" level="INFO">VALUE: [2.8679999999999678e-05, 2.7722000000000857e-05, 2.7708000000001287e-05, 2.766700000000205e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.769500000000119e-05, 2.7721999999997388e-05, 2.770900000000076e-05, 2.7749999999999997e-05, 2.7764000000003036e-05, 2.7722000000000857e-05, 2.7763999999999567e-05, 2.7707999999997818e-05, 2.7708000000001287e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.7722000000000857e-05, 2.7792000000002176e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.7722000000000857e-05, 2.7708000000001287e-05, 2.770900000000076e-05, 2.769500000000119e-05, 2.768100000000162e-05, 2.7721999999997388e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.772300000000033e-05, 2.7693999999998248e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 2.7694000000001717e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.772300000000033e-05, 2.7736000000000427e-05, 2.772300000000033e-05, 2.7721999999997388e-05, 2.770900000000076e-05, 2.7708000000001287e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.772300000000033e-05, 2.7722000000000857e-05]</msg>
<status status="PASS" starttime="20201112 12:26:24.715" endtime="20201112 12:26:24.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.710" endtime="20201112 12:26:24.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.720" endtime="20201112 12:26:24.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.724" endtime="20201112 12:26:24.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.723" endtime="20201112 12:26:24.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.718" endtime="20201112 12:26:24.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.356" endtime="20201112 12:26:24.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.355" endtime="20201112 12:26:24.745"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.754" endtime="20201112 12:26:24.768"></status>
</kw>
<msg timestamp="20201112 12:26:24.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.752" endtime="20201112 12:26:24.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.770" endtime="20201112 12:26:24.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.772" endtime="20201112 12:26:24.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.749" endtime="20201112 12:26:24.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.747" endtime="20201112 12:26:24.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.781" endtime="20201112 12:26:25.067"></status>
</kw>
<msg timestamp="20201112 12:26:25.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.779" endtime="20201112 12:26:25.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.071" endtime="20201112 12:26:25.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.079" endtime="20201112 12:26:25.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.777" endtime="20201112 12:26:25.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.775" endtime="20201112 12:26:25.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.086" level="INFO">${RESULT} = [{'time': 0.021533125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8611000000001302e-05, 'source_diff': 2.8611000000001302e-05}, {'time': 0.021580444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:25.083" endtime="20201112 12:26:25.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.100" level="INFO">${ACCURACY} = {'diff': [2.8611000000001302e-05, 2.7694000000001717e-05, 2.7736000000000427e-05, 2.7708000000001287e-05, 2.7749999999999997e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 3.252800000000042e-05, ...</msg>
<status status="PASS" starttime="20201112 12:26:25.087" endtime="20201112 12:26:25.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.104" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.103" endtime="20201112 12:26:25.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.107" level="INFO">VALUE: [2.8611000000001302e-05, 2.7694000000001717e-05, 2.7736000000000427e-05, 2.7708000000001287e-05, 2.7749999999999997e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 3.252800000000042e-05, 2.7721999999997388e-05, 3.258400000000217e-05, 3.2582999999999224e-05, 2.7736000000000427e-05, 2.7763999999999567e-05, 2.7721999999997388e-05, 2.7693999999998248e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.769500000000119e-05, 2.7721999999997388e-05, 2.7707999999997818e-05, 2.770900000000076e-05, 2.772300000000033e-05, 2.772300000000033e-05, 3.256999999999913e-05, 3.256999999999913e-05, 2.7708000000001287e-05, 2.7721999999997388e-05, 2.7721999999997388e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 3.263900000000097e-05, 2.7707999999997818e-05, 2.772300000000033e-05, 3.258400000000217e-05, 3.259799999999827e-05, 3.2568999999999654e-05, 3.25700000000026e-05, 2.772300000000033e-05, 2.7722000000000857e-05, 3.2540999999997045e-05, 2.772300000000033e-05, 2.7708000000001287e-05, 2.7680000000002147e-05, 2.768099999999815e-05, 2.7777999999999137e-05, 2.765300000000248e-05]</msg>
<status status="PASS" starttime="20201112 12:26:25.105" endtime="20201112 12:26:25.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.100" endtime="20201112 12:26:25.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.110" endtime="20201112 12:26:25.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.116" endtime="20201112 12:26:25.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.114" endtime="20201112 12:26:25.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.109" endtime="20201112 12:26:25.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.746" endtime="20201112 12:26:25.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.745" endtime="20201112 12:26:25.137"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.145" endtime="20201112 12:26:25.160"></status>
</kw>
<msg timestamp="20201112 12:26:25.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.144" endtime="20201112 12:26:25.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.161" endtime="20201112 12:26:25.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.164" endtime="20201112 12:26:25.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.141" endtime="20201112 12:26:25.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.139" endtime="20201112 12:26:25.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.173" endtime="20201112 12:26:25.459"></status>
</kw>
<msg timestamp="20201112 12:26:25.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.171" endtime="20201112 12:26:25.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.463" endtime="20201112 12:26:25.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.471" endtime="20201112 12:26:25.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.169" endtime="20201112 12:26:25.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.167" endtime="20201112 12:26:25.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.478" level="INFO">${RESULT} = [{'time': 0.021659472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.351399999999838e-05, 'source_diff': 3.351399999999838e-05}, {'time': 0.021707542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.475" endtime="20201112 12:26:25.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.492" level="INFO">${ACCURACY} = {'diff': [3.351399999999838e-05, 3.256999999999913e-05, 3.25700000000026e-05, 3.2582999999999224e-05, 3.258400000000217e-05, 3.2596999999998794e-05, 3.2582999999999224e-05, 3.2541000000000514e-05, 3.2...</msg>
<status status="PASS" starttime="20201112 12:26:25.479" endtime="20201112 12:26:25.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.496" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.495" endtime="20201112 12:26:25.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.499" level="INFO">VALUE: [3.351399999999838e-05, 3.256999999999913e-05, 3.25700000000026e-05, 3.2582999999999224e-05, 3.258400000000217e-05, 3.2596999999998794e-05, 3.2582999999999224e-05, 3.2541000000000514e-05, 3.263799999999803e-05, 3.256999999999913e-05, 3.2568999999999654e-05, 3.25700000000026e-05, 3.2582999999999224e-05, 3.254199999999999e-05, 3.2568999999999654e-05, 3.2610999999998364e-05, 3.259800000000174e-05, 3.2568999999999654e-05, 3.26250000000014e-05, 3.256900000000312e-05, 3.2513000000001374e-05, 3.2596999999998794e-05, 3.2596999999998794e-05, 3.259800000000174e-05, 3.2541000000000514e-05, 3.25839999999987e-05, 3.2527000000000944e-05, 3.2568999999999654e-05, 3.2582999999999224e-05, 3.2541000000000514e-05, 3.2582999999999224e-05, 3.259700000000226e-05, 3.2541000000000514e-05, 3.25839999999987e-05, 3.2568999999999654e-05, 3.2610999999998364e-05, 3.2555000000000084e-05, 3.256999999999913e-05, 3.2568999999999654e-05, 3.266599999999717e-05, 3.259700000000226e-05, 3.25700000000026e-05, 3.25700000000026e-05, 3.254199999999999e-05, 3.258300000000269e-05, 3.2596999999998794e-05, 3.2555000000000084e-05, 3.258400000000217e-05, 3.256999999999913e-05, 3.256999999999913e-05]</msg>
<status status="PASS" starttime="20201112 12:26:25.497" endtime="20201112 12:26:25.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.493" endtime="20201112 12:26:25.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.502" endtime="20201112 12:26:25.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.507" endtime="20201112 12:26:25.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.504" endtime="20201112 12:26:25.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.501" endtime="20201112 12:26:25.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.138" endtime="20201112 12:26:25.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.137" endtime="20201112 12:26:25.528"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.536" endtime="20201112 12:26:25.551"></status>
</kw>
<msg timestamp="20201112 12:26:25.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.535" endtime="20201112 12:26:25.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.552" endtime="20201112 12:26:25.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.555" endtime="20201112 12:26:25.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.532" endtime="20201112 12:26:25.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.530" endtime="20201112 12:26:25.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.564" endtime="20201112 12:26:25.850"></status>
</kw>
<msg timestamp="20201112 12:26:25.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021600444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.562" endtime="20201112 12:26:25.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021600444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.854" endtime="20201112 12:26:25.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.862" endtime="20201112 12:26:25.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.560" endtime="20201112 12:26:25.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.558" endtime="20201112 12:26:25.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.869" level="INFO">${RESULT} = [{'time': 0.021600444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3512999999998905e-05, 'source_diff': 3.3512999999998905e-05}, {'time': 0.021656056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:25.866" endtime="20201112 12:26:25.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.883" level="INFO">${ACCURACY} = {'diff': [3.3512999999998905e-05, 3.252800000000042e-05, 3.258400000000217e-05, 3.25700000000026e-05, 3.258400000000217e-05, 3.255599999999956e-05, 3.2568999999999654e-05, 3.2582999999999224e-05, 3.25...</msg>
<status status="PASS" starttime="20201112 12:26:25.870" endtime="20201112 12:26:25.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.888" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.887" endtime="20201112 12:26:25.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.890" level="INFO">VALUE: [3.3512999999998905e-05, 3.252800000000042e-05, 3.258400000000217e-05, 3.25700000000026e-05, 3.258400000000217e-05, 3.255599999999956e-05, 3.2568999999999654e-05, 3.2582999999999224e-05, 3.259700000000226e-05, 3.2582999999999224e-05, 3.2582999999999224e-05, 3.251400000000085e-05, 3.249999999999781e-05, 3.2582999999999224e-05, 3.2596999999998794e-05, 3.25839999999987e-05, 3.2596999999998794e-05, 3.2596999999998794e-05, 3.2568999999999654e-05, 3.2582999999999224e-05, 3.2582999999999224e-05, 3.2582999999999224e-05, 3.2568999999999654e-05, 3.2555000000000084e-05, 3.2582999999999224e-05, 3.2568999999999654e-05, 3.258400000000217e-05, 3.2582999999999224e-05, 3.2568999999999654e-05, 3.2555000000000084e-05, 3.256999999999913e-05, 3.2555000000000084e-05, 3.255599999999956e-05, 3.256999999999913e-05, 3.25700000000026e-05, 3.259700000000226e-05, 3.259800000000174e-05, 3.254199999999999e-05, 3.2541000000000514e-05, 3.261199999999784e-05, 3.2568999999999654e-05, 3.255599999999956e-05, 3.258300000000269e-05, 3.258300000000269e-05, 3.2610999999998364e-05, 3.258300000000269e-05, 3.266600000000064e-05, 3.259800000000174e-05, 3.2582999999999224e-05, 3.259700000000226e-05]</msg>
<status status="PASS" starttime="20201112 12:26:25.889" endtime="20201112 12:26:25.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.884" endtime="20201112 12:26:25.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.894" endtime="20201112 12:26:25.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.898" endtime="20201112 12:26:25.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.896" endtime="20201112 12:26:25.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.892" endtime="20201112 12:26:25.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.528" endtime="20201112 12:26:25.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.528" endtime="20201112 12:26:25.919"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.928" endtime="20201112 12:26:25.942"></status>
</kw>
<msg timestamp="20201112 12:26:25.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.926" endtime="20201112 12:26:25.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.944" endtime="20201112 12:26:25.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.946" endtime="20201112 12:26:25.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.923" endtime="20201112 12:26:25.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.921" endtime="20201112 12:26:25.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.955" endtime="20201112 12:26:26.244"></status>
</kw>
<msg timestamp="20201112 12:26:26.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.954" endtime="20201112 12:26:26.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.249" endtime="20201112 12:26:26.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.257" endtime="20201112 12:26:26.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.951" endtime="20201112 12:26:26.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.949" endtime="20201112 12:26:26.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.264" level="INFO">${RESULT} = [{'time': 0.021791556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3445e-05, 'source_diff': 3.3445e-05}, {'time': 0.021845611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2568999999999654e...</msg>
<status status="PASS" starttime="20201112 12:26:26.260" endtime="20201112 12:26:26.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.277" level="INFO">${ACCURACY} = {'diff': [3.3445e-05, 3.2568999999999654e-05, 3.263900000000097e-05, 3.2568999999999654e-05, 3.25700000000026e-05, 3.251400000000085e-05, 3.25700000000026e-05, 3.261100000000183e-05, 3.256899999999965...</msg>
<status status="PASS" starttime="20201112 12:26:26.265" endtime="20201112 12:26:26.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.282" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.281" endtime="20201112 12:26:26.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.285" level="INFO">VALUE: [3.3445e-05, 3.2568999999999654e-05, 3.263900000000097e-05, 3.2568999999999654e-05, 3.25700000000026e-05, 3.251400000000085e-05, 3.25700000000026e-05, 3.261100000000183e-05, 3.2568999999999654e-05, 3.251399999999738e-05, 3.259800000000174e-05, 3.259700000000226e-05, 3.256999999999913e-05, 3.25839999999987e-05, 3.259800000000174e-05, 3.2513000000001374e-05, 3.256900000000312e-05, 3.256999999999913e-05, 3.2568999999999654e-05, 3.265300000000054e-05, 3.25700000000026e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.2568999999999654e-05, 3.256999999999913e-05, 3.258300000000269e-05, 3.254199999999999e-05, 3.2568999999999654e-05, 3.258400000000217e-05, 3.25839999999987e-05, 3.25700000000026e-05, 3.2568999999999654e-05, 3.2596999999998794e-05, 3.26250000000014e-05, 3.256999999999913e-05, 3.258400000000217e-05, 3.254199999999999e-05, 3.263900000000097e-05, 3.256999999999913e-05, 3.2555000000000084e-05, 3.2568999999999654e-05, 3.261100000000183e-05, 3.256999999999913e-05, 3.2610999999998364e-05, 3.2541000000000514e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.2568999999999654e-05]</msg>
<status status="PASS" starttime="20201112 12:26:26.283" endtime="20201112 12:26:26.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.278" endtime="20201112 12:26:26.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.289" endtime="20201112 12:26:26.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.293" endtime="20201112 12:26:26.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.292" endtime="20201112 12:26:26.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.287" endtime="20201112 12:26:26.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.920" endtime="20201112 12:26:26.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.919" endtime="20201112 12:26:26.314"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.323" endtime="20201112 12:26:26.338"></status>
</kw>
<msg timestamp="20201112 12:26:26.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.322" endtime="20201112 12:26:26.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.339" endtime="20201112 12:26:26.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.342" endtime="20201112 12:26:26.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.319" endtime="20201112 12:26:26.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.317" endtime="20201112 12:26:26.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.351" endtime="20201112 12:26:26.636"></status>
</kw>
<msg timestamp="20201112 12:26:26.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.349" endtime="20201112 12:26:26.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.640" endtime="20201112 12:26:26.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.648" endtime="20201112 12:26:26.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.347" endtime="20201112 12:26:26.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.345" endtime="20201112 12:26:26.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.655" level="INFO">${RESULT} = [{'time': 0.021934889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.351399999999838e-05, 'source_diff': 3.351399999999838e-05}, {'time': 0.022000764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:26.652" endtime="20201112 12:26:26.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.669" level="INFO">${ACCURACY} = {'diff': [3.351399999999838e-05, 3.255599999999956e-05, 3.2610999999998364e-05, 3.2568999999999654e-05, 3.256999999999913e-05, 3.258300000000269e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3....</msg>
<status status="PASS" starttime="20201112 12:26:26.656" endtime="20201112 12:26:26.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.674" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.672" endtime="20201112 12:26:26.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.676" level="INFO">VALUE: [3.351399999999838e-05, 3.255599999999956e-05, 3.2610999999998364e-05, 3.2568999999999654e-05, 3.256999999999913e-05, 3.258300000000269e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3.263900000000097e-05, 3.256999999999913e-05, 3.2582999999999224e-05, 3.2555000000000084e-05, 3.2582999999999224e-05, 3.2582999999999224e-05, 3.258300000000269e-05, 3.256999999999913e-05, 3.258400000000217e-05, 3.259799999999827e-05, 3.25700000000026e-05, 3.258400000000217e-05, 3.2568999999999654e-05, 3.2582999999999224e-05, 3.256999999999913e-05, 3.25700000000026e-05, 3.265300000000054e-05, 3.252800000000042e-05, 3.2541000000000514e-05, 3.2568999999999654e-05, 3.256999999999913e-05, 3.2568999999999654e-05, 3.25700000000026e-05, 3.25700000000026e-05, 3.25839999999987e-05, 3.254199999999999e-05, 3.2555000000000084e-05, 3.2555000000000084e-05, 3.26250000000014e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.259700000000226e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3.25700000000026e-05, 3.256999999999913e-05, 3.2527000000000944e-05, 3.256999999999913e-05, 3.2555000000000084e-05, 3.26250000000014e-05, 3.25700000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:26:26.675" endtime="20201112 12:26:26.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.670" endtime="20201112 12:26:26.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.680" endtime="20201112 12:26:26.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.685" endtime="20201112 12:26:26.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.683" endtime="20201112 12:26:26.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.678" endtime="20201112 12:26:26.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.315" endtime="20201112 12:26:26.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.315" endtime="20201112 12:26:26.706"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.715" endtime="20201112 12:26:26.729"></status>
</kw>
<msg timestamp="20201112 12:26:26.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.713" endtime="20201112 12:26:26.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.731" endtime="20201112 12:26:26.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.733" endtime="20201112 12:26:26.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.711" endtime="20201112 12:26:26.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.708" endtime="20201112 12:26:26.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.742" endtime="20201112 12:26:27.029"></status>
</kw>
<msg timestamp="20201112 12:26:27.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021574681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.741" endtime="20201112 12:26:27.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021574681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.033" endtime="20201112 12:26:27.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.041" endtime="20201112 12:26:27.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.738" endtime="20201112 12:26:27.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.736" endtime="20201112 12:26:27.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.048" level="INFO">${RESULT} = [{'time': 0.021574681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.349999999999881e-05, 'source_diff': 3.349999999999881e-05}, {'time': 0.021634014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:27.045" endtime="20201112 12:26:27.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.062" level="INFO">${ACCURACY} = {'diff': [3.349999999999881e-05, 3.255599999999956e-05, 3.7430999999997494e-05, 3.2582999999999224e-05, 3.25700000000026e-05, 3.743000000000149e-05, 3.741600000000192e-05, 3.263900000000097e-05, 3.258...</msg>
<status status="PASS" starttime="20201112 12:26:27.049" endtime="20201112 12:26:27.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.066" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.065" endtime="20201112 12:26:27.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.069" level="INFO">VALUE: [3.349999999999881e-05, 3.255599999999956e-05, 3.7430999999997494e-05, 3.2582999999999224e-05, 3.25700000000026e-05, 3.743000000000149e-05, 3.741600000000192e-05, 3.263900000000097e-05, 3.25839999999987e-05, 3.2568999999999654e-05, 3.249999999999781e-05, 3.255599999999956e-05, 3.7431000000000964e-05, 3.256999999999913e-05, 3.7417000000001394e-05, 3.2582999999999224e-05, 3.252800000000042e-05, 3.7417000000001394e-05, 3.2568999999999654e-05, 3.261100000000183e-05, 3.743000000000149e-05, 3.742999999999802e-05, 3.2568999999999654e-05, 3.7417000000001394e-05, 3.74590000000001e-05, 3.255599999999956e-05, 3.7416999999997924e-05, 3.7388999999998784e-05, 3.742999999999802e-05, 3.2568999999999654e-05, 3.26250000000014e-05, 3.258300000000269e-05, 3.256999999999913e-05, 3.749999999999934e-05, 3.255599999999956e-05, 3.7431000000000964e-05, 3.7444999999997064e-05, 3.742999999999802e-05, 3.2568999999999654e-05, 3.2610999999998364e-05, 3.255599999999956e-05, 3.742999999999802e-05, 3.2555000000000084e-05, 3.7431000000000964e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3.7416999999997924e-05, 3.744400000000106e-05, 3.259800000000174e-05, 3.25700000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.067" endtime="20201112 12:26:27.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.063" endtime="20201112 12:26:27.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.072" endtime="20201112 12:26:27.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.077" endtime="20201112 12:26:27.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.074" endtime="20201112 12:26:27.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.071" endtime="20201112 12:26:27.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.707" endtime="20201112 12:26:27.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.706" endtime="20201112 12:26:27.098"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.106" endtime="20201112 12:26:27.121"></status>
</kw>
<msg timestamp="20201112 12:26:27.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.105" endtime="20201112 12:26:27.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.123" endtime="20201112 12:26:27.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.125" endtime="20201112 12:26:27.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.102" endtime="20201112 12:26:27.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.100" endtime="20201112 12:26:27.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.134" endtime="20201112 12:26:27.420"></status>
</kw>
<msg timestamp="20201112 12:26:27.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.133" endtime="20201112 12:26:27.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.425" endtime="20201112 12:26:27.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.433" endtime="20201112 12:26:27.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.130" endtime="20201112 12:26:27.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.129" endtime="20201112 12:26:27.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.440" level="INFO">${RESULT} = [{'time': 0.021642069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8361000000000645e-05, 'source_diff': 3.8361000000000645e-05}, {'time': 0.021695069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.436" endtime="20201112 12:26:27.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.453" level="INFO">${ACCURACY} = {'diff': [3.8361000000000645e-05, 3.743000000000149e-05, 3.7416999999997924e-05, 3.7445000000000533e-05, 3.743000000000149e-05, 3.7417000000001394e-05, 3.740199999999888e-05, 3.7445000000000533e-05, 3...</msg>
<status status="PASS" starttime="20201112 12:26:27.441" endtime="20201112 12:26:27.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.458" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.457" endtime="20201112 12:26:27.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.460" level="INFO">VALUE: [3.8361000000000645e-05, 3.743000000000149e-05, 3.7416999999997924e-05, 3.7445000000000533e-05, 3.743000000000149e-05, 3.7417000000001394e-05, 3.740199999999888e-05, 3.7445000000000533e-05, 3.7444999999997064e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.7389000000002254e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.741600000000192e-05, 3.741600000000192e-05, 3.7430999999997494e-05, 3.7374999999999214e-05, 3.7374999999999214e-05, 3.742999999999802e-05, 3.744399999999759e-05, 3.745800000000063e-05, 3.741600000000192e-05, 3.7431000000000964e-05, 3.7402999999998354e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.741600000000192e-05, 3.744400000000106e-05, 3.74590000000001e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.743000000000149e-05, 3.7402999999998354e-05, 3.7417000000001394e-05, 3.7445000000000533e-05, 3.7430999999997494e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.744400000000106e-05, 3.7430999999997494e-05, 3.7430999999997494e-05, 3.741599999999845e-05, 3.745800000000063e-05, 3.7416999999997924e-05, 3.7416999999997924e-05, 3.740200000000235e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.748599999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.459" endtime="20201112 12:26:27.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.454" endtime="20201112 12:26:27.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.590" endtime="20201112 12:26:27.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.595" endtime="20201112 12:26:27.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.593" endtime="20201112 12:26:27.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.589" endtime="20201112 12:26:27.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.099" endtime="20201112 12:26:27.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.098" endtime="20201112 12:26:27.615"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.624" endtime="20201112 12:26:27.639"></status>
</kw>
<msg timestamp="20201112 12:26:27.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.623" endtime="20201112 12:26:27.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.641" endtime="20201112 12:26:27.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.643" endtime="20201112 12:26:27.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.620" endtime="20201112 12:26:27.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.618" endtime="20201112 12:26:27.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.652" endtime="20201112 12:26:27.938"></status>
</kw>
<msg timestamp="20201112 12:26:27.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.651" endtime="20201112 12:26:27.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.942" endtime="20201112 12:26:27.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.950" endtime="20201112 12:26:27.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.648" endtime="20201112 12:26:27.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.647" endtime="20201112 12:26:27.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.957" level="INFO">${RESULT} = [{'time': 0.021872597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8333000000001505e-05, 'source_diff': 3.8333000000001505e-05}, {'time': 0.021939292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.954" endtime="20201112 12:26:27.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.971" level="INFO">${ACCURACY} = {'diff': [3.8333000000001505e-05, 3.7430999999997494e-05, 3.7374999999999214e-05, 3.741599999999845e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.7431000000000964e-05, 3.7375000000002684e-05,...</msg>
<status status="PASS" starttime="20201112 12:26:27.958" endtime="20201112 12:26:27.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.975" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.974" endtime="20201112 12:26:27.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.978" level="INFO">VALUE: [3.8333000000001505e-05, 3.7430999999997494e-05, 3.7374999999999214e-05, 3.741599999999845e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.7431000000000964e-05, 3.7375000000002684e-05, 3.741599999999845e-05, 3.743000000000149e-05, 3.744400000000106e-05, 3.742999999999802e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.7416999999997924e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.749999999999934e-05, 3.738799999999931e-05, 3.750000000000281e-05, 3.7417000000001394e-05, 3.743000000000149e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.742999999999802e-05, 3.7417000000001394e-05, 3.7430999999997494e-05, 3.747299999999967e-05, 3.7431000000000964e-05, 3.7403000000001824e-05, 3.745800000000063e-05, 3.743000000000149e-05, 3.743000000000149e-05, 3.7403000000001824e-05, 3.7388999999998784e-05, 3.7444999999997064e-05, 3.7416999999997924e-05, 3.7417000000001394e-05, 3.7417000000001394e-05, 3.744400000000106e-05, 3.7388999999998784e-05, 3.743000000000149e-05, 3.7430999999997494e-05, 3.742999999999802e-05, 3.7416999999997924e-05, 3.7431000000000964e-05, 3.744400000000106e-05, 3.744399999999759e-05, 3.7430999999997494e-05, 3.743000000000149e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.976" endtime="20201112 12:26:27.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.972" endtime="20201112 12:26:27.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.981" endtime="20201112 12:26:27.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.986" endtime="20201112 12:26:28.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.984" endtime="20201112 12:26:28.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.980" endtime="20201112 12:26:28.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.616" endtime="20201112 12:26:28.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.616" endtime="20201112 12:26:28.007"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.015" endtime="20201112 12:26:28.030"></status>
</kw>
<msg timestamp="20201112 12:26:28.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.014" endtime="20201112 12:26:28.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.032" endtime="20201112 12:26:28.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.034" endtime="20201112 12:26:28.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.011" endtime="20201112 12:26:28.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.009" endtime="20201112 12:26:28.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.043" endtime="20201112 12:26:28.351"></status>
</kw>
<msg timestamp="20201112 12:26:28.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021649542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.042" endtime="20201112 12:26:28.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021649542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.355" endtime="20201112 12:26:28.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.363" endtime="20201112 12:26:28.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.039" endtime="20201112 12:26:28.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.037" endtime="20201112 12:26:28.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.370" level="INFO">${RESULT} = [{'time': 0.021649542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8361000000000645e-05, 'source_diff': 3.8361000000000645e-05}, {'time': 0.021720319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.366" endtime="20201112 12:26:28.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.383" level="INFO">${ACCURACY} = {'diff': [3.8361000000000645e-05, 3.745799999999716e-05, 3.745800000000063e-05, 3.7417000000001394e-05, 3.7444999999997064e-05, 3.743000000000149e-05, 3.7360999999999644e-05, 3.7403000000001824e-05, 3...</msg>
<status status="PASS" starttime="20201112 12:26:28.371" endtime="20201112 12:26:28.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.388" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.387" endtime="20201112 12:26:28.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.390" level="INFO">VALUE: [3.8361000000000645e-05, 3.745799999999716e-05, 3.745800000000063e-05, 3.7417000000001394e-05, 3.7444999999997064e-05, 3.743000000000149e-05, 3.7360999999999644e-05, 3.7403000000001824e-05, 3.7431000000000964e-05, 3.7388999999998784e-05, 3.7374999999999214e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.742999999999802e-05, 3.7417000000001394e-05, 3.7444999999997064e-05, 3.744399999999759e-05, 3.747300000000314e-05, 3.7445000000000533e-05, 3.744400000000106e-05, 3.745800000000063e-05, 3.7445000000000533e-05, 3.745800000000063e-05, 3.744400000000106e-05, 3.7431000000000964e-05, 3.745800000000063e-05, 3.742999999999802e-05, 3.7416999999997924e-05, 3.743000000000149e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.751399999999891e-05, 3.7431000000000964e-05, 3.749999999999934e-05, 3.745800000000063e-05, 3.745800000000063e-05, 3.7403000000001824e-05, 3.744400000000106e-05, 3.743000000000149e-05, 3.7430999999997494e-05, 3.743000000000149e-05, 3.74720000000002e-05, 3.7444999999997064e-05, 3.741599999999845e-05, 3.7388999999998784e-05, 3.740200000000235e-05, 3.747299999999967e-05, 3.7431000000000964e-05, 3.744399999999759e-05, 3.7431000000000964e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.389" endtime="20201112 12:26:28.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.384" endtime="20201112 12:26:28.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.394" endtime="20201112 12:26:28.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.399" endtime="20201112 12:26:28.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.398" endtime="20201112 12:26:28.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.392" endtime="20201112 12:26:28.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.008" endtime="20201112 12:26:28.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.007" endtime="20201112 12:26:28.420"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.429" endtime="20201112 12:26:28.444"></status>
</kw>
<msg timestamp="20201112 12:26:28.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.428" endtime="20201112 12:26:28.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.445" endtime="20201112 12:26:28.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.448" endtime="20201112 12:26:28.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.425" endtime="20201112 12:26:28.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.423" endtime="20201112 12:26:28.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.457" endtime="20201112 12:26:28.743"></status>
</kw>
<msg timestamp="20201112 12:26:28.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.455" endtime="20201112 12:26:28.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.747" endtime="20201112 12:26:28.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.755" endtime="20201112 12:26:28.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.453" endtime="20201112 12:26:28.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.451" endtime="20201112 12:26:28.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.762" level="INFO">${RESULT} = [{'time': 0.021755917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8361000000000645e-05, 'source_diff': 3.8361000000000645e-05}, {'time': 0.021807986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.758" endtime="20201112 12:26:28.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.775" level="INFO">${ACCURACY} = {'diff': [3.8361000000000645e-05, 3.743000000000149e-05, 3.74590000000001e-05, 3.745800000000063e-05, 3.7417000000001394e-05, 3.7430999999997494e-05, 3.742999999999802e-05, 3.7431000000000964e-05, 3.7...</msg>
<status status="PASS" starttime="20201112 12:26:28.763" endtime="20201112 12:26:28.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.780" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.779" endtime="20201112 12:26:28.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.782" level="INFO">VALUE: [3.8361000000000645e-05, 3.743000000000149e-05, 3.74590000000001e-05, 3.745800000000063e-05, 3.7417000000001394e-05, 3.7430999999997494e-05, 3.742999999999802e-05, 3.7431000000000964e-05, 3.74720000000002e-05, 3.744400000000106e-05, 3.742999999999802e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.743000000000149e-05, 3.741600000000192e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.744400000000106e-05, 3.741600000000192e-05, 3.742999999999802e-05, 3.7360999999999644e-05, 3.741599999999845e-05, 3.7417000000001394e-05, 3.744400000000106e-05, 3.744399999999759e-05, 3.7431000000000964e-05, 3.742999999999802e-05, 3.74720000000002e-05, 3.742999999999802e-05, 3.7416999999997924e-05, 3.7445000000000533e-05, 3.7388999999998784e-05, 3.7417000000001394e-05, 3.7402999999998354e-05, 3.7417000000001394e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.7388999999998784e-05, 3.7417000000001394e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.74720000000002e-05, 3.743000000000149e-05, 3.741599999999845e-05, 3.7431000000000964e-05, 3.741599999999845e-05, 3.7402999999998354e-05, 3.7444999999997064e-05, 3.741599999999845e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.781" endtime="20201112 12:26:28.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.776" endtime="20201112 12:26:28.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.786" endtime="20201112 12:26:28.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.791" endtime="20201112 12:26:28.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.788" endtime="20201112 12:26:28.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.784" endtime="20201112 12:26:28.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.421" endtime="20201112 12:26:28.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.421" endtime="20201112 12:26:28.811"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.820" endtime="20201112 12:26:28.835"></status>
</kw>
<msg timestamp="20201112 12:26:28.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.819" endtime="20201112 12:26:28.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.837" endtime="20201112 12:26:28.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.839" endtime="20201112 12:26:28.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.816" endtime="20201112 12:26:28.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.814" endtime="20201112 12:26:28.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.848" endtime="20201112 12:26:29.133"></status>
</kw>
<msg timestamp="20201112 12:26:29.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.847" endtime="20201112 12:26:29.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.137" endtime="20201112 12:26:29.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.146" endtime="20201112 12:26:29.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.844" endtime="20201112 12:26:29.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.842" endtime="20201112 12:26:29.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.152" level="INFO">${RESULT} = [{'time': 0.021622431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3209000000002384e-05, 'source_diff': 4.3209000000002384e-05}, {'time': 0.021685917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:29.149" endtime="20201112 12:26:29.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.166" level="INFO">${ACCURACY} = {'diff': [4.3209000000002384e-05, 4.23059999999989e-05, 3.7374999999999214e-05, 3.7431000000000964e-05, 3.7416999999997924e-05, 3.743000000000149e-05, 4.23059999999989e-05, 4.22920000000028e-05, 4.229...</msg>
<status status="PASS" starttime="20201112 12:26:29.153" endtime="20201112 12:26:29.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.170" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.169" endtime="20201112 12:26:29.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.173" level="INFO">VALUE: [4.3209000000002384e-05, 4.23059999999989e-05, 3.7374999999999214e-05, 3.7431000000000964e-05, 3.7416999999997924e-05, 3.743000000000149e-05, 4.23059999999989e-05, 4.22920000000028e-05, 4.2290999999999856e-05, 3.7445000000000533e-05, 4.229199999999933e-05, 3.743000000000149e-05, 3.744399999999759e-05, 4.2290999999999856e-05, 4.227800000000323e-05, 4.23059999999989e-05, 3.7445000000000533e-05, 4.227799999999976e-05, 4.2277000000000287e-05, 3.740199999999888e-05, 4.2277000000000287e-05, 3.7417000000001394e-05, 4.229199999999933e-05, 3.7375000000002684e-05, 3.742999999999802e-05, 4.23059999999989e-05, 4.227799999999976e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.2290999999999856e-05, 4.23059999999989e-05, 3.744399999999759e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.234800000000108e-05, 4.227799999999976e-05, 4.229199999999933e-05, 3.7361000000003114e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.229199999999933e-05, 4.2277000000000287e-05, 4.2277000000000287e-05, 4.22920000000028e-05, 3.7431000000000964e-05, 3.7416999999997924e-05, 3.7417000000001394e-05, 3.7417000000001394e-05, 3.7445000000000533e-05, 4.229199999999933e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.172" endtime="20201112 12:26:29.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.167" endtime="20201112 12:26:29.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.177" endtime="20201112 12:26:29.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.181" endtime="20201112 12:26:29.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.179" endtime="20201112 12:26:29.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.175" endtime="20201112 12:26:29.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.812" endtime="20201112 12:26:29.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.812" endtime="20201112 12:26:29.202"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.211" endtime="20201112 12:26:29.226"></status>
</kw>
<msg timestamp="20201112 12:26:29.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.209" endtime="20201112 12:26:29.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.227" endtime="20201112 12:26:29.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.230" endtime="20201112 12:26:29.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.206" endtime="20201112 12:26:29.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.204" endtime="20201112 12:26:29.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.239" endtime="20201112 12:26:29.524"></status>
</kw>
<msg timestamp="20201112 12:26:29.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021626181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.238" endtime="20201112 12:26:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021626181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.528" endtime="20201112 12:26:29.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.537" endtime="20201112 12:26:29.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.235" endtime="20201112 12:26:29.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.233" endtime="20201112 12:26:29.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.543" level="INFO">${RESULT} = [{'time': 0.021669389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.320799999999944e-05, 'source_diff': 4.320799999999944e-05}, {'time': 0.021741889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:29.540" endtime="20201112 12:26:29.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.557" level="INFO">${ACCURACY} = {'diff': [4.320799999999944e-05, 4.229199999999933e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2347000000001606e-05, 4.2304999999999426e-05, 4.23...</msg>
<status status="PASS" starttime="20201112 12:26:29.544" endtime="20201112 12:26:29.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.561" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.560" endtime="20201112 12:26:29.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.564" level="INFO">VALUE: [4.320799999999944e-05, 4.229199999999933e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2347000000001606e-05, 4.2304999999999426e-05, 4.230600000000237e-05, 4.2277000000000287e-05, 4.229199999999933e-05, 4.2304999999999426e-05, 4.2304999999999426e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.22920000000028e-05, 4.2361000000001175e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.229199999999933e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.226400000000019e-05, 4.2290999999999856e-05, 4.22920000000028e-05, 4.227799999999976e-05, 4.230600000000237e-05, 4.2304999999999426e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.2290999999999856e-05, 4.229199999999933e-05, 4.2304999999999426e-05, 4.2290999999999856e-05, 4.229199999999933e-05, 4.223600000000105e-05, 4.229199999999933e-05, 4.2290999999999856e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.2290999999999856e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.563" endtime="20201112 12:26:29.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.558" endtime="20201112 12:26:29.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.568" endtime="20201112 12:26:29.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.572" endtime="20201112 12:26:29.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.570" endtime="20201112 12:26:29.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.566" endtime="20201112 12:26:29.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.203" endtime="20201112 12:26:29.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.202" endtime="20201112 12:26:29.593"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.602" endtime="20201112 12:26:29.617"></status>
</kw>
<msg timestamp="20201112 12:26:29.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.600" endtime="20201112 12:26:29.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.618" endtime="20201112 12:26:29.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.621" endtime="20201112 12:26:29.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.598" endtime="20201112 12:26:29.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.596" endtime="20201112 12:26:29.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.630" endtime="20201112 12:26:29.915"></status>
</kw>
<msg timestamp="20201112 12:26:29.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.629" endtime="20201112 12:26:29.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.919" endtime="20201112 12:26:29.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.928" endtime="20201112 12:26:29.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.626" endtime="20201112 12:26:29.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.624" endtime="20201112 12:26:29.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.934" level="INFO">${RESULT} = [{'time': 0.021776694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.327699999999782e-05, 'source_diff': 4.327699999999782e-05}, {'time': 0.021833889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:29.931" endtime="20201112 12:26:29.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.948" level="INFO">${ACCURACY} = {'diff': [4.327699999999782e-05, 4.227799999999976e-05, 4.2375000000000745e-05, 4.2290999999999856e-05, 4.23059999999989e-05, 4.230600000000237e-05, 4.22920000000028e-05, 4.225000000000062e-05, 4.2304...</msg>
<status status="PASS" starttime="20201112 12:26:29.935" endtime="20201112 12:26:29.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.952" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.951" endtime="20201112 12:26:29.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.955" level="INFO">VALUE: [4.327699999999782e-05, 4.227799999999976e-05, 4.2375000000000745e-05, 4.2290999999999856e-05, 4.23059999999989e-05, 4.230600000000237e-05, 4.22920000000028e-05, 4.225000000000062e-05, 4.2304999999999426e-05, 4.230600000000237e-05, 4.2333000000002036e-05, 4.2332999999998566e-05, 4.2290999999999856e-05, 4.22920000000028e-05, 4.229199999999933e-05, 4.2290999999999856e-05, 4.226400000000019e-05, 4.2332999999998566e-05, 4.234799999999761e-05, 4.2304999999999426e-05, 4.23059999999989e-05, 4.229199999999933e-05, 4.23059999999989e-05, 4.2290999999999856e-05, 4.230600000000237e-05, 4.2319000000002466e-05, 4.227799999999976e-05, 4.2318999999998996e-05, 4.2290999999999856e-05, 4.229199999999933e-05, 4.22920000000028e-05, 4.23059999999989e-05, 4.2304999999999426e-05, 4.227799999999976e-05, 4.226400000000019e-05, 4.2304999999999426e-05, 4.223599999999758e-05, 4.2346999999998136e-05, 4.223600000000105e-05, 4.2332999999998566e-05, 4.23059999999989e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2332999999998566e-05, 4.230600000000237e-05, 4.23059999999989e-05, 4.2332999999998566e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.2304999999999426e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.953" endtime="20201112 12:26:29.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.949" endtime="20201112 12:26:29.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.959" endtime="20201112 12:26:29.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.964" endtime="20201112 12:26:29.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.962" endtime="20201112 12:26:29.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.957" endtime="20201112 12:26:29.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.594" endtime="20201112 12:26:29.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.593" endtime="20201112 12:26:29.985"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.994" endtime="20201112 12:26:30.009"></status>
</kw>
<msg timestamp="20201112 12:26:30.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.992" endtime="20201112 12:26:30.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.010" endtime="20201112 12:26:30.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.013" endtime="20201112 12:26:30.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.989" endtime="20201112 12:26:30.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.987" endtime="20201112 12:26:30.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.022" endtime="20201112 12:26:30.307"></status>
</kw>
<msg timestamp="20201112 12:26:30.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021665875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.020" endtime="20201112 12:26:30.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021665875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.311" endtime="20201112 12:26:30.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.319" endtime="20201112 12:26:30.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.018" endtime="20201112 12:26:30.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.016" endtime="20201112 12:26:30.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.326" level="INFO">${RESULT} = [{'time': 0.021665875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.320799999999944e-05, 'source_diff': 4.320799999999944e-05}, {'time': 0.021724042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.323" endtime="20201112 12:26:30.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.340" level="INFO">${ACCURACY} = {'diff': [4.320799999999944e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2290999999999856e-05, 4.2277000000000287e-05, 4.226400000000019e-05, 4.23...</msg>
<status status="PASS" starttime="20201112 12:26:30.327" endtime="20201112 12:26:30.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.345" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.344" endtime="20201112 12:26:30.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.348" level="INFO">VALUE: [4.320799999999944e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2290999999999856e-05, 4.2277000000000287e-05, 4.226400000000019e-05, 4.2304999999999426e-05, 4.229199999999933e-05, 4.2277000000000287e-05, 4.227799999999976e-05, 4.22920000000028e-05, 4.222200000000148e-05, 4.2346999999998136e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.229199999999933e-05, 4.23059999999989e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.236199999999718e-05, 4.226399999999672e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.232000000000194e-05, 4.230600000000237e-05, 4.229199999999933e-05, 4.222199999999801e-05, 4.2290999999999856e-05, 4.231999999999847e-05, 4.229199999999933e-05, 4.231999999999847e-05, 4.2304999999999426e-05, 4.226399999999672e-05, 4.2304999999999426e-05, 4.233399999999804e-05, 4.227799999999976e-05, 4.2277000000000287e-05, 4.2222999999997485e-05, 4.2333000000002036e-05, 4.2290999999999856e-05, 4.230600000000237e-05, 4.232000000000194e-05, 4.229199999999933e-05, 4.223600000000105e-05, 4.2305000000002896e-05, 4.23059999999989e-05, 4.23059999999989e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.346" endtime="20201112 12:26:30.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.341" endtime="20201112 12:26:30.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.351" endtime="20201112 12:26:30.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.356" endtime="20201112 12:26:30.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.354" endtime="20201112 12:26:30.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.350" endtime="20201112 12:26:30.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.986" endtime="20201112 12:26:30.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.985" endtime="20201112 12:26:30.377"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.386" endtime="20201112 12:26:30.401"></status>
</kw>
<msg timestamp="20201112 12:26:30.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.384" endtime="20201112 12:26:30.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.402" endtime="20201112 12:26:30.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.405" endtime="20201112 12:26:30.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.382" endtime="20201112 12:26:30.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.380" endtime="20201112 12:26:30.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.414" endtime="20201112 12:26:30.699"></status>
</kw>
<msg timestamp="20201112 12:26:30.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.412" endtime="20201112 12:26:30.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.703" endtime="20201112 12:26:30.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.711" endtime="20201112 12:26:30.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.410" endtime="20201112 12:26:30.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.408" endtime="20201112 12:26:30.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.718" level="INFO">${RESULT} = [{'time': 0.021903694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.322200000000248e-05, 'source_diff': 4.322200000000248e-05}, {'time': 0.021965903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.715" endtime="20201112 12:26:30.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.732" level="INFO">${ACCURACY} = {'diff': [4.322200000000248e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.2277000000000287e-05, 4.230600000000237e-05, 4.229199999999933e-05, 4.2346999999998136e-05, 4.2...</msg>
<status status="PASS" starttime="20201112 12:26:30.719" endtime="20201112 12:26:30.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.736" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.735" endtime="20201112 12:26:30.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.739" level="INFO">VALUE: [4.322200000000248e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.2277000000000287e-05, 4.230600000000237e-05, 4.229199999999933e-05, 4.2346999999998136e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.2290999999999856e-05, 4.2304999999999426e-05, 4.229199999999933e-05, 4.23059999999989e-05, 4.223599999999758e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.2347000000001606e-05, 4.232000000000194e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.2319000000002466e-05, 4.227799999999976e-05, 4.2319000000002466e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.22920000000028e-05, 4.224999999999715e-05, 4.2277000000000287e-05, 4.2290999999999856e-05, 4.23059999999989e-05, 4.229199999999933e-05, 4.229199999999933e-05, 4.2290999999999856e-05, 4.2277000000000287e-05, 4.225000000000062e-05, 4.222200000000148e-05, 4.230600000000237e-05, 4.2290999999999856e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.229199999999933e-05, 4.230600000000237e-05, 4.2290999999999856e-05, 4.229199999999933e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.737" endtime="20201112 12:26:30.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.733" endtime="20201112 12:26:30.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.742" endtime="20201112 12:26:30.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.747" endtime="20201112 12:26:30.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.745" endtime="20201112 12:26:30.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.741" endtime="20201112 12:26:30.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.378" endtime="20201112 12:26:30.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.378" endtime="20201112 12:26:30.768"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.776" endtime="20201112 12:26:30.791"></status>
</kw>
<msg timestamp="20201112 12:26:30.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.775" endtime="20201112 12:26:30.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.793" endtime="20201112 12:26:30.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.795" endtime="20201112 12:26:30.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.772" endtime="20201112 12:26:30.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.770" endtime="20201112 12:26:30.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.805" endtime="20201112 12:26:31.090"></status>
</kw>
<msg timestamp="20201112 12:26:31.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.803" endtime="20201112 12:26:31.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.095" endtime="20201112 12:26:31.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.103" endtime="20201112 12:26:31.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.800" endtime="20201112 12:26:31.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.799" endtime="20201112 12:26:31.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.110" level="INFO">${RESULT} = [{'time': 0.021683597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.322199999999901e-05, 'source_diff': 4.322199999999901e-05}, {'time': 0.021747556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.106" endtime="20201112 12:26:31.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.123" level="INFO">${ACCURACY} = {'diff': [4.322199999999901e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.7181000000000306e-05, 4.227799999999976e-05, 4.7125000000002026e-05, 4.229199999999933e-05, 4.713799999999865e-05, 4....</msg>
<status status="PASS" starttime="20201112 12:26:31.111" endtime="20201112 12:26:31.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.128" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.127" endtime="20201112 12:26:31.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.131" level="INFO">VALUE: [4.322199999999901e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.7181000000000306e-05, 4.227799999999976e-05, 4.7125000000002026e-05, 4.229199999999933e-05, 4.713799999999865e-05, 4.226400000000019e-05, 4.2290999999999856e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.713800000000212e-05, 4.7153000000001166e-05, 4.7208999999999446e-05, 4.7139000000001596e-05, 4.229199999999933e-05, 4.7167000000000736e-05, 4.229199999999933e-05, 4.7167000000000736e-05, 4.713899999999813e-05, 4.22920000000028e-05, 4.718000000000083e-05, 4.226400000000019e-05, 4.712499999999856e-05, 4.230600000000237e-05, 4.712499999999856e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.713899999999813e-05, 4.229199999999933e-05, 4.2290999999999856e-05, 4.229199999999933e-05, 4.7125000000002026e-05, 4.227799999999976e-05, 4.7139000000001596e-05, 4.227799999999976e-05, 4.2222999999997485e-05, 4.2290999999999856e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.225000000000062e-05, 4.2290999999999856e-05, 4.712499999999856e-05, 4.225000000000062e-05, 4.2304999999999426e-05, 4.716599999999779e-05, 4.223599999999758e-05, 4.222200000000148e-05, 4.709699999999942e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.129" endtime="20201112 12:26:31.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.124" endtime="20201112 12:26:31.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.134" endtime="20201112 12:26:31.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.138" endtime="20201112 12:26:31.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.137" endtime="20201112 12:26:31.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.132" endtime="20201112 12:26:31.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.768" endtime="20201112 12:26:31.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.768" endtime="20201112 12:26:31.159"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.168" endtime="20201112 12:26:31.183"></status>
</kw>
<msg timestamp="20201112 12:26:31.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.166" endtime="20201112 12:26:31.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.185" endtime="20201112 12:26:31.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.187" endtime="20201112 12:26:31.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.164" endtime="20201112 12:26:31.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.162" endtime="20201112 12:26:31.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.196" endtime="20201112 12:26:31.482"></status>
</kw>
<msg timestamp="20201112 12:26:31.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021602056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.195" endtime="20201112 12:26:31.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021602056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.486" endtime="20201112 12:26:31.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.495" endtime="20201112 12:26:31.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.192" endtime="20201112 12:26:31.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.191" endtime="20201112 12:26:31.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.501" level="INFO">${RESULT} = [{'time': 0.021650139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.808299999999738e-05, 'source_diff': 4.808299999999738e-05}, {'time': 0.021718458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.498" endtime="20201112 12:26:31.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.515" level="INFO">${ACCURACY} = {'diff': [4.808299999999738e-05, 4.715199999999822e-05, 4.7139000000001596e-05, 4.71529999999977e-05, 4.709699999999942e-05, 4.713899999999813e-05, 4.720799999999997e-05, 4.7153000000001166e-05, 4.713...</msg>
<status status="PASS" starttime="20201112 12:26:31.502" endtime="20201112 12:26:31.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.519" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.518" endtime="20201112 12:26:31.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.522" level="INFO">VALUE: [4.808299999999738e-05, 4.715199999999822e-05, 4.7139000000001596e-05, 4.71529999999977e-05, 4.709699999999942e-05, 4.713899999999813e-05, 4.720799999999997e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.71529999999977e-05, 4.7153000000001166e-05, 4.708299999999985e-05, 4.7125000000002026e-05, 4.7139000000001596e-05, 4.7125000000002026e-05, 4.7125000000002026e-05, 4.713799999999865e-05, 4.7139000000001596e-05, 4.7181000000000306e-05, 4.716599999999779e-05, 4.713899999999813e-05, 4.713800000000212e-05, 4.715199999999822e-05, 4.7167000000000736e-05, 4.720799999999997e-05, 4.7167000000000736e-05, 4.718000000000083e-05, 4.713799999999865e-05, 4.715199999999822e-05, 4.7153000000001166e-05, 4.712499999999856e-05, 4.709699999999942e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.7167000000000736e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.713799999999865e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.715199999999822e-05, 4.718000000000083e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.520" endtime="20201112 12:26:31.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.516" endtime="20201112 12:26:31.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.525" endtime="20201112 12:26:31.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.531" endtime="20201112 12:26:31.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.529" endtime="20201112 12:26:31.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.524" endtime="20201112 12:26:31.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.160" endtime="20201112 12:26:31.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.160" endtime="20201112 12:26:31.552"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.561" endtime="20201112 12:26:31.576"></status>
</kw>
<msg timestamp="20201112 12:26:31.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.559" endtime="20201112 12:26:31.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.577" endtime="20201112 12:26:31.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.580" endtime="20201112 12:26:31.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.557" endtime="20201112 12:26:31.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.554" endtime="20201112 12:26:31.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.589" endtime="20201112 12:26:31.874"></status>
</kw>
<msg timestamp="20201112 12:26:31.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021602319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.588" endtime="20201112 12:26:31.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021602319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.878" endtime="20201112 12:26:31.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.887" endtime="20201112 12:26:31.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.585" endtime="20201112 12:26:31.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.583" endtime="20201112 12:26:31.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.894" level="INFO">${RESULT} = [{'time': 0.021650375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805600000000118e-05, 'source_diff': 4.805600000000118e-05}, {'time': 0.021726167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.890" endtime="20201112 12:26:31.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.907" level="INFO">${ACCURACY} = {'diff': [4.805600000000118e-05, 4.708400000000279e-05, 4.713899999999813e-05, 4.720799999999997e-05, 4.7125000000002026e-05, 4.7139000000001596e-05, 4.715199999999822e-05, 4.7167000000000736e-05, 4.7...</msg>
<status status="PASS" starttime="20201112 12:26:31.894" endtime="20201112 12:26:31.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.912" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.911" endtime="20201112 12:26:31.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.914" level="INFO">VALUE: [4.805600000000118e-05, 4.708400000000279e-05, 4.713899999999813e-05, 4.720799999999997e-05, 4.7125000000002026e-05, 4.7139000000001596e-05, 4.715199999999822e-05, 4.7167000000000736e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.713899999999813e-05, 4.715200000000169e-05, 4.7153000000001166e-05, 4.716600000000126e-05, 4.7139000000001596e-05, 4.712499999999856e-05, 4.713899999999813e-05, 4.716600000000126e-05, 4.713899999999813e-05, 4.712499999999856e-05, 4.713899999999813e-05, 4.716600000000126e-05, 4.7153000000001166e-05, 4.715200000000169e-05, 4.7181000000000306e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.706999999999975e-05, 4.712499999999856e-05, 4.71529999999977e-05, 4.71529999999977e-05, 4.713899999999813e-05, 4.7167000000000736e-05, 4.7139000000001596e-05, 4.71529999999977e-05, 4.712499999999856e-05, 4.708299999999985e-05, 4.716599999999779e-05, 4.713899999999813e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.7167000000000736e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.713899999999813e-05, 4.713899999999813e-05, 4.709800000000236e-05, 4.7167000000000736e-05, 4.708299999999985e-05, 4.715199999999822e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.913" endtime="20201112 12:26:31.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.908" endtime="20201112 12:26:31.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.918" endtime="20201112 12:26:31.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.922" endtime="20201112 12:26:31.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.920" endtime="20201112 12:26:31.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.916" endtime="20201112 12:26:31.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.553" endtime="20201112 12:26:31.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.552" endtime="20201112 12:26:31.943"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.951" endtime="20201112 12:26:31.967"></status>
</kw>
<msg timestamp="20201112 12:26:31.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.950" endtime="20201112 12:26:31.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.968" endtime="20201112 12:26:31.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.971" endtime="20201112 12:26:31.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.947" endtime="20201112 12:26:31.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.945" endtime="20201112 12:26:31.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.980" endtime="20201112 12:26:32.265"></status>
</kw>
<msg timestamp="20201112 12:26:32.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021578611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.978" endtime="20201112 12:26:32.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021578611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.269" endtime="20201112 12:26:32.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.278" endtime="20201112 12:26:32.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.975" endtime="20201112 12:26:32.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.974" endtime="20201112 12:26:32.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.285" level="INFO">${RESULT} = [{'time': 0.021578611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8139000000002596e-05, 'source_diff': 4.8139000000002596e-05}, {'time': 0.021643167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:32.281" endtime="20201112 12:26:32.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.298" level="INFO">${ACCURACY} = {'diff': [4.8139000000002596e-05, 4.7139000000001596e-05, 4.7167000000000736e-05, 4.716699999999727e-05, 4.7181000000000306e-05, 4.711099999999899e-05, 4.7111000000002456e-05, 4.713799999999865e-05, 4...</msg>
<status status="PASS" starttime="20201112 12:26:32.286" endtime="20201112 12:26:32.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.303" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.302" endtime="20201112 12:26:32.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.305" level="INFO">VALUE: [4.8139000000002596e-05, 4.7139000000001596e-05, 4.7167000000000736e-05, 4.716699999999727e-05, 4.7181000000000306e-05, 4.711099999999899e-05, 4.7111000000002456e-05, 4.713799999999865e-05, 4.713899999999813e-05, 4.716599999999779e-05, 4.71529999999977e-05, 4.713899999999813e-05, 4.7153000000001166e-05, 4.711099999999899e-05, 4.7139000000001596e-05, 4.715199999999822e-05, 4.7167000000000736e-05, 4.7153000000001166e-05, 4.713899999999813e-05, 4.713899999999813e-05, 4.713899999999813e-05, 4.7153000000001166e-05, 4.713899999999813e-05, 4.71940000000004e-05, 4.716599999999779e-05, 4.71529999999977e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.712499999999856e-05, 4.71529999999977e-05, 4.7167000000000736e-05, 4.7167000000000736e-05, 4.716600000000126e-05, 4.7167000000000736e-05, 4.713800000000212e-05, 4.7153000000001166e-05, 4.7125000000002026e-05, 4.7139000000001596e-05, 4.71529999999977e-05, 4.7167000000000736e-05, 4.7125000000002026e-05, 4.7139000000001596e-05, 4.708299999999985e-05, 4.713800000000212e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.7167000000000736e-05, 4.709699999999942e-05, 4.7139000000001596e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.304" endtime="20201112 12:26:32.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.299" endtime="20201112 12:26:32.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.309" endtime="20201112 12:26:32.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.313" endtime="20201112 12:26:32.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.312" endtime="20201112 12:26:32.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.307" endtime="20201112 12:26:32.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.944" endtime="20201112 12:26:32.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.943" endtime="20201112 12:26:32.334"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.343" endtime="20201112 12:26:32.358"></status>
</kw>
<msg timestamp="20201112 12:26:32.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.341" endtime="20201112 12:26:32.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.360" endtime="20201112 12:26:32.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.362" endtime="20201112 12:26:32.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.339" endtime="20201112 12:26:32.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.337" endtime="20201112 12:26:32.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.371" endtime="20201112 12:26:32.658"></status>
</kw>
<msg timestamp="20201112 12:26:32.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021604681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.370" endtime="20201112 12:26:32.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021604681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.662" endtime="20201112 12:26:32.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.670" endtime="20201112 12:26:32.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.367" endtime="20201112 12:26:32.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.365" endtime="20201112 12:26:32.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.677" level="INFO">${RESULT} = [{'time': 0.021652764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.808300000000085e-05, 'source_diff': 4.808300000000085e-05}, {'time': 0.021714556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:32.674" endtime="20201112 12:26:32.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.691" level="INFO">${ACCURACY} = {'diff': [4.808300000000085e-05, 4.7153000000001166e-05, 4.7097000000002887e-05, 4.711099999999899e-05, 4.715199999999822e-05, 4.7139000000001596e-05, 4.716699999999727e-05, 4.7167000000000736e-05, 4....</msg>
<status status="PASS" starttime="20201112 12:26:32.678" endtime="20201112 12:26:32.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.695" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.694" endtime="20201112 12:26:32.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.698" level="INFO">VALUE: [4.808300000000085e-05, 4.7153000000001166e-05, 4.7097000000002887e-05, 4.711099999999899e-05, 4.715199999999822e-05, 4.7139000000001596e-05, 4.716699999999727e-05, 4.7167000000000736e-05, 4.7125000000002026e-05, 4.715200000000169e-05, 4.71529999999977e-05, 4.713899999999813e-05, 4.7139000000001596e-05, 4.7111000000002456e-05, 4.713799999999865e-05, 4.712499999999856e-05, 4.715200000000169e-05, 4.715199999999822e-05, 4.71529999999977e-05, 4.715200000000169e-05, 4.7139000000001596e-05, 4.722199999999954e-05, 4.715200000000169e-05, 4.713899999999813e-05, 4.715200000000169e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.7125000000002026e-05, 4.7153000000001166e-05, 4.711099999999899e-05, 4.7153000000001166e-05, 4.716600000000126e-05, 4.7167000000000736e-05, 4.716599999999779e-05, 4.7153000000001166e-05, 4.7167000000000736e-05, 4.7125000000002026e-05, 4.7125000000002026e-05, 4.7153000000001166e-05, 4.709800000000236e-05, 4.722199999999954e-05, 4.7153000000001166e-05, 4.709699999999942e-05, 4.713899999999813e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.7153000000001166e-05, 4.709799999999889e-05, 4.7125000000002026e-05, 4.71940000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.696" endtime="20201112 12:26:32.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.692" endtime="20201112 12:26:32.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.708" endtime="20201112 12:26:32.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.712" endtime="20201112 12:26:32.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.711" endtime="20201112 12:26:32.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.706" endtime="20201112 12:26:32.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.335" endtime="20201112 12:26:32.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.334" endtime="20201112 12:26:32.733"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.742" endtime="20201112 12:26:32.757"></status>
</kw>
<msg timestamp="20201112 12:26:32.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.740" endtime="20201112 12:26:32.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.759" endtime="20201112 12:26:32.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.761" endtime="20201112 12:26:32.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.738" endtime="20201112 12:26:32.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.736" endtime="20201112 12:26:32.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.770" endtime="20201112 12:26:33.056"></status>
</kw>
<msg timestamp="20201112 12:26:33.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02174775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:32.769" endtime="20201112 12:26:33.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02174775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:33.060" endtime="20201112 12:26:33.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.069" endtime="20201112 12:26:33.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.766" endtime="20201112 12:26:33.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.764" endtime="20201112 12:26:33.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.075" level="INFO">${RESULT} = [{'time': 0.02174775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2957999999998784e-05, 'source_diff': 5.2957999999998784e-05}, {'time': 0.021823847, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:33.072" endtime="20201112 12:26:33.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.089" level="INFO">${ACCURACY} = {'diff': [5.2957999999998784e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.71529999999977e-05, 4.713899999999813e-05, 4.709799999999889e-05, 4.713899999999813e-05, 4.715200000000169e-05, 5.20...</msg>
<status status="PASS" starttime="20201112 12:26:33.076" endtime="20201112 12:26:33.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.094" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.093" endtime="20201112 12:26:33.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.096" level="INFO">VALUE: [5.2957999999998784e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.71529999999977e-05, 4.713899999999813e-05, 4.709799999999889e-05, 4.713899999999813e-05, 4.715200000000169e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.20279999999991e-05, 4.713899999999813e-05, 5.2014000000003e-05, 4.7181000000000306e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.199999999999996e-05, 5.1971999999997354e-05, 5.199999999999996e-05, 4.715200000000169e-05, 5.198600000000039e-05, 5.1971999999997354e-05, 4.71529999999977e-05, 5.20279999999991e-05, 4.7153000000001166e-05, 5.201399999999953e-05, 5.198600000000039e-05, 5.201399999999953e-05, 4.7153000000001166e-05, 4.713899999999813e-05, 5.201300000000006e-05, 5.199999999999996e-05, 5.206899999999834e-05, 5.201399999999953e-05, 4.712499999999856e-05, 4.7153000000001166e-05, 5.201399999999953e-05, 5.1985999999996924e-05, 5.199999999999996e-05, 5.20279999999991e-05, 5.201399999999953e-05, 4.716599999999779e-05, 4.7139000000001596e-05, 5.198600000000039e-05, 5.201399999999953e-05, 4.71529999999977e-05, 5.199999999999996e-05, 4.7139000000001596e-05, 5.199999999999996e-05, 5.201399999999953e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.095" endtime="20201112 12:26:33.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.090" endtime="20201112 12:26:33.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.100" endtime="20201112 12:26:33.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.105" endtime="20201112 12:26:33.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.104" endtime="20201112 12:26:33.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.098" endtime="20201112 12:26:33.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.734" endtime="20201112 12:26:33.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.734" endtime="20201112 12:26:33.126"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.135" endtime="20201112 12:26:33.150"></status>
</kw>
<msg timestamp="20201112 12:26:33.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.133" endtime="20201112 12:26:33.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.152" endtime="20201112 12:26:33.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.154" endtime="20201112 12:26:33.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.131" endtime="20201112 12:26:33.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.129" endtime="20201112 12:26:33.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.163" endtime="20201112 12:26:33.449"></status>
</kw>
<msg timestamp="20201112 12:26:33.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.162" endtime="20201112 12:26:33.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.453" endtime="20201112 12:26:33.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.461" endtime="20201112 12:26:33.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.159" endtime="20201112 12:26:33.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.158" endtime="20201112 12:26:33.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.468" level="INFO">${RESULT} = [{'time': 0.021782069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.294400000000268e-05, 'source_diff': 5.294400000000268e-05}, {'time': 0.021856486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:33.465" endtime="20201112 12:26:33.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.482" level="INFO">${ACCURACY} = {'diff': [5.294400000000268e-05, 5.2014000000003e-05, 5.204200000000214e-05, 5.208299999999791e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.194400000000168e-05, 5.199999999999996e-05, 5.207000...</msg>
<status status="PASS" starttime="20201112 12:26:33.469" endtime="20201112 12:26:33.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.487" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.485" endtime="20201112 12:26:33.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.489" level="INFO">VALUE: [5.294400000000268e-05, 5.2014000000003e-05, 5.204200000000214e-05, 5.208299999999791e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.194400000000168e-05, 5.199999999999996e-05, 5.207000000000128e-05, 5.199999999999996e-05, 5.205500000000224e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.204199999999867e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.199999999999996e-05, 5.1971999999997354e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.2014000000003e-05, 5.201300000000006e-05, 5.199999999999996e-05, 5.197200000000082e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.199999999999996e-05, 5.205500000000224e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.198600000000039e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.20279999999991e-05, 5.199999999999996e-05, 5.197200000000082e-05, 5.199999999999996e-05, 5.20279999999991e-05, 5.198699999999987e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.202699999999963e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.488" endtime="20201112 12:26:33.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.483" endtime="20201112 12:26:33.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.493" endtime="20201112 12:26:33.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.497" endtime="20201112 12:26:33.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.495" endtime="20201112 12:26:33.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.491" endtime="20201112 12:26:33.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.127" endtime="20201112 12:26:33.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.127" endtime="20201112 12:26:33.518"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.527" endtime="20201112 12:26:33.542"></status>
</kw>
<msg timestamp="20201112 12:26:33.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.525" endtime="20201112 12:26:33.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.544" endtime="20201112 12:26:33.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.546" endtime="20201112 12:26:33.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.523" endtime="20201112 12:26:33.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.521" endtime="20201112 12:26:33.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.555" endtime="20201112 12:26:33.841"></status>
</kw>
<msg timestamp="20201112 12:26:33.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.554" endtime="20201112 12:26:33.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.845" endtime="20201112 12:26:33.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.853" endtime="20201112 12:26:33.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.551" endtime="20201112 12:26:33.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.550" endtime="20201112 12:26:33.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.860" level="INFO">${RESULT} = [{'time': 0.021709639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2957999999998784e-05, 'source_diff': 5.2957999999998784e-05}, {'time': 0.021779111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:33.857" endtime="20201112 12:26:33.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.874" level="INFO">${ACCURACY} = {'diff': [5.2957999999998784e-05, 5.204199999999867e-05, 5.199999999999996e-05, 5.209700000000095e-05, 5.202800000000257e-05, 5.195900000000073e-05, 5.209700000000095e-05, 5.197200000000082e-05, 5.204...</msg>
<status status="PASS" starttime="20201112 12:26:33.861" endtime="20201112 12:26:33.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.878" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.877" endtime="20201112 12:26:33.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.881" level="INFO">VALUE: [5.2957999999998784e-05, 5.204199999999867e-05, 5.199999999999996e-05, 5.209700000000095e-05, 5.202800000000257e-05, 5.195900000000073e-05, 5.209700000000095e-05, 5.197200000000082e-05, 5.204200000000214e-05, 5.20409999999992e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.204199999999867e-05, 5.199999999999996e-05, 5.205599999999824e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.206900000000181e-05, 5.199999999999996e-05, 5.20279999999991e-05, 5.208399999999738e-05, 5.202800000000257e-05, 5.202699999999963e-05, 5.199999999999996e-05, 5.197200000000082e-05, 5.2014000000003e-05, 5.201399999999953e-05, 5.1957999999997784e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.20279999999991e-05, 5.201300000000006e-05, 5.2014000000003e-05, 5.20279999999991e-05, 5.202800000000257e-05, 5.199999999999996e-05, 5.201399999999953e-05, 5.20279999999991e-05, 5.2014000000003e-05, 5.199999999999996e-05, 5.1957999999997784e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.204100000000267e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.199999999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.879" endtime="20201112 12:26:33.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.875" endtime="20201112 12:26:33.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.885" endtime="20201112 12:26:33.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.889" endtime="20201112 12:26:33.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.887" endtime="20201112 12:26:33.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.883" endtime="20201112 12:26:33.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.519" endtime="20201112 12:26:33.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.518" endtime="20201112 12:26:33.910"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.919" endtime="20201112 12:26:33.934"></status>
</kw>
<msg timestamp="20201112 12:26:33.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.917" endtime="20201112 12:26:33.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.936" endtime="20201112 12:26:33.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.938" endtime="20201112 12:26:33.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.914" endtime="20201112 12:26:33.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.912" endtime="20201112 12:26:33.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.947" endtime="20201112 12:26:34.233"></status>
</kw>
<msg timestamp="20201112 12:26:34.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021701, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:33.946" endtime="20201112 12:26:34.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021701, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:34.237" endtime="20201112 12:26:34.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.246" endtime="20201112 12:26:34.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.943" endtime="20201112 12:26:34.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.941" endtime="20201112 12:26:34.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.252" level="INFO">${RESULT} = [{'time': 0.021701, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.294400000000268e-05, 'source_diff': 5.294400000000268e-05}, {'time': 0.021775125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:34.249" endtime="20201112 12:26:34.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.266" level="INFO">${ACCURACY} = {'diff': [5.294400000000268e-05, 5.199999999999996e-05, 5.201399999999953e-05, 5.20279999999991e-05, 5.201399999999953e-05, 5.204199999999867e-05, 5.201399999999953e-05, 5.197200000000082e-05, 5.20140...</msg>
<status status="PASS" starttime="20201112 12:26:34.253" endtime="20201112 12:26:34.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.270" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.269" endtime="20201112 12:26:34.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.273" level="INFO">VALUE: [5.294400000000268e-05, 5.199999999999996e-05, 5.201399999999953e-05, 5.20279999999991e-05, 5.201399999999953e-05, 5.204199999999867e-05, 5.201399999999953e-05, 5.197200000000082e-05, 5.2014000000003e-05, 5.205499999999877e-05, 5.199999999999996e-05, 5.20279999999991e-05, 5.198600000000039e-05, 5.19730000000003e-05, 5.202699999999963e-05, 5.201300000000006e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.204100000000267e-05, 5.204199999999867e-05, 5.201300000000006e-05, 5.199999999999996e-05, 5.2014000000003e-05, 5.1971999999997354e-05, 5.199999999999996e-05, 5.202800000000257e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.202800000000257e-05, 5.20279999999991e-05, 5.201399999999953e-05, 5.20279999999991e-05, 5.199999999999996e-05, 5.20279999999991e-05, 5.201399999999953e-05, 5.201300000000006e-05, 5.204199999999867e-05, 5.2014000000003e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.208400000000085e-05, 5.1971999999997354e-05, 5.197200000000082e-05, 5.199999999999996e-05, 5.2014000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.271" endtime="20201112 12:26:34.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.267" endtime="20201112 12:26:34.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.277" endtime="20201112 12:26:34.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.281" endtime="20201112 12:26:34.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.279" endtime="20201112 12:26:34.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.275" endtime="20201112 12:26:34.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.911" endtime="20201112 12:26:34.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.910" endtime="20201112 12:26:34.302"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.310" endtime="20201112 12:26:34.326"></status>
</kw>
<msg timestamp="20201112 12:26:34.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.309" endtime="20201112 12:26:34.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.327" endtime="20201112 12:26:34.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.330" endtime="20201112 12:26:34.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.306" endtime="20201112 12:26:34.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.304" endtime="20201112 12:26:34.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.339" endtime="20201112 12:26:34.627"></status>
</kw>
<msg timestamp="20201112 12:26:34.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.338" endtime="20201112 12:26:34.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.631" endtime="20201112 12:26:34.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.639" endtime="20201112 12:26:34.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.335" endtime="20201112 12:26:34.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.333" endtime="20201112 12:26:34.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.646" level="INFO">${RESULT} = [{'time': 0.021658389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.300000000000096e-05, 'source_diff': 5.300000000000096e-05}, {'time': 0.021733708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:34.643" endtime="20201112 12:26:34.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.659" level="INFO">${ACCURACY} = {'diff': [5.300000000000096e-05, 5.202699999999963e-05, 5.199999999999996e-05, 5.201300000000006e-05, 5.198600000000039e-05, 5.202800000000257e-05, 5.194500000000116e-05, 5.209800000000042e-05, 5.1999...</msg>
<status status="PASS" starttime="20201112 12:26:34.647" endtime="20201112 12:26:34.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.664" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.663" endtime="20201112 12:26:34.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.666" level="INFO">VALUE: [5.300000000000096e-05, 5.202699999999963e-05, 5.199999999999996e-05, 5.201300000000006e-05, 5.198600000000039e-05, 5.202800000000257e-05, 5.194500000000116e-05, 5.209800000000042e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.2014000000003e-05, 5.201399999999953e-05, 5.201300000000006e-05, 5.201399999999953e-05, 5.19730000000003e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.198600000000039e-05, 5.199999999999996e-05, 5.2014000000003e-05, 5.205599999999824e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.20279999999991e-05, 5.202699999999963e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.202699999999963e-05, 5.201300000000006e-05, 5.20279999999991e-05, 5.198600000000039e-05, 5.198600000000039e-05, 5.20279999999991e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.2014000000003e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.201399999999953e-05, 5.198600000000039e-05, 5.198600000000039e-05, 5.201399999999953e-05, 5.202800000000257e-05, 5.20279999999991e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.665" endtime="20201112 12:26:34.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.660" endtime="20201112 12:26:34.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.670" endtime="20201112 12:26:34.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.675" endtime="20201112 12:26:34.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.674" endtime="20201112 12:26:34.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.668" endtime="20201112 12:26:34.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.303" endtime="20201112 12:26:34.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.302" endtime="20201112 12:26:34.696"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.705" endtime="20201112 12:26:34.723"></status>
</kw>
<msg timestamp="20201112 12:26:34.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.703" endtime="20201112 12:26:34.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.724" endtime="20201112 12:26:34.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.727" endtime="20201112 12:26:34.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.701" endtime="20201112 12:26:34.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.699" endtime="20201112 12:26:34.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.736" endtime="20201112 12:26:35.022"></status>
</kw>
<msg timestamp="20201112 12:26:35.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.734" endtime="20201112 12:26:35.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.026" endtime="20201112 12:26:35.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.034" endtime="20201112 12:26:35.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.732" endtime="20201112 12:26:35.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.730" endtime="20201112 12:26:35.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.041" level="INFO">${RESULT} = [{'time': 0.021648208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.213899999999884e-05, 'source_diff': 7.213899999999884e-05}, {'time': 0.021777625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:35.037" endtime="20201112 12:26:35.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.054" level="INFO">${ACCURACY} = {'diff': [7.213899999999884e-05, 7.169399999999715e-05, 7.202800000000176e-05, 7.165300000000138e-05, 7.183300000000031e-05, 7.144400000000037e-05, 7.151400000000169e-05, 7.218100000000102e-05, 7.2013...</msg>
<status status="PASS" starttime="20201112 12:26:35.042" endtime="20201112 12:26:35.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.059" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.058" endtime="20201112 12:26:35.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.061" level="INFO">VALUE: [7.213899999999884e-05, 7.169399999999715e-05, 7.202800000000176e-05, 7.165300000000138e-05, 7.183300000000031e-05, 7.144400000000037e-05, 7.151400000000169e-05, 7.218100000000102e-05, 7.201300000000271e-05, 7.145899999999941e-05, 7.200000000000262e-05, 7.144499999999984e-05, 7.194500000000034e-05, 7.199999999999915e-05, 7.16109999999992e-05, 7.170800000000019e-05, 7.199999999999915e-05, 7.218000000000155e-05, 7.213900000000231e-05, 7.183300000000031e-05, 7.20560000000009e-05, 7.15690000000005e-05, 7.168000000000105e-05, 7.158300000000006e-05, 7.17910000000016e-05, 7.186199999999893e-05, 7.137500000000199e-05, 7.180600000000065e-05, 7.145899999999941e-05, 7.195800000000044e-05, 7.212500000000274e-05, 7.2069000000001e-05, 7.158399999999954e-05, 7.144400000000037e-05, 7.158300000000006e-05, 7.138900000000156e-05, 7.225000000000287e-05, 7.16109999999992e-05, 7.166700000000095e-05, 7.199999999999915e-05, 7.14170000000007e-05, 7.188899999999859e-05, 7.172199999999976e-05, 7.162500000000224e-05, 7.151399999999822e-05, 7.18049999999977e-05, 7.176399999999847e-05, 7.138900000000156e-05, 7.199999999999915e-05, 7.172199999999976e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.060" endtime="20201112 12:26:35.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.055" endtime="20201112 12:26:35.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.065" endtime="20201112 12:26:35.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.069" endtime="20201112 12:26:35.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.067" endtime="20201112 12:26:35.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.063" endtime="20201112 12:26:35.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.697" endtime="20201112 12:26:35.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.697" endtime="20201112 12:26:35.090"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.099" endtime="20201112 12:26:35.117"></status>
</kw>
<msg timestamp="20201112 12:26:35.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.097" endtime="20201112 12:26:35.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.118" endtime="20201112 12:26:35.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.121" endtime="20201112 12:26:35.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.095" endtime="20201112 12:26:35.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.093" endtime="20201112 12:26:35.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.130" endtime="20201112 12:26:35.416"></status>
</kw>
<msg timestamp="20201112 12:26:35.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02174125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:35.128" endtime="20201112 12:26:35.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02174125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:35.420" endtime="20201112 12:26:35.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.429" endtime="20201112 12:26:35.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.126" endtime="20201112 12:26:35.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.124" endtime="20201112 12:26:35.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.435" level="INFO">${RESULT} = [{'time': 0.02174125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.27499999999999e-05, 'source_diff': 7.27499999999999e-05}, {'time': 0.021876667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:35.432" endtime="20201112 12:26:35.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.449" level="INFO">${ACCURACY} = {'diff': [7.27499999999999e-05, 7.286100000000045e-05, 7.272200000000076e-05, 7.254200000000183e-05, 7.249999999999965e-05, 7.298600000000058e-05, 7.266700000000195e-05, 7.312500000000027e-05, 7.24450...</msg>
<status status="PASS" starttime="20201112 12:26:35.436" endtime="20201112 12:26:35.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.453" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.452" endtime="20201112 12:26:35.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.456" level="INFO">VALUE: [7.27499999999999e-05, 7.286100000000045e-05, 7.272200000000076e-05, 7.254200000000183e-05, 7.249999999999965e-05, 7.298600000000058e-05, 7.266700000000195e-05, 7.312500000000027e-05, 7.244500000000084e-05, 7.295900000000091e-05, 7.272200000000076e-05, 7.284700000000088e-05, 7.32370000000003e-05, 7.258300000000106e-05, 7.270899999999719e-05, 7.273600000000033e-05, 7.287500000000002e-05, 7.300000000000015e-05, 7.294500000000134e-05, 7.301399999999972e-05, 7.307000000000147e-05, 7.249999999999965e-05, 7.312500000000027e-05, 7.304100000000285e-05, 7.281900000000174e-05, 7.294400000000187e-05, 7.245800000000094e-05, 7.311099999999723e-05, 7.309699999999766e-05, 7.276399999999947e-05, 7.331900000000224e-05, 7.24300000000018e-05, 7.312500000000027e-05, 7.249999999999965e-05, 7.238899999999909e-05, 7.237499999999952e-05, 7.245800000000094e-05, 7.254200000000183e-05, 7.238899999999909e-05, 7.269399999999815e-05, 7.287500000000002e-05, 7.245800000000094e-05, 7.237499999999952e-05, 7.30560000000019e-05, 7.305499999999895e-05, 7.243100000000127e-05, 7.273600000000033e-05, 7.244500000000084e-05, 7.323600000000083e-05, 7.272199999999729e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.455" endtime="20201112 12:26:35.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.450" endtime="20201112 12:26:35.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.460" endtime="20201112 12:26:35.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.464" endtime="20201112 12:26:35.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.462" endtime="20201112 12:26:35.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.458" endtime="20201112 12:26:35.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.091" endtime="20201112 12:26:35.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.090" endtime="20201112 12:26:35.485"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.494" endtime="20201112 12:26:35.512"></status>
</kw>
<msg timestamp="20201112 12:26:35.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.492" endtime="20201112 12:26:35.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.513" endtime="20201112 12:26:35.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.516" endtime="20201112 12:26:35.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.489" endtime="20201112 12:26:35.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.487" endtime="20201112 12:26:35.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.525" endtime="20201112 12:26:35.810"></status>
</kw>
<msg timestamp="20201112 12:26:35.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.523" endtime="20201112 12:26:35.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.815" endtime="20201112 12:26:35.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.823" endtime="20201112 12:26:35.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.521" endtime="20201112 12:26:35.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.519" endtime="20201112 12:26:35.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.829" level="INFO">${RESULT} = [{'time': 0.021875903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.441700000000023e-05, 'source_diff': 7.441700000000023e-05}, {'time': 0.022012361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:35.826" endtime="20201112 12:26:35.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.843" level="INFO">${ACCURACY} = {'diff': [7.441700000000023e-05, 7.436100000000195e-05, 7.366699999999948e-05, 7.367999999999958e-05, 7.430599999999968e-05, 7.38049999999997e-05, 7.430499999999673e-05, 7.368099999999905e-05, 7.39309...</msg>
<status status="PASS" starttime="20201112 12:26:35.830" endtime="20201112 12:26:35.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.848" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.847" endtime="20201112 12:26:35.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.850" level="INFO">VALUE: [7.441700000000023e-05, 7.436100000000195e-05, 7.366699999999948e-05, 7.367999999999958e-05, 7.430599999999968e-05, 7.38049999999997e-05, 7.430499999999673e-05, 7.368099999999905e-05, 7.39309999999993e-05, 7.363900000000034e-05, 7.350000000000065e-05, 7.331899999999877e-05, 7.38049999999997e-05, 7.351400000000022e-05, 7.36110000000012e-05, 7.358400000000154e-05, 7.348600000000108e-05, 7.398599999999811e-05, 7.369499999999862e-05, 7.36110000000012e-05, 7.397200000000201e-05, 7.336100000000095e-05, 7.39439999999994e-05, 7.340299999999966e-05, 7.336100000000095e-05, 7.429200000000011e-05, 7.34309999999988e-05, 7.406899999999952e-05, 7.35560000000024e-05, 7.336100000000095e-05, 7.380599999999918e-05, 7.342999999999933e-05, 7.401400000000072e-05, 7.368100000000252e-05, 7.350000000000065e-05, 7.392999999999983e-05, 7.400000000000115e-05, 7.381900000000274e-05, 7.343100000000227e-05, 7.380600000000265e-05, 7.362500000000077e-05, 7.379100000000013e-05, 7.366700000000295e-05, 7.42500000000014e-05, 7.400000000000115e-05, 7.405499999999995e-05, 7.381999999999875e-05, 7.38049999999997e-05, 7.40829999999991e-05, 7.381900000000274e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.849" endtime="20201112 12:26:35.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.844" endtime="20201112 12:26:35.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.854" endtime="20201112 12:26:35.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.858" endtime="20201112 12:26:35.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.856" endtime="20201112 12:26:35.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.852" endtime="20201112 12:26:35.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.486" endtime="20201112 12:26:35.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.485" endtime="20201112 12:26:35.879"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.888" endtime="20201112 12:26:35.906"></status>
</kw>
<msg timestamp="20201112 12:26:35.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.886" endtime="20201112 12:26:35.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.907" endtime="20201112 12:26:35.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.910" endtime="20201112 12:26:35.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.883" endtime="20201112 12:26:35.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.881" endtime="20201112 12:26:35.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.919" endtime="20201112 12:26:36.206"></status>
</kw>
<msg timestamp="20201112 12:26:36.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.917" endtime="20201112 12:26:36.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.210" endtime="20201112 12:26:36.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.218" endtime="20201112 12:26:36.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.915" endtime="20201112 12:26:36.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.913" endtime="20201112 12:26:36.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.225" level="INFO">${RESULT} = [{'time': 0.021809625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.529199999999764e-05, 'source_diff': 7.529199999999764e-05}, {'time': 0.021932056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:36.222" endtime="20201112 12:26:36.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.239" level="INFO">${ACCURACY} = {'diff': [7.529199999999764e-05, 7.497299999999901e-05, 7.51110000000027e-05, 7.498600000000258e-05, 7.480600000000018e-05, 7.469400000000015e-05, 7.46110000000022e-05, 7.522200000000326e-05, 7.512500...</msg>
<status status="PASS" starttime="20201112 12:26:36.226" endtime="20201112 12:26:36.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.244" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.243" endtime="20201112 12:26:36.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.246" level="INFO">VALUE: [7.529199999999764e-05, 7.497299999999901e-05, 7.51110000000027e-05, 7.498600000000258e-05, 7.480600000000018e-05, 7.469400000000015e-05, 7.46110000000022e-05, 7.522200000000326e-05, 7.512500000000227e-05, 7.44309999999998e-05, 7.509699999999966e-05, 7.441700000000023e-05, 7.523599999999936e-05, 7.516699999999751e-05, 7.499999999999868e-05, 7.533400000000329e-05, 7.50830000000001e-05, 7.523599999999936e-05, 7.479100000000113e-05, 7.473599999999886e-05, 7.437499999999805e-05, 7.522199999999979e-05, 7.53189999999973e-05, 7.500000000000215e-05, 7.437500000000152e-05, 7.523599999999936e-05, 7.48050000000007e-05, 7.523599999999936e-05, 7.480600000000018e-05, 7.523599999999936e-05, 7.455500000000045e-05, 7.494499999999987e-05, 7.470899999999919e-05, 7.504099999999791e-05, 7.479200000000061e-05, 7.441700000000023e-05, 7.522199999999979e-05, 7.516700000000098e-05, 7.504200000000086e-05, 7.518000000000108e-05, 7.491699999999726e-05, 7.438899999999762e-05, 7.498599999999911e-05, 7.532000000000025e-05, 7.461099999999873e-05, 7.530599999999721e-05, 7.519500000000012e-05, 7.436099999999848e-05, 7.518100000000055e-05, 7.526400000000197e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.245" endtime="20201112 12:26:36.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.240" endtime="20201112 12:26:36.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.250" endtime="20201112 12:26:36.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.255" endtime="20201112 12:26:36.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.254" endtime="20201112 12:26:36.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.248" endtime="20201112 12:26:36.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.880" endtime="20201112 12:26:36.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.879" endtime="20201112 12:26:36.276"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.285" endtime="20201112 12:26:36.303"></status>
</kw>
<msg timestamp="20201112 12:26:36.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.283" endtime="20201112 12:26:36.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.305" endtime="20201112 12:26:36.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.307" endtime="20201112 12:26:36.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.281" endtime="20201112 12:26:36.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.279" endtime="20201112 12:26:36.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.316" endtime="20201112 12:26:36.601"></status>
</kw>
<msg timestamp="20201112 12:26:36.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021725639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.314" endtime="20201112 12:26:36.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021725639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.605" endtime="20201112 12:26:36.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.613" endtime="20201112 12:26:36.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.312" endtime="20201112 12:26:36.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.310" endtime="20201112 12:26:36.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.620" level="INFO">${RESULT} = [{'time': 0.021725639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.579200000000161e-05, 'source_diff': 7.579200000000161e-05}, {'time': 0.021852083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:36.617" endtime="20201112 12:26:36.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.634" level="INFO">${ACCURACY} = {'diff': [7.579200000000161e-05, 7.568000000000158e-05, 7.579099999999866e-05, 7.577799999999857e-05, 7.572200000000029e-05, 7.623600000000036e-05, 7.61249999999998e-05, 7.63189999999983e-05, 7.538900...</msg>
<status status="PASS" starttime="20201112 12:26:36.621" endtime="20201112 12:26:36.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.638" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.637" endtime="20201112 12:26:36.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.641" level="INFO">VALUE: [7.579200000000161e-05, 7.568000000000158e-05, 7.579099999999866e-05, 7.577799999999857e-05, 7.572200000000029e-05, 7.623600000000036e-05, 7.61249999999998e-05, 7.63189999999983e-05, 7.53890000000021e-05, 7.604200000000186e-05, 7.630599999999821e-05, 7.572200000000029e-05, 7.597300000000001e-05, 7.534799999999939e-05, 7.612500000000327e-05, 7.598600000000011e-05, 7.605499999999848e-05, 7.548600000000308e-05, 7.598600000000011e-05, 7.573599999999986e-05, 7.586099999999998e-05, 7.57769999999991e-05, 7.616599999999904e-05, 7.56110000000032e-05, 7.604200000000186e-05, 7.604199999999839e-05, 7.573599999999986e-05, 7.623600000000036e-05, 7.536099999999948e-05, 7.544399999999743e-05, 7.55830000000006e-05, 7.605600000000143e-05, 7.618000000000208e-05, 7.63189999999983e-05, 7.591699999999826e-05, 7.629199999999864e-05, 7.609700000000066e-05, 7.619400000000165e-05, 7.616699999999851e-05, 7.567999999999811e-05, 7.541700000000123e-05, 7.56249999999993e-05, 7.615300000000241e-05, 7.534699999999991e-05, 7.536199999999896e-05, 7.573599999999986e-05, 7.591699999999826e-05, 7.617999999999861e-05, 7.60830000000011e-05, 7.616699999999851e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.639" endtime="20201112 12:26:36.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.635" endtime="20201112 12:26:36.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.645" endtime="20201112 12:26:36.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.649" endtime="20201112 12:26:36.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.647" endtime="20201112 12:26:36.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.643" endtime="20201112 12:26:36.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.277" endtime="20201112 12:26:36.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.276" endtime="20201112 12:26:36.670"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.679" endtime="20201112 12:26:36.697"></status>
</kw>
<msg timestamp="20201112 12:26:36.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.677" endtime="20201112 12:26:36.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.698" endtime="20201112 12:26:36.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.701" endtime="20201112 12:26:36.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.674" endtime="20201112 12:26:36.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.672" endtime="20201112 12:26:36.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.710" endtime="20201112 12:26:36.995"></status>
</kw>
<msg timestamp="20201112 12:26:36.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.708" endtime="20201112 12:26:36.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.000" endtime="20201112 12:26:37.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.008" endtime="20201112 12:26:37.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.706" endtime="20201112 12:26:37.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.704" endtime="20201112 12:26:37.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.015" level="INFO">${RESULT} = [{'time': 0.021727819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.66250000000003e-05, 'source_diff': 7.66250000000003e-05}, {'time': 0.021853194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:37.011" endtime="20201112 12:26:37.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.028" level="INFO">${ACCURACY} = {'diff': [7.66250000000003e-05, 7.673600000000086e-05, 7.691600000000326e-05, 7.698599999999764e-05, 7.717999999999961e-05, 7.715200000000047e-05, 7.636099999999701e-05, 7.709800000000114e-05, 7.68609...</msg>
<status status="PASS" starttime="20201112 12:26:37.016" endtime="20201112 12:26:37.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.033" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.032" endtime="20201112 12:26:37.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.035" level="INFO">VALUE: [7.66250000000003e-05, 7.673600000000086e-05, 7.691600000000326e-05, 7.698599999999764e-05, 7.717999999999961e-05, 7.715200000000047e-05, 7.636099999999701e-05, 7.709800000000114e-05, 7.686099999999751e-05, 7.687500000000055e-05, 7.704199999999939e-05, 7.661100000000073e-05, 7.711200000000071e-05, 7.730499999999974e-05, 7.661100000000073e-05, 7.633299999999787e-05, 7.670799999999825e-05, 7.691699999999926e-05, 7.692999999999936e-05, 7.641600000000276e-05, 7.656899999999855e-05, 7.691699999999926e-05, 7.631900000000177e-05, 7.688900000000012e-05, 7.665299999999944e-05, 7.661099999999726e-05, 7.70969999999982e-05, 7.684699999999794e-05, 7.66250000000003e-05, 7.711100000000123e-05, 7.680600000000218e-05, 7.636199999999996e-05, 7.64029999999992e-05, 7.71250000000008e-05, 7.722300000000126e-05, 7.634700000000091e-05, 7.699999999999721e-05, 7.670799999999825e-05, 7.65969999999977e-05, 7.672200000000129e-05, 7.665299999999944e-05, 7.647200000000104e-05, 7.665299999999944e-05, 7.70969999999982e-05, 7.69579999999985e-05, 7.665300000000291e-05, 7.727800000000007e-05, 7.686100000000098e-05, 7.630499999999873e-05, 7.720799999999875e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.034" endtime="20201112 12:26:37.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.029" endtime="20201112 12:26:37.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.039" endtime="20201112 12:26:37.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.043" endtime="20201112 12:26:37.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.042" endtime="20201112 12:26:37.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.037" endtime="20201112 12:26:37.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.671" endtime="20201112 12:26:37.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.670" endtime="20201112 12:26:37.064"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.073" endtime="20201112 12:26:37.091"></status>
</kw>
<msg timestamp="20201112 12:26:37.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.071" endtime="20201112 12:26:37.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.093" endtime="20201112 12:26:37.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.095" endtime="20201112 12:26:37.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.069" endtime="20201112 12:26:37.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.067" endtime="20201112 12:26:37.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.104" endtime="20201112 12:26:37.390"></status>
</kw>
<msg timestamp="20201112 12:26:37.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021631444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.103" endtime="20201112 12:26:37.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021631444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.394" endtime="20201112 12:26:37.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.402" endtime="20201112 12:26:37.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.100" endtime="20201112 12:26:37.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.098" endtime="20201112 12:26:37.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.409" level="INFO">${RESULT} = [{'time': 0.021631444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.772199999999882e-05, 'source_diff': 7.772199999999882e-05}, {'time': 0.021760861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:37.406" endtime="20201112 12:26:37.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.423" level="INFO">${ACCURACY} = {'diff': [7.772199999999882e-05, 7.777800000000057e-05, 7.74030000000002e-05, 7.752800000000032e-05, 7.811100000000223e-05, 7.761099999999826e-05, 7.775000000000143e-05, 7.816599999999757e-05, 7.78469...</msg>
<status status="PASS" starttime="20201112 12:26:37.410" endtime="20201112 12:26:37.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.427" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.426" endtime="20201112 12:26:37.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.430" level="INFO">VALUE: [7.772199999999882e-05, 7.777800000000057e-05, 7.74030000000002e-05, 7.752800000000032e-05, 7.811100000000223e-05, 7.761099999999826e-05, 7.775000000000143e-05, 7.816599999999757e-05, 7.784699999999894e-05, 7.830600000000021e-05, 7.797200000000254e-05, 7.820799999999975e-05, 7.742999999999986e-05, 7.813900000000137e-05, 7.737500000000105e-05, 7.827800000000107e-05, 7.811099999999876e-05, 7.784699999999894e-05, 7.766599999999707e-05, 7.804200000000039e-05, 7.777800000000057e-05, 7.805500000000049e-05, 7.81250000000018e-05, 7.744399999999943e-05, 7.808299999999962e-05, 7.798599999999864e-05, 7.792999999999689e-05, 7.754100000000042e-05, 7.787499999999808e-05, 7.754100000000042e-05, 7.806999999999953e-05, 7.804100000000092e-05, 7.74030000000002e-05, 7.748599999999814e-05, 7.76250000000013e-05, 7.775000000000143e-05, 7.752699999999738e-05, 7.806999999999953e-05, 7.816700000000051e-05, 7.79030000000007e-05, 7.786100000000198e-05, 7.804200000000039e-05, 7.81389999999979e-05, 7.783299999999937e-05, 7.761099999999826e-05, 7.820899999999922e-05, 7.797300000000201e-05, 7.823599999999889e-05, 7.765300000000044e-05, 7.81250000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.428" endtime="20201112 12:26:37.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.424" endtime="20201112 12:26:37.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.433" endtime="20201112 12:26:37.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.438" endtime="20201112 12:26:37.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.436" endtime="20201112 12:26:37.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.432" endtime="20201112 12:26:37.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.065" endtime="20201112 12:26:37.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.065" endtime="20201112 12:26:37.459"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.467" endtime="20201112 12:26:37.486"></status>
</kw>
<msg timestamp="20201112 12:26:37.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.466" endtime="20201112 12:26:37.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.487" endtime="20201112 12:26:37.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.490" endtime="20201112 12:26:37.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.463" endtime="20201112 12:26:37.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.461" endtime="20201112 12:26:37.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.499" endtime="20201112 12:26:37.784"></status>
</kw>
<msg timestamp="20201112 12:26:37.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021824583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.497" endtime="20201112 12:26:37.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021824583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.788" endtime="20201112 12:26:37.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.797" endtime="20201112 12:26:37.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.495" endtime="20201112 12:26:37.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.493" endtime="20201112 12:26:37.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.803" level="INFO">${RESULT} = [{'time': 0.021824583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.91250000000028e-05, 'source_diff': 7.91250000000028e-05}, {'time': 0.021958986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:37.800" endtime="20201112 12:26:37.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.817" level="INFO">${ACCURACY} = {'diff': [7.91250000000028e-05, 7.888899999999865e-05, 7.834699999999944e-05, 7.897200000000007e-05, 7.855500000000099e-05, 7.904099999999845e-05, 7.859799999999917e-05, 7.923599999999989e-05, 7.91529...</msg>
<status status="PASS" starttime="20201112 12:26:37.804" endtime="20201112 12:26:37.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.821" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.820" endtime="20201112 12:26:37.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.824" level="INFO">VALUE: [7.91250000000028e-05, 7.888899999999865e-05, 7.834699999999944e-05, 7.897200000000007e-05, 7.855500000000099e-05, 7.904099999999845e-05, 7.859799999999917e-05, 7.923599999999989e-05, 7.915299999999847e-05, 7.87779999999981e-05, 7.858300000000012e-05, 7.852799999999785e-05, 7.902699999999888e-05, 7.841600000000129e-05, 7.918100000000108e-05, 7.865300000000144e-05, 7.837500000000205e-05, 7.915300000000194e-05, 7.834700000000291e-05, 7.872300000000276e-05, 7.916699999999804e-05, 7.88190000000008e-05, 7.893099999999736e-05, 7.898599999999964e-05, 7.898599999999964e-05, 7.834699999999944e-05, 7.898699999999911e-05, 7.924999999999946e-05, 7.872199999999982e-05, 7.880500000000124e-05, 7.888899999999865e-05, 7.852699999999838e-05, 7.852799999999785e-05, 7.841700000000076e-05, 7.92770000000026e-05, 7.92770000000026e-05, 7.855600000000046e-05, 7.837500000000205e-05, 7.915299999999847e-05, 7.854200000000089e-05, 7.847199999999957e-05, 7.872199999999982e-05, 7.913900000000237e-05, 7.908300000000063e-05, 7.84030000000012e-05, 7.884699999999994e-05, 7.877800000000157e-05, 7.924999999999946e-05, 7.922200000000032e-05, 7.854200000000089e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.822" endtime="20201112 12:26:37.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.818" endtime="20201112 12:26:37.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.834" endtime="20201112 12:26:37.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.839" endtime="20201112 12:26:37.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.838" endtime="20201112 12:26:37.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.832" endtime="20201112 12:26:37.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.460" endtime="20201112 12:26:37.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.459" endtime="20201112 12:26:37.860"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.869" endtime="20201112 12:26:37.887"></status>
</kw>
<msg timestamp="20201112 12:26:37.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.867" endtime="20201112 12:26:37.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.889" endtime="20201112 12:26:37.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.891" endtime="20201112 12:26:37.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.864" endtime="20201112 12:26:37.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.862" endtime="20201112 12:26:37.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.900" endtime="20201112 12:26:38.187"></status>
</kw>
<msg timestamp="20201112 12:26:38.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.899" endtime="20201112 12:26:38.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.191" endtime="20201112 12:26:38.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.199" endtime="20201112 12:26:38.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.896" endtime="20201112 12:26:38.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.894" endtime="20201112 12:26:38.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.206" level="INFO">${RESULT} = [{'time': 0.021672069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.04719999999981e-05, 'source_diff': 8.04719999999981e-05}, {'time': 0.021813375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:38.203" endtime="20201112 12:26:38.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.220" level="INFO">${ACCURACY} = {'diff': [8.04719999999981e-05, 7.990299999999922e-05, 7.936100000000001e-05, 7.98190000000018e-05, 7.966600000000254e-05, 8.0152e-05, 7.991599999999932e-05, 7.952699999999938e-05, 7.951399999999928e-...</msg>
<status status="PASS" starttime="20201112 12:26:38.207" endtime="20201112 12:26:38.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.224" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.223" endtime="20201112 12:26:38.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.227" level="INFO">VALUE: [8.04719999999981e-05, 7.990299999999922e-05, 7.936100000000001e-05, 7.98190000000018e-05, 7.966600000000254e-05, 8.0152e-05, 7.991599999999932e-05, 7.952699999999938e-05, 7.951399999999928e-05, 8.030499999999927e-05, 7.968099999999811e-05, 7.959800000000017e-05, 7.962499999999983e-05, 7.991599999999932e-05, 8.004099999999945e-05, 7.979199999999867e-05, 8.015299999999947e-05, 7.952699999999938e-05, 7.95129999999998e-05, 7.933300000000088e-05, 8.01389999999999e-05, 8.01389999999999e-05, 7.94030000000022e-05, 7.99030000000027e-05, 7.970799999999778e-05, 7.96389999999994e-05, 7.99580000000015e-05, 7.95970000000007e-05, 7.983400000000085e-05, 8.002699999999988e-05, 7.947200000000057e-05, 7.99169999999988e-05, 8.001399999999978e-05, 7.947200000000057e-05, 7.997300000000054e-05, 8.012500000000033e-05, 7.959699999999723e-05, 8.002699999999988e-05, 7.954199999999842e-05, 7.934799999999992e-05, 7.991599999999932e-05, 7.976399999999953e-05, 8.02779999999996e-05, 7.958300000000113e-05, 8.008300000000163e-05, 8.015300000000294e-05, 7.99580000000015e-05, 8.026300000000056e-05, 7.941600000000229e-05, 8.023599999999742e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.225" endtime="20201112 12:26:38.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.220" endtime="20201112 12:26:38.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.230" endtime="20201112 12:26:38.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.234" endtime="20201112 12:26:38.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.232" endtime="20201112 12:26:38.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.228" endtime="20201112 12:26:38.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.861" endtime="20201112 12:26:38.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.860" endtime="20201112 12:26:38.255"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.264" endtime="20201112 12:26:38.282"></status>
</kw>
<msg timestamp="20201112 12:26:38.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.262" endtime="20201112 12:26:38.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.284" endtime="20201112 12:26:38.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.286" endtime="20201112 12:26:38.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.260" endtime="20201112 12:26:38.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.258" endtime="20201112 12:26:38.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.296" endtime="20201112 12:26:38.580"></status>
</kw>
<msg timestamp="20201112 12:26:38.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.294" endtime="20201112 12:26:38.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.584" endtime="20201112 12:26:38.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.593" endtime="20201112 12:26:38.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.291" endtime="20201112 12:26:38.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.290" endtime="20201112 12:26:38.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.600" level="INFO">${RESULT} = [{'time': 0.021652972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.059699999999823e-05, 'source_diff': 8.059699999999823e-05}, {'time': 0.021791375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:38.596" endtime="20201112 12:26:38.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.613" level="INFO">${ACCURACY} = {'diff': [8.059699999999823e-05, 8.034700000000145e-05, 8.123599999999842e-05, 8.070799999999878e-05, 8.113899999999744e-05, 8.129200000000017e-05, 8.062500000000083e-05, 8.074999999999749e-05, 8.1249...</msg>
<status status="PASS" starttime="20201112 12:26:38.600" endtime="20201112 12:26:38.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.618" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.617" endtime="20201112 12:26:38.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.620" level="INFO">VALUE: [8.059699999999823e-05, 8.034700000000145e-05, 8.123599999999842e-05, 8.070799999999878e-05, 8.113899999999744e-05, 8.129200000000017e-05, 8.062500000000083e-05, 8.074999999999749e-05, 8.124999999999799e-05, 8.086200000000099e-05, 8.075000000000096e-05, 8.055599999999899e-05, 8.104199999999992e-05, 8.059699999999823e-05, 8.093099999999936e-05, 8.043099999999886e-05, 8.112499999999787e-05, 8.086099999999805e-05, 8.095799999999903e-05, 8.059699999999823e-05, 8.04450000000019e-05, 8.09169999999998e-05, 8.059699999999823e-05, 8.061200000000074e-05, 8.099999999999774e-05, 8.105599999999949e-05, 8.118000000000014e-05, 8.073600000000139e-05, 8.02909999999997e-05, 8.126399999999756e-05, 8.069399999999921e-05, 8.05970000000017e-05, 8.115300000000047e-05, 8.068099999999911e-05, 8.069500000000215e-05, 8.118099999999961e-05, 8.061100000000126e-05, 8.136100000000202e-05, 8.118099999999961e-05, 8.049999999999724e-05, 8.123600000000189e-05, 8.109699999999873e-05, 8.034700000000145e-05, 8.102800000000035e-05, 8.10269999999974e-05, 8.115300000000047e-05, 8.079199999999967e-05, 8.11109999999983e-05, 8.08329999999989e-05, 8.048600000000114e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.619" endtime="20201112 12:26:38.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.614" endtime="20201112 12:26:38.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.624" endtime="20201112 12:26:38.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.628" endtime="20201112 12:26:38.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.626" endtime="20201112 12:26:38.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.622" endtime="20201112 12:26:38.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.256" endtime="20201112 12:26:38.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.256" endtime="20201112 12:26:38.649"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.658" endtime="20201112 12:26:38.676"></status>
</kw>
<msg timestamp="20201112 12:26:38.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.656" endtime="20201112 12:26:38.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.678" endtime="20201112 12:26:38.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.680" endtime="20201112 12:26:38.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.653" endtime="20201112 12:26:38.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.651" endtime="20201112 12:26:38.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.689" endtime="20201112 12:26:38.974"></status>
</kw>
<msg timestamp="20201112 12:26:38.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.688" endtime="20201112 12:26:38.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.978" endtime="20201112 12:26:38.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.986" endtime="20201112 12:26:38.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.685" endtime="20201112 12:26:38.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.683" endtime="20201112 12:26:38.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.993" level="INFO">${RESULT} = [{'time': 0.021831444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.201299999999884e-05, 'source_diff': 8.201299999999884e-05}, {'time': 0.021976819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:38.990" endtime="20201112 12:26:38.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.007" level="INFO">${ACCURACY} = {'diff': [8.201299999999884e-05, 8.184700000000295e-05, 8.212499999999887e-05, 8.159699999999923e-05, 8.20979999999992e-05, 8.176400000000153e-05, 8.226400000000203e-05, 8.13329999999994e-05, 8.224999...</msg>
<status status="PASS" starttime="20201112 12:26:38.994" endtime="20201112 12:26:39.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.011" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.010" endtime="20201112 12:26:39.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.014" level="INFO">VALUE: [8.201299999999884e-05, 8.184700000000295e-05, 8.212499999999887e-05, 8.159699999999923e-05, 8.20979999999992e-05, 8.176400000000153e-05, 8.226400000000203e-05, 8.13329999999994e-05, 8.224999999999899e-05, 8.14170000000003e-05, 8.220800000000028e-05, 8.170799999999978e-05, 8.212499999999887e-05, 8.220800000000028e-05, 8.19170000000008e-05, 8.138900000000115e-05, 8.148600000000214e-05, 8.170799999999978e-05, 8.201399999999831e-05, 8.134799999999845e-05, 8.134700000000245e-05, 8.19719999999996e-05, 8.2152999999998e-05, 8.154100000000095e-05, 8.208299999999669e-05, 8.16109999999988e-05, 8.1458000000003e-05, 8.152800000000085e-05, 8.155500000000052e-05, 8.222199999999985e-05, 8.152800000000085e-05, 8.133399999999888e-05, 8.222199999999985e-05, 8.190200000000175e-05, 8.202700000000188e-05, 8.16529999999975e-05, 8.205600000000049e-05, 8.19719999999996e-05, 8.19589999999995e-05, 8.163899999999794e-05, 8.229099999999823e-05, 8.202800000000135e-05, 8.205600000000049e-05, 8.165300000000097e-05, 8.201400000000178e-05, 8.21659999999981e-05, 8.169400000000021e-05, 8.15269999999979e-05, 8.18329999999999e-05, 8.190300000000122e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.013" endtime="20201112 12:26:39.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.008" endtime="20201112 12:26:39.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.018" endtime="20201112 12:26:39.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.022" endtime="20201112 12:26:39.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.020" endtime="20201112 12:26:39.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.016" endtime="20201112 12:26:39.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.650" endtime="20201112 12:26:39.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.649" endtime="20201112 12:26:39.043"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.052" endtime="20201112 12:26:39.070"></status>
</kw>
<msg timestamp="20201112 12:26:39.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.050" endtime="20201112 12:26:39.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.072" endtime="20201112 12:26:39.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.074" endtime="20201112 12:26:39.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.047" endtime="20201112 12:26:39.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.045" endtime="20201112 12:26:39.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.083" endtime="20201112 12:26:39.368"></status>
</kw>
<msg timestamp="20201112 12:26:39.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.082" endtime="20201112 12:26:39.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.372" endtime="20201112 12:26:39.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.381" endtime="20201112 12:26:39.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.079" endtime="20201112 12:26:39.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.077" endtime="20201112 12:26:39.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.387" level="INFO">${RESULT} = [{'time': 0.021796431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.32369999999999e-05, 'source_diff': 8.32369999999999e-05}, {'time': 0.021942764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:39.384" endtime="20201112 12:26:39.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.401" level="INFO">${ACCURACY} = {'diff': [8.32369999999999e-05, 8.236099999999955e-05, 8.272299999999982e-05, 8.27780000000021e-05, 8.320900000000075e-05, 8.238799999999921e-05, 8.31390000000029e-05, 8.319400000000171e-05, 8.2333999...</msg>
<status status="PASS" starttime="20201112 12:26:39.388" endtime="20201112 12:26:39.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.406" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.405" endtime="20201112 12:26:39.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.408" level="INFO">VALUE: [8.32369999999999e-05, 8.236099999999955e-05, 8.272299999999982e-05, 8.27780000000021e-05, 8.320900000000075e-05, 8.238799999999921e-05, 8.31390000000029e-05, 8.319400000000171e-05, 8.233399999999988e-05, 8.26520000000025e-05, 8.263899999999894e-05, 8.27780000000021e-05, 8.287499999999962e-05, 8.24720000000001e-05, 8.231899999999737e-05, 8.302799999999888e-05, 8.291699999999833e-05, 8.320799999999781e-05, 8.248599999999967e-05, 8.255499999999805e-05, 8.262499999999937e-05, 8.295800000000103e-05, 8.276399999999906e-05, 8.301399999999931e-05, 8.301399999999931e-05, 8.256900000000109e-05, 8.252800000000185e-05, 8.269500000000068e-05, 8.313899999999944e-05, 8.297300000000007e-05, 8.233399999999988e-05, 8.288900000000265e-05, 8.251399999999881e-05, 8.2459e-05, 8.240300000000172e-05, 8.23330000000004e-05, 8.288899999999919e-05, 8.252799999999838e-05, 8.308299999999769e-05, 8.301399999999931e-05, 8.262499999999937e-05, 8.234799999999945e-05, 8.283400000000038e-05, 8.322199999999738e-05, 8.320900000000075e-05, 8.327699999999966e-05, 8.259700000000023e-05, 8.327799999999913e-05, 8.268000000000164e-05, 8.320799999999781e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.407" endtime="20201112 12:26:39.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.402" endtime="20201112 12:26:39.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.412" endtime="20201112 12:26:39.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.417" endtime="20201112 12:26:39.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.415" endtime="20201112 12:26:39.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.410" endtime="20201112 12:26:39.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.044" endtime="20201112 12:26:39.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.043" endtime="20201112 12:26:39.438"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.447" endtime="20201112 12:26:39.465"></status>
</kw>
<msg timestamp="20201112 12:26:39.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.445" endtime="20201112 12:26:39.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.467" endtime="20201112 12:26:39.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.470" endtime="20201112 12:26:39.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.443" endtime="20201112 12:26:39.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.440" endtime="20201112 12:26:39.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.480" endtime="20201112 12:26:39.766"></status>
</kw>
<msg timestamp="20201112 12:26:39.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.478" endtime="20201112 12:26:39.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.770" endtime="20201112 12:26:39.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.778" endtime="20201112 12:26:39.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.475" endtime="20201112 12:26:39.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.473" endtime="20201112 12:26:39.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.785" level="INFO">${RESULT} = [{'time': 0.021798278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.434700000000198e-05, 'source_diff': 8.434700000000198e-05}, {'time': 0.021946653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:39.782" endtime="20201112 12:26:39.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.799" level="INFO">${ACCURACY} = {'diff': [8.434700000000198e-05, 8.377799999999963e-05, 8.408399999999816e-05, 8.330599999999827e-05, 8.338899999999969e-05, 8.405600000000249e-05, 8.363899999999994e-05, 8.367999999999917e-05, 8.4096...</msg>
<status status="PASS" starttime="20201112 12:26:39.786" endtime="20201112 12:26:39.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.803" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.802" endtime="20201112 12:26:39.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.806" level="INFO">VALUE: [8.434700000000198e-05, 8.377799999999963e-05, 8.408399999999816e-05, 8.330599999999827e-05, 8.338899999999969e-05, 8.405600000000249e-05, 8.363899999999994e-05, 8.367999999999917e-05, 8.409699999999826e-05, 8.341600000000282e-05, 8.419399999999924e-05, 8.418099999999915e-05, 8.384700000000148e-05, 8.362500000000037e-05, 8.370800000000178e-05, 8.388900000000019e-05, 8.338899999999969e-05, 8.422199999999838e-05, 8.415200000000053e-05, 8.40980000000012e-05, 8.376300000000059e-05, 8.347300000000057e-05, 8.422199999999838e-05, 8.376400000000006e-05, 8.345800000000153e-05, 8.34720000000011e-05, 8.334700000000098e-05, 8.386100000000105e-05, 8.384700000000148e-05, 8.338899999999969e-05, 8.427800000000013e-05, 8.41660000000001e-05, 8.368099999999865e-05, 8.397199999999813e-05, 8.408399999999816e-05, 8.351399999999981e-05, 8.388900000000019e-05, 8.384799999999748e-05, 8.365200000000003e-05, 8.400000000000074e-05, 8.408399999999816e-05, 8.422199999999838e-05, 8.34309999999984e-05, 8.376400000000006e-05, 8.34309999999984e-05, 8.372200000000135e-05, 8.34720000000011e-05, 8.377799999999963e-05, 8.354199999999895e-05, 8.377700000000016e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.804" endtime="20201112 12:26:39.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.800" endtime="20201112 12:26:39.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.809" endtime="20201112 12:26:39.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.813" endtime="20201112 12:26:39.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.811" endtime="20201112 12:26:39.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.808" endtime="20201112 12:26:39.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.439" endtime="20201112 12:26:39.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.438" endtime="20201112 12:26:39.834"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.843" endtime="20201112 12:26:39.862"></status>
</kw>
<msg timestamp="20201112 12:26:39.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.842" endtime="20201112 12:26:39.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.863" endtime="20201112 12:26:39.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.866" endtime="20201112 12:26:39.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.839" endtime="20201112 12:26:39.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.837" endtime="20201112 12:26:39.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.875" endtime="20201112 12:26:40.161"></status>
</kw>
<msg timestamp="20201112 12:26:40.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.873" endtime="20201112 12:26:40.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.165" endtime="20201112 12:26:40.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.173" endtime="20201112 12:26:40.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.871" endtime="20201112 12:26:40.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.869" endtime="20201112 12:26:40.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.180" level="INFO">${RESULT} = [{'time': 0.021712375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.53469999999995e-05, 'source_diff': 8.53469999999995e-05}, {'time': 0.021844806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:40.176" endtime="20201112 12:26:40.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.193" level="INFO">${ACCURACY} = {'diff': [8.53469999999995e-05, 8.434800000000145e-05, 8.46110000000018e-05, 8.463900000000094e-05, 8.472200000000235e-05, 8.508399999999916e-05, 8.501400000000131e-05, 8.431899999999937e-05, 8.516700...</msg>
<status status="PASS" starttime="20201112 12:26:40.181" endtime="20201112 12:26:40.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.198" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.197" endtime="20201112 12:26:40.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.200" level="INFO">VALUE: [8.53469999999995e-05, 8.434800000000145e-05, 8.46110000000018e-05, 8.463900000000094e-05, 8.472200000000235e-05, 8.508399999999916e-05, 8.501400000000131e-05, 8.431899999999937e-05, 8.516700000000058e-05, 8.436099999999808e-05, 8.49729999999986e-05, 8.52920000000007e-05, 8.452700000000091e-05, 8.440200000000078e-05, 8.46530000000005e-05, 8.513800000000196e-05, 8.440299999999679e-05, 8.470799999999931e-05, 8.523599999999895e-05, 8.440300000000026e-05, 8.509799999999873e-05, 8.494399999999999e-05, 8.477700000000116e-05, 8.520799999999981e-05, 8.488899999999772e-05, 8.476399999999759e-05, 8.440299999999679e-05, 8.495800000000303e-05, 8.488899999999772e-05, 8.509699999999926e-05, 8.494399999999999e-05, 8.481899999999987e-05, 8.5153000000001e-05, 8.441600000000035e-05, 8.513899999999797e-05, 8.438900000000069e-05, 8.438900000000069e-05, 8.444500000000243e-05, 8.470799999999931e-05, 8.505600000000002e-05, 8.479099999999726e-05, 8.513900000000144e-05, 8.483399999999891e-05, 8.46660000000006e-05, 8.452799999999691e-05, 8.430599999999927e-05, 8.454100000000048e-05, 8.508299999999969e-05, 8.504199999999698e-05, 8.436099999999808e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.199" endtime="20201112 12:26:40.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.194" endtime="20201112 12:26:40.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.204" endtime="20201112 12:26:40.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.208" endtime="20201112 12:26:40.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.207" endtime="20201112 12:26:40.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.202" endtime="20201112 12:26:40.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.835" endtime="20201112 12:26:40.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.835" endtime="20201112 12:26:40.229"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.238" endtime="20201112 12:26:40.256"></status>
</kw>
<msg timestamp="20201112 12:26:40.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.236" endtime="20201112 12:26:40.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.258" endtime="20201112 12:26:40.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.260" endtime="20201112 12:26:40.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.234" endtime="20201112 12:26:40.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.232" endtime="20201112 12:26:40.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.269" endtime="20201112 12:26:40.554"></status>
</kw>
<msg timestamp="20201112 12:26:40.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.268" endtime="20201112 12:26:40.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.558" endtime="20201112 12:26:40.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.566" endtime="20201112 12:26:40.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.265" endtime="20201112 12:26:40.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.264" endtime="20201112 12:26:40.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.573" level="INFO">${RESULT} = [{'time': 0.021617639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.636100000000008e-05, 'source_diff': 8.636100000000008e-05}, {'time': 0.021761042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:40.570" endtime="20201112 12:26:40.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.587" level="INFO">${ACCURACY} = {'diff': [8.636100000000008e-05, 8.537500000000212e-05, 8.576400000000206e-05, 8.54859999999992e-05, 8.53469999999995e-05, 8.5847e-05, 8.5847e-05, 8.613899999999897e-05, 8.61660000000021e-05, 8.552799...</msg>
<status status="PASS" starttime="20201112 12:26:40.574" endtime="20201112 12:26:40.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.591" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.590" endtime="20201112 12:26:40.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.593" level="INFO">VALUE: [8.636100000000008e-05, 8.537500000000212e-05, 8.576400000000206e-05, 8.54859999999992e-05, 8.53469999999995e-05, 8.5847e-05, 8.5847e-05, 8.613899999999897e-05, 8.61660000000021e-05, 8.552799999999791e-05, 8.537499999999865e-05, 8.540300000000126e-05, 8.616700000000158e-05, 8.563800000000246e-05, 8.53469999999995e-05, 8.552800000000138e-05, 8.615299999999854e-05, 8.595800000000056e-05, 8.59310000000009e-05, 8.6153000000002e-05, 8.569400000000074e-05, 8.602799999999841e-05, 8.557000000000009e-05, 8.590299999999829e-05, 8.601399999999884e-05, 8.533299999999994e-05, 8.587499999999915e-05, 8.569500000000022e-05, 8.547199999999963e-05, 8.613899999999897e-05, 8.611099999999983e-05, 8.563899999999847e-05, 8.576399999999859e-05, 8.545899999999954e-05, 8.533400000000288e-05, 8.575000000000249e-05, 8.581900000000087e-05, 8.545800000000006e-05, 8.586099999999958e-05, 8.587500000000262e-05, 8.554099999999801e-05, 8.615299999999854e-05, 8.537499999999865e-05, 8.595900000000004e-05, 8.561099999999933e-05, 8.594400000000099e-05, 8.558300000000019e-05, 8.620900000000029e-05, 8.620900000000029e-05, 8.538899999999822e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.592" endtime="20201112 12:26:40.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.587" endtime="20201112 12:26:40.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.597" endtime="20201112 12:26:40.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.602" endtime="20201112 12:26:40.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.600" endtime="20201112 12:26:40.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.595" endtime="20201112 12:26:40.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.230" endtime="20201112 12:26:40.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.229" endtime="20201112 12:26:40.622"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.631" endtime="20201112 12:26:40.650"></status>
</kw>
<msg timestamp="20201112 12:26:40.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.630" endtime="20201112 12:26:40.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.651" endtime="20201112 12:26:40.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.654" endtime="20201112 12:26:40.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.627" endtime="20201112 12:26:40.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.625" endtime="20201112 12:26:40.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.663" endtime="20201112 12:26:40.948"></status>
</kw>
<msg timestamp="20201112 12:26:40.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02170125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:40.661" endtime="20201112 12:26:40.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02170125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:40.952" endtime="20201112 12:26:40.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.961" endtime="20201112 12:26:40.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.659" endtime="20201112 12:26:40.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.657" endtime="20201112 12:26:40.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.967" level="INFO">${RESULT} = [{'time': 0.02170125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.702799999999941e-05, 'source_diff': 8.702799999999941e-05}, {'time': 0.021847639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:40.964" endtime="20201112 12:26:40.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.981" level="INFO">${ACCURACY} = {'diff': [8.702799999999941e-05, 8.658299999999772e-05, 8.66249999999999e-05, 8.658299999999772e-05, 8.633300000000094e-05, 8.651399999999934e-05, 8.690300000000276e-05, 8.652799999999891e-05, 8.71529...</msg>
<status status="PASS" starttime="20201112 12:26:40.968" endtime="20201112 12:26:40.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.985" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.984" endtime="20201112 12:26:40.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.988" level="INFO">VALUE: [8.702799999999941e-05, 8.658299999999772e-05, 8.66249999999999e-05, 8.658299999999772e-05, 8.633300000000094e-05, 8.651399999999934e-05, 8.690300000000276e-05, 8.652799999999891e-05, 8.715299999999954e-05, 8.708299999999822e-05, 8.663899999999947e-05, 8.66530000000025e-05, 8.651399999999934e-05, 8.719500000000172e-05, 8.732000000000184e-05, 8.633299999999747e-05, 8.71250000000004e-05, 8.729199999999923e-05, 8.708399999999769e-05, 8.708299999999822e-05, 8.658400000000066e-05, 8.645800000000106e-05, 8.726400000000009e-05, 8.665199999999956e-05, 8.673600000000045e-05, 8.719399999999877e-05, 8.663899999999947e-05, 8.633400000000041e-05, 8.713800000000049e-05, 8.673599999999698e-05, 8.718000000000267e-05, 8.66669999999986e-05, 8.720899999999782e-05, 8.6847000000001e-05, 8.694400000000199e-05, 8.640300000000226e-05, 8.672200000000088e-05, 8.645799999999759e-05, 8.673600000000045e-05, 8.651399999999934e-05, 8.658400000000066e-05, 8.637500000000312e-05, 8.631900000000137e-05, 8.676399999999959e-05, 8.715299999999954e-05, 8.711100000000083e-05, 8.690300000000276e-05, 8.71669999999991e-05, 8.697200000000113e-05, 8.694400000000199e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.987" endtime="20201112 12:26:40.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.982" endtime="20201112 12:26:40.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.992" endtime="20201112 12:26:40.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.997" endtime="20201112 12:26:41.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.995" endtime="20201112 12:26:41.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.990" endtime="20201112 12:26:41.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.623" endtime="20201112 12:26:41.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.623" endtime="20201112 12:26:41.018"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.027" endtime="20201112 12:26:41.045"></status>
</kw>
<msg timestamp="20201112 12:26:41.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.025" endtime="20201112 12:26:41.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.047" endtime="20201112 12:26:41.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.050" endtime="20201112 12:26:41.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.023" endtime="20201112 12:26:41.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.020" endtime="20201112 12:26:41.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.059" endtime="20201112 12:26:41.345"></status>
</kw>
<msg timestamp="20201112 12:26:41.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.057" endtime="20201112 12:26:41.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.350" endtime="20201112 12:26:41.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.358" endtime="20201112 12:26:41.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.055" endtime="20201112 12:26:41.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.053" endtime="20201112 12:26:41.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.364" level="INFO">${RESULT} = [{'time': 0.021826208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.775000000000102e-05, 'source_diff': 8.775000000000102e-05}, {'time': 0.021970569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.361" endtime="20201112 12:26:41.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.378" level="INFO">${ACCURACY} = {'diff': [8.775000000000102e-05, 8.756899999999915e-05, 8.750000000000077e-05, 8.774999999999755e-05, 8.783299999999897e-05, 8.762499999999743e-05, 8.795899999999857e-05, 8.786199999999758e-05, 8.8223...</msg>
<status status="PASS" starttime="20201112 12:26:41.365" endtime="20201112 12:26:41.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.382" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.381" endtime="20201112 12:26:41.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.385" level="INFO">VALUE: [8.775000000000102e-05, 8.756899999999915e-05, 8.750000000000077e-05, 8.774999999999755e-05, 8.783299999999897e-05, 8.762499999999743e-05, 8.795899999999857e-05, 8.786199999999758e-05, 8.822300000000186e-05, 8.793099999999943e-05, 8.801400000000084e-05, 8.795799999999909e-05, 8.76250000000009e-05, 8.806999999999912e-05, 8.775000000000102e-05, 8.737500000000065e-05, 8.81800000000002e-05, 8.775000000000102e-05, 8.790300000000029e-05, 8.79999999999978e-05, 8.770799999999884e-05, 8.769500000000222e-05, 8.820800000000281e-05, 8.741599999999988e-05, 8.792999999999995e-05, 8.73470000000015e-05, 8.823600000000195e-05, 8.773599999999798e-05, 8.768099999999918e-05, 8.759699999999829e-05, 8.754100000000001e-05, 8.75129999999974e-05, 8.745900000000154e-05, 8.751400000000034e-05, 8.78059999999993e-05, 8.805500000000008e-05, 8.76799999999997e-05, 8.72920000000027e-05, 8.768099999999918e-05, 8.763900000000047e-05, 8.790200000000081e-05, 8.802800000000041e-05, 8.731999999999837e-05, 8.732000000000184e-05, 8.7944999999999e-05, 8.726400000000009e-05, 8.794399999999952e-05, 8.81800000000002e-05, 8.756999999999862e-05, 8.733299999999847e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.384" endtime="20201112 12:26:41.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.379" endtime="20201112 12:26:41.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.389" endtime="20201112 12:26:41.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.393" endtime="20201112 12:26:41.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.390" endtime="20201112 12:26:41.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.387" endtime="20201112 12:26:41.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.019" endtime="20201112 12:26:41.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.018" endtime="20201112 12:26:41.414"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.422" endtime="20201112 12:26:41.441"></status>
</kw>
<msg timestamp="20201112 12:26:41.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.421" endtime="20201112 12:26:41.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.443" endtime="20201112 12:26:41.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.445" endtime="20201112 12:26:41.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.418" endtime="20201112 12:26:41.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.416" endtime="20201112 12:26:41.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.454" endtime="20201112 12:26:41.739"></status>
</kw>
<msg timestamp="20201112 12:26:41.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.453" endtime="20201112 12:26:41.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.744" endtime="20201112 12:26:41.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.752" endtime="20201112 12:26:41.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.450" endtime="20201112 12:26:41.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.448" endtime="20201112 12:26:41.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.759" level="INFO">${RESULT} = [{'time': 0.021646111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.930499999999786e-05, 'source_diff': 8.930499999999786e-05}, {'time': 0.021799458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.755" endtime="20201112 12:26:41.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.772" level="INFO">${ACCURACY} = {'diff': [8.930499999999786e-05, 8.844400000000002e-05, 8.851400000000134e-05, 8.858299999999972e-05, 8.863900000000147e-05, 8.91800000000012e-05, 8.886099999999911e-05, 8.858299999999972e-05, 8.89580...</msg>
<status status="PASS" starttime="20201112 12:26:41.760" endtime="20201112 12:26:41.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.777" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.776" endtime="20201112 12:26:41.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.779" level="INFO">VALUE: [8.930499999999786e-05, 8.844400000000002e-05, 8.851400000000134e-05, 8.858299999999972e-05, 8.863900000000147e-05, 8.91800000000012e-05, 8.886099999999911e-05, 8.858299999999972e-05, 8.895800000000009e-05, 8.869400000000027e-05, 8.872199999999941e-05, 8.925000000000252e-05, 8.91800000000012e-05, 8.895800000000009e-05, 8.863900000000147e-05, 8.893000000000095e-05, 8.86250000000019e-05, 8.886099999999911e-05, 8.894400000000052e-05, 8.86800000000007e-05, 8.868100000000018e-05, 8.893100000000043e-05, 8.873599999999898e-05, 8.892999999999748e-05, 8.86250000000019e-05, 8.848599999999873e-05, 8.843099999999993e-05, 8.918100000000068e-05, 8.894399999999705e-05, 8.8945e-05, 8.887500000000215e-05, 8.843000000000045e-05, 8.83059999999998e-05, 8.922300000000286e-05, 8.837499999999818e-05, 8.837500000000165e-05, 8.856999999999962e-05, 8.831999999999937e-05, 8.89860000000027e-05, 8.845799999999959e-05, 8.873599999999898e-05, 8.919500000000025e-05, 8.926399999999862e-05, 8.925000000000252e-05, 8.862499999999843e-05, 8.84449999999995e-05, 8.920899999999982e-05, 8.831999999999937e-05, 8.851400000000134e-05, 8.91389999999985e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.778" endtime="20201112 12:26:41.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.773" endtime="20201112 12:26:41.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.783" endtime="20201112 12:26:41.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.787" endtime="20201112 12:26:41.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.785" endtime="20201112 12:26:41.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.781" endtime="20201112 12:26:41.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.415" endtime="20201112 12:26:41.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.414" endtime="20201112 12:26:41.808"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.817" endtime="20201112 12:26:41.836"></status>
</kw>
<msg timestamp="20201112 12:26:41.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.815" endtime="20201112 12:26:41.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.837" endtime="20201112 12:26:41.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.840" endtime="20201112 12:26:41.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.813" endtime="20201112 12:26:41.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.810" endtime="20201112 12:26:41.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.849" endtime="20201112 12:26:42.138"></status>
</kw>
<msg timestamp="20201112 12:26:42.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.847" endtime="20201112 12:26:42.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.142" endtime="20201112 12:26:42.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.150" endtime="20201112 12:26:42.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.844" endtime="20201112 12:26:42.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.843" endtime="20201112 12:26:42.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.157" level="INFO">${RESULT} = [{'time': 0.021678319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.00129999999999e-05, 'source_diff': 9.00129999999999e-05}, {'time': 0.021828639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:42.153" endtime="20201112 12:26:42.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.170" level="INFO">${ACCURACY} = {'diff': [9.00129999999999e-05, 8.977799999999869e-05, 8.969500000000075e-05, 8.987499999999968e-05, 9.020900000000082e-05, 8.937499999999918e-05, 8.969400000000127e-05, 8.983400000000044e-05, 8.93749...</msg>
<status status="PASS" starttime="20201112 12:26:42.158" endtime="20201112 12:26:42.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.175" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.174" endtime="20201112 12:26:42.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.177" level="INFO">VALUE: [9.00129999999999e-05, 8.977799999999869e-05, 8.969500000000075e-05, 8.987499999999968e-05, 9.020900000000082e-05, 8.937499999999918e-05, 8.969400000000127e-05, 8.983400000000044e-05, 8.937499999999918e-05, 8.93060000000008e-05, 8.955500000000158e-05, 9.01389999999995e-05, 9.023600000000048e-05, 8.937499999999918e-05, 8.983300000000097e-05, 9.025000000000005e-05, 8.974999999999955e-05, 8.933300000000047e-05, 9.008299999999775e-05, 8.937499999999918e-05, 8.937499999999918e-05, 9.01389999999995e-05, 8.973599999999998e-05, 9.016699999999864e-05, 8.997200000000066e-05, 9.01670000000021e-05, 8.974999999999955e-05, 9.001400000000284e-05, 8.986100000000011e-05, 9.01800000000022e-05, 8.96800000000017e-05, 8.968100000000118e-05, 9.004099999999904e-05, 8.994399999999805e-05, 9.005499999999861e-05, 9.004200000000198e-05, 8.932000000000037e-05, 9.019499999999778e-05, 8.987499999999968e-05, 8.937500000000265e-05, 8.976399999999912e-05, 8.956900000000115e-05, 8.98190000000014e-05, 8.936100000000308e-05, 9.012499999999993e-05, 9.019400000000177e-05, 8.979100000000226e-05, 8.995800000000109e-05, 8.968100000000118e-05, 8.983300000000097e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.176" endtime="20201112 12:26:42.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.171" endtime="20201112 12:26:42.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.181" endtime="20201112 12:26:42.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.185" endtime="20201112 12:26:42.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.184" endtime="20201112 12:26:42.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.179" endtime="20201112 12:26:42.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.809" endtime="20201112 12:26:42.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.808" endtime="20201112 12:26:42.206"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.215" endtime="20201112 12:26:42.234"></status>
</kw>
<msg timestamp="20201112 12:26:42.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.213" endtime="20201112 12:26:42.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.235" endtime="20201112 12:26:42.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.238" endtime="20201112 12:26:42.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.211" endtime="20201112 12:26:42.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.209" endtime="20201112 12:26:42.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.247" endtime="20201112 12:26:42.532"></status>
</kw>
<msg timestamp="20201112 12:26:42.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.245" endtime="20201112 12:26:42.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.537" endtime="20201112 12:26:42.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.545" endtime="20201112 12:26:42.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.243" endtime="20201112 12:26:42.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.241" endtime="20201112 12:26:42.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.551" level="INFO">${RESULT} = [{'time': 0.021657153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.112499999999746e-05, 'source_diff': 9.112499999999746e-05}, {'time': 0.021799528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.548" endtime="20201112 12:26:42.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.565" level="INFO">${ACCURACY} = {'diff': [9.112499999999746e-05, 9.043099999999846e-05, 9.030499999999886e-05, 9.062500000000043e-05, 9.123600000000148e-05, 9.079099999999979e-05, 9.027799999999919e-05, 9.086100000000111e-05, 9.1054...</msg>
<status status="PASS" starttime="20201112 12:26:42.553" endtime="20201112 12:26:42.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.570" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.569" endtime="20201112 12:26:42.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.572" level="INFO">VALUE: [9.112499999999746e-05, 9.043099999999846e-05, 9.030499999999886e-05, 9.062500000000043e-05, 9.123600000000148e-05, 9.079099999999979e-05, 9.027799999999919e-05, 9.086100000000111e-05, 9.105499999999961e-05, 9.037500000000018e-05, 9.042999999999898e-05, 9.061100000000086e-05, 9.068099999999871e-05, 9.086100000000111e-05, 9.065299999999957e-05, 9.105599999999908e-05, 9.0945000000002e-05, 9.08879999999973e-05, 9.076400000000012e-05, 9.059700000000129e-05, 9.079199999999926e-05, 9.123600000000148e-05, 9.058299999999825e-05, 9.05000000000003e-05, 9.073600000000098e-05, 9.101400000000037e-05, 9.080499999999936e-05, 9.088900000000025e-05, 9.086099999999764e-05, 9.088900000000025e-05, 9.113899999999703e-05, 9.062500000000043e-05, 9.067999999999923e-05, 9.098599999999776e-05, 9.054199999999901e-05, 9.042999999999898e-05, 9.106900000000265e-05, 9.125000000000105e-05, 9.056899999999868e-05, 9.11390000000005e-05, 9.062500000000043e-05, 9.116600000000016e-05, 9.108299999999875e-05, 9.08199999999984e-05, 9.124999999999758e-05, 9.099999999999733e-05, 9.124999999999758e-05, 9.05000000000003e-05, 9.109699999999832e-05, 9.10000000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.571" endtime="20201112 12:26:42.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.566" endtime="20201112 12:26:42.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.576" endtime="20201112 12:26:42.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.581" endtime="20201112 12:26:42.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.580" endtime="20201112 12:26:42.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.574" endtime="20201112 12:26:42.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.207" endtime="20201112 12:26:42.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.207" endtime="20201112 12:26:42.602"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.611" endtime="20201112 12:26:42.630"></status>
</kw>
<msg timestamp="20201112 12:26:42.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.609" endtime="20201112 12:26:42.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.631" endtime="20201112 12:26:42.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.634" endtime="20201112 12:26:42.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.607" endtime="20201112 12:26:42.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.605" endtime="20201112 12:26:42.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.643" endtime="20201112 12:26:42.928"></status>
</kw>
<msg timestamp="20201112 12:26:42.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.642" endtime="20201112 12:26:42.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.933" endtime="20201112 12:26:42.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.941" endtime="20201112 12:26:42.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.639" endtime="20201112 12:26:42.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.637" endtime="20201112 12:26:42.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.948" level="INFO">${RESULT} = [{'time': 0.021859875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.186100000000211e-05, 'source_diff': 9.186100000000211e-05}, {'time': 0.02200125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:42.944" endtime="20201112 12:26:42.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.961" level="INFO">${ACCURACY} = {'diff': [9.186100000000211e-05, 9.173599999999851e-05, 9.180500000000036e-05, 9.127700000000072e-05, 9.172200000000241e-05, 9.180599999999983e-05, 9.18329999999995e-05, 9.15000000000013e-05, 9.208299...</msg>
<status status="PASS" starttime="20201112 12:26:42.949" endtime="20201112 12:26:42.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.966" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.965" endtime="20201112 12:26:42.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.968" level="INFO">VALUE: [9.186100000000211e-05, 9.173599999999851e-05, 9.180500000000036e-05, 9.127700000000072e-05, 9.172200000000241e-05, 9.180599999999983e-05, 9.18329999999995e-05, 9.15000000000013e-05, 9.208299999999975e-05, 9.191700000000039e-05, 9.180599999999983e-05, 9.206999999999965e-05, 9.198699999999824e-05, 9.141699999999989e-05, 9.130599999999933e-05, 9.187499999999821e-05, 9.15000000000013e-05, 9.148600000000173e-05, 9.201400000000137e-05, 9.179100000000079e-05, 9.184699999999907e-05, 9.198699999999824e-05, 9.205600000000008e-05, 9.172299999999842e-05, 9.163800000000152e-05, 9.172300000000189e-05, 9.149999999999783e-05, 9.219499999999978e-05, 9.149999999999783e-05, 9.176399999999765e-05, 9.15000000000013e-05, 9.15139999999974e-05, 9.130499999999986e-05, 9.215300000000107e-05, 9.181899999999993e-05, 9.161099999999839e-05, 9.155500000000011e-05, 9.180500000000036e-05, 9.16939999999998e-05, 9.141699999999989e-05, 9.187499999999821e-05, 9.175000000000155e-05, 9.148599999999826e-05, 9.20139999999979e-05, 9.161099999999839e-05, 9.144499999999903e-05, 9.141699999999989e-05, 9.179199999999679e-05, 9.193099999999996e-05, 9.223599999999901e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.967" endtime="20201112 12:26:42.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.962" endtime="20201112 12:26:42.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.979" endtime="20201112 12:26:42.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.983" endtime="20201112 12:26:43.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.981" endtime="20201112 12:26:43.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.977" endtime="20201112 12:26:43.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.603" endtime="20201112 12:26:43.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.603" endtime="20201112 12:26:43.004"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.013" endtime="20201112 12:26:43.032"></status>
</kw>
<msg timestamp="20201112 12:26:43.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.011" endtime="20201112 12:26:43.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.033" endtime="20201112 12:26:43.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.036" endtime="20201112 12:26:43.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.009" endtime="20201112 12:26:43.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.007" endtime="20201112 12:26:43.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.045" endtime="20201112 12:26:43.331"></status>
</kw>
<msg timestamp="20201112 12:26:43.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.043" endtime="20201112 12:26:43.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.335" endtime="20201112 12:26:43.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.343" endtime="20201112 12:26:43.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.041" endtime="20201112 12:26:43.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.039" endtime="20201112 12:26:43.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.350" level="INFO">${RESULT} = [{'time': 0.021906361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.330499999999839e-05, 'source_diff': 9.330499999999839e-05}, {'time': 0.022046722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:43.346" endtime="20201112 12:26:43.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.363" level="INFO">${ACCURACY} = {'diff': [9.330499999999839e-05, 9.261100000000286e-05, 9.279099999999832e-05, 9.31390000000025e-05, 9.30139999999989e-05, 9.268000000000123e-05, 9.286099999999964e-05, 9.230600000000033e-05, 9.251399...</msg>
<status status="PASS" starttime="20201112 12:26:43.351" endtime="20201112 12:26:43.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.368" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.367" endtime="20201112 12:26:43.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.371" level="INFO">VALUE: [9.330499999999839e-05, 9.261100000000286e-05, 9.279099999999832e-05, 9.31390000000025e-05, 9.30139999999989e-05, 9.268000000000123e-05, 9.286099999999964e-05, 9.230600000000033e-05, 9.25139999999984e-05, 9.286099999999964e-05, 9.259799999999929e-05, 9.261099999999939e-05, 9.248599999999926e-05, 9.299999999999933e-05, 9.254200000000101e-05, 9.318000000000173e-05, 9.245800000000012e-05, 9.269500000000028e-05, 9.248599999999926e-05, 9.286099999999964e-05, 9.245800000000012e-05, 9.262499999999896e-05, 9.257000000000015e-05, 9.26529999999981e-05, 9.281900000000093e-05, 9.286199999999911e-05, 9.247299999999917e-05, 9.259699999999982e-05, 9.238900000000175e-05, 9.254099999999807e-05, 9.25000000000023e-05, 9.237499999999871e-05, 9.283399999999997e-05, 9.323600000000001e-05, 9.258399999999972e-05, 9.294400000000105e-05, 9.261100000000286e-05, 9.244500000000003e-05, 9.286099999999964e-05, 9.229199999999729e-05, 9.287499999999921e-05, 9.243000000000098e-05, 9.273599999999951e-05, 9.249999999999883e-05, 9.259799999999929e-05, 9.322200000000044e-05, 9.259699999999982e-05, 9.256900000000068e-05, 9.292999999999801e-05, 9.248600000000273e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.369" endtime="20201112 12:26:43.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.364" endtime="20201112 12:26:43.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.374" endtime="20201112 12:26:43.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.379" endtime="20201112 12:26:43.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.377" endtime="20201112 12:26:43.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.373" endtime="20201112 12:26:43.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.005" endtime="20201112 12:26:43.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.004" endtime="20201112 12:26:43.399"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.408" endtime="20201112 12:26:43.428"></status>
</kw>
<msg timestamp="20201112 12:26:43.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.407" endtime="20201112 12:26:43.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.429" endtime="20201112 12:26:43.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.431" endtime="20201112 12:26:43.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.404" endtime="20201112 12:26:43.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.402" endtime="20201112 12:26:43.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.440" endtime="20201112 12:26:43.726"></status>
</kw>
<msg timestamp="20201112 12:26:43.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.439" endtime="20201112 12:26:43.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.730" endtime="20201112 12:26:43.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.738" endtime="20201112 12:26:43.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.436" endtime="20201112 12:26:43.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.435" endtime="20201112 12:26:43.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.745" level="INFO">${RESULT} = [{'time': 0.021974194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.38880000000003e-05, 'source_diff': 9.38880000000003e-05}, {'time': 0.022116569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:43.742" endtime="20201112 12:26:43.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.759" level="INFO">${ACCURACY} = {'diff': [9.38880000000003e-05, 9.386100000000064e-05, 9.383299999999803e-05, 9.367999999999876e-05, 9.398700000000024e-05, 9.384800000000054e-05, 9.34720000000007e-05, 9.341700000000189e-05, 9.375000...</msg>
<status status="PASS" starttime="20201112 12:26:43.746" endtime="20201112 12:26:43.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.763" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.762" endtime="20201112 12:26:43.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.766" level="INFO">VALUE: [9.38880000000003e-05, 9.386100000000064e-05, 9.383299999999803e-05, 9.367999999999876e-05, 9.398700000000024e-05, 9.384800000000054e-05, 9.34720000000007e-05, 9.341700000000189e-05, 9.375000000000008e-05, 9.406899999999871e-05, 9.413900000000003e-05, 9.329200000000176e-05, 9.365199999999962e-05, 9.423600000000101e-05, 9.402799999999947e-05, 9.397199999999772e-05, 9.391700000000239e-05, 9.340299999999885e-05, 9.402799999999947e-05, 9.416700000000264e-05, 9.334700000000057e-05, 9.379100000000279e-05, 9.405599999999861e-05, 9.354200000000201e-05, 9.354099999999907e-05, 9.349999999999983e-05, 9.40139999999999e-05, 9.343000000000198e-05, 9.355599999999811e-05, 9.372199999999747e-05, 9.423600000000101e-05, 9.372299999999695e-05, 9.327800000000219e-05, 9.38200000000014e-05, 9.391700000000239e-05, 9.354199999999854e-05, 9.393000000000248e-05, 9.39859999999973e-05, 9.422200000000144e-05, 9.384800000000054e-05, 9.386200000000011e-05, 9.358399999999725e-05, 9.38469999999976e-05, 9.41659999999997e-05, 9.38469999999976e-05, 9.36529999999991e-05, 9.376399999999965e-05, 9.384700000000107e-05, 9.358300000000125e-05, 9.366699999999867e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.764" endtime="20201112 12:26:43.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.760" endtime="20201112 12:26:43.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.769" endtime="20201112 12:26:43.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.774" endtime="20201112 12:26:43.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.772" endtime="20201112 12:26:43.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.768" endtime="20201112 12:26:43.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.400" endtime="20201112 12:26:43.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.400" endtime="20201112 12:26:43.794"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.803" endtime="20201112 12:26:43.822"></status>
</kw>
<msg timestamp="20201112 12:26:43.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.801" endtime="20201112 12:26:43.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.824" endtime="20201112 12:26:43.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.826" endtime="20201112 12:26:43.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.799" endtime="20201112 12:26:43.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.797" endtime="20201112 12:26:43.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.835" endtime="20201112 12:26:44.121"></status>
</kw>
<msg timestamp="20201112 12:26:44.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.834" endtime="20201112 12:26:44.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.125" endtime="20201112 12:26:44.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.133" endtime="20201112 12:26:44.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.831" endtime="20201112 12:26:44.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.830" endtime="20201112 12:26:44.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.140" level="INFO">${RESULT} = [{'time': 0.021744514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.475000000000108e-05, 'source_diff': 9.475000000000108e-05}, {'time': 0.021885917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.136" endtime="20201112 12:26:44.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.153" level="INFO">${ACCURACY} = {'diff': [9.475000000000108e-05, 9.455600000000258e-05, 9.487500000000121e-05, 9.488900000000078e-05, 9.46530000000001e-05, 9.440299999999985e-05, 9.443000000000298e-05, 9.455600000000258e-05, 9.50689...</msg>
<status status="PASS" starttime="20201112 12:26:44.141" endtime="20201112 12:26:44.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.158" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.157" endtime="20201112 12:26:44.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.160" level="INFO">VALUE: [9.475000000000108e-05, 9.455600000000258e-05, 9.487500000000121e-05, 9.488900000000078e-05, 9.46530000000001e-05, 9.440299999999985e-05, 9.443000000000298e-05, 9.455600000000258e-05, 9.506899999999971e-05, 9.516700000000017e-05, 9.44720000000017e-05, 9.518100000000321e-05, 9.461099999999792e-05, 9.4333000000002e-05, 9.476300000000118e-05, 9.518099999999974e-05, 9.436100000000114e-05, 9.491600000000044e-05, 9.449999999999736e-05, 9.49729999999982e-05, 9.493100000000296e-05, 9.48469999999986e-05, 9.491699999999992e-05, 9.526399999999768e-05, 9.511099999999842e-05, 9.444399999999908e-05, 9.52079999999994e-05, 9.466699999999967e-05, 9.467999999999976e-05, 9.463900000000053e-05, 9.436100000000114e-05, 9.486099999999817e-05, 9.451399999999693e-05, 9.433400000000147e-05, 9.441699999999942e-05, 9.431999999999843e-05, 9.458299999999878e-05, 9.462500000000096e-05, 9.477699999999728e-05, 9.49720000000022e-05, 9.466699999999967e-05, 9.484800000000154e-05, 9.498600000000176e-05, 9.522199999999897e-05, 9.505600000000308e-05, 9.504100000000057e-05, 9.468000000000323e-05, 9.479199999999979e-05, 9.456899999999921e-05, 9.437499999999724e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.159" endtime="20201112 12:26:44.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.154" endtime="20201112 12:26:44.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.164" endtime="20201112 12:26:44.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.169" endtime="20201112 12:26:44.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.168" endtime="20201112 12:26:44.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.162" endtime="20201112 12:26:44.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.795" endtime="20201112 12:26:44.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.795" endtime="20201112 12:26:44.190"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.199" endtime="20201112 12:26:44.218"></status>
</kw>
<msg timestamp="20201112 12:26:44.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.197" endtime="20201112 12:26:44.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.220" endtime="20201112 12:26:44.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.222" endtime="20201112 12:26:44.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.195" endtime="20201112 12:26:44.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.193" endtime="20201112 12:26:44.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.231" endtime="20201112 12:26:44.517"></status>
</kw>
<msg timestamp="20201112 12:26:44.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021545903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.230" endtime="20201112 12:26:44.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021545903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.521" endtime="20201112 12:26:44.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.529" endtime="20201112 12:26:44.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.227" endtime="20201112 12:26:44.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.225" endtime="20201112 12:26:44.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.536" level="INFO">${RESULT} = [{'time': 0.021641458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555499999999717e-05, 'source_diff': 9.555499999999717e-05}, {'time': 0.021785847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.533" endtime="20201112 12:26:44.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.550" level="INFO">${ACCURACY} = {'diff': [9.555499999999717e-05, 9.537500000000171e-05, 9.581900000000046e-05, 9.56669999999972e-05, 9.547199999999922e-05, 9.588899999999831e-05, 9.612499999999899e-05, 9.58469999999996e-05, 9.554100...</msg>
<status status="PASS" starttime="20201112 12:26:44.537" endtime="20201112 12:26:44.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.554" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.553" endtime="20201112 12:26:44.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.557" level="INFO">VALUE: [9.555499999999717e-05, 9.537500000000171e-05, 9.581900000000046e-05, 9.56669999999972e-05, 9.547199999999922e-05, 9.588899999999831e-05, 9.612499999999899e-05, 9.58469999999996e-05, 9.554100000000107e-05, 9.604100000000157e-05, 9.54729999999987e-05, 9.586099999999917e-05, 9.612500000000246e-05, 9.549999999999836e-05, 9.566599999999773e-05, 9.591600000000144e-05, 9.56530000000011e-05, 9.606900000000071e-05, 9.562500000000196e-05, 9.594400000000058e-05, 9.548600000000226e-05, 9.586099999999917e-05, 9.569499999999981e-05, 9.530500000000039e-05, 9.581999999999993e-05, 9.549999999999836e-05, 9.548600000000226e-05, 9.608300000000028e-05, 9.527800000000072e-05, 9.573600000000251e-05, 9.583300000000003e-05, 9.573600000000251e-05, 9.56669999999972e-05, 9.594400000000058e-05, 9.570899999999938e-05, 9.598700000000224e-05, 9.554200000000054e-05, 9.527800000000072e-05, 9.559699999999935e-05, 9.53469999999991e-05, 9.604199999999757e-05, 9.558299999999978e-05, 9.554200000000054e-05, 9.597199999999972e-05, 9.59729999999992e-05, 9.604200000000104e-05, 9.618099999999727e-05, 9.62080000000004e-05, 9.590300000000135e-05, 9.579200000000079e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.556" endtime="20201112 12:26:44.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.551" endtime="20201112 12:26:44.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.561" endtime="20201112 12:26:44.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.566" endtime="20201112 12:26:44.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.563" endtime="20201112 12:26:44.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.560" endtime="20201112 12:26:44.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.191" endtime="20201112 12:26:44.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.191" endtime="20201112 12:26:44.587"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.595" endtime="20201112 12:26:44.615"></status>
</kw>
<msg timestamp="20201112 12:26:44.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.594" endtime="20201112 12:26:44.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.616" endtime="20201112 12:26:44.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.619" endtime="20201112 12:26:44.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.591" endtime="20201112 12:26:44.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.589" endtime="20201112 12:26:44.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.628" endtime="20201112 12:26:44.914"></status>
</kw>
<msg timestamp="20201112 12:26:44.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.626" endtime="20201112 12:26:44.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.918" endtime="20201112 12:26:44.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.927" endtime="20201112 12:26:44.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.623" endtime="20201112 12:26:44.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.622" endtime="20201112 12:26:44.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.933" level="INFO">${RESULT} = [{'time': 0.021767167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.743100000000199e-05, 'source_diff': 9.743100000000199e-05}, {'time': 0.021920514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.930" endtime="20201112 12:26:44.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.947" level="INFO">${ACCURACY} = {'diff': [9.743100000000199e-05, 9.718099999999827e-05, 9.723600000000054e-05, 9.643100000000099e-05, 9.686100000000017e-05, 9.68470000000006e-05, 9.659700000000035e-05, 9.695900000000063e-05, 9.63060...</msg>
<status status="PASS" starttime="20201112 12:26:44.934" endtime="20201112 12:26:44.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.951" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.950" endtime="20201112 12:26:44.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.954" level="INFO">VALUE: [9.743100000000199e-05, 9.718099999999827e-05, 9.723600000000054e-05, 9.643100000000099e-05, 9.686100000000017e-05, 9.68470000000006e-05, 9.659700000000035e-05, 9.695900000000063e-05, 9.630600000000086e-05, 9.704199999999857e-05, 9.655600000000111e-05, 9.695900000000063e-05, 9.69860000000003e-05, 9.672200000000047e-05, 9.654199999999807e-05, 9.663899999999906e-05, 9.701399999999943e-05, 9.716599999999923e-05, 9.68470000000006e-05, 9.681900000000146e-05, 9.68340000000005e-05, 9.69860000000003e-05, 9.672200000000047e-05, 9.659700000000035e-05, 9.627800000000172e-05, 9.672200000000047e-05, 9.654199999999807e-05, 9.684800000000007e-05, 9.658300000000078e-05, 9.64859999999998e-05, 9.704199999999857e-05, 9.713899999999956e-05, 9.688900000000278e-05, 9.647200000000022e-05, 9.658300000000078e-05, 9.69860000000003e-05, 9.652800000000197e-05, 9.71669999999987e-05, 9.686100000000017e-05, 9.706900000000171e-05, 9.66669999999982e-05, 9.68470000000006e-05, 9.64729999999997e-05, 9.647199999999675e-05, 9.688899999999931e-05, 9.65409999999986e-05, 9.657000000000068e-05, 9.642999999999805e-05, 9.666700000000167e-05, 9.636099999999967e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.952" endtime="20201112 12:26:44.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.948" endtime="20201112 12:26:44.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.957" endtime="20201112 12:26:44.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.962" endtime="20201112 12:26:44.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.960" endtime="20201112 12:26:44.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.956" endtime="20201112 12:26:44.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.588" endtime="20201112 12:26:44.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.587" endtime="20201112 12:26:44.983"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.991" endtime="20201112 12:26:45.011"></status>
</kw>
<msg timestamp="20201112 12:26:45.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.990" endtime="20201112 12:26:45.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.012" endtime="20201112 12:26:45.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.015" endtime="20201112 12:26:45.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.987" endtime="20201112 12:26:45.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.985" endtime="20201112 12:26:45.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.024" endtime="20201112 12:26:45.310"></status>
</kw>
<msg timestamp="20201112 12:26:45.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021593417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.022" endtime="20201112 12:26:45.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021593417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.314" endtime="20201112 12:26:45.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.322" endtime="20201112 12:26:45.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.019" endtime="20201112 12:26:45.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.018" endtime="20201112 12:26:45.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.329" level="INFO">${RESULT} = [{'time': 0.021593417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.754199999999907e-05, 'source_diff': 9.754199999999907e-05}, {'time': 0.02174075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:45.326" endtime="20201112 12:26:45.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.343" level="INFO">${ACCURACY} = {'diff': [9.754199999999907e-05, 9.8028e-05, 9.726399999999968e-05, 9.777700000000028e-05, 9.794400000000258e-05, 9.773700000000052e-05, 9.77080000000019e-05, 9.747199999999775e-05, 9.798700000000077e...</msg>
<status status="PASS" starttime="20201112 12:26:45.330" endtime="20201112 12:26:45.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.347" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.346" endtime="20201112 12:26:45.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.350" level="INFO">VALUE: [9.754199999999907e-05, 9.8028e-05, 9.726399999999968e-05, 9.777700000000028e-05, 9.794400000000258e-05, 9.773700000000052e-05, 9.77080000000019e-05, 9.747199999999775e-05, 9.798700000000077e-05, 9.744500000000156e-05, 9.733299999999806e-05, 9.783300000000203e-05, 9.8028e-05, 9.772200000000147e-05, 9.784699999999813e-05, 9.7334000000001e-05, 9.797200000000172e-05, 9.808399999999828e-05, 9.797199999999825e-05, 9.745800000000165e-05, 9.727800000000272e-05, 9.825000000000111e-05, 9.729199999999882e-05, 9.820799999999894e-05, 9.726399999999968e-05, 9.731899999999849e-05, 9.729099999999935e-05, 9.759699999999788e-05, 9.772200000000147e-05, 9.759799999999735e-05, 9.806999999999871e-05, 9.819499999999884e-05, 9.758299999999831e-05, 9.766700000000267e-05, 9.759700000000135e-05, 9.798599999999782e-05, 9.78059999999989e-05, 9.74730000000007e-05, 9.76669999999992e-05, 9.797199999999825e-05, 9.726399999999968e-05, 9.820799999999894e-05, 9.808300000000228e-05, 9.788799999999737e-05, 9.7334000000001e-05, 9.744399999999862e-05, 9.783299999999856e-05, 9.801400000000043e-05, 9.734699999999763e-05, 9.781899999999899e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.348" endtime="20201112 12:26:45.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.344" endtime="20201112 12:26:45.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.353" endtime="20201112 12:26:45.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.358" endtime="20201112 12:26:45.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.356" endtime="20201112 12:26:45.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.352" endtime="20201112 12:26:45.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.984" endtime="20201112 12:26:45.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.983" endtime="20201112 12:26:45.379"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.387" endtime="20201112 12:26:45.407"></status>
</kw>
<msg timestamp="20201112 12:26:45.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.386" endtime="20201112 12:26:45.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.408" endtime="20201112 12:26:45.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.411" endtime="20201112 12:26:45.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.383" endtime="20201112 12:26:45.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.381" endtime="20201112 12:26:45.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.420" endtime="20201112 12:26:45.706"></status>
</kw>
<msg timestamp="20201112 12:26:45.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.418" endtime="20201112 12:26:45.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.710" endtime="20201112 12:26:45.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.718" endtime="20201112 12:26:45.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.416" endtime="20201112 12:26:45.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.414" endtime="20201112 12:26:45.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.725" level="INFO">${RESULT} = [{'time': 0.021642083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.85410000000006e-05, 'source_diff': 9.85410000000006e-05}, {'time': 0.021805431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:45.722" endtime="20201112 12:26:45.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.739" level="INFO">${ACCURACY} = {'diff': [9.85410000000006e-05, 9.919499999999984e-05, 9.916699999999723e-05, 9.873599999999857e-05, 9.876399999999771e-05, 9.926300000000221e-05, 9.858299999999931e-05, 9.881999999999946e-05, 9.90269...</msg>
<status status="PASS" starttime="20201112 12:26:45.726" endtime="20201112 12:26:45.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.743" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.742" endtime="20201112 12:26:45.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.746" level="INFO">VALUE: [9.85410000000006e-05, 9.919499999999984e-05, 9.916699999999723e-05, 9.873599999999857e-05, 9.876399999999771e-05, 9.926300000000221e-05, 9.858299999999931e-05, 9.881999999999946e-05, 9.902699999999806e-05, 9.9028000000001e-05, 9.891700000000045e-05, 9.923599999999907e-05, 9.891700000000045e-05, 9.891700000000045e-05, 9.844399999999962e-05, 9.879200000000032e-05, 9.827800000000025e-05, 9.859699999999888e-05, 9.847199999999875e-05, 9.858299999999931e-05, 9.879100000000085e-05, 9.911100000000242e-05, 9.92219999999995e-05, 9.848599999999832e-05, 9.834699999999863e-05, 9.886100000000217e-05, 9.872200000000247e-05, 9.91670000000007e-05, 9.827800000000025e-05, 9.920799999999994e-05, 9.919400000000037e-05, 9.905500000000067e-05, 9.85280000000005e-05, 9.908299999999981e-05, 9.911099999999895e-05, 9.872200000000247e-05, 9.834699999999863e-05, 9.845799999999919e-05, 9.897199999999926e-05, 9.877800000000075e-05, 9.88059999999999e-05, 9.925000000000211e-05, 9.89020000000014e-05, 9.8334000000002e-05, 9.83059999999994e-05, 9.876399999999771e-05, 9.863799999999812e-05, 9.83470000000021e-05, 9.865200000000116e-05, 9.836100000000167e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.744" endtime="20201112 12:26:45.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.740" endtime="20201112 12:26:45.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.749" endtime="20201112 12:26:45.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.755" endtime="20201112 12:26:45.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.753" endtime="20201112 12:26:45.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.748" endtime="20201112 12:26:45.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.380" endtime="20201112 12:26:45.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.379" endtime="20201112 12:26:45.776"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.784" endtime="20201112 12:26:45.804"></status>
</kw>
<msg timestamp="20201112 12:26:45.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.783" endtime="20201112 12:26:45.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.805" endtime="20201112 12:26:45.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.808" endtime="20201112 12:26:45.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.780" endtime="20201112 12:26:45.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.778" endtime="20201112 12:26:45.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.817" endtime="20201112 12:26:46.103"></status>
</kw>
<msg timestamp="20201112 12:26:46.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.815" endtime="20201112 12:26:46.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.107" endtime="20201112 12:26:46.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.116" endtime="20201112 12:26:46.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.813" endtime="20201112 12:26:46.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.811" endtime="20201112 12:26:46.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.122" level="INFO">${RESULT} = [{'time': 0.021642514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.993100000000102e-05, 'source_diff': 9.993100000000102e-05}, {'time': 0.021804806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:46.119" endtime="20201112 12:26:46.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.182" level="INFO">${ACCURACY} = {'diff': [9.993100000000102e-05, 9.959799999999935e-05, 9.977800000000175e-05, 9.983400000000003e-05, 0.00010011099999999995, 9.929200000000082e-05, 9.930499999999745e-05, 9.936100000000267e-05, 9.988...</msg>
<status status="PASS" starttime="20201112 12:26:46.123" endtime="20201112 12:26:46.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.187" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.186" endtime="20201112 12:26:46.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.189" level="INFO">VALUE: [9.993100000000102e-05, 9.959799999999935e-05, 9.977800000000175e-05, 9.983400000000003e-05, 0.00010011099999999995, 9.929200000000082e-05, 9.930499999999745e-05, 9.936100000000267e-05, 9.988900000000231e-05, 9.991699999999798e-05, 9.983400000000003e-05, 0.00010008300000000081, 0.00010011099999999995, 9.991600000000198e-05, 9.98060000000009e-05, 0.00010008300000000081, 9.940300000000138e-05, 0.00010001399999999896, 9.961099999999945e-05, 9.961099999999945e-05, 9.997200000000026e-05, 0.00010002699999999906, 0.00010024999999999964, 9.941700000000095e-05, 0.00010020800000000094, 0.00010020800000000094, 9.965300000000163e-05, 0.00010020800000000094, 0.00010015299999999866, 0.00010004200000000157, 9.98609999999997e-05, 9.941700000000095e-05, 9.947199999999976e-05, 9.952799999999803e-05, 9.940300000000138e-05, 0.0001002220000000005, 9.920899999999941e-05, 9.990300000000188e-05, 9.98609999999997e-05, 9.983300000000056e-05, 9.979099999999838e-05, 9.990199999999894e-05, 9.970800000000044e-05, 9.977699999999881e-05, 9.937499999999877e-05, 9.977800000000175e-05, 0.00010015199999999919, 9.997200000000026e-05, 0.000100028000000002, 9.9722e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.188" endtime="20201112 12:26:46.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.183" endtime="20201112 12:26:46.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.193" endtime="20201112 12:26:46.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.197" endtime="20201112 12:26:46.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.195" endtime="20201112 12:26:46.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.191" endtime="20201112 12:26:46.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.777" endtime="20201112 12:26:46.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.776" endtime="20201112 12:26:46.217"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.226" endtime="20201112 12:26:46.246"></status>
</kw>
<msg timestamp="20201112 12:26:46.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.224" endtime="20201112 12:26:46.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.247" endtime="20201112 12:26:46.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.250" endtime="20201112 12:26:46.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.222" endtime="20201112 12:26:46.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.220" endtime="20201112 12:26:46.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.260" endtime="20201112 12:26:46.546"></status>
</kw>
<msg timestamp="20201112 12:26:46.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021599028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.258" endtime="20201112 12:26:46.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021599028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.550" endtime="20201112 12:26:46.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.558" endtime="20201112 12:26:46.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.254" endtime="20201112 12:26:46.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.253" endtime="20201112 12:26:46.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.565" level="INFO">${RESULT} = [{'time': 0.021700097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010106900000000224, 'source_diff': 0.00010106900000000224}, {'time': 0.021859417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:46.561" endtime="20201112 12:26:46.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.578" level="INFO">${ACCURACY} = {'diff': [0.00010106900000000224, 0.00010033400000000053, 0.00010058399999999731, 0.00010077800000000275, 0.00010065299999999916, 0.00010079099999999938, 0.00010098600000000083, 0.00010101400000000343...</msg>
<status status="PASS" starttime="20201112 12:26:46.566" endtime="20201112 12:26:46.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.583" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.581" endtime="20201112 12:26:46.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.585" level="INFO">VALUE: [0.00010106900000000224, 0.00010033400000000053, 0.00010058399999999731, 0.00010077800000000275, 0.00010065299999999916, 0.00010079099999999938, 0.00010098600000000083, 0.00010101400000000343, 0.00010115299999999966, 0.00010107000000000171, 0.0001005549999999987, 0.00010088800000000037, 0.00010088899999999984, 0.00010034700000000063, 0.0001010000000000004, 0.00010048600000000033, 0.00010058299999999784, 0.00010115299999999966, 0.00010059800000000035, 0.000100722000000001, 0.00010102799999999953, 0.0001010000000000004, 0.00010119400000000237, 0.00010076400000000318, 0.00010108300000000181, 0.00010058300000000131, 0.00010027699999999931, 0.00010027800000000225, 0.00010119400000000237, 0.00010044500000000109, 0.00010031899999999802, 0.00010105599999999867, 0.00010038899999999934, 0.00010081900000000199, 0.00010038900000000281, 0.0001005419999999986, 0.0001004999999999999, 0.00010101399999999996, 0.00010026399999999921, 0.0001005280000000025, 0.00010101399999999996, 0.00010111100000000095, 0.00010090299999999941, 0.00010051399999999946, 0.00010069499999999787, 0.00010041699999999848, 0.00010075000000000014, 0.00010048599999999686, 0.0001010419999999991, 0.00010097300000000073]</msg>
<status status="PASS" starttime="20201112 12:26:46.584" endtime="20201112 12:26:46.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.579" endtime="20201112 12:26:46.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.589" endtime="20201112 12:26:46.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.593" endtime="20201112 12:26:46.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.591" endtime="20201112 12:26:46.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.587" endtime="20201112 12:26:46.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.218" endtime="20201112 12:26:46.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.218" endtime="20201112 12:26:46.614"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.622" endtime="20201112 12:26:46.642"></status>
</kw>
<msg timestamp="20201112 12:26:46.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.621" endtime="20201112 12:26:46.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.643" endtime="20201112 12:26:46.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.646" endtime="20201112 12:26:46.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.618" endtime="20201112 12:26:46.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.616" endtime="20201112 12:26:46.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.656" endtime="20201112 12:26:46.941"></status>
</kw>
<msg timestamp="20201112 12:26:46.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.654" endtime="20201112 12:26:46.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.945" endtime="20201112 12:26:46.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.953" endtime="20201112 12:26:46.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.651" endtime="20201112 12:26:46.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.649" endtime="20201112 12:26:46.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.960" level="INFO">${RESULT} = [{'time': 0.021698875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010198599999999836, 'source_diff': 0.00010198599999999836}, {'time': 0.021856153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:46.957" endtime="20201112 12:26:46.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.973" level="INFO">${ACCURACY} = {'diff': [0.00010198599999999836, 0.00010194499999999912, 0.00010141699999999948, 0.00010162500000000102, 0.00010186200000000117, 0.00010155599999999917, 0.00010187500000000127, 0.00010148600000000133...</msg>
<status status="PASS" starttime="20201112 12:26:46.961" endtime="20201112 12:26:46.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.978" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.977" endtime="20201112 12:26:46.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.980" level="INFO">VALUE: [0.00010198599999999836, 0.00010194499999999912, 0.00010141699999999948, 0.00010162500000000102, 0.00010186200000000117, 0.00010155599999999917, 0.00010187500000000127, 0.00010148600000000133, 0.00010199999999999793, 0.00010212500000000152, 0.0001021939999999999, 0.00010145900000000166, 0.0001021809999999998, 0.00010183399999999856, 0.00010211200000000142, 0.00010188900000000084, 0.00010199999999999793, 0.00010193099999999955, 0.00010152800000000003, 0.00010211199999999795, 0.00010201400000000097, 0.0001020420000000001, 0.00010212500000000152, 0.00010141699999999948, 0.00010188899999999737, 0.00010187500000000127, 0.00010137500000000077, 0.00010125000000000065, 0.00010126399999999675, 0.00010193000000000008, 0.00010156999999999874, 0.00010211199999999795, 0.00010142999999999958, 0.00010156999999999874, 0.00010148600000000133, 0.00010174999999999768, 0.00010186099999999823, 0.00010156900000000274, 0.00010212499999999805, 0.00010187500000000127, 0.00010138900000000034, 0.00010188900000000084, 0.00010144399999999915, 0.00010144399999999915, 0.00010213900000000109, 0.00010180499999999995, 0.000101722000000002, 0.00010195899999999869, 0.00010151400000000046, 0.00010130499999999945]</msg>
<status status="PASS" starttime="20201112 12:26:46.979" endtime="20201112 12:26:46.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.974" endtime="20201112 12:26:46.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.984" endtime="20201112 12:26:46.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.987" endtime="20201112 12:26:47.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.986" endtime="20201112 12:26:47.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.982" endtime="20201112 12:26:47.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.615" endtime="20201112 12:26:47.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.614" endtime="20201112 12:26:47.008"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.017" endtime="20201112 12:26:47.037"></status>
</kw>
<msg timestamp="20201112 12:26:47.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.016" endtime="20201112 12:26:47.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.038" endtime="20201112 12:26:47.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.041" endtime="20201112 12:26:47.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.013" endtime="20201112 12:26:47.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.011" endtime="20201112 12:26:47.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.051" endtime="20201112 12:26:47.337"></status>
</kw>
<msg timestamp="20201112 12:26:47.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.048" endtime="20201112 12:26:47.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.341" endtime="20201112 12:26:47.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.349" endtime="20201112 12:26:47.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.046" endtime="20201112 12:26:47.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.044" endtime="20201112 12:26:47.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.356" level="INFO">${RESULT} = [{'time': 0.021939903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010276400000000172, 'source_diff': 0.00010276400000000172}, {'time': 0.022095222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:47.352" endtime="20201112 12:26:47.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.369" level="INFO">${ACCURACY} = {'diff': [0.00010276400000000172, 0.00010322200000000004, 0.00010230499999999698, 0.00010320800000000047, 0.00010262499999999855, 0.00010258300000000331, 0.00010270799999999997, 0.00010240300000000091...</msg>
<status status="PASS" starttime="20201112 12:26:47.357" endtime="20201112 12:26:47.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.373" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.372" endtime="20201112 12:26:47.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.376" level="INFO">VALUE: [0.00010276400000000172, 0.00010322200000000004, 0.00010230499999999698, 0.00010320800000000047, 0.00010262499999999855, 0.00010258300000000331, 0.00010270799999999997, 0.00010240300000000091, 0.00010294400000000065, 0.0001028749999999988, 0.00010230499999999698, 0.00010312499999999905, 0.00010312500000000252, 0.00010266700000000073, 0.00010283300000000009, 0.00010251400000000147, 0.00010294500000000012, 0.00010247199999999929, 0.00010319500000000037, 0.00010251400000000147, 0.00010249999999999843, 0.00010294399999999718, 0.00010234700000000263, 0.00010244500000000309, 0.00010282, 0.00010312499999999905, 0.0001026810000000003, 0.00010297199999999979, 0.00010247199999999929, 0.0001028610000000027, 0.00010256999999999974, 0.00010270799999999997, 0.00010275000000000215, 0.00010259700000000288, 0.00010313900000000209, 0.0001031940000000009, 0.00010276399999999825, 0.00010275000000000215, 0.00010294399999999718, 0.00010261099999999898, 0.00010265299999999769, 0.00010311100000000295, 0.00010294400000000065, 0.00010256999999999974, 0.00010302800000000154, 0.00010299999999999893, 0.00010283399999999956, 0.00010307000000000024, 0.00010226400000000122, 0.0001028749999999988]</msg>
<status status="PASS" starttime="20201112 12:26:47.374" endtime="20201112 12:26:47.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.370" endtime="20201112 12:26:47.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.379" endtime="20201112 12:26:47.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.383" endtime="20201112 12:26:47.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.381" endtime="20201112 12:26:47.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.378" endtime="20201112 12:26:47.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.009" endtime="20201112 12:26:47.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.009" endtime="20201112 12:26:47.404"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.413" endtime="20201112 12:26:47.432"></status>
</kw>
<msg timestamp="20201112 12:26:47.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.411" endtime="20201112 12:26:47.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.434" endtime="20201112 12:26:47.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.436" endtime="20201112 12:26:47.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.408" endtime="20201112 12:26:47.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.406" endtime="20201112 12:26:47.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.447" endtime="20201112 12:26:47.734"></status>
</kw>
<msg timestamp="20201112 12:26:47.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.444" endtime="20201112 12:26:47.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.738" endtime="20201112 12:26:47.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.746" endtime="20201112 12:26:47.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.441" endtime="20201112 12:26:47.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.439" endtime="20201112 12:26:47.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.753" level="INFO">${RESULT} = [{'time': 0.021910389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010427799999999932, 'source_diff': 0.00010427799999999932}, {'time': 0.022075653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:47.749" endtime="20201112 12:26:47.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.766" level="INFO">${ACCURACY} = {'diff': [0.00010427799999999932, 0.000103820000000001, 0.00010393000000000208, 0.00010402799999999907, 0.00010413899999999962, 0.00010330499999999798, 0.00010412500000000005, 0.00010386100000000023, ...</msg>
<status status="PASS" starttime="20201112 12:26:47.754" endtime="20201112 12:26:47.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.770" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.769" endtime="20201112 12:26:47.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.773" level="INFO">VALUE: [0.00010427799999999932, 0.000103820000000001, 0.00010393000000000208, 0.00010402799999999907, 0.00010413899999999962, 0.00010330499999999798, 0.00010412500000000005, 0.00010386100000000023, 0.00010417999999999886, 0.00010398600000000036, 0.00010379199999999839, 0.00010415300000000266, 0.00010388899999999937, 0.00010326399999999875, 0.00010351400000000247, 0.00010355499999999823, 0.00010329200000000135, 0.00010322200000000004, 0.00010338899999999887, 0.00010343100000000105, 0.00010367999999999836, 0.00010369500000000087, 0.00010326399999999875, 0.0001033749999999993, 0.00010369500000000087, 0.00010348599999999986, 0.00010348599999999986, 0.00010392999999999861, 0.00010343100000000105, 0.00010334700000000016, 0.00010355600000000117, 0.00010362499999999955, 0.00010368000000000183, 0.00010393099999999808, 0.00010419399999999843, 0.00010412500000000005, 0.00010347299999999976, 0.00010380599999999796, 0.00010395799999999775, 0.00010358400000000031, 0.00010340300000000191, 0.00010419399999999843, 0.00010401300000000002, 0.00010392999999999861, 0.00010381999999999753, 0.0001041940000000019, 0.000103513999999999, 0.0001042360000000006, 0.00010337500000000277, 0.00010366700000000173]</msg>
<status status="PASS" starttime="20201112 12:26:47.771" endtime="20201112 12:26:47.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.767" endtime="20201112 12:26:47.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.776" endtime="20201112 12:26:47.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.780" endtime="20201112 12:26:47.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.778" endtime="20201112 12:26:47.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.775" endtime="20201112 12:26:47.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.405" endtime="20201112 12:26:47.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.404" endtime="20201112 12:26:47.801"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.809" endtime="20201112 12:26:47.829"></status>
</kw>
<msg timestamp="20201112 12:26:47.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.808" endtime="20201112 12:26:47.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.830" endtime="20201112 12:26:47.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.833" endtime="20201112 12:26:47.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.805" endtime="20201112 12:26:47.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.803" endtime="20201112 12:26:47.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.842" endtime="20201112 12:26:48.128"></status>
</kw>
<msg timestamp="20201112 12:26:48.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021565778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021670486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.840" endtime="20201112 12:26:48.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021565778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021670486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.132" endtime="20201112 12:26:48.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.140" endtime="20201112 12:26:48.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.838" endtime="20201112 12:26:48.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.836" endtime="20201112 12:26:48.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.147" level="INFO">${RESULT} = [{'time': 0.021670486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001047079999999985, 'source_diff': 0.0001047079999999985}, {'time': 0.021826833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:48.144" endtime="20201112 12:26:48.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.160" level="INFO">${ACCURACY} = {'diff': [0.0001047079999999985, 0.00010452700000000009, 0.00010425000000000018, 0.00010426399999999975, 0.00010447300000000076, 0.00010504199999999964, 0.00010505499999999973, 0.00010484799999999767,...</msg>
<status status="PASS" starttime="20201112 12:26:48.148" endtime="20201112 12:26:48.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.164" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.163" endtime="20201112 12:26:48.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.167" level="INFO">VALUE: [0.0001047079999999985, 0.00010452700000000009, 0.00010425000000000018, 0.00010426399999999975, 0.00010447300000000076, 0.00010504199999999964, 0.00010505499999999973, 0.00010484799999999767, 0.00010483299999999862, 0.00010479199999999939, 0.00010444399999999868, 0.00010444500000000162, 0.00010494400000000265, 0.0001047360000000011, 0.00010512499999999758, 0.00010465299999999969, 0.000104820000000002, 0.00010511100000000148, 0.00010497300000000126, 0.00010442999999999911, 0.00010520800000000247, 0.00010507000000000224, 0.00010515300000000019, 0.00010427800000000279, 0.00010451299999999705, 0.00010513900000000062, 0.00010477799999999982, 0.00010476400000000025, 0.00010438899999999987, 0.00010450000000000043, 0.00010487499999999733, 0.00010501399999999703, 0.00010501299999999755, 0.00010477799999999982, 0.00010426399999999975, 0.00010477700000000034, 0.00010518099999999933, 0.0001048750000000008, 0.00010486100000000123, 0.00010516699999999976, 0.00010433400000000106, 0.0001046949999999984, 0.00010494399999999918, 0.00010513900000000062, 0.00010458400000000131, 0.00010486100000000123, 0.0001043200000000015, 0.00010456900000000227, 0.0001043750000000003, 0.00010429100000000288]</msg>
<status status="PASS" starttime="20201112 12:26:48.166" endtime="20201112 12:26:48.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.161" endtime="20201112 12:26:48.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.177" endtime="20201112 12:26:48.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.181" endtime="20201112 12:26:48.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.179" endtime="20201112 12:26:48.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.175" endtime="20201112 12:26:48.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.802" endtime="20201112 12:26:48.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.801" endtime="20201112 12:26:48.202"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.210" endtime="20201112 12:26:48.230"></status>
</kw>
<msg timestamp="20201112 12:26:48.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.209" endtime="20201112 12:26:48.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.232" endtime="20201112 12:26:48.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.234" endtime="20201112 12:26:48.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.206" endtime="20201112 12:26:48.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.204" endtime="20201112 12:26:48.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.243" endtime="20201112 12:26:48.530"></status>
</kw>
<msg timestamp="20201112 12:26:48.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.242" endtime="20201112 12:26:48.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.535" endtime="20201112 12:26:48.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.543" endtime="20201112 12:26:48.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.239" endtime="20201112 12:26:48.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.237" endtime="20201112 12:26:48.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.549" level="INFO">${RESULT} = [{'time': 0.021680792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010613900000000162, 'source_diff': 0.00010613900000000162}, {'time': 0.021851042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:48.546" endtime="20201112 12:26:48.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.562" level="INFO">${ACCURACY} = {'diff': [0.00010613900000000162, 0.0001053750000000013, 0.00010608299999999987, 0.00010580599999999996, 0.00010561099999999851, 0.0001055689999999998, 0.00010594400000000018, 0.00010531999999999903, ...</msg>
<status status="PASS" starttime="20201112 12:26:48.550" endtime="20201112 12:26:48.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.567" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.566" endtime="20201112 12:26:48.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.569" level="INFO">VALUE: [0.00010613900000000162, 0.0001053750000000013, 0.00010608299999999987, 0.00010580599999999996, 0.00010561099999999851, 0.0001055689999999998, 0.00010594400000000018, 0.00010531999999999903, 0.00010569399999999993, 0.0001052499999999977, 0.00010590300000000094, 0.00010556999999999928, 0.00010558299999999937, 0.00010599999999999846, 0.00010562499999999808, 0.00010593000000000061, 0.00010525000000000118, 0.00010544499999999915, 0.00010599999999999846, 0.00010544499999999915, 0.00010538900000000087, 0.00010526400000000075, 0.00010533299999999912, 0.00010618100000000033, 0.00010604200000000064, 0.00010527800000000032, 0.00010556999999999928, 0.00010620899999999947, 0.00010549999999999796, 0.0001052360000000016, 0.0001062360000000026, 0.00010588900000000137, 0.00010565299999999722, 0.00010594499999999965, 0.00010598599999999889, 0.0001058750000000018, 0.0001060560000000002, 0.00010526400000000075, 0.00010534700000000216, 0.0001057360000000021, 0.00010612499999999858, 0.0001055559999999997, 0.0001052499999999977, 0.00010586099999999876, 0.0001053750000000013, 0.00010525000000000118, 0.00010587499999999833, 0.00010573599999999864, 0.00010580599999999996, 0.00010556999999999928]</msg>
<status status="PASS" starttime="20201112 12:26:48.568" endtime="20201112 12:26:48.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.563" endtime="20201112 12:26:48.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.573" endtime="20201112 12:26:48.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.577" endtime="20201112 12:26:48.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.575" endtime="20201112 12:26:48.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.571" endtime="20201112 12:26:48.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.203" endtime="20201112 12:26:48.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.202" endtime="20201112 12:26:48.598"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.606" endtime="20201112 12:26:48.626"></status>
</kw>
<msg timestamp="20201112 12:26:48.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.605" endtime="20201112 12:26:48.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.628" endtime="20201112 12:26:48.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.630" endtime="20201112 12:26:48.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.602" endtime="20201112 12:26:48.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.600" endtime="20201112 12:26:48.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.640" endtime="20201112 12:26:48.927"></status>
</kw>
<msg timestamp="20201112 12:26:48.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.638" endtime="20201112 12:26:48.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.931" endtime="20201112 12:26:48.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.939" endtime="20201112 12:26:48.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.635" endtime="20201112 12:26:48.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.634" endtime="20201112 12:26:48.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.946" level="INFO">${RESULT} = [{'time': 0.022175056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001073889999999994, 'source_diff': 0.0001073889999999994}, {'time': 0.022332417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:48.942" endtime="20201112 12:26:48.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.959" level="INFO">${ACCURACY} = {'diff': [0.0001073889999999994, 0.00010647299999999929, 0.00010701399999999903, 0.00010718100000000133, 0.0001070690000000013, 0.00010644399999999721, 0.00010709700000000044, 0.00010712499999999958, ...</msg>
<status status="PASS" starttime="20201112 12:26:48.947" endtime="20201112 12:26:48.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.963" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.962" endtime="20201112 12:26:48.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.966" level="INFO">VALUE: [0.0001073889999999994, 0.00010647299999999929, 0.00010701399999999903, 0.00010718100000000133, 0.0001070690000000013, 0.00010644399999999721, 0.00010709700000000044, 0.00010712499999999958, 0.00010644500000000015, 0.00010645899999999972, 0.00010691700000000151, 0.00010670899999999997, 0.00010704200000000164, 0.00010645800000000025, 0.0001068889999999989, 0.00010699999999999946, 0.00010650000000000243, 0.000106901999999999, 0.00010627799999999785, 0.00010712499999999958, 0.00010701399999999903, 0.0001070829999999974, 0.0001063750000000023, 0.0001067499999999992, 0.00010709700000000044, 0.0001062499999999987, 0.0001068889999999989, 0.00010643100000000058, 0.00010680500000000148, 0.00010709699999999697, 0.00010627800000000132, 0.00010673599999999964, 0.00010699999999999946, 0.00010668100000000083, 0.00010642999999999764, 0.00010709700000000044, 0.00010718100000000133, 0.00010694400000000118, 0.00010654200000000114, 0.00010638900000000187, 0.00010633300000000012, 0.0001070279999999986, 0.00010661099999999951, 0.00010704199999999817, 0.00010684700000000019, 0.00010715300000000219, 0.00010699999999999946, 0.00010713899999999915, 0.00010654200000000114, 0.00010648599999999939]</msg>
<status status="PASS" starttime="20201112 12:26:48.964" endtime="20201112 12:26:48.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.960" endtime="20201112 12:26:48.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.969" endtime="20201112 12:26:48.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.973" endtime="20201112 12:26:48.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.971" endtime="20201112 12:26:48.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.968" endtime="20201112 12:26:48.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.598" endtime="20201112 12:26:48.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.598" endtime="20201112 12:26:48.994"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.003" endtime="20201112 12:26:49.023"></status>
</kw>
<msg timestamp="20201112 12:26:49.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.001" endtime="20201112 12:26:49.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.024" endtime="20201112 12:26:49.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.027" endtime="20201112 12:26:49.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.998" endtime="20201112 12:26:49.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.996" endtime="20201112 12:26:49.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.036" endtime="20201112 12:26:49.323"></status>
</kw>
<msg timestamp="20201112 12:26:49.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.034" endtime="20201112 12:26:49.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.328" endtime="20201112 12:26:49.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.336" endtime="20201112 12:26:49.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.032" endtime="20201112 12:26:49.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.030" endtime="20201112 12:26:49.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.342" level="INFO">${RESULT} = [{'time': 0.021986639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010777799999999935, 'source_diff': 0.00010777799999999935}, {'time': 0.022144958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:49.339" endtime="20201112 12:26:49.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.355" level="INFO">${ACCURACY} = {'diff': [0.00010777799999999935, 0.0001077500000000002, 0.00010781999999999806, 0.00010800000000000046, 0.00010780599999999849, 0.00010806899999999883, 0.00010730500000000198, 0.00010769499999999793,...</msg>
<status status="PASS" starttime="20201112 12:26:49.343" endtime="20201112 12:26:49.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.360" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.359" endtime="20201112 12:26:49.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.362" level="INFO">VALUE: [0.00010777799999999935, 0.0001077500000000002, 0.00010781999999999806, 0.00010800000000000046, 0.00010780599999999849, 0.00010806899999999883, 0.00010730500000000198, 0.00010769499999999793, 0.00010779199999999892, 0.00010773600000000064, 0.00010733300000000112, 0.00010794499999999818, 0.00010792999999999914, 0.00010768100000000183, 0.0001075699999999978, 0.00010740300000000244, 0.00010749999999999996, 0.00010726399999999928, 0.00010745900000000072, 0.00010794400000000218, 0.00010795799999999828, 0.00010779199999999892, 0.00010794399999999871, 0.00010811099999999754, 0.00010737499999999983, 0.0001077500000000002, 0.00010730599999999799, 0.00010807000000000178, 0.00010786100000000076, 0.00010806899999999883, 0.0001076950000000014, 0.00010773700000000011, 0.00010763899999999965, 0.00010800000000000046, 0.00010801300000000055, 0.00010747200000000082, 0.0001075560000000017, 0.00010794400000000218, 0.00010776399999999978, 0.00010820799999999853, 0.00010743100000000158, 0.00010800000000000046, 0.0001073889999999994, 0.00010781899999999858, 0.00010782000000000153, 0.0001075699999999978, 0.0001077500000000002, 0.00010823600000000114, 0.00010808400000000135, 0.00010787500000000033]</msg>
<status status="PASS" starttime="20201112 12:26:49.361" endtime="20201112 12:26:49.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.356" endtime="20201112 12:26:49.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.366" endtime="20201112 12:26:49.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.369" endtime="20201112 12:26:49.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.368" endtime="20201112 12:26:49.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.364" endtime="20201112 12:26:49.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.995" endtime="20201112 12:26:49.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.994" endtime="20201112 12:26:49.390"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.399" endtime="20201112 12:26:49.419"></status>
</kw>
<msg timestamp="20201112 12:26:49.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.398" endtime="20201112 12:26:49.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.420" endtime="20201112 12:26:49.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.423" endtime="20201112 12:26:49.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.395" endtime="20201112 12:26:49.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.393" endtime="20201112 12:26:49.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.432" endtime="20201112 12:26:49.718"></status>
</kw>
<msg timestamp="20201112 12:26:49.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.430" endtime="20201112 12:26:49.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.722" endtime="20201112 12:26:49.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.730" endtime="20201112 12:26:49.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.428" endtime="20201112 12:26:49.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.426" endtime="20201112 12:26:49.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.737" level="INFO">${RESULT} = [{'time': 0.021684097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010851400000000053, 'source_diff': 0.00010851400000000053}, {'time': 0.021848403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:49.733" endtime="20201112 12:26:49.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.750" level="INFO">${ACCURACY} = {'diff': [0.00010851400000000053, 0.00010913899999999768, 0.00010916700000000029, 0.00010919399999999996, 0.00010862500000000108, 0.00010830499999999951, 0.0001083890000000004, 0.00010913899999999768,...</msg>
<status status="PASS" starttime="20201112 12:26:49.738" endtime="20201112 12:26:49.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.754" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.753" endtime="20201112 12:26:49.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.756" level="INFO">VALUE: [0.00010851400000000053, 0.00010913899999999768, 0.00010916700000000029, 0.00010919399999999996, 0.00010862500000000108, 0.00010830499999999951, 0.0001083890000000004, 0.00010913899999999768, 0.00010837500000000083, 0.00010862499999999761, 0.00010905500000000026, 0.00010830599999999899, 0.00010900000000000146, 0.00010884700000000219, 0.00010913900000000115, 0.00010844399999999921, 0.00010866699999999979, 0.00010851400000000053, 0.00010894399999999971, 0.00010823600000000114, 0.00010911099999999854, 0.00010826400000000028, 0.00010865199999999728, 0.00010837500000000083, 0.00010833299999999865, 0.0001087089999999985, 0.00010879100000000044, 0.00010854199999999967, 0.0001082500000000007, 0.0001085699999999988, 0.00010870799999999903, 0.00010880599999999949, 0.00010918099999999986, 0.00010894399999999971, 0.00010834699999999822, 0.00010912500000000158, 0.0001083890000000004, 0.00010898600000000189, 0.00010863900000000065, 0.00010862500000000108, 0.00010849999999999749, 0.0001085560000000027, 0.0001088890000000009, 0.0001082500000000007, 0.00010912500000000158, 0.00010906899999999983, 0.00010833399999999813, 0.00010899999999999799, 0.00010868100000000283, 0.00010912500000000158]</msg>
<status status="PASS" starttime="20201112 12:26:49.755" endtime="20201112 12:26:49.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.750" endtime="20201112 12:26:49.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.760" endtime="20201112 12:26:49.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.764" endtime="20201112 12:26:49.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.762" endtime="20201112 12:26:49.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.758" endtime="20201112 12:26:49.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.391" endtime="20201112 12:26:49.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.391" endtime="20201112 12:26:49.784"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.793" endtime="20201112 12:26:49.813"></status>
</kw>
<msg timestamp="20201112 12:26:49.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.792" endtime="20201112 12:26:49.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.815" endtime="20201112 12:26:49.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.817" endtime="20201112 12:26:49.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.789" endtime="20201112 12:26:49.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.787" endtime="20201112 12:26:49.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.826" endtime="20201112 12:26:50.114"></status>
</kw>
<msg timestamp="20201112 12:26:50.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021670194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.825" endtime="20201112 12:26:50.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021670194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.118" endtime="20201112 12:26:50.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.126" endtime="20201112 12:26:50.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.822" endtime="20201112 12:26:50.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.820" endtime="20201112 12:26:50.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.133" level="INFO">${RESULT} = [{'time': 0.021670194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010986099999999929, 'source_diff': 0.00010986099999999929}, {'time': 0.021838486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:50.130" endtime="20201112 12:26:50.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.146" level="INFO">${ACCURACY} = {'diff': [0.00010986099999999929, 0.00010959699999999947, 0.00010929199999999695, 0.00010993100000000061, 0.00010938799999999846, 0.00010930500000000051, 0.00011005600000000074, 0.00010952799999999763...</msg>
<status status="PASS" starttime="20201112 12:26:50.134" endtime="20201112 12:26:50.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.150" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.149" endtime="20201112 12:26:50.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.153" level="INFO">VALUE: [0.00010986099999999929, 0.00010959699999999947, 0.00010929199999999695, 0.00010993100000000061, 0.00010938799999999846, 0.00010930500000000051, 0.00011005600000000074, 0.00010952799999999763, 0.00010975000000000221, 0.00011019400000000096, 0.00010973599999999917, 0.00010966599999999785, 0.00010924999999999824, 0.00010936200000000174, 0.00010947199999999935, 0.00010925000000000171, 0.00010929100000000094, 0.00010943100000000011, 0.00011004200000000117, 0.00010968100000000036, 0.00010966700000000079, 0.00011011099999999954, 0.00011001399999999856, 0.00010991700000000104, 0.00011015199999999878, 0.00010941700000000054, 0.00010975000000000221, 0.00011008399999999988, 0.00010943100000000011, 0.00010986099999999929, 0.00010930599999999999, 0.00010947199999999935, 0.00011016700000000129, 0.00010958399999999938, 0.00010938899999999793, 0.00010959699999999947, 0.00010995899999999975, 0.00010980600000000049, 0.00010948700000000186, 0.00010950000000000196, 0.00010979199999999745, 0.00011019500000000043, 0.00010954200000000067, 0.00010974999999999874, 0.00011012499999999911, 0.00010970800000000003, 0.0001100830000000004, 0.00011016700000000129, 0.00010930499999999704, 0.00010979200000000092]</msg>
<status status="PASS" starttime="20201112 12:26:50.151" endtime="20201112 12:26:50.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.147" endtime="20201112 12:26:50.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.156" endtime="20201112 12:26:50.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.160" endtime="20201112 12:26:50.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.158" endtime="20201112 12:26:50.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.155" endtime="20201112 12:26:50.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.785" endtime="20201112 12:26:50.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.785" endtime="20201112 12:26:50.181"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.189" endtime="20201112 12:26:50.209"></status>
</kw>
<msg timestamp="20201112 12:26:50.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.188" endtime="20201112 12:26:50.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.211" endtime="20201112 12:26:50.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.213" endtime="20201112 12:26:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.185" endtime="20201112 12:26:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.183" endtime="20201112 12:26:50.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.222" endtime="20201112 12:26:50.508"></status>
</kw>
<msg timestamp="20201112 12:26:50.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.221" endtime="20201112 12:26:50.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.512" endtime="20201112 12:26:50.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.521" endtime="20201112 12:26:50.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.218" endtime="20201112 12:26:50.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.216" endtime="20201112 12:26:50.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.527" level="INFO">${RESULT} = [{'time': 0.021637014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011130599999999852, 'source_diff': 0.00011130599999999852}, {'time': 0.021799306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:50.524" endtime="20201112 12:26:50.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.540" level="INFO">${ACCURACY} = {'diff': [0.00011130599999999852, 0.00011087499999999986, 0.00011062499999999961, 0.00011094500000000118, 0.00011108299999999793, 0.00011098600000000042, 0.00011045900000000025, 0.00011073600000000017...</msg>
<status status="PASS" starttime="20201112 12:26:50.528" endtime="20201112 12:26:50.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.545" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.544" endtime="20201112 12:26:50.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.548" level="INFO">VALUE: [0.00011130599999999852, 0.00011087499999999986, 0.00011062499999999961, 0.00011094500000000118, 0.00011108299999999793, 0.00011098600000000042, 0.00011045900000000025, 0.00011073600000000017, 0.00011036199999999927, 0.00011044500000000068, 0.00011045900000000025, 0.00011038799999999946, 0.00011051299999999958, 0.00011068099999999789, 0.00011091700000000204, 0.00011080599999999802, 0.00011091600000000257, 0.00011022299999999957, 0.00011113899999999968, 0.00011105500000000226, 0.00011062499999999961, 0.00011070800000000103, 0.00011063900000000265, 0.00011074999999999974, 0.00011044500000000068, 0.0001110549999999988, 0.00011056999999999734, 0.00011037499999999936, 0.00011063899999999918, 0.00011073600000000017, 0.00011041700000000154, 0.00011119400000000196, 0.00011094399999999824, 0.00011099999999999999, 0.00011031899999999761, 0.00011044399999999774, 0.00011087499999999986, 0.0001110830000000014, 0.00011047299999999982, 0.00011074999999999974, 0.00011077799999999888, 0.00011097200000000085, 0.00011048700000000286, 0.0001105830000000009, 0.00011095900000000075, 0.00011080499999999854, 0.0001103479999999997, 0.00011023599999999967, 0.00011104100000000269, 0.00011037499999999936]</msg>
<status status="PASS" starttime="20201112 12:26:50.546" endtime="20201112 12:26:50.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.541" endtime="20201112 12:26:50.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.551" endtime="20201112 12:26:50.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.555" endtime="20201112 12:26:50.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.553" endtime="20201112 12:26:50.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.549" endtime="20201112 12:26:50.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.182" endtime="20201112 12:26:50.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.181" endtime="20201112 12:26:50.575"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.584" endtime="20201112 12:26:50.604"></status>
</kw>
<msg timestamp="20201112 12:26:50.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.583" endtime="20201112 12:26:50.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.606" endtime="20201112 12:26:50.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.608" endtime="20201112 12:26:50.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.580" endtime="20201112 12:26:50.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.578" endtime="20201112 12:26:50.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.617" endtime="20201112 12:26:50.905"></status>
</kw>
<msg timestamp="20201112 12:26:50.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0215915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021703042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:50.616" endtime="20201112 12:26:50.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0215915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021703042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:50.909" endtime="20201112 12:26:50.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.917" endtime="20201112 12:26:50.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.613" endtime="20201112 12:26:50.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.611" endtime="20201112 12:26:50.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.924" level="INFO">${RESULT} = [{'time': 0.021703042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001115419999999992, 'source_diff': 0.0001115419999999992}, {'time': 0.021874333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.921" endtime="20201112 12:26:50.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.937" level="INFO">${ACCURACY} = {'diff': [0.0001115419999999992, 0.00011198599999999795, 0.00011175000000000074, 0.00011197199999999838, 0.00011169399999999899, 0.00011192999999999967, 0.00011219400000000296, 0.00011131899999999861,...</msg>
<status status="PASS" starttime="20201112 12:26:50.925" endtime="20201112 12:26:50.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.941" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.940" endtime="20201112 12:26:50.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.944" level="INFO">VALUE: [0.0001115419999999992, 0.00011198599999999795, 0.00011175000000000074, 0.00011197199999999838, 0.00011169399999999899, 0.00011192999999999967, 0.00011219400000000296, 0.00011131899999999861, 0.00011155600000000224, 0.00011150000000000049, 0.00011168099999999889, 0.00011212500000000111, 0.00011130599999999852, 0.00011142999999999917, 0.0001112359999999972, 0.00011198599999999795, 0.00011144399999999874, 0.00011219500000000243, 0.00011211100000000154, 0.00011198600000000142, 0.00011145800000000178, 0.00011213800000000121, 0.00011144399999999874, 0.00011198600000000142, 0.00011215300000000025, 0.00011194400000000271, 0.00011200000000000099, 0.00011200000000000099, 0.00011161099999999757, 0.00011209700000000197, 0.00011167999999999942, 0.000111209000000001, 0.00011161099999999757, 0.00011155599999999877, 0.00011127799999999938, 0.00011216699999999982, 0.00011173600000000117, 0.00011211100000000154, 0.00011198600000000142, 0.00011161100000000104, 0.00011219499999999896, 0.00011180600000000249, 0.00011163900000000018, 0.00011209800000000145, 0.00011150000000000049, 0.00011219500000000243, 0.00011198700000000089, 0.00011166599999999985, 0.00011191699999999957, 0.00011161200000000052]</msg>
<status status="PASS" starttime="20201112 12:26:50.942" endtime="20201112 12:26:50.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.938" endtime="20201112 12:26:50.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.947" endtime="20201112 12:26:50.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.951" endtime="20201112 12:26:50.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.949" endtime="20201112 12:26:50.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.946" endtime="20201112 12:26:50.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.576" endtime="20201112 12:26:50.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.576" endtime="20201112 12:26:50.972"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.980" endtime="20201112 12:26:51.001"></status>
</kw>
<msg timestamp="20201112 12:26:51.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.979" endtime="20201112 12:26:51.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.003" endtime="20201112 12:26:51.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.005" endtime="20201112 12:26:51.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.976" endtime="20201112 12:26:51.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.974" endtime="20201112 12:26:51.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.014" endtime="20201112 12:26:51.301"></status>
</kw>
<msg timestamp="20201112 12:26:51.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.013" endtime="20201112 12:26:51.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.305" endtime="20201112 12:26:51.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.314" endtime="20201112 12:26:51.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.010" endtime="20201112 12:26:51.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.009" endtime="20201112 12:26:51.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.320" level="INFO">${RESULT} = [{'time': 0.021772708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011319400000000049, 'source_diff': 0.00011319400000000049}, {'time': 0.02194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:51.317" endtime="20201112 12:26:51.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.333" level="INFO">${ACCURACY} = {'diff': [0.00011319400000000049, 0.00011225000000000124, 0.00011312499999999864, 0.00011299999999999852, 0.0001124030000000005, 0.00011226400000000081, 0.00011222199999999863, 0.0001128749999999984, ...</msg>
<status status="PASS" starttime="20201112 12:26:51.321" endtime="20201112 12:26:51.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.338" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.337" endtime="20201112 12:26:51.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.340" level="INFO">VALUE: [0.00011319400000000049, 0.00011225000000000124, 0.00011312499999999864, 0.00011299999999999852, 0.0001124030000000005, 0.00011226400000000081, 0.00011222199999999863, 0.0001128749999999984, 0.00011230500000000004, 0.00011248599999999845, 0.00011297199999999938, 0.00011281900000000011, 0.00011319499999999996, 0.00011279200000000045, 0.0001125550000000003, 0.00011258400000000238, 0.00011311099999999907, 0.00011268000000000042, 0.00011311099999999907, 0.00011249999999999802, 0.00011268099999999989, 0.00011313899999999821, 0.00011280600000000002, 0.00011248600000000192, 0.00011291700000000057, 0.00011248699999999792, 0.0001125550000000003, 0.0001130550000000008, 0.00011262499999999814, 0.00011284700000000272, 0.00011316700000000082, 0.00011291700000000057, 0.00011280600000000002, 0.00011298599999999895, 0.00011230599999999952, 0.0001128749999999984, 0.0001129169999999971, 0.00011288900000000143, 0.00011236100000000179, 0.00011231999999999909, 0.00011236099999999832, 0.00011236100000000179, 0.00011287500000000186, 0.00011273600000000217, 0.00011229199999999995, 0.00011262499999999814, 0.00011229100000000047, 0.00011226400000000081, 0.00011284699999999925, 0.00011268099999999989]</msg>
<status status="PASS" starttime="20201112 12:26:51.339" endtime="20201112 12:26:51.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.334" endtime="20201112 12:26:51.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.344" endtime="20201112 12:26:51.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.347" endtime="20201112 12:26:51.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.346" endtime="20201112 12:26:51.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.342" endtime="20201112 12:26:51.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.973" endtime="20201112 12:26:51.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.972" endtime="20201112 12:26:51.368"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.377" endtime="20201112 12:26:51.397"></status>
</kw>
<msg timestamp="20201112 12:26:51.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.376" endtime="20201112 12:26:51.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.399" endtime="20201112 12:26:51.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.401" endtime="20201112 12:26:51.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.373" endtime="20201112 12:26:51.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.371" endtime="20201112 12:26:51.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.410" endtime="20201112 12:26:51.698"></status>
</kw>
<msg timestamp="20201112 12:26:51.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.409" endtime="20201112 12:26:51.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.702" endtime="20201112 12:26:51.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.711" endtime="20201112 12:26:51.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.406" endtime="20201112 12:26:51.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.404" endtime="20201112 12:26:51.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.717" level="INFO">${RESULT} = [{'time': 0.021861208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011397200000000038, 'source_diff': 0.00011397200000000038}, {'time': 0.022035472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:51.714" endtime="20201112 12:26:51.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.730" level="INFO">${ACCURACY} = {'diff': [0.00011397200000000038, 0.0001137359999999997, 0.00011345800000000031, 0.00011357000000000034, 0.00011365200000000228, 0.0001135420000000012, 0.00011386099999999982, 0.00011411100000000007, ...</msg>
<status status="PASS" starttime="20201112 12:26:51.718" endtime="20201112 12:26:51.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.735" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.734" endtime="20201112 12:26:51.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.737" level="INFO">VALUE: [0.00011397200000000038, 0.0001137359999999997, 0.00011345800000000031, 0.00011357000000000034, 0.00011365200000000228, 0.0001135420000000012, 0.00011386099999999982, 0.00011411100000000007, 0.00011370900000000003, 0.00011344400000000074, 0.00011388799999999949, 0.00011412499999999964, 0.00011336200000000227, 0.00011367999999999795, 0.00011347199999999988, 0.00011368000000000142, 0.00011345800000000031, 0.00011416700000000182, 0.00011318099999999692, 0.00011377799999999841, 0.00011401399999999909, 0.00011412500000000311, 0.00011343000000000117, 0.00011348599999999945, 0.0001137359999999997, 0.00011405499999999832, 0.00011351399999999859, 0.00011336099999999932, 0.000113290999999998, 0.00011377800000000188, 0.00011337500000000236, 0.00011408299999999746, 0.00011370900000000003, 0.00011381999999999712, 0.0001133749999999989, 0.00011411100000000007, 0.00011411100000000007, 0.00011351399999999859, 0.00011381900000000111, 0.00011412499999999964, 0.00011393000000000167, 0.00011349999999999902, 0.0001135550000000013, 0.00011361099999999957, 0.00011354199999999773, 0.0001133749999999989, 0.00011411100000000007, 0.00011365199999999881, 0.00011388900000000243, 0.00011394500000000071]</msg>
<status status="PASS" starttime="20201112 12:26:51.736" endtime="20201112 12:26:51.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.731" endtime="20201112 12:26:51.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.741" endtime="20201112 12:26:51.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.744" endtime="20201112 12:26:51.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.743" endtime="20201112 12:26:51.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.739" endtime="20201112 12:26:51.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.369" endtime="20201112 12:26:51.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.369" endtime="20201112 12:26:51.765"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.774" endtime="20201112 12:26:51.794"></status>
</kw>
<msg timestamp="20201112 12:26:51.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.773" endtime="20201112 12:26:51.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.796" endtime="20201112 12:26:51.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.798" endtime="20201112 12:26:51.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.770" endtime="20201112 12:26:51.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.768" endtime="20201112 12:26:51.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.807" endtime="20201112 12:26:52.095"></status>
</kw>
<msg timestamp="20201112 12:26:52.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.806" endtime="20201112 12:26:52.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.100" endtime="20201112 12:26:52.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.108" endtime="20201112 12:26:52.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.803" endtime="20201112 12:26:52.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.802" endtime="20201112 12:26:52.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.114" level="INFO">${RESULT} = [{'time': 0.021744333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011491599999999963, 'source_diff': 0.00011491599999999963}, {'time': 0.021915694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:52.111" endtime="20201112 12:26:52.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.127" level="INFO">${ACCURACY} = {'diff': [0.00011491599999999963, 0.00011517999999999945, 0.00011468100000000189, 0.00011422200000000063, 0.00011486100000000082, 0.00011461100000000057, 0.00011493099999999867, 0.0001150970000000015,...</msg>
<status status="PASS" starttime="20201112 12:26:52.115" endtime="20201112 12:26:52.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.132" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.131" endtime="20201112 12:26:52.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.134" level="INFO">VALUE: [0.00011491599999999963, 0.00011517999999999945, 0.00011468100000000189, 0.00011422200000000063, 0.00011486100000000082, 0.00011461100000000057, 0.00011493099999999867, 0.0001150970000000015, 0.00011484700000000125, 0.00011452799999999916, 0.00011444500000000121, 0.00011466599999999938, 0.0001147360000000007, 0.00011491700000000257, 0.00011488899999999996, 0.00011519399999999902, 0.0001150559999999988, 0.00011467999999999895, 0.00011434800000000023, 0.0001143749999999999, 0.00011512499999999717, 0.0001148750000000004, 0.00011458300000000143, 0.00011436100000000032, 0.00011504199999999923, 0.00011458300000000143, 0.00011461100000000057, 0.00011475000000000027, 0.0001147360000000007, 0.00011516599999999988, 0.00011506900000000236, 0.0001145689999999984, 0.00011472199999999766, 0.0001150970000000015, 0.0001149299999999992, 0.0001148750000000004, 0.00011473599999999723, 0.00011502700000000018, 0.00011456999999999787, 0.00011423599999999673, 0.00011511100000000107, 0.00011427699999999943, 0.00011468099999999842, 0.00011430599999999805, 0.00011430599999999805, 0.0001147360000000007, 0.00011518100000000239, 0.0001148620000000003, 0.00011491599999999963, 0.0001143749999999999]</msg>
<status status="PASS" starttime="20201112 12:26:52.133" endtime="20201112 12:26:52.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.128" endtime="20201112 12:26:52.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.138" endtime="20201112 12:26:52.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.141" endtime="20201112 12:26:52.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.140" endtime="20201112 12:26:52.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.136" endtime="20201112 12:26:52.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.766" endtime="20201112 12:26:52.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.766" endtime="20201112 12:26:52.162"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.171" endtime="20201112 12:26:52.191"></status>
</kw>
<msg timestamp="20201112 12:26:52.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.169" endtime="20201112 12:26:52.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.193" endtime="20201112 12:26:52.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.195" endtime="20201112 12:26:52.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.167" endtime="20201112 12:26:52.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.165" endtime="20201112 12:26:52.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.204" endtime="20201112 12:26:52.492"></status>
</kw>
<msg timestamp="20201112 12:26:52.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.203" endtime="20201112 12:26:52.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.496" endtime="20201112 12:26:52.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.504" endtime="20201112 12:26:52.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.200" endtime="20201112 12:26:52.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.199" endtime="20201112 12:26:52.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.511" level="INFO">${RESULT} = [{'time': 0.021826722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001158750000000014, 'source_diff': 0.0001158750000000014}, {'time': 0.022005972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.508" endtime="20201112 12:26:52.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.524" level="INFO">${ACCURACY} = {'diff': [0.0001158750000000014, 0.00011591599999999716, 0.0001160559999999998, 0.00011530599999999905, 0.00011525000000000077, 0.00011580599999999955, 0.0001152360000000012, 0.00011530500000000304, 0...</msg>
<status status="PASS" starttime="20201112 12:26:52.512" endtime="20201112 12:26:52.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.529" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.528" endtime="20201112 12:26:52.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.531" level="INFO">VALUE: [0.0001158750000000014, 0.00011591599999999716, 0.0001160559999999998, 0.00011530599999999905, 0.00011525000000000077, 0.00011580599999999955, 0.0001152360000000012, 0.00011530500000000304, 0.00011543100000000264, 0.0001158889999999975, 0.00011550000000000102, 0.00011566699999999985, 0.00011605500000000032, 0.00011519499999999849, 0.00011588900000000096, 0.000115597000000002, 0.00011595900000000228, 0.0001157230000000016, 0.00011554100000000025, 0.00011527799999999991, 0.00011554100000000025, 0.0001161109999999986, 0.00011612500000000164, 0.00011544499999999874, 0.00011615199999999784, 0.00011580500000000007, 0.00011559699999999853, 0.00011559699999999853, 0.00011615300000000078, 0.00011566600000000038, 0.0001156109999999981, 0.00011548599999999798, 0.00011530500000000304, 0.00011604200000000023, 0.00011601400000000109, 0.0001155559999999993, 0.00011551400000000059, 0.00011545800000000231, 0.00011527799999999991, 0.00011554100000000025, 0.00011577800000000041, 0.00011566600000000038, 0.00011547199999999841, 0.0001160970000000025, 0.00011534700000000175, 0.0001160970000000025, 0.000115291, 0.00011583299999999921, 0.00011609800000000198, 0.0001157910000000005]</msg>
<status status="PASS" starttime="20201112 12:26:52.530" endtime="20201112 12:26:52.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.525" endtime="20201112 12:26:52.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.535" endtime="20201112 12:26:52.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.538" endtime="20201112 12:26:52.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.537" endtime="20201112 12:26:52.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.533" endtime="20201112 12:26:52.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.163" endtime="20201112 12:26:52.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.163" endtime="20201112 12:26:52.559"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.568" endtime="20201112 12:26:52.588"></status>
</kw>
<msg timestamp="20201112 12:26:52.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.566" endtime="20201112 12:26:52.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.590" endtime="20201112 12:26:52.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.592" endtime="20201112 12:26:52.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.564" endtime="20201112 12:26:52.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.562" endtime="20201112 12:26:52.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.601" endtime="20201112 12:26:52.888"></status>
</kw>
<msg timestamp="20201112 12:26:52.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.600" endtime="20201112 12:26:52.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.892" endtime="20201112 12:26:52.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.900" endtime="20201112 12:26:52.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.597" endtime="20201112 12:26:52.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.595" endtime="20201112 12:26:52.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.906" level="INFO">${RESULT} = [{'time': 0.021669764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011658299999999996, 'source_diff': 0.00011658299999999996}, {'time': 0.021849014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:52.903" endtime="20201112 12:26:52.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.919" level="INFO">${ACCURACY} = {'diff': [0.00011658299999999996, 0.00011665300000000128, 0.00011702800000000166, 0.00011690200000000206, 0.00011701400000000209, 0.00011699999999999905, 0.00011702799999999819, 0.00011652800000000116...</msg>
<status status="PASS" starttime="20201112 12:26:52.907" endtime="20201112 12:26:52.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.924" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.923" endtime="20201112 12:26:52.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.927" level="INFO">VALUE: [0.00011658299999999996, 0.00011665300000000128, 0.00011702800000000166, 0.00011690200000000206, 0.00011701400000000209, 0.00011699999999999905, 0.00011702799999999819, 0.00011652800000000116, 0.00011636099999999885, 0.00011651400000000159, 0.00011691599999999816, 0.00011687499999999892, 0.00011701399999999862, 0.00011716599999999841, 0.00011641600000000113, 0.00011683300000000021, 0.000116597000000003, 0.00011672199999999966, 0.00011713899999999874, 0.00011630500000000057, 0.00011680500000000107, 0.00011697299999999938, 0.00011690300000000153, 0.00011648599999999898, 0.00011679200000000098, 0.00011717999999999798, 0.00011663900000000171, 0.0001164170000000006, 0.00011666700000000085, 0.00011679099999999804, 0.00011654200000000073, 0.00011648600000000245, 0.00011654200000000073, 0.00011626399999999787, 0.00011654200000000073, 0.00011697300000000285, 0.00011704100000000175, 0.00011684699999999978, 0.00011697299999999938, 0.00011697199999999991, 0.00011697199999999991, 0.00011622199999999916, 0.00011634800000000223, 0.00011627800000000091, 0.00011684699999999978, 0.00011705500000000132, 0.00011619499999999949, 0.00011701399999999862, 0.00011704200000000123, 0.00011633299999999971]</msg>
<status status="PASS" starttime="20201112 12:26:52.925" endtime="20201112 12:26:52.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.920" endtime="20201112 12:26:52.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.930" endtime="20201112 12:26:52.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.934" endtime="20201112 12:26:52.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.932" endtime="20201112 12:26:52.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.928" endtime="20201112 12:26:52.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.560" endtime="20201112 12:26:52.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.560" endtime="20201112 12:26:52.954"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.963" endtime="20201112 12:26:52.983"></status>
</kw>
<msg timestamp="20201112 12:26:52.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.962" endtime="20201112 12:26:52.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.985" endtime="20201112 12:26:52.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.987" endtime="20201112 12:26:52.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.959" endtime="20201112 12:26:52.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.957" endtime="20201112 12:26:52.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.996" endtime="20201112 12:26:53.283"></status>
</kw>
<msg timestamp="20201112 12:26:53.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.995" endtime="20201112 12:26:53.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.287" endtime="20201112 12:26:53.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.295" endtime="20201112 12:26:53.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.992" endtime="20201112 12:26:53.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.991" endtime="20201112 12:26:53.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.302" level="INFO">${RESULT} = [{'time': 0.021639375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011745799999999737, 'source_diff': 0.00011745799999999737}, {'time': 0.021814625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:53.299" endtime="20201112 12:26:53.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.315" level="INFO">${ACCURACY} = {'diff': [0.00011745799999999737, 0.00011783300000000121, 0.0001175699999999974, 0.00011770799999999762, 0.00011751399999999912, 0.00011798600000000048, 0.00011786100000000035, 0.00011781999999999765,...</msg>
<status status="PASS" starttime="20201112 12:26:53.303" endtime="20201112 12:26:53.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.320" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.319" endtime="20201112 12:26:53.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.324" level="INFO">VALUE: [0.00011745799999999737, 0.00011783300000000121, 0.0001175699999999974, 0.00011770799999999762, 0.00011751399999999912, 0.00011798600000000048, 0.00011786100000000035, 0.00011781999999999765, 0.00011722200000000016, 0.00011765300000000228, 0.00011818000000000245, 0.00011788900000000296, 0.00011800000000000005, 0.00011765300000000228, 0.00011813899999999974, 0.00011727799999999844, 0.00011755500000000182, 0.00011733300000000071, 0.00011784800000000026, 0.00011781999999999765, 0.00011740200000000256, 0.00011745799999999737, 0.00011788900000000296, 0.0001175690000000014, 0.00011790199999999959, 0.00011815299999999931, 0.00011766699999999838, 0.00011758400000000044, 0.00011727800000000191, 0.00011795800000000134, 0.00011794500000000124, 0.00011716600000000188, 0.00011754200000000173, 0.0001174170000000016, 0.00011744400000000127, 0.00011802799999999919, 0.00011783299999999775, 0.00011765299999999881, 0.00011737499999999942, 0.00011776399999999937, 0.00011770799999999762, 0.00011759800000000001, 0.00011790300000000253, 0.00011804199999999876, 0.00011740199999999909, 0.00011740299999999856, 0.00011747200000000041, 0.0001180690000000019, 0.00011723599999999973, 0.00011722299999999963]</msg>
<status status="PASS" starttime="20201112 12:26:53.322" endtime="20201112 12:26:53.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.316" endtime="20201112 12:26:53.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.334" endtime="20201112 12:26:53.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.338" endtime="20201112 12:26:53.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.336" endtime="20201112 12:26:53.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.333" endtime="20201112 12:26:53.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.955" endtime="20201112 12:26:53.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.955" endtime="20201112 12:26:53.359"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.368" endtime="20201112 12:26:53.388"></status>
</kw>
<msg timestamp="20201112 12:26:53.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.366" endtime="20201112 12:26:53.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.390" endtime="20201112 12:26:53.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.392" endtime="20201112 12:26:53.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.364" endtime="20201112 12:26:53.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.361" endtime="20201112 12:26:53.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.401" endtime="20201112 12:26:53.688"></status>
</kw>
<msg timestamp="20201112 12:26:53.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.400" endtime="20201112 12:26:53.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.693" endtime="20201112 12:26:53.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.701" endtime="20201112 12:26:53.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.397" endtime="20201112 12:26:53.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.395" endtime="20201112 12:26:53.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.708" level="INFO">${RESULT} = [{'time': 0.021854875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011870799999999862, 'source_diff': 0.00011870799999999862}, {'time': 0.022023181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:53.704" endtime="20201112 12:26:53.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.721" level="INFO">${ACCURACY} = {'diff': [0.00011870799999999862, 0.00011834800000000076, 0.00011876400000000037, 0.00011850000000000055, 0.00011873600000000123, 0.00011834699999999782, 0.00011826399999999987, 0.00011886099999999789...</msg>
<status status="PASS" starttime="20201112 12:26:53.709" endtime="20201112 12:26:53.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.725" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.724" endtime="20201112 12:26:53.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.728" level="INFO">VALUE: [0.00011870799999999862, 0.00011834800000000076, 0.00011876400000000037, 0.00011850000000000055, 0.00011873600000000123, 0.00011834699999999782, 0.00011826399999999987, 0.00011886099999999789, 0.00011822200000000116, 0.00011877799999999994, 0.00011829200000000248, 0.00011916699999999988, 0.00011883400000000169, 0.0001186110000000011, 0.00011887500000000092, 0.00011858300000000196, 0.00011866699999999938, 0.00011836100000000085, 0.00011902800000000019, 0.000119082999999999, 0.00011897199999999844, 0.00011834699999999782, 0.00011890300000000006, 0.0001185699999999984, 0.00011884800000000126, 0.00011892999999999973, 0.00011854199999999926, 0.00011870900000000156, 0.00011890300000000006, 0.00011915300000000031, 0.00011873600000000123, 0.00011858400000000144, 0.00011859700000000153, 0.00011877700000000047, 0.00011909699999999857, 0.00011866699999999938, 0.00011872300000000113, 0.00011830500000000257, 0.00011834800000000076, 0.00011886099999999789, 0.0001189309999999992, 0.000118389, 0.00011826399999999987, 0.00011833299999999825, 0.00011898599999999801, 0.00011844500000000174, 0.00011827799999999944, 0.00011848600000000098, 0.00011845899999999784, 0.00011884799999999779]</msg>
<status status="PASS" starttime="20201112 12:26:53.726" endtime="20201112 12:26:53.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.722" endtime="20201112 12:26:53.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.732" endtime="20201112 12:26:53.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.735" endtime="20201112 12:26:53.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.733" endtime="20201112 12:26:53.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.730" endtime="20201112 12:26:53.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.360" endtime="20201112 12:26:53.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.359" endtime="20201112 12:26:53.756"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.765" endtime="20201112 12:26:53.785"></status>
</kw>
<msg timestamp="20201112 12:26:53.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.763" endtime="20201112 12:26:53.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.787" endtime="20201112 12:26:53.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.789" endtime="20201112 12:26:53.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.760" endtime="20201112 12:26:53.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.758" endtime="20201112 12:26:53.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.798" endtime="20201112 12:26:54.086"></status>
</kw>
<msg timestamp="20201112 12:26:54.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.797" endtime="20201112 12:26:54.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.090" endtime="20201112 12:26:54.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.098" endtime="20201112 12:26:54.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.794" endtime="20201112 12:26:54.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.792" endtime="20201112 12:26:54.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.105" level="INFO">${RESULT} = [{'time': 0.021711278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011995899999999934, 'source_diff': 0.00011995899999999934}, {'time': 0.021878639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:54.102" endtime="20201112 12:26:54.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.118" level="INFO">${ACCURACY} = {'diff': [0.00011995899999999934, 0.00012022199999999969, 0.00012004200000000076, 0.00012016700000000088, 0.00011990300000000106, 0.00012006899999999696, 0.00011984699999999932, 0.00012008400000000294...</msg>
<status status="PASS" starttime="20201112 12:26:54.106" endtime="20201112 12:26:54.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.123" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.122" endtime="20201112 12:26:54.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.125" level="INFO">VALUE: [0.00011995899999999934, 0.00012022199999999969, 0.00012004200000000076, 0.00012016700000000088, 0.00011990300000000106, 0.00012006899999999696, 0.00011984699999999932, 0.00012008400000000294, 0.00011990200000000159, 0.00011945799999999937, 0.00011995899999999934, 0.00011937500000000142, 0.0001199029999999976, 0.0001197500000000018, 0.00011922200000000216, 0.00011983299999999975, 0.0001197089999999991, 0.00011972199999999919, 0.00011972199999999919, 0.00011986099999999889, 0.0001198890000000015, 0.00011977800000000094, 0.00011993000000000073, 0.0001199310000000002, 0.00011926400000000087, 0.00012016700000000088, 0.00012002800000000119, 0.00011997199999999944, 0.00011923599999999826, 0.00012001399999999815, 0.00011991700000000063, 0.00012004199999999729, 0.00011955499999999689, 0.00011948600000000198, 0.00012004199999999729, 0.00012011099999999914, 0.00011927700000000097, 0.00011997199999999944, 0.00012016599999999794, 0.00011968099999999995, 0.0001194309999999997, 0.00011947200000000241, 0.00011990200000000159, 0.00011934699999999882, 0.0001194439999999998, 0.00011999999999999858, 0.00011990200000000159, 0.0001197630000000019, 0.00011983299999999975, 0.00011936100000000185]</msg>
<status status="PASS" starttime="20201112 12:26:54.124" endtime="20201112 12:26:54.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.119" endtime="20201112 12:26:54.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.129" endtime="20201112 12:26:54.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.132" endtime="20201112 12:26:54.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.131" endtime="20201112 12:26:54.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.127" endtime="20201112 12:26:54.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.757" endtime="20201112 12:26:54.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.756" endtime="20201112 12:26:54.153"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.162" endtime="20201112 12:26:54.182"></status>
</kw>
<msg timestamp="20201112 12:26:54.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.160" endtime="20201112 12:26:54.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.184" endtime="20201112 12:26:54.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.186" endtime="20201112 12:26:54.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.158" endtime="20201112 12:26:54.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.156" endtime="20201112 12:26:54.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.195" endtime="20201112 12:26:54.484"></status>
</kw>
<msg timestamp="20201112 12:26:54.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.194" endtime="20201112 12:26:54.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.488" endtime="20201112 12:26:54.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.496" endtime="20201112 12:26:54.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.191" endtime="20201112 12:26:54.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.190" endtime="20201112 12:26:54.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.502" level="INFO">${RESULT} = [{'time': 0.021663403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012047199999999994, 'source_diff': 0.00012047199999999994}, {'time': 0.021836694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:54.499" endtime="20201112 12:26:54.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.515" level="INFO">${ACCURACY} = {'diff': [0.00012047199999999994, 0.00012052699999999875, 0.00012091599999999869, 0.00012022199999999969, 0.00012086099999999989, 0.00012059700000000007, 0.00012040300000000156, 0.00012091700000000163...</msg>
<status status="PASS" starttime="20201112 12:26:54.503" endtime="20201112 12:26:54.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.520" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.519" endtime="20201112 12:26:54.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.522" level="INFO">VALUE: [0.00012047199999999994, 0.00012052699999999875, 0.00012091599999999869, 0.00012022199999999969, 0.00012086099999999989, 0.00012059700000000007, 0.00012040300000000156, 0.00012091700000000163, 0.00012091700000000163, 0.00012123600000000026, 0.0001209579999999974, 0.00012023599999999926, 0.00012074999999999933, 0.00012095800000000087, 0.00012065299999999834, 0.00012084700000000032, 0.00012049999999999908, 0.0001205700000000004, 0.00012038899999999852, 0.00012022199999999969, 0.00012082000000000065, 0.00012068100000000095, 0.00012052800000000169, 0.00012080499999999814, 0.00012072200000000019, 0.00012056900000000093, 0.00012102800000000219, 0.00012032000000000015, 0.00012123600000000026, 0.0001204310000000007, 0.00012105600000000133, 0.00012052699999999875, 0.00012054100000000179, 0.00012097199999999697, 0.00012066700000000138, 0.00012041700000000113, 0.00012077799999999847, 0.00012065300000000181, 0.00012115299999999884, 0.0001204029999999981, 0.00012058299999999703, 0.00012059700000000007, 0.00012091699999999816, 0.00012029200000000101, 0.00012048599999999951, 0.00012034699999999982, 0.00012072199999999672, 0.00012061099999999964, 0.0001206110000000031, 0.00012084700000000032]</msg>
<status status="PASS" starttime="20201112 12:26:54.521" endtime="20201112 12:26:54.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.516" endtime="20201112 12:26:54.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.526" endtime="20201112 12:26:54.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.530" endtime="20201112 12:26:54.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.528" endtime="20201112 12:26:54.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.524" endtime="20201112 12:26:54.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.154" endtime="20201112 12:26:54.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.154" endtime="20201112 12:26:54.550"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.559" endtime="20201112 12:26:54.580"></status>
</kw>
<msg timestamp="20201112 12:26:54.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.558" endtime="20201112 12:26:54.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.581" endtime="20201112 12:26:54.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.584" endtime="20201112 12:26:54.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.555" endtime="20201112 12:26:54.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.553" endtime="20201112 12:26:54.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.593" endtime="20201112 12:26:54.880"></status>
</kw>
<msg timestamp="20201112 12:26:54.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.591" endtime="20201112 12:26:54.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.884" endtime="20201112 12:26:54.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.892" endtime="20201112 12:26:54.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.589" endtime="20201112 12:26:54.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.587" endtime="20201112 12:26:54.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.899" level="INFO">${RESULT} = [{'time': 0.021702361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012208299999999853, 'source_diff': 0.00012208299999999853}, {'time': 0.021878597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:54.895" endtime="20201112 12:26:54.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.912" level="INFO">${ACCURACY} = {'diff': [0.00012208299999999853, 0.0001213189999999982, 0.0001216250000000002, 0.00012119500000000102, 0.00012173600000000076, 0.00012141599999999919, 0.00012177799999999947, 0.00012120800000000112, ...</msg>
<status status="PASS" starttime="20201112 12:26:54.900" endtime="20201112 12:26:54.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.916" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.915" endtime="20201112 12:26:54.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.919" level="INFO">VALUE: [0.00012208299999999853, 0.0001213189999999982, 0.0001216250000000002, 0.00012119500000000102, 0.00012173600000000076, 0.00012141599999999919, 0.00012177799999999947, 0.00012120800000000112, 0.00012181999999999818, 0.0001214029999999991, 0.00012127800000000244, 0.00012165299999999934, 0.00012197200000000144, 0.00012147200000000094, 0.00012179100000000304, 0.0001219579999999984, 0.00012190200000000012, 0.00012165299999999934, 0.0001212639999999994, 0.0001212090000000006, 0.00012145900000000084, 0.00012179100000000304, 0.0001217639999999999, 0.00012174999999999686, 0.00012119500000000102, 0.00012170800000000162, 0.00012168100000000195, 0.00012119399999999808, 0.00012165299999999934, 0.00012144399999999833, 0.00012177799999999947, 0.0001219029999999996, 0.00012188900000000003, 0.0001214029999999991, 0.00012141599999999919, 0.00012168099999999848, 0.00012169399999999858, 0.00012170800000000162, 0.0001214440000000018, 0.00012177799999999947, 0.00012188900000000003, 0.00012201300000000068, 0.00012173600000000076, 0.00012180599999999861, 0.00012177799999999947, 0.00012131900000000168, 0.00012197199999999797, 0.0001218189999999987, 0.00012120800000000112, 0.0001219029999999996]</msg>
<status status="PASS" starttime="20201112 12:26:54.917" endtime="20201112 12:26:54.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.913" endtime="20201112 12:26:54.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.922" endtime="20201112 12:26:54.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.926" endtime="20201112 12:26:54.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.924" endtime="20201112 12:26:54.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.921" endtime="20201112 12:26:54.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.551" endtime="20201112 12:26:54.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.551" endtime="20201112 12:26:54.947"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.955" endtime="20201112 12:26:54.976"></status>
</kw>
<msg timestamp="20201112 12:26:54.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.954" endtime="20201112 12:26:54.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.978" endtime="20201112 12:26:54.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.980" endtime="20201112 12:26:54.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.951" endtime="20201112 12:26:54.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.949" endtime="20201112 12:26:54.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.989" endtime="20201112 12:26:55.276"></status>
</kw>
<msg timestamp="20201112 12:26:55.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.988" endtime="20201112 12:26:55.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.280" endtime="20201112 12:26:55.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.288" endtime="20201112 12:26:55.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.985" endtime="20201112 12:26:55.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.983" endtime="20201112 12:26:55.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.295" level="INFO">${RESULT} = [{'time': 0.021796819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012290199999999765, 'source_diff': 0.00012290199999999765}, {'time': 0.021973139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:55.291" endtime="20201112 12:26:55.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.308" level="INFO">${ACCURACY} = {'diff': [0.00012290199999999765, 0.00012251400000000065, 0.00012251400000000065, 0.00012245800000000237, 0.00012251400000000065, 0.00012284699999999885, 0.00012238899999999706, 0.00012250000000000108...</msg>
<status status="PASS" starttime="20201112 12:26:55.296" endtime="20201112 12:26:55.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.312" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.311" endtime="20201112 12:26:55.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.315" level="INFO">VALUE: [0.00012290199999999765, 0.00012251400000000065, 0.00012251400000000065, 0.00012245800000000237, 0.00012251400000000065, 0.00012284699999999885, 0.00012238899999999706, 0.00012250000000000108, 0.00012225000000000083, 0.00012258299999999903, 0.00012304099999999735, 0.0001229030000000006, 0.00012250000000000108, 0.00012269399999999958, 0.00012233299999999878, 0.0001228189999999997, 0.00012223600000000126, 0.00012261100000000164, 0.00012298599999999854, 0.00012247199999999847, 0.0001224449999999988, 0.0001229579999999994, 0.00012273600000000176, 0.00012265200000000087, 0.00012225000000000083, 0.0001230420000000003, 0.00012315299999999738, 0.0001222770000000005, 0.0001224030000000001, 0.00012283299999999928, 0.0001224579999999989, 0.00012291700000000017, 0.00012252800000000022, 0.0001229449999999993, 0.00012290299999999713, 0.00012245900000000184, 0.00012251400000000065, 0.000122986000000002, 0.00012302700000000125, 0.00012300000000000158, 0.00012252699999999728, 0.00012227799999999997, 0.00012272199999999872, 0.00012233300000000225, 0.0001222770000000005, 0.00012237500000000096, 0.00012272199999999872, 0.00012258299999999903, 0.00012284700000000232, 0.0001230420000000003]</msg>
<status status="PASS" starttime="20201112 12:26:55.313" endtime="20201112 12:26:55.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.309" endtime="20201112 12:26:55.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.318" endtime="20201112 12:26:55.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.322" endtime="20201112 12:26:55.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.320" endtime="20201112 12:26:55.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.317" endtime="20201112 12:26:55.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.948" endtime="20201112 12:26:55.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.947" endtime="20201112 12:26:55.343"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.351" endtime="20201112 12:26:55.372"></status>
</kw>
<msg timestamp="20201112 12:26:55.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.350" endtime="20201112 12:26:55.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.373" endtime="20201112 12:26:55.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.376" endtime="20201112 12:26:55.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.347" endtime="20201112 12:26:55.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.345" endtime="20201112 12:26:55.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.385" endtime="20201112 12:26:55.674"></status>
</kw>
<msg timestamp="20201112 12:26:55.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02156375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02168725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:55.384" endtime="20201112 12:26:55.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02156375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02168725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:55.678" endtime="20201112 12:26:55.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.686" endtime="20201112 12:26:55.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.381" endtime="20201112 12:26:55.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.379" endtime="20201112 12:26:55.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.693" level="INFO">${RESULT} = [{'time': 0.02168725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012350000000000208, 'source_diff': 0.00012350000000000208}, {'time': 0.021868472, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:55.690" endtime="20201112 12:26:55.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.706" level="INFO">${ACCURACY} = {'diff': [0.00012350000000000208, 0.00012401399999999868, 0.0001234999999999986, 0.00012388900000000203, 0.0001232640000000014, 0.00012386099999999942, 0.0001239299999999978, 0.00012405600000000086, 0...</msg>
<status status="PASS" starttime="20201112 12:26:55.694" endtime="20201112 12:26:55.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.711" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.710" endtime="20201112 12:26:55.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.714" level="INFO">VALUE: [0.00012350000000000208, 0.00012401399999999868, 0.0001234999999999986, 0.00012388900000000203, 0.0001232640000000014, 0.00012386099999999942, 0.0001239299999999978, 0.00012405600000000086, 0.00012366699999999745, 0.00012318099999999998, 0.00012345899999999937, 0.00012394399999999736, 0.00012380499999999767, 0.0001235129999999987, 0.00012344500000000327, 0.00012388799999999908, 0.0001232640000000014, 0.00012369500000000005, 0.00012343100000000023, 0.00012393099999999727, 0.00012369500000000005, 0.00012356900000000046, 0.0001232640000000014, 0.00012381899999999724, 0.0001233190000000002, 0.0001235969999999996, 0.0001238060000000006, 0.00012397199999999997, 0.00012348599999999904, 0.00012326399999999793, 0.000124084, 0.00012388899999999856, 0.00012390199999999865, 0.0001233190000000002, 0.00012333299999999978, 0.00012320800000000312, 0.00012372199999999972, 0.00012380500000000114, 0.00012376399999999843, 0.00012387499999999899, 0.00012336200000000186, 0.00012370899999999962, 0.0001233190000000002, 0.00012358300000000003, 0.00012390200000000212, 0.00012390199999999865, 0.00012387499999999899, 0.00012338900000000153, 0.00012361199999999864, 0.0001239999999999991]</msg>
<status status="PASS" starttime="20201112 12:26:55.712" endtime="20201112 12:26:55.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.707" endtime="20201112 12:26:55.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.718" endtime="20201112 12:26:55.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.722" endtime="20201112 12:26:55.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.720" endtime="20201112 12:26:55.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.716" endtime="20201112 12:26:55.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.343" endtime="20201112 12:26:55.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.343" endtime="20201112 12:26:55.743"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.751" endtime="20201112 12:26:55.772"></status>
</kw>
<msg timestamp="20201112 12:26:55.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.750" endtime="20201112 12:26:55.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.773" endtime="20201112 12:26:55.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.776" endtime="20201112 12:26:55.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.747" endtime="20201112 12:26:55.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.745" endtime="20201112 12:26:55.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.785" endtime="20201112 12:26:56.072"></status>
</kw>
<msg timestamp="20201112 12:26:56.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:55.784" endtime="20201112 12:26:56.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:56.076" endtime="20201112 12:26:56.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.084" endtime="20201112 12:26:56.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.781" endtime="20201112 12:26:56.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.779" endtime="20201112 12:26:56.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.091" level="INFO">${RESULT} = [{'time': 0.02180725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012516699999999895, 'source_diff': 0.00012516699999999895}, {'time': 0.021994514, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:56.088" endtime="20201112 12:26:56.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.104" level="INFO">${ACCURACY} = {'diff': [0.00012516699999999895, 0.00012483300000000128, 0.0001241939999999976, 0.00012505499999999892, 0.00012430499999999817, 0.0001249169999999987, 0.00012512499999999677, 0.00012472200000000072, ...</msg>
<status status="PASS" starttime="20201112 12:26:56.092" endtime="20201112 12:26:56.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.109" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.108" endtime="20201112 12:26:56.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.111" level="INFO">VALUE: [0.00012516699999999895, 0.00012483300000000128, 0.0001241939999999976, 0.00012505499999999892, 0.00012430499999999817, 0.0001249169999999987, 0.00012512499999999677, 0.00012472200000000072, 0.00012426399999999893, 0.00012438899999999906, 0.00012461100000000017, 0.00012488800000000008, 0.00012480499999999867, 0.00012473699999999976, 0.0001243060000000011, 0.00012473699999999976, 0.00012441700000000167, 0.00012491700000000217, 0.00012457000000000093, 0.00012459800000000007, 0.00012416700000000142, 0.00012488899999999956, 0.00012486100000000042, 0.00012437499999999949, 0.00012451399999999918, 0.00012418099999999752, 0.00012476299999999996, 0.00012462499999999974, 0.00012462499999999974, 0.00012501399999999968, 0.00012448600000000004, 0.00012474999999999986, 0.00012462499999999974, 0.00012438899999999906, 0.00012432000000000068, 0.00012469499999999759, 0.00012506900000000196, 0.00012469499999999759, 0.0001249719999999975, 0.0001242640000000024, 0.0001249299999999988, 0.00012480499999999867, 0.00012493100000000174, 0.00012424999999999936, 0.0001251389999999998, 0.0001243199999999972, 0.0001245970000000006, 0.0001248199999999977, 0.00012434700000000035, 0.00012448699999999951]</msg>
<status status="PASS" starttime="20201112 12:26:56.110" endtime="20201112 12:26:56.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.105" endtime="20201112 12:26:56.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.115" endtime="20201112 12:26:56.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.118" endtime="20201112 12:26:56.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.117" endtime="20201112 12:26:56.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.113" endtime="20201112 12:26:56.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.744" endtime="20201112 12:26:56.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.743" endtime="20201112 12:26:56.139"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.148" endtime="20201112 12:26:56.168"></status>
</kw>
<msg timestamp="20201112 12:26:56.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.146" endtime="20201112 12:26:56.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.170" endtime="20201112 12:26:56.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.172" endtime="20201112 12:26:56.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.144" endtime="20201112 12:26:56.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.142" endtime="20201112 12:26:56.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.182" endtime="20201112 12:26:56.468"></status>
</kw>
<msg timestamp="20201112 12:26:56.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.180" endtime="20201112 12:26:56.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.473" endtime="20201112 12:26:56.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.481" endtime="20201112 12:26:56.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.177" endtime="20201112 12:26:56.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.176" endtime="20201112 12:26:56.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.488" level="INFO">${RESULT} = [{'time': 0.021706625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001262360000000018, 'source_diff': 0.0001262360000000018}, {'time': 0.021885889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.484" endtime="20201112 12:26:56.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.501" level="INFO">${ACCURACY} = {'diff': [0.0001262360000000018, 0.0001258889999999971, 0.00012579200000000304, 0.00012588900000000056, 0.00012565299999999988, 0.00012569499999999859, 0.00012584700000000185, 0.00012615300000000038, ...</msg>
<status status="PASS" starttime="20201112 12:26:56.489" endtime="20201112 12:26:56.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.505" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.504" endtime="20201112 12:26:56.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.508" level="INFO">VALUE: [0.0001262360000000018, 0.0001258889999999971, 0.00012579200000000304, 0.00012588900000000056, 0.00012565299999999988, 0.00012569499999999859, 0.00012584700000000185, 0.00012615300000000038, 0.0001257910000000001, 0.0001253329999999983, 0.00012520800000000165, 0.00012615300000000038, 0.00012593100000000274, 0.00012601400000000068, 0.00012540200000000015, 0.0001261390000000008, 0.00012520799999999818, 0.00012612499999999777, 0.00012584699999999838, 0.00012523599999999732, 0.0001253329999999983, 0.0001257360000000013, 0.00012525000000000036, 0.0001260559999999994, 0.0001258060000000026, 0.00012534700000000135, 0.00012583399999999828, 0.00012576400000000043, 0.00012573599999999782, 0.00012565299999999988, 0.00012556900000000246, 0.0001256390000000003, 0.00012520900000000112, 0.0001256390000000003, 0.00012576400000000043, 0.00012615300000000038, 0.0001257910000000001, 0.00012552799999999975, 0.00012570800000000215, 0.00012554199999999932, 0.0001257910000000001, 0.00012602700000000078, 0.00012590200000000065, 0.00012588900000000056, 0.0001256109999999977, 0.00012548700000000051, 0.00012588900000000056, 0.00012534699999999788, 0.0001251800000000025, 0.00012612499999999777]</msg>
<status status="PASS" starttime="20201112 12:26:56.506" endtime="20201112 12:26:56.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.501" endtime="20201112 12:26:56.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.511" endtime="20201112 12:26:56.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.515" endtime="20201112 12:26:56.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.513" endtime="20201112 12:26:56.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.509" endtime="20201112 12:26:56.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.140" endtime="20201112 12:26:56.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.139" endtime="20201112 12:26:56.536"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.544" endtime="20201112 12:26:56.565"></status>
</kw>
<msg timestamp="20201112 12:26:56.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.543" endtime="20201112 12:26:56.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.566" endtime="20201112 12:26:56.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.569" endtime="20201112 12:26:56.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.540" endtime="20201112 12:26:56.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.538" endtime="20201112 12:26:56.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.578" endtime="20201112 12:26:56.865"></status>
</kw>
<msg timestamp="20201112 12:26:56.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.576" endtime="20201112 12:26:56.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.869" endtime="20201112 12:26:56.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.877" endtime="20201112 12:26:56.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.574" endtime="20201112 12:26:56.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.572" endtime="20201112 12:26:56.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.884" level="INFO">${RESULT} = [{'time': 0.021646292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000126778000000001, 'source_diff': 0.000126778000000001}, {'time': 0.021832514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:56.880" endtime="20201112 12:26:56.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.897" level="INFO">${ACCURACY} = {'diff': [0.000126778000000001, 0.00012662500000000174, 0.00012627700000000103, 0.00012616699999999995, 0.0001267360000000023, 0.0001261529999999969, 0.00012636100000000192, 0.00012641599999999725, 0....</msg>
<status status="PASS" starttime="20201112 12:26:56.885" endtime="20201112 12:26:56.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.901" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.900" endtime="20201112 12:26:56.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.904" level="INFO">VALUE: [0.000126778000000001, 0.00012662500000000174, 0.00012627700000000103, 0.00012616699999999995, 0.0001267360000000023, 0.0001261529999999969, 0.00012636100000000192, 0.00012641599999999725, 0.0001269170000000007, 0.0001265559999999999, 0.000126778000000001, 0.00012648599999999857, 0.00012662500000000174, 0.0001266109999999987, 0.00012693100000000027, 0.00012648599999999857, 0.00012698599999999907, 0.00012647200000000247, 0.00012618000000000004, 0.00012641600000000072, 0.0001263329999999993, 0.0001269170000000007, 0.0001270139999999982, 0.00012618099999999952, 0.00012630599999999964, 0.00012620899999999866, 0.00012620900000000213, 0.0001271109999999992, 0.00012659699999999913, 0.00012698600000000254, 0.00012619499999999909, 0.00012684699999999938, 0.0001266940000000001, 0.0001261939999999996, 0.00012631899999999974, 0.00012648599999999857, 0.0001270560000000004, 0.0001261390000000008, 0.0001268889999999981, 0.00012648599999999857, 0.00012666700000000045, 0.0001268329999999998, 0.00012634699999999888, 0.0001265840000000025, 0.00012663899999999784, 0.00012695799999999993, 0.0001266109999999987, 0.0001267919999999971, 0.00012647200000000247, 0.00012640300000000063]</msg>
<status status="PASS" starttime="20201112 12:26:56.902" endtime="20201112 12:26:56.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.898" endtime="20201112 12:26:56.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.907" endtime="20201112 12:26:56.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.911" endtime="20201112 12:26:56.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.909" endtime="20201112 12:26:56.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.906" endtime="20201112 12:26:56.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.536" endtime="20201112 12:26:56.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.536" endtime="20201112 12:26:56.932"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.940" endtime="20201112 12:26:56.961"></status>
</kw>
<msg timestamp="20201112 12:26:56.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.939" endtime="20201112 12:26:56.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.963" endtime="20201112 12:26:56.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.965" endtime="20201112 12:26:56.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.936" endtime="20201112 12:26:56.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.934" endtime="20201112 12:26:56.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.974" endtime="20201112 12:26:57.262"></status>
</kw>
<msg timestamp="20201112 12:26:57.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.973" endtime="20201112 12:26:57.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.266" endtime="20201112 12:26:57.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.274" endtime="20201112 12:26:57.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.970" endtime="20201112 12:26:57.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.968" endtime="20201112 12:26:57.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.281" level="INFO">${RESULT} = [{'time': 0.021810375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012736099999999945, 'source_diff': 0.00012736099999999945}, {'time': 0.021983653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:57.277" endtime="20201112 12:26:57.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.294" level="INFO">${ACCURACY} = {'diff': [0.00012736099999999945, 0.0001277499999999994, 0.00012744500000000034, 0.00012731900000000074, 0.000127472, 0.00012770800000000068, 0.00012804100000000235, 0.0001278200000000007, 0.000127319...</msg>
<status status="PASS" starttime="20201112 12:26:57.282" endtime="20201112 12:26:57.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.298" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.297" endtime="20201112 12:26:57.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.301" level="INFO">VALUE: [0.00012736099999999945, 0.0001277499999999994, 0.00012744500000000034, 0.00012731900000000074, 0.000127472, 0.00012770800000000068, 0.00012804100000000235, 0.0001278200000000007, 0.00012731999999999674, 0.00012737499999999902, 0.00012719500000000009, 0.000127569000000001, 0.00012740300000000163, 0.00012802700000000278, 0.00012788900000000256, 0.00012809700000000063, 0.00012769500000000059, 0.00012736099999999945, 0.00012812499999999977, 0.0001275829999999971, 0.00012751299999999924, 0.00012768000000000154, 0.00012718000000000104, 0.00012773599999999982, 0.00012812499999999977, 0.00012768099999999755, 0.00012737499999999902, 0.0001275139999999987, 0.0001277919999999981, 0.0001271940000000006, 0.0001276940000000011, 0.00012759700000000013, 0.00012755500000000142, 0.00012737500000000249, 0.0001279439999999979, 0.00012754200000000132, 0.00012763899999999884, 0.0001280690000000015, 0.00012726400000000193, 0.0001275139999999987, 0.00012795899999999694, 0.0001280560000000014, 0.00012754200000000132, 0.00012740299999999816, 0.0001274589999999999, 0.00012779200000000157, 0.00012715300000000138, 0.00012798600000000007, 0.00012731900000000074, 0.00012762499999999927]</msg>
<status status="PASS" starttime="20201112 12:26:57.299" endtime="20201112 12:26:57.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.295" endtime="20201112 12:26:57.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.304" endtime="20201112 12:26:57.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.308" endtime="20201112 12:26:57.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.306" endtime="20201112 12:26:57.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.303" endtime="20201112 12:26:57.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.933" endtime="20201112 12:26:57.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.932" endtime="20201112 12:26:57.329"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.338" endtime="20201112 12:26:57.358"></status>
</kw>
<msg timestamp="20201112 12:26:57.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.336" endtime="20201112 12:26:57.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.360" endtime="20201112 12:26:57.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.362" endtime="20201112 12:26:57.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.333" endtime="20201112 12:26:57.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.331" endtime="20201112 12:26:57.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.371" endtime="20201112 12:26:57.658"></status>
</kw>
<msg timestamp="20201112 12:26:57.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:57.370" endtime="20201112 12:26:57.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:57.662" endtime="20201112 12:26:57.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.671" endtime="20201112 12:26:57.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.367" endtime="20201112 12:26:57.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.366" endtime="20201112 12:26:57.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.677" level="INFO">${RESULT} = [{'time': 0.021906472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000128472000000001, 'source_diff': 0.000128472000000001}, {'time': 0.022095681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:57.674" endtime="20201112 12:26:57.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.691" level="INFO">${ACCURACY} = {'diff': [0.000128472000000001, 0.00012854199999999885, 0.00012845899999999744, 0.0001288469999999979, 0.00012859700000000113, 0.00012836100000000045, 0.00012887500000000052, 0.0001287500000000004, 0....</msg>
<status status="PASS" starttime="20201112 12:26:57.678" endtime="20201112 12:26:57.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.695" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.694" endtime="20201112 12:26:57.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.698" level="INFO">VALUE: [0.000128472000000001, 0.00012854199999999885, 0.00012845899999999744, 0.0001288469999999979, 0.00012859700000000113, 0.00012836100000000045, 0.00012887500000000052, 0.0001287500000000004, 0.0001288339999999978, 0.00012837500000000002, 0.0001282499999999999, 0.00012913900000000034, 0.00012876399999999996, 0.00012894400000000236, 0.0001285560000000019, 0.00012861200000000017, 0.0001290140000000002, 0.00012895799999999846, 0.00012869399999999864, 0.00012906899999999902, 0.00012906899999999902, 0.00012830500000000217, 0.00012852799999999928, 0.00012843100000000177, 0.0001289309999999988, 0.00012898600000000107, 0.00012827799999999903, 0.0001284590000000009, 0.00012845899999999744, 0.00012845799999999796, 0.0001288200000000017, 0.00012823600000000032, 0.00012898600000000107, 0.00012847199999999753, 0.000128472000000001, 0.00012877700000000006, 0.00012872200000000125, 0.00012873600000000082, 0.00012898600000000107, 0.00012872200000000125, 0.00012841699999999873, 0.0001286940000000021, 0.00012886100000000095, 0.00012840299999999916, 0.0001286940000000021, 0.0001285139999999997, 0.00012848600000000057, 0.0001282369999999998, 0.00012891699999999923, 0.0001285560000000019]</msg>
<status status="PASS" starttime="20201112 12:26:57.696" endtime="20201112 12:26:57.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.691" endtime="20201112 12:26:57.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.701" endtime="20201112 12:26:57.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.705" endtime="20201112 12:26:57.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.703" endtime="20201112 12:26:57.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.699" endtime="20201112 12:26:57.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.330" endtime="20201112 12:26:57.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.329" endtime="20201112 12:26:57.725"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.734" endtime="20201112 12:26:57.755"></status>
</kw>
<msg timestamp="20201112 12:26:57.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.733" endtime="20201112 12:26:57.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.757" endtime="20201112 12:26:57.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.759" endtime="20201112 12:26:57.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.730" endtime="20201112 12:26:57.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.728" endtime="20201112 12:26:57.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.768" endtime="20201112 12:26:58.055"></status>
</kw>
<msg timestamp="20201112 12:26:58.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02178025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:57.767" endtime="20201112 12:26:58.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02178025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:58.060" endtime="20201112 12:26:58.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.068" endtime="20201112 12:26:58.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.764" endtime="20201112 12:26:58.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.763" endtime="20201112 12:26:58.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.074" level="INFO">${RESULT} = [{'time': 0.021910278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001300279999999973, 'source_diff': 0.0001300279999999973}, {'time': 0.022102444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.071" endtime="20201112 12:26:58.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.088" level="INFO">${ACCURACY} = {'diff': [0.0001300279999999973, 0.00012931899999999927, 0.00013004100000000088, 0.00012966699999999998, 0.00012912500000000077, 0.00012919399999999914, 0.00012991700000000023, 0.0001301379999999984, ...</msg>
<status status="PASS" starttime="20201112 12:26:58.075" endtime="20201112 12:26:58.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.092" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.091" endtime="20201112 12:26:58.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.094" level="INFO">VALUE: [0.0001300279999999973, 0.00012931899999999927, 0.00013004100000000088, 0.00012966699999999998, 0.00012912500000000077, 0.00012919399999999914, 0.00012991700000000023, 0.0001301379999999984, 0.00012944499999999887, 0.00012976400000000096, 0.00013000000000000164, 0.00012973699999999783, 0.00012955599999999942, 0.00012950000000000114, 0.00012955499999999995, 0.00012916699999999948, 0.0001297920000000001, 0.00012972200000000225, 0.0001296660000000005, 0.0001293890000000006, 0.00012930599999999917, 0.00012972199999999878, 0.00012952800000000028, 0.00013011099999999873, 0.00012961099999999823, 0.00012968000000000007, 0.00012972199999999878, 0.0001297920000000001, 0.00012916699999999948, 0.0001299729999999985, 0.00013004200000000035, 0.00012918099999999905, 0.000129472000000002, 0.0001292919999999996, 0.00012981899999999977, 0.00012937500000000102, 0.00012938799999999764, 0.00013015200000000143, 0.00012934700000000188, 0.0001296110000000017, 0.000129569999999999, 0.0001295560000000029, 0.00012987499999999805, 0.00012979099999999716, 0.0001297920000000001, 0.00012973600000000182, 0.0001299859999999986, 0.00012990300000000066, 0.00012979199999999663, 0.00012930600000000264]</msg>
<status status="PASS" starttime="20201112 12:26:58.093" endtime="20201112 12:26:58.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.088" endtime="20201112 12:26:58.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.098" endtime="20201112 12:26:58.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.102" endtime="20201112 12:26:58.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.100" endtime="20201112 12:26:58.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.096" endtime="20201112 12:26:58.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.726" endtime="20201112 12:26:58.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.726" endtime="20201112 12:26:58.122"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.131" endtime="20201112 12:26:58.152"></status>
</kw>
<msg timestamp="20201112 12:26:58.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.130" endtime="20201112 12:26:58.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.154" endtime="20201112 12:26:58.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.156" endtime="20201112 12:26:58.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.127" endtime="20201112 12:26:58.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.125" endtime="20201112 12:26:58.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.165" endtime="20201112 12:26:58.452"></status>
</kw>
<msg timestamp="20201112 12:26:58.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.164" endtime="20201112 12:26:58.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.456" endtime="20201112 12:26:58.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.464" endtime="20201112 12:26:58.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.161" endtime="20201112 12:26:58.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.159" endtime="20201112 12:26:58.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.471" level="INFO">${RESULT} = [{'time': 0.021707667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013087499999999905, 'source_diff': 0.00013087499999999905}, {'time': 0.021898806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:58.468" endtime="20201112 12:26:58.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.484" level="INFO">${ACCURACY} = {'diff': [0.00013087499999999905, 0.00013034799999999888, 0.0001304859999999991, 0.00013051299999999877, 0.00013111099999999973, 0.00013086099999999948, 0.00013118099999999758, 0.00013095899999999994,...</msg>
<status status="PASS" starttime="20201112 12:26:58.472" endtime="20201112 12:26:58.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.489" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.488" endtime="20201112 12:26:58.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.491" level="INFO">VALUE: [0.00013087499999999905, 0.00013034799999999888, 0.0001304859999999991, 0.00013051299999999877, 0.00013111099999999973, 0.00013086099999999948, 0.00013118099999999758, 0.00013095899999999994, 0.00013069400000000064, 0.00013033299999999984, 0.00013034700000000288, 0.00013058399999999956, 0.00013081900000000077, 0.00013058399999999956, 0.0001308050000000012, 0.00013045899999999944, 0.00013018100000000005, 0.00013065299999999794, 0.000130472000000003, 0.0001306660000000015, 0.00013033400000000278, 0.0001304310000000003, 0.00013073699999999883, 0.00013068100000000055, 0.0001306660000000015, 0.00013073599999999935, 0.00013018000000000057, 0.00013015299999999744, 0.00013052800000000128, 0.0001308469999999999, 0.00013077800000000153, 0.00013091699999999776, 0.00013023599999999885, 0.0001305830000000001, 0.0001305270000000018, 0.00013072199999999978, 0.00013022199999999928, 0.0001308059999999972, 0.0001304440000000004, 0.00013098699999999908, 0.00013044499999999987, 0.0001308469999999999, 0.0001301530000000009, 0.0001310140000000022, 0.00013097200000000003, 0.00013055600000000042, 0.00013036100000000245, 0.0001302500000000019, 0.0001306669999999975, 0.00013022299999999876]</msg>
<status status="PASS" starttime="20201112 12:26:58.490" endtime="20201112 12:26:58.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.485" endtime="20201112 12:26:58.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.511" endtime="20201112 12:26:58.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.514" endtime="20201112 12:26:58.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.512" endtime="20201112 12:26:58.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.509" endtime="20201112 12:26:58.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.123" endtime="20201112 12:26:58.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.123" endtime="20201112 12:26:58.535"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.544" endtime="20201112 12:26:58.565"></status>
</kw>
<msg timestamp="20201112 12:26:58.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.542" endtime="20201112 12:26:58.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.566" endtime="20201112 12:26:58.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.569" endtime="20201112 12:26:58.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.540" endtime="20201112 12:26:58.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.538" endtime="20201112 12:26:58.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.578" endtime="20201112 12:26:58.867"></status>
</kw>
<msg timestamp="20201112 12:26:58.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.576" endtime="20201112 12:26:58.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.871" endtime="20201112 12:26:58.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.879" endtime="20201112 12:26:58.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.574" endtime="20201112 12:26:58.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.572" endtime="20201112 12:26:58.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.886" level="INFO">${RESULT} = [{'time': 0.022068889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013209700000000116, 'source_diff': 0.00013209700000000116}, {'time': 0.022265069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:58.882" endtime="20201112 12:26:58.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.899" level="INFO">${ACCURACY} = {'diff': [0.00013209700000000116, 0.00013129099999999866, 0.0001318470000000009, 0.00013141700000000173, 0.00013155600000000142, 0.00013122299999999976, 0.00013165299999999894, 0.00013144500000000087,...</msg>
<status status="PASS" starttime="20201112 12:26:58.887" endtime="20201112 12:26:58.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.904" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.902" endtime="20201112 12:26:58.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.906" level="INFO">VALUE: [0.00013209700000000116, 0.00013129099999999866, 0.0001318470000000009, 0.00013141700000000173, 0.00013155600000000142, 0.00013122299999999976, 0.00013165299999999894, 0.00013144500000000087, 0.00013122200000000028, 0.00013191599999999928, 0.00013209800000000063, 0.000131166999999998, 0.00013180600000000167, 0.0001316530000000024, 0.00013159700000000066, 0.0001320969999999977, 0.00013179099999999916, 0.00013150000000000314, 0.0001319029999999992, 0.00013205600000000192, 0.00013183299999999787, 0.00013155500000000195, 0.0001318470000000009, 0.00013173600000000035, 0.0001314579999999975, 0.0001315140000000027, 0.00013181900000000177, 0.00013115299999999844, 0.0001317639999999995, 0.00013161100000000023, 0.00013202699999999984, 0.00013201399999999974, 0.0001313059999999977, 0.00013149999999999967, 0.00013191700000000223, 0.0001313470000000004, 0.00013197200000000103, 0.0001320279999999993, 0.00013136099999999998, 0.00013213899999999987, 0.0001312500000000029, 0.00013211100000000073, 0.00013123599999999985, 0.00013174999999999992, 0.00013133300000000084, 0.00013195800000000146, 0.0001316249999999998, 0.00013173600000000035, 0.00013197200000000103, 0.00013137499999999955]</msg>
<status status="PASS" starttime="20201112 12:26:58.905" endtime="20201112 12:26:58.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.900" endtime="20201112 12:26:58.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.910" endtime="20201112 12:26:58.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.913" endtime="20201112 12:26:58.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.911" endtime="20201112 12:26:58.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.908" endtime="20201112 12:26:58.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.536" endtime="20201112 12:26:58.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.535" endtime="20201112 12:26:58.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.120" endtime="20201112 12:26:58.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.939" endtime="20201112 12:26:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.937" endtime="20201112 12:26:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.936" endtime="20201112 12:26:58.959"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:19.050" endtime="20201112 12:26:58.959" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.967" endtime="20201112 12:26:58.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.966" endtime="20201112 12:26:58.987"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.002" endtime="20201112 12:26:59.014"></status>
</kw>
<msg timestamp="20201112 12:26:59.014" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.000" endtime="20201112 12:26:59.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.017" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.015" endtime="20201112 12:26:59.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.020" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:59.018" endtime="20201112 12:26:59.020"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:58.996" endtime="20201112 12:26:59.021"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:58.994" endtime="20201112 12:26:59.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.992" endtime="20201112 12:26:59.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:59.025" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:59.025" endtime="20201112 12:26:59.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.023" endtime="20201112 12:26:59.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.992" endtime="20201112 12:26:59.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.991" endtime="20201112 12:26:59.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.027" endtime="20201112 12:26:59.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.990" endtime="20201112 12:26:59.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.988" endtime="20201112 12:26:59.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.964" endtime="20201112 12:26:59.030"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.041" endtime="20201112 12:26:59.055"></status>
</kw>
<msg timestamp="20201112 12:26:59.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.039" endtime="20201112 12:26:59.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.057" endtime="20201112 12:26:59.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.059" endtime="20201112 12:26:59.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.036" endtime="20201112 12:26:59.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.034" endtime="20201112 12:26:59.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.068" endtime="20201112 12:26:59.355"></status>
</kw>
<msg timestamp="20201112 12:26:59.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065661819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065693833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.067" endtime="20201112 12:26:59.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065661819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065693833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.359" endtime="20201112 12:26:59.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.367" endtime="20201112 12:26:59.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.064" endtime="20201112 12:26:59.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.062" endtime="20201112 12:26:59.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.375" level="INFO">${RESULT} = [{'time': 0.065693833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.201399999999688e-05, 'source_diff': 3.201399999999688e-05}, {'time': 0.065749597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.372" endtime="20201112 12:26:59.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.389" level="INFO">${ACCURACY} = {'diff': [3.201399999999688e-05, 3.141600000000633e-05, 3.14170000000058e-05, 3.140299999999929e-05, 3.136100000000752e-05, 3.138800000000719e-05, 3.1388999999992784e-05, 3.1388999999992784e-05, 3.138...</msg>
<status status="PASS" starttime="20201112 12:26:59.376" endtime="20201112 12:26:59.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.393" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.392" endtime="20201112 12:26:59.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.396" level="INFO">VALUE: [3.201399999999688e-05, 3.141600000000633e-05, 3.14170000000058e-05, 3.140299999999929e-05, 3.136100000000752e-05, 3.138800000000719e-05, 3.1388999999992784e-05, 3.1388999999992784e-05, 3.138900000000666e-05, 3.140299999999929e-05, 3.1388999999992784e-05, 3.136100000000752e-05, 3.140299999999929e-05, 3.138799999999331e-05, 3.138900000000666e-05, 3.1388999999992784e-05, 3.1388999999992784e-05, 3.140199999999982e-05, 3.14170000000058e-05, 3.137500000000015e-05, 3.1360999999993644e-05, 3.1362000000006995e-05, 3.140199999999982e-05, 3.138900000000666e-05, 3.140199999999982e-05, 3.1444999999991063e-05, 3.142999999999896e-05, 3.1360999999993644e-05, 3.137500000000015e-05, 3.140199999999982e-05, 3.1388999999992784e-05, 3.138900000000666e-05, 3.137500000000015e-05, 3.138799999999331e-05, 3.134700000000101e-05, 3.138900000000666e-05, 3.1388999999992784e-05, 3.138900000000666e-05, 3.138900000000666e-05, 3.1360999999993644e-05, 3.1388999999992784e-05, 3.138900000000666e-05, 3.138900000000666e-05, 3.137500000000015e-05, 3.1388999999992784e-05, 3.138900000000666e-05, 3.145899999999757e-05, 3.1444999999991063e-05, 3.1388999999992784e-05, 3.1388999999992784e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.394" endtime="20201112 12:26:59.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.390" endtime="20201112 12:26:59.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.399" endtime="20201112 12:26:59.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.402" endtime="20201112 12:26:59.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.401" endtime="20201112 12:26:59.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.397" endtime="20201112 12:26:59.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.032" endtime="20201112 12:26:59.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.031" endtime="20201112 12:26:59.423"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.432" endtime="20201112 12:26:59.446"></status>
</kw>
<msg timestamp="20201112 12:26:59.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.431" endtime="20201112 12:26:59.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.448" endtime="20201112 12:26:59.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.450" endtime="20201112 12:26:59.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.428" endtime="20201112 12:26:59.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.426" endtime="20201112 12:26:59.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.460" endtime="20201112 12:26:59.747"></status>
</kw>
<msg timestamp="20201112 12:26:59.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022153694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.458" endtime="20201112 12:26:59.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022153694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.752" endtime="20201112 12:26:59.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.760" endtime="20201112 12:26:59.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.455" endtime="20201112 12:26:59.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.454" endtime="20201112 12:26:59.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.767" level="INFO">${RESULT} = [{'time': 0.022153694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208300000000219e-05, 'source_diff': 3.208300000000219e-05}, {'time': 0.022207889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.763" endtime="20201112 12:26:59.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.781" level="INFO">${ACCURACY} = {'diff': [3.208300000000219e-05, 3.134700000000101e-05, 3.147199999999767e-05, 3.138899999999972e-05, 3.138900000000319e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.1375...</msg>
<status status="PASS" starttime="20201112 12:26:59.768" endtime="20201112 12:26:59.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.785" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.784" endtime="20201112 12:26:59.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.788" level="INFO">VALUE: [3.208300000000219e-05, 3.134700000000101e-05, 3.147199999999767e-05, 3.138899999999972e-05, 3.138900000000319e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.1346999999997543e-05, 3.1348000000000487e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.140199999999982e-05, 3.138900000000319e-05, 3.138800000000025e-05, 3.138899999999972e-05, 3.141599999999939e-05, 3.134700000000101e-05, 3.140299999999929e-05, 3.140300000000276e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.140300000000276e-05, 3.145800000000157e-05, 3.1360999999997113e-05, 3.141700000000233e-05, 3.140300000000276e-05, 3.140299999999929e-05, 3.138800000000025e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.134700000000101e-05, 3.140299999999929e-05, 3.138800000000025e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.140199999999982e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.786" endtime="20201112 12:26:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.782" endtime="20201112 12:26:59.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.791" endtime="20201112 12:26:59.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.795" endtime="20201112 12:26:59.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.793" endtime="20201112 12:26:59.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.789" endtime="20201112 12:26:59.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.424" endtime="20201112 12:26:59.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.424" endtime="20201112 12:26:59.816"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.825" endtime="20201112 12:26:59.839"></status>
</kw>
<msg timestamp="20201112 12:26:59.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.823" endtime="20201112 12:26:59.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.841" endtime="20201112 12:26:59.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.843" endtime="20201112 12:26:59.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.821" endtime="20201112 12:26:59.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.818" endtime="20201112 12:26:59.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.852" endtime="20201112 12:27:00.139"></status>
</kw>
<msg timestamp="20201112 12:27:00.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.851" endtime="20201112 12:27:00.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.143" endtime="20201112 12:27:00.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.151" endtime="20201112 12:27:00.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.848" endtime="20201112 12:27:00.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.846" endtime="20201112 12:27:00.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.158" level="INFO">${RESULT} = [{'time': 0.021749181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.20839999999982e-05, 'source_diff': 3.20839999999982e-05}, {'time': 0.021799931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:00.155" endtime="20201112 12:27:00.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.173" level="INFO">${ACCURACY} = {'diff': [3.20839999999982e-05, 3.140300000000276e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.140199999999982e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.13889...</msg>
<status status="PASS" starttime="20201112 12:27:00.159" endtime="20201112 12:27:00.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.178" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.177" endtime="20201112 12:27:00.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.180" level="INFO">VALUE: [3.20839999999982e-05, 3.140300000000276e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.140199999999982e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.1346999999997543e-05, 3.140199999999982e-05, 3.138899999999972e-05, 3.141600000000286e-05, 3.133400000000092e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.138900000000319e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.138800000000025e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.138800000000025e-05, 3.1444000000002e-05, 3.140199999999982e-05, 3.140299999999929e-05, 3.140299999999929e-05, 3.140299999999929e-05, 3.1318999999998404e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138800000000025e-05, 3.138899999999972e-05, 3.144399999999853e-05, 3.1346999999997543e-05, 3.141599999999939e-05, 3.140299999999929e-05, 3.140299999999929e-05, 3.1362000000000056e-05, 3.133399999999745e-05, 3.138800000000025e-05, 3.136100000000058e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.141700000000233e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.179" endtime="20201112 12:27:00.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.174" endtime="20201112 12:27:00.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.184" endtime="20201112 12:27:00.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.188" endtime="20201112 12:27:00.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.186" endtime="20201112 12:27:00.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.182" endtime="20201112 12:27:00.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.817" endtime="20201112 12:27:00.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.816" endtime="20201112 12:27:00.209"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.217" endtime="20201112 12:27:00.231"></status>
</kw>
<msg timestamp="20201112 12:27:00.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.216" endtime="20201112 12:27:00.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.233" endtime="20201112 12:27:00.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.235" endtime="20201112 12:27:00.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.213" endtime="20201112 12:27:00.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.211" endtime="20201112 12:27:00.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.245" endtime="20201112 12:27:00.531"></status>
</kw>
<msg timestamp="20201112 12:27:00.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.243" endtime="20201112 12:27:00.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.535" endtime="20201112 12:27:00.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.543" endtime="20201112 12:27:00.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.241" endtime="20201112 12:27:00.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.239" endtime="20201112 12:27:00.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.550" level="INFO">${RESULT} = [{'time': 0.021695944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208300000000219e-05, 'source_diff': 3.208300000000219e-05}, {'time': 0.021743639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.547" endtime="20201112 12:27:00.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.563" level="INFO">${ACCURACY} = {'diff': [3.208300000000219e-05, 3.14579999999981e-05, 3.140299999999929e-05, 3.147199999999767e-05, 3.138899999999972e-05, 3.131999999999788e-05, 3.138899999999972e-05, 3.140300000000276e-05, 3.13889...</msg>
<status status="PASS" starttime="20201112 12:27:00.551" endtime="20201112 12:27:00.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.568" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.567" endtime="20201112 12:27:00.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.570" level="INFO">VALUE: [3.208300000000219e-05, 3.14579999999981e-05, 3.140299999999929e-05, 3.147199999999767e-05, 3.138899999999972e-05, 3.131999999999788e-05, 3.138899999999972e-05, 3.140300000000276e-05, 3.138899999999972e-05, 3.145800000000157e-05, 3.140300000000276e-05, 3.138899999999972e-05, 3.141599999999939e-05, 3.134700000000101e-05, 3.145800000000157e-05, 3.138899999999972e-05, 3.148600000000071e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.141599999999939e-05, 3.138800000000025e-05, 3.1444999999998e-05, 3.141599999999939e-05, 3.136100000000058e-05, 3.141700000000233e-05, 3.144500000000147e-05, 3.1348000000000487e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.138900000000319e-05, 3.140299999999929e-05, 3.140199999999982e-05, 3.140299999999929e-05, 3.141699999999886e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.141700000000233e-05, 3.145900000000104e-05, 3.137499999999668e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.141599999999939e-05, 3.141699999999886e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.569" endtime="20201112 12:27:00.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.564" endtime="20201112 12:27:00.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.574" endtime="20201112 12:27:00.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.578" endtime="20201112 12:27:00.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.576" endtime="20201112 12:27:00.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.572" endtime="20201112 12:27:00.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.209" endtime="20201112 12:27:00.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.209" endtime="20201112 12:27:00.598"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.607" endtime="20201112 12:27:00.621"></status>
</kw>
<msg timestamp="20201112 12:27:00.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.606" endtime="20201112 12:27:00.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.623" endtime="20201112 12:27:00.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.625" endtime="20201112 12:27:00.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.603" endtime="20201112 12:27:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.601" endtime="20201112 12:27:00.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.635" endtime="20201112 12:27:00.921"></status>
</kw>
<msg timestamp="20201112 12:27:00.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021671, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:00.633" endtime="20201112 12:27:00.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021671, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:00.925" endtime="20201112 12:27:00.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.934" endtime="20201112 12:27:00.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.630" endtime="20201112 12:27:00.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.629" endtime="20201112 12:27:00.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.941" level="INFO">${RESULT} = [{'time': 0.021671, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2082999999998724e-05, 'source_diff': 3.2082999999998724e-05}, {'time': 0.021719028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:00.937" endtime="20201112 12:27:00.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.954" level="INFO">${ACCURACY} = {'diff': [3.2082999999998724e-05, 3.145900000000104e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.141599999999939e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138800000000025e-05, 3.138...</msg>
<status status="PASS" starttime="20201112 12:27:00.942" endtime="20201112 12:27:00.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.959" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.958" endtime="20201112 12:27:00.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.961" level="INFO">VALUE: [3.2082999999998724e-05, 3.145900000000104e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.141599999999939e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138800000000025e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138900000000319e-05, 3.140300000000276e-05, 3.140300000000276e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.14579999999981e-05, 3.144500000000147e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.138900000000319e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.140300000000276e-05, 3.138899999999972e-05, 3.140300000000276e-05, 3.140299999999929e-05, 3.136100000000058e-05, 3.138900000000319e-05, 3.138899999999972e-05, 3.14310000000019e-05, 3.144500000000147e-05, 3.141700000000233e-05, 3.140299999999929e-05, 3.137499999999668e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.136100000000058e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.960" endtime="20201112 12:27:00.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.955" endtime="20201112 12:27:00.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.965" endtime="20201112 12:27:00.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.968" endtime="20201112 12:27:00.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.967" endtime="20201112 12:27:00.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.963" endtime="20201112 12:27:00.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.599" endtime="20201112 12:27:00.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.599" endtime="20201112 12:27:00.989"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.998" endtime="20201112 12:27:01.012"></status>
</kw>
<msg timestamp="20201112 12:27:01.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.996" endtime="20201112 12:27:01.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.014" endtime="20201112 12:27:01.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.016" endtime="20201112 12:27:01.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.994" endtime="20201112 12:27:01.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.992" endtime="20201112 12:27:01.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.025" endtime="20201112 12:27:01.312"></status>
</kw>
<msg timestamp="20201112 12:27:01.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.024" endtime="20201112 12:27:01.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.316" endtime="20201112 12:27:01.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.325" endtime="20201112 12:27:01.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.021" endtime="20201112 12:27:01.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.020" endtime="20201112 12:27:01.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.332" level="INFO">${RESULT} = [{'time': 0.021814875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6931000000000463e-05, 'source_diff': 3.6931000000000463e-05}, {'time': 0.021869625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:01.328" endtime="20201112 12:27:01.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.345" level="INFO">${ACCURACY} = {'diff': [3.6931000000000463e-05, 3.630599999999984e-05, 3.626399999999766e-05, 3.623599999999852e-05, 3.630599999999984e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.623600000000199e-05, 3.624...</msg>
<status status="PASS" starttime="20201112 12:27:01.333" endtime="20201112 12:27:01.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.350" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.349" endtime="20201112 12:27:01.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.352" level="INFO">VALUE: [3.6931000000000463e-05, 3.630599999999984e-05, 3.626399999999766e-05, 3.623599999999852e-05, 3.630599999999984e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.623600000000199e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.620799999999938e-05, 3.6180999999999713e-05, 3.623599999999852e-05, 3.625000000000156e-05, 3.6332999999999505e-05, 3.631999999999941e-05, 3.623599999999852e-05, 3.619500000000275e-05, 3.140199999999982e-05, 3.623700000000146e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.622200000000242e-05, 3.141700000000233e-05, 3.619500000000275e-05, 3.626399999999766e-05, 3.625000000000156e-05, 3.6305000000000365e-05, 3.623600000000199e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.6180999999999713e-05, 3.6318999999999935e-05, 3.6277000000001225e-05, 3.623700000000146e-05, 3.626400000000113e-05, 3.623599999999852e-05, 3.626400000000113e-05, 3.625000000000156e-05, 3.626399999999766e-05, 3.138899999999972e-05, 3.6305000000000365e-05, 3.626400000000113e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.351" endtime="20201112 12:27:01.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.346" endtime="20201112 12:27:01.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.356" endtime="20201112 12:27:01.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.359" endtime="20201112 12:27:01.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.358" endtime="20201112 12:27:01.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.354" endtime="20201112 12:27:01.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.990" endtime="20201112 12:27:01.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.989" endtime="20201112 12:27:01.380"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.389" endtime="20201112 12:27:01.404"></status>
</kw>
<msg timestamp="20201112 12:27:01.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.387" endtime="20201112 12:27:01.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.405" endtime="20201112 12:27:01.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.408" endtime="20201112 12:27:01.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.385" endtime="20201112 12:27:01.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.383" endtime="20201112 12:27:01.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.417" endtime="20201112 12:27:01.703"></status>
</kw>
<msg timestamp="20201112 12:27:01.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.415" endtime="20201112 12:27:01.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.707" endtime="20201112 12:27:01.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.715" endtime="20201112 12:27:01.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.412" endtime="20201112 12:27:01.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.411" endtime="20201112 12:27:01.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.722" level="INFO">${RESULT} = [{'time': 0.021807111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693000000000099e-05, 'source_diff': 3.693000000000099e-05}, {'time': 0.021868361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.719" endtime="20201112 12:27:01.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.737" level="INFO">${ACCURACY} = {'diff': [3.693000000000099e-05, 3.620799999999938e-05, 3.626400000000113e-05, 3.620800000000285e-05, 3.625000000000156e-05, 3.623599999999852e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.6277...</msg>
<status status="PASS" starttime="20201112 12:27:01.723" endtime="20201112 12:27:01.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.742" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.741" endtime="20201112 12:27:01.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.744" level="INFO">VALUE: [3.693000000000099e-05, 3.620799999999938e-05, 3.626400000000113e-05, 3.620800000000285e-05, 3.625000000000156e-05, 3.623599999999852e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.627799999999723e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.62780000000007e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.629200000000027e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.622200000000242e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.6276999999997755e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.623599999999852e-05, 3.625000000000156e-05, 3.629200000000027e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.62780000000007e-05, 3.631999999999941e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.623600000000199e-05, 3.625000000000156e-05, 3.619499999999928e-05, 3.624999999999809e-05, 3.622299999999842e-05, 3.620799999999938e-05, 3.620799999999938e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.626399999999766e-05, 3.625000000000156e-05, 3.62780000000007e-05, 3.620899999999885e-05, 3.624999999999809e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.743" endtime="20201112 12:27:01.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.738" endtime="20201112 12:27:01.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.748" endtime="20201112 12:27:01.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.751" endtime="20201112 12:27:01.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.750" endtime="20201112 12:27:01.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.746" endtime="20201112 12:27:01.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.381" endtime="20201112 12:27:01.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.380" endtime="20201112 12:27:01.772"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.781" endtime="20201112 12:27:01.795"></status>
</kw>
<msg timestamp="20201112 12:27:01.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.779" endtime="20201112 12:27:01.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.797" endtime="20201112 12:27:01.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.800" endtime="20201112 12:27:01.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.777" endtime="20201112 12:27:01.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.774" endtime="20201112 12:27:01.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.812" endtime="20201112 12:27:02.100"></status>
</kw>
<msg timestamp="20201112 12:27:02.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021730875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.809" endtime="20201112 12:27:02.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021730875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.104" endtime="20201112 12:27:02.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.112" endtime="20201112 12:27:02.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.805" endtime="20201112 12:27:02.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.803" endtime="20201112 12:27:02.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.119" level="INFO">${RESULT} = [{'time': 0.021730875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6917000000000894e-05, 'source_diff': 3.6917000000000894e-05}, {'time': 0.021793972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:02.116" endtime="20201112 12:27:02.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.132" level="INFO">${ACCURACY} = {'diff': [3.6917000000000894e-05, 3.616600000000067e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.6318999999999935e-05, 3.620799999999938e-05, 3.624999999999809e-05, 3.62...</msg>
<status status="PASS" starttime="20201112 12:27:02.120" endtime="20201112 12:27:02.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.137" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.136" endtime="20201112 12:27:02.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.139" level="INFO">VALUE: [3.6917000000000894e-05, 3.616600000000067e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.6318999999999935e-05, 3.620799999999938e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.6332999999999505e-05, 3.624999999999809e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.625000000000156e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.626400000000113e-05, 3.62780000000007e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.626400000000113e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.630599999999984e-05, 3.623700000000146e-05, 3.625000000000156e-05, 3.626400000000113e-05, 3.6332999999999505e-05, 3.623699999999799e-05, 3.622200000000242e-05, 3.626399999999766e-05, 3.626399999999766e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.626399999999766e-05, 3.633399999999898e-05, 3.618100000000318e-05, 3.626399999999766e-05, 3.623599999999852e-05, 3.625000000000156e-05, 3.626399999999766e-05, 3.624999999999809e-05, 3.6291000000000795e-05, 3.623599999999852e-05, 3.6318999999999935e-05, 3.623599999999852e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.138" endtime="20201112 12:27:02.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.133" endtime="20201112 12:27:02.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.143" endtime="20201112 12:27:02.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.147" endtime="20201112 12:27:02.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.145" endtime="20201112 12:27:02.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.142" endtime="20201112 12:27:02.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.773" endtime="20201112 12:27:02.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.772" endtime="20201112 12:27:02.168"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.176" endtime="20201112 12:27:02.191"></status>
</kw>
<msg timestamp="20201112 12:27:02.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.175" endtime="20201112 12:27:02.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.193" endtime="20201112 12:27:02.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.195" endtime="20201112 12:27:02.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.172" endtime="20201112 12:27:02.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.170" endtime="20201112 12:27:02.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.204" endtime="20201112 12:27:02.490"></status>
</kw>
<msg timestamp="20201112 12:27:02.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:02.203" endtime="20201112 12:27:02.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:02.495" endtime="20201112 12:27:02.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.503" endtime="20201112 12:27:02.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.200" endtime="20201112 12:27:02.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.198" endtime="20201112 12:27:02.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.510" level="INFO">${RESULT} = [{'time': 0.021741444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.694399999999709e-05, 'source_diff': 3.694399999999709e-05}, {'time': 0.021792069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.507" endtime="20201112 12:27:02.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.523" level="INFO">${ACCURACY} = {'diff': [3.694399999999709e-05, 3.625000000000156e-05, 3.626400000000113e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.6319...</msg>
<status status="PASS" starttime="20201112 12:27:02.511" endtime="20201112 12:27:02.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.528" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.527" endtime="20201112 12:27:02.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.531" level="INFO">VALUE: [3.694399999999709e-05, 3.625000000000156e-05, 3.626400000000113e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.631999999999941e-05, 3.62780000000007e-05, 3.626400000000113e-05, 3.620799999999938e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.624999999999809e-05, 3.622199999999895e-05, 3.630599999999984e-05, 3.623600000000199e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.623600000000199e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.6263000000001655e-05, 3.626399999999766e-05, 3.624999999999809e-05, 3.629200000000027e-05, 3.6291000000000795e-05, 3.624999999999809e-05, 3.623600000000199e-05, 3.625000000000156e-05, 3.623599999999852e-05, 3.623700000000146e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.623599999999852e-05, 3.626400000000113e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.626400000000113e-05, 3.626399999999766e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.619499999999928e-05, 3.6276999999997755e-05, 3.6262999999998186e-05, 3.624999999999809e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.529" endtime="20201112 12:27:02.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.524" endtime="20201112 12:27:02.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.534" endtime="20201112 12:27:02.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.538" endtime="20201112 12:27:02.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.536" endtime="20201112 12:27:02.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.532" endtime="20201112 12:27:02.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.169" endtime="20201112 12:27:02.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.168" endtime="20201112 12:27:02.559"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.567" endtime="20201112 12:27:02.582"></status>
</kw>
<msg timestamp="20201112 12:27:02.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.566" endtime="20201112 12:27:02.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.584" endtime="20201112 12:27:02.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.586" endtime="20201112 12:27:02.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.563" endtime="20201112 12:27:02.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.561" endtime="20201112 12:27:02.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.595" endtime="20201112 12:27:02.882"></status>
</kw>
<msg timestamp="20201112 12:27:02.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.594" endtime="20201112 12:27:02.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.887" endtime="20201112 12:27:02.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.895" endtime="20201112 12:27:02.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.591" endtime="20201112 12:27:02.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.589" endtime="20201112 12:27:02.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.902" level="INFO">${RESULT} = [{'time': 0.021909319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695800000000013e-05, 'source_diff': 3.695800000000013e-05}, {'time': 0.021968972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.899" endtime="20201112 12:27:02.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.915" level="INFO">${ACCURACY} = {'diff': [3.695800000000013e-05, 3.624999999999809e-05, 3.619399999999981e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.619499999999928e-05, 3.629200000000027e-05, 3.625000000000156e-05, 3.6221...</msg>
<status status="PASS" starttime="20201112 12:27:02.903" endtime="20201112 12:27:02.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.920" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.919" endtime="20201112 12:27:02.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.922" level="INFO">VALUE: [3.695800000000013e-05, 3.624999999999809e-05, 3.619399999999981e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.619499999999928e-05, 3.629200000000027e-05, 3.625000000000156e-05, 3.622199999999895e-05, 3.622200000000242e-05, 3.623599999999852e-05, 3.6276999999997755e-05, 3.623600000000199e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.62780000000007e-05, 3.623599999999852e-05, 3.6290999999997325e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.631999999999941e-05, 3.6305000000000365e-05, 3.625000000000156e-05, 3.622200000000242e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.619500000000275e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.62780000000007e-05, 3.630599999999984e-05, 3.622200000000242e-05, 3.62780000000007e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.623599999999852e-05, 3.624999999999809e-05, 3.623599999999852e-05, 3.624999999999809e-05, 3.626399999999766e-05, 3.6263000000001655e-05, 3.630599999999984e-05, 3.62780000000007e-05, 3.626399999999766e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.921" endtime="20201112 12:27:02.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.916" endtime="20201112 12:27:02.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.926" endtime="20201112 12:27:02.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.929" endtime="20201112 12:27:02.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.928" endtime="20201112 12:27:02.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.924" endtime="20201112 12:27:02.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.559" endtime="20201112 12:27:02.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.559" endtime="20201112 12:27:02.950"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.959" endtime="20201112 12:27:02.974"></status>
</kw>
<msg timestamp="20201112 12:27:02.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.957" endtime="20201112 12:27:02.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.975" endtime="20201112 12:27:02.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.978" endtime="20201112 12:27:02.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.955" endtime="20201112 12:27:02.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.953" endtime="20201112 12:27:02.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.987" endtime="20201112 12:27:03.273"></status>
</kw>
<msg timestamp="20201112 12:27:03.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.985" endtime="20201112 12:27:03.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.277" endtime="20201112 12:27:03.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.286" endtime="20201112 12:27:03.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.983" endtime="20201112 12:27:03.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.981" endtime="20201112 12:27:03.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.292" level="INFO">${RESULT} = [{'time': 0.021859944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1790999999999356e-05, 'source_diff': 4.1790999999999356e-05}, {'time': 0.021916097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:03.289" endtime="20201112 12:27:03.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.307" level="INFO">${ACCURACY} = {'diff': [4.1790999999999356e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.11119999999994e-05, 4.1110999999999925e-05, ...</msg>
<status status="PASS" starttime="20201112 12:27:03.293" endtime="20201112 12:27:03.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.312" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.311" endtime="20201112 12:27:03.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.314" level="INFO">VALUE: [4.1790999999999356e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.11119999999994e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1054999999998176e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.108400000000026e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1152999999998635e-05, 4.11799999999983e-05, 4.11119999999994e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.11660000000022e-05, 4.109799999999983e-05, 4.1110999999999925e-05, 4.1125000000002965e-05, 4.1110999999999925e-05, 4.11119999999994e-05, 4.1110999999999925e-05, 4.108400000000026e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.115199999999916e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.109799999999983e-05, 4.1125000000002965e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1125000000002965e-05, 4.1097000000000355e-05, 4.1124999999999495e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.313" endtime="20201112 12:27:03.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.308" endtime="20201112 12:27:03.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.318" endtime="20201112 12:27:03.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.321" endtime="20201112 12:27:03.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.320" endtime="20201112 12:27:03.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.316" endtime="20201112 12:27:03.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.951" endtime="20201112 12:27:03.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.951" endtime="20201112 12:27:03.342"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.351" endtime="20201112 12:27:03.366"></status>
</kw>
<msg timestamp="20201112 12:27:03.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.350" endtime="20201112 12:27:03.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.368" endtime="20201112 12:27:03.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.370" endtime="20201112 12:27:03.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.347" endtime="20201112 12:27:03.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.345" endtime="20201112 12:27:03.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.379" endtime="20201112 12:27:03.666"></status>
</kw>
<msg timestamp="20201112 12:27:03.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.378" endtime="20201112 12:27:03.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.670" endtime="20201112 12:27:03.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.679" endtime="20201112 12:27:03.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.375" endtime="20201112 12:27:03.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.373" endtime="20201112 12:27:03.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.686" level="INFO">${RESULT} = [{'time': 0.022034569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1790999999999356e-05, 'source_diff': 4.1790999999999356e-05}, {'time': 0.022099417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:03.682" endtime="20201112 12:27:03.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.699" level="INFO">${ACCURACY} = {'diff': [4.1790999999999356e-05, 4.1110999999999925e-05, 4.1083000000000786e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1124999999999495e-05...</msg>
<status status="PASS" starttime="20201112 12:27:03.687" endtime="20201112 12:27:03.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.704" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.703" endtime="20201112 12:27:03.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.706" level="INFO">VALUE: [4.1790999999999356e-05, 4.1110999999999925e-05, 4.1083000000000786e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.108400000000026e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1083000000000786e-05, 4.109799999999983e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1083000000000786e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1167000000001674e-05, 4.119400000000134e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.111200000000287e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.11119999999994e-05, 4.105599999999765e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1124999999999495e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.705" endtime="20201112 12:27:03.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.700" endtime="20201112 12:27:03.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.717" endtime="20201112 12:27:03.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.720" endtime="20201112 12:27:03.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.719" endtime="20201112 12:27:03.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.715" endtime="20201112 12:27:03.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.343" endtime="20201112 12:27:03.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.343" endtime="20201112 12:27:03.741"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.750" endtime="20201112 12:27:03.765"></status>
</kw>
<msg timestamp="20201112 12:27:03.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.749" endtime="20201112 12:27:03.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.767" endtime="20201112 12:27:03.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.769" endtime="20201112 12:27:03.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.746" endtime="20201112 12:27:03.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.744" endtime="20201112 12:27:03.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.778" endtime="20201112 12:27:04.067"></status>
</kw>
<msg timestamp="20201112 12:27:04.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.777" endtime="20201112 12:27:04.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.071" endtime="20201112 12:27:04.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.079" endtime="20201112 12:27:04.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.774" endtime="20201112 12:27:04.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.772" endtime="20201112 12:27:04.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.086" level="INFO">${RESULT} = [{'time': 0.022078569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1790999999999356e-05, 'source_diff': 4.1790999999999356e-05}, {'time': 0.022151819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:04.083" endtime="20201112 12:27:04.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.100" level="INFO">${ACCURACY} = {'diff': [4.1790999999999356e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1083000000000786e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1124999999999495e-05...</msg>
<status status="PASS" starttime="20201112 12:27:04.087" endtime="20201112 12:27:04.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.104" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.103" endtime="20201112 12:27:04.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.107" level="INFO">VALUE: [4.1790999999999356e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1083000000000786e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1125000000002965e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.11119999999994e-05, 4.1069000000001216e-05, 4.1110999999999925e-05, 4.105600000000112e-05, 4.1124999999999495e-05, 4.1139000000002535e-05, 4.1139000000002535e-05, 4.109799999999983e-05, 4.1125000000002965e-05, 4.1110999999999925e-05, 4.115200000000263e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.107000000000069e-05, 4.11119999999994e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.11119999999994e-05, 4.1124999999999495e-05, 4.1167000000001674e-05, 4.1055000000001646e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1110999999999925e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.105" endtime="20201112 12:27:04.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.100" endtime="20201112 12:27:04.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.110" endtime="20201112 12:27:04.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.114" endtime="20201112 12:27:04.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.112" endtime="20201112 12:27:04.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.109" endtime="20201112 12:27:04.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.742" endtime="20201112 12:27:04.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.742" endtime="20201112 12:27:04.135"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.143" endtime="20201112 12:27:04.158"></status>
</kw>
<msg timestamp="20201112 12:27:04.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.142" endtime="20201112 12:27:04.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.160" endtime="20201112 12:27:04.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.162" endtime="20201112 12:27:04.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.139" endtime="20201112 12:27:04.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.137" endtime="20201112 12:27:04.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.171" endtime="20201112 12:27:04.458"></status>
</kw>
<msg timestamp="20201112 12:27:04.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.170" endtime="20201112 12:27:04.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.462" endtime="20201112 12:27:04.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.470" endtime="20201112 12:27:04.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.167" endtime="20201112 12:27:04.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.166" endtime="20201112 12:27:04.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.477" level="INFO">${RESULT} = [{'time': 0.021806778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179199999999883e-05, 'source_diff': 4.179199999999883e-05}, {'time': 0.021871, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:04.474" endtime="20201112 12:27:04.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.491" level="INFO">${ACCURACY} = {'diff': [4.179199999999883e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1167000000001674e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1166999999998205e-05, 4.1138999999999065e-05,...</msg>
<status status="PASS" starttime="20201112 12:27:04.478" endtime="20201112 12:27:04.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.495" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.494" endtime="20201112 12:27:04.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.498" level="INFO">VALUE: [4.179199999999883e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1167000000001674e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 4.109799999999983e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1125000000002965e-05, 4.1166999999998205e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.1152999999998635e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1069000000001216e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.1068999999997746e-05, 4.108400000000026e-05, 4.1110999999999925e-05, 4.115199999999916e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1068999999997746e-05, 4.107000000000069e-05, 4.1124999999999495e-05, 4.106999999999722e-05, 4.1138999999999065e-05, 4.108400000000026e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1125000000002965e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.109799999999983e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1097000000000355e-05, 4.1167000000001674e-05, 4.1124999999999495e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.496" endtime="20201112 12:27:04.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.492" endtime="20201112 12:27:04.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.501" endtime="20201112 12:27:04.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.505" endtime="20201112 12:27:04.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.503" endtime="20201112 12:27:04.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.500" endtime="20201112 12:27:04.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.135" endtime="20201112 12:27:04.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.135" endtime="20201112 12:27:04.526"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.534" endtime="20201112 12:27:04.549"></status>
</kw>
<msg timestamp="20201112 12:27:04.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.533" endtime="20201112 12:27:04.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.551" endtime="20201112 12:27:04.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.553" endtime="20201112 12:27:04.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.530" endtime="20201112 12:27:04.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.528" endtime="20201112 12:27:04.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.563" endtime="20201112 12:27:04.849"></status>
</kw>
<msg timestamp="20201112 12:27:04.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.561" endtime="20201112 12:27:04.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.853" endtime="20201112 12:27:04.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.862" endtime="20201112 12:27:04.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.558" endtime="20201112 12:27:04.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.557" endtime="20201112 12:27:04.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.869" level="INFO">${RESULT} = [{'time': 0.021799889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.18059999999984e-05, 'source_diff': 4.18059999999984e-05}, {'time': 0.021855389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:04.865" endtime="20201112 12:27:04.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.883" level="INFO">${ACCURACY} = {'diff': [4.18059999999984e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1040999999998606e-05, 4.1124999999999495e-05, ...</msg>
<status status="PASS" starttime="20201112 12:27:04.870" endtime="20201112 12:27:04.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.888" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.887" endtime="20201112 12:27:04.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.891" level="INFO">VALUE: [4.18059999999984e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1040999999998606e-05, 4.1124999999999495e-05, 4.115199999999916e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.601400000000047e-05, 4.1110999999999925e-05, 4.1195000000000814e-05, 4.1138999999999065e-05, 4.11119999999994e-05, 4.598600000000133e-05, 4.597200000000176e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.597200000000176e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.11119999999994e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.595799999999872e-05, 4.108400000000026e-05, 4.598600000000133e-05, 4.1153000000002105e-05, 4.1153000000002105e-05, 4.1110999999999925e-05, 4.118000000000177e-05, 4.1138999999999065e-05, 4.1125000000002965e-05, 4.109799999999983e-05, 4.1097000000000355e-05, 4.597199999999829e-05, 4.1110999999999925e-05, 4.109799999999983e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.109799999999983e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.889" endtime="20201112 12:27:04.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.884" endtime="20201112 12:27:04.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.894" endtime="20201112 12:27:04.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.898" endtime="20201112 12:27:04.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.896" endtime="20201112 12:27:04.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.892" endtime="20201112 12:27:04.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.527" endtime="20201112 12:27:04.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.526" endtime="20201112 12:27:04.919"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.927" endtime="20201112 12:27:04.943"></status>
</kw>
<msg timestamp="20201112 12:27:04.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.926" endtime="20201112 12:27:04.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.944" endtime="20201112 12:27:04.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.947" endtime="20201112 12:27:04.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.923" endtime="20201112 12:27:04.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.921" endtime="20201112 12:27:04.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.956" endtime="20201112 12:27:05.244"></status>
</kw>
<msg timestamp="20201112 12:27:05.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.954" endtime="20201112 12:27:05.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.248" endtime="20201112 12:27:05.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.257" endtime="20201112 12:27:05.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.952" endtime="20201112 12:27:05.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.950" endtime="20201112 12:27:05.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.263" level="INFO">${RESULT} = [{'time': 0.021874597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.663899999999763e-05, 'source_diff': 4.663899999999763e-05}, {'time': 0.021948986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:05.260" endtime="20201112 12:27:05.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.277" level="INFO">${ACCURACY} = {'diff': [4.663899999999763e-05, 4.598600000000133e-05, 4.595799999999872e-05, 4.597199999999829e-05, 4.601400000000047e-05, 4.591600000000001e-05, 4.5959000000001665e-05, 4.595799999999872e-05, 4.598...</msg>
<status status="PASS" starttime="20201112 12:27:05.264" endtime="20201112 12:27:05.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.281" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.280" endtime="20201112 12:27:05.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.284" level="INFO">VALUE: [4.663899999999763e-05, 4.598600000000133e-05, 4.595799999999872e-05, 4.597199999999829e-05, 4.601400000000047e-05, 4.591600000000001e-05, 4.5959000000001665e-05, 4.595799999999872e-05, 4.598600000000133e-05, 4.597200000000176e-05, 4.5973000000001235e-05, 4.5959000000001665e-05, 4.597200000000176e-05, 4.595799999999872e-05, 4.597199999999829e-05, 4.601400000000047e-05, 4.597200000000176e-05, 4.595799999999872e-05, 4.5972999999997766e-05, 4.595800000000219e-05, 4.5973000000001235e-05, 4.597200000000176e-05, 4.595799999999872e-05, 4.597200000000176e-05, 4.597200000000176e-05, 4.595799999999872e-05, 4.60000000000009e-05, 4.595799999999872e-05, 4.60000000000009e-05, 4.597200000000176e-05, 4.598600000000133e-05, 4.597199999999829e-05, 4.598599999999786e-05, 4.595800000000219e-05, 4.5973000000001235e-05, 4.597199999999829e-05, 4.599999999999743e-05, 4.5958999999998196e-05, 4.597200000000176e-05, 4.598600000000133e-05, 4.597199999999829e-05, 4.601400000000047e-05, 4.597199999999829e-05, 4.599999999999743e-05, 4.598600000000133e-05, 4.601400000000047e-05, 4.597199999999829e-05, 4.597199999999829e-05, 4.60000000000009e-05, 4.5973000000001235e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.282" endtime="20201112 12:27:05.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.278" endtime="20201112 12:27:05.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.287" endtime="20201112 12:27:05.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.291" endtime="20201112 12:27:05.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.289" endtime="20201112 12:27:05.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.286" endtime="20201112 12:27:05.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.920" endtime="20201112 12:27:05.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.919" endtime="20201112 12:27:05.312"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.320" endtime="20201112 12:27:05.336"></status>
</kw>
<msg timestamp="20201112 12:27:05.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.319" endtime="20201112 12:27:05.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.337" endtime="20201112 12:27:05.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.340" endtime="20201112 12:27:05.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.316" endtime="20201112 12:27:05.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.314" endtime="20201112 12:27:05.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.349" endtime="20201112 12:27:05.636"></status>
</kw>
<msg timestamp="20201112 12:27:05.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.347" endtime="20201112 12:27:05.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.640" endtime="20201112 12:27:05.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.649" endtime="20201112 12:27:05.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.345" endtime="20201112 12:27:05.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.343" endtime="20201112 12:27:05.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.655" level="INFO">${RESULT} = [{'time': 0.021957167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6639000000001096e-05, 'source_diff': 4.6639000000001096e-05}, {'time': 0.022024736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:05.652" endtime="20201112 12:27:05.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.669" level="INFO">${ACCURACY} = {'diff': [4.6639000000001096e-05, 4.602800000000004e-05, 4.60000000000009e-05, 4.60000000000009e-05, 4.595800000000219e-05, 4.5973000000001235e-05, 4.595799999999872e-05, 4.597200000000176e-05, 4.5971...</msg>
<status status="PASS" starttime="20201112 12:27:05.656" endtime="20201112 12:27:05.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.673" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.672" endtime="20201112 12:27:05.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.676" level="INFO">VALUE: [4.6639000000001096e-05, 4.602800000000004e-05, 4.60000000000009e-05, 4.60000000000009e-05, 4.595800000000219e-05, 4.5973000000001235e-05, 4.595799999999872e-05, 4.597200000000176e-05, 4.597199999999829e-05, 4.604100000000014e-05, 4.595800000000219e-05, 4.597200000000176e-05, 4.595800000000219e-05, 4.5987000000000805e-05, 4.598599999999786e-05, 4.5958999999998196e-05, 4.595800000000219e-05, 4.5959000000001665e-05, 4.597199999999829e-05, 4.597200000000176e-05, 4.5958999999998196e-05, 4.5959000000001665e-05, 4.595799999999872e-05, 4.597200000000176e-05, 4.60000000000009e-05, 4.598600000000133e-05, 4.595800000000219e-05, 4.599999999999743e-05, 4.5958999999998196e-05, 4.598600000000133e-05, 4.598600000000133e-05, 4.594399999999915e-05, 4.5973000000001235e-05, 4.5987000000000805e-05, 4.598600000000133e-05, 4.598600000000133e-05, 4.598600000000133e-05, 4.5973000000001235e-05, 4.598600000000133e-05, 4.597199999999829e-05, 4.598600000000133e-05, 4.5903000000003386e-05, 4.595799999999872e-05, 4.598600000000133e-05, 4.601400000000047e-05, 4.594399999999915e-05, 4.601400000000047e-05, 4.597199999999829e-05, 4.598600000000133e-05, 4.60000000000009e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.674" endtime="20201112 12:27:05.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.670" endtime="20201112 12:27:05.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.680" endtime="20201112 12:27:05.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.683" endtime="20201112 12:27:05.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.681" endtime="20201112 12:27:05.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.678" endtime="20201112 12:27:05.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.313" endtime="20201112 12:27:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.312" endtime="20201112 12:27:05.704"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.713" endtime="20201112 12:27:05.728"></status>
</kw>
<msg timestamp="20201112 12:27:05.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.711" endtime="20201112 12:27:05.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.730" endtime="20201112 12:27:05.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.732" endtime="20201112 12:27:05.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.709" endtime="20201112 12:27:05.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.706" endtime="20201112 12:27:05.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.741" endtime="20201112 12:27:06.028"></status>
</kw>
<msg timestamp="20201112 12:27:06.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.740" endtime="20201112 12:27:06.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.032" endtime="20201112 12:27:06.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.041" endtime="20201112 12:27:06.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.737" endtime="20201112 12:27:06.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.735" endtime="20201112 12:27:06.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.047" level="INFO">${RESULT} = [{'time': 0.021949708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666599999999729e-05, 'source_diff': 4.666599999999729e-05}, {'time': 0.022016931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.044" endtime="20201112 12:27:06.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.061" level="INFO">${ACCURACY} = {'diff': [4.666599999999729e-05, 4.60000000000009e-05, 4.597199999999829e-05, 4.595800000000219e-05, 4.60000000000009e-05, 4.5959000000001665e-05, 4.594399999999915e-05, 4.5902999999999916e-05, 4.5971...</msg>
<status status="PASS" starttime="20201112 12:27:06.048" endtime="20201112 12:27:06.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.065" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.064" endtime="20201112 12:27:06.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.068" level="INFO">VALUE: [4.666599999999729e-05, 4.60000000000009e-05, 4.597199999999829e-05, 4.595800000000219e-05, 4.60000000000009e-05, 4.5959000000001665e-05, 4.594399999999915e-05, 4.5902999999999916e-05, 4.597199999999829e-05, 4.598599999999786e-05, 4.597199999999829e-05, 4.5973000000001235e-05, 4.599999999999743e-05, 4.597199999999829e-05, 4.594399999999915e-05, 4.598599999999786e-05, 4.595799999999872e-05, 4.5959000000001665e-05, 4.602800000000004e-05, 4.598599999999786e-05, 4.598599999999786e-05, 4.595799999999872e-05, 4.60000000000009e-05, 4.604200000000308e-05, 4.597200000000176e-05, 4.597199999999829e-05, 4.598599999999786e-05, 4.597200000000176e-05, 4.594399999999915e-05, 4.597199999999829e-05, 4.595800000000219e-05, 4.602800000000004e-05, 4.598600000000133e-05, 4.595799999999872e-05, 4.60000000000009e-05, 4.5944999999998626e-05, 4.594399999999915e-05, 4.595799999999872e-05, 4.5973000000001235e-05, 4.595799999999872e-05, 4.598600000000133e-05, 4.5973000000001235e-05, 4.598599999999786e-05, 4.597200000000176e-05, 4.5959000000001665e-05, 4.597199999999829e-05, 4.595799999999872e-05, 4.597200000000176e-05, 4.597199999999829e-05, 4.602800000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.067" endtime="20201112 12:27:06.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.062" endtime="20201112 12:27:06.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.072" endtime="20201112 12:27:06.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.075" endtime="20201112 12:27:06.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.073" endtime="20201112 12:27:06.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.070" endtime="20201112 12:27:06.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.705" endtime="20201112 12:27:06.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.704" endtime="20201112 12:27:06.096"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.105" endtime="20201112 12:27:06.120"></status>
</kw>
<msg timestamp="20201112 12:27:06.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.103" endtime="20201112 12:27:06.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.122" endtime="20201112 12:27:06.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.124" endtime="20201112 12:27:06.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.101" endtime="20201112 12:27:06.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.099" endtime="20201112 12:27:06.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.133" endtime="20201112 12:27:06.420"></status>
</kw>
<msg timestamp="20201112 12:27:06.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022183694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.132" endtime="20201112 12:27:06.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022183694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.424" endtime="20201112 12:27:06.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.432" endtime="20201112 12:27:06.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.129" endtime="20201112 12:27:06.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.128" endtime="20201112 12:27:06.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.439" level="INFO">${RESULT} = [{'time': 0.022183694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.665200000000119e-05, 'source_diff': 4.665200000000119e-05}, {'time': 0.02226025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:06.436" endtime="20201112 12:27:06.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.454" level="INFO">${ACCURACY} = {'diff': [4.665200000000119e-05, 4.597199999999829e-05, 4.5987000000000805e-05, 4.5944999999998626e-05, 4.60269999999971e-05, 4.595799999999872e-05, 4.5987000000000805e-05, 4.597200000000176e-05, 4.59...</msg>
<status status="PASS" starttime="20201112 12:27:06.440" endtime="20201112 12:27:06.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.459" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.458" endtime="20201112 12:27:06.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.461" level="INFO">VALUE: [4.665200000000119e-05, 4.597199999999829e-05, 4.5987000000000805e-05, 4.5944999999998626e-05, 4.60269999999971e-05, 4.595799999999872e-05, 4.5987000000000805e-05, 4.597200000000176e-05, 4.592999999999958e-05, 4.597200000000176e-05, 4.5972999999997766e-05, 4.598600000000133e-05, 4.597200000000176e-05, 4.598600000000133e-05, 4.597200000000176e-05, 4.602700000000057e-05, 4.5973000000001235e-05, 4.5973000000001235e-05, 4.602800000000004e-05, 4.5973000000001235e-05, 4.602800000000004e-05, 4.602700000000057e-05, 4.595799999999872e-05, 4.597199999999829e-05, 4.597200000000176e-05, 4.598599999999786e-05, 4.597200000000176e-05, 4.597199999999829e-05, 4.5987000000000805e-05, 4.597200000000176e-05, 4.597200000000176e-05, 4.597199999999829e-05, 4.5930999999999056e-05, 4.605600000000265e-05, 4.595799999999872e-05, 4.597199999999829e-05, 4.598600000000133e-05, 4.597199999999829e-05, 4.5959000000001665e-05, 4.5959000000001665e-05, 4.602700000000057e-05, 4.592999999999958e-05, 4.598600000000133e-05, 4.595800000000219e-05, 4.597200000000176e-05, 4.595799999999872e-05, 4.5973000000001235e-05, 4.5930999999999056e-05, 4.597200000000176e-05, 4.595800000000219e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.460" endtime="20201112 12:27:06.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.455" endtime="20201112 12:27:06.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.465" endtime="20201112 12:27:06.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.468" endtime="20201112 12:27:06.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.467" endtime="20201112 12:27:06.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.463" endtime="20201112 12:27:06.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.097" endtime="20201112 12:27:06.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.096" endtime="20201112 12:27:06.489"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.498" endtime="20201112 12:27:06.513"></status>
</kw>
<msg timestamp="20201112 12:27:06.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.496" endtime="20201112 12:27:06.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.515" endtime="20201112 12:27:06.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.517" endtime="20201112 12:27:06.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.494" endtime="20201112 12:27:06.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.492" endtime="20201112 12:27:06.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.526" endtime="20201112 12:27:06.814"></status>
</kw>
<msg timestamp="20201112 12:27:06.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.525" endtime="20201112 12:27:06.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.818" endtime="20201112 12:27:06.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.827" endtime="20201112 12:27:06.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.522" endtime="20201112 12:27:06.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.521" endtime="20201112 12:27:06.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.833" level="INFO">${RESULT} = [{'time': 0.021951458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.665200000000119e-05, 'source_diff': 4.665200000000119e-05}, {'time': 0.022010917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.830" endtime="20201112 12:27:06.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.847" level="INFO">${ACCURACY} = {'diff': [4.665200000000119e-05, 4.601400000000047e-05, 4.5959000000001665e-05, 4.597200000000176e-05, 4.5959000000001665e-05, 5.08339999999996e-05, 4.597200000000176e-05, 4.5916999999999486e-05, 4.59...</msg>
<status status="PASS" starttime="20201112 12:27:06.834" endtime="20201112 12:27:06.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.851" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.850" endtime="20201112 12:27:06.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.854" level="INFO">VALUE: [4.665200000000119e-05, 4.601400000000047e-05, 4.5959000000001665e-05, 4.597200000000176e-05, 4.5959000000001665e-05, 5.08339999999996e-05, 4.597200000000176e-05, 4.5916999999999486e-05, 4.599999999999743e-05, 5.083300000000013e-05, 4.597200000000176e-05, 4.597199999999829e-05, 4.5959000000001665e-05, 4.601400000000047e-05, 4.598599999999786e-05, 4.5959000000001665e-05, 5.081999999999656e-05, 4.597200000000176e-05, 5.08339999999996e-05, 4.597200000000176e-05, 5.080600000000046e-05, 5.080500000000099e-05, 5.082000000000003e-05, 5.081900000000056e-05, 5.081900000000056e-05, 5.081900000000056e-05, 4.598600000000133e-05, 5.084799999999917e-05, 4.5958999999998196e-05, 4.595799999999872e-05, 5.082000000000003e-05, 4.5958999999998196e-05, 4.595799999999872e-05, 4.5959000000001665e-05, 4.595799999999872e-05, 4.5958999999998196e-05, 4.597200000000176e-05, 4.5973000000001235e-05, 4.597199999999829e-05, 4.597200000000176e-05, 4.597200000000176e-05, 4.595800000000219e-05, 5.082000000000003e-05, 4.598600000000133e-05, 4.5959000000001665e-05, 5.083300000000013e-05, 4.597200000000176e-05, 4.5973000000001235e-05, 4.597199999999829e-05, 5.084799999999917e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.852" endtime="20201112 12:27:06.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.848" endtime="20201112 12:27:06.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.857" endtime="20201112 12:27:06.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.861" endtime="20201112 12:27:06.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.859" endtime="20201112 12:27:06.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.856" endtime="20201112 12:27:06.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.490" endtime="20201112 12:27:06.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.490" endtime="20201112 12:27:06.882"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.891" endtime="20201112 12:27:06.906"></status>
</kw>
<msg timestamp="20201112 12:27:06.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.889" endtime="20201112 12:27:06.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.908" endtime="20201112 12:27:06.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.910" endtime="20201112 12:27:06.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.887" endtime="20201112 12:27:06.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.885" endtime="20201112 12:27:06.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.919" endtime="20201112 12:27:07.225"></status>
</kw>
<msg timestamp="20201112 12:27:07.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.918" endtime="20201112 12:27:07.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.229" endtime="20201112 12:27:07.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.237" endtime="20201112 12:27:07.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.915" endtime="20201112 12:27:07.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.913" endtime="20201112 12:27:07.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.244" level="INFO">${RESULT} = [{'time': 0.022185792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.145900000000023e-05, 'source_diff': 5.145900000000023e-05}, {'time': 0.022263486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.241" endtime="20201112 12:27:07.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.257" level="INFO">${ACCURACY} = {'diff': [5.145900000000023e-05, 5.086099999999927e-05, 5.081900000000056e-05, 5.08339999999996e-05, 5.086199999999874e-05, 5.086099999999927e-05, 5.086100000000274e-05, 5.077700000000185e-05, 5.08339...</msg>
<status status="PASS" starttime="20201112 12:27:07.245" endtime="20201112 12:27:07.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.261" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.260" endtime="20201112 12:27:07.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.264" level="INFO">VALUE: [5.145900000000023e-05, 5.086099999999927e-05, 5.081900000000056e-05, 5.08339999999996e-05, 5.086199999999874e-05, 5.086099999999927e-05, 5.086100000000274e-05, 5.077700000000185e-05, 5.08339999999996e-05, 5.08469999999997e-05, 5.079100000000142e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.083300000000013e-05, 5.08469999999997e-05, 5.079100000000142e-05, 5.080600000000046e-05, 5.087500000000231e-05, 5.080500000000099e-05, 5.083300000000013e-05, 5.081900000000056e-05, 5.081900000000056e-05, 5.081900000000056e-05, 5.081900000000056e-05, 5.079099999999795e-05, 5.076400000000175e-05, 5.0736999999998617e-05, 5.08469999999997e-05, 5.077800000000132e-05, 5.082000000000003e-05, 5.083300000000013e-05, 5.086200000000221e-05, 5.079200000000089e-05, 5.082000000000003e-05, 5.086099999999927e-05, 5.081900000000056e-05, 5.084799999999917e-05, 5.084800000000264e-05, 5.08469999999997e-05, 5.080500000000099e-05, 5.080600000000046e-05, 5.08469999999997e-05, 5.081900000000056e-05, 5.083300000000013e-05, 5.08339999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.263" endtime="20201112 12:27:07.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.258" endtime="20201112 12:27:07.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.268" endtime="20201112 12:27:07.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.271" endtime="20201112 12:27:07.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.269" endtime="20201112 12:27:07.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.266" endtime="20201112 12:27:07.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.883" endtime="20201112 12:27:07.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.882" endtime="20201112 12:27:07.292"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.300" endtime="20201112 12:27:07.316"></status>
</kw>
<msg timestamp="20201112 12:27:07.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.299" endtime="20201112 12:27:07.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.317" endtime="20201112 12:27:07.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.320" endtime="20201112 12:27:07.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.296" endtime="20201112 12:27:07.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.294" endtime="20201112 12:27:07.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.329" endtime="20201112 12:27:07.615"></status>
</kw>
<msg timestamp="20201112 12:27:07.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.327" endtime="20201112 12:27:07.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.619" endtime="20201112 12:27:07.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.627" endtime="20201112 12:27:07.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.324" endtime="20201112 12:27:07.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.323" endtime="20201112 12:27:07.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.634" level="INFO">${RESULT} = [{'time': 0.021790222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.148599999999989e-05, 'source_diff': 5.148599999999989e-05}, {'time': 0.021859486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.630" endtime="20201112 12:27:07.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.647" level="INFO">${ACCURACY} = {'diff': [5.148599999999989e-05, 5.081900000000056e-05, 5.082000000000003e-05, 5.077800000000132e-05, 5.08469999999997e-05, 5.084799999999917e-05, 5.083299999999666e-05, 5.083300000000013e-05, 5.08339...</msg>
<status status="PASS" starttime="20201112 12:27:07.635" endtime="20201112 12:27:07.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.651" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.650" endtime="20201112 12:27:07.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.654" level="INFO">VALUE: [5.148599999999989e-05, 5.081900000000056e-05, 5.082000000000003e-05, 5.077800000000132e-05, 5.08469999999997e-05, 5.084799999999917e-05, 5.083299999999666e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.081900000000056e-05, 5.086099999999927e-05, 5.081900000000056e-05, 5.083300000000013e-05, 5.080500000000099e-05, 5.084700000000317e-05, 5.084700000000317e-05, 5.083300000000013e-05, 5.087499999999884e-05, 5.081900000000056e-05, 5.083300000000013e-05, 5.082000000000003e-05, 5.080600000000046e-05, 5.086200000000221e-05, 5.081900000000056e-05, 5.081900000000056e-05, 5.086099999999927e-05, 5.080600000000046e-05, 5.0887999999998934e-05, 5.081899999999709e-05, 5.082000000000003e-05, 5.080499999999752e-05, 5.08469999999997e-05, 5.082000000000003e-05, 5.083300000000013e-05, 5.080600000000046e-05, 5.081900000000056e-05, 5.080599999999699e-05, 5.082000000000003e-05, 5.082000000000003e-05, 5.077800000000132e-05, 5.082000000000003e-05, 5.084799999999917e-05, 5.080600000000046e-05, 5.079200000000089e-05, 5.082000000000003e-05, 5.081900000000056e-05, 5.087499999999884e-05, 5.083300000000013e-05, 5.081900000000056e-05, 5.08339999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.652" endtime="20201112 12:27:07.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.648" endtime="20201112 12:27:07.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.657" endtime="20201112 12:27:07.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.661" endtime="20201112 12:27:07.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.659" endtime="20201112 12:27:07.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.656" endtime="20201112 12:27:07.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.293" endtime="20201112 12:27:07.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.292" endtime="20201112 12:27:07.681"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.690" endtime="20201112 12:27:07.706"></status>
</kw>
<msg timestamp="20201112 12:27:07.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.688" endtime="20201112 12:27:07.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.707" endtime="20201112 12:27:07.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.710" endtime="20201112 12:27:07.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.686" endtime="20201112 12:27:07.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.684" endtime="20201112 12:27:07.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.718" endtime="20201112 12:27:08.005"></status>
</kw>
<msg timestamp="20201112 12:27:08.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.717" endtime="20201112 12:27:08.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.010" endtime="20201112 12:27:08.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.018" endtime="20201112 12:27:08.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.714" endtime="20201112 12:27:08.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.713" endtime="20201112 12:27:08.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.024" level="INFO">${RESULT} = [{'time': 0.021700306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.154199999999817e-05, 'source_diff': 5.154199999999817e-05}, {'time': 0.021766125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:08.021" endtime="20201112 12:27:08.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.039" level="INFO">${ACCURACY} = {'diff': [5.154199999999817e-05, 5.083300000000013e-05, 5.087500000000231e-05, 5.087499999999884e-05, 5.081900000000056e-05, 5.083400000000307e-05, 5.08339999999996e-05, 5.08469999999997e-05, 5.084699...</msg>
<status status="PASS" starttime="20201112 12:27:08.025" endtime="20201112 12:27:08.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.044" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.043" endtime="20201112 12:27:08.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.046" level="INFO">VALUE: [5.154199999999817e-05, 5.083300000000013e-05, 5.087500000000231e-05, 5.087499999999884e-05, 5.081900000000056e-05, 5.083400000000307e-05, 5.08339999999996e-05, 5.08469999999997e-05, 5.08469999999997e-05, 5.082000000000003e-05, 5.082000000000003e-05, 5.076399999999828e-05, 5.080600000000046e-05, 5.081900000000056e-05, 5.081899999999709e-05, 5.08469999999997e-05, 5.08469999999997e-05, 5.081900000000056e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.081899999999709e-05, 5.08339999999996e-05, 5.083300000000013e-05, 5.087500000000231e-05, 5.083300000000013e-05, 5.079200000000089e-05, 5.083300000000013e-05, 5.08469999999997e-05, 5.08339999999996e-05, 5.08339999999996e-05, 5.086199999999874e-05, 5.081900000000056e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.086099999999927e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.082000000000003e-05, 5.081900000000056e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.08469999999997e-05, 5.081900000000056e-05, 5.080500000000099e-05, 5.082000000000003e-05, 5.08339999999996e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.074999999999871e-05, 5.086099999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.045" endtime="20201112 12:27:08.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.040" endtime="20201112 12:27:08.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.050" endtime="20201112 12:27:08.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.053" endtime="20201112 12:27:08.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.051" endtime="20201112 12:27:08.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.048" endtime="20201112 12:27:08.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.682" endtime="20201112 12:27:08.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.682" endtime="20201112 12:27:08.074"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.082" endtime="20201112 12:27:08.098"></status>
</kw>
<msg timestamp="20201112 12:27:08.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.081" endtime="20201112 12:27:08.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.099" endtime="20201112 12:27:08.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.102" endtime="20201112 12:27:08.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.078" endtime="20201112 12:27:08.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.076" endtime="20201112 12:27:08.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.111" endtime="20201112 12:27:08.397"></status>
</kw>
<msg timestamp="20201112 12:27:08.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.109" endtime="20201112 12:27:08.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.401" endtime="20201112 12:27:08.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.409" endtime="20201112 12:27:08.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.107" endtime="20201112 12:27:08.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.105" endtime="20201112 12:27:08.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.416" level="INFO">${RESULT} = [{'time': 0.021811222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15140000000025e-05, 'source_diff': 5.15140000000025e-05}, {'time': 0.021877056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:08.413" endtime="20201112 12:27:08.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.429" level="INFO">${ACCURACY} = {'diff': [5.15140000000025e-05, 5.080600000000046e-05, 5.082000000000003e-05, 5.08339999999996e-05, 5.086099999999927e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.081900000000056e-05, 5.0805000...</msg>
<status status="PASS" starttime="20201112 12:27:08.417" endtime="20201112 12:27:08.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.434" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.433" endtime="20201112 12:27:08.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.436" level="INFO">VALUE: [5.15140000000025e-05, 5.080600000000046e-05, 5.082000000000003e-05, 5.08339999999996e-05, 5.086099999999927e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.081900000000056e-05, 5.080500000000099e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.082000000000003e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.08469999999997e-05, 5.083300000000013e-05, 5.081900000000056e-05, 5.08339999999996e-05, 5.081900000000056e-05, 5.082000000000003e-05, 5.080499999999752e-05, 5.080600000000046e-05, 5.083300000000013e-05, 5.083299999999666e-05, 5.081900000000056e-05, 5.084700000000317e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.082000000000003e-05, 5.074999999999871e-05, 5.080500000000099e-05, 5.076399999999828e-05, 5.082000000000003e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.081900000000056e-05, 5.080600000000046e-05, 5.076400000000175e-05, 5.081900000000056e-05, 5.08469999999997e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.083400000000307e-05, 5.08339999999996e-05, 5.08469999999997e-05, 5.079100000000142e-05, 5.08339999999996e-05, 5.082000000000003e-05, 5.083300000000013e-05, 5.087499999999884e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.435" endtime="20201112 12:27:08.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.430" endtime="20201112 12:27:08.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.440" endtime="20201112 12:27:08.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.443" endtime="20201112 12:27:08.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.441" endtime="20201112 12:27:08.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.438" endtime="20201112 12:27:08.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.075" endtime="20201112 12:27:08.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.074" endtime="20201112 12:27:08.464"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.472" endtime="20201112 12:27:08.488"></status>
</kw>
<msg timestamp="20201112 12:27:08.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.471" endtime="20201112 12:27:08.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.489" endtime="20201112 12:27:08.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.492" endtime="20201112 12:27:08.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.468" endtime="20201112 12:27:08.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.466" endtime="20201112 12:27:08.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.501" endtime="20201112 12:27:08.787"></status>
</kw>
<msg timestamp="20201112 12:27:08.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.499" endtime="20201112 12:27:08.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.791" endtime="20201112 12:27:08.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.799" endtime="20201112 12:27:08.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.497" endtime="20201112 12:27:08.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.495" endtime="20201112 12:27:08.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.806" level="INFO">${RESULT} = [{'time': 0.021704722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15279999999986e-05, 'source_diff': 5.15279999999986e-05}, {'time': 0.021787681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:08.802" endtime="20201112 12:27:08.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.819" level="INFO">${ACCURACY} = {'diff': [5.15279999999986e-05, 5.082000000000003e-05, 5.073599999999914e-05, 5.08469999999997e-05, 5.080600000000046e-05, 5.5665999999999355e-05, 5.087499999999884e-05, 5.566699999999883e-05, 5.56670...</msg>
<status status="PASS" starttime="20201112 12:27:08.807" endtime="20201112 12:27:08.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.823" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.822" endtime="20201112 12:27:08.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.826" level="INFO">VALUE: [5.15279999999986e-05, 5.082000000000003e-05, 5.073599999999914e-05, 5.08469999999997e-05, 5.080600000000046e-05, 5.5665999999999355e-05, 5.087499999999884e-05, 5.566699999999883e-05, 5.56670000000023e-05, 5.569500000000144e-05, 5.08339999999996e-05, 5.083300000000013e-05, 5.082000000000003e-05, 5.08339999999996e-05, 5.080500000000099e-05, 5.566699999999883e-05, 5.569500000000144e-05, 5.08339999999996e-05, 5.080600000000046e-05, 5.083300000000013e-05, 5.086200000000221e-05, 5.081900000000056e-05, 5.5694000000001964e-05, 5.5679999999998925e-05, 5.083300000000013e-05, 5.5693999999998495e-05, 5.081900000000056e-05, 5.082000000000003e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.568100000000187e-05, 5.082000000000003e-05, 5.081900000000056e-05, 5.570900000000101e-05, 5.566699999999883e-05, 5.084799999999917e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.081900000000056e-05, 5.568100000000187e-05, 5.5680000000002394e-05, 5.086099999999927e-05, 5.081899999999709e-05, 5.081900000000056e-05, 5.082000000000003e-05, 5.082000000000003e-05, 5.083300000000013e-05, 5.081900000000056e-05, 5.569500000000144e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.824" endtime="20201112 12:27:08.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.820" endtime="20201112 12:27:08.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.846" endtime="20201112 12:27:08.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.849" endtime="20201112 12:27:08.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.848" endtime="20201112 12:27:08.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.844" endtime="20201112 12:27:08.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.465" endtime="20201112 12:27:08.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.464" endtime="20201112 12:27:08.870"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.879" endtime="20201112 12:27:08.895"></status>
</kw>
<msg timestamp="20201112 12:27:08.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.877" endtime="20201112 12:27:08.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.896" endtime="20201112 12:27:08.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.899" endtime="20201112 12:27:08.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.875" endtime="20201112 12:27:08.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.873" endtime="20201112 12:27:08.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.909" endtime="20201112 12:27:09.195"></status>
</kw>
<msg timestamp="20201112 12:27:09.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.907" endtime="20201112 12:27:09.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.199" endtime="20201112 12:27:09.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.208" endtime="20201112 12:27:09.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.904" endtime="20201112 12:27:09.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.902" endtime="20201112 12:27:09.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.214" level="INFO">${RESULT} = [{'time': 0.021799708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.633300000000216e-05, 'source_diff': 5.633300000000216e-05}, {'time': 0.021886292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.211" endtime="20201112 12:27:09.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.228" level="INFO">${ACCURACY} = {'diff': [5.633300000000216e-05, 5.569500000000144e-05, 5.569500000000144e-05, 5.566699999999883e-05, 5.56670000000023e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.568100000000187e-05, 5.569399...</msg>
<status status="PASS" starttime="20201112 12:27:09.215" endtime="20201112 12:27:09.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.232" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.231" endtime="20201112 12:27:09.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.234" level="INFO">VALUE: [5.633300000000216e-05, 5.569500000000144e-05, 5.569500000000144e-05, 5.566699999999883e-05, 5.56670000000023e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.568100000000187e-05, 5.5693999999998495e-05, 5.569499999999797e-05, 5.566699999999883e-05, 5.570899999999754e-05, 5.569500000000144e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.5708000000001534e-05, 5.5694000000001964e-05, 5.5680000000002394e-05, 5.565299999999926e-05, 5.5693999999998495e-05, 5.570900000000101e-05, 5.566699999999883e-05, 5.56809999999984e-05, 5.5694000000001964e-05, 5.5679999999998925e-05, 5.570899999999754e-05, 5.566699999999883e-05, 5.5665999999999355e-05, 5.566699999999883e-05, 5.5679999999998925e-05, 5.56809999999984e-05, 5.569499999999797e-05, 5.5693999999998495e-05, 5.5736000000000674e-05, 5.569499999999797e-05, 5.5694000000001964e-05, 5.5665999999999355e-05, 5.570899999999754e-05, 5.56809999999984e-05, 5.569500000000144e-05, 5.562500000000012e-05, 5.5707999999998065e-05, 5.569499999999797e-05, 5.569500000000144e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.569500000000144e-05, 5.56809999999984e-05, 5.5708000000001534e-05, 5.56809999999984e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.233" endtime="20201112 12:27:09.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.228" endtime="20201112 12:27:09.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.238" endtime="20201112 12:27:09.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.241" endtime="20201112 12:27:09.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.240" endtime="20201112 12:27:09.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.236" endtime="20201112 12:27:09.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.871" endtime="20201112 12:27:09.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.871" endtime="20201112 12:27:09.262"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.271" endtime="20201112 12:27:09.287"></status>
</kw>
<msg timestamp="20201112 12:27:09.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.269" endtime="20201112 12:27:09.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.288" endtime="20201112 12:27:09.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.291" endtime="20201112 12:27:09.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.267" endtime="20201112 12:27:09.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.265" endtime="20201112 12:27:09.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.300" endtime="20201112 12:27:09.585"></status>
</kw>
<msg timestamp="20201112 12:27:09.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:09.298" endtime="20201112 12:27:09.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:09.590" endtime="20201112 12:27:09.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.598" endtime="20201112 12:27:09.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.295" endtime="20201112 12:27:09.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.294" endtime="20201112 12:27:09.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.605" level="INFO">${RESULT} = [{'time': 0.02175475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.63610000000013e-05, 'source_diff': 5.63610000000013e-05}, {'time': 0.021836375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:09.601" endtime="20201112 12:27:09.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.619" level="INFO">${ACCURACY} = {'diff': [5.63610000000013e-05, 5.5708000000001534e-05, 5.5680000000002394e-05, 5.56809999999984e-05, 5.5679999999998925e-05, 5.5736000000000674e-05, 5.5721999999997635e-05, 5.56809999999984e-05, 5.56...</msg>
<status status="PASS" starttime="20201112 12:27:09.606" endtime="20201112 12:27:09.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.624" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.623" endtime="20201112 12:27:09.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.626" level="INFO">VALUE: [5.63610000000013e-05, 5.5708000000001534e-05, 5.5680000000002394e-05, 5.56809999999984e-05, 5.5679999999998925e-05, 5.5736000000000674e-05, 5.5721999999997635e-05, 5.56809999999984e-05, 5.569500000000144e-05, 5.569500000000144e-05, 5.568100000000187e-05, 5.5665999999999355e-05, 5.5707999999998065e-05, 5.5693999999998495e-05, 5.569499999999797e-05, 5.5679999999998925e-05, 5.570900000000101e-05, 5.5694000000001964e-05, 5.569499999999797e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.5680000000002394e-05, 5.570899999999754e-05, 5.5693999999998495e-05, 5.5707999999998065e-05, 5.56809999999984e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.5679999999998925e-05, 5.5679999999998925e-05, 5.576300000000034e-05, 5.570900000000101e-05, 5.5707999999998065e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.5680000000002394e-05, 5.572300000000058e-05, 5.5693999999998495e-05, 5.5694000000001964e-05, 5.5707999999998065e-05, 5.569499999999797e-05, 5.570900000000101e-05, 5.565299999999926e-05, 5.568100000000187e-05, 5.569500000000144e-05, 5.5680000000002394e-05, 5.5694000000001964e-05, 5.568100000000187e-05, 5.5694000000001964e-05, 5.569500000000144e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.625" endtime="20201112 12:27:09.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.620" endtime="20201112 12:27:09.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.630" endtime="20201112 12:27:09.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.633" endtime="20201112 12:27:09.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.632" endtime="20201112 12:27:09.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.628" endtime="20201112 12:27:09.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.263" endtime="20201112 12:27:09.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.263" endtime="20201112 12:27:09.654"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.663" endtime="20201112 12:27:09.678"></status>
</kw>
<msg timestamp="20201112 12:27:09.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.661" endtime="20201112 12:27:09.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.680" endtime="20201112 12:27:09.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.682" endtime="20201112 12:27:09.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.659" endtime="20201112 12:27:09.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.657" endtime="20201112 12:27:09.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.691" endtime="20201112 12:27:09.977"></status>
</kw>
<msg timestamp="20201112 12:27:09.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.690" endtime="20201112 12:27:09.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.982" endtime="20201112 12:27:09.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.990" endtime="20201112 12:27:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.687" endtime="20201112 12:27:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.685" endtime="20201112 12:27:09.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.997" level="INFO">${RESULT} = [{'time': 0.021749417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.637500000000087e-05, 'source_diff': 5.637500000000087e-05}, {'time': 0.021828847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.993" endtime="20201112 12:27:09.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.010" level="INFO">${ACCURACY} = {'diff': [5.637500000000087e-05, 5.5693999999998495e-05, 5.569500000000144e-05, 5.570900000000101e-05, 5.5707999999998065e-05, 5.56809999999984e-05, 5.5722000000001104e-05, 5.569500000000144e-05, 5.57...</msg>
<status status="PASS" starttime="20201112 12:27:09.998" endtime="20201112 12:27:10.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.014" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.013" endtime="20201112 12:27:10.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.017" level="INFO">VALUE: [5.637500000000087e-05, 5.5693999999998495e-05, 5.569500000000144e-05, 5.570900000000101e-05, 5.5707999999998065e-05, 5.56809999999984e-05, 5.5722000000001104e-05, 5.569500000000144e-05, 5.5750000000000244e-05, 5.569500000000144e-05, 5.5679999999998925e-05, 5.5707999999998065e-05, 5.568100000000187e-05, 5.5736000000000674e-05, 5.5694000000001964e-05, 5.5763999999999814e-05, 5.569499999999797e-05, 5.568100000000187e-05, 5.5679999999998925e-05, 5.56670000000023e-05, 5.5707999999998065e-05, 5.5694000000001964e-05, 5.566699999999883e-05, 5.56670000000023e-05, 5.5722000000001104e-05, 5.5680000000002394e-05, 5.569499999999797e-05, 5.569499999999797e-05, 5.568100000000187e-05, 5.568100000000187e-05, 5.566699999999883e-05, 5.5708000000001534e-05, 5.5679999999998925e-05, 5.569499999999797e-05, 5.569500000000144e-05, 5.56670000000023e-05, 5.568100000000187e-05, 5.570899999999754e-05, 5.5665999999999355e-05, 5.5651999999999785e-05, 5.568100000000187e-05, 5.56809999999984e-05, 5.5707999999998065e-05, 5.5694000000001964e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.569499999999797e-05, 5.5679999999998925e-05, 5.5693999999998495e-05, 5.569499999999797e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.015" endtime="20201112 12:27:10.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.011" endtime="20201112 12:27:10.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.020" endtime="20201112 12:27:10.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.024" endtime="20201112 12:27:10.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.022" endtime="20201112 12:27:10.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.019" endtime="20201112 12:27:10.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.655" endtime="20201112 12:27:10.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.654" endtime="20201112 12:27:10.045"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.053" endtime="20201112 12:27:10.069"></status>
</kw>
<msg timestamp="20201112 12:27:10.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.052" endtime="20201112 12:27:10.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.070" endtime="20201112 12:27:10.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.073" endtime="20201112 12:27:10.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.049" endtime="20201112 12:27:10.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.047" endtime="20201112 12:27:10.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.082" endtime="20201112 12:27:10.368"></status>
</kw>
<msg timestamp="20201112 12:27:10.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.080" endtime="20201112 12:27:10.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.372" endtime="20201112 12:27:10.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.381" endtime="20201112 12:27:10.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.078" endtime="20201112 12:27:10.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.076" endtime="20201112 12:27:10.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.387" level="INFO">${RESULT} = [{'time': 0.021709083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.638900000000044e-05, 'source_diff': 5.638900000000044e-05}, {'time': 0.021780708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.384" endtime="20201112 12:27:10.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.400" level="INFO">${ACCURACY} = {'diff': [5.638900000000044e-05, 5.5693999999998495e-05, 5.56809999999984e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.5680000000002394e-05, 5.566699999999883e-05, 5.56809999999984e-05, 5.56...</msg>
<status status="PASS" starttime="20201112 12:27:10.388" endtime="20201112 12:27:10.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.405" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.404" endtime="20201112 12:27:10.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.407" level="INFO">VALUE: [5.638900000000044e-05, 5.5693999999998495e-05, 5.56809999999984e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.5680000000002394e-05, 5.566699999999883e-05, 5.56809999999984e-05, 5.569499999999797e-05, 5.5693999999998495e-05, 5.569500000000144e-05, 5.56809999999984e-05, 5.5707999999998065e-05, 5.5707999999998065e-05, 5.569499999999797e-05, 5.56809999999984e-05, 5.569500000000144e-05, 5.5694000000001964e-05, 5.570900000000101e-05, 5.562500000000012e-05, 5.569500000000144e-05, 5.5708000000001534e-05, 5.569500000000144e-05, 5.5693999999998495e-05, 5.5707999999998065e-05, 5.56670000000023e-05, 5.5694000000001964e-05, 5.570900000000101e-05, 5.5638000000000215e-05, 5.5679999999998925e-05, 5.5707999999998065e-05, 5.5693999999998495e-05, 5.5679999999998925e-05, 5.5693999999998495e-05, 5.5666000000002824e-05, 5.566699999999883e-05, 5.5694000000001964e-05, 5.566699999999883e-05, 5.5694000000001964e-05, 5.565299999999926e-05, 5.56809999999984e-05, 5.568100000000187e-05, 5.569500000000144e-05, 5.5665999999999355e-05, 5.569499999999797e-05, 5.568100000000187e-05, 5.5763999999999814e-05, 5.5693999999998495e-05, 5.565299999999926e-05, 5.569500000000144e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.406" endtime="20201112 12:27:10.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.401" endtime="20201112 12:27:10.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.411" endtime="20201112 12:27:10.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.414" endtime="20201112 12:27:10.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.413" endtime="20201112 12:27:10.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.409" endtime="20201112 12:27:10.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.046" endtime="20201112 12:27:10.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.045" endtime="20201112 12:27:10.435"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.444" endtime="20201112 12:27:10.460"></status>
</kw>
<msg timestamp="20201112 12:27:10.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.442" endtime="20201112 12:27:10.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.461" endtime="20201112 12:27:10.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.463" endtime="20201112 12:27:10.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.440" endtime="20201112 12:27:10.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.438" endtime="20201112 12:27:10.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.472" endtime="20201112 12:27:10.758"></status>
</kw>
<msg timestamp="20201112 12:27:10.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.471" endtime="20201112 12:27:10.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.762" endtime="20201112 12:27:10.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.771" endtime="20201112 12:27:10.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.468" endtime="20201112 12:27:10.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.467" endtime="20201112 12:27:10.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.777" level="INFO">${RESULT} = [{'time': 0.021589514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.637500000000087e-05, 'source_diff': 5.637500000000087e-05}, {'time': 0.021676611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.774" endtime="20201112 12:27:10.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.790" level="INFO">${ACCURACY} = {'diff': [5.637500000000087e-05, 6.05689999999999e-05, 5.56670000000023e-05, 5.5680000000002394e-05, 5.5666000000002824e-05, 6.0528000000000665e-05, 6.0542000000000235e-05, 5.5693999999998495e-05, 6.0...</msg>
<status status="PASS" starttime="20201112 12:27:10.778" endtime="20201112 12:27:10.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.795" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.794" endtime="20201112 12:27:10.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.797" level="INFO">VALUE: [5.637500000000087e-05, 6.05689999999999e-05, 5.56670000000023e-05, 5.5680000000002394e-05, 5.5666000000002824e-05, 6.0528000000000665e-05, 6.0542000000000235e-05, 5.5693999999998495e-05, 6.0555999999999804e-05, 6.05689999999999e-05, 6.0513999999997625e-05, 6.05689999999999e-05, 5.56809999999984e-05, 6.055500000000033e-05, 5.5736000000000674e-05, 5.5707999999998065e-05, 5.5736000000000674e-05, 6.0542000000000235e-05, 5.5694000000001964e-05, 6.0541999999996765e-05, 6.055500000000033e-05, 5.569500000000144e-05, 6.055500000000033e-05, 5.568100000000187e-05, 6.054100000000076e-05, 6.0528000000000665e-05, 5.568100000000187e-05, 5.56809999999984e-05, 5.568100000000187e-05, 5.5694000000001964e-05, 6.0528000000000665e-05, 6.054099999999729e-05, 5.570900000000101e-05, 5.5694000000001964e-05, 6.052699999999772e-05, 5.566699999999883e-05, 6.055500000000033e-05, 5.5708000000001534e-05, 6.055500000000033e-05, 5.5736000000000674e-05, 6.0542000000000235e-05, 6.055500000000033e-05, 5.5679999999998925e-05, 6.0499999999998055e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.569499999999797e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.054100000000076e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.796" endtime="20201112 12:27:10.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.791" endtime="20201112 12:27:10.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.801" endtime="20201112 12:27:10.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.804" endtime="20201112 12:27:10.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.803" endtime="20201112 12:27:10.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.799" endtime="20201112 12:27:10.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.436" endtime="20201112 12:27:10.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.436" endtime="20201112 12:27:10.825"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.834" endtime="20201112 12:27:10.850"></status>
</kw>
<msg timestamp="20201112 12:27:10.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.832" endtime="20201112 12:27:10.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.851" endtime="20201112 12:27:10.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.854" endtime="20201112 12:27:10.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.830" endtime="20201112 12:27:10.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.828" endtime="20201112 12:27:10.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.863" endtime="20201112 12:27:11.149"></status>
</kw>
<msg timestamp="20201112 12:27:11.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.861" endtime="20201112 12:27:11.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.153" endtime="20201112 12:27:11.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.162" endtime="20201112 12:27:11.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.859" endtime="20201112 12:27:11.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.857" endtime="20201112 12:27:11.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.168" level="INFO">${RESULT} = [{'time': 0.021769083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.125000000000227e-05, 'source_diff': 6.125000000000227e-05}, {'time': 0.02185525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:11.165" endtime="20201112 12:27:11.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.183" level="INFO">${ACCURACY} = {'diff': [6.125000000000227e-05, 6.05689999999999e-05, 6.054100000000076e-05, 6.0555999999999804e-05, 6.058299999999947e-05, 6.061100000000208e-05, 6.054099999999729e-05, 6.0570000000002844e-05, 6.058...</msg>
<status status="PASS" starttime="20201112 12:27:11.169" endtime="20201112 12:27:11.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.187" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.186" endtime="20201112 12:27:11.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.190" level="INFO">VALUE: [6.125000000000227e-05, 6.05689999999999e-05, 6.054100000000076e-05, 6.0555999999999804e-05, 6.058299999999947e-05, 6.061100000000208e-05, 6.054099999999729e-05, 6.0570000000002844e-05, 6.0584000000002414e-05, 6.0555999999999804e-05, 6.0513999999997625e-05, 6.054100000000076e-05, 6.055500000000033e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.058299999999947e-05, 6.0584000000002414e-05, 6.0528000000000665e-05, 6.0555999999999804e-05, 6.061100000000208e-05, 6.055500000000033e-05, 6.059699999999904e-05, 6.052700000000119e-05, 6.0542000000000235e-05, 6.055500000000033e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.055500000000033e-05, 6.0555999999999804e-05, 6.054100000000076e-05, 6.054100000000076e-05, 6.054100000000076e-05, 6.054099999999729e-05, 6.0527999999997195e-05, 6.0542000000000235e-05, 6.0555999999999804e-05, 6.0569999999999374e-05, 6.055500000000033e-05, 6.054100000000076e-05, 6.0555999999999804e-05, 6.0485999999998485e-05, 6.055500000000033e-05, 6.0542000000000235e-05, 6.055500000000033e-05, 6.052700000000119e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.0500000000001525e-05, 6.0555999999999804e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.189" endtime="20201112 12:27:11.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.184" endtime="20201112 12:27:11.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.193" endtime="20201112 12:27:11.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.197" endtime="20201112 12:27:11.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.195" endtime="20201112 12:27:11.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.192" endtime="20201112 12:27:11.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.826" endtime="20201112 12:27:11.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.826" endtime="20201112 12:27:11.218"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.226" endtime="20201112 12:27:11.242"></status>
</kw>
<msg timestamp="20201112 12:27:11.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.225" endtime="20201112 12:27:11.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.244" endtime="20201112 12:27:11.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.246" endtime="20201112 12:27:11.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.222" endtime="20201112 12:27:11.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.220" endtime="20201112 12:27:11.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.255" endtime="20201112 12:27:11.542"></status>
</kw>
<msg timestamp="20201112 12:27:11.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021670167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.253" endtime="20201112 12:27:11.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021670167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.546" endtime="20201112 12:27:11.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.554" endtime="20201112 12:27:11.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.251" endtime="20201112 12:27:11.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.249" endtime="20201112 12:27:11.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.561" level="INFO">${RESULT} = [{'time': 0.021670167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.122299999999914e-05, 'source_diff': 6.122299999999914e-05}, {'time': 0.021749764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.558" endtime="20201112 12:27:11.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.574" level="INFO">${ACCURACY} = {'diff': [6.122299999999914e-05, 6.0514000000001095e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.0555999999999804e-05, 6.052700000000119e-05, 6.0555999999999804e-05, ...</msg>
<status status="PASS" starttime="20201112 12:27:11.562" endtime="20201112 12:27:11.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.579" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.578" endtime="20201112 12:27:11.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.581" level="INFO">VALUE: [6.122299999999914e-05, 6.0514000000001095e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.0555999999999804e-05, 6.052700000000119e-05, 6.0555999999999804e-05, 6.0528000000000665e-05, 6.0598000000001984e-05, 6.052699999999772e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.047299999999839e-05, 6.052700000000119e-05, 6.0499999999998055e-05, 6.0528000000000665e-05, 6.0555999999999804e-05, 6.0555999999999804e-05, 6.052700000000119e-05, 6.0527999999997195e-05, 6.0555999999999804e-05, 6.0542000000000235e-05, 6.055500000000033e-05, 6.0570000000002844e-05, 6.0555999999999804e-05, 6.0542000000000235e-05, 6.054100000000076e-05, 6.0555999999999804e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.05689999999999e-05, 6.054100000000076e-05, 6.0555999999999804e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.055500000000033e-05, 6.05689999999999e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.054099999999729e-05, 6.0556000000003274e-05, 6.063899999999775e-05, 6.054100000000076e-05, 6.05689999999999e-05, 6.054099999999729e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.0541999999996765e-05, 6.0486000000001955e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.580" endtime="20201112 12:27:11.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.575" endtime="20201112 12:27:11.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.585" endtime="20201112 12:27:11.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.588" endtime="20201112 12:27:11.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.587" endtime="20201112 12:27:11.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.583" endtime="20201112 12:27:11.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.219" endtime="20201112 12:27:11.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.218" endtime="20201112 12:27:11.609"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.618" endtime="20201112 12:27:11.634"></status>
</kw>
<msg timestamp="20201112 12:27:11.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.616" endtime="20201112 12:27:11.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.635" endtime="20201112 12:27:11.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.638" endtime="20201112 12:27:11.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.613" endtime="20201112 12:27:11.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.611" endtime="20201112 12:27:11.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.646" endtime="20201112 12:27:11.933"></status>
</kw>
<msg timestamp="20201112 12:27:11.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.645" endtime="20201112 12:27:11.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.937" endtime="20201112 12:27:11.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.946" endtime="20201112 12:27:11.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.642" endtime="20201112 12:27:11.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.641" endtime="20201112 12:27:11.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.953" level="INFO">${RESULT} = [{'time': 0.021762042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.12499999999988e-05, 'source_diff': 6.12499999999988e-05}, {'time': 0.021835403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:11.949" endtime="20201112 12:27:11.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.967" level="INFO">${ACCURACY} = {'diff': [6.12499999999988e-05, 6.0542000000000235e-05, 6.0555999999999804e-05, 6.0555999999999804e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.05689999999999e-05, 6.054100000000076e-05, 6.0...</msg>
<status status="PASS" starttime="20201112 12:27:11.954" endtime="20201112 12:27:11.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.971" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.970" endtime="20201112 12:27:11.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.973" level="INFO">VALUE: [6.12499999999988e-05, 6.0542000000000235e-05, 6.0555999999999804e-05, 6.0555999999999804e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.05689999999999e-05, 6.054100000000076e-05, 6.055500000000033e-05, 6.0555999999999804e-05, 6.0528000000000665e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.0528000000000665e-05, 6.0513999999997625e-05, 6.0514000000001095e-05, 6.0542000000000235e-05, 6.0485999999998485e-05, 6.061100000000208e-05, 6.0486000000001955e-05, 6.0555999999999804e-05, 6.0528000000000665e-05, 6.0457999999999346e-05, 6.0527999999997195e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.055500000000033e-05, 6.055500000000033e-05, 6.0542000000000235e-05, 6.054100000000076e-05, 6.0555999999999804e-05, 6.0527999999997195e-05, 6.055500000000033e-05, 6.0514000000001095e-05, 6.054100000000076e-05, 6.055500000000033e-05, 6.061099999999861e-05, 6.0542000000000235e-05, 6.0514000000001095e-05, 6.0542000000000235e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.0527999999997195e-05, 6.0528000000000665e-05, 6.0555999999999804e-05, 6.0555999999999804e-05, 6.055500000000033e-05, 6.0555999999999804e-05, 6.0569999999999374e-05, 6.0555999999999804e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.972" endtime="20201112 12:27:11.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.967" endtime="20201112 12:27:11.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.977" endtime="20201112 12:27:11.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.980" endtime="20201112 12:27:12.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.979" endtime="20201112 12:27:12.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.975" endtime="20201112 12:27:12.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.610" endtime="20201112 12:27:12.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.609" endtime="20201112 12:27:12.002"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.010" endtime="20201112 12:27:12.026"></status>
</kw>
<msg timestamp="20201112 12:27:12.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.009" endtime="20201112 12:27:12.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.028" endtime="20201112 12:27:12.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.030" endtime="20201112 12:27:12.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.006" endtime="20201112 12:27:12.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.004" endtime="20201112 12:27:12.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.039" endtime="20201112 12:27:12.325"></status>
</kw>
<msg timestamp="20201112 12:27:12.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.038" endtime="20201112 12:27:12.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.329" endtime="20201112 12:27:12.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.338" endtime="20201112 12:27:12.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.035" endtime="20201112 12:27:12.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.033" endtime="20201112 12:27:12.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.344" level="INFO">${RESULT} = [{'time': 0.022035764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.123599999999924e-05, 'source_diff': 6.123599999999924e-05}, {'time': 0.022113514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.341" endtime="20201112 12:27:12.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.357" level="INFO">${ACCURACY} = {'diff': [6.123599999999924e-05, 6.0555999999999804e-05, 6.05689999999999e-05, 6.054100000000076e-05, 6.055500000000033e-05, 6.0528000000000665e-05, 6.054099999999729e-05, 6.0541999999996765e-05, 6.05...</msg>
<status status="PASS" starttime="20201112 12:27:12.345" endtime="20201112 12:27:12.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.362" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.361" endtime="20201112 12:27:12.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.364" level="INFO">VALUE: [6.123599999999924e-05, 6.0555999999999804e-05, 6.05689999999999e-05, 6.054100000000076e-05, 6.055500000000033e-05, 6.0528000000000665e-05, 6.054099999999729e-05, 6.0541999999996765e-05, 6.0555999999999804e-05, 6.047299999999839e-05, 6.054099999999729e-05, 6.055499999999686e-05, 6.0555999999999804e-05, 6.055500000000033e-05, 6.061099999999861e-05, 6.0555999999999804e-05, 6.0555999999999804e-05, 6.0513999999997625e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.061099999999861e-05, 6.0569999999999374e-05, 6.0542000000000235e-05, 6.055500000000033e-05, 6.0555999999999804e-05, 6.0555999999999804e-05, 6.055499999999686e-05, 6.0569999999999374e-05, 6.0485999999998485e-05, 6.061100000000208e-05, 6.0542000000000235e-05, 6.0555999999999804e-05, 6.0555999999999804e-05, 6.0569999999999374e-05, 6.0555999999999804e-05, 6.05689999999999e-05, 6.055499999999686e-05, 6.0513999999997625e-05, 6.059700000000251e-05, 6.05689999999999e-05, 6.055500000000033e-05, 6.0583999999998944e-05, 6.058299999999947e-05, 6.05689999999999e-05, 6.052699999999772e-05, 6.0555999999999804e-05, 6.055500000000033e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.0569999999999374e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.363" endtime="20201112 12:27:12.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.358" endtime="20201112 12:27:12.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.368" endtime="20201112 12:27:12.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.371" endtime="20201112 12:27:12.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.370" endtime="20201112 12:27:12.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.366" endtime="20201112 12:27:12.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.002" endtime="20201112 12:27:12.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.002" endtime="20201112 12:27:12.392"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.401" endtime="20201112 12:27:12.417"></status>
</kw>
<msg timestamp="20201112 12:27:12.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.399" endtime="20201112 12:27:12.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.418" endtime="20201112 12:27:12.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.421" endtime="20201112 12:27:12.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.397" endtime="20201112 12:27:12.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.395" endtime="20201112 12:27:12.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.430" endtime="20201112 12:27:12.716"></status>
</kw>
<msg timestamp="20201112 12:27:12.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.428" endtime="20201112 12:27:12.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.720" endtime="20201112 12:27:12.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.728" endtime="20201112 12:27:12.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.426" endtime="20201112 12:27:12.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.424" endtime="20201112 12:27:12.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.735" level="INFO">${RESULT} = [{'time': 0.021753181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.608400000000098e-05, 'source_diff': 6.608400000000098e-05}, {'time': 0.021829375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.731" endtime="20201112 12:27:12.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.749" level="INFO">${ACCURACY} = {'diff': [6.608400000000098e-05, 6.0500000000001525e-05, 6.0556000000003274e-05, 6.538899999999903e-05, 6.536099999999989e-05, 6.54029999999986e-05, 6.54159999999987e-05, 6.0527999999997195e-05, 6.541...</msg>
<status status="PASS" starttime="20201112 12:27:12.736" endtime="20201112 12:27:12.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.754" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.753" endtime="20201112 12:27:12.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.756" level="INFO">VALUE: [6.608400000000098e-05, 6.0500000000001525e-05, 6.0556000000003274e-05, 6.538899999999903e-05, 6.536099999999989e-05, 6.54029999999986e-05, 6.54159999999987e-05, 6.0527999999997195e-05, 6.541700000000164e-05, 6.0555999999999804e-05, 6.0514000000001095e-05, 6.541600000000217e-05, 6.540300000000207e-05, 6.059700000000251e-05, 6.53890000000025e-05, 6.53890000000025e-05, 6.540300000000207e-05, 6.542999999999827e-05, 6.54029999999986e-05, 6.0542000000000235e-05, 6.055500000000033e-05, 6.54159999999987e-05, 6.055500000000033e-05, 6.541700000000164e-05, 6.54029999999986e-05, 6.540199999999913e-05, 6.0542000000000235e-05, 6.540300000000207e-05, 6.540300000000207e-05, 6.0542000000000235e-05, 6.052700000000119e-05, 6.54029999999986e-05, 6.0542000000000235e-05, 6.0528000000000665e-05, 6.541699999999817e-05, 6.54029999999986e-05, 6.531900000000118e-05, 6.062500000000165e-05, 6.541600000000217e-05, 6.54029999999986e-05, 6.540300000000207e-05, 6.54029999999986e-05, 6.538799999999956e-05, 6.54029999999986e-05, 6.536099999999989e-05, 6.0555999999999804e-05, 6.538899999999903e-05, 6.538899999999903e-05, 6.538899999999903e-05, 6.052700000000119e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.755" endtime="20201112 12:27:12.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.750" endtime="20201112 12:27:12.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.760" endtime="20201112 12:27:12.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.763" endtime="20201112 12:27:12.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.762" endtime="20201112 12:27:12.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.758" endtime="20201112 12:27:12.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.393" endtime="20201112 12:27:12.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.393" endtime="20201112 12:27:12.784"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.792" endtime="20201112 12:27:12.809"></status>
</kw>
<msg timestamp="20201112 12:27:12.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.791" endtime="20201112 12:27:12.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.810" endtime="20201112 12:27:12.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.813" endtime="20201112 12:27:12.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.788" endtime="20201112 12:27:12.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.786" endtime="20201112 12:27:12.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.822" endtime="20201112 12:27:13.117"></status>
</kw>
<msg timestamp="20201112 12:27:13.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.820" endtime="20201112 12:27:13.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.121" endtime="20201112 12:27:13.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.130" endtime="20201112 12:27:13.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.818" endtime="20201112 12:27:13.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.816" endtime="20201112 12:27:13.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.136" level="INFO">${RESULT} = [{'time': 0.021683431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.606999999999794e-05, 'source_diff': 6.606999999999794e-05}, {'time': 0.021779111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.133" endtime="20201112 12:27:13.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.149" level="INFO">${ACCURACY} = {'diff': [6.606999999999794e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.54440000000013e-05, 6.541699999999817e-05, 6.540300000000207e-05, 6.545900000000035e-05, 6.54590000...</msg>
<status status="PASS" starttime="20201112 12:27:13.137" endtime="20201112 12:27:13.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.154" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.153" endtime="20201112 12:27:13.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.156" level="INFO">VALUE: [6.606999999999794e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.54440000000013e-05, 6.541699999999817e-05, 6.540300000000207e-05, 6.545900000000035e-05, 6.545900000000035e-05, 6.54029999999986e-05, 6.544499999999731e-05, 6.538899999999903e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.540300000000207e-05, 6.541700000000164e-05, 6.536099999999989e-05, 6.540300000000207e-05, 6.541700000000164e-05, 6.541700000000164e-05, 6.538899999999903e-05, 6.540300000000207e-05, 6.538899999999903e-05, 6.541700000000164e-05, 6.538899999999903e-05, 6.540300000000207e-05, 6.54159999999987e-05, 6.540199999999913e-05, 6.54440000000013e-05, 6.541600000000217e-05, 6.541600000000217e-05, 6.53890000000025e-05, 6.540199999999913e-05, 6.538899999999903e-05, 6.540199999999913e-05, 6.541699999999817e-05, 6.540300000000207e-05, 6.538899999999903e-05, 6.540199999999913e-05, 6.54020000000026e-05, 6.538899999999903e-05, 6.536099999999989e-05, 6.540300000000207e-05, 6.54029999999986e-05, 6.54159999999987e-05, 6.541600000000217e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.544499999999731e-05, 6.541699999999817e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.155" endtime="20201112 12:27:13.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.150" endtime="20201112 12:27:13.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.160" endtime="20201112 12:27:13.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.164" endtime="20201112 12:27:13.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.162" endtime="20201112 12:27:13.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.159" endtime="20201112 12:27:13.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.785" endtime="20201112 12:27:13.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.784" endtime="20201112 12:27:13.185"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.193" endtime="20201112 12:27:13.210"></status>
</kw>
<msg timestamp="20201112 12:27:13.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.192" endtime="20201112 12:27:13.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.211" endtime="20201112 12:27:13.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.214" endtime="20201112 12:27:13.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.189" endtime="20201112 12:27:13.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.187" endtime="20201112 12:27:13.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.226" endtime="20201112 12:27:13.514"></status>
</kw>
<msg timestamp="20201112 12:27:13.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.224" endtime="20201112 12:27:13.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.519" endtime="20201112 12:27:13.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.527" endtime="20201112 12:27:13.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.220" endtime="20201112 12:27:13.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.218" endtime="20201112 12:27:13.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.534" level="INFO">${RESULT} = [{'time': 0.021641472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.608299999999803e-05, 'source_diff': 6.608299999999803e-05}, {'time': 0.021724694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.530" endtime="20201112 12:27:13.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.555" level="INFO">${ACCURACY} = {'diff': [6.608299999999803e-05, 6.540199999999913e-05, 6.545800000000088e-05, 6.538899999999903e-05, 6.54029999999986e-05, 6.540300000000207e-05, 6.541699999999817e-05, 6.544499999999731e-05, 6.54169...</msg>
<status status="PASS" starttime="20201112 12:27:13.535" endtime="20201112 12:27:13.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.565" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.563" endtime="20201112 12:27:13.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.570" level="INFO">VALUE: [6.608299999999803e-05, 6.540199999999913e-05, 6.545800000000088e-05, 6.538899999999903e-05, 6.54029999999986e-05, 6.540300000000207e-05, 6.541699999999817e-05, 6.544499999999731e-05, 6.541699999999817e-05, 6.53890000000025e-05, 6.534700000000032e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.544500000000078e-05, 6.54029999999986e-05, 6.540300000000207e-05, 6.537499999999946e-05, 6.537499999999946e-05, 6.544500000000078e-05, 6.534700000000032e-05, 6.540199999999913e-05, 6.534700000000032e-05, 6.54159999999987e-05, 6.54159999999987e-05, 6.541700000000164e-05, 6.54029999999986e-05, 6.54159999999987e-05, 6.538899999999903e-05, 6.54159999999987e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.537500000000293e-05, 6.541700000000164e-05, 6.538899999999903e-05, 6.540300000000207e-05, 6.541699999999817e-05, 6.538899999999903e-05, 6.538799999999956e-05, 6.538899999999903e-05, 6.537499999999946e-05, 6.540199999999913e-05, 6.54029999999986e-05, 6.541600000000217e-05, 6.540199999999913e-05, 6.54029999999986e-05, 6.53890000000025e-05, 6.545800000000088e-05, 6.54029999999986e-05, 6.541600000000217e-05, 6.540300000000207e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.567" endtime="20201112 12:27:13.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.557" endtime="20201112 12:27:13.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.578" endtime="20201112 12:27:13.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.585" endtime="20201112 12:27:13.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.582" endtime="20201112 12:27:13.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.574" endtime="20201112 12:27:13.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.185" endtime="20201112 12:27:13.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.185" endtime="20201112 12:27:13.611"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.633" endtime="20201112 12:27:13.651"></status>
</kw>
<msg timestamp="20201112 12:27:13.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.628" endtime="20201112 12:27:13.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.653" endtime="20201112 12:27:13.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.655" endtime="20201112 12:27:13.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.622" endtime="20201112 12:27:13.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.617" endtime="20201112 12:27:13.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.664" endtime="20201112 12:27:13.951"></status>
</kw>
<msg timestamp="20201112 12:27:13.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041093347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0411595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:13.663" endtime="20201112 12:27:13.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041093347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0411595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:13.956" endtime="20201112 12:27:13.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.964" endtime="20201112 12:27:13.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.660" endtime="20201112 12:27:13.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.658" endtime="20201112 12:27:13.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.971" level="INFO">${RESULT} = [{'time': 0.0411595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.615299999999935e-05, 'source_diff': 6.615299999999935e-05}, {'time': 0.041237694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:13.968" endtime="20201112 12:27:13.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.989" level="INFO">${ACCURACY} = {'diff': [6.615299999999935e-05, 6.54159999999987e-05, 6.54029999999986e-05, 6.547299999999645e-05, 6.541699999999817e-05, 6.541699999999817e-05, 6.541700000000511e-05, 6.541699999999817e-05, 6.540299...</msg>
<status status="PASS" starttime="20201112 12:27:13.976" endtime="20201112 12:27:13.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.993" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.992" endtime="20201112 12:27:13.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.996" level="INFO">VALUE: [6.615299999999935e-05, 6.54159999999987e-05, 6.54029999999986e-05, 6.547299999999645e-05, 6.541699999999817e-05, 6.541699999999817e-05, 6.541700000000511e-05, 6.541699999999817e-05, 6.54029999999986e-05, 6.547299999999645e-05, 6.543099999999774e-05, 6.54029999999986e-05, 6.545799999999741e-05, 6.541699999999817e-05, 6.540199999999913e-05, 6.54029999999986e-05, 6.540199999999913e-05, 6.541699999999817e-05, 6.542999999999827e-05, 6.541700000000511e-05, 6.54159999999987e-05, 6.542999999999827e-05, 6.542999999999827e-05, 6.548600000000349e-05, 6.540300000000554e-05, 6.54159999999987e-05, 6.541699999999817e-05, 6.540300000000554e-05, 6.541699999999817e-05, 6.543099999999774e-05, 6.547200000000392e-05, 6.541700000000511e-05, 6.54029999999986e-05, 6.541699999999817e-05, 6.544400000000478e-05, 6.54159999999987e-05, 6.541700000000511e-05, 6.543100000000468e-05, 6.542999999999827e-05, 6.540199999999913e-05, 6.542999999999827e-05, 6.543099999999774e-05, 6.54300000000052e-05, 6.543099999999774e-05, 6.541700000000511e-05, 6.54029999999986e-05, 6.541600000000564e-05, 6.541699999999817e-05, 6.541700000000511e-05, 6.54159999999987e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.994" endtime="20201112 12:27:13.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.990" endtime="20201112 12:27:13.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.000" endtime="20201112 12:27:14.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.003" endtime="20201112 12:27:14.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.002" endtime="20201112 12:27:14.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.998" endtime="20201112 12:27:14.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.614" endtime="20201112 12:27:14.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.612" endtime="20201112 12:27:14.024"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.033" endtime="20201112 12:27:14.049"></status>
</kw>
<msg timestamp="20201112 12:27:14.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.031" endtime="20201112 12:27:14.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.051" endtime="20201112 12:27:14.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.053" endtime="20201112 12:27:14.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.029" endtime="20201112 12:27:14.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.027" endtime="20201112 12:27:14.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.062" endtime="20201112 12:27:14.348"></status>
</kw>
<msg timestamp="20201112 12:27:14.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.061" endtime="20201112 12:27:14.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.353" endtime="20201112 12:27:14.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.367" endtime="20201112 12:27:14.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.058" endtime="20201112 12:27:14.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.056" endtime="20201112 12:27:14.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.381" level="INFO">${RESULT} = [{'time': 0.021975639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611100000000064e-05, 'source_diff': 6.611100000000064e-05}, {'time': 0.022070681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:14.374" endtime="20201112 12:27:14.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.414" level="INFO">${ACCURACY} = {'diff': [6.611100000000064e-05, 6.53890000000025e-05, 6.54159999999987e-05, 6.541700000000164e-05, 6.538899999999903e-05, 6.543000000000174e-05, 6.540300000000207e-05, 6.547200000000045e-05, 6.540299...</msg>
<status status="PASS" starttime="20201112 12:27:14.383" endtime="20201112 12:27:14.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.423" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.421" endtime="20201112 12:27:14.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.429" level="INFO">VALUE: [6.611100000000064e-05, 6.53890000000025e-05, 6.54159999999987e-05, 6.541700000000164e-05, 6.538899999999903e-05, 6.543000000000174e-05, 6.540300000000207e-05, 6.547200000000045e-05, 6.54029999999986e-05, 6.538899999999903e-05, 6.540300000000207e-05, 6.536199999999937e-05, 6.548699999999949e-05, 6.540300000000207e-05, 6.538899999999903e-05, 6.54159999999987e-05, 6.540300000000207e-05, 6.540300000000207e-05, 6.540300000000207e-05, 6.537499999999946e-05, 6.54159999999987e-05, 6.53890000000025e-05, 6.541700000000164e-05, 6.540199999999913e-05, 6.53890000000025e-05, 6.53890000000025e-05, 6.542999999999827e-05, 6.54029999999986e-05, 6.54159999999987e-05, 6.541700000000164e-05, 6.54029999999986e-05, 6.540199999999913e-05, 6.538899999999903e-05, 6.534700000000032e-05, 6.53890000000025e-05, 6.541699999999817e-05, 6.540300000000207e-05, 6.540199999999913e-05, 6.538899999999903e-05, 6.541700000000164e-05, 6.542999999999827e-05, 6.540300000000207e-05, 6.537499999999946e-05, 6.537499999999946e-05, 6.543099999999774e-05, 6.543000000000174e-05, 6.538799999999956e-05, 6.540300000000207e-05, 6.541699999999817e-05, 6.54029999999986e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.426" endtime="20201112 12:27:14.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.416" endtime="20201112 12:27:14.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.436" endtime="20201112 12:27:14.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.443" endtime="20201112 12:27:14.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.440" endtime="20201112 12:27:14.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.432" endtime="20201112 12:27:14.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.025" endtime="20201112 12:27:14.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.025" endtime="20201112 12:27:14.464"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.473" endtime="20201112 12:27:14.492"></status>
</kw>
<msg timestamp="20201112 12:27:14.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.471" endtime="20201112 12:27:14.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.494" endtime="20201112 12:27:14.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.496" endtime="20201112 12:27:14.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.469" endtime="20201112 12:27:14.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.467" endtime="20201112 12:27:14.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.505" endtime="20201112 12:27:14.791"></status>
</kw>
<msg timestamp="20201112 12:27:14.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.504" endtime="20201112 12:27:14.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.795" endtime="20201112 12:27:14.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.803" endtime="20201112 12:27:14.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.501" endtime="20201112 12:27:14.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.500" endtime="20201112 12:27:14.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.810" level="INFO">${RESULT} = [{'time': 0.021891708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013111099999999973, 'source_diff': 0.00013111099999999973}, {'time': 0.022053167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.807" endtime="20201112 12:27:14.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.823" level="INFO">${ACCURACY} = {'diff': [0.00013111099999999973, 0.00013049999999999867, 0.0001305140000000017, 0.0001305279999999978, 0.0001304859999999991, 0.0001304859999999991, 0.0001304310000000003, 0.00013048600000000257, 0.0...</msg>
<status status="PASS" starttime="20201112 12:27:14.811" endtime="20201112 12:27:14.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.827" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.826" endtime="20201112 12:27:14.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.830" level="INFO">VALUE: [0.00013111099999999973, 0.00013049999999999867, 0.0001305140000000017, 0.0001305279999999978, 0.0001304859999999991, 0.0001304859999999991, 0.0001304310000000003, 0.00013048600000000257, 0.0001304859999999991, 0.00013044399999999692, 0.0001304859999999991, 0.00013048600000000257, 0.0001304859999999991, 0.00013049999999999867, 0.0001304859999999991, 0.00013048700000000205, 0.00013047199999999953, 0.0001304440000000004, 0.0001304859999999991, 0.00013051300000000224, 0.0001304859999999991, 0.00013048600000000257, 0.00013045899999999944, 0.0001305279999999978, 0.0001304859999999991, 0.00013049999999999867, 0.00013049999999999867, 0.00013049999999999867, 0.00013050000000000214, 0.00013048600000000257, 0.0001304859999999991, 0.00013055499999999748, 0.0001304859999999991, 0.0001304859999999991, 0.00013050000000000214, 0.00013049999999999867, 0.0001305279999999978, 0.0001305140000000017, 0.00013049999999999867, 0.0001304859999999991, 0.00013049999999999867, 0.0001304859999999991, 0.00013050000000000214, 0.00013049999999999867, 0.00013047199999999953, 0.00013049999999999867, 0.00013056900000000052, 0.00013048600000000257, 0.00013048600000000257, 0.00013048600000000257]</msg>
<status status="PASS" starttime="20201112 12:27:14.828" endtime="20201112 12:27:14.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.824" endtime="20201112 12:27:14.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.833" endtime="20201112 12:27:14.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.837" endtime="20201112 12:27:14.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.835" endtime="20201112 12:27:14.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.831" endtime="20201112 12:27:14.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.465" endtime="20201112 12:27:14.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.465" endtime="20201112 12:27:14.857"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.866" endtime="20201112 12:27:14.886"></status>
</kw>
<msg timestamp="20201112 12:27:14.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.864" endtime="20201112 12:27:14.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.887" endtime="20201112 12:27:14.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.890" endtime="20201112 12:27:14.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.862" endtime="20201112 12:27:14.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.860" endtime="20201112 12:27:14.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.899" endtime="20201112 12:27:15.185"></status>
</kw>
<msg timestamp="20201112 12:27:15.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.897" endtime="20201112 12:27:15.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.189" endtime="20201112 12:27:15.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.197" endtime="20201112 12:27:15.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.895" endtime="20201112 12:27:15.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.893" endtime="20201112 12:27:15.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.204" level="INFO">${RESULT} = [{'time': 0.021826097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013130499999999823, 'source_diff': 0.00013130499999999823}, {'time': 0.021988431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:15.201" endtime="20201112 12:27:15.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.217" level="INFO">${ACCURACY} = {'diff': [0.00013130499999999823, 0.00013172300000000026, 0.00013202699999999984, 0.00013225000000000042, 0.00013182000000000124, 0.00013149999999999967, 0.00013236100000000098, 0.00013172200000000078...</msg>
<status status="PASS" starttime="20201112 12:27:15.205" endtime="20201112 12:27:15.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.221" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.220" endtime="20201112 12:27:15.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.224" level="INFO">VALUE: [0.00013130499999999823, 0.00013172300000000026, 0.00013202699999999984, 0.00013225000000000042, 0.00013182000000000124, 0.00013149999999999967, 0.00013236100000000098, 0.00013172200000000078, 0.0001320279999999993, 0.00013227799999999956, 0.0001317090000000007, 0.00013238900000000012, 0.0001322219999999978, 0.0001323340000000013, 0.00013213899999999987, 0.0001317639999999995, 0.0001318470000000009, 0.0001314860000000001, 0.0001319029999999992, 0.00013163899999999937, 0.00013237500000000055, 0.0001318470000000009, 0.00013168000000000207, 0.0001321250000000003, 0.0001321250000000003, 0.0001321250000000003, 0.00013054200000000085, 0.00013182000000000124, 0.0001305279999999978, 0.00013213899999999987, 0.0001321250000000003, 0.0001317080000000012, 0.00013065299999999794, 0.00013183299999999787, 0.0001322090000000012, 0.00013158400000000056, 0.00013163899999999937, 0.00013238900000000012, 0.0001318189999999983, 0.0001316249999999998, 0.00013222200000000128, 0.00013193099999999833, 0.00013173600000000035, 0.00013195800000000146, 0.00013049999999999867, 0.0001319449999999979, 0.00013187500000000005, 0.00013168099999999808, 0.00013165199999999946, 0.00013066700000000098]</msg>
<status status="PASS" starttime="20201112 12:27:15.222" endtime="20201112 12:27:15.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.218" endtime="20201112 12:27:15.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.227" endtime="20201112 12:27:15.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.231" endtime="20201112 12:27:15.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.229" endtime="20201112 12:27:15.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.226" endtime="20201112 12:27:15.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.858" endtime="20201112 12:27:15.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.858" endtime="20201112 12:27:15.252"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.260" endtime="20201112 12:27:15.280"></status>
</kw>
<msg timestamp="20201112 12:27:15.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.259" endtime="20201112 12:27:15.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.281" endtime="20201112 12:27:15.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.284" endtime="20201112 12:27:15.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.256" endtime="20201112 12:27:15.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.254" endtime="20201112 12:27:15.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.293" endtime="20201112 12:27:15.579"></status>
</kw>
<msg timestamp="20201112 12:27:15.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.291" endtime="20201112 12:27:15.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.583" endtime="20201112 12:27:15.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.591" endtime="20201112 12:27:15.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.289" endtime="20201112 12:27:15.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.287" endtime="20201112 12:27:15.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.598" level="INFO">${RESULT} = [{'time': 0.021728931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013269499999999865, 'source_diff': 0.00013269499999999865}, {'time': 0.021880556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:15.594" endtime="20201112 12:27:15.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.611" level="INFO">${ACCURACY} = {'diff': [0.00013269499999999865, 0.00013337499999999808, 0.0001330839999999986, 0.00013280600000000267, 0.00013261100000000123, 0.00013325000000000142, 0.0001333189999999998, 0.00013334699999999894, ...</msg>
<status status="PASS" starttime="20201112 12:27:15.599" endtime="20201112 12:27:15.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.615" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.614" endtime="20201112 12:27:15.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.618" level="INFO">VALUE: [0.00013269499999999865, 0.00013337499999999808, 0.0001330839999999986, 0.00013280600000000267, 0.00013261100000000123, 0.00013325000000000142, 0.0001333189999999998, 0.00013334699999999894, 0.0001325279999999998, 0.00013255599999999895, 0.0001331380000000014, 0.0001329730000000015, 0.0001331800000000001, 0.00013323600000000185, 0.00013325000000000142, 0.00013291699999999976, 0.00013236100000000098, 0.00013268100000000255, 0.000132860999999998, 0.0001326669999999995, 0.00013286100000000148, 0.00013291600000000028, 0.00013284699999999844, 0.00013280499999999973, 0.00013306999999999902, 0.0001329440000000029, 0.00013273599999999788, 0.00013268100000000255, 0.000133264000000001, 0.0001326250000000008, 0.00013280499999999973, 0.00013306899999999955, 0.00013325000000000142, 0.00013261100000000123, 0.00013269399999999917, 0.00013292999999999985, 0.00013265299999999994, 0.0001329860000000016, 0.00013333299999999937, 0.00013277800000000006, 0.00013311100000000173, 0.00013337499999999808, 0.00013279100000000016, 0.00013265299999999994, 0.00013320799999999924, 0.00013306999999999902, 0.00013261100000000123, 0.00013244500000000187, 0.00013306999999999902, 0.00013250000000000067]</msg>
<status status="PASS" starttime="20201112 12:27:15.616" endtime="20201112 12:27:15.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.612" endtime="20201112 12:27:15.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.621" endtime="20201112 12:27:15.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.624" endtime="20201112 12:27:15.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.623" endtime="20201112 12:27:15.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.619" endtime="20201112 12:27:15.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.253" endtime="20201112 12:27:15.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.252" endtime="20201112 12:27:15.645"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.654" endtime="20201112 12:27:15.674"></status>
</kw>
<msg timestamp="20201112 12:27:15.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.652" endtime="20201112 12:27:15.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.675" endtime="20201112 12:27:15.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.678" endtime="20201112 12:27:15.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.650" endtime="20201112 12:27:15.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.648" endtime="20201112 12:27:15.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.687" endtime="20201112 12:27:15.974"></status>
</kw>
<msg timestamp="20201112 12:27:15.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.685" endtime="20201112 12:27:15.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.978" endtime="20201112 12:27:15.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.986" endtime="20201112 12:27:15.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.683" endtime="20201112 12:27:15.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.681" endtime="20201112 12:27:15.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.993" level="INFO">${RESULT} = [{'time': 0.021866625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013427800000000156, 'source_diff': 0.00013427800000000156}, {'time': 0.022014222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:15.990" endtime="20201112 12:27:15.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.008" level="INFO">${ACCURACY} = {'diff': [0.00013427800000000156, 0.0001344030000000017, 0.00013344399999999992, 0.0001336250000000018, 0.0001342779999999981, 0.00013393100000000033, 0.0001340549999999975, 0.00013387500000000205, 0....</msg>
<status status="PASS" starttime="20201112 12:27:15.994" endtime="20201112 12:27:16.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.012" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.011" endtime="20201112 12:27:16.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.015" level="INFO">VALUE: [0.00013427800000000156, 0.0001344030000000017, 0.00013344399999999992, 0.0001336250000000018, 0.0001342779999999981, 0.00013393100000000033, 0.0001340549999999975, 0.00013387500000000205, 0.00013356999999999952, 0.0001336250000000018, 0.00013387499999999858, 0.00013343000000000035, 0.0001339449999999999, 0.00013412499999999883, 0.00013363900000000137, 0.00013409799999999916, 0.00013363900000000137, 0.00013350000000000167, 0.00013363900000000137, 0.0001341809999999971, 0.00013383399999999934, 0.0001339999999999987, 0.0001340419999999974, 0.00013433300000000037, 0.000134167000000001, 0.0001341250000000023, 0.0001334999999999982, 0.00013413799999999892, 0.0001339449999999999, 0.00013375000000000192, 0.0001340969999999997, 0.00013420800000000024, 0.00013423699999999886, 0.00013413900000000187, 0.0001336250000000018, 0.00013397199999999956, 0.0001341389999999984, 0.000133860999999999, 0.0001340839999999996, 0.00013350000000000167, 0.00013376399999999802, 0.00013420800000000024, 0.00013424999999999895, 0.00013347200000000253, 0.0001340839999999996, 0.00013337499999999808, 0.00013407000000000002, 0.00013388900000000162, 0.00013356999999999952, 0.0001334860000000021]</msg>
<status status="PASS" starttime="20201112 12:27:16.014" endtime="20201112 12:27:16.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.009" endtime="20201112 12:27:16.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.019" endtime="20201112 12:27:16.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.022" endtime="20201112 12:27:16.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.021" endtime="20201112 12:27:16.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.017" endtime="20201112 12:27:16.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.646" endtime="20201112 12:27:16.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.646" endtime="20201112 12:27:16.043"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.052" endtime="20201112 12:27:16.072"></status>
</kw>
<msg timestamp="20201112 12:27:16.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.050" endtime="20201112 12:27:16.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.073" endtime="20201112 12:27:16.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.076" endtime="20201112 12:27:16.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.048" endtime="20201112 12:27:16.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.046" endtime="20201112 12:27:16.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.085" endtime="20201112 12:27:16.370"></status>
</kw>
<msg timestamp="20201112 12:27:16.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.083" endtime="20201112 12:27:16.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.374" endtime="20201112 12:27:16.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.382" endtime="20201112 12:27:16.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.081" endtime="20201112 12:27:16.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.079" endtime="20201112 12:27:16.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.389" level="INFO">${RESULT} = [{'time': 0.021867431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013454200000000138, 'source_diff': 0.00013454200000000138}, {'time': 0.022021111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:16.386" endtime="20201112 12:27:16.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.402" level="INFO">${ACCURACY} = {'diff': [0.00013454200000000138, 0.00013451399999999877, 0.00013483300000000087, 0.00013480499999999826, 0.00013520800000000124, 0.00013481899999999783, 0.0001344450000000004, 0.00013501400000000274,...</msg>
<status status="PASS" starttime="20201112 12:27:16.390" endtime="20201112 12:27:16.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.406" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.405" endtime="20201112 12:27:16.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.409" level="INFO">VALUE: [0.00013454200000000138, 0.00013451399999999877, 0.00013483300000000087, 0.00013480499999999826, 0.00013520800000000124, 0.00013481899999999783, 0.0001344450000000004, 0.00013501400000000274, 0.0001350129999999998, 0.00013483300000000087, 0.00013525000000000342, 0.00013465300000000194, 0.00013479200000000163, 0.0001347229999999998, 0.0001352779999999991, 0.0001353190000000018, 0.000135264000000003, 0.0001353199999999978, 0.00013443000000000135, 0.00013454200000000138, 0.00013444499999999693, 0.00013492999999999838, 0.00013451399999999877, 0.00013445799999999702, 0.00013462499999999933, 0.0001344999999999992, 0.00013469500000000065, 0.00013500000000000317, 0.00013515299999999897, 0.000135167000000002, 0.000135264000000003, 0.00013491700000000176, 0.0001353190000000018, 0.00013494499999999743, 0.0001353199999999978, 0.00013506900000000155, 0.00013480499999999826, 0.00013458300000000062, 0.00013462499999999933, 0.0001344999999999992, 0.00013481899999999783, 0.00013511100000000026, 0.0001349999999999997, 0.00013462499999999933, 0.00013497300000000004, 0.0001345840000000001, 0.00013487499999999958, 0.00013497200000000056, 0.00013519499999999768, 0.00013504200000000188]</msg>
<status status="PASS" starttime="20201112 12:27:16.407" endtime="20201112 12:27:16.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.403" endtime="20201112 12:27:16.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.412" endtime="20201112 12:27:16.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.416" endtime="20201112 12:27:16.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.414" endtime="20201112 12:27:16.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.411" endtime="20201112 12:27:16.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.044" endtime="20201112 12:27:16.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.044" endtime="20201112 12:27:16.437"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.445" endtime="20201112 12:27:16.465"></status>
</kw>
<msg timestamp="20201112 12:27:16.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.444" endtime="20201112 12:27:16.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.467" endtime="20201112 12:27:16.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.469" endtime="20201112 12:27:16.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.441" endtime="20201112 12:27:16.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.439" endtime="20201112 12:27:16.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.478" endtime="20201112 12:27:16.765"></status>
</kw>
<msg timestamp="20201112 12:27:16.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.476" endtime="20201112 12:27:16.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.769" endtime="20201112 12:27:16.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.777" endtime="20201112 12:27:16.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.474" endtime="20201112 12:27:16.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.472" endtime="20201112 12:27:16.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.783" level="INFO">${RESULT} = [{'time': 0.021802736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013562500000000033, 'source_diff': 0.00013562500000000033}, {'time': 0.021967111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:16.780" endtime="20201112 12:27:16.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.796" level="INFO">${ACCURACY} = {'diff': [0.00013562500000000033, 0.00013561100000000076, 0.0001360549999999995, 0.00013636099999999804, 0.00013594399999999895, 0.00013557000000000152, 0.00013626400000000052, 0.00013561200000000023,...</msg>
<status status="PASS" starttime="20201112 12:27:16.784" endtime="20201112 12:27:16.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.801" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.800" endtime="20201112 12:27:16.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.803" level="INFO">VALUE: [0.00013562500000000033, 0.00013561100000000076, 0.0001360549999999995, 0.00013636099999999804, 0.00013594399999999895, 0.00013557000000000152, 0.00013626400000000052, 0.00013561200000000023, 0.00013548599999999716, 0.00013619499999999868, 0.00013574999999999698, 0.0001362780000000001, 0.00013607000000000202, 0.00013625000000000095, 0.00013551399999999977, 0.00013580499999999926, 0.00013617999999999963, 0.00013622199999999834, 0.00013543099999999836, 0.0001361390000000004, 0.0001356939999999987, 0.00013567999999999913, 0.000135861000000001, 0.00013630499999999976, 0.000135958000000002, 0.00013608300000000212, 0.00013619499999999868, 0.00013606899999999908, 0.0001361390000000004, 0.00013551399999999977, 0.00013558299999999815, 0.00013608299999999865, 0.0001363480000000014, 0.0001356809999999986, 0.0001356389999999999, 0.00013601400000000027, 0.00013594399999999895, 0.0001356389999999999, 0.00013562500000000033, 0.00013569499999999818, 0.00013587500000000058, 0.00013588900000000015, 0.00013632000000000227, 0.0001353610000000005, 0.00013626400000000052, 0.00013630499999999976, 0.000135958000000002, 0.00013566599999999956, 0.0001356670000000025, 0.00013555599999999848]</msg>
<status status="PASS" starttime="20201112 12:27:16.802" endtime="20201112 12:27:16.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.797" endtime="20201112 12:27:16.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.807" endtime="20201112 12:27:16.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.810" endtime="20201112 12:27:16.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.809" endtime="20201112 12:27:16.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.805" endtime="20201112 12:27:16.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.438" endtime="20201112 12:27:16.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.437" endtime="20201112 12:27:16.831"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.840" endtime="20201112 12:27:16.859"></status>
</kw>
<msg timestamp="20201112 12:27:16.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.838" endtime="20201112 12:27:16.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.861" endtime="20201112 12:27:16.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.863" endtime="20201112 12:27:16.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.835" endtime="20201112 12:27:16.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.833" endtime="20201112 12:27:16.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.872" endtime="20201112 12:27:17.159"></status>
</kw>
<msg timestamp="20201112 12:27:17.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021666278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.871" endtime="20201112 12:27:17.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021666278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.163" endtime="20201112 12:27:17.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.171" endtime="20201112 12:27:17.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.868" endtime="20201112 12:27:17.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.867" endtime="20201112 12:27:17.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.178" level="INFO">${RESULT} = [{'time': 0.021802861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013658299999999915, 'source_diff': 0.00013658299999999915}, {'time': 0.021965458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:17.174" endtime="20201112 12:27:17.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.191" level="INFO">${ACCURACY} = {'diff': [0.00013658299999999915, 0.00013661100000000176, 0.00013695799999999952, 0.00013672199999999884, 0.00013723599999999891, 0.00013687500000000158, 0.00013673700000000136, 0.00013734799999999894...</msg>
<status status="PASS" starttime="20201112 12:27:17.179" endtime="20201112 12:27:17.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.195" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.194" endtime="20201112 12:27:17.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.197" level="INFO">VALUE: [0.00013658299999999915, 0.00013661100000000176, 0.00013695799999999952, 0.00013672199999999884, 0.00013723599999999891, 0.00013687500000000158, 0.00013673700000000136, 0.00013734799999999894, 0.0001371940000000002, 0.00013643099999999936, 0.00013666700000000004, 0.0001370550000000005, 0.0001369719999999991, 0.0001364870000000011, 0.0001373329999999999, 0.00013729200000000066, 0.00013694399999999995, 0.0001370000000000017, 0.0001370000000000017, 0.00013638900000000065, 0.00013736099999999904, 0.00013655599999999948, 0.00013673599999999841, 0.00013670799999999927, 0.00013687500000000158, 0.0001371390000000014, 0.00013686099999999854, 0.0001365000000000012, 0.00013709699999999922, 0.00013680599999999973, 0.00013676400000000102, 0.00013668000000000013, 0.0001371810000000001, 0.00013655599999999948, 0.00013698599999999866, 0.00013699999999999823, 0.00013662500000000133, 0.0001365000000000012, 0.00013705599999999998, 0.00013722200000000281, 0.00013684700000000244, 0.0001369170000000003, 0.00013702800000000084, 0.00013672199999999884, 0.00013730600000000023, 0.00013736099999999904, 0.00013663800000000142, 0.00013730600000000023, 0.00013738899999999818, 0.00013656999999999905]</msg>
<status status="PASS" starttime="20201112 12:27:17.196" endtime="20201112 12:27:17.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.191" endtime="20201112 12:27:17.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.201" endtime="20201112 12:27:17.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.204" endtime="20201112 12:27:17.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.203" endtime="20201112 12:27:17.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.199" endtime="20201112 12:27:17.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.832" endtime="20201112 12:27:17.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.831" endtime="20201112 12:27:17.225"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.234" endtime="20201112 12:27:17.254"></status>
</kw>
<msg timestamp="20201112 12:27:17.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.232" endtime="20201112 12:27:17.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.255" endtime="20201112 12:27:17.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.258" endtime="20201112 12:27:17.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.230" endtime="20201112 12:27:17.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.228" endtime="20201112 12:27:17.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.267" endtime="20201112 12:27:17.553"></status>
</kw>
<msg timestamp="20201112 12:27:17.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.265" endtime="20201112 12:27:17.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.557" endtime="20201112 12:27:17.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.565" endtime="20201112 12:27:17.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.262" endtime="20201112 12:27:17.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.261" endtime="20201112 12:27:17.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.571" level="INFO">${RESULT} = [{'time': 0.021860361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013798599999999966, 'source_diff': 0.00013798599999999966}, {'time': 0.022030819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:17.568" endtime="20201112 12:27:17.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.586" level="INFO">${ACCURACY} = {'diff': [0.00013798599999999966, 0.00013820800000000077, 0.00013822200000000034, 0.00013820900000000025, 0.00013826399999999905, 0.00013776400000000202, 0.00013790299999999825, 0.00013766700000000104...</msg>
<status status="PASS" starttime="20201112 12:27:17.572" endtime="20201112 12:27:17.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.590" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.589" endtime="20201112 12:27:17.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.593" level="INFO">VALUE: [0.00013798599999999966, 0.00013820800000000077, 0.00013822200000000034, 0.00013820900000000025, 0.00013826399999999905, 0.00013776400000000202, 0.00013790299999999825, 0.00013766700000000104, 0.00013809700000000022, 0.00013804199999999794, 0.00013780600000000073, 0.00013772199999999984, 0.00013754199999999744, 0.00013765199999999853, 0.00013827699999999915, 0.00013757000000000005, 0.00013777799999999812, 0.000138346999999997, 0.00013791699999999782, 0.0001377780000000016, 0.00013823599999999991, 0.00013813899999999893, 0.0001374589999999995, 0.00013834799999999994, 0.00013745800000000002, 0.00013751400000000177, 0.0001380269999999989, 0.00013741599999999785, 0.00013826400000000252, 0.00013784699999999997, 0.00013783399999999987, 0.0001377780000000016, 0.00013738900000000165, 0.0001375689999999971, 0.0001378330000000004, 0.0001377780000000016, 0.00013802800000000184, 0.00013791699999999782, 0.00013816699999999807, 0.0001376390000000019, 0.00013772199999999984, 0.00013763899999999843, 0.00013820800000000077, 0.00013747300000000254, 0.0001381810000000011, 0.0001381659999999986, 0.00013737500000000208, 0.00013766699999999757, 0.0001382780000000021, 0.00013798599999999966]</msg>
<status status="PASS" starttime="20201112 12:27:17.591" endtime="20201112 12:27:17.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.587" endtime="20201112 12:27:17.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.596" endtime="20201112 12:27:17.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.600" endtime="20201112 12:27:17.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.598" endtime="20201112 12:27:17.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.595" endtime="20201112 12:27:17.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.226" endtime="20201112 12:27:17.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.226" endtime="20201112 12:27:17.621"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.629" endtime="20201112 12:27:17.649"></status>
</kw>
<msg timestamp="20201112 12:27:17.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.628" endtime="20201112 12:27:17.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.651" endtime="20201112 12:27:17.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.653" endtime="20201112 12:27:17.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.625" endtime="20201112 12:27:17.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.623" endtime="20201112 12:27:17.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.662" endtime="20201112 12:27:17.949"></status>
</kw>
<msg timestamp="20201112 12:27:17.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.660" endtime="20201112 12:27:17.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.954" endtime="20201112 12:27:17.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.962" endtime="20201112 12:27:17.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.658" endtime="20201112 12:27:17.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.656" endtime="20201112 12:27:17.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.968" level="INFO">${RESULT} = [{'time': 0.021792611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013888899999999968, 'source_diff': 0.00013888899999999968}, {'time': 0.021963014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:17.965" endtime="20201112 12:27:17.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.981" level="INFO">${ACCURACY} = {'diff': [0.00013888899999999968, 0.00013852799999999887, 0.00013912500000000036, 0.00013854099999999897, 0.00013890299999999925, 0.00013898600000000066, 0.0001385980000000002, 0.00013847300000000007,...</msg>
<status status="PASS" starttime="20201112 12:27:17.969" endtime="20201112 12:27:17.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.986" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.985" endtime="20201112 12:27:17.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.988" level="INFO">VALUE: [0.00013888899999999968, 0.00013852799999999887, 0.00013912500000000036, 0.00013854099999999897, 0.00013890299999999925, 0.00013898600000000066, 0.0001385980000000002, 0.00013847300000000007, 0.00013915200000000003, 0.00013926400000000005, 0.00013922200000000134, 0.0001387079999999978, 0.00013859700000000072, 0.00013877699999999965, 0.0001384720000000006, 0.00013881899999999836, 0.0001391529999999995, 0.00013872200000000084, 0.00013842999999999842, 0.00013927799999999962, 0.0001387919999999987, 0.00013898600000000066, 0.00013858400000000062, 0.00013913899999999993, 0.00013861199999999976, 0.00013830500000000176, 0.00013913899999999993, 0.00013922200000000134, 0.00013895800000000152, 0.00013874999999999998, 0.00013908299999999818, 0.00013888899999999968, 0.00013890299999999925, 0.00013866600000000256, 0.00013863899999999943, 0.00013859699999999725, 0.0001390139999999998, 0.00013844499999999746, 0.00013876400000000302, 0.00013924999999999702, 0.00013844400000000145, 0.00013865300000000247, 0.00013884700000000097, 0.00013909799999999722, 0.00013877699999999965, 0.00013872199999999738, 0.0001385139999999993, 0.00013894400000000195, 0.00013926400000000005, 0.00013854200000000191]</msg>
<status status="PASS" starttime="20201112 12:27:17.987" endtime="20201112 12:27:17.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.982" endtime="20201112 12:27:17.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.992" endtime="20201112 12:27:17.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.995" endtime="20201112 12:27:18.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.994" endtime="20201112 12:27:18.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.990" endtime="20201112 12:27:18.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.622" endtime="20201112 12:27:18.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.621" endtime="20201112 12:27:18.016"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.025" endtime="20201112 12:27:18.045"></status>
</kw>
<msg timestamp="20201112 12:27:18.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.023" endtime="20201112 12:27:18.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.046" endtime="20201112 12:27:18.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.049" endtime="20201112 12:27:18.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.021" endtime="20201112 12:27:18.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.019" endtime="20201112 12:27:18.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.058" endtime="20201112 12:27:18.344"></status>
</kw>
<msg timestamp="20201112 12:27:18.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.057" endtime="20201112 12:27:18.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.348" endtime="20201112 12:27:18.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.356" endtime="20201112 12:27:18.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.054" endtime="20201112 12:27:18.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.052" endtime="20201112 12:27:18.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.363" level="INFO">${RESULT} = [{'time': 0.021995556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013976400000000055, 'source_diff': 0.00013976400000000055}, {'time': 0.022162042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:18.360" endtime="20201112 12:27:18.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.376" level="INFO">${ACCURACY} = {'diff': [0.00013976400000000055, 0.0001401530000000005, 0.0001399720000000021, 0.00013948600000000116, 0.0001396949999999987, 0.00014029099999999725, 0.0001398750000000011, 0.00013940299999999975, 0....</msg>
<status status="PASS" starttime="20201112 12:27:18.364" endtime="20201112 12:27:18.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.380" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.379" endtime="20201112 12:27:18.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.383" level="INFO">VALUE: [0.00013976400000000055, 0.0001401530000000005, 0.0001399720000000021, 0.00013948600000000116, 0.0001396949999999987, 0.00014029099999999725, 0.0001398750000000011, 0.00013940299999999975, 0.00013970900000000175, 0.000139653, 0.00013969399999999924, 0.00013970899999999828, 0.00013992999999999992, 0.0001397919999999997, 0.0001401530000000005, 0.00013949999999999727, 0.00014019399999999974, 0.00013940299999999975, 0.0001397079999999988, 0.00013976399999999709, 0.00013988900000000068, 0.00013997199999999863, 0.00013997199999999863, 0.00013977700000000065, 0.00013958399999999815, 0.00013938900000000018, 0.000139346999999998, 0.00013988900000000068, 0.00013958299999999868, 0.00014004100000000047, 0.00013977800000000012, 0.0001400980000000017, 0.00014000000000000123, 0.000140346999999999, 0.00013994399999999949, 0.00013938900000000018, 0.00014008299999999918, 0.000139653, 0.0001398750000000011, 0.0001400140000000008, 0.00014013799999999799, 0.00014015299999999703, 0.00013929099999999972, 0.0001402079999999993, 0.00014026400000000105, 0.00013995899999999853, 0.0001400140000000008, 0.00013984800000000144, 0.0001399720000000021, 0.00013959699999999825]</msg>
<status status="PASS" starttime="20201112 12:27:18.381" endtime="20201112 12:27:18.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.377" endtime="20201112 12:27:18.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.386" endtime="20201112 12:27:18.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.390" endtime="20201112 12:27:18.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.388" endtime="20201112 12:27:18.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.385" endtime="20201112 12:27:18.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.017" endtime="20201112 12:27:18.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.017" endtime="20201112 12:27:18.411"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.419" endtime="20201112 12:27:18.439"></status>
</kw>
<msg timestamp="20201112 12:27:18.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.418" endtime="20201112 12:27:18.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.441" endtime="20201112 12:27:18.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.443" endtime="20201112 12:27:18.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.415" endtime="20201112 12:27:18.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.413" endtime="20201112 12:27:18.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.452" endtime="20201112 12:27:18.737"></status>
</kw>
<msg timestamp="20201112 12:27:18.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.450" endtime="20201112 12:27:18.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.742" endtime="20201112 12:27:18.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.750" endtime="20201112 12:27:18.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.448" endtime="20201112 12:27:18.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.446" endtime="20201112 12:27:18.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.756" level="INFO">${RESULT} = [{'time': 0.021817528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014095899999999953, 'source_diff': 0.00014095899999999953}, {'time': 0.021986958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:18.753" endtime="20201112 12:27:18.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.769" level="INFO">${ACCURACY} = {'diff': [0.00014095899999999953, 0.00014127700000000215, 0.00014083299999999993, 0.00014095899999999953, 0.00014047199999999913, 0.00014088799999999874, 0.0001405690000000001, 0.0001406949999999997, ...</msg>
<status status="PASS" starttime="20201112 12:27:18.757" endtime="20201112 12:27:18.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.774" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.772" endtime="20201112 12:27:18.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.776" level="INFO">VALUE: [0.00014095899999999953, 0.00014127700000000215, 0.00014083299999999993, 0.00014095899999999953, 0.00014047199999999913, 0.00014088799999999874, 0.0001405690000000001, 0.0001406949999999997, 0.00014055500000000054, 0.00014123599999999945, 0.00014104200000000094, 0.0001411669999999976, 0.0001409310000000004, 0.00014108399999999965, 0.00014083299999999993, 0.00014045899999999903, 0.0001405279999999974, 0.00014133300000000043, 0.00014099999999999877, 0.00014079100000000122, 0.00014040300000000075, 0.00014083400000000287, 0.00014101399999999834, 0.0001407920000000007, 0.0001408889999999982, 0.00014066700000000057, 0.00014090200000000178, 0.00014100000000000223, 0.0001405690000000001, 0.00014047300000000207, 0.00014036099999999857, 0.0001403339999999989, 0.00014122199999999988, 0.0001410140000000018, 0.00014104100000000147, 0.00014065299999999753, 0.00014058299999999968, 0.00014108399999999965, 0.00014063900000000143, 0.00014045799999999956, 0.00014058400000000262, 0.00014027800000000062, 0.0001409310000000004, 0.00014123599999999945, 0.00014037499999999814, 0.00014045799999999956, 0.00014040300000000075, 0.00014059699999999925, 0.00014127800000000162, 0.0001405270000000014]</msg>
<status status="PASS" starttime="20201112 12:27:18.775" endtime="20201112 12:27:18.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.770" endtime="20201112 12:27:18.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.780" endtime="20201112 12:27:18.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.783" endtime="20201112 12:27:18.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.781" endtime="20201112 12:27:18.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.778" endtime="20201112 12:27:18.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.411" endtime="20201112 12:27:18.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.411" endtime="20201112 12:27:18.804"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.812" endtime="20201112 12:27:18.832"></status>
</kw>
<msg timestamp="20201112 12:27:18.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.811" endtime="20201112 12:27:18.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.834" endtime="20201112 12:27:18.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.836" endtime="20201112 12:27:18.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.808" endtime="20201112 12:27:18.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.806" endtime="20201112 12:27:18.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.845" endtime="20201112 12:27:19.132"></status>
</kw>
<msg timestamp="20201112 12:27:19.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.844" endtime="20201112 12:27:19.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.136" endtime="20201112 12:27:19.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.144" endtime="20201112 12:27:19.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.841" endtime="20201112 12:27:19.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.840" endtime="20201112 12:27:19.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.151" level="INFO">${RESULT} = [{'time': 0.021801792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014152800000000187, 'source_diff': 0.00014152800000000187}, {'time': 0.021965194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:19.148" endtime="20201112 12:27:19.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.165" level="INFO">${ACCURACY} = {'diff': [0.00014152800000000187, 0.00014183300000000093, 0.00014194400000000149, 0.00014147200000000013, 0.00014195900000000053, 0.00014166599999999863, 0.00014172200000000038, 0.00014219499999999774...</msg>
<status status="PASS" starttime="20201112 12:27:19.152" endtime="20201112 12:27:19.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.170" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.169" endtime="20201112 12:27:19.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.172" level="INFO">VALUE: [0.00014152800000000187, 0.00014183300000000093, 0.00014194400000000149, 0.00014147200000000013, 0.00014195900000000053, 0.00014166599999999863, 0.00014172200000000038, 0.00014219499999999774, 0.00014143099999999742, 0.0001415140000000023, 0.00014226399999999959, 0.00014219499999999774, 0.0001418470000000005, 0.00014149999999999927, 0.00014197200000000063, 0.00014159700000000025, 0.00014222300000000035, 0.00014211100000000032, 0.00014204200000000194, 0.00014142999999999795, 0.00014225000000000002, 0.00014229099999999925, 0.0001418050000000018, 0.0001418340000000004, 0.00014170900000000028, 0.0001416950000000007, 0.00014195800000000106, 0.00014215299999999903, 0.00014223600000000045, 0.0001419860000000002, 0.00014154200000000144, 0.00014195899999999706, 0.00014176399999999909, 0.0001421950000000012, 0.00014191699999999835, 0.0001416950000000007, 0.00014173599999999995, 0.00014213899999999946, 0.00014191599999999888, 0.00014141700000000132, 0.00014154100000000197, 0.0001417920000000017, 0.0001415690000000011, 0.00014216700000000207, 0.00014233300000000143, 0.00014184699999999703, 0.0001421249999999999, 0.00014154199999999797, 0.00014222200000000088, 0.00014220799999999784]</msg>
<status status="PASS" starttime="20201112 12:27:19.171" endtime="20201112 12:27:19.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.166" endtime="20201112 12:27:19.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.179" endtime="20201112 12:27:19.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.183" endtime="20201112 12:27:19.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.181" endtime="20201112 12:27:19.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.178" endtime="20201112 12:27:19.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.805" endtime="20201112 12:27:19.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.804" endtime="20201112 12:27:19.203"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.212" endtime="20201112 12:27:19.232"></status>
</kw>
<msg timestamp="20201112 12:27:19.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.210" endtime="20201112 12:27:19.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.234" endtime="20201112 12:27:19.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.236" endtime="20201112 12:27:19.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.208" endtime="20201112 12:27:19.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.206" endtime="20201112 12:27:19.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.245" endtime="20201112 12:27:19.530"></status>
</kw>
<msg timestamp="20201112 12:27:19.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.243" endtime="20201112 12:27:19.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.534" endtime="20201112 12:27:19.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.543" endtime="20201112 12:27:19.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.241" endtime="20201112 12:27:19.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.239" endtime="20201112 12:27:19.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.549" level="INFO">${RESULT} = [{'time': 0.021820347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001426250000000004, 'source_diff': 0.0001426250000000004}, {'time': 0.021987889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.546" endtime="20201112 12:27:19.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.562" level="INFO">${ACCURACY} = {'diff': [0.0001426250000000004, 0.0001424860000000007, 0.00014280600000000226, 0.00014313900000000046, 0.00014319399999999927, 0.00014319399999999927, 0.00014320799999999884, 0.00014327700000000068, ...</msg>
<status status="PASS" starttime="20201112 12:27:19.550" endtime="20201112 12:27:19.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.566" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.565" endtime="20201112 12:27:19.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.569" level="INFO">VALUE: [0.0001426250000000004, 0.0001424860000000007, 0.00014280600000000226, 0.00014313900000000046, 0.00014319399999999927, 0.00014319399999999927, 0.00014320799999999884, 0.00014327700000000068, 0.00014301400000000034, 0.00014254199999999898, 0.00014272200000000138, 0.00014258399999999768, 0.0001431250000000009, 0.00014301400000000034, 0.00014263899999999996, 0.00014288800000000074, 0.00014280499999999932, 0.0001431799999999997, 0.00014259800000000072, 0.00014308300000000218, 0.00014283300000000193, 0.00014300000000000077, 0.00014270799999999834, 0.00014257000000000158, 0.00014287500000000064, 0.0001431250000000009, 0.0001428470000000015, 0.00014305599999999905, 0.00014297199999999816, 0.0001428890000000002, 0.00014272200000000138, 0.00014333300000000243, 0.00014315300000000003, 0.00014295799999999859, 0.00014259700000000125, 0.00014301400000000034, 0.00014245899999999756, 0.000143041, 0.00014265200000000006, 0.00014326400000000059, 0.00014295900000000153, 0.00014288800000000074, 0.00014336100000000157, 0.0001427089999999978, 0.00014305499999999957, 0.00014254199999999898, 0.00014277800000000312, 0.00014295799999999859, 0.00014269400000000224, 0.00014308399999999818]</msg>
<status status="PASS" starttime="20201112 12:27:19.567" endtime="20201112 12:27:19.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.563" endtime="20201112 12:27:19.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.572" endtime="20201112 12:27:19.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.576" endtime="20201112 12:27:19.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.574" endtime="20201112 12:27:19.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.571" endtime="20201112 12:27:19.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.204" endtime="20201112 12:27:19.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.204" endtime="20201112 12:27:19.597"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.605" endtime="20201112 12:27:19.625"></status>
</kw>
<msg timestamp="20201112 12:27:19.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.604" endtime="20201112 12:27:19.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.627" endtime="20201112 12:27:19.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.629" endtime="20201112 12:27:19.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.601" endtime="20201112 12:27:19.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.599" endtime="20201112 12:27:19.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.638" endtime="20201112 12:27:19.925"></status>
</kw>
<msg timestamp="20201112 12:27:19.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.637" endtime="20201112 12:27:19.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.929" endtime="20201112 12:27:19.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.937" endtime="20201112 12:27:19.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.634" endtime="20201112 12:27:19.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.632" endtime="20201112 12:27:19.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.944" level="INFO">${RESULT} = [{'time': 0.021805222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014395799999999959, 'source_diff': 0.00014395799999999959}, {'time': 0.021968681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:19.940" endtime="20201112 12:27:19.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.956" level="INFO">${ACCURACY} = {'diff': [0.00014395799999999959, 0.00014433399999999943, 0.00014370799999999934, 0.0001439999999999983, 0.00014358399999999868, 0.00014330499999999982, 0.0001441939999999968, 0.00014345900000000203, ...</msg>
<status status="PASS" starttime="20201112 12:27:19.945" endtime="20201112 12:27:19.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.961" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.960" endtime="20201112 12:27:19.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.963" level="INFO">VALUE: [0.00014395799999999959, 0.00014433399999999943, 0.00014370799999999934, 0.0001439999999999983, 0.00014358399999999868, 0.00014330499999999982, 0.0001441939999999968, 0.00014345900000000203, 0.00014345900000000203, 0.00014406900000000014, 0.00014422299999999888, 0.00014356899999999964, 0.0001435280000000004, 0.00014351400000000084, 0.00014420900000000278, 0.00014369399999999977, 0.00014365300000000053, 0.00014395799999999959, 0.0001435280000000004, 0.0001439860000000022, 0.00014416699999999713, 0.00014363900000000096, 0.00014390300000000078, 0.0001435410000000005, 0.00014347200000000213, 0.00014404200000000048, 0.00014377700000000118, 0.00014402799999999744, 0.00014390300000000078, 0.0001440829999999997, 0.0001435829999999992, 0.00014425000000000202, 0.00014429099999999778, 0.0001434020000000008, 0.00014401399999999787, 0.00014429099999999778, 0.00014401399999999787, 0.0001436670000000001, 0.0001438189999999999, 0.0001434020000000008, 0.0001433890000000007, 0.00014426400000000159, 0.00014420799999999984, 0.00014377800000000066, 0.00014409800000000222, 0.00014388899999999774, 0.00014415300000000103, 0.00014369399999999977, 0.00014406899999999667, 0.0001436670000000001]</msg>
<status status="PASS" starttime="20201112 12:27:19.962" endtime="20201112 12:27:19.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.957" endtime="20201112 12:27:19.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.967" endtime="20201112 12:27:19.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.970" endtime="20201112 12:27:19.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.969" endtime="20201112 12:27:19.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.965" endtime="20201112 12:27:19.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.598" endtime="20201112 12:27:19.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.597" endtime="20201112 12:27:19.991"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.000" endtime="20201112 12:27:20.020"></status>
</kw>
<msg timestamp="20201112 12:27:20.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.998" endtime="20201112 12:27:20.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.022" endtime="20201112 12:27:20.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.024" endtime="20201112 12:27:20.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.996" endtime="20201112 12:27:20.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.994" endtime="20201112 12:27:20.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.033" endtime="20201112 12:27:20.319"></status>
</kw>
<msg timestamp="20201112 12:27:20.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022005847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.032" endtime="20201112 12:27:20.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022005847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.323" endtime="20201112 12:27:20.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.332" endtime="20201112 12:27:20.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.029" endtime="20201112 12:27:20.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.027" endtime="20201112 12:27:20.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.338" level="INFO">${RESULT} = [{'time': 0.022005847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014502799999999844, 'source_diff': 0.00014502799999999844}, {'time': 0.022177236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:20.335" endtime="20201112 12:27:20.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.351" level="INFO">${ACCURACY} = {'diff': [0.00014502799999999844, 0.00014451399999999837, 0.00014497299999999963, 0.00014444400000000052, 0.0001449020000000023, 0.00014506900000000114, 0.00014437499999999867, 0.00014443100000000042,...</msg>
<status status="PASS" starttime="20201112 12:27:20.339" endtime="20201112 12:27:20.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.355" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.354" endtime="20201112 12:27:20.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.358" level="INFO">VALUE: [0.00014502799999999844, 0.00014451399999999837, 0.00014497299999999963, 0.00014444400000000052, 0.0001449020000000023, 0.00014506900000000114, 0.00014437499999999867, 0.00014443100000000042, 0.00014502799999999844, 0.00014443100000000042, 0.00014451400000000184, 0.00014426399999999812, 0.0001448190000000009, 0.0001446250000000024, 0.00014498599999999973, 0.00014474999999999905, 0.00014430500000000082, 0.00014524999999999955, 0.0001444860000000027, 0.0001451670000000016, 0.00014473599999999948, 0.0001448609999999996, 0.00014509700000000028, 0.000145041999999998, 0.00014509700000000028, 0.00014512499999999942, 0.00014443099999999695, 0.0001452090000000003, 0.00014491700000000135, 0.00014430499999999735, 0.00014461100000000282, 0.0001448060000000008, 0.00014434699999999953, 0.0001446800000000012, 0.00014458399999999968, 0.0001453060000000013, 0.00014476400000000209, 0.00014451400000000184, 0.00014493100000000092, 0.00014475000000000252, 0.00014445800000000009, 0.0001443890000000017, 0.00014473599999999948, 0.0001450549999999981, 0.00014508400000000019, 0.00014473599999999948, 0.0001448609999999996, 0.00014463900000000196, 0.00014445800000000009, 0.00014473599999999948]</msg>
<status status="PASS" starttime="20201112 12:27:20.357" endtime="20201112 12:27:20.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.352" endtime="20201112 12:27:20.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.361" endtime="20201112 12:27:20.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.365" endtime="20201112 12:27:20.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.363" endtime="20201112 12:27:20.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.360" endtime="20201112 12:27:20.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.992" endtime="20201112 12:27:20.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.992" endtime="20201112 12:27:20.386"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.394" endtime="20201112 12:27:20.414"></status>
</kw>
<msg timestamp="20201112 12:27:20.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.393" endtime="20201112 12:27:20.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.416" endtime="20201112 12:27:20.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.418" endtime="20201112 12:27:20.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.390" endtime="20201112 12:27:20.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.388" endtime="20201112 12:27:20.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.427" endtime="20201112 12:27:20.714"></status>
</kw>
<msg timestamp="20201112 12:27:20.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.426" endtime="20201112 12:27:20.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.718" endtime="20201112 12:27:20.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.726" endtime="20201112 12:27:20.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.423" endtime="20201112 12:27:20.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.422" endtime="20201112 12:27:20.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.733" level="INFO">${RESULT} = [{'time': 0.021814736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001457220000000009, 'source_diff': 0.0001457220000000009}, {'time': 0.021992139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.729" endtime="20201112 12:27:20.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.747" level="INFO">${ACCURACY} = {'diff': [0.0001457220000000009, 0.000146139, 0.00014566599999999916, 0.00014612500000000042, 0.00014573600000000048, 0.0001456389999999995, 0.00014593100000000192, 0.0001455830000000012, 0.0001456519...</msg>
<status status="PASS" starttime="20201112 12:27:20.733" endtime="20201112 12:27:20.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.751" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.750" endtime="20201112 12:27:20.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.754" level="INFO">VALUE: [0.0001457220000000009, 0.000146139, 0.00014566599999999916, 0.00014612500000000042, 0.00014573600000000048, 0.0001456389999999995, 0.00014593100000000192, 0.0001455830000000012, 0.0001456519999999996, 0.0001460000000000003, 0.0001454869999999997, 0.00014568100000000167, 0.0001453890000000027, 0.00014609700000000128, 0.00014538899999999924, 0.00014605500000000257, 0.0001460549999999991, 0.00014631899999999892, 0.00014545800000000109, 0.00014575000000000005, 0.00014590300000000278, 0.00014576399999999962, 0.00014562499999999992, 0.00014532000000000087, 0.0001459029999999993, 0.00014627799999999969, 0.00014588899999999974, 0.000146139, 0.00014548600000000023, 0.00014573600000000048, 0.00014625000000000055, 0.00014612500000000042, 0.00014605600000000205, 0.00014608400000000119, 0.00014573600000000048, 0.00014616599999999966, 0.0001455280000000024, 0.00014586200000000007, 0.00014573600000000048, 0.00014576400000000309, 0.00014588899999999974, 0.0001457220000000009, 0.00014608299999999824, 0.0001460000000000003, 0.00014606899999999867, 0.00014594400000000202, 0.00014576399999999962, 0.00014531899999999792, 0.0001454999999999998, 0.00014540300000000228]</msg>
<status status="PASS" starttime="20201112 12:27:20.752" endtime="20201112 12:27:20.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.748" endtime="20201112 12:27:20.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.757" endtime="20201112 12:27:20.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.761" endtime="20201112 12:27:20.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.759" endtime="20201112 12:27:20.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.756" endtime="20201112 12:27:20.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.387" endtime="20201112 12:27:20.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.386" endtime="20201112 12:27:20.782"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.790" endtime="20201112 12:27:20.810"></status>
</kw>
<msg timestamp="20201112 12:27:20.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.789" endtime="20201112 12:27:20.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.812" endtime="20201112 12:27:20.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.814" endtime="20201112 12:27:20.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.786" endtime="20201112 12:27:20.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.784" endtime="20201112 12:27:20.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.823" endtime="20201112 12:27:21.111"></status>
</kw>
<msg timestamp="20201112 12:27:21.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02162425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:20.822" endtime="20201112 12:27:21.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02162425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:21.115" endtime="20201112 12:27:21.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.124" endtime="20201112 12:27:21.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.819" endtime="20201112 12:27:21.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.817" endtime="20201112 12:27:21.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.130" level="INFO">${RESULT} = [{'time': 0.021770944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001466939999999993, 'source_diff': 0.0001466939999999993}, {'time': 0.021950333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.127" endtime="20201112 12:27:21.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.143" level="INFO">${ACCURACY} = {'diff': [0.0001466939999999993, 0.0001468749999999977, 0.00014656899999999917, 0.0001469719999999987, 0.00014647200000000166, 0.00014720799999999937, 0.00014651400000000037, 0.00014729100000000078, 0...</msg>
<status status="PASS" starttime="20201112 12:27:21.131" endtime="20201112 12:27:21.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.148" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.147" endtime="20201112 12:27:21.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.150" level="INFO">VALUE: [0.0001466939999999993, 0.0001468749999999977, 0.00014656899999999917, 0.0001469719999999987, 0.00014647200000000166, 0.00014720799999999937, 0.00014651400000000037, 0.00014729100000000078, 0.00014679100000000028, 0.00014702700000000096, 0.00014729200000000026, 0.0001469719999999987, 0.00014726400000000112, 0.00014662500000000092, 0.0001470969999999988, 0.00014679200000000323, 0.00014725000000000155, 0.00014694499999999902, 0.0001471809999999997, 0.00014661100000000135, 0.0001466939999999993, 0.00014706899999999967, 0.0001464580000000021, 0.0001472770000000012, 0.00014644400000000252, 0.0001464159999999999, 0.00014651400000000037, 0.00014661099999999788, 0.00014702700000000096, 0.00014727799999999722, 0.00014662500000000092, 0.00014642999999999948, 0.0001471809999999997, 0.00014626400000000012, 0.00014706999999999915, 0.00014659800000000126, 0.00014670800000000234, 0.000147042, 0.00014687500000000117, 0.0001470000000000013, 0.00014679100000000028, 0.00014684699999999856, 0.00014661099999999788, 0.00014716700000000013, 0.00014647300000000113, 0.00014643100000000242, 0.00014716700000000013, 0.00014723600000000198, 0.0001469450000000025, 0.00014644399999999905]</msg>
<status status="PASS" starttime="20201112 12:27:21.149" endtime="20201112 12:27:21.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.144" endtime="20201112 12:27:21.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.154" endtime="20201112 12:27:21.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.157" endtime="20201112 12:27:21.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.155" endtime="20201112 12:27:21.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.152" endtime="20201112 12:27:21.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.782" endtime="20201112 12:27:21.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.782" endtime="20201112 12:27:21.178"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.186" endtime="20201112 12:27:21.207"></status>
</kw>
<msg timestamp="20201112 12:27:21.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.185" endtime="20201112 12:27:21.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.208" endtime="20201112 12:27:21.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.211" endtime="20201112 12:27:21.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.182" endtime="20201112 12:27:21.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.180" endtime="20201112 12:27:21.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.220" endtime="20201112 12:27:21.506"></status>
</kw>
<msg timestamp="20201112 12:27:21.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.218" endtime="20201112 12:27:21.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.510" endtime="20201112 12:27:21.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.518" endtime="20201112 12:27:21.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.215" endtime="20201112 12:27:21.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.214" endtime="20201112 12:27:21.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.525" level="INFO">${RESULT} = [{'time': 0.021797389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014743099999999995, 'source_diff': 0.00014743099999999995}, {'time': 0.021971847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:21.521" endtime="20201112 12:27:21.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.538" level="INFO">${ACCURACY} = {'diff': [0.00014743099999999995, 0.0001475550000000006, 0.0001480550000000011, 0.00014799999999999883, 0.00014795800000000012, 0.0001481529999999981, 0.00014784699999999956, 0.00014727800000000069, 0...</msg>
<status status="PASS" starttime="20201112 12:27:21.526" endtime="20201112 12:27:21.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.542" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.541" endtime="20201112 12:27:21.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.544" level="INFO">VALUE: [0.00014743099999999995, 0.0001475550000000006, 0.0001480550000000011, 0.00014799999999999883, 0.00014795800000000012, 0.0001481529999999981, 0.00014784699999999956, 0.00014727800000000069, 0.00014805600000000058, 0.0001476390000000015, 0.00014744499999999952, 0.0001478749999999987, 0.00014805499999999763, 0.00014826400000000212, 0.00014777800000000119, 0.00014751299999999842, 0.00014823699999999898, 0.00014818000000000123, 0.0001478749999999987, 0.0001478749999999987, 0.0001483200000000004, 0.00014801299999999892, 0.0001480130000000024, 0.00014749999999999833, 0.00014786099999999913, 0.000147735999999999, 0.00014811099999999938, 0.0001480969999999998, 0.00014772199999999944, 0.00014759799999999879, 0.00014781900000000042, 0.00014799999999999883, 0.0001473610000000021, 0.00014831900000000092, 0.0001474030000000008, 0.0001480000000000023, 0.00014767999999999726, 0.0001478749999999987, 0.0001480000000000023, 0.00014804100000000153, 0.00014809799999999929, 0.0001478749999999987, 0.000148042000000001, 0.00014783399999999947, 0.00014758399999999922, 0.0001477770000000017, 0.00014767999999999726, 0.00014736099999999863, 0.00014812499999999895, 0.00014733399999999897]</msg>
<status status="PASS" starttime="20201112 12:27:21.543" endtime="20201112 12:27:21.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.539" endtime="20201112 12:27:21.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.548" endtime="20201112 12:27:21.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.551" endtime="20201112 12:27:21.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.550" endtime="20201112 12:27:21.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.546" endtime="20201112 12:27:21.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.179" endtime="20201112 12:27:21.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.178" endtime="20201112 12:27:21.572"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.581" endtime="20201112 12:27:21.601"></status>
</kw>
<msg timestamp="20201112 12:27:21.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.579" endtime="20201112 12:27:21.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.603" endtime="20201112 12:27:21.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.605" endtime="20201112 12:27:21.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.577" endtime="20201112 12:27:21.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.575" endtime="20201112 12:27:21.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.614" endtime="20201112 12:27:21.900"></status>
</kw>
<msg timestamp="20201112 12:27:21.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.613" endtime="20201112 12:27:21.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.904" endtime="20201112 12:27:21.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.912" endtime="20201112 12:27:21.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.610" endtime="20201112 12:27:21.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.608" endtime="20201112 12:27:21.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.919" level="INFO">${RESULT} = [{'time': 0.021898431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001487229999999999, 'source_diff': 0.0001487229999999999}, {'time': 0.022061875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.915" endtime="20201112 12:27:21.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.932" level="INFO">${ACCURACY} = {'diff': [0.0001487229999999999, 0.00014930600000000183, 0.00014861099999999988, 0.000148429999999998, 0.00014863899999999902, 0.00014869399999999783, 0.00014907000000000115, 0.00014908400000000072, 0...</msg>
<status status="PASS" starttime="20201112 12:27:21.920" endtime="20201112 12:27:21.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.936" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.935" endtime="20201112 12:27:21.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.939" level="INFO">VALUE: [0.0001487229999999999, 0.00014930600000000183, 0.00014861099999999988, 0.000148429999999998, 0.00014863899999999902, 0.00014869399999999783, 0.00014907000000000115, 0.00014908400000000072, 0.0001486529999999986, 0.00014849999999999933, 0.00014909800000000029, 0.0001491810000000017, 0.00014918000000000223, 0.00014904099999999906, 0.00014880600000000133, 0.00014905499999999863, 0.00014866699999999816, 0.00014879200000000176, 0.00014866700000000163, 0.00014894400000000155, 0.00014862499999999945, 0.0001485559999999976, 0.00014913899999999952, 0.00014926399999999965, 0.000149042000000002, 0.00014923599999999704, 0.00014912499999999995, 0.00014870800000000087, 0.00014893000000000198, 0.00014898600000000026, 0.000148736, 0.0001490559999999981, 0.0001485970000000003, 0.00014857000000000065, 0.0001485139999999989, 0.00014862499999999945, 0.0001486940000000013, 0.00014917999999999876, 0.00014911100000000038, 0.00014899999999999983, 0.0001488749999999997, 0.00014912499999999995, 0.00014906999999999768, 0.00014886100000000013, 0.0001489169999999984, 0.0001485970000000003, 0.0001491810000000017, 0.00014930599999999836, 0.0001493750000000002, 0.00014901400000000287]</msg>
<status status="PASS" starttime="20201112 12:27:21.937" endtime="20201112 12:27:21.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.933" endtime="20201112 12:27:21.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.942" endtime="20201112 12:27:21.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.945" endtime="20201112 12:27:21.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.944" endtime="20201112 12:27:21.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.940" endtime="20201112 12:27:21.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.573" endtime="20201112 12:27:21.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.573" endtime="20201112 12:27:21.966"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.975" endtime="20201112 12:27:21.995"></status>
</kw>
<msg timestamp="20201112 12:27:21.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.973" endtime="20201112 12:27:21.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.997" endtime="20201112 12:27:21.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.999" endtime="20201112 12:27:22.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.971" endtime="20201112 12:27:22.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.969" endtime="20201112 12:27:22.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.008" endtime="20201112 12:27:22.296"></status>
</kw>
<msg timestamp="20201112 12:27:22.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021715444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.007" endtime="20201112 12:27:22.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021715444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.300" endtime="20201112 12:27:22.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.308" endtime="20201112 12:27:22.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.004" endtime="20201112 12:27:22.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.003" endtime="20201112 12:27:22.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.314" level="INFO">${RESULT} = [{'time': 0.021865097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001496529999999996, 'source_diff': 0.0001496529999999996}, {'time': 0.022033569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.311" endtime="20201112 12:27:22.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.329" level="INFO">${ACCURACY} = {'diff': [0.0001496529999999996, 0.00015000000000000083, 0.0001495689999999987, 0.00015011100000000138, 0.000149736000000001, 0.0001499859999999978, 0.0001502499999999976, 0.0001497919999999993, 0.000...</msg>
<status status="PASS" starttime="20201112 12:27:22.315" endtime="20201112 12:27:22.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.333" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.332" endtime="20201112 12:27:22.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.336" level="INFO">VALUE: [0.0001496529999999996, 0.00015000000000000083, 0.0001495689999999987, 0.00015011100000000138, 0.000149736000000001, 0.0001499859999999978, 0.0001502499999999976, 0.0001497919999999993, 0.00015025000000000108, 0.00015017999999999976, 0.0001502360000000015, 0.00014947199999999772, 0.00014943099999999848, 0.0001502360000000015, 0.000149736000000001, 0.00014961100000000088, 0.00014988900000000027, 0.0001501109999999979, 0.00014973700000000048, 0.0001493620000000001, 0.0001497919999999993, 0.0001502360000000015, 0.00015022299999999794, 0.0001502919999999998, 0.00014954100000000303, 0.00015012500000000095, 0.0001493750000000002, 0.00015020899999999837, 0.00014994400000000255, 0.0001500140000000004, 0.00014955499999999913, 0.00014952799999999947, 0.00014962500000000045, 0.00014972200000000144, 0.00014967999999999926, 0.00014968099999999873, 0.000149833999999998, 0.00014948600000000076, 0.00015012500000000095, 0.00015026400000000065, 0.00014931899999999845, 0.00015005499999999963, 0.00015019399999999933, 0.00015027800000000022, 0.0001501949999999988, 0.00014969399999999883, 0.00014973599999999754, 0.0001495139999999999, 0.00014994499999999855, 0.00014995800000000212]</msg>
<status status="PASS" starttime="20201112 12:27:22.334" endtime="20201112 12:27:22.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.330" endtime="20201112 12:27:22.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.339" endtime="20201112 12:27:22.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.343" endtime="20201112 12:27:22.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.341" endtime="20201112 12:27:22.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.338" endtime="20201112 12:27:22.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.967" endtime="20201112 12:27:22.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.967" endtime="20201112 12:27:22.364"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.372" endtime="20201112 12:27:22.393"></status>
</kw>
<msg timestamp="20201112 12:27:22.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.371" endtime="20201112 12:27:22.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.394" endtime="20201112 12:27:22.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.397" endtime="20201112 12:27:22.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.368" endtime="20201112 12:27:22.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.366" endtime="20201112 12:27:22.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.405" endtime="20201112 12:27:22.692"></status>
</kw>
<msg timestamp="20201112 12:27:22.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.404" endtime="20201112 12:27:22.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.696" endtime="20201112 12:27:22.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.704" endtime="20201112 12:27:22.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.401" endtime="20201112 12:27:22.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.400" endtime="20201112 12:27:22.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.711" level="INFO">${RESULT} = [{'time': 0.021769167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015043099999999948, 'source_diff': 0.00015043099999999948}, {'time': 0.021946597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:22.708" endtime="20201112 12:27:22.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.724" level="INFO">${ACCURACY} = {'diff': [0.00015043099999999948, 0.00015054100000000056, 0.00015113900000000152, 0.00015040200000000087, 0.00015125000000000208, 0.00015090300000000084, 0.0001510140000000014, 0.00015038900000000077,...</msg>
<status status="PASS" starttime="20201112 12:27:22.712" endtime="20201112 12:27:22.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.728" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.727" endtime="20201112 12:27:22.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.731" level="INFO">VALUE: [0.00015043099999999948, 0.00015054100000000056, 0.00015113900000000152, 0.00015040200000000087, 0.00015125000000000208, 0.00015090300000000084, 0.0001510140000000014, 0.00015038900000000077, 0.00015081899999999995, 0.00015045799999999915, 0.0001511949999999998, 0.00015105500000000063, 0.00015075000000000158, 0.00015076400000000115, 0.0001508889999999978, 0.00015045799999999915, 0.00015112500000000195, 0.0001511949999999998, 0.00015062500000000145, 0.000150833999999999, 0.00015134800000000254, 0.00015119400000000033, 0.00015108399999999925, 0.00015050000000000133, 0.00015061100000000188, 0.00015068000000000026, 0.0001503469999999986, 0.00015112500000000195, 0.000150736000000002, 0.00015073700000000148, 0.0001505140000000009, 0.0001505140000000009, 0.00015080499999999691, 0.0001503469999999986, 0.0001508200000000029, 0.00015106999999999968, 0.0001507499999999981, 0.00015051300000000142, 0.0001510690000000002, 0.00015095899999999912, 0.00015062500000000145, 0.00015081999999999943, 0.00015081899999999995, 0.00015094499999999955, 0.0001505140000000009, 0.0001511109999999989, 0.00015062500000000145, 0.00015075000000000158, 0.00015069399999999983, 0.00015038900000000077]</msg>
<status status="PASS" starttime="20201112 12:27:22.729" endtime="20201112 12:27:22.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.725" endtime="20201112 12:27:22.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.734" endtime="20201112 12:27:22.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.738" endtime="20201112 12:27:22.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.736" endtime="20201112 12:27:22.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.733" endtime="20201112 12:27:22.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.364" endtime="20201112 12:27:22.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.364" endtime="20201112 12:27:22.758"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.767" endtime="20201112 12:27:22.787"></status>
</kw>
<msg timestamp="20201112 12:27:22.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.765" endtime="20201112 12:27:22.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.789" endtime="20201112 12:27:22.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.791" endtime="20201112 12:27:22.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.763" endtime="20201112 12:27:22.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.761" endtime="20201112 12:27:22.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.800" endtime="20201112 12:27:23.086"></status>
</kw>
<msg timestamp="20201112 12:27:23.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.799" endtime="20201112 12:27:23.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.090" endtime="20201112 12:27:23.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.098" endtime="20201112 12:27:23.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.796" endtime="20201112 12:27:23.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.794" endtime="20201112 12:27:23.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.104" level="INFO">${RESULT} = [{'time': 0.021770806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015184799999999957, 'source_diff': 0.00015184799999999957}, {'time': 0.021940236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:23.101" endtime="20201112 12:27:23.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.118" level="INFO">${ACCURACY} = {'diff': [0.00015184799999999957, 0.0001521799999999983, 0.00015191699999999794, 0.00015154199999999757, 0.00015137499999999873, 0.0001518470000000001, 0.00015173599999999954, 0.00015172199999999997, ...</msg>
<status status="PASS" starttime="20201112 12:27:23.105" endtime="20201112 12:27:23.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.123" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.122" endtime="20201112 12:27:23.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.125" level="INFO">VALUE: [0.00015184799999999957, 0.0001521799999999983, 0.00015191699999999794, 0.00015154199999999757, 0.00015137499999999873, 0.0001518470000000001, 0.00015173599999999954, 0.00015172199999999997, 0.0001513750000000022, 0.00015152800000000147, 0.00015180600000000086, 0.00015170899999999987, 0.00015169399999999736, 0.0001522080000000009, 0.00015149999999999886, 0.00015190300000000184, 0.00015145800000000015, 0.00015170899999999987, 0.00015192999999999804, 0.0001517080000000004, 0.0001514859999999993, 0.00015156899999999723, 0.00015152800000000147, 0.0001514859999999993, 0.00015230499999999841, 0.00015130600000000036, 0.00015173599999999954, 0.0001519859999999998, 0.0001516109999999994, 0.00015218100000000123, 0.0001513750000000022, 0.00015166700000000116, 0.00015154199999999757, 0.00015136099999999916, 0.00015156899999999723, 0.00015218000000000176, 0.00015205499999999816, 0.00015149999999999886, 0.00015136099999999916, 0.00015159699999999984, 0.00015200000000000283, 0.00015179099999999834, 0.00015162499999999898, 0.00015154199999999757, 0.0001521109999999999, 0.00015190299999999837, 0.00015186099999999966, 0.00015163899999999855, 0.00015142999999999754, 0.00015216599999999872]</msg>
<status status="PASS" starttime="20201112 12:27:23.124" endtime="20201112 12:27:23.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.119" endtime="20201112 12:27:23.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.129" endtime="20201112 12:27:23.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.132" endtime="20201112 12:27:23.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.131" endtime="20201112 12:27:23.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.127" endtime="20201112 12:27:23.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.759" endtime="20201112 12:27:23.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.759" endtime="20201112 12:27:23.153"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.162" endtime="20201112 12:27:23.182"></status>
</kw>
<msg timestamp="20201112 12:27:23.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.160" endtime="20201112 12:27:23.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.184" endtime="20201112 12:27:23.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.186" endtime="20201112 12:27:23.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.158" endtime="20201112 12:27:23.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.155" endtime="20201112 12:27:23.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.195" endtime="20201112 12:27:23.482"></status>
</kw>
<msg timestamp="20201112 12:27:23.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.193" endtime="20201112 12:27:23.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.486" endtime="20201112 12:27:23.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.494" endtime="20201112 12:27:23.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.191" endtime="20201112 12:27:23.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.189" endtime="20201112 12:27:23.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.501" level="INFO">${RESULT} = [{'time': 0.021927819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015318000000000276, 'source_diff': 0.00015318000000000276}, {'time': 0.022094319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:23.497" endtime="20201112 12:27:23.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.513" level="INFO">${ACCURACY} = {'diff': [0.00015318000000000276, 0.00015265199999999965, 0.00015255499999999866, 0.00015277799999999925, 0.0001522499999999996, 0.000152430999999998, 0.00015318100000000223, 0.0001524860000000003, 0....</msg>
<status status="PASS" starttime="20201112 12:27:23.501" endtime="20201112 12:27:23.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.518" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.517" endtime="20201112 12:27:23.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.520" level="INFO">VALUE: [0.00015318000000000276, 0.00015265199999999965, 0.00015255499999999866, 0.00015277799999999925, 0.0001522499999999996, 0.000152430999999998, 0.00015318100000000223, 0.0001524860000000003, 0.00015230500000000188, 0.00015273600000000054, 0.00015256899999999823, 0.00015265299999999912, 0.0001528470000000011, 0.00015316599999999972, 0.0001529170000000024, 0.00015237499999999973, 0.00015248599999999682, 0.00015230499999999841, 0.00015237499999999973, 0.0001531110000000009, 0.00015333300000000202, 0.0001531799999999993, 0.0001527500000000001, 0.00015257000000000118, 0.00015268099999999826, 0.0001523470000000006, 0.00015262499999999998, 0.00015244500000000105, 0.00015249999999999986, 0.00015301399999999993, 0.00015294500000000155, 0.00015236100000000016, 0.00015300000000000036, 0.0001531669999999992, 0.00015309700000000134, 0.0001531120000000004, 0.0001528889999999998, 0.00015261099999999694, 0.00015273600000000054, 0.000153221999999998, 0.00015326400000000018, 0.00015276399999999968, 0.00015287500000000023, 0.00015294500000000155, 0.00015276399999999968, 0.00015280500000000238, 0.00015318000000000276, 0.00015312500000000048, 0.00015301399999999993, 0.00015313800000000058]</msg>
<status status="PASS" starttime="20201112 12:27:23.519" endtime="20201112 12:27:23.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.514" endtime="20201112 12:27:23.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.524" endtime="20201112 12:27:23.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.527" endtime="20201112 12:27:23.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.526" endtime="20201112 12:27:23.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.522" endtime="20201112 12:27:23.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.154" endtime="20201112 12:27:23.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.153" endtime="20201112 12:27:23.548"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.557" endtime="20201112 12:27:23.577"></status>
</kw>
<msg timestamp="20201112 12:27:23.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.555" endtime="20201112 12:27:23.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.579" endtime="20201112 12:27:23.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.581" endtime="20201112 12:27:23.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.553" endtime="20201112 12:27:23.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.551" endtime="20201112 12:27:23.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.590" endtime="20201112 12:27:23.876"></status>
</kw>
<msg timestamp="20201112 12:27:23.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.589" endtime="20201112 12:27:23.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.880" endtime="20201112 12:27:23.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.888" endtime="20201112 12:27:23.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.586" endtime="20201112 12:27:23.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.584" endtime="20201112 12:27:23.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.895" level="INFO">${RESULT} = [{'time': 0.021841806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015383399999999853, 'source_diff': 0.00015383399999999853}, {'time': 0.022011333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:23.892" endtime="20201112 12:27:23.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.909" level="INFO">${ACCURACY} = {'diff': [0.00015383399999999853, 0.00015351400000000043, 0.000153430999999999, 0.00015350000000000086, 0.00015395799999999918, 0.00015369399999999936, 0.00015366599999999675, 0.00015350000000000086, ...</msg>
<status status="PASS" starttime="20201112 12:27:23.896" endtime="20201112 12:27:23.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.914" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.913" endtime="20201112 12:27:23.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.916" level="INFO">VALUE: [0.00015383399999999853, 0.00015351400000000043, 0.000153430999999999, 0.00015350000000000086, 0.00015395799999999918, 0.00015369399999999936, 0.00015366599999999675, 0.00015350000000000086, 0.00015412500000000148, 0.000153430999999999, 0.00015365300000000012, 0.00015351400000000043, 0.0001534999999999974, 0.0001533890000000003, 0.00015363900000000055, 0.00015379100000000034, 0.000153737000000001, 0.00015356899999999923, 0.00015350000000000086, 0.00015390300000000037, 0.00015369399999999936, 0.00015384699999999862, 0.00015381899999999948, 0.00015412500000000148, 0.00015422300000000194, 0.00015374999999999764, 0.0001537080000000024, 0.00015347200000000172, 0.00015383299999999905, 0.00015338899999999683, 0.0001540410000000006, 0.0001538609999999982, 0.00015372300000000144, 0.00015405500000000016, 0.00015413900000000105, 0.00015379199999999982, 0.00015337500000000073, 0.00015347199999999825, 0.00015391699999999994, 0.00015415300000000062, 0.00015409800000000182, 0.00015373600000000154, 0.00015366700000000316, 0.00015393000000000004, 0.0001542089999999989, 0.00015363900000000055, 0.000154221999999999, 0.0001541800000000003, 0.00015427800000000075, 0.00015387500000000123]</msg>
<status status="PASS" starttime="20201112 12:27:23.915" endtime="20201112 12:27:23.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.910" endtime="20201112 12:27:23.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.920" endtime="20201112 12:27:23.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.923" endtime="20201112 12:27:23.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.921" endtime="20201112 12:27:23.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.918" endtime="20201112 12:27:23.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.549" endtime="20201112 12:27:23.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.548" endtime="20201112 12:27:23.944"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.952" endtime="20201112 12:27:23.973"></status>
</kw>
<msg timestamp="20201112 12:27:23.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.951" endtime="20201112 12:27:23.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.975" endtime="20201112 12:27:23.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.977" endtime="20201112 12:27:23.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.948" endtime="20201112 12:27:23.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.946" endtime="20201112 12:27:23.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.986" endtime="20201112 12:27:24.273"></status>
</kw>
<msg timestamp="20201112 12:27:24.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.984" endtime="20201112 12:27:24.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.277" endtime="20201112 12:27:24.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.285" endtime="20201112 12:27:24.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.982" endtime="20201112 12:27:24.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.980" endtime="20201112 12:27:24.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.292" level="INFO">${RESULT} = [{'time': 0.021827986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015450000000000186, 'source_diff': 0.00015450000000000186}, {'time': 0.022003431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:24.289" endtime="20201112 12:27:24.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.305" level="INFO">${ACCURACY} = {'diff': [0.00015450000000000186, 0.00015511199999999892, 0.00015531900000000098, 0.00015501299999999898, 0.00015491700000000094, 0.00015497199999999975, 0.00015491700000000094, 0.0001550419999999976,...</msg>
<status status="PASS" starttime="20201112 12:27:24.293" endtime="20201112 12:27:24.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.309" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.308" endtime="20201112 12:27:24.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.311" level="INFO">VALUE: [0.00015450000000000186, 0.00015511199999999892, 0.00015531900000000098, 0.00015501299999999898, 0.00015491700000000094, 0.00015497199999999975, 0.00015491700000000094, 0.0001550419999999976, 0.00015484699999999962, 0.00015477800000000125, 0.00015490300000000137, 0.00015513899999999858, 0.0001546110000000024, 0.00015511099999999944, 0.0001546670000000007, 0.00015466600000000122, 0.0001548609999999992, 0.00015436100000000216, 0.00015493000000000104, 0.00015527800000000175, 0.00015502799999999803, 0.0001551800000000013, 0.00015429200000000032, 0.00015445799999999968, 0.00015437499999999826, 0.00015454200000000057, 0.00015431999999999946, 0.00015447199999999925, 0.00015519500000000033, 0.00015472299999999897, 0.0001552500000000026, 0.0001550280000000015, 0.0001547500000000021, 0.00015505500000000116, 0.0001548060000000004, 0.000155222, 0.00015479100000000134, 0.0001544159999999975, 0.00015505500000000116, 0.0001548609999999992, 0.000155222, 0.0001548609999999992, 0.00015465300000000112, 0.0001544860000000023, 0.00015465299999999765, 0.00015516599999999825, 0.00015473599999999907, 0.000155222, 0.00015459699999999937, 0.00015498599999999932]</msg>
<status status="PASS" starttime="20201112 12:27:24.310" endtime="20201112 12:27:24.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.305" endtime="20201112 12:27:24.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.319" endtime="20201112 12:27:24.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.322" endtime="20201112 12:27:24.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.321" endtime="20201112 12:27:24.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.317" endtime="20201112 12:27:24.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.945" endtime="20201112 12:27:24.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.944" endtime="20201112 12:27:24.343"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.352" endtime="20201112 12:27:24.373"></status>
</kw>
<msg timestamp="20201112 12:27:24.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.350" endtime="20201112 12:27:24.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.374" endtime="20201112 12:27:24.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.377" endtime="20201112 12:27:24.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.348" endtime="20201112 12:27:24.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.346" endtime="20201112 12:27:24.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.385" endtime="20201112 12:27:24.672"></status>
</kw>
<msg timestamp="20201112 12:27:24.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.384" endtime="20201112 12:27:24.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.676" endtime="20201112 12:27:24.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.685" endtime="20201112 12:27:24.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.381" endtime="20201112 12:27:24.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.380" endtime="20201112 12:27:24.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.691" level="INFO">${RESULT} = [{'time': 0.021872139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015602799999999903, 'source_diff': 0.00015602799999999903}, {'time': 0.022049431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:24.688" endtime="20201112 12:27:24.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.704" level="INFO">${ACCURACY} = {'diff': [0.00015602799999999903, 0.00015568100000000126, 0.0001553060000000009, 0.0001561939999999984, 0.00015563900000000255, 0.00015562500000000298, 0.00015630499999999894, 0.0001554999999999994, 0...</msg>
<status status="PASS" starttime="20201112 12:27:24.692" endtime="20201112 12:27:24.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.708" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.707" endtime="20201112 12:27:24.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.711" level="INFO">VALUE: [0.00015602799999999903, 0.00015568100000000126, 0.0001553060000000009, 0.0001561939999999984, 0.00015563900000000255, 0.00015562500000000298, 0.00015630499999999894, 0.0001554999999999994, 0.00015602699999999955, 0.00015629200000000232, 0.0001559999999999999, 0.00015542999999999807, 0.0001558060000000014, 0.00015623600000000057, 0.0001559310000000015, 0.00015573600000000007, 0.00015573600000000007, 0.0001556800000000018, 0.00015587499999999976, 0.00015594500000000108, 0.0001554999999999994, 0.0001559999999999999, 0.00015587499999999976, 0.00015611100000000044, 0.00015566599999999875, 0.00015579099999999887, 0.00015562499999999951, 0.0001554029999999984, 0.00015533300000000055, 0.00015565199999999918, 0.00015612500000000001, 0.00015601400000000293, 0.00015616699999999872, 0.00015534700000000012, 0.00015612500000000001, 0.00015529200000000132, 0.00015573699999999954, 0.00015616699999999872, 0.0001557090000000004, 0.00015609700000000087, 0.0001553609999999997, 0.0001554860000000033, 0.00015531899999999751, 0.00015543000000000154, 0.00015609700000000087, 0.00015612500000000001, 0.00015573699999999954, 0.00015609700000000087, 0.0001560419999999986, 0.00015604200000000207]</msg>
<status status="PASS" starttime="20201112 12:27:24.710" endtime="20201112 12:27:24.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.705" endtime="20201112 12:27:24.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.714" endtime="20201112 12:27:24.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.718" endtime="20201112 12:27:24.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.716" endtime="20201112 12:27:24.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.713" endtime="20201112 12:27:24.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.344" endtime="20201112 12:27:24.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.343" endtime="20201112 12:27:24.739"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.747" endtime="20201112 12:27:24.768"></status>
</kw>
<msg timestamp="20201112 12:27:24.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.746" endtime="20201112 12:27:24.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.770" endtime="20201112 12:27:24.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.772" endtime="20201112 12:27:24.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.743" endtime="20201112 12:27:24.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.741" endtime="20201112 12:27:24.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.781" endtime="20201112 12:27:25.068"></status>
</kw>
<msg timestamp="20201112 12:27:25.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.779" endtime="20201112 12:27:25.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.072" endtime="20201112 12:27:25.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.081" endtime="20201112 12:27:25.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.777" endtime="20201112 12:27:25.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.775" endtime="20201112 12:27:25.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.087" level="INFO">${RESULT} = [{'time': 0.021788361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015688900000000033, 'source_diff': 0.00015688900000000033}, {'time': 0.021976736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:25.084" endtime="20201112 12:27:25.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.100" level="INFO">${ACCURACY} = {'diff': [0.00015688900000000033, 0.00015675000000000064, 0.0001564449999999981, 0.00015697300000000122, 0.00015630499999999894, 0.00015648600000000082, 0.00015691699999999947, 0.00015645800000000168,...</msg>
<status status="PASS" starttime="20201112 12:27:25.088" endtime="20201112 12:27:25.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.104" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.103" endtime="20201112 12:27:25.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.107" level="INFO">VALUE: [0.00015688900000000033, 0.00015675000000000064, 0.0001564449999999981, 0.00015697300000000122, 0.00015630499999999894, 0.00015648600000000082, 0.00015691699999999947, 0.00015645800000000168, 0.00015652799999999953, 0.000157222000000002, 0.00015647200000000125, 0.00015687500000000076, 0.00015680599999999892, 0.00015680599999999892, 0.00015688900000000033, 0.00015684699999999815, 0.00015708400000000178, 0.0001567770000000003, 0.00015705599999999917, 0.00015730599999999942, 0.00015681900000000248, 0.00015648600000000082, 0.0001565419999999991, 0.0001569870000000008, 0.0001565000000000004, 0.00015705599999999917, 0.00015694399999999914, 0.00015708299999999883, 0.00015627799999999928, 0.00015629200000000232, 0.00015691699999999947, 0.0001565830000000018, 0.00015642999999999907, 0.000157319999999999, 0.00015684799999999763, 0.00015652799999999953, 0.00015656999999999824, 0.00015643099999999854, 0.00015661099999999747, 0.00015654099999999962, 0.0001569029999999999, 0.00015715300000000015, 0.00015672199999999803, 0.0001567359999999976, 0.00015667999999999932, 0.00015717999999999982, 0.00015651399999999996, 0.0001565419999999991, 0.00015645800000000168, 0.00015722199999999853]</msg>
<status status="PASS" starttime="20201112 12:27:25.106" endtime="20201112 12:27:25.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.101" endtime="20201112 12:27:25.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.110" endtime="20201112 12:27:25.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.114" endtime="20201112 12:27:25.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.112" endtime="20201112 12:27:25.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.109" endtime="20201112 12:27:25.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.740" endtime="20201112 12:27:25.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.739" endtime="20201112 12:27:25.135"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.144" endtime="20201112 12:27:25.165"></status>
</kw>
<msg timestamp="20201112 12:27:25.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.142" endtime="20201112 12:27:25.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.167" endtime="20201112 12:27:25.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.169" endtime="20201112 12:27:25.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.140" endtime="20201112 12:27:25.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.137" endtime="20201112 12:27:25.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.178" endtime="20201112 12:27:25.465"></status>
</kw>
<msg timestamp="20201112 12:27:25.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.177" endtime="20201112 12:27:25.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.469" endtime="20201112 12:27:25.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.477" endtime="20201112 12:27:25.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.174" endtime="20201112 12:27:25.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.172" endtime="20201112 12:27:25.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.484" level="INFO">${RESULT} = [{'time': 0.022732014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015780599999999992, 'source_diff': 0.00015780599999999992}, {'time': 0.022915417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:25.480" endtime="20201112 12:27:25.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.498" level="INFO">${ACCURACY} = {'diff': [0.00015780599999999992, 0.0001574449999999991, 0.00015815300000000115, 0.00015747199999999878, 0.00015747200000000225, 0.0001575969999999989, 0.00015734799999999813, 0.00015791700000000047, ...</msg>
<status status="PASS" starttime="20201112 12:27:25.485" endtime="20201112 12:27:25.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.503" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.502" endtime="20201112 12:27:25.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.505" level="INFO">VALUE: [0.00015780599999999992, 0.0001574449999999991, 0.00015815300000000115, 0.00015747199999999878, 0.00015747200000000225, 0.0001575969999999989, 0.00015734799999999813, 0.00015791700000000047, 0.00015755599999999967, 0.0001576809999999998, 0.0001575420000000001, 0.00015731899999999951, 0.00015780500000000044, 0.00015812499999999854, 0.00015809700000000287, 0.0001581940000000004, 0.00015768000000000032, 0.0001574579999999992, 0.00015811099999999897, 0.00015798599999999885, 0.00015791700000000047, 0.00015813900000000158, 0.00015784700000000262, 0.00015780599999999992, 0.00015756999999999924, 0.00015774999999999817, 0.00015779200000000035, 0.00015811200000000192, 0.00015779200000000035, 0.00015805499999999723, 0.00015752800000000053, 0.0001580550000000007, 0.0001578610000000022, 0.00015791700000000047, 0.00015812499999999854, 0.00015825000000000214, 0.00015798600000000232, 0.00015822199999999953, 0.00015811100000000244, 0.00015787500000000176, 0.00015752800000000053, 0.00015819499999999986, 0.00015736099999999822, 0.0001579579999999997, 0.00015759700000000237, 0.00015779200000000035, 0.00015747200000000225, 0.00015765200000000118, 0.00015731999999999552, 0.00015800000000000536]</msg>
<status status="PASS" starttime="20201112 12:27:25.504" endtime="20201112 12:27:25.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.499" endtime="20201112 12:27:25.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.509" endtime="20201112 12:27:25.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.512" endtime="20201112 12:27:25.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.510" endtime="20201112 12:27:25.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.507" endtime="20201112 12:27:25.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.136" endtime="20201112 12:27:25.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.135" endtime="20201112 12:27:25.533"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.541" endtime="20201112 12:27:25.562"></status>
</kw>
<msg timestamp="20201112 12:27:25.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.540" endtime="20201112 12:27:25.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.564" endtime="20201112 12:27:25.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.566" endtime="20201112 12:27:25.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.537" endtime="20201112 12:27:25.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.535" endtime="20201112 12:27:25.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.575" endtime="20201112 12:27:25.862"></status>
</kw>
<msg timestamp="20201112 12:27:25.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.574" endtime="20201112 12:27:25.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.866" endtime="20201112 12:27:25.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.874" endtime="20201112 12:27:25.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.571" endtime="20201112 12:27:25.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.569" endtime="20201112 12:27:25.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.881" level="INFO">${RESULT} = [{'time': 0.021922097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015863900000000208, 'source_diff': 0.00015863900000000208}, {'time': 0.022108472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:25.877" endtime="20201112 12:27:25.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.894" level="INFO">${ACCURACY} = {'diff': [0.00015863900000000208, 0.00015883300000000058, 0.00015829100000000138, 0.0001584169999999975, 0.00015899999999999942, 0.0001588619999999992, 0.00015898599999999985, 0.00015866700000000122, ...</msg>
<status status="PASS" starttime="20201112 12:27:25.882" endtime="20201112 12:27:25.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.898" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.897" endtime="20201112 12:27:25.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.900" level="INFO">VALUE: [0.00015863900000000208, 0.00015883300000000058, 0.00015829100000000138, 0.0001584169999999975, 0.00015899999999999942, 0.0001588619999999992, 0.00015898599999999985, 0.00015866700000000122, 0.0001585000000000024, 0.00015899999999999942, 0.00015829200000000085, 0.0001589299999999981, 0.00015917999999999835, 0.0001587359999999996, 0.00015884699999999669, 0.00015890200000000243, 0.0001591810000000013, 0.00015863900000000208, 0.00015918099999999782, 0.0001584299999999976, 0.0001586810000000008, 0.0001587359999999996, 0.00015859700000000337, 0.0001583610000000027, 0.00015838900000000183, 0.00015880600000000092, 0.0001592360000000001, 0.0001588619999999992, 0.0001590559999999977, 0.000158916999999998, 0.00015906900000000126, 0.0001591810000000013, 0.00015866600000000175, 0.00015854100000000163, 0.00015891599999999853, 0.0001584580000000002, 0.00015856900000000076, 0.0001590550000000017, 0.00015906900000000126, 0.00015884700000000015, 0.0001584030000000014, 0.00015922200000000053, 0.00015891700000000147, 0.00015868000000000132, 0.0001584160000000015, 0.00015838899999999836, 0.0001590840000000003, 0.00015841599999999803, 0.0001585969999999999, 0.00015844400000000064]</msg>
<status status="PASS" starttime="20201112 12:27:25.899" endtime="20201112 12:27:25.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.894" endtime="20201112 12:27:25.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.904" endtime="20201112 12:27:25.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.907" endtime="20201112 12:27:25.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.906" endtime="20201112 12:27:25.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.902" endtime="20201112 12:27:25.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.534" endtime="20201112 12:27:25.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.533" endtime="20201112 12:27:25.928"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.937" endtime="20201112 12:27:25.958"></status>
</kw>
<msg timestamp="20201112 12:27:25.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.935" endtime="20201112 12:27:25.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.959" endtime="20201112 12:27:25.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.962" endtime="20201112 12:27:25.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.933" endtime="20201112 12:27:25.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.931" endtime="20201112 12:27:25.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.971" endtime="20201112 12:27:26.257"></status>
</kw>
<msg timestamp="20201112 12:27:26.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.969" endtime="20201112 12:27:26.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.261" endtime="20201112 12:27:26.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.269" endtime="20201112 12:27:26.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.967" endtime="20201112 12:27:26.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.965" endtime="20201112 12:27:26.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.276" level="INFO">${RESULT} = [{'time': 0.021984764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015972200000000103, 'source_diff': 0.00015972200000000103}, {'time': 0.022175028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:26.273" endtime="20201112 12:27:26.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.289" level="INFO">${ACCURACY} = {'diff': [0.00015972200000000103, 0.0001596949999999979, 0.0001593749999999998, 0.00015962500000000004, 0.00015949999999999992, 0.0001598750000000003, 0.00015949999999999992, 0.00016008299999999837, 0...</msg>
<status status="PASS" starttime="20201112 12:27:26.277" endtime="20201112 12:27:26.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.293" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.292" endtime="20201112 12:27:26.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.296" level="INFO">VALUE: [0.00015972200000000103, 0.0001596949999999979, 0.0001593749999999998, 0.00015962500000000004, 0.00015949999999999992, 0.0001598750000000003, 0.00015949999999999992, 0.00016008299999999837, 0.000160014, 0.000159610999999997, 0.00015945900000000068, 0.00015998600000000085, 0.0001592360000000001, 0.00015998700000000032, 0.00015933300000000108, 0.00015936100000000022, 0.00016027700000000034, 0.00015980599999999845, 0.00016002799999999956, 0.00016013900000000011, 0.000160014, 0.00015940299999999893, 0.00015969500000000136, 0.00016015299999999968, 0.00015931999999999752, 0.00016008299999999837, 0.00015940299999999893, 0.0001595559999999982, 0.00015938899999999936, 0.00015997300000000075, 0.00015988899999999986, 0.00015962500000000004, 0.00015970800000000146, 0.00016000000000000042, 0.0001600970000000014, 0.00015954100000000263, 0.00015984700000000115, 0.00015979200000000235, 0.00015970800000000146, 0.00015940299999999893, 0.00015933300000000108, 0.00016013900000000011, 0.00016013900000000011, 0.00015926399999999924, 0.0001601520000000002, 0.00015970900000000093, 0.00016016699999999925, 0.00015933299999999762, 0.00015952799999999906, 0.00016015299999999968]</msg>
<status status="PASS" starttime="20201112 12:27:26.294" endtime="20201112 12:27:26.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.290" endtime="20201112 12:27:26.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.299" endtime="20201112 12:27:26.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.303" endtime="20201112 12:27:26.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.301" endtime="20201112 12:27:26.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.298" endtime="20201112 12:27:26.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.929" endtime="20201112 12:27:26.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.929" endtime="20201112 12:27:26.323"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.332" endtime="20201112 12:27:26.353"></status>
</kw>
<msg timestamp="20201112 12:27:26.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.331" endtime="20201112 12:27:26.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.355" endtime="20201112 12:27:26.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.357" endtime="20201112 12:27:26.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.328" endtime="20201112 12:27:26.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.326" endtime="20201112 12:27:26.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.366" endtime="20201112 12:27:26.653"></status>
</kw>
<msg timestamp="20201112 12:27:26.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.364" endtime="20201112 12:27:26.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.657" endtime="20201112 12:27:26.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.665" endtime="20201112 12:27:26.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.362" endtime="20201112 12:27:26.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.360" endtime="20201112 12:27:26.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.671" level="INFO">${RESULT} = [{'time': 0.021840194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016040200000000046, 'source_diff': 0.00016040200000000046}, {'time': 0.022033583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:26.668" endtime="20201112 12:27:26.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.684" level="INFO">${ACCURACY} = {'diff': [0.00016040200000000046, 0.00016087499999999783, 0.00016098599999999838, 0.00016102699999999762, 0.00016062499999999758, 0.00016083299999999912, 0.00016052800000000006, 0.00016036100000000122...</msg>
<status status="PASS" starttime="20201112 12:27:26.672" endtime="20201112 12:27:26.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.689" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.688" endtime="20201112 12:27:26.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.691" level="INFO">VALUE: [0.00016040200000000046, 0.00016087499999999783, 0.00016098599999999838, 0.00016102699999999762, 0.00016062499999999758, 0.00016083299999999912, 0.00016052800000000006, 0.00016036100000000122, 0.00016034700000000165, 0.00016104100000000066, 0.00016040299999999993, 0.00016129099999999744, 0.00016122200000000253, 0.00016063899999999715, 0.0001604169999999995, 0.00016088900000000086, 0.00016105500000000023, 0.0001611520000000012, 0.00016123599999999863, 0.00016043099999999907, 0.000160917, 0.00016079199999999988, 0.0001612079999999995, 0.00016052699999999712, 0.0001607910000000004, 0.00016084800000000163, 0.00016063900000000061, 0.00016040200000000046, 0.00016034800000000113, 0.00016083299999999912, 0.00016058399999999834, 0.0001611949999999994, 0.00016076399999999727, 0.0001607910000000004, 0.00016122199999999906, 0.00016134699999999919, 0.00016109699999999894, 0.00016123599999999863, 0.00016034700000000165, 0.00016083299999999912, 0.00016072199999999856, 0.00016099999999999795, 0.00016098599999999838, 0.00016043099999999907, 0.00016040299999999993, 0.00016102800000000056, 0.00016120900000000243, 0.000160707999999999, 0.00016065300000000018, 0.00016050000000000092]</msg>
<status status="PASS" starttime="20201112 12:27:26.690" endtime="20201112 12:27:26.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.685" endtime="20201112 12:27:26.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.695" endtime="20201112 12:27:26.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.698" endtime="20201112 12:27:26.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.697" endtime="20201112 12:27:26.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.693" endtime="20201112 12:27:26.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.324" endtime="20201112 12:27:26.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.324" endtime="20201112 12:27:26.719"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.728" endtime="20201112 12:27:26.749"></status>
</kw>
<msg timestamp="20201112 12:27:26.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.726" endtime="20201112 12:27:26.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.750" endtime="20201112 12:27:26.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.753" endtime="20201112 12:27:26.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.724" endtime="20201112 12:27:26.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.722" endtime="20201112 12:27:26.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.762" endtime="20201112 12:27:27.048"></status>
</kw>
<msg timestamp="20201112 12:27:27.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.760" endtime="20201112 12:27:27.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.052" endtime="20201112 12:27:27.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.060" endtime="20201112 12:27:27.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.758" endtime="20201112 12:27:27.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.756" endtime="20201112 12:27:27.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.067" level="INFO">${RESULT} = [{'time': 0.021853583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016136099999999876, 'source_diff': 0.00016136099999999876}, {'time': 0.022035986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:27.064" endtime="20201112 12:27:27.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.081" level="INFO">${ACCURACY} = {'diff': [0.00016136099999999876, 0.00016204200000000113, 0.0001617910000000014, 0.00016186099999999926, 0.00016191600000000153, 0.0001617780000000013, 0.00016177799999999784, 0.00016183299999999665, ...</msg>
<status status="PASS" starttime="20201112 12:27:27.068" endtime="20201112 12:27:27.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.086" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.085" endtime="20201112 12:27:27.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.088" level="INFO">VALUE: [0.00016136099999999876, 0.00016204200000000113, 0.0001617910000000014, 0.00016186099999999926, 0.00016191600000000153, 0.0001617780000000013, 0.00016177799999999784, 0.00016183299999999665, 0.00016140299999999747, 0.00016159699999999944, 0.0001622919999999979, 0.00016188799999999892, 0.0001619719999999998, 0.0001622499999999992, 0.00016194499999999667, 0.0001613889999999979, 0.00016202800000000156, 0.00016179200000000088, 0.0001614300000000006, 0.00016215299999999822, 0.00016162499999999858, 0.00016200000000000242, 0.00016134799999999866, 0.00016136099999999876, 0.00016177700000000184, 0.00016190299999999797, 0.00016136100000000222, 0.0001622080000000005, 0.00016165300000000118, 0.0001614719999999993, 0.00016213899999999865, 0.00016202699999999862, 0.00016143100000000007, 0.0001614300000000006, 0.0001615279999999976, 0.00016198600000000285, 0.0001615690000000003, 0.00016191600000000153, 0.00016213799999999917, 0.00016186099999999926, 0.00016167999999999738, 0.0001620560000000007, 0.0001619719999999998, 0.00016180600000000045, 0.000161917000000001, 0.00016162499999999858, 0.00016209699999999994, 0.00016205500000000123, 0.000161708, 0.00016215299999999822]</msg>
<status status="PASS" starttime="20201112 12:27:27.087" endtime="20201112 12:27:27.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.082" endtime="20201112 12:27:27.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.092" endtime="20201112 12:27:27.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.095" endtime="20201112 12:27:27.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.094" endtime="20201112 12:27:27.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.090" endtime="20201112 12:27:27.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.720" endtime="20201112 12:27:27.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.720" endtime="20201112 12:27:27.116"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.125" endtime="20201112 12:27:27.146"></status>
</kw>
<msg timestamp="20201112 12:27:27.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.123" endtime="20201112 12:27:27.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.147" endtime="20201112 12:27:27.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.150" endtime="20201112 12:27:27.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.121" endtime="20201112 12:27:27.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.119" endtime="20201112 12:27:27.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.159" endtime="20201112 12:27:27.450"></status>
</kw>
<msg timestamp="20201112 12:27:27.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.157" endtime="20201112 12:27:27.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.454" endtime="20201112 12:27:27.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.462" endtime="20201112 12:27:27.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.155" endtime="20201112 12:27:27.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.153" endtime="20201112 12:27:27.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.469" level="INFO">${RESULT} = [{'time': 0.021795792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016297300000000028, 'source_diff': 0.00016297300000000028}, {'time': 0.021991125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:27.465" endtime="20201112 12:27:27.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.481" level="INFO">${ACCURACY} = {'diff': [0.00016297300000000028, 0.00016283300000000112, 0.00016265299999999872, 0.00016234700000000019, 0.00016276399999999927, 0.00016284700000000069, 0.00016272300000000003, 0.00016262499999999958...</msg>
<status status="PASS" starttime="20201112 12:27:27.469" endtime="20201112 12:27:27.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.486" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.485" endtime="20201112 12:27:27.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.488" level="INFO">VALUE: [0.00016297300000000028, 0.00016283300000000112, 0.00016265299999999872, 0.00016234700000000019, 0.00016276399999999927, 0.00016284700000000069, 0.00016272300000000003, 0.00016262499999999958, 0.00016276399999999927, 0.00016301399999999952, 0.0001624300000000016, 0.00016293100000000157, 0.00016284700000000069, 0.00016234700000000019, 0.0001622780000000018, 0.00016301300000000005, 0.00016294500000000114, 0.0001632089999999975, 0.0001625979999999999, 0.00016299999999999995, 0.0001625279999999986, 0.00016258400000000034, 0.0001632500000000002, 0.00016326399999999977, 0.00016295799999999777, 0.00016263799999999967, 0.00016233300000000062, 0.00016276399999999927, 0.00016295800000000124, 0.00016272200000000056, 0.0001628889999999994, 0.00016238900000000236, 0.00016282000000000102, 0.0001630279999999991, 0.00016277799999999884, 0.00016313899999999965, 0.00016237499999999933, 0.0001630690000000018, 0.00016295799999999777, 0.00016245800000000074, 0.00016301300000000005, 0.0001623889999999989, 0.00016308300000000137, 0.00016308400000000084, 0.00016284700000000069, 0.0001631110000000005, 0.00016306899999999833, 0.00016263899999999915, 0.00016237499999999933, 0.00016301399999999952]</msg>
<status status="PASS" starttime="20201112 12:27:27.487" endtime="20201112 12:27:27.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.482" endtime="20201112 12:27:27.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.492" endtime="20201112 12:27:27.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.495" endtime="20201112 12:27:27.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.494" endtime="20201112 12:27:27.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.490" endtime="20201112 12:27:27.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.117" endtime="20201112 12:27:27.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.117" endtime="20201112 12:27:27.516"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.525" endtime="20201112 12:27:27.546"></status>
</kw>
<msg timestamp="20201112 12:27:27.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.523" endtime="20201112 12:27:27.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.548" endtime="20201112 12:27:27.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.550" endtime="20201112 12:27:27.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.521" endtime="20201112 12:27:27.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.519" endtime="20201112 12:27:27.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.559" endtime="20201112 12:27:27.845"></status>
</kw>
<msg timestamp="20201112 12:27:27.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02174175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:27.557" endtime="20201112 12:27:27.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02174175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:27.849" endtime="20201112 12:27:27.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.857" endtime="20201112 12:27:27.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.555" endtime="20201112 12:27:27.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.553" endtime="20201112 12:27:27.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.864" level="INFO">${RESULT} = [{'time': 0.021905403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016365299999999972, 'source_diff': 0.00016365299999999972}, {'time': 0.022092833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:27.861" endtime="20201112 12:27:27.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.877" level="INFO">${ACCURACY} = {'diff': [0.00016365299999999972, 0.00016427700000000087, 0.0001642219999999986, 0.00016381999999999855, 0.00016329200000000238, 0.00016404099999999672, 0.00016412500000000108, 0.00016387500000000083,...</msg>
<status status="PASS" starttime="20201112 12:27:27.865" endtime="20201112 12:27:27.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.881" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.880" endtime="20201112 12:27:27.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.884" level="INFO">VALUE: [0.00016365299999999972, 0.00016427700000000087, 0.0001642219999999986, 0.00016381999999999855, 0.00016329200000000238, 0.00016404099999999672, 0.00016412500000000108, 0.00016387500000000083, 0.00016413900000000065, 0.00016331899999999858, 0.00016384699999999822, 0.00016377799999999984, 0.00016420799999999902, 0.00016379099999999994, 0.00016405599999999923, 0.00016340299999999947, 0.00016340299999999947, 0.00016354199999999916, 0.00016387499999999736, 0.000163708000000002, 0.00016394499999999868, 0.00016397299999999781, 0.0001640280000000001, 0.00016345800000000174, 0.00016430599999999948, 0.0001642080000000025, 0.00016422299999999806, 0.00016363900000000015, 0.00016404199999999966, 0.00016405599999999923, 0.00016341599999999956, 0.00016415300000000022, 0.00016373600000000113, 0.00016423599999999816, 0.00016386100000000126, 0.00016376400000000027, 0.0001639020000000005, 0.00016420799999999902, 0.00016341599999999956, 0.0001642080000000025, 0.0001632780000000028, 0.00016391600000000006, 0.0001638479999999977, 0.00016352699999999665, 0.0001635279999999996, 0.00016420799999999902, 0.00016390299999999997, 0.0001637219999999981, 0.00016340299999999947, 0.00016347199999999784]</msg>
<status status="PASS" starttime="20201112 12:27:27.882" endtime="20201112 12:27:27.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.878" endtime="20201112 12:27:27.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.887" endtime="20201112 12:27:27.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.891" endtime="20201112 12:27:27.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.889" endtime="20201112 12:27:27.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.886" endtime="20201112 12:27:27.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.517" endtime="20201112 12:27:27.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.517" endtime="20201112 12:27:27.912"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.920" endtime="20201112 12:27:27.941"></status>
</kw>
<msg timestamp="20201112 12:27:27.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.919" endtime="20201112 12:27:27.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.943" endtime="20201112 12:27:27.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.945" endtime="20201112 12:27:27.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.916" endtime="20201112 12:27:27.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.914" endtime="20201112 12:27:27.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.954" endtime="20201112 12:27:28.241"></status>
</kw>
<msg timestamp="20201112 12:27:28.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.953" endtime="20201112 12:27:28.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.245" endtime="20201112 12:27:28.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.253" endtime="20201112 12:27:28.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.950" endtime="20201112 12:27:28.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.949" endtime="20201112 12:27:28.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.259" level="INFO">${RESULT} = [{'time': 0.021927944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016506900000000033, 'source_diff': 0.00016506900000000033}, {'time': 0.022115319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:28.256" endtime="20201112 12:27:28.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.272" level="INFO">${ACCURACY} = {'diff': [0.00016506900000000033, 0.00016452700000000112, 0.00016526400000000177, 0.00016445799999999927, 0.00016456899999999983, 0.00016445799999999927, 0.00016483299999999965, 0.0001651379999999987,...</msg>
<status status="PASS" starttime="20201112 12:27:28.260" endtime="20201112 12:27:28.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.277" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.276" endtime="20201112 12:27:28.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.279" level="INFO">VALUE: [0.00016506900000000033, 0.00016452700000000112, 0.00016526400000000177, 0.00016445799999999927, 0.00016456899999999983, 0.00016445799999999927, 0.00016483299999999965, 0.0001651379999999987, 0.00016519499999999993, 0.0001648479999999987, 0.0001645410000000007, 0.00016466700000000029, 0.0001650980000000024, 0.0001645699999999993, 0.00016506900000000033, 0.0001652639999999983, 0.00016487500000000183, 0.00016509699999999947, 0.00016515300000000122, 0.00016469499999999943, 0.0001647639999999978, 0.00016433299999999915, 0.0001651249999999986, 0.0001650829999999999, 0.0001650829999999999, 0.00016484700000000269, 0.0001647219999999991, 0.0001647920000000004, 0.00016484699999999922, 0.0001645829999999994, 0.0001652219999999996, 0.00016511099999999904, 0.00016473600000000213, 0.0001649440000000002, 0.00016509700000000294, 0.00016497199999999934, 0.00016483299999999965, 0.00016495799999999977, 0.00016463899999999768, 0.00016449999999999798, 0.0001649020000000015, 0.0001645829999999994, 0.00016527800000000134, 0.00016486099999999879, 0.00016527800000000134, 0.00016436099999999829, 0.00016494499999999968, 0.00016466700000000029, 0.0001648050000000005, 0.00016499999999999848]</msg>
<status status="PASS" starttime="20201112 12:27:28.278" endtime="20201112 12:27:28.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.273" endtime="20201112 12:27:28.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.283" endtime="20201112 12:27:28.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.286" endtime="20201112 12:27:28.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.285" endtime="20201112 12:27:28.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.281" endtime="20201112 12:27:28.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.912" endtime="20201112 12:27:28.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.912" endtime="20201112 12:27:28.307"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.316" endtime="20201112 12:27:28.337"></status>
</kw>
<msg timestamp="20201112 12:27:28.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.314" endtime="20201112 12:27:28.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.338" endtime="20201112 12:27:28.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.341" endtime="20201112 12:27:28.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.312" endtime="20201112 12:27:28.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.310" endtime="20201112 12:27:28.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.350" endtime="20201112 12:27:28.637"></status>
</kw>
<msg timestamp="20201112 12:27:28.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.348" endtime="20201112 12:27:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.641" endtime="20201112 12:27:28.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.649" endtime="20201112 12:27:28.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.346" endtime="20201112 12:27:28.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.344" endtime="20201112 12:27:28.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.656" level="INFO">${RESULT} = [{'time': 0.021797819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016573599999999966, 'source_diff': 0.00016573599999999966}, {'time': 0.021979194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:28.653" endtime="20201112 12:27:28.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.670" level="INFO">${ACCURACY} = {'diff': [0.00016573599999999966, 0.00016569400000000095, 0.000165611000000003, 0.00016593000000000163, 0.0001652630000000023, 0.000165611000000003, 0.00016542999999999766, 0.0001654440000000007, 0.00...</msg>
<status status="PASS" starttime="20201112 12:27:28.657" endtime="20201112 12:27:28.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.675" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.674" endtime="20201112 12:27:28.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.677" level="INFO">VALUE: [0.00016573599999999966, 0.00016569400000000095, 0.000165611000000003, 0.00016593000000000163, 0.0001652630000000023, 0.000165611000000003, 0.00016542999999999766, 0.0001654440000000007, 0.00016602799999999862, 0.00016591699999999807, 0.0001661379999999997, 0.0001655280000000016, 0.00016601399999999905, 0.00016541600000000156, 0.00016570800000000052, 0.000165305999999997, 0.00016566700000000129, 0.0001655700000000003, 0.00016573599999999966, 0.0001657920000000014, 0.00016602799999999862, 0.00016602799999999862, 0.00016604099999999872, 0.00016574999999999923, 0.00016605600000000123, 0.00016543000000000113, 0.00016561099999999954, 0.00016549999999999898, 0.00016554200000000116, 0.00016595900000000025, 0.00016573599999999966, 0.00016527799999999787, 0.00016534699999999972, 0.0001661249999999996, 0.00016619400000000145, 0.00016547199999999984, 0.00016615299999999875, 0.0001660830000000009, 0.00016566700000000129, 0.00016609700000000047, 0.00016534800000000266, 0.0001654859999999994, 0.00016544500000000018, 0.0001654859999999994, 0.00016591699999999807, 0.00016551400000000202, 0.0001660700000000008, 0.00016604099999999872, 0.00016611100000000004, 0.00016543000000000113]</msg>
<status status="PASS" starttime="20201112 12:27:28.676" endtime="20201112 12:27:28.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.671" endtime="20201112 12:27:28.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.681" endtime="20201112 12:27:28.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.684" endtime="20201112 12:27:28.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.683" endtime="20201112 12:27:28.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.679" endtime="20201112 12:27:28.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.308" endtime="20201112 12:27:28.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.308" endtime="20201112 12:27:28.705"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.714" endtime="20201112 12:27:28.735"></status>
</kw>
<msg timestamp="20201112 12:27:28.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.712" endtime="20201112 12:27:28.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.736" endtime="20201112 12:27:28.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.739" endtime="20201112 12:27:28.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.710" endtime="20201112 12:27:28.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.708" endtime="20201112 12:27:28.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.748" endtime="20201112 12:27:29.034"></status>
</kw>
<msg timestamp="20201112 12:27:29.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.746" endtime="20201112 12:27:29.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.039" endtime="20201112 12:27:29.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.047" endtime="20201112 12:27:29.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.744" endtime="20201112 12:27:29.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.742" endtime="20201112 12:27:29.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.053" level="INFO">${RESULT} = [{'time': 0.021773083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016704099999999972, 'source_diff': 0.00016704099999999972}, {'time': 0.021957486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:29.050" endtime="20201112 12:27:29.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.066" level="INFO">${ACCURACY} = {'diff': [0.00016704099999999972, 0.00016652799999999912, 0.00016694500000000168, 0.00016673600000000066, 0.00016654200000000216, 0.00016687500000000036, 0.00016652799999999912, 0.00016633299999999768...</msg>
<status status="PASS" starttime="20201112 12:27:29.054" endtime="20201112 12:27:29.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.071" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.070" endtime="20201112 12:27:29.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.073" level="INFO">VALUE: [0.00016704099999999972, 0.00016652799999999912, 0.00016694500000000168, 0.00016673600000000066, 0.00016654200000000216, 0.00016687500000000036, 0.00016652799999999912, 0.00016633299999999768, 0.0001669860000000009, 0.00016695800000000177, 0.00016633400000000062, 0.00016656899999999836, 0.0001664310000000016, 0.00016697200000000134, 0.0001668050000000025, 0.00016708299999999843, 0.00016684700000000122, 0.00016681900000000208, 0.0001669159999999996, 0.00016693000000000263, 0.00016719499999999846, 0.000166402999999999, 0.0001668059999999985, 0.00016675000000000023, 0.00016674999999999676, 0.00016634700000000072, 0.00016647200000000084, 0.00016630499999999854, 0.00016700000000000048, 0.000166305999999998, 0.00016669399999999848, 0.00016624999999999973, 0.00016725000000000073, 0.0001666250000000001, 0.00016675000000000023, 0.00016638899999999943, 0.00016705600000000223, 0.00016701400000000005, 0.0001669579999999983, 0.00016669400000000195, 0.0001669860000000009, 0.0001669310000000021, 0.0001669440000000022, 0.000166305000000002, 0.0001668050000000025, 0.00016697300000000082, 0.0001668480000000007, 0.00016725000000000073, 0.00016651399999999955, 0.00016702700000000015]</msg>
<status status="PASS" starttime="20201112 12:27:29.072" endtime="20201112 12:27:29.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.067" endtime="20201112 12:27:29.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.076" endtime="20201112 12:27:29.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.080" endtime="20201112 12:27:29.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.078" endtime="20201112 12:27:29.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.075" endtime="20201112 12:27:29.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.706" endtime="20201112 12:27:29.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.705" endtime="20201112 12:27:29.101"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.109" endtime="20201112 12:27:29.131"></status>
</kw>
<msg timestamp="20201112 12:27:29.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.108" endtime="20201112 12:27:29.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.132" endtime="20201112 12:27:29.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.135" endtime="20201112 12:27:29.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.105" endtime="20201112 12:27:29.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.103" endtime="20201112 12:27:29.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.143" endtime="20201112 12:27:29.429"></status>
</kw>
<msg timestamp="20201112 12:27:29.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021824014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.142" endtime="20201112 12:27:29.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021824014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.433" endtime="20201112 12:27:29.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.442" endtime="20201112 12:27:29.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.139" endtime="20201112 12:27:29.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.138" endtime="20201112 12:27:29.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.448" level="INFO">${RESULT} = [{'time': 0.021824014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001682359999999987, 'source_diff': 0.0001682359999999987}, {'time': 0.022015361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.445" endtime="20201112 12:27:29.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.461" level="INFO">${ACCURACY} = {'diff': [0.0001682359999999987, 0.0001678610000000018, 0.00016748599999999794, 0.00016725000000000073, 0.00016783299999999918, 0.0001680550000000003, 0.00016781900000000308, 0.0001673610000000013, 0....</msg>
<status status="PASS" starttime="20201112 12:27:29.449" endtime="20201112 12:27:29.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.466" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.465" endtime="20201112 12:27:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.468" level="INFO">VALUE: [0.0001682359999999987, 0.0001678610000000018, 0.00016748599999999794, 0.00016725000000000073, 0.00016783299999999918, 0.0001680550000000003, 0.00016781900000000308, 0.0001673610000000013, 0.0001682359999999987, 0.00016786099999999832, 0.00016750000000000098, 0.00016788900000000093, 0.00016763900000000068, 0.00016795900000000225, 0.00016761100000000154, 0.00016787500000000136, 0.00016775000000000123, 0.0001682640000000013, 0.00016808299999999943, 0.00016790199999999755, 0.0001676380000000012, 0.00016769499999999896, 0.0001679579999999993, 0.00016752800000000012, 0.00016756899999999936, 0.00016777800000000037, 0.00016815299999999728, 0.0001678059999999995, 0.00016750000000000098, 0.00016751400000000055, 0.00016741699999999957, 0.00016773700000000114, 0.00016787500000000136, 0.00016756899999999936, 0.00016811099999999857, 0.00016744500000000218, 0.00016794500000000268, 0.0001677640000000008, 0.0001678189999999996, 0.00016730499999999954, 0.0001679860000000019, 0.000167305999999999, 0.00016781900000000308, 0.0001682359999999987, 0.00016765200000000077, 0.00016791700000000007, 0.0001674999999999975, 0.00016775000000000123, 0.00016818099999999989, 0.00016738900000000043]</msg>
<status status="PASS" starttime="20201112 12:27:29.467" endtime="20201112 12:27:29.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.462" endtime="20201112 12:27:29.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.476" endtime="20201112 12:27:29.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.479" endtime="20201112 12:27:29.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.478" endtime="20201112 12:27:29.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.474" endtime="20201112 12:27:29.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.102" endtime="20201112 12:27:29.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.101" endtime="20201112 12:27:29.500"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.509" endtime="20201112 12:27:29.530"></status>
</kw>
<msg timestamp="20201112 12:27:29.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.507" endtime="20201112 12:27:29.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.531" endtime="20201112 12:27:29.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.534" endtime="20201112 12:27:29.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.504" endtime="20201112 12:27:29.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.502" endtime="20201112 12:27:29.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.543" endtime="20201112 12:27:29.829"></status>
</kw>
<msg timestamp="20201112 12:27:29.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.541" endtime="20201112 12:27:29.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.833" endtime="20201112 12:27:29.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.841" endtime="20201112 12:27:29.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.539" endtime="20201112 12:27:29.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.537" endtime="20201112 12:27:29.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.848" level="INFO">${RESULT} = [{'time': 0.021856222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016861100000000254, 'source_diff': 0.00016861100000000254}, {'time': 0.022041597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:29.844" endtime="20201112 12:27:29.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.861" level="INFO">${ACCURACY} = {'diff': [0.00016861100000000254, 0.00016844400000000023, 0.000168403000000001, 0.00016843100000000014, 0.00016834699999999925, 0.00016872199999999962, 0.0001688190000000006, 0.0001683190000000001, 0....</msg>
<status status="PASS" starttime="20201112 12:27:29.849" endtime="20201112 12:27:29.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.865" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.864" endtime="20201112 12:27:29.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.867" level="INFO">VALUE: [0.00016861100000000254, 0.00016844400000000023, 0.000168403000000001, 0.00016843100000000014, 0.00016834699999999925, 0.00016872199999999962, 0.0001688190000000006, 0.0001683190000000001, 0.00016911199999999904, 0.00016834699999999925, 0.00016873699999999867, 0.00016924999999999926, 0.00016888900000000193, 0.0001692359999999997, 0.0001685969999999995, 0.00016843100000000014, 0.0001687359999999992, 0.0001685420000000007, 0.0001691800000000014, 0.0001689299999999977, 0.00016918100000000089, 0.0001685420000000007, 0.00016862499999999864, 0.00016869499999999996, 0.0001686250000000021, 0.000168790999999998, 0.000169097, 0.00016834699999999925, 0.00016886099999999932, 0.0001683749999999984, 0.0001689169999999976, 0.00016847199999999937, 0.00016920799999999708, 0.00016869499999999996, 0.00016829200000000044, 0.00016837500000000186, 0.00016912499999999914, 0.0001684999999999985, 0.0001685700000000033, 0.00016876399999999833, 0.00016851400000000155, 0.00016898599999999944, 0.00016823600000000216, 0.00016852700000000165, 0.00016917999999999794, 0.00016850000000000198, 0.00016924999999999926, 0.00016851300000000208, 0.00016908300000000043, 0.00016912499999999914]</msg>
<status status="PASS" starttime="20201112 12:27:29.866" endtime="20201112 12:27:29.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.861" endtime="20201112 12:27:29.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.871" endtime="20201112 12:27:29.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.874" endtime="20201112 12:27:29.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.873" endtime="20201112 12:27:29.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.869" endtime="20201112 12:27:29.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.501" endtime="20201112 12:27:29.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.500" endtime="20201112 12:27:29.895"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.904" endtime="20201112 12:27:29.925"></status>
</kw>
<msg timestamp="20201112 12:27:29.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.902" endtime="20201112 12:27:29.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.927" endtime="20201112 12:27:29.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.929" endtime="20201112 12:27:29.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.900" endtime="20201112 12:27:29.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.898" endtime="20201112 12:27:29.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.938" endtime="20201112 12:27:30.225"></status>
</kw>
<msg timestamp="20201112 12:27:30.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.937" endtime="20201112 12:27:30.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.229" endtime="20201112 12:27:30.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.237" endtime="20201112 12:27:30.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.934" endtime="20201112 12:27:30.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.932" endtime="20201112 12:27:30.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.244" level="INFO">${RESULT} = [{'time': 0.021852194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001699719999999974, 'source_diff': 0.0001699719999999974}, {'time': 0.02205375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:30.241" endtime="20201112 12:27:30.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.258" level="INFO">${ACCURACY} = {'diff': [0.0001699719999999974, 0.0001696389999999992, 0.00016962499999999964, 0.00016966700000000182, 0.000169403000000002, 0.00016947299999999985, 0.00017, 0.00016977800000000237, 0.000170069000000...</msg>
<status status="PASS" starttime="20201112 12:27:30.245" endtime="20201112 12:27:30.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.263" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.262" endtime="20201112 12:27:30.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.265" level="INFO">VALUE: [0.0001699719999999974, 0.0001696389999999992, 0.00016962499999999964, 0.00016966700000000182, 0.000169403000000002, 0.00016947299999999985, 0.00017, 0.00016977800000000237, 0.00017006900000000186, 0.0001695420000000017, 0.00017011100000000057, 0.00016966699999999835, 0.00017017999999999894, 0.00017016700000000232, 0.00016980599999999804, 0.00017009800000000047, 0.00017, 0.00016965299999999878, 0.00016954199999999822, 0.00016970800000000105, 0.0001702360000000007, 0.00016959799999999997, 0.00016968100000000139, 0.0001693749999999994, 0.00016961100000000007, 0.0001696519999999993, 0.00016976399999999933, 0.00017007000000000133, 0.00016986100000000032, 0.0001697230000000001, 0.0001695550000000018, 0.00016988899999999946, 0.00016938899999999896, 0.00016936099999999982, 0.0001694450000000007, 0.00017013800000000023, 0.00017025000000000026, 0.00016988899999999946, 0.00016966700000000182, 0.00016955600000000126, 0.00016995799999999783, 0.00016990299999999903, 0.00017005600000000176, 0.0001698749999999999, 0.00016984800000000022, 0.00016944499999999724, 0.00016976399999999933, 0.00016943000000000166, 0.00017009800000000047, 0.00017012500000000014]</msg>
<status status="PASS" starttime="20201112 12:27:30.264" endtime="20201112 12:27:30.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.259" endtime="20201112 12:27:30.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.269" endtime="20201112 12:27:30.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.272" endtime="20201112 12:27:30.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.271" endtime="20201112 12:27:30.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.267" endtime="20201112 12:27:30.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.896" endtime="20201112 12:27:30.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.896" endtime="20201112 12:27:30.293"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.302" endtime="20201112 12:27:30.323"></status>
</kw>
<msg timestamp="20201112 12:27:30.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.300" endtime="20201112 12:27:30.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.325" endtime="20201112 12:27:30.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.327" endtime="20201112 12:27:30.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.298" endtime="20201112 12:27:30.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.296" endtime="20201112 12:27:30.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.336" endtime="20201112 12:27:30.622"></status>
</kw>
<msg timestamp="20201112 12:27:30.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.334" endtime="20201112 12:27:30.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.626" endtime="20201112 12:27:30.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.634" endtime="20201112 12:27:30.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.332" endtime="20201112 12:27:30.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.330" endtime="20201112 12:27:30.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.641" level="INFO">${RESULT} = [{'time': 0.021846083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017038899999999996, 'source_diff': 0.00017038899999999996}, {'time': 0.022049347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:30.637" endtime="20201112 12:27:30.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.653" level="INFO">${ACCURACY} = {'diff': [0.00017038899999999996, 0.00017105499999999982, 0.00017116600000000037, 0.00017043099999999867, 0.00017077800000000337, 0.0001706109999999976, 0.00017070900000000153, 0.0001704719999999979, ...</msg>
<status status="PASS" starttime="20201112 12:27:30.642" endtime="20201112 12:27:30.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.658" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.657" endtime="20201112 12:27:30.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.660" level="INFO">VALUE: [0.00017038899999999996, 0.00017105499999999982, 0.00017116600000000037, 0.00017043099999999867, 0.00017077800000000337, 0.0001706109999999976, 0.00017070900000000153, 0.0001704719999999979, 0.0001704299999999992, 0.0001711390000000007, 0.0001703190000000021, 0.0001711109999999981, 0.000171000000000001, 0.000171000000000001, 0.00017068099999999892, 0.00017098600000000144, 0.00017041700000000257, 0.00017034699999999778, 0.00017117999999999994, 0.0001709580000000023, 0.00017088900000000046, 0.0001705000000000005, 0.00017090200000000055, 0.00017112499999999767, 0.00017112500000000114, 0.00017083400000000165, 0.00017088900000000046, 0.00017048600000000094, 0.00017080499999999957, 0.00017038799999999701, 0.0001702779999999994, 0.00017076300000000086, 0.00017080599999999904, 0.00017099999999999754, 0.00017079199999999947, 0.00017086100000000132, 0.0001704719999999979, 0.00017122200000000212, 0.00017084800000000122, 0.00017037499999999692, 0.0001711390000000007, 0.00017038899999999996, 0.00017125000000000126, 0.0001705559999999988, 0.00017072200000000162, 0.00017090300000000003, 0.00017070799999999858, 0.0001705689999999989, 0.0001710689999999994, 0.00017044499999999824]</msg>
<status status="PASS" starttime="20201112 12:27:30.659" endtime="20201112 12:27:30.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.654" endtime="20201112 12:27:30.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.664" endtime="20201112 12:27:30.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.667" endtime="20201112 12:27:30.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.666" endtime="20201112 12:27:30.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.662" endtime="20201112 12:27:30.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.294" endtime="20201112 12:27:30.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.293" endtime="20201112 12:27:30.688"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.697" endtime="20201112 12:27:30.719"></status>
</kw>
<msg timestamp="20201112 12:27:30.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.695" endtime="20201112 12:27:30.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.720" endtime="20201112 12:27:30.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.722" endtime="20201112 12:27:30.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.693" endtime="20201112 12:27:30.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.691" endtime="20201112 12:27:30.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.731" endtime="20201112 12:27:31.017"></status>
</kw>
<msg timestamp="20201112 12:27:31.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.730" endtime="20201112 12:27:31.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.021" endtime="20201112 12:27:31.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.029" endtime="20201112 12:27:31.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.727" endtime="20201112 12:27:31.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.726" endtime="20201112 12:27:31.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.036" level="INFO">${RESULT} = [{'time': 0.021966153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000171791999999997, 'source_diff': 0.000171791999999997}, {'time': 0.022158542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:31.033" endtime="20201112 12:27:31.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.049" level="INFO">${ACCURACY} = {'diff': [0.000171791999999997, 0.00017138900000000096, 0.00017199999999999854, 0.00017175000000000176, 0.00017170799999999958, 0.00017131899999999964, 0.0001715559999999998, 0.0001716949999999995, 0....</msg>
<status status="PASS" starttime="20201112 12:27:31.037" endtime="20201112 12:27:31.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.054" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.053" endtime="20201112 12:27:31.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.056" level="INFO">VALUE: [0.000171791999999997, 0.00017138900000000096, 0.00017199999999999854, 0.00017175000000000176, 0.00017170799999999958, 0.00017131899999999964, 0.0001715559999999998, 0.0001716949999999995, 0.00017172199999999915, 0.0001717780000000009, 0.00017144499999999924, 0.00017162500000000164, 0.00017180600000000004, 0.00017116699999999985, 0.0001715139999999976, 0.0001719719999999994, 0.00017193100000000017, 0.00017167999999999697, 0.00017136199999999782, 0.00017143100000000314, 0.00017199999999999854, 0.0001718049999999971, 0.00017161100000000207, 0.00017220800000000008, 0.0001713329999999992, 0.00017123599999999822, 0.00017198599999999897, 0.0001715559999999998, 0.00017168099999999992, 0.0001717499999999983, 0.00017161100000000207, 0.00017155500000000032, 0.0001711939999999995, 0.00017194400000000026, 0.00017136099999999835, 0.0001719170000000006, 0.0001720560000000003, 0.00017204099999999778, 0.00017144399999999976, 0.00017163899999999774, 0.0001717499999999983, 0.00017131899999999964, 0.00017170900000000253, 0.00017180600000000004, 0.00017187499999999842, 0.00017216700000000085, 0.00017212500000000214, 0.00017194499999999974, 0.00017141700000000357, 0.00017188899999999452]</msg>
<status status="PASS" starttime="20201112 12:27:31.055" endtime="20201112 12:27:31.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.050" endtime="20201112 12:27:31.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.060" endtime="20201112 12:27:31.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.063" endtime="20201112 12:27:31.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.061" endtime="20201112 12:27:31.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.058" endtime="20201112 12:27:31.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.689" endtime="20201112 12:27:31.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.689" endtime="20201112 12:27:31.084"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.092" endtime="20201112 12:27:31.114"></status>
</kw>
<msg timestamp="20201112 12:27:31.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.091" endtime="20201112 12:27:31.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.116" endtime="20201112 12:27:31.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.118" endtime="20201112 12:27:31.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.088" endtime="20201112 12:27:31.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.086" endtime="20201112 12:27:31.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.127" endtime="20201112 12:27:31.418"></status>
</kw>
<msg timestamp="20201112 12:27:31.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.125" endtime="20201112 12:27:31.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.422" endtime="20201112 12:27:31.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.431" endtime="20201112 12:27:31.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.123" endtime="20201112 12:27:31.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.121" endtime="20201112 12:27:31.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.437" level="INFO">${RESULT} = [{'time': 0.021951139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017240300000000153, 'source_diff': 0.00017240300000000153}, {'time': 0.0221485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.434" endtime="20201112 12:27:31.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.450" level="INFO">${ACCURACY} = {'diff': [0.00017240300000000153, 0.00017231900000000064, 0.00017275000000000276, 0.00017308400000000043, 0.0001729300000000017, 0.0001728330000000007, 0.00017312499999999967, 0.0001726950000000005, 0...</msg>
<status status="PASS" starttime="20201112 12:27:31.438" endtime="20201112 12:27:31.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.455" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.454" endtime="20201112 12:27:31.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.457" level="INFO">VALUE: [0.00017240300000000153, 0.00017231900000000064, 0.00017275000000000276, 0.00017308400000000043, 0.0001729300000000017, 0.0001728330000000007, 0.00017312499999999967, 0.0001726950000000005, 0.00017288900000000246, 0.0001722780000000014, 0.0001723330000000002, 0.00017299999999999954, 0.00017311199999999957, 0.00017304099999999878, 0.00017265300000000178, 0.00017287499999999942, 0.0001731110000000001, 0.00017304200000000172, 0.000172582999999997, 0.00017312499999999967, 0.00017313899999999924, 0.00017267999999999797, 0.0001727780000000019, 0.00017317999999999847, 0.00017286099999999985, 0.00017276399999999886, 0.0001722499999999988, 0.00017287499999999942, 0.00017267999999999797, 0.0001726109999999996, 0.00017304100000000225, 0.00017313799999999976, 0.00017298599999999997, 0.00017249999999999904, 0.00017240300000000153, 0.00017287499999999942, 0.00017292999999999822, 0.00017236199999999882, 0.00017281900000000114, 0.00017226399999999836, 0.00017233399999999968, 0.0001726109999999996, 0.00017299999999999954, 0.00017248599999999947, 0.00017230600000000054, 0.00017272299999999963, 0.0001731110000000001, 0.00017237499999999892, 0.00017244500000000024, 0.00017255600000000426]</msg>
<status status="PASS" starttime="20201112 12:27:31.456" endtime="20201112 12:27:31.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.451" endtime="20201112 12:27:31.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.461" endtime="20201112 12:27:31.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.464" endtime="20201112 12:27:31.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.462" endtime="20201112 12:27:31.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.459" endtime="20201112 12:27:31.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.085" endtime="20201112 12:27:31.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.084" endtime="20201112 12:27:31.485"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.493" endtime="20201112 12:27:31.515"></status>
</kw>
<msg timestamp="20201112 12:27:31.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.492" endtime="20201112 12:27:31.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.517" endtime="20201112 12:27:31.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.519" endtime="20201112 12:27:31.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.489" endtime="20201112 12:27:31.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.487" endtime="20201112 12:27:31.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.528" endtime="20201112 12:27:31.814"></status>
</kw>
<msg timestamp="20201112 12:27:31.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.526" endtime="20201112 12:27:31.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.818" endtime="20201112 12:27:31.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.826" endtime="20201112 12:27:31.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.524" endtime="20201112 12:27:31.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.522" endtime="20201112 12:27:31.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.833" level="INFO">${RESULT} = [{'time': 0.021848694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001738469999999978, 'source_diff': 0.0001738469999999978}, {'time': 0.022040056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.830" endtime="20201112 12:27:31.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.847" level="INFO">${ACCURACY} = {'diff': [0.0001738469999999978, 0.000173791999999999, 0.00017343100000000167, 0.0001740140000000001, 0.00017334700000000078, 0.00017343100000000167, 0.00017363899999999974, 0.00017400000000000054, 0....</msg>
<status status="PASS" starttime="20201112 12:27:31.834" endtime="20201112 12:27:31.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.852" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.851" endtime="20201112 12:27:31.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.854" level="INFO">VALUE: [0.0001738469999999978, 0.000173791999999999, 0.00017343100000000167, 0.0001740140000000001, 0.00017334700000000078, 0.00017343100000000167, 0.00017363899999999974, 0.00017400000000000054, 0.0001737500000000003, 0.0001737500000000003, 0.00017379099999999953, 0.00017373600000000072, 0.00017347300000000038, 0.00017329099999999903, 0.00017354099999999928, 0.00017398700000000045, 0.00017334700000000078, 0.000173889, 0.00017398700000000045, 0.0001737500000000003, 0.00017400000000000054, 0.00017387500000000042, 0.00017366600000000287, 0.00017409699999999806, 0.00017408300000000196, 0.00017366699999999888, 0.000173889, 0.000173582999999998, 0.00017373600000000072, 0.00017330600000000154, 0.00017416700000000285, 0.00017398600000000097, 0.00017383400000000118, 0.00017350000000000004, 0.00017398600000000097, 0.00017405599999999882, 0.00017386099999999738, 0.0001736110000000006, 0.00017372200000000115, 0.00017409700000000153, 0.00017376399999999986, 0.00017409700000000153, 0.0001733469999999973, 0.00017379099999999953, 0.0001741110000000011, 0.00017398600000000097, 0.0001736659999999994, 0.0001735269999999997, 0.00017365300000000278, 0.0001735139999999996]</msg>
<status status="PASS" starttime="20201112 12:27:31.853" endtime="20201112 12:27:31.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.848" endtime="20201112 12:27:31.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.858" endtime="20201112 12:27:31.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.861" endtime="20201112 12:27:31.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.859" endtime="20201112 12:27:31.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.856" endtime="20201112 12:27:31.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.486" endtime="20201112 12:27:31.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.485" endtime="20201112 12:27:31.882"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.890" endtime="20201112 12:27:31.912"></status>
</kw>
<msg timestamp="20201112 12:27:31.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.889" endtime="20201112 12:27:31.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.914" endtime="20201112 12:27:31.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.916" endtime="20201112 12:27:31.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.886" endtime="20201112 12:27:31.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.884" endtime="20201112 12:27:31.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.925" endtime="20201112 12:27:32.212"></status>
</kw>
<msg timestamp="20201112 12:27:32.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.923" endtime="20201112 12:27:32.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.216" endtime="20201112 12:27:32.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.224" endtime="20201112 12:27:32.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.921" endtime="20201112 12:27:32.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.919" endtime="20201112 12:27:32.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.230" level="INFO">${RESULT} = [{'time': 0.021867556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001750699999999994, 'source_diff': 0.0001750699999999994}, {'time': 0.022064903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.227" endtime="20201112 12:27:32.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.243" level="INFO">${ACCURACY} = {'diff': [0.0001750699999999994, 0.00017508399999999896, 0.00017452800000000018, 0.00017509700000000253, 0.0001749439999999998, 0.0001749859999999985, 0.00017518099999999995, 0.00017476400000000086, 0...</msg>
<status status="PASS" starttime="20201112 12:27:32.231" endtime="20201112 12:27:32.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.248" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.247" endtime="20201112 12:27:32.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.251" level="INFO">VALUE: [0.0001750699999999994, 0.00017508399999999896, 0.00017452800000000018, 0.00017509700000000253, 0.0001749439999999998, 0.0001749859999999985, 0.00017518099999999995, 0.00017476400000000086, 0.00017470799999999911, 0.0001742500000000008, 0.00017463900000000074, 0.00017487500000000142, 0.00017426400000000036, 0.00017498600000000197, 0.00017519400000000004, 0.0001743339999999982, 0.00017505500000000035, 0.0001743469999999983, 0.000174792, 0.00017437499999999745, 0.0001745140000000006, 0.00017424999999999732, 0.00017487500000000142, 0.0001742919999999995, 0.00017491700000000013, 0.00017452800000000018, 0.00017454199999999975, 0.0001746249999999977, 0.000174582999999999, 0.000174889000000001, 0.00017455499999999985, 0.00017494500000000274, 0.00017483299999999924, 0.00017455599999999932, 0.00017516599999999743, 0.00017481899999999967, 0.00017456899999999942, 0.00017462500000000117, 0.00017519499999999952, 0.00017459699999999856, 0.00017505599999999982, 0.00017518099999999995, 0.00017520800000000308, 0.0001748050000000001, 0.00017470799999999911, 0.00017434700000000178, 0.00017497199999999893, 0.00017438899999999702, 0.00017524999999999832, 0.00017513899999999777]</msg>
<status status="PASS" starttime="20201112 12:27:32.250" endtime="20201112 12:27:32.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.244" endtime="20201112 12:27:32.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.255" endtime="20201112 12:27:32.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.259" endtime="20201112 12:27:32.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.257" endtime="20201112 12:27:32.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.253" endtime="20201112 12:27:32.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.883" endtime="20201112 12:27:32.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.882" endtime="20201112 12:27:32.280"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.288" endtime="20201112 12:27:32.310"></status>
</kw>
<msg timestamp="20201112 12:27:32.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.287" endtime="20201112 12:27:32.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.312" endtime="20201112 12:27:32.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.314" endtime="20201112 12:27:32.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.284" endtime="20201112 12:27:32.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.282" endtime="20201112 12:27:32.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.323" endtime="20201112 12:27:32.609"></status>
</kw>
<msg timestamp="20201112 12:27:32.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.322" endtime="20201112 12:27:32.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.613" endtime="20201112 12:27:32.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.622" endtime="20201112 12:27:32.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.319" endtime="20201112 12:27:32.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.317" endtime="20201112 12:27:32.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.628" level="INFO">${RESULT} = [{'time': 0.021998222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017555500000000085, 'source_diff': 0.00017555500000000085}, {'time': 0.022194569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:32.625" endtime="20201112 12:27:32.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.642" level="INFO">${ACCURACY} = {'diff': [0.00017555500000000085, 0.00017568000000000097, 0.00017611200000000257, 0.000175792000000001, 0.00017597199999999993, 0.00017613899999999877, 0.00017561099999999913, 0.00017568000000000097, ...</msg>
<status status="PASS" starttime="20201112 12:27:32.629" endtime="20201112 12:27:32.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.646" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.645" endtime="20201112 12:27:32.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.649" level="INFO">VALUE: [0.00017555500000000085, 0.00017568000000000097, 0.00017611200000000257, 0.000175792000000001, 0.00017597199999999993, 0.00017613899999999877, 0.00017561099999999913, 0.00017568000000000097, 0.00017531900000000017, 0.00017542999999999725, 0.00017587499999999895, 0.00017618100000000095, 0.00017577800000000143, 0.0001756249999999987, 0.00017604200000000125, 0.00017536099999999888, 0.00017609700000000006, 0.00017544499999999977, 0.0001760700000000004, 0.000175792000000001, 0.00017559799999999903, 0.000175792000000001, 0.0001760409999999983, 0.00017555600000000032, 0.00017551399999999814, 0.00017568000000000097, 0.0001757500000000023, 0.00017537499999999845, 0.00017577799999999796, 0.00017549999999999857, 0.00017541700000000063, 0.00017586199999999885, 0.00017597199999999993, 0.00017540200000000158, 0.0001752370000000017, 0.00017584799999999928, 0.00017580600000000057, 0.00017590199999999862, 0.00017537499999999845, 0.00017609700000000006, 0.00017544499999999977, 0.00017550000000000204, 0.00017573600000000272, 0.00017522199999999918, 0.00017524999999999832, 0.00017548600000000247, 0.0001755140000000016, 0.00017613900000000224, 0.00017620899999999662, 0.00017586099999999938]</msg>
<status status="PASS" starttime="20201112 12:27:32.647" endtime="20201112 12:27:32.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.643" endtime="20201112 12:27:32.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.652" endtime="20201112 12:27:32.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.656" endtime="20201112 12:27:32.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.654" endtime="20201112 12:27:32.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.651" endtime="20201112 12:27:32.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.281" endtime="20201112 12:27:32.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.280" endtime="20201112 12:27:32.677"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.685" endtime="20201112 12:27:32.707"></status>
</kw>
<msg timestamp="20201112 12:27:32.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.684" endtime="20201112 12:27:32.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.709" endtime="20201112 12:27:32.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.711" endtime="20201112 12:27:32.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.681" endtime="20201112 12:27:32.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.679" endtime="20201112 12:27:32.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.721" endtime="20201112 12:27:33.029"></status>
</kw>
<msg timestamp="20201112 12:27:33.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.719" endtime="20201112 12:27:33.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.033" endtime="20201112 12:27:33.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.041" endtime="20201112 12:27:33.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.716" endtime="20201112 12:27:33.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.715" endtime="20201112 12:27:33.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.048" level="INFO">${RESULT} = [{'time': 0.022092319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017691599999999919, 'source_diff': 0.00017691599999999919}, {'time': 0.022297486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:33.044" endtime="20201112 12:27:33.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.061" level="INFO">${ACCURACY} = {'diff': [0.00017691599999999919, 0.0001764029999999986, 0.00017640300000000206, 0.00017645800000000086, 0.0001771669999999989, 0.00017629099999999856, 0.0001770830000000015, 0.00017695900000000084, 0...</msg>
<status status="PASS" starttime="20201112 12:27:33.049" endtime="20201112 12:27:33.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.065" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.064" endtime="20201112 12:27:33.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.068" level="INFO">VALUE: [0.00017691599999999919, 0.0001764029999999986, 0.00017640300000000206, 0.00017645800000000086, 0.0001771669999999989, 0.00017629099999999856, 0.0001770830000000015, 0.00017695900000000084, 0.00017690300000000256, 0.00017633300000000074, 0.00017704199999999878, 0.0001765969999999971, 0.00017638899999999902, 0.00017663899999999927, 0.00017622200000000018, 0.0001766249999999997, 0.00017709800000000053, 0.00017691699999999866, 0.00017702799999999921, 0.0001769579999999979, 0.0001765969999999971, 0.00017709700000000106, 0.00017645800000000086, 0.0001768470000000008, 0.00017662500000000317, 0.00017711100000000063, 0.00017702799999999921, 0.00017652800000000218, 0.00017644500000000077, 0.00017665199999999937, 0.00017643000000000172, 0.00017641699999999816, 0.00017711100000000063, 0.0001768189999999982, 0.00017691699999999866, 0.00017647200000000043, 0.0001766660000000024, 0.0001768340000000007, 0.00017715299999999934, 0.00017684699999999734, 0.00017627799999999846, 0.000176792000000002, 0.00017700000000000007, 0.00017647200000000043, 0.0001770409999999993, 0.00017630600000000107, 0.00017718100000000195, 0.0001768470000000008, 0.0001768470000000008, 0.00017693099999999823]</msg>
<status status="PASS" starttime="20201112 12:27:33.067" endtime="20201112 12:27:33.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.062" endtime="20201112 12:27:33.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.072" endtime="20201112 12:27:33.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.075" endtime="20201112 12:27:33.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.074" endtime="20201112 12:27:33.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.070" endtime="20201112 12:27:33.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.678" endtime="20201112 12:27:33.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.677" endtime="20201112 12:27:33.096"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.105" endtime="20201112 12:27:33.127"></status>
</kw>
<msg timestamp="20201112 12:27:33.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.103" endtime="20201112 12:27:33.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.128" endtime="20201112 12:27:33.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.131" endtime="20201112 12:27:33.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.101" endtime="20201112 12:27:33.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.099" endtime="20201112 12:27:33.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.140" endtime="20201112 12:27:33.435"></status>
</kw>
<msg timestamp="20201112 12:27:33.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.139" endtime="20201112 12:27:33.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.439" endtime="20201112 12:27:33.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.447" endtime="20201112 12:27:33.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.136" endtime="20201112 12:27:33.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.134" endtime="20201112 12:27:33.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.454" level="INFO">${RESULT} = [{'time': 0.022387917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017737500000000045, 'source_diff': 0.00017737500000000045}, {'time': 0.02258725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:33.451" endtime="20201112 12:27:33.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.469" level="INFO">${ACCURACY} = {'diff': [0.00017737500000000045, 0.00017773600000000125, 0.00017815300000000034, 0.00017769400000000254, 0.00017780499999999963, 0.0001780700000000024, 0.0001780830000000025, 0.0001779030000000001, 0...</msg>
<status status="PASS" starttime="20201112 12:27:33.455" endtime="20201112 12:27:33.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.473" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.472" endtime="20201112 12:27:33.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.476" level="INFO">VALUE: [0.00017737500000000045, 0.00017773600000000125, 0.00017815300000000034, 0.00017769400000000254, 0.00017780499999999963, 0.0001780700000000024, 0.0001780830000000025, 0.0001779030000000001, 0.00017754200000000275, 0.00017783300000000224, 0.00017805600000000282, 0.00017761100000000113, 0.00017813900000000077, 0.0001776669999999994, 0.00017776300000000092, 0.00017806899999999945, 0.0001779030000000001, 0.00017787500000000095, 0.00017723600000000075, 0.00017741599999999969, 0.00017751400000000014, 0.00017765299999999984, 0.0001775969999999981, 0.00017755500000000285, 0.00017743000000000272, 0.00017730499999999913, 0.00017755600000000232, 0.0001780969999999986, 0.00017777799999999996, 0.0001780410000000003, 0.00017766700000000288, 0.00017784800000000128, 0.00017791699999999966, 0.0001778059999999991, 0.00017791699999999966, 0.00017741599999999969, 0.0001775409999999998, 0.00017759700000000156, 0.00017772200000000168, 0.000177486000000001, 0.0001779730000000014, 0.0001776120000000006, 0.00017769399999999907, 0.00017748700000000048, 0.00017734699999999784, 0.0001775969999999981, 0.00017759700000000156, 0.00017802799999999674, 0.00017742999999999925, 0.00017741599999999969]</msg>
<status status="PASS" starttime="20201112 12:27:33.474" endtime="20201112 12:27:33.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.470" endtime="20201112 12:27:33.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.479" endtime="20201112 12:27:33.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.483" endtime="20201112 12:27:33.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.481" endtime="20201112 12:27:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.478" endtime="20201112 12:27:33.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.097" endtime="20201112 12:27:33.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.096" endtime="20201112 12:27:33.504"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.514" endtime="20201112 12:27:33.536"></status>
</kw>
<msg timestamp="20201112 12:27:33.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.512" endtime="20201112 12:27:33.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.538" endtime="20201112 12:27:33.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.540" endtime="20201112 12:27:33.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.509" endtime="20201112 12:27:33.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.507" endtime="20201112 12:27:33.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.550" endtime="20201112 12:27:33.838"></status>
</kw>
<msg timestamp="20201112 12:27:33.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023764333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023943208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.548" endtime="20201112 12:27:33.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023764333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023943208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.842" endtime="20201112 12:27:33.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.850" endtime="20201112 12:27:33.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.545" endtime="20201112 12:27:33.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.544" endtime="20201112 12:27:33.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.857" level="INFO">${RESULT} = [{'time': 0.023943208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017887500000000195, 'source_diff': 0.00017887500000000195}, {'time': 0.0241375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.854" endtime="20201112 12:27:33.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.870" level="INFO">${ACCURACY} = {'diff': [0.00017887500000000195, 0.00017920800000000014, 0.00017883299999999977, 0.00017920899999999962, 0.00017836200000000135, 0.0001784030000000006, 0.0001785410000000008, 0.00017888799999999858, ...</msg>
<status status="PASS" starttime="20201112 12:27:33.858" endtime="20201112 12:27:33.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.875" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.874" endtime="20201112 12:27:33.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.878" level="INFO">VALUE: [0.00017887500000000195, 0.00017920800000000014, 0.00017883299999999977, 0.00017920899999999962, 0.00017836200000000135, 0.0001784030000000006, 0.0001785410000000008, 0.00017888799999999858, 0.00017897199999999946, 0.0001784030000000006, 0.00017852800000000071, 0.00017877800000000096, 0.00017865300000000084, 0.00017902700000000174, 0.00017858299999999952, 0.0001786120000000016, 0.0001788479999999988, 0.00017854200000000028, 0.0001788609999999989, 0.00017865200000000137, 0.00017858299999999952, 0.00017827699999999752, 0.00017850000000000157, 0.00017876399999999792, 0.00017897199999999946, 0.0001785969999999991, 0.00017831999999999917, 0.00017920800000000014, 0.00017818, 0.00017870899999999912, 0.00017862499999999823, 0.00017823599999999828, 0.00017852800000000071, 0.00017920899999999962, 0.00017877800000000096, 0.00017843000000000026, 0.00017833299999999927, 0.00017826299999999795, 0.00017904199999999731, 0.00017858299999999605, 0.00017859700000000256, 0.00017837500000000145, 0.00017843099999999973, 0.00017847199999999896, 0.00017852799999999724, 0.00017819399999999957, 0.0001788199999999962, 0.00017891599999999425, 0.00017838900000000102, 0.0001789999999999986]</msg>
<status status="PASS" starttime="20201112 12:27:33.876" endtime="20201112 12:27:33.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.871" endtime="20201112 12:27:33.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.881" endtime="20201112 12:27:33.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.885" endtime="20201112 12:27:33.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.883" endtime="20201112 12:27:33.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.880" endtime="20201112 12:27:33.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.505" endtime="20201112 12:27:33.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.505" endtime="20201112 12:27:33.906"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.914" endtime="20201112 12:27:33.936"></status>
</kw>
<msg timestamp="20201112 12:27:33.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.913" endtime="20201112 12:27:33.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.938" endtime="20201112 12:27:33.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.940" endtime="20201112 12:27:33.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.910" endtime="20201112 12:27:33.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.908" endtime="20201112 12:27:33.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.949" endtime="20201112 12:27:34.235"></status>
</kw>
<msg timestamp="20201112 12:27:34.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.948" endtime="20201112 12:27:34.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.240" endtime="20201112 12:27:34.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.248" endtime="20201112 12:27:34.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.945" endtime="20201112 12:27:34.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.943" endtime="20201112 12:27:34.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.255" level="INFO">${RESULT} = [{'time': 0.022065486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001795549999999979, 'source_diff': 0.0001795549999999979}, {'time': 0.022268722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:34.251" endtime="20201112 12:27:34.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.268" level="INFO">${ACCURACY} = {'diff': [0.0001795549999999979, 0.0001794580000000004, 0.00018002699999999927, 0.000179277999999998, 0.0001794030000000016, 0.00018005600000000135, 0.0001800970000000006, 0.00017958300000000052, 0.00...</msg>
<status status="PASS" starttime="20201112 12:27:34.256" endtime="20201112 12:27:34.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.277" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.271" endtime="20201112 12:27:34.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.279" level="INFO">VALUE: [0.0001795549999999979, 0.0001794580000000004, 0.00018002699999999927, 0.000179277999999998, 0.0001794030000000016, 0.00018005600000000135, 0.0001800970000000006, 0.00017958300000000052, 0.00017972200000000021, 0.00017933399999999974, 0.00017997200000000046, 0.0001798609999999999, 0.00017961099999999966, 0.00017958300000000052, 0.00017997200000000046, 0.00017992999999999829, 0.00018017999999999854, 0.00017973599999999978, 0.0001794580000000004, 0.00017952800000000171, 0.00017995900000000037, 0.00018015299999999887, 0.00017958300000000052, 0.00017995900000000037, 0.00017938899999999855, 0.00017970799999999718, 0.00017979199999999806, 0.00017972200000000021, 0.00017956999999999695, 0.00018004200000000178, 0.00018016599999999897, 0.00017966699999999794, 0.00017930599999999713, 0.00018011100000000016, 0.0001798609999999999, 0.00017982000000000067, 0.00017923600000000275, 0.0001799580000000009, 0.00017984700000000034, 0.0001795970000000001, 0.0001799580000000009, 0.0001797770000000025, 0.00017979199999999806, 0.00017952800000000171, 0.0001796670000000014, 0.00018004199999999831, 0.0001793329999999968, 0.00017991700000000166, 0.00017973599999999978, 0.00017952799999999824]</msg>
<status status="PASS" starttime="20201112 12:27:34.278" endtime="20201112 12:27:34.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.269" endtime="20201112 12:27:34.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.283" endtime="20201112 12:27:34.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.287" endtime="20201112 12:27:34.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.285" endtime="20201112 12:27:34.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.281" endtime="20201112 12:27:34.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.907" endtime="20201112 12:27:34.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.906" endtime="20201112 12:27:34.308"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.317" endtime="20201112 12:27:34.339"></status>
</kw>
<msg timestamp="20201112 12:27:34.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.315" endtime="20201112 12:27:34.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.340" endtime="20201112 12:27:34.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.343" endtime="20201112 12:27:34.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.313" endtime="20201112 12:27:34.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.311" endtime="20201112 12:27:34.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.352" endtime="20201112 12:27:34.638"></status>
</kw>
<msg timestamp="20201112 12:27:34.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.350" endtime="20201112 12:27:34.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.642" endtime="20201112 12:27:34.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.650" endtime="20201112 12:27:34.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.348" endtime="20201112 12:27:34.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.346" endtime="20201112 12:27:34.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.657" level="INFO">${RESULT} = [{'time': 0.021967597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018054099999999934, 'source_diff': 0.00018054099999999934}, {'time': 0.022167917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:34.654" endtime="20201112 12:27:34.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.670" level="INFO">${ACCURACY} = {'diff': [0.00018054099999999934, 0.00018056999999999795, 0.00018115199999999693, 0.00018106999999999845, 0.00018113800000000083, 0.00018083400000000124, 0.00018072199999999775, 0.00018055600000000185...</msg>
<status status="PASS" starttime="20201112 12:27:34.658" endtime="20201112 12:27:34.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.674" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.673" endtime="20201112 12:27:34.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.677" level="INFO">VALUE: [0.00018054099999999934, 0.00018056999999999795, 0.00018115199999999693, 0.00018106999999999845, 0.00018113800000000083, 0.00018083400000000124, 0.00018072199999999775, 0.00018055600000000185, 0.00018104099999999984, 0.0001806109999999972, 0.0001807779999999995, 0.00018056900000000195, 0.00018058300000000152, 0.00018112499999999726, 0.00018054099999999934, 0.00018098600000000103, 0.00018055600000000185, 0.0001807230000000007, 0.00018032000000000117, 0.00018102799999999974, 0.00018111100000000116, 0.00018095900000000137, 0.0001804580000000014, 0.0001802230000000002, 0.0001808199999999982, 0.00018061100000000066, 0.00018072200000000122, 0.0001805970000000011, 0.000180584000000001, 0.00018043099999999826, 0.00018115299999999987, 0.00018037499999999998, 0.0001811390000000003, 0.0001804450000000013, 0.00018112499999999726, 0.00018040299999999912, 0.00018095900000000137, 0.00018087500000000048, 0.00018076300000000045, 0.00018056900000000195, 0.00018082000000000167, 0.0001811390000000003, 0.00018040299999999912, 0.00018076399999999992, 0.00018026399999999942, 0.00018034699999999737, 0.0001807779999999995, 0.00018084699999999787, 0.00018091600000000319, 0.00018109699999999812]</msg>
<status status="PASS" starttime="20201112 12:27:34.676" endtime="20201112 12:27:34.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.671" endtime="20201112 12:27:34.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.685" endtime="20201112 12:27:34.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.689" endtime="20201112 12:27:34.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.687" endtime="20201112 12:27:34.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.683" endtime="20201112 12:27:34.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.309" endtime="20201112 12:27:34.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.309" endtime="20201112 12:27:34.709"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.718" endtime="20201112 12:27:34.740"></status>
</kw>
<msg timestamp="20201112 12:27:34.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.716" endtime="20201112 12:27:34.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.742" endtime="20201112 12:27:34.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.744" endtime="20201112 12:27:34.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.714" endtime="20201112 12:27:34.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.712" endtime="20201112 12:27:34.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.753" endtime="20201112 12:27:35.039"></status>
</kw>
<msg timestamp="20201112 12:27:35.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.751" endtime="20201112 12:27:35.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.043" endtime="20201112 12:27:35.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.051" endtime="20201112 12:27:35.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.749" endtime="20201112 12:27:35.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.747" endtime="20201112 12:27:35.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.058" level="INFO">${RESULT} = [{'time': 0.021813889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018173599999999832, 'source_diff': 0.00018173599999999832}, {'time': 0.022010222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:35.054" endtime="20201112 12:27:35.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.072" level="INFO">${ACCURACY} = {'diff': [0.00018173599999999832, 0.00018126400000000042, 0.0001813329999999988, 0.00018208299999999955, 0.00018140200000000065, 0.00018152800000000024, 0.00018190300000000062, 0.000181487000000001, 0...</msg>
<status status="PASS" starttime="20201112 12:27:35.059" endtime="20201112 12:27:35.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.077" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.075" endtime="20201112 12:27:35.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.079" level="INFO">VALUE: [0.00018173599999999832, 0.00018126400000000042, 0.0001813329999999988, 0.00018208299999999955, 0.00018140200000000065, 0.00018152800000000024, 0.00018190300000000062, 0.000181487000000001, 0.0001817910000000006, 0.00018163899999999733, 0.0001819170000000002, 0.00018130599999999913, 0.00018212500000000173, 0.000182181, 0.00018208299999999955, 0.0001821940000000001, 0.00018181899999999973, 0.00018177700000000102, 0.00018202800000000074, 0.00018151299999999773, 0.000181278, 0.00018199999999999814, 0.00018188900000000105, 0.00018162500000000123, 0.0001820139999999977, 0.00018120799999999868, 0.00018201400000000117, 0.0001813329999999988, 0.0001816390000000008, 0.00018187500000000148, 0.00018169499999999908, 0.00018120800000000215, 0.00018195799999999943, 0.0001815970000000021, 0.00018166699999999994, 0.00018162500000000123, 0.00018137500000000098, 0.00018127700000000052, 0.00018217999999999707, 0.00018144499999999883, 0.00018190300000000062, 0.0001820139999999977, 0.00018201299999999823, 0.00018156999999999895, 0.00018159699999999862, 0.00018204200000000031, 0.0001818610000000019, 0.0001816380000000048, 0.00018158399999999852, 0.00018151400000000067]</msg>
<status status="PASS" starttime="20201112 12:27:35.078" endtime="20201112 12:27:35.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.073" endtime="20201112 12:27:35.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.083" endtime="20201112 12:27:35.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.086" endtime="20201112 12:27:35.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.084" endtime="20201112 12:27:35.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.081" endtime="20201112 12:27:35.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.710" endtime="20201112 12:27:35.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.710" endtime="20201112 12:27:35.107"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.115" endtime="20201112 12:27:35.137"></status>
</kw>
<msg timestamp="20201112 12:27:35.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.114" endtime="20201112 12:27:35.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.139" endtime="20201112 12:27:35.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.141" endtime="20201112 12:27:35.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.111" endtime="20201112 12:27:35.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.109" endtime="20201112 12:27:35.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.150" endtime="20201112 12:27:35.436"></status>
</kw>
<msg timestamp="20201112 12:27:35.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.149" endtime="20201112 12:27:35.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.440" endtime="20201112 12:27:35.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.449" endtime="20201112 12:27:35.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.146" endtime="20201112 12:27:35.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.145" endtime="20201112 12:27:35.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.455" level="INFO">${RESULT} = [{'time': 0.021800806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018233399999999927, 'source_diff': 0.00018233399999999927}, {'time': 0.022002125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:35.452" endtime="20201112 12:27:35.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.468" level="INFO">${ACCURACY} = {'diff': [0.00018233399999999927, 0.00018245799999999993, 0.00018227700000000152, 0.00018283399999999977, 0.0001830269999999988, 0.00018258300000000005, 0.00018290300000000162, 0.00018227799999999753,...</msg>
<status status="PASS" starttime="20201112 12:27:35.456" endtime="20201112 12:27:35.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.473" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.472" endtime="20201112 12:27:35.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.475" level="INFO">VALUE: [0.00018233399999999927, 0.00018245799999999993, 0.00018227700000000152, 0.00018283399999999977, 0.0001830269999999988, 0.00018258300000000005, 0.00018290300000000162, 0.00018227799999999753, 0.00018263899999999833, 0.00018293100000000076, 0.00018265199999999843, 0.000182584000000003, 0.00018305499999999794, 0.00018301400000000217, 0.00018230600000000013, 0.00018226400000000142, 0.00018244400000000036, 0.00018244399999999689, 0.00018238900000000155, 0.00018226400000000142, 0.0001826529999999979, 0.00018262499999999876, 0.00018293000000000129, 0.000182972, 0.00018290300000000162, 0.00018275000000000236, 0.00018276400000000192, 0.00018241600000000122, 0.00018269500000000008, 0.00018244400000000036, 0.00018258300000000005, 0.00018251400000000167, 0.00018288900000000205, 0.00018281900000000073, 0.00018230600000000013, 0.00018305599999999742, 0.00018277699999999855, 0.00018237500000000198, 0.0001830000000000026, 0.00018308400000000002, 0.00018293100000000076, 0.00018231900000000023, 0.00018231900000000023, 0.00018277700000000202, 0.00018259800000000256, 0.00018256999999999995, 0.00018316700000000144, 0.00018240299999999765, 0.00018312499999999926, 0.00018272199999999628]</msg>
<status status="PASS" starttime="20201112 12:27:35.474" endtime="20201112 12:27:35.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.469" endtime="20201112 12:27:35.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.479" endtime="20201112 12:27:35.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.482" endtime="20201112 12:27:35.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.480" endtime="20201112 12:27:35.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.477" endtime="20201112 12:27:35.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.108" endtime="20201112 12:27:35.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.107" endtime="20201112 12:27:35.503"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.511" endtime="20201112 12:27:35.534"></status>
</kw>
<msg timestamp="20201112 12:27:35.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.510" endtime="20201112 12:27:35.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.535" endtime="20201112 12:27:35.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.538" endtime="20201112 12:27:35.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.507" endtime="20201112 12:27:35.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.505" endtime="20201112 12:27:35.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.546" endtime="20201112 12:27:35.832"></status>
</kw>
<msg timestamp="20201112 12:27:35.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.545" endtime="20201112 12:27:35.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.836" endtime="20201112 12:27:35.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.844" endtime="20201112 12:27:35.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.542" endtime="20201112 12:27:35.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.541" endtime="20201112 12:27:35.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.851" level="INFO">${RESULT} = [{'time': 0.021960417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018333400000000027, 'source_diff': 0.00018333400000000027}, {'time': 0.022166736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:35.848" endtime="20201112 12:27:35.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.864" level="INFO">${ACCURACY} = {'diff': [0.00018333400000000027, 0.00018408299999999808, 0.00018376399999999946, 0.00018402799999999928, 0.00018390299999999915, 0.00018358299999999758, 0.0001835980000000001, 0.00018383400000000077,...</msg>
<status status="PASS" starttime="20201112 12:27:35.852" endtime="20201112 12:27:35.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.868" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.867" endtime="20201112 12:27:35.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.871" level="INFO">VALUE: [0.00018333400000000027, 0.00018408299999999808, 0.00018376399999999946, 0.00018402799999999928, 0.00018390299999999915, 0.00018358299999999758, 0.0001835980000000001, 0.00018383400000000077, 0.0001839170000000022, 0.00018336099999999994, 0.0001841529999999994, 0.00018430599999999867, 0.00018365300000000237, 0.0001833330000000008, 0.0001835139999999992, 0.00018376399999999946, 0.0001836940000000016, 0.0001841659999999995, 0.00018409699999999765, 0.00018329099999999862, 0.0001838469999999974, 0.00018341599999999875, 0.000183972000000001, 0.00018333400000000027, 0.00018395800000000143, 0.00018423600000000082, 0.00018349999999999964, 0.00018324999999999939, 0.00018384700000000087, 0.0001842079999999982, 0.0001839170000000022, 0.00018372200000000075, 0.00018331900000000123, 0.00018338900000000255, 0.00018390299999999915, 0.0001839170000000022, 0.00018400000000000014, 0.00018374999999999989, 0.0001833330000000008, 0.0001838330000000013, 0.00018345799999999746, 0.00018408400000000102, 0.00018390300000000262, 0.0001836810000000015, 0.00018377799999999903, 0.00018331900000000123, 0.0001839859999999971, 0.000183278000000002, 0.00018338900000000602, 0.0001835000000000031]</msg>
<status status="PASS" starttime="20201112 12:27:35.869" endtime="20201112 12:27:35.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.865" endtime="20201112 12:27:35.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.874" endtime="20201112 12:27:35.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.878" endtime="20201112 12:27:35.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.876" endtime="20201112 12:27:35.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.873" endtime="20201112 12:27:35.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.504" endtime="20201112 12:27:35.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.503" endtime="20201112 12:27:35.899"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.907" endtime="20201112 12:27:35.929"></status>
</kw>
<msg timestamp="20201112 12:27:35.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.906" endtime="20201112 12:27:35.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.931" endtime="20201112 12:27:35.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.933" endtime="20201112 12:27:35.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.903" endtime="20201112 12:27:35.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.901" endtime="20201112 12:27:35.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.943" endtime="20201112 12:27:36.229"></status>
</kw>
<msg timestamp="20201112 12:27:36.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021715417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.941" endtime="20201112 12:27:36.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021715417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.233" endtime="20201112 12:27:36.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.241" endtime="20201112 12:27:36.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.938" endtime="20201112 12:27:36.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.937" endtime="20201112 12:27:36.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.248" level="INFO">${RESULT} = [{'time': 0.021900236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018481899999999926, 'source_diff': 0.00018481899999999926}, {'time': 0.022108597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:36.244" endtime="20201112 12:27:36.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.261" level="INFO">${ACCURACY} = {'diff': [0.00018481899999999926, 0.000184875000000001, 0.00018438900000000008, 0.0001845140000000002, 0.00018469399999999914, 0.00018495799999999896, 0.0001844439999999989, 0.0001843339999999978, 0.0...</msg>
<status status="PASS" starttime="20201112 12:27:36.249" endtime="20201112 12:27:36.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.265" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.264" endtime="20201112 12:27:36.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.267" level="INFO">VALUE: [0.00018481899999999926, 0.000184875000000001, 0.00018438900000000008, 0.0001845140000000002, 0.00018469399999999914, 0.00018495799999999896, 0.0001844439999999989, 0.0001843339999999978, 0.00018476400000000046, 0.00018470899999999818, 0.0001851530000000004, 0.00018491600000000025, 0.00018458299999999858, 0.00018430599999999867, 0.00018474999999999742, 0.0001847079999999987, 0.00018490300000000015, 0.00018425000000000039, 0.00018474999999999742, 0.0001843750000000005, 0.0001848049999999997, 0.00018509699999999865, 0.00018459700000000162, 0.00018448600000000107, 0.00018445799999999846, 0.00018412500000000026, 0.00018450000000000064, 0.00018458400000000152, 0.000184568999999999, 0.0001842370000000003, 0.00018444499999999836, 0.00018476400000000046, 0.00018509699999999865, 0.00018425000000000039, 0.00018458299999999858, 0.00018450000000000064, 0.00018491699999999972, 0.00018486100000000144, 0.00018427799999999953, 0.00018431900000000223, 0.00018470800000000218, 0.00018470800000000218, 0.000184875000000001, 0.0001850140000000007, 0.00018434700000000137, 0.00018449999999999717, 0.0001845980000000011, 0.0001849859999999981, 0.00018476400000000393, 0.00018447199999999803]</msg>
<status status="PASS" starttime="20201112 12:27:36.266" endtime="20201112 12:27:36.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.261" endtime="20201112 12:27:36.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.271" endtime="20201112 12:27:36.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.274" endtime="20201112 12:27:36.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.273" endtime="20201112 12:27:36.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.269" endtime="20201112 12:27:36.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.900" endtime="20201112 12:27:36.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.899" endtime="20201112 12:27:36.295"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.304" endtime="20201112 12:27:36.327"></status>
</kw>
<msg timestamp="20201112 12:27:36.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.302" endtime="20201112 12:27:36.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.328" endtime="20201112 12:27:36.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.331" endtime="20201112 12:27:36.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.300" endtime="20201112 12:27:36.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.298" endtime="20201112 12:27:36.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.340" endtime="20201112 12:27:36.627"></status>
</kw>
<msg timestamp="20201112 12:27:36.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.338" endtime="20201112 12:27:36.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.631" endtime="20201112 12:27:36.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.639" endtime="20201112 12:27:36.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.335" endtime="20201112 12:27:36.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.334" endtime="20201112 12:27:36.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.645" level="INFO">${RESULT} = [{'time': 0.022331236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018583299999999983, 'source_diff': 0.00018583299999999983}, {'time': 0.022534542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:36.642" endtime="20201112 12:27:36.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.660" level="INFO">${ACCURACY} = {'diff': [0.00018583299999999983, 0.00018606999999999999, 0.00018592999999999735, 0.00018523599999999835, 0.00018557000000000295, 0.00018536099999999847, 0.0001861110000000027, 0.00018605499999999747,...</msg>
<status status="PASS" starttime="20201112 12:27:36.646" endtime="20201112 12:27:36.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.664" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.663" endtime="20201112 12:27:36.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.667" level="INFO">VALUE: [0.00018583299999999983, 0.00018606999999999999, 0.00018592999999999735, 0.00018523599999999835, 0.00018557000000000295, 0.00018536099999999847, 0.0001861110000000027, 0.00018605499999999747, 0.00018556999999999949, 0.00018600000000000214, 0.00018550000000000164, 0.00018595899999999943, 0.00018576400000000146, 0.00018563900000000133, 0.00018590300000000115, 0.00018518000000000007, 0.0001854439999999999, 0.0001856530000000009, 0.00018593000000000082, 0.00018583299999999983, 0.00018590300000000115, 0.0001857079999999997, 0.0001853750000000015, 0.0001855140000000012, 0.00018574999999999842, 0.0001857920000000006, 0.00018580499999999722, 0.00018540300000000065, 0.00018597199999999953, 0.00018569400000000014, 0.0001853750000000015, 0.0001860690000000005, 0.00018606899999999704, 0.00018591600000000125, 0.0001859859999999991, 0.00018574999999999842, 0.00018552800000000078, 0.0001854859999999986, 0.00018523599999999835, 0.0001856110000000022, 0.00018573600000000232, 0.0001854439999999999, 0.00018609799999999913, 0.00018590200000000168, 0.0001861110000000027, 0.00018549999999999817, 0.00018552699999999783, 0.00018605499999999747, 0.00018558300000000305, 0.00018579099999999765]</msg>
<status status="PASS" starttime="20201112 12:27:36.665" endtime="20201112 12:27:36.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.661" endtime="20201112 12:27:36.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.670" endtime="20201112 12:27:36.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.673" endtime="20201112 12:27:36.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.672" endtime="20201112 12:27:36.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.669" endtime="20201112 12:27:36.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.296" endtime="20201112 12:27:36.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.296" endtime="20201112 12:27:36.694"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.703" endtime="20201112 12:27:36.725"></status>
</kw>
<msg timestamp="20201112 12:27:36.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.701" endtime="20201112 12:27:36.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.727" endtime="20201112 12:27:36.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.729" endtime="20201112 12:27:36.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.699" endtime="20201112 12:27:36.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.697" endtime="20201112 12:27:36.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.738" endtime="20201112 12:27:37.025"></status>
</kw>
<msg timestamp="20201112 12:27:37.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.737" endtime="20201112 12:27:37.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.029" endtime="20201112 12:27:37.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.038" endtime="20201112 12:27:37.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.734" endtime="20201112 12:27:37.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.732" endtime="20201112 12:27:37.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.044" level="INFO">${RESULT} = [{'time': 0.021817569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018655499999999797, 'source_diff': 0.00018655499999999797}, {'time': 0.022018903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:37.041" endtime="20201112 12:27:37.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.057" level="INFO">${ACCURACY} = {'diff': [0.00018655499999999797, 0.0001871669999999985, 0.00018651399999999874, 0.00018673599999999985, 0.00018699999999999967, 0.0001863889999999986, 0.0001870690000000015, 0.00018649999999999917, 0...</msg>
<status status="PASS" starttime="20201112 12:27:37.045" endtime="20201112 12:27:37.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.062" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.061" endtime="20201112 12:27:37.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.064" level="INFO">VALUE: [0.00018655499999999797, 0.0001871669999999985, 0.00018651399999999874, 0.00018673599999999985, 0.00018699999999999967, 0.0001863889999999986, 0.0001870690000000015, 0.00018649999999999917, 0.0001862080000000002, 0.00018636099999999947, 0.00018649999999999917, 0.0001864859999999996, 0.00018661099999999972, 0.00018636099999999947, 0.00018669400000000114, 0.00018705599999999795, 0.00018668100000000104, 0.00018699999999999967, 0.00018668000000000157, 0.00018676399999999899, 0.0001865140000000022, 0.00018682000000000074, 0.00018681900000000126, 0.0001866950000000006, 0.00018662500000000276, 0.0001869440000000014, 0.00018672200000000028, 0.00018640299999999818, 0.0001863750000000025, 0.00018619400000000064, 0.00018701399999999924, 0.00018681900000000126, 0.00018638900000000208, 0.00018618000000000107, 0.0001864729999999995, 0.00018650000000000264, 0.00018626400000000196, 0.000186569000000001, 0.0001864859999999996, 0.00018631900000000076, 0.00018683299999999736, 0.00018681999999999727, 0.0001863469999999999, 0.00018623599999999935, 0.00018638900000000208, 0.00018626399999999849, 0.00018640300000000165, 0.0001863059999999972, 0.00018662500000000276, 0.00018641700000000122]</msg>
<status status="PASS" starttime="20201112 12:27:37.063" endtime="20201112 12:27:37.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.058" endtime="20201112 12:27:37.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.068" endtime="20201112 12:27:37.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.071" endtime="20201112 12:27:37.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.069" endtime="20201112 12:27:37.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.066" endtime="20201112 12:27:37.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.695" endtime="20201112 12:27:37.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.695" endtime="20201112 12:27:37.092"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.100" endtime="20201112 12:27:37.123"></status>
</kw>
<msg timestamp="20201112 12:27:37.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.099" endtime="20201112 12:27:37.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.124" endtime="20201112 12:27:37.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.127" endtime="20201112 12:27:37.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.096" endtime="20201112 12:27:37.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.094" endtime="20201112 12:27:37.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.135" endtime="20201112 12:27:37.422"></status>
</kw>
<msg timestamp="20201112 12:27:37.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.134" endtime="20201112 12:27:37.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.426" endtime="20201112 12:27:37.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.434" endtime="20201112 12:27:37.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.132" endtime="20201112 12:27:37.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.130" endtime="20201112 12:27:37.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.441" level="INFO">${RESULT} = [{'time': 0.021828583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018787499999999707, 'source_diff': 0.00018787499999999707}, {'time': 0.022032889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:37.437" endtime="20201112 12:27:37.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.454" level="INFO">${ACCURACY} = {'diff': [0.00018787499999999707, 0.00018736100000000047, 0.0001873189999999983, 0.0001875829999999981, 0.00018779199999999913, 0.00018748700000000007, 0.00018809700000000165, 0.0001874860000000006, 0...</msg>
<status status="PASS" starttime="20201112 12:27:37.442" endtime="20201112 12:27:37.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.458" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.457" endtime="20201112 12:27:37.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.461" level="INFO">VALUE: [0.00018787499999999707, 0.00018736100000000047, 0.0001873189999999983, 0.0001875829999999981, 0.00018779199999999913, 0.00018748700000000007, 0.00018809700000000165, 0.0001874860000000006, 0.00018773599999999738, 0.0001878890000000001, 0.00018736100000000047, 0.000187764, 0.00018744399999999842, 0.00018737500000000004, 0.00018723600000000035, 0.0001874440000000019, 0.0001879440000000024, 0.00018743099999999832, 0.00018755599999999845, 0.00018761100000000072, 0.00018791700000000272, 0.00018730499999999872, 0.0001881250000000008, 0.0001871669999999985, 0.00018805599999999895, 0.00018773599999999738, 0.000187666999999999, 0.0001881250000000008, 0.00018808400000000156, 0.0001877080000000017, 0.00018745800000000146, 0.00018815299999999993, 0.00018763899999999986, 0.00018790299999999968, 0.0001876250000000003, 0.0001874019999999997, 0.0001873050000000022, 0.00018769399999999867, 0.0001878890000000001, 0.0001874440000000019, 0.0001876250000000003, 0.00018755500000000244, 0.00018792999999999935, 0.0001871950000000011, 0.00018731900000000176, 0.00018748600000000407, 0.00018805599999999895, 0.00018745900000000093, 0.0001880409999999999, 0.00018724999999999992]</msg>
<status status="PASS" starttime="20201112 12:27:37.459" endtime="20201112 12:27:37.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.454" endtime="20201112 12:27:37.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.464" endtime="20201112 12:27:37.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.468" endtime="20201112 12:27:37.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.466" endtime="20201112 12:27:37.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.463" endtime="20201112 12:27:37.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.093" endtime="20201112 12:27:37.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.092" endtime="20201112 12:27:37.488"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.497" endtime="20201112 12:27:37.520"></status>
</kw>
<msg timestamp="20201112 12:27:37.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.495" endtime="20201112 12:27:37.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.521" endtime="20201112 12:27:37.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.523" endtime="20201112 12:27:37.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.493" endtime="20201112 12:27:37.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.491" endtime="20201112 12:27:37.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.532" endtime="20201112 12:27:37.819"></status>
</kw>
<msg timestamp="20201112 12:27:37.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.531" endtime="20201112 12:27:37.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.823" endtime="20201112 12:27:37.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.831" endtime="20201112 12:27:37.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.528" endtime="20201112 12:27:37.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.527" endtime="20201112 12:27:37.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.838" level="INFO">${RESULT} = [{'time': 0.021953514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018847200000000203, 'source_diff': 0.00018847200000000203}, {'time': 0.022160819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:37.834" endtime="20201112 12:27:37.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.851" level="INFO">${ACCURACY} = {'diff': [0.00018847200000000203, 0.00018880499999999675, 0.00018819499999999864, 0.0001890280000000008, 0.00018861099999999825, 0.00018891600000000078, 0.00018887500000000154, 0.00018879200000000013,...</msg>
<status status="PASS" starttime="20201112 12:27:37.839" endtime="20201112 12:27:37.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.855" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.854" endtime="20201112 12:27:37.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.857" level="INFO">VALUE: [0.00018847200000000203, 0.00018880499999999675, 0.00018819499999999864, 0.0001890280000000008, 0.00018861099999999825, 0.00018891600000000078, 0.00018887500000000154, 0.00018879200000000013, 0.00018841699999999975, 0.00018855599999999945, 0.00018879200000000013, 0.0001888890000000011, 0.00018911099999999875, 0.000188360999999998, 0.00018837500000000104, 0.0001888059999999997, 0.0001888059999999997, 0.00018875000000000142, 0.00018836100000000147, 0.00018887500000000154, 0.00018873599999999838, 0.0001886250000000013, 0.0001890280000000008, 0.00018818099999999907, 0.00018905599999999995, 0.00018825000000000092, 0.00018859799999999816, 0.00018825000000000092, 0.00018911100000000222, 0.00018887500000000154, 0.00018833300000000233, 0.0001884860000000016, 0.00018850000000000117, 0.00018911100000000222, 0.0001888059999999997, 0.00018870799999999924, 0.00018842999999999985, 0.00018919400000000017, 0.00018873599999999838, 0.0001882640000000005, 0.00018884699999999893, 0.00018858300000000258, 0.00018827800000000006, 0.00018869399999999967, 0.00018904200000000038, 0.0001888059999999997, 0.00018872200000000228, 0.00018845800000000246, 0.00018887499999999807, 0.0001888189999999998]</msg>
<status status="PASS" starttime="20201112 12:27:37.856" endtime="20201112 12:27:37.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.851" endtime="20201112 12:27:37.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.861" endtime="20201112 12:27:37.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.864" endtime="20201112 12:27:37.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.863" endtime="20201112 12:27:37.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.859" endtime="20201112 12:27:37.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.489" endtime="20201112 12:27:37.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.489" endtime="20201112 12:27:37.885"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.894" endtime="20201112 12:27:37.916"></status>
</kw>
<msg timestamp="20201112 12:27:37.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.892" endtime="20201112 12:27:37.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.918" endtime="20201112 12:27:37.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.920" endtime="20201112 12:27:37.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.890" endtime="20201112 12:27:37.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.888" endtime="20201112 12:27:37.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.929" endtime="20201112 12:27:38.216"></status>
</kw>
<msg timestamp="20201112 12:27:38.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.928" endtime="20201112 12:27:38.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.220" endtime="20201112 12:27:38.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.228" endtime="20201112 12:27:38.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.925" endtime="20201112 12:27:38.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.923" endtime="20201112 12:27:38.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.234" level="INFO">${RESULT} = [{'time': 0.021945181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018979200000000113, 'source_diff': 0.00018979200000000113}, {'time': 0.022167528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.231" endtime="20201112 12:27:38.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.249" level="INFO">${ACCURACY} = {'diff': [0.00018979200000000113, 0.00018983399999999984, 0.00018951399999999827, 0.0001901120000000027, 0.0001895830000000001, 0.00018947199999999956, 0.00018982000000000027, 0.000189764000000002, 0....</msg>
<status status="PASS" starttime="20201112 12:27:38.235" endtime="20201112 12:27:38.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.253" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.252" endtime="20201112 12:27:38.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.255" level="INFO">VALUE: [0.00018979200000000113, 0.00018983399999999984, 0.00018951399999999827, 0.0001901120000000027, 0.0001895830000000001, 0.00018947199999999956, 0.00018982000000000027, 0.000189764000000002, 0.00018986199999999898, 0.00018988899999999864, 0.00018970800000000024, 0.00019006899999999757, 0.00019015300000000193, 0.0001894449999999999, 0.000189360999999999, 0.000189360999999999, 0.0001901250000000028, 0.0001897089999999997, 0.00018977800000000156, 0.00018974999999999895, 0.00018987500000000254, 0.00018919400000000017, 0.0001895280000000013, 0.00018993000000000135, 0.00018983300000000036, 0.00018954200000000088, 0.000189667000000001, 0.0001898890000000021, 0.00018947199999999956, 0.00018931999999999977, 0.0001898190000000008, 0.00018987499999999907, 0.00019009700000000018, 0.00018980499999999775, 0.00018943000000000085, 0.00018951399999999827, 0.0001893890000000016, 0.00018957000000000002, 0.0001899029999999982, 0.00018994400000000092, 0.00018920799999999974, 0.00018982000000000027, 0.0001891800000000006, 0.00018919499999999964, 0.00018994400000000092, 0.00018961099999999925, 0.0001891950000000031, 0.00018975000000000242, 0.00018977799999999462, 0.0001898060000000007]</msg>
<status status="PASS" starttime="20201112 12:27:38.254" endtime="20201112 12:27:38.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.250" endtime="20201112 12:27:38.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.259" endtime="20201112 12:27:38.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.262" endtime="20201112 12:27:38.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.261" endtime="20201112 12:27:38.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.257" endtime="20201112 12:27:38.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.886" endtime="20201112 12:27:38.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.886" endtime="20201112 12:27:38.283"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.292" endtime="20201112 12:27:38.315"></status>
</kw>
<msg timestamp="20201112 12:27:38.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.290" endtime="20201112 12:27:38.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.316" endtime="20201112 12:27:38.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.319" endtime="20201112 12:27:38.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.288" endtime="20201112 12:27:38.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.286" endtime="20201112 12:27:38.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.327" endtime="20201112 12:27:38.614"></status>
</kw>
<msg timestamp="20201112 12:27:38.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.326" endtime="20201112 12:27:38.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.618" endtime="20201112 12:27:38.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.626" endtime="20201112 12:27:38.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.323" endtime="20201112 12:27:38.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.322" endtime="20201112 12:27:38.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.632" level="INFO">${RESULT} = [{'time': 0.021979375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001909029999999992, 'source_diff': 0.0001909029999999992}, {'time': 0.022194653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:38.629" endtime="20201112 12:27:38.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.645" level="INFO">${ACCURACY} = {'diff': [0.0001909029999999992, 0.00019019500000000064, 0.000191054999999999, 0.00019052799999999884, 0.00019036199999999948, 0.00019043099999999785, 0.00019097200000000106, 0.00019038899999999914, 0...</msg>
<status status="PASS" starttime="20201112 12:27:38.633" endtime="20201112 12:27:38.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.650" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.649" endtime="20201112 12:27:38.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.652" level="INFO">VALUE: [0.0001909029999999992, 0.00019019500000000064, 0.000191054999999999, 0.00019052799999999884, 0.00019036199999999948, 0.00019043099999999785, 0.00019097200000000106, 0.00019038899999999914, 0.0001910419999999989, 0.00019059700000000068, 0.000191152, 0.00019032000000000077, 0.0001903329999999974, 0.00019059700000000068, 0.00019059700000000068, 0.0001904999999999997, 0.00019054099999999893, 0.00019097200000000106, 0.00019052699999999936, 0.00019044399999999795, 0.00019065300000000243, 0.0001908199999999978, 0.00019034700000000043, 0.00019061100000000025, 0.00019105500000000247, 0.0001909450000000014, 0.00019062499999999982, 0.00019041700000000175, 0.00019069500000000114, 0.00019016599999999856, 0.00019052699999999936, 0.000190361, 0.00019111099999999728, 0.00019066600000000253, 0.0001904719999999971, 0.00019073600000000038, 0.00019101399999999977, 0.00019072300000000028, 0.00019034700000000043, 0.00019079199999999866, 0.0001909029999999992, 0.0001906389999999994, 0.0001910000000000002, 0.000191054999999999, 0.0001911120000000037, 0.000190361, 0.00019104099999999596, 0.0001902359999999964, 0.00019111099999999381, 0.00019030500000000172]</msg>
<status status="PASS" starttime="20201112 12:27:38.651" endtime="20201112 12:27:38.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.646" endtime="20201112 12:27:38.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.656" endtime="20201112 12:27:38.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.659" endtime="20201112 12:27:38.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.658" endtime="20201112 12:27:38.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.654" endtime="20201112 12:27:38.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.284" endtime="20201112 12:27:38.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.284" endtime="20201112 12:27:38.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.031" endtime="20201112 12:27:38.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.689" endtime="20201112 12:27:38.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.687" endtime="20201112 12:27:38.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.685" endtime="20201112 12:27:38.709"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:58.962" endtime="20201112 12:27:38.710" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:17.304" endtime="20201112 12:27:38.714"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.772" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:27:38.780" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:27:39.883" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:27:38.770" endtime="20201112 12:27:39.883"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.886" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:27:39.885" endtime="20201112 12:27:39.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.769" endtime="20201112 12:27:39.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.889" endtime="20201112 12:27:40.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.888" endtime="20201112 12:27:40.107"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.132" endtime="20201112 12:27:40.147"></status>
</kw>
<msg timestamp="20201112 12:27:40.147" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.129" endtime="20201112 12:27:40.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.150" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.148" endtime="20201112 12:27:40.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.153" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:40.151" endtime="20201112 12:27:40.153"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:40.124" endtime="20201112 12:27:40.154"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:40.119" endtime="20201112 12:27:40.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.117" endtime="20201112 12:27:40.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:40.159" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:40.158" endtime="20201112 12:27:40.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.155" endtime="20201112 12:27:40.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.115" endtime="20201112 12:27:40.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.114" endtime="20201112 12:27:40.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.161" endtime="20201112 12:27:40.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.111" endtime="20201112 12:27:40.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.170" endtime="20201112 12:27:40.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.108" endtime="20201112 12:27:40.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.768" endtime="20201112 12:27:40.173"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.179" endtime="20201112 12:27:40.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.178" endtime="20201112 12:27:40.199"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.212" endtime="20201112 12:27:40.224"></status>
</kw>
<msg timestamp="20201112 12:27:40.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.210" endtime="20201112 12:27:40.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.225" endtime="20201112 12:27:40.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.230" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:40.228" endtime="20201112 12:27:40.230"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:40.208" endtime="20201112 12:27:40.231"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:40.205" endtime="20201112 12:27:40.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.204" endtime="20201112 12:27:40.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:40.235" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:40.235" endtime="20201112 12:27:40.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.233" endtime="20201112 12:27:40.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.203" endtime="20201112 12:27:40.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.203" endtime="20201112 12:27:40.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.237" endtime="20201112 12:27:40.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.201" endtime="20201112 12:27:40.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.200" endtime="20201112 12:27:40.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.176" endtime="20201112 12:27:40.240"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:40.244" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.253" endtime="20201112 12:27:42.358"></status>
</kw>
<msg timestamp="20201112 12:27:42.359" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 419103, 'wakeups': [429152, 439151, 449151, 459151, 469151, 479151, 48...</msg>
<status status="PASS" starttime="20201112 12:27:40.252" endtime="20201112 12:27:42.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.365" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 419103, 'wakeups': [429152, 439151, 449151, 459151, 469151, 479151, 48...</msg>
<status status="PASS" starttime="20201112 12:27:42.362" endtime="20201112 12:27:42.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.368" endtime="20201112 12:27:42.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.249" endtime="20201112 12:27:42.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.246" endtime="20201112 12:27:42.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.379" level="INFO">${RESULT} = {'wakeups': [429152, 439151, 449151, 459151, 469151, 479151, 489151, 499151, 509151, 519151, 529151, 539151, 549151, 559151, 569151, 579151, 589151, 599151, 609151, 619151, 629151, 639151, 649151, 659...</msg>
<status status="PASS" starttime="20201112 12:27:42.375" endtime="20201112 12:27:42.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.383" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:42.382" endtime="20201112 12:27:42.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.385" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:42.384" endtime="20201112 12:27:42.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.379" endtime="20201112 12:27:42.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.390" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:42.389" endtime="20201112 12:27:42.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.392" level="INFO">VALUE: 419103</msg>
<status status="PASS" starttime="20201112 12:27:42.391" endtime="20201112 12:27:42.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.386" endtime="20201112 12:27:42.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.396" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:42.395" endtime="20201112 12:27:42.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.399" level="INFO">VALUE: [429152, 439151, 449151, 459151, 469151, 479151, 489151, 499151, 509151, 519151, 529151, 539151, 549151, 559151, 569151, 579151, 589151, 599151, 609151, 619151, 629151, 639151, 649151, 659151, 669151, 679151, 689151, 699151, 709151, 719151, 729151, 739151, 749151, 759151, 769151, 779151, 789151, 799151, 809151, 819151, 829151, 839151, 849151, 859151, 869151, 879151, 889151, 899151, 909151, 919151, 929151, 939151, 949151, 959151, 969151, 979151, 989151, 999151, 1009151, 1019151, 1029151, 1039151, 1049151, 1059151, 1069151, 1079151, 1089151, 1099151, 1109151, 1119151, 1129151, 1139151, 1149151, 1159151, 1169151, 1179151, 1189151, 1199151, 1209151, 1219151, 1229151, 1239151, 1249151, 1259151, 1269151, 1279151, 1289151, 1299151, 1309151, 1319151, 1329151, 1339151, 1349151, 1359151, 1369151, 1379151, 1389151, 1399151, 1409151, 1419151]</msg>
<status status="PASS" starttime="20201112 12:27:42.398" endtime="20201112 12:27:42.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.393" endtime="20201112 12:27:42.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.406" endtime="20201112 12:27:42.708"></status>
</kw>
<msg timestamp="20201112 12:27:42.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064865347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074879944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.404" endtime="20201112 12:27:42.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064865347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074879944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.712" endtime="20201112 12:27:42.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.719" endtime="20201112 12:27:42.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.402" endtime="20201112 12:27:42.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.400" endtime="20201112 12:27:42.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.746" level="INFO">${RESULT} = {'diff': [0, 0.010014597, 0.009965584, 0.009966040999999995, 0.009966112, 0.009966111, 0.009965972000000003, 0.009966082999999987, 0.00996625000000001, 0.009966124999999992, 0.009965584, 0.00996580500...</msg>
<status status="PASS" starttime="20201112 12:27:42.722" endtime="20201112 12:27:42.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.751" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:42.750" endtime="20201112 12:27:42.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.753" level="INFO">VALUE: 0.064865347</msg>
<status status="PASS" starttime="20201112 12:27:42.752" endtime="20201112 12:27:42.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.747" endtime="20201112 12:27:42.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.759" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:42.758" endtime="20201112 12:27:42.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.761" level="INFO">VALUE: [0.074879944, 0.084845528, 0.094811569, 0.104777681, 0.114743792, 0.124709764, 0.134675847, 0.144642097, 0.154608222, 0.164573806, 0.174539611, 0.184504889, 0.194470639, 0.204436792, 0.214402986, 0.224368653, 0.234334278, 0.244300208, 0.254265319, 0.264231236, 0.274196833, 0.284162806, 0.294128403, 0.304093944, 0.314059889, 0.324026306, 0.333992639, 0.343958875, 0.353924875, 0.363890861, 0.373856667, 0.383822514, 0.393787861, 0.403753597, 0.413719681, 0.423685736, 0.433652222, 0.443618472, 0.453584181, 0.463550028, 0.473515542, 0.483480764, 0.493447097, 0.503412903, 0.513378847, 0.523344903, 0.533310861, 0.543276736, 0.553242653, 0.563208806, 0.573174375, 0.583140167, 0.593106014, 0.603071528, 0.613036958, 0.623002431, 0.632968319, 0.642935042, 0.652901139, 0.662867097, 0.672832597, 0.6827985, 0.692764681, 0.702730931, 0.712696875, 0.722662458, 0.732628361, 0.742594097, 0.752560347, 0.762525694, 0.772489903, 0.782454681, 0.792419125, 0.802383931, 0.8123485, 0.822313903, 0.832278764, 0.842243875, 0.852208653, 0.862173667, 0.872138694, 0.882103889, 0.89207, 0.902035542, 0.912001444, 0.921967736, 0.931933486, 0.941900014, 0.951866514, 0.961833139, 0.971799583, 0.981765625, 0.9917315, 1.001697514, 1.011663556, 1.021629028, 1.031595056, 1.041561458, 1.051528194, 1.061494806] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:42.760" endtime="20201112 12:27:42.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.755" endtime="20201112 12:27:42.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.764" endtime="20201112 12:27:42.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.767" endtime="20201112 12:27:42.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.766" endtime="20201112 12:27:42.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.762" endtime="20201112 12:27:42.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.244" endtime="20201112 12:27:42.788"></status>
</kw>
<msg timestamp="20201112 12:27:42.788" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.796" endtime="20201112 12:27:44.911"></status>
</kw>
<msg timestamp="20201112 12:27:44.913" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2971088, 'wakeups': [2981138, 2991136, 3001136, 3011136, 3021136, 3031...</msg>
<status status="PASS" starttime="20201112 12:27:42.794" endtime="20201112 12:27:44.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2971088, 'wakeups': [2981138, 2991136, 3001136, 3011136, 3021136, 3031...</msg>
<status status="PASS" starttime="20201112 12:27:44.915" endtime="20201112 12:27:44.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.921" endtime="20201112 12:27:44.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.792" endtime="20201112 12:27:44.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.790" endtime="20201112 12:27:44.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.928" level="INFO">${RESULT} = {'wakeups': [2981138, 2991136, 3001136, 3011136, 3021136, 3031136, 3041136, 3051136, 3061136, 3071136, 3081136, 3091136, 3101136, 3111136, 3121136, 3131136, 3141136, 3151136, 3161136, 3171136, 3181136...</msg>
<status status="PASS" starttime="20201112 12:27:44.926" endtime="20201112 12:27:44.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.933" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:44.931" endtime="20201112 12:27:44.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.935" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:44.934" endtime="20201112 12:27:44.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.928" endtime="20201112 12:27:44.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.940" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:44.939" endtime="20201112 12:27:44.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.942" level="INFO">VALUE: 2971088</msg>
<status status="PASS" starttime="20201112 12:27:44.941" endtime="20201112 12:27:44.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.936" endtime="20201112 12:27:44.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.947" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:44.946" endtime="20201112 12:27:44.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.949" level="INFO">VALUE: [2981138, 2991136, 3001136, 3011136, 3021136, 3031136, 3041136, 3051136, 3061136, 3071136, 3081136, 3091136, 3101136, 3111136, 3121136, 3131136, 3141136, 3151136, 3161136, 3171136, 3181136, 3191136, 3201136, 3211136, 3221136, 3231136, 3241136, 3251136, 3261136, 3271136, 3281136, 3291136, 3301136, 3311136, 3321136, 3331136, 3341136, 3351136, 3361136, 3371136, 3381136, 3391136, 3401136, 3411136, 3421136, 3431136, 3441136, 3451136, 3461136, 3471136, 3481136, 3491136, 3501136, 3511136, 3521136, 3531136, 3541136, 3551136, 3561136, 3571136, 3581136, 3591136, 3601136, 3611136, 3621136, 3631136, 3641136, 3651136, 3661136, 3671136, 3681136, 3691136, 3701136, 3711136, 3721136, 3731136, 3741136, 3751136, 3761136, 3771136, 3781136, 3791136, 3801136, 3811136, 3821136, 3831136, 3841136, 3851136, 3861136, 3871136, 3881136, 3891136, 3901136, 3911136, 3921136, 3931136, 3941136, 3951136, 3961136, 3971136]</msg>
<status status="PASS" starttime="20201112 12:27:44.948" endtime="20201112 12:27:44.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.944" endtime="20201112 12:27:44.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.957" endtime="20201112 12:27:45.247"></status>
</kw>
<msg timestamp="20201112 12:27:45.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029671181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.955" endtime="20201112 12:27:45.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029671181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.251" endtime="20201112 12:27:45.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.259" endtime="20201112 12:27:45.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.952" endtime="20201112 12:27:45.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.951" endtime="20201112 12:27:45.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:45.285" level="INFO">${RESULT} = {'diff': [0, 0.010013125000000001, 0.009963083000000001, 0.009964833, 0.009964680999999996, 0.009965097000000006, 0.009965068999999993, 0.009964973000000002, 0.009965764000000002, 0.009965444000000004...</msg>
<status status="PASS" starttime="20201112 12:27:45.262" endtime="20201112 12:27:45.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.290" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:45.288" endtime="20201112 12:27:45.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.292" level="INFO">VALUE: 0.019658056</msg>
<status status="PASS" starttime="20201112 12:27:45.291" endtime="20201112 12:27:45.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.286" endtime="20201112 12:27:45.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.297" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:45.296" endtime="20201112 12:27:45.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.299" level="INFO">VALUE: [0.029671181, 0.039634264, 0.049599097, 0.059563778, 0.069528875, 0.079493944, 0.089458917, 0.099424681, 0.109390125, 0.119355625, 0.129321194, 0.139286653, 0.14925225, 0.159217486, 0.169183306, 0.179148722, 0.189114264, 0.199079639, 0.209045028, 0.219010736, 0.228976681, 0.238941806, 0.248907556, 0.258873083, 0.268838042, 0.278803056, 0.288768194, 0.298732778, 0.308698403, 0.318663597, 0.328628917, 0.338594458, 0.348560139, 0.358525597, 0.368491708, 0.378457486, 0.388422722, 0.398388181, 0.408353319, 0.418318472, 0.428283472, 0.438248931, 0.448214861, 0.458180847, 0.468147125, 0.478113542, 0.488079736, 0.498045764, 0.508011875, 0.517978236, 0.527944944, 0.537911389, 0.547877847, 0.557844194, 0.567810875, 0.577776722, 0.587743167, 0.597710222, 0.607677333, 0.617644861, 0.627612153, 0.637579361, 0.647546236, 0.657513292, 0.667480653, 0.677447958, 0.687415167, 0.697382375, 0.707349458, 0.717317014, 0.727284667, 0.737251889, 0.747220236, 0.757188319, 0.767156181, 0.777123778, 0.787091625, 0.797059556, 0.807027319, 0.816995111, 0.826962778, 0.836930847, 0.846898236, 0.856865833, 0.866833111, 0.876800208, 0.886767597, 0.896734639, 0.906701722, 0.916668944, 0.926635972, 0.936602333, 0.946568972, 0.956535181, 0.966501861, 0.976468903, 0.986435861, 0.996402861, 1.006369111, 1.016336056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:45.298" endtime="20201112 12:27:45.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.293" endtime="20201112 12:27:45.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.307" endtime="20201112 12:27:45.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.310" endtime="20201112 12:27:45.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.308" endtime="20201112 12:27:45.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.305" endtime="20201112 12:27:45.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.789" endtime="20201112 12:27:45.331"></status>
</kw>
<msg timestamp="20201112 12:27:45.331" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.339" endtime="20201112 12:27:47.450"></status>
</kw>
<msg timestamp="20201112 12:27:47.451" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5522560, 'wakeups': [5532610, 5542608, 5552608, 5562608, 5572608, 5582...</msg>
<status status="PASS" starttime="20201112 12:27:45.337" endtime="20201112 12:27:47.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.457" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5522560, 'wakeups': [5532610, 5542608, 5552608, 5562608, 5572608, 5582...</msg>
<status status="PASS" starttime="20201112 12:27:47.453" endtime="20201112 12:27:47.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.459" endtime="20201112 12:27:47.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.335" endtime="20201112 12:27:47.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.333" endtime="20201112 12:27:47.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.470" level="INFO">${RESULT} = {'wakeups': [5532610, 5542608, 5552608, 5562608, 5572608, 5582608, 5592608, 5602608, 5612608, 5622608, 5632608, 5642608, 5652608, 5662608, 5672608, 5682608, 5692608, 5702608, 5712608, 5722608, 5732608...</msg>
<status status="PASS" starttime="20201112 12:27:47.466" endtime="20201112 12:27:47.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.478" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:47.476" endtime="20201112 12:27:47.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.481" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:47.480" endtime="20201112 12:27:47.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.472" endtime="20201112 12:27:47.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.485" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:47.484" endtime="20201112 12:27:47.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.487" level="INFO">VALUE: 5522560</msg>
<status status="PASS" starttime="20201112 12:27:47.487" endtime="20201112 12:27:47.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.482" endtime="20201112 12:27:47.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.492" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:47.491" endtime="20201112 12:27:47.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.494" level="INFO">VALUE: [5532610, 5542608, 5552608, 5562608, 5572608, 5582608, 5592608, 5602608, 5612608, 5622608, 5632608, 5642608, 5652608, 5662608, 5672608, 5682608, 5692608, 5702608, 5712608, 5722608, 5732608, 5742608, 5752608, 5762608, 5772608, 5782608, 5792608, 5802608, 5812608, 5822608, 5832608, 5842608, 5852608, 5862608, 5872608, 5882608, 5892608, 5902608, 5912608, 5922608, 5932608, 5942608, 5952608, 5962608, 5972608, 5982608, 5992608, 6002608, 6012608, 6022608, 6032608, 6042608, 6052608, 6062608, 6072608, 6082608, 6092608, 6102608, 6112608, 6122608, 6132608, 6142608, 6152608, 6162608, 6172608, 6182608, 6192608, 6202608, 6212608, 6222608, 6232608, 6242608, 6252608, 6262608, 6272608, 6282608, 6292608, 6302608, 6312608, 6322608, 6332608, 6342608, 6352608, 6362608, 6372608, 6382608, 6392608, 6402608, 6412608, 6422608, 6432608, 6442608, 6452608, 6462608, 6472608, 6482608, 6492608, 6502608, 6512608, 6522608]</msg>
<status status="PASS" starttime="20201112 12:27:47.493" endtime="20201112 12:27:47.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.489" endtime="20201112 12:27:47.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.503" endtime="20201112 12:27:47.794"></status>
</kw>
<msg timestamp="20201112 12:27:47.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029759472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:47.502" endtime="20201112 12:27:47.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029759472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:47.798" endtime="20201112 12:27:47.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.806" endtime="20201112 12:27:47.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.498" endtime="20201112 12:27:47.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.496" endtime="20201112 12:27:47.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.832" level="INFO">${RESULT} = {'diff': [0, 0.010015471999999997, 0.009965278000000004, 0.009966180999999998, 0.009966055000000001, 0.009965971999999997, 0.009966584, 0.009965916000000005, 0.00996582, 0.00996594399999999, 0.0099657...</msg>
<status status="PASS" starttime="20201112 12:27:47.809" endtime="20201112 12:27:47.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.836" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:47.835" endtime="20201112 12:27:47.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.838" level="INFO">VALUE: 0.019744</msg>
<status status="PASS" starttime="20201112 12:27:47.837" endtime="20201112 12:27:47.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.833" endtime="20201112 12:27:47.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.843" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:47.842" endtime="20201112 12:27:47.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.845" level="INFO">VALUE: [0.029759472, 0.03972475, 0.049690931, 0.059656986, 0.069622958, 0.079589542, 0.089555458, 0.099521278, 0.109487222, 0.119452986, 0.129419014, 0.139385194, 0.149351556, 0.159317417, 0.169283181, 0.179249306, 0.189215375, 0.199181306, 0.209147486, 0.219113903, 0.229080194, 0.239046361, 0.249012486, 0.258978097, 0.268944347, 0.278909861, 0.288875403, 0.298841625, 0.308808347, 0.318775208, 0.328742028, 0.338708292, 0.348674972, 0.358641083, 0.368606819, 0.378572431, 0.388538708, 0.398504889, 0.408470708, 0.418436611, 0.428402125, 0.438367847, 0.448333889, 0.458300014, 0.468265681, 0.478231056, 0.488195556, 0.498161778, 0.508127569, 0.518093333, 0.528058694, 0.538024181, 0.547989583, 0.557955194, 0.567920819, 0.577886264, 0.587851389, 0.597816681, 0.607781972, 0.617747722, 0.627713736, 0.637680014, 0.647646097, 0.657611792, 0.667577847, 0.677543694, 0.687509528, 0.697475569, 0.70744175, 0.717407972, 0.727374347, 0.737340111, 0.747305847, 0.757271681, 0.767236431, 0.777201514, 0.787166514, 0.797131431, 0.807096111, 0.817061167, 0.827025931, 0.836991153, 0.846956597, 0.856922042, 0.866887431, 0.876853097, 0.886818236, 0.896783458, 0.906748139, 0.916712847, 0.926677625, 0.936642611, 0.946607681, 0.956573389, 0.966538528, 0.976503514, 0.986468819, 0.996434181, 1.006399292, 1.016364972] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:47.844" endtime="20201112 12:27:47.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.840" endtime="20201112 12:27:47.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.849" endtime="20201112 12:27:47.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:47.852" endtime="20201112 12:27:47.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.850" endtime="20201112 12:27:47.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.847" endtime="20201112 12:27:47.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.331" endtime="20201112 12:27:47.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.242" endtime="20201112 12:27:47.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.241" endtime="20201112 12:27:47.873"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:47.876" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.886" endtime="20201112 12:27:50.008"></status>
</kw>
<msg timestamp="20201112 12:27:50.009" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8078820, 'wakeups': [8088918, 8098913, 8108914, 8118914, 8128914, 8138...</msg>
<status status="PASS" starttime="20201112 12:27:47.884" endtime="20201112 12:27:50.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.015" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8078820, 'wakeups': [8088918, 8098913, 8108914, 8118914, 8128914, 8138...</msg>
<status status="PASS" starttime="20201112 12:27:50.011" endtime="20201112 12:27:50.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.018" endtime="20201112 12:27:50.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.881" endtime="20201112 12:27:50.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.878" endtime="20201112 12:27:50.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.029" level="INFO">${RESULT} = {'wakeups': [8088918, 8098913, 8108914, 8118914, 8128914, 8138914, 8148914, 8158914, 8168914, 8178914, 8188914, 8198914, 8208915, 8218914, 8228914, 8238914, 8248914, 8258914, 8268914, 8278914, 8288915...</msg>
<status status="PASS" starttime="20201112 12:27:50.025" endtime="20201112 12:27:50.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.036" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:50.034" endtime="20201112 12:27:50.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.038" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:50.037" endtime="20201112 12:27:50.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.030" endtime="20201112 12:27:50.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.042" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:50.041" endtime="20201112 12:27:50.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.044" level="INFO">VALUE: 8078820</msg>
<status status="PASS" starttime="20201112 12:27:50.044" endtime="20201112 12:27:50.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.039" endtime="20201112 12:27:50.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.049" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:50.048" endtime="20201112 12:27:50.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.052" level="INFO">VALUE: [8088918, 8098913, 8108914, 8118914, 8128914, 8138914, 8148914, 8158914, 8168914, 8178914, 8188914, 8198914, 8208915, 8218914, 8228914, 8238914, 8248914, 8258914, 8268914, 8278914, 8288915, 8298915, 8308914, 8318914, 8328914, 8338914, 8348914, 8358914, 8368915, 8378914, 8388915, 8398914, 8408914, 8418914, 8428914, 8438914, 8448914, 8458914, 8468914, 8478914, 8488914, 8498915, 8508914, 8518914, 8528914, 8538915, 8548914, 8558914, 8568914, 8578914, 8588914, 8598914, 8608914, 8618914, 8628914, 8638915, 8648914, 8658914, 8668914, 8678915, 8688914, 8698914, 8708915, 8718914, 8728914, 8738914, 8748914, 8758914, 8768914, 8778914, 8788914, 8798914, 8808914, 8818914, 8828914, 8838915, 8848914, 8858914, 8868914, 8878915, 8888914, 8898914, 8908914, 8918914, 8928914, 8938914, 8948915, 8958914, 8968914, 8978914, 8988914, 8998914, 9008914, 9018914, 9028915, 9038915, 9048914, 9058915, 9068915, 9078914]</msg>
<status status="PASS" starttime="20201112 12:27:50.050" endtime="20201112 12:27:50.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.046" endtime="20201112 12:27:50.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.059" endtime="20201112 12:27:50.349"></status>
</kw>
<msg timestamp="20201112 12:27:50.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034911764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.057" endtime="20201112 12:27:50.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034911764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.353" endtime="20201112 12:27:50.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.361" endtime="20201112 12:27:50.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.055" endtime="20201112 12:27:50.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.053" endtime="20201112 12:27:50.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.394" level="INFO">${RESULT} = {'diff': [0, 0.010062347, 0.009961097000000002, 0.009967180999999999, 0.009966263999999996, 0.009966097000000007, 0.009966040999999995, 0.009966681000000005, 0.009966264000000002, 0.009966819000000002...</msg>
<status status="PASS" starttime="20201112 12:27:50.370" endtime="20201112 12:27:50.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.398" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:50.397" endtime="20201112 12:27:50.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.400" level="INFO">VALUE: 0.024849417</msg>
<status status="PASS" starttime="20201112 12:27:50.399" endtime="20201112 12:27:50.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.394" endtime="20201112 12:27:50.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.406" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:50.405" endtime="20201112 12:27:50.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.408" level="INFO">VALUE: [0.034911764, 0.044872861, 0.054840042, 0.064806306, 0.074772403, 0.084738444, 0.094705125, 0.104671389, 0.114638208, 0.124604667, 0.134570819, 0.144537278, 0.154503667, 0.164469653, 0.174435583, 0.184401792, 0.194367875, 0.204334361, 0.214300986, 0.224267681, 0.234234667, 0.244201778, 0.254168472, 0.264135306, 0.274102403, 0.284069708, 0.294036653, 0.304003514, 0.313969681, 0.323935597, 0.333902042, 0.343867931, 0.353834, 0.363800347, 0.373766833, 0.3837335, 0.3937, 0.403666097, 0.413632319, 0.423599181, 0.433565333, 0.443531986, 0.453497736, 0.463463833, 0.473429819, 0.483395931, 0.493361903, 0.503328056, 0.513294694, 0.523261694, 0.533228958, 0.543195556, 0.553162292, 0.563129083, 0.573096139, 0.583063264, 0.593029583, 0.60299525, 0.612961583, 0.622927806, 0.632893722, 0.642860347, 0.652826667, 0.662792889, 0.672759333, 0.682725236, 0.692691014, 0.702657236, 0.712623458, 0.722590361, 0.732556569, 0.742522694, 0.752488778, 0.762454958, 0.772420042, 0.782385792, 0.792351069, 0.802316597, 0.812282167, 0.822247792, 0.832213264, 0.84217875, 0.852144819, 0.862110236, 0.872075986, 0.882041778, 0.892007819, 0.901973653, 0.911940097, 0.921905931, 0.931871708, 0.941837111, 0.95180275, 0.961768542, 0.971734389, 0.981700597, 0.991665944, 1.001631583, 1.011597014, 1.021563111] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:50.407" endtime="20201112 12:27:50.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.402" endtime="20201112 12:27:50.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.411" endtime="20201112 12:27:50.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.414" endtime="20201112 12:27:50.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.413" endtime="20201112 12:27:50.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.409" endtime="20201112 12:27:50.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.876" endtime="20201112 12:27:50.435"></status>
</kw>
<msg timestamp="20201112 12:27:50.435" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.443" endtime="20201112 12:27:52.597"></status>
</kw>
<msg timestamp="20201112 12:27:52.598" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10645237, 'wakeups': [10655335, 10665330, 10675331, 10685331, 10695331...</msg>
<status status="PASS" starttime="20201112 12:27:50.442" endtime="20201112 12:27:52.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.600" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10645237, 'wakeups': [10655335, 10665330, 10675331, 10685331, 10695331...</msg>
<status status="PASS" starttime="20201112 12:27:52.599" endtime="20201112 12:27:52.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.601" endtime="20201112 12:27:52.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.439" endtime="20201112 12:27:52.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.437" endtime="20201112 12:27:52.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.607" level="INFO">${RESULT} = {'wakeups': [10655335, 10665330, 10675331, 10685331, 10695331, 10705331, 10715332, 10725331, 10735331, 10745331, 10755331, 10765331, 10775331, 10785331, 10795331, 10805331, 10815332, 10825331, 1083533...</msg>
<status status="PASS" starttime="20201112 12:27:52.605" endtime="20201112 12:27:52.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.611" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:52.610" endtime="20201112 12:27:52.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.613" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:52.612" endtime="20201112 12:27:52.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.608" endtime="20201112 12:27:52.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.619" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:52.617" endtime="20201112 12:27:52.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.622" level="INFO">VALUE: 10645237</msg>
<status status="PASS" starttime="20201112 12:27:52.621" endtime="20201112 12:27:52.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.615" endtime="20201112 12:27:52.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.627" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:52.626" endtime="20201112 12:27:52.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.629" level="INFO">VALUE: [10655335, 10665330, 10675331, 10685331, 10695331, 10705331, 10715332, 10725331, 10735331, 10745331, 10755331, 10765331, 10775331, 10785331, 10795331, 10805331, 10815332, 10825331, 10835331, 10845331, 10855331, 10865331, 10875331, 10885331, 10895331, 10905331, 10915331, 10925331, 10935331, 10945331, 10955331, 10965331, 10975331, 10985331, 10995332, 11005331, 11015331, 11025331, 11035331, 11045332, 11055331, 11065331, 11075331, 11085331, 11095331, 11105331, 11115331, 11125331, 11135331, 11145331, 11155331, 11165332, 11175331, 11185331, 11195331, 11205331, 11215331, 11225331, 11235331, 11245331, 11255331, 11265331, 11275331, 11285331, 11295331, 11305331, 11315331, 11325331, 11335331, 11345331, 11355331, 11365331, 11375332, 11385331, 11395331, 11405331, 11415331, 11425331, 11435331, 11445331, 11455331, 11465331, 11475331, 11485331, 11495331, 11505331, 11515331, 11525331, 11535331, 11545331, 11555332, 11565332, 11575331, 11585331, 11595331, 11605331, 11615331, 11625331, 11635331, 11645331]</msg>
<status status="PASS" starttime="20201112 12:27:52.628" endtime="20201112 12:27:52.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.623" endtime="20201112 12:27:52.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.636" endtime="20201112 12:27:52.928"></status>
</kw>
<msg timestamp="20201112 12:27:52.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029998097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.635" endtime="20201112 12:27:52.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029998097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.932" endtime="20201112 12:27:52.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.939" endtime="20201112 12:27:52.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.632" endtime="20201112 12:27:52.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.630" endtime="20201112 12:27:52.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.965" level="INFO">${RESULT} = {'diff': [0, 0.010063153000000002, 0.009961361000000002, 0.009966598, 0.009965679999999998, 0.009965305999999993, 0.009965152000000005, 0.009965056, 0.009964721999999995, 0.00996482, 0.009965472000000...</msg>
<status status="PASS" starttime="20201112 12:27:52.943" endtime="20201112 12:27:52.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.970" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:52.969" endtime="20201112 12:27:52.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.972" level="INFO">VALUE: 0.019934944</msg>
<status status="PASS" starttime="20201112 12:27:52.971" endtime="20201112 12:27:52.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.966" endtime="20201112 12:27:52.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.977" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:52.976" endtime="20201112 12:27:52.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.980" level="INFO">VALUE: [0.029998097, 0.039959458, 0.049926056, 0.059891736, 0.069857042, 0.079822194, 0.08978725, 0.099751972, 0.109716792, 0.119682264, 0.129647681, 0.139613083, 0.149578139, 0.159543389, 0.169509083, 0.179474611, 0.189440306, 0.199405903, 0.209371944, 0.219337611, 0.229302861, 0.239267972, 0.249232819, 0.259198028, 0.269163361, 0.279129139, 0.289094764, 0.299060125, 0.309025653, 0.318990694, 0.328956444, 0.338921958, 0.348886764, 0.358851361, 0.368816514, 0.378781292, 0.388745861, 0.398710931, 0.408676208, 0.418641361, 0.428606792, 0.438572639, 0.448538278, 0.458503847, 0.468469778, 0.478435056, 0.488400306, 0.498365556, 0.508331097, 0.518296875, 0.528261903, 0.538228097, 0.548192903, 0.558157944, 0.568123208, 0.578088722, 0.588053972, 0.598019181, 0.607983944, 0.617949153, 0.627913389, 0.637878403, 0.647843486, 0.657808931, 0.667773792, 0.677738722, 0.687703375, 0.697668028, 0.707632778, 0.717597681, 0.727562458, 0.737527236, 0.747492083, 0.757457306, 0.767422472, 0.777388042, 0.787353292, 0.797318375, 0.807283583, 0.817249083, 0.827214542, 0.837179167, 0.847144014, 0.857109153, 0.867074972, 0.877041278, 0.887006722, 0.896972069, 0.906937097, 0.916902486, 0.926868153, 0.936833514, 0.946799042, 0.956764139, 0.966728875, 0.976693764, 0.986658694, 0.996624083, 1.006589472, 1.016555431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:52.979" endtime="20201112 12:27:52.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.973" endtime="20201112 12:27:52.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.983" endtime="20201112 12:27:52.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.987" endtime="20201112 12:27:53.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.985" endtime="20201112 12:27:53.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.982" endtime="20201112 12:27:53.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.436" endtime="20201112 12:27:53.008"></status>
</kw>
<msg timestamp="20201112 12:27:53.008" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.016" endtime="20201112 12:27:55.139"></status>
</kw>
<msg timestamp="20201112 12:27:55.140" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13226821, 'wakeups': [13236919, 13246914, 13256915, 13266915, 13276915...</msg>
<status status="PASS" starttime="20201112 12:27:53.014" endtime="20201112 12:27:55.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.145" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13226821, 'wakeups': [13236919, 13246914, 13256915, 13266915, 13276915...</msg>
<status status="PASS" starttime="20201112 12:27:55.142" endtime="20201112 12:27:55.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.146" endtime="20201112 12:27:55.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.012" endtime="20201112 12:27:55.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.010" endtime="20201112 12:27:55.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.151" level="INFO">${RESULT} = {'wakeups': [13236919, 13246914, 13256915, 13266915, 13276915, 13286916, 13296915, 13306915, 13316915, 13326915, 13336915, 13346915, 13356915, 13366915, 13376915, 13386915, 13396915, 13406915, 1341691...</msg>
<status status="PASS" starttime="20201112 12:27:55.149" endtime="20201112 12:27:55.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.155" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:55.154" endtime="20201112 12:27:55.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.157" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:55.156" endtime="20201112 12:27:55.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.152" endtime="20201112 12:27:55.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.162" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:55.161" endtime="20201112 12:27:55.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.164" level="INFO">VALUE: 13226821</msg>
<status status="PASS" starttime="20201112 12:27:55.163" endtime="20201112 12:27:55.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.159" endtime="20201112 12:27:55.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.169" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:55.168" endtime="20201112 12:27:55.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.172" level="INFO">VALUE: [13236919, 13246914, 13256915, 13266915, 13276915, 13286916, 13296915, 13306915, 13316915, 13326915, 13336915, 13346915, 13356915, 13366915, 13376915, 13386915, 13396915, 13406915, 13416916, 13426916, 13436915, 13446915, 13456915, 13466915, 13476915, 13486915, 13496915, 13506915, 13516915, 13526915, 13536916, 13546915, 13556915, 13566915, 13576915, 13586915, 13596915, 13606915, 13616915, 13626915, 13636915, 13646915, 13656915, 13666915, 13676915, 13686915, 13696915, 13706915, 13716916, 13726915, 13736915, 13746915, 13756915, 13766915, 13776915, 13786915, 13796916, 13806915, 13816915, 13826915, 13836915, 13846915, 13856915, 13866915, 13876915, 13886915, 13896915, 13906915, 13916915, 13926915, 13936915, 13946915, 13956915, 13966915, 13976915, 13986915, 13996915, 14006915, 14016916, 14026915, 14036915, 14046915, 14056915, 14066915, 14076916, 14086916, 14096915, 14106915, 14116915, 14126915, 14136915, 14146915, 14156915, 14166915, 14176915, 14186915, 14196916, 14206915, 14216915, 14226915]</msg>
<status status="PASS" starttime="20201112 12:27:55.170" endtime="20201112 12:27:55.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.166" endtime="20201112 12:27:55.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.179" endtime="20201112 12:27:55.472"></status>
</kw>
<msg timestamp="20201112 12:27:55.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029877653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.177" endtime="20201112 12:27:55.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029877653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.475" endtime="20201112 12:27:55.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.483" endtime="20201112 12:27:55.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.175" endtime="20201112 12:27:55.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.173" endtime="20201112 12:27:55.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.554" level="INFO">${RESULT} = {'diff': [0, 0.010062195, 0.009961179999999997, 0.009966084, 0.009964861000000005, 0.009965027999999994, 0.009964582999999999, 0.009964375000000011, 0.009964763999999987, 0.009965166000000011, 0.00996...</msg>
<status status="PASS" starttime="20201112 12:27:55.486" endtime="20201112 12:27:55.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.558" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:55.557" endtime="20201112 12:27:55.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.561" level="INFO">VALUE: 0.019815458</msg>
<status status="PASS" starttime="20201112 12:27:55.559" endtime="20201112 12:27:55.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.555" endtime="20201112 12:27:55.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.566" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:55.565" endtime="20201112 12:27:55.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.568" level="INFO">VALUE: [0.029877653, 0.039838833, 0.049804917, 0.059769778, 0.069734806, 0.079699389, 0.089663764, 0.099628528, 0.109593694, 0.119558986, 0.129523639, 0.139487319, 0.149452181, 0.159416819, 0.169381819, 0.179346917, 0.189312472, 0.199277736, 0.209243472, 0.219208819, 0.229174111, 0.239138736, 0.249103486, 0.259069278, 0.269034556, 0.278999264, 0.288964361, 0.298930097, 0.308895681, 0.318861444, 0.328827431, 0.33879225, 0.348757556, 0.358722694, 0.368687708, 0.378652708, 0.388617736, 0.398583708, 0.408549639, 0.418515222, 0.428480653, 0.438445556, 0.448410917, 0.458375917, 0.468340875, 0.478305917, 0.488271264, 0.498236861, 0.508202792, 0.518168208, 0.528133778, 0.538099, 0.548064708, 0.558030111, 0.567995389, 0.577960806, 0.587926153, 0.597890903, 0.607855625, 0.617820472, 0.627785861, 0.637751264, 0.647716333, 0.657681153, 0.667645903, 0.677610944, 0.687575472, 0.697540431, 0.707505528, 0.717470681, 0.727435806, 0.737400931, 0.747365569, 0.757329736, 0.767294347, 0.777259014, 0.787223708, 0.797187903, 0.807152625, 0.817117278, 0.827081931, 0.837046694, 0.847011042, 0.856975597, 0.866940542, 0.876905097, 0.886870125, 0.896835472, 0.906801028, 0.916766792, 0.926732597, 0.936698181, 0.946663361, 0.956628333, 0.966593764, 0.976559583, 0.986525917, 0.996491722, 1.006457944, 1.016423556] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:55.567" endtime="20201112 12:27:55.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.562" endtime="20201112 12:27:55.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.571" endtime="20201112 12:27:55.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.574" endtime="20201112 12:27:55.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.573" endtime="20201112 12:27:55.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.570" endtime="20201112 12:27:55.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.009" endtime="20201112 12:27:55.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.874" endtime="20201112 12:27:55.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.873" endtime="20201112 12:27:55.601"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:55.603" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.611" endtime="20201112 12:27:57.727"></status>
</kw>
<msg timestamp="20201112 12:27:57.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15831205, 'wakeups': [15841356, 15851351, 15861351, 15871351, 15881351...</msg>
<status status="PASS" starttime="20201112 12:27:55.610" endtime="20201112 12:27:57.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.731" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15831205, 'wakeups': [15841356, 15851351, 15861351, 15871351, 15881351...</msg>
<status status="PASS" starttime="20201112 12:27:57.729" endtime="20201112 12:27:57.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.732" endtime="20201112 12:27:57.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.607" endtime="20201112 12:27:57.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.605" endtime="20201112 12:27:57.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.737" level="INFO">${RESULT} = {'wakeups': [15841356, 15851351, 15861351, 15871351, 15881351, 15891351, 15901351, 15911351, 15921351, 15931351, 15941351, 15951351, 15961351, 15971351, 15981351, 15991351, 16001351, 16011351, 1602135...</msg>
<status status="PASS" starttime="20201112 12:27:57.735" endtime="20201112 12:27:57.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.741" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:57.740" endtime="20201112 12:27:57.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.743" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:57.742" endtime="20201112 12:27:57.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.738" endtime="20201112 12:27:57.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.748" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:57.747" endtime="20201112 12:27:57.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.750" level="INFO">VALUE: 15831205</msg>
<status status="PASS" starttime="20201112 12:27:57.749" endtime="20201112 12:27:57.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.744" endtime="20201112 12:27:57.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.755" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:57.754" endtime="20201112 12:27:57.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.758" level="INFO">VALUE: [15841356, 15851351, 15861351, 15871351, 15881351, 15891351, 15901351, 15911351, 15921351, 15931351, 15941351, 15951351, 15961351, 15971351, 15981351, 15991351, 16001351, 16011351, 16021351, 16031351, 16041351, 16051351, 16061351, 16071351, 16081351, 16091351, 16101351, 16111351, 16121351, 16131351, 16141351, 16151351, 16161351, 16171351, 16181351, 16191351, 16201351, 16211351, 16221351, 16231351, 16241351, 16251351, 16261351, 16271351, 16281351, 16291351, 16301351, 16311351, 16321351, 16331351, 16341351, 16351351, 16361351, 16371351, 16381351, 16391351, 16401351, 16411351, 16421351, 16431351, 16441351, 16451351, 16461351, 16471351, 16481351, 16491351, 16501351, 16511351, 16521351, 16531351, 16541351, 16551351, 16561351, 16571351, 16581351, 16591351, 16601351, 16611351, 16621351, 16631351, 16641351, 16651351, 16661351, 16671351, 16681351, 16691351, 16701351, 16711351, 16721351, 16731351, 16741351, 16751351, 16761351, 16771351, 16781351, 16791351, 16801351, 16811351, 16821351, 16831351]</msg>
<status status="PASS" starttime="20201112 12:27:57.757" endtime="20201112 12:27:57.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.751" endtime="20201112 12:27:57.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.765" endtime="20201112 12:27:58.056"></status>
</kw>
<msg timestamp="20201112 12:27:58.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027431125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037547681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.763" endtime="20201112 12:27:58.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027431125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037547681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.060" endtime="20201112 12:27:58.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.068" endtime="20201112 12:27:58.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.761" endtime="20201112 12:27:58.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.759" endtime="20201112 12:27:58.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.093" level="INFO">${RESULT} = {'diff': [0, 0.010116555999999999, 0.00996093, 0.009966375, 0.009966542000000002, 0.009966138999999999, 0.009966264000000002, 0.009966249999999996, 0.009966512999999996, 0.009966806000000009, 0.009966...</msg>
<status status="PASS" starttime="20201112 12:27:58.071" endtime="20201112 12:27:58.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.098" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:58.097" endtime="20201112 12:27:58.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.100" level="INFO">VALUE: 0.027431125</msg>
<status status="PASS" starttime="20201112 12:27:58.099" endtime="20201112 12:27:58.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.094" endtime="20201112 12:27:58.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.105" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:58.104" endtime="20201112 12:27:58.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.107" level="INFO">VALUE: [0.037547681, 0.047508611, 0.057474986, 0.067441528, 0.077407667, 0.087373931, 0.097340181, 0.107306694, 0.1172735, 0.127240361, 0.137207125, 0.147173903, 0.157140667, 0.167107347, 0.177074306, 0.187041069, 0.197007986, 0.206975319, 0.216942194, 0.226908806, 0.236875153, 0.246842028, 0.256809111, 0.266775625, 0.276742236, 0.286708528, 0.29667475, 0.306640597, 0.316606667, 0.326573125, 0.336539944, 0.346506153, 0.356472861, 0.366438847, 0.376404597, 0.386370667, 0.396336722, 0.406302903, 0.416268986, 0.426235458, 0.436202097, 0.446169028, 0.456135875, 0.466102847, 0.476069694, 0.486036389, 0.496002875, 0.505969125, 0.515935583, 0.525902292, 0.535869458, 0.545836028, 0.555802611, 0.565768875, 0.575734861, 0.585701111, 0.595667292, 0.60563325, 0.615599417, 0.625565764, 0.635531833, 0.645497667, 0.655463375, 0.665428486, 0.675394375, 0.685360347, 0.695325889, 0.705291944, 0.715257444, 0.725223194, 0.735188861, 0.745155583, 0.755122014, 0.765088083, 0.775054306, 0.785020194, 0.794985986, 0.804951889, 0.814917569, 0.824882722, 0.834848597, 0.844813889, 0.854779375, 0.864744556, 0.874710069, 0.884675069, 0.894640458, 0.904605944, 0.914571264, 0.924536653, 0.9345025, 0.944467431, 0.954433347, 0.964398931, 0.974364875, 0.984331056, 0.994296889, 1.004262306, 1.014227361, 1.024192736] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:58.106" endtime="20201112 12:27:58.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.101" endtime="20201112 12:27:58.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.111" endtime="20201112 12:27:58.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.115" endtime="20201112 12:27:58.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.113" endtime="20201112 12:27:58.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.109" endtime="20201112 12:27:58.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.604" endtime="20201112 12:27:58.135"></status>
</kw>
<msg timestamp="20201112 12:27:58.135" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.143" endtime="20201112 12:28:00.259"></status>
</kw>
<msg timestamp="20201112 12:28:00.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18372299, 'wakeups': [18382449, 18392445, 18402445, 18412445, 18422445...</msg>
<status status="PASS" starttime="20201112 12:27:58.142" endtime="20201112 12:28:00.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.263" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18372299, 'wakeups': [18382449, 18392445, 18402445, 18412445, 18422445...</msg>
<status status="PASS" starttime="20201112 12:28:00.261" endtime="20201112 12:28:00.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.264" endtime="20201112 12:28:00.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.139" endtime="20201112 12:28:00.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.137" endtime="20201112 12:28:00.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.269" level="INFO">${RESULT} = {'wakeups': [18382449, 18392445, 18402445, 18412445, 18422445, 18432445, 18442445, 18452445, 18462445, 18472445, 18482445, 18492445, 18502445, 18512445, 18522445, 18532445, 18542445, 18552445, 1856244...</msg>
<status status="PASS" starttime="20201112 12:28:00.267" endtime="20201112 12:28:00.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.273" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:00.272" endtime="20201112 12:28:00.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.275" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:00.274" endtime="20201112 12:28:00.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.270" endtime="20201112 12:28:00.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.280" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:00.279" endtime="20201112 12:28:00.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.282" level="INFO">VALUE: 18372299</msg>
<status status="PASS" starttime="20201112 12:28:00.281" endtime="20201112 12:28:00.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.277" endtime="20201112 12:28:00.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.287" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:00.286" endtime="20201112 12:28:00.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.289" level="INFO">VALUE: [18382449, 18392445, 18402445, 18412445, 18422445, 18432445, 18442445, 18452445, 18462445, 18472445, 18482445, 18492445, 18502445, 18512445, 18522445, 18532445, 18542445, 18552445, 18562445, 18572445, 18582445, 18592445, 18602445, 18612445, 18622445, 18632445, 18642445, 18652445, 18662445, 18672445, 18682445, 18692445, 18702445, 18712445, 18722445, 18732445, 18742445, 18752445, 18762445, 18772445, 18782445, 18792445, 18802445, 18812445, 18822445, 18832445, 18842445, 18852445, 18862445, 18872445, 18882445, 18892445, 18902445, 18912445, 18922445, 18932445, 18942445, 18952445, 18962445, 18972445, 18982445, 18992445, 19002445, 19012445, 19022445, 19032445, 19042445, 19052445, 19062445, 19072445, 19082445, 19092445, 19102445, 19112445, 19122445, 19132445, 19142445, 19152445, 19162445, 19172445, 19182445, 19192445, 19202445, 19212445, 19222445, 19232445, 19242445, 19252445, 19262445, 19272445, 19282445, 19292445, 19302445, 19312445, 19322445, 19332445, 19342445, 19352445, 19362445, 19372445]</msg>
<status status="PASS" starttime="20201112 12:28:00.288" endtime="20201112 12:28:00.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.284" endtime="20201112 12:28:00.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.297" endtime="20201112 12:28:00.590"></status>
</kw>
<msg timestamp="20201112 12:28:00.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029719306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.295" endtime="20201112 12:28:00.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029719306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.593" endtime="20201112 12:28:00.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.601" endtime="20201112 12:28:00.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.292" endtime="20201112 12:28:00.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.291" endtime="20201112 12:28:00.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.627" level="INFO">${RESULT} = {'diff': [0, 0.010115848, 0.009961861000000002, 0.009966485999999997, 0.009966069000000001, 0.009966222000000004, 0.009966166999999998, 0.009965985999999996, 0.009966277999999995, 0.009965889000000006...</msg>
<status status="PASS" starttime="20201112 12:28:00.604" endtime="20201112 12:28:00.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.636" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:00.635" endtime="20201112 12:28:00.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.638" level="INFO">VALUE: 0.019603458</msg>
<status status="PASS" starttime="20201112 12:28:00.638" endtime="20201112 12:28:00.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.633" endtime="20201112 12:28:00.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.644" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:00.643" endtime="20201112 12:28:00.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.646" level="INFO">VALUE: [0.029719306, 0.039681167, 0.049647653, 0.059613722, 0.069579944, 0.079546111, 0.089512097, 0.099478375, 0.109444264, 0.119410181, 0.129376194, 0.139342417, 0.149308972, 0.159275542, 0.169241444, 0.179207875, 0.189174431, 0.199140639, 0.209107653, 0.2190745, 0.229041569, 0.239008708, 0.248975875, 0.258943333, 0.268910639, 0.278877764, 0.288844514, 0.298811264, 0.308777181, 0.318743278, 0.328709208, 0.338675542, 0.348641875, 0.358608139, 0.368574125, 0.378540778, 0.388507208, 0.398473625, 0.408439806, 0.418405444, 0.428371181, 0.438337625, 0.448304083, 0.458270417, 0.468236625, 0.478202972, 0.488169819, 0.498136056, 0.508101903, 0.518068472, 0.528034958, 0.538001083, 0.547967472, 0.55793325, 0.567899625, 0.577866014, 0.587832069, 0.597798528, 0.607764861, 0.617730653, 0.627697, 0.637663611, 0.647629944, 0.657596014, 0.667561111, 0.677527042, 0.687493583, 0.697460167, 0.707426069, 0.717392028, 0.727358056, 0.737324236, 0.747290222, 0.757256653, 0.767223069, 0.7771895, 0.787155944, 0.797122528, 0.807088958, 0.817055819, 0.82702225, 0.836988875, 0.846955181, 0.856921681, 0.866887944, 0.876853917, 0.886820542, 0.896787528, 0.906754208, 0.916721194, 0.926688333, 0.936655292, 0.946622722, 0.956590347, 0.966558153, 0.976525722, 0.986493083, 0.996460708, 1.006427417, 1.016394431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:00.645" endtime="20201112 12:28:00.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.640" endtime="20201112 12:28:00.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.649" endtime="20201112 12:28:00.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.652" endtime="20201112 12:28:00.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.651" endtime="20201112 12:28:00.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.647" endtime="20201112 12:28:00.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.136" endtime="20201112 12:28:00.673"></status>
</kw>
<msg timestamp="20201112 12:28:00.673" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.681" endtime="20201112 12:28:02.800"></status>
</kw>
<msg timestamp="20201112 12:28:02.801" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20918949, 'wakeups': [20929099, 20939095, 20949095, 20959095, 20969095...</msg>
<status status="PASS" starttime="20201112 12:28:00.680" endtime="20201112 12:28:02.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.807" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20918949, 'wakeups': [20929099, 20939095, 20949095, 20959095, 20969095...</msg>
<status status="PASS" starttime="20201112 12:28:02.803" endtime="20201112 12:28:02.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.810" endtime="20201112 12:28:02.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.677" endtime="20201112 12:28:02.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.675" endtime="20201112 12:28:02.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.819" level="INFO">${RESULT} = {'wakeups': [20929099, 20939095, 20949095, 20959095, 20969095, 20979095, 20989095, 20999095, 21009095, 21019095, 21029095, 21039095, 21049095, 21059095, 21069095, 21079095, 21089095, 21099095, 2110909...</msg>
<status status="PASS" starttime="20201112 12:28:02.817" endtime="20201112 12:28:02.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.823" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:02.822" endtime="20201112 12:28:02.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.825" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:02.824" endtime="20201112 12:28:02.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.820" endtime="20201112 12:28:02.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.831" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:02.830" endtime="20201112 12:28:02.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.833" level="INFO">VALUE: 20918949</msg>
<status status="PASS" starttime="20201112 12:28:02.832" endtime="20201112 12:28:02.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.827" endtime="20201112 12:28:02.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.837" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:02.836" endtime="20201112 12:28:02.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.840" level="INFO">VALUE: [20929099, 20939095, 20949095, 20959095, 20969095, 20979095, 20989095, 20999095, 21009095, 21019095, 21029095, 21039095, 21049095, 21059095, 21069095, 21079095, 21089095, 21099095, 21109095, 21119095, 21129095, 21139095, 21149095, 21159095, 21169095, 21179095, 21189095, 21199095, 21209095, 21219095, 21229095, 21239095, 21249095, 21259095, 21269095, 21279095, 21289095, 21299095, 21309095, 21319095, 21329095, 21339095, 21349095, 21359095, 21369095, 21379095, 21389095, 21399095, 21409095, 21419095, 21429095, 21439095, 21449095, 21459095, 21469095, 21479095, 21489095, 21499095, 21509095, 21519095, 21529095, 21539095, 21549095, 21559095, 21569095, 21579095, 21589095, 21599095, 21609095, 21619095, 21629095, 21639095, 21649095, 21659095, 21669095, 21679095, 21689095, 21699095, 21709095, 21719095, 21729095, 21739095, 21749095, 21759095, 21769095, 21779095, 21789095, 21799095, 21809095, 21819095, 21829095, 21839095, 21849095, 21859095, 21869095, 21879095, 21889095, 21899095, 21909095, 21919095]</msg>
<status status="PASS" starttime="20201112 12:28:02.838" endtime="20201112 12:28:02.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.834" endtime="20201112 12:28:02.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.847" endtime="20201112 12:28:03.140"></status>
</kw>
<msg timestamp="20201112 12:28:03.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029893417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.845" endtime="20201112 12:28:03.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029893417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.143" endtime="20201112 12:28:03.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.151" endtime="20201112 12:28:03.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.843" endtime="20201112 12:28:03.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.841" endtime="20201112 12:28:03.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.177" level="INFO">${RESULT} = {'diff': [0, 0.010115111, 0.009962083000000004, 0.009966111, 0.00996607, 0.009966151999999999, 0.009965874999999999, 0.009965653000000005, 0.009965792000000001, 0.009966027999999988, 0.009965666000000...</msg>
<status status="PASS" starttime="20201112 12:28:03.154" endtime="20201112 12:28:03.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.182" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:03.181" endtime="20201112 12:28:03.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.184" level="INFO">VALUE: 0.019778306</msg>
<status status="PASS" starttime="20201112 12:28:03.183" endtime="20201112 12:28:03.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.178" endtime="20201112 12:28:03.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.189" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:03.188" endtime="20201112 12:28:03.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.191" level="INFO">VALUE: [0.029893417, 0.0398555, 0.049821611, 0.059787681, 0.069753833, 0.079719708, 0.089685361, 0.099651153, 0.109617181, 0.119582847, 0.129548972, 0.139514861, 0.149480681, 0.159446569, 0.169412139, 0.179377792, 0.189343778, 0.199309431, 0.209275375, 0.219241, 0.229206806, 0.239172597, 0.24913825, 0.259103375, 0.269069486, 0.279035111, 0.289000528, 0.298966542, 0.308932569, 0.318898389, 0.328864194, 0.338830583, 0.348797556, 0.358764208, 0.368730292, 0.378695917, 0.388662819, 0.398629069, 0.408595889, 0.418562958, 0.428529833, 0.438496569, 0.448463139, 0.458430056, 0.468396194, 0.478362639, 0.488329111, 0.498296097, 0.508262486, 0.518229903, 0.528196653, 0.538163972, 0.548131403, 0.558098139, 0.568065361, 0.578032125, 0.587999542, 0.597966944, 0.607934375, 0.617901292, 0.627868528, 0.637835486, 0.64780225, 0.657769389, 0.667737111, 0.677704153, 0.687670722, 0.697638181, 0.707605347, 0.71757275, 0.727539458, 0.737505944, 0.747472431, 0.757438667, 0.767405194, 0.777371931, 0.787338708, 0.797304958, 0.807271347, 0.817237375, 0.827203347, 0.837169403, 0.84713575, 0.857101611, 0.867067931, 0.877034389, 0.887001583, 0.896968986, 0.906936153, 0.916903028, 0.926870139, 0.936836375, 0.946802861, 0.956770153, 0.966737458, 0.976705208, 0.986672222, 0.996638708, 1.006604875, 1.016571611] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:03.190" endtime="20201112 12:28:03.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.185" endtime="20201112 12:28:03.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.194" endtime="20201112 12:28:03.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.198" endtime="20201112 12:28:03.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.196" endtime="20201112 12:28:03.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.193" endtime="20201112 12:28:03.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.674" endtime="20201112 12:28:03.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.602" endtime="20201112 12:28:03.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.601" endtime="20201112 12:28:03.219"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:03.222" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.229" endtime="20201112 12:28:05.352"></status>
</kw>
<msg timestamp="20201112 12:28:05.353" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23475974, 'wakeups': [23486181, 23496175, 23506175, 23516175, 23526175...</msg>
<status status="PASS" starttime="20201112 12:28:03.228" endtime="20201112 12:28:05.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.359" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23475974, 'wakeups': [23486181, 23496175, 23506175, 23516175, 23526175...</msg>
<status status="PASS" starttime="20201112 12:28:05.355" endtime="20201112 12:28:05.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.361" endtime="20201112 12:28:05.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.225" endtime="20201112 12:28:05.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.224" endtime="20201112 12:28:05.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.368" level="INFO">${RESULT} = {'wakeups': [23486181, 23496175, 23506175, 23516175, 23526175, 23536175, 23546175, 23556175, 23566175, 23576175, 23586176, 23596175, 23606175, 23616175, 23626175, 23636175, 23646175, 23656175, 2366617...</msg>
<status status="PASS" starttime="20201112 12:28:05.366" endtime="20201112 12:28:05.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.372" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:05.371" endtime="20201112 12:28:05.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.374" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:05.373" endtime="20201112 12:28:05.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.369" endtime="20201112 12:28:05.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.380" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:05.378" endtime="20201112 12:28:05.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.382" level="INFO">VALUE: 23475974</msg>
<status status="PASS" starttime="20201112 12:28:05.381" endtime="20201112 12:28:05.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.375" endtime="20201112 12:28:05.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.387" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:05.386" endtime="20201112 12:28:05.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.389" level="INFO">VALUE: [23486181, 23496175, 23506175, 23516175, 23526175, 23536175, 23546175, 23556175, 23566175, 23576175, 23586176, 23596175, 23606175, 23616175, 23626175, 23636175, 23646175, 23656175, 23666175, 23676175, 23686175, 23696175, 23706175, 23716175, 23726176, 23736175, 23746175, 23756175, 23766175, 23776175, 23786175, 23796175, 23806175, 23816175, 23826175, 23836175, 23846175, 23856175, 23866175, 23876175, 23886175, 23896175, 23906175, 23916175, 23926175, 23936175, 23946175, 23956175, 23966175, 23976175, 23986175, 23996175, 24006175, 24016175, 24026175, 24036175, 24046175, 24056175, 24066176, 24076175, 24086175, 24096175, 24106175, 24116175, 24126175, 24136175, 24146175, 24156175, 24166175, 24176176, 24186175, 24196175, 24206175, 24216175, 24226175, 24236175, 24246175, 24256175, 24266175, 24276175, 24286175, 24296175, 24306175, 24316175, 24326175, 24336175, 24346175, 24356175, 24366175, 24376175, 24386175, 24396175, 24406175, 24416175, 24426176, 24436176, 24446175, 24456175, 24466175, 24476175]</msg>
<status status="PASS" starttime="20201112 12:28:05.388" endtime="20201112 12:28:05.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.383" endtime="20201112 12:28:05.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.397" endtime="20201112 12:28:05.688"></status>
</kw>
<msg timestamp="20201112 12:28:05.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032538319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:05.395" endtime="20201112 12:28:05.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032538319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:05.692" endtime="20201112 12:28:05.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.699" endtime="20201112 12:28:05.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.393" endtime="20201112 12:28:05.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.391" endtime="20201112 12:28:05.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.726" level="INFO">${RESULT} = {'diff': [0, 0.010172069000000002, 0.009961277999999997, 0.009965806, 0.009966125, 0.009966416000000006, 0.00996699999999999, 0.009966556000000001, 0.009965402999999998, 0.00996625000000001, 0.0099660...</msg>
<status status="PASS" starttime="20201112 12:28:05.702" endtime="20201112 12:28:05.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.730" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:05.729" endtime="20201112 12:28:05.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.732" level="INFO">VALUE: 0.02236625</msg>
<status status="PASS" starttime="20201112 12:28:05.731" endtime="20201112 12:28:05.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.727" endtime="20201112 12:28:05.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.738" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:05.736" endtime="20201112 12:28:05.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.740" level="INFO">VALUE: [0.032538319, 0.042499597, 0.052465403, 0.062431528, 0.072397944, 0.082364944, 0.0923315, 0.102296903, 0.112263153, 0.122229222, 0.132195319, 0.142161347, 0.152126792, 0.162092597, 0.172058736, 0.182025111, 0.191992111, 0.201958208, 0.211923778, 0.221889958, 0.231855458, 0.241820917, 0.251785792, 0.261750972, 0.271716931, 0.281681806, 0.291646361, 0.301611486, 0.311575792, 0.321541139, 0.331506431, 0.341472278, 0.351437528, 0.361402403, 0.371367514, 0.38133225, 0.391296431, 0.401261069, 0.411226139, 0.421191542, 0.431156986, 0.441122208, 0.451086556, 0.461050917, 0.471014875, 0.480978583, 0.490942514, 0.500906903, 0.51087125, 0.520835306, 0.530799056, 0.540763861, 0.550727986, 0.560692278, 0.570656694, 0.580620111, 0.590584819, 0.600549528, 0.610514014, 0.620477528, 0.630441556, 0.640405764, 0.650370292, 0.660334458, 0.670299694, 0.680265042, 0.690229875, 0.700194319, 0.710158236, 0.720122833, 0.730087528, 0.740052083, 0.750016417, 0.759980042, 0.76994475, 0.779909264, 0.789873486, 0.799838125, 0.809803097, 0.819768056, 0.829733236, 0.839697375, 0.849662167, 0.859626903, 0.869591917, 0.879556903, 0.889522056, 0.899486792, 0.909451833, 0.919416806, 0.929382403, 0.939346625, 0.949311667, 0.959276875, 0.969242583, 0.979207875, 0.98917275, 0.999137139, 1.009101931, 1.019067181] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:05.739" endtime="20201112 12:28:05.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.733" endtime="20201112 12:28:05.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.743" endtime="20201112 12:28:05.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.747" endtime="20201112 12:28:05.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.745" endtime="20201112 12:28:05.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.742" endtime="20201112 12:28:05.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.222" endtime="20201112 12:28:05.768"></status>
</kw>
<msg timestamp="20201112 12:28:05.768" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.782" endtime="20201112 12:28:07.886"></status>
</kw>
<msg timestamp="20201112 12:28:07.887" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26037974, 'wakeups': [26048181, 26058175, 26068175, 26078175, 26088175...</msg>
<status status="PASS" starttime="20201112 12:28:05.774" endtime="20201112 12:28:07.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.889" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26037974, 'wakeups': [26048181, 26058175, 26068175, 26078175, 26088175...</msg>
<status status="PASS" starttime="20201112 12:28:07.888" endtime="20201112 12:28:07.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.890" endtime="20201112 12:28:07.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.772" endtime="20201112 12:28:07.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.770" endtime="20201112 12:28:07.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.896" level="INFO">${RESULT} = {'wakeups': [26048181, 26058175, 26068175, 26078175, 26088175, 26098175, 26108175, 26118175, 26128176, 26138175, 26148175, 26158175, 26168175, 26178175, 26188175, 26198175, 26208175, 26218175, 2622817...</msg>
<status status="PASS" starttime="20201112 12:28:07.894" endtime="20201112 12:28:07.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.900" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:07.899" endtime="20201112 12:28:07.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.902" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:07.901" endtime="20201112 12:28:07.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.897" endtime="20201112 12:28:07.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.907" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:07.905" endtime="20201112 12:28:07.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.909" level="INFO">VALUE: 26037974</msg>
<status status="PASS" starttime="20201112 12:28:07.908" endtime="20201112 12:28:07.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.903" endtime="20201112 12:28:07.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.913" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:07.912" endtime="20201112 12:28:07.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.915" level="INFO">VALUE: [26048181, 26058175, 26068175, 26078175, 26088175, 26098175, 26108175, 26118175, 26128176, 26138175, 26148175, 26158175, 26168175, 26178175, 26188175, 26198175, 26208175, 26218175, 26228175, 26238175, 26248175, 26258175, 26268175, 26278175, 26288175, 26298175, 26308175, 26318175, 26328175, 26338176, 26348175, 26358175, 26368176, 26378175, 26388175, 26398175, 26408175, 26418176, 26428175, 26438175, 26448175, 26458175, 26468175, 26478175, 26488175, 26498175, 26508175, 26518175, 26528175, 26538175, 26548175, 26558175, 26568175, 26578175, 26588175, 26598175, 26608175, 26618175, 26628175, 26638175, 26648175, 26658176, 26668175, 26678175, 26688175, 26698175, 26708175, 26718175, 26728175, 26738175, 26748175, 26758175, 26768175, 26778175, 26788175, 26798175, 26808175, 26818175, 26828175, 26838175, 26848175, 26858175, 26868175, 26878175, 26888175, 26898175, 26908176, 26918175, 26928175, 26938175, 26948175, 26958175, 26968175, 26978175, 26988176, 26998175, 27008175, 27018175, 27028175, 27038175]</msg>
<status status="PASS" starttime="20201112 12:28:07.914" endtime="20201112 12:28:07.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.910" endtime="20201112 12:28:07.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.923" endtime="20201112 12:28:08.215"></status>
</kw>
<msg timestamp="20201112 12:28:08.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026284083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036454472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.921" endtime="20201112 12:28:08.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026284083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036454472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.219" endtime="20201112 12:28:08.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.226" endtime="20201112 12:28:08.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.919" endtime="20201112 12:28:08.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.917" endtime="20201112 12:28:08.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.252" level="INFO">${RESULT} = {'diff': [0, 0.010170389000000002, 0.009959056, 0.009964819, 0.009964763999999994, 0.00996575000000001, 0.009964721999999995, 0.009965541999999994, 0.009965083, 0.009965083999999999, 0.009965040999999...</msg>
<status status="PASS" starttime="20201112 12:28:08.230" endtime="20201112 12:28:08.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.257" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:08.256" endtime="20201112 12:28:08.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.259" level="INFO">VALUE: 0.026284083</msg>
<status status="PASS" starttime="20201112 12:28:08.258" endtime="20201112 12:28:08.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.253" endtime="20201112 12:28:08.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.264" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:08.263" endtime="20201112 12:28:08.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.266" level="INFO">VALUE: [0.036454472, 0.046413528, 0.056378347, 0.066343111, 0.076308861, 0.086273583, 0.096239125, 0.106204208, 0.116169292, 0.126134333, 0.136099556, 0.146065278, 0.156030639, 0.165996347, 0.175962125, 0.185927167, 0.195891972, 0.205857653, 0.215823431, 0.225789278, 0.235755139, 0.245720625, 0.255686042, 0.265651597, 0.275617431, 0.285582833, 0.295548528, 0.305514556, 0.315480083, 0.325446583, 0.335412389, 0.345377639, 0.355343389, 0.365307944, 0.375272472, 0.385236583, 0.395201333, 0.405166764, 0.415131347, 0.425096278, 0.435061583, 0.445027083, 0.454991778, 0.464957056, 0.474921708, 0.484886528, 0.494851458, 0.504816028, 0.514780625, 0.524744764, 0.534709403, 0.544675139, 0.554640194, 0.564605278, 0.574569569, 0.584534875, 0.594499917, 0.604465083, 0.614429875, 0.624394153, 0.634359847, 0.644325764, 0.654290542, 0.6642555, 0.674220944, 0.684186514, 0.694152083, 0.704117931, 0.714083653, 0.724049028, 0.734014, 0.743979208, 0.753944611, 0.763909972, 0.773874944, 0.783839569, 0.793803875, 0.803767903, 0.81373275, 0.823698056, 0.833663194, 0.843628153, 0.853593306, 0.863558611, 0.873523611, 0.883488694, 0.89345425, 0.903419528, 0.913384361, 0.923349681, 0.933314083, 0.943278986, 0.953243583, 0.963208028, 0.973173944, 0.98313875, 0.993103111, 1.003067583, 1.013031694, 1.022996333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:08.265" endtime="20201112 12:28:08.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.260" endtime="20201112 12:28:08.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.269" endtime="20201112 12:28:08.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.273" endtime="20201112 12:28:08.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.271" endtime="20201112 12:28:08.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.268" endtime="20201112 12:28:08.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.768" endtime="20201112 12:28:08.293"></status>
</kw>
<msg timestamp="20201112 12:28:08.294" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.302" endtime="20201112 12:28:10.424"></status>
</kw>
<msg timestamp="20201112 12:28:10.425" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28567159, 'wakeups': [28577366, 28587360, 28597360, 28607360, 28617360...</msg>
<status status="PASS" starttime="20201112 12:28:08.300" endtime="20201112 12:28:10.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.429" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28567159, 'wakeups': [28577366, 28587360, 28597360, 28607360, 28617360...</msg>
<status status="PASS" starttime="20201112 12:28:10.428" endtime="20201112 12:28:10.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.431" endtime="20201112 12:28:10.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.297" endtime="20201112 12:28:10.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.295" endtime="20201112 12:28:10.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.436" level="INFO">${RESULT} = {'wakeups': [28577366, 28587360, 28597360, 28607360, 28617360, 28627360, 28637360, 28647360, 28657360, 28667360, 28677361, 28687360, 28697360, 28707360, 28717360, 28727360, 28737360, 28747360, 2875736...</msg>
<status status="PASS" starttime="20201112 12:28:10.434" endtime="20201112 12:28:10.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.440" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:10.439" endtime="20201112 12:28:10.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.442" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:10.441" endtime="20201112 12:28:10.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.437" endtime="20201112 12:28:10.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.447" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:10.446" endtime="20201112 12:28:10.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.449" level="INFO">VALUE: 28567159</msg>
<status status="PASS" starttime="20201112 12:28:10.448" endtime="20201112 12:28:10.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.444" endtime="20201112 12:28:10.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.454" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:10.453" endtime="20201112 12:28:10.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.456" level="INFO">VALUE: [28577366, 28587360, 28597360, 28607360, 28617360, 28627360, 28637360, 28647360, 28657360, 28667360, 28677361, 28687360, 28697360, 28707360, 28717360, 28727360, 28737360, 28747360, 28757360, 28767360, 28777360, 28787360, 28797360, 28807360, 28817360, 28827360, 28837360, 28847360, 28857360, 28867360, 28877360, 28887360, 28897360, 28907361, 28917361, 28927360, 28937360, 28947360, 28957361, 28967360, 28977360, 28987360, 28997360, 29007360, 29017360, 29027360, 29037360, 29047360, 29057360, 29067360, 29077360, 29087360, 29097360, 29107360, 29117361, 29127360, 29137360, 29147360, 29157360, 29167360, 29177361, 29187360, 29197360, 29207360, 29217360, 29227360, 29237361, 29247360, 29257360, 29267360, 29277360, 29287360, 29297360, 29307360, 29317360, 29327360, 29337360, 29347360, 29357360, 29367360, 29377360, 29387361, 29397360, 29407360, 29417360, 29427360, 29437360, 29447360, 29457360, 29467360, 29477360, 29487360, 29497360, 29507360, 29517360, 29527360, 29537360, 29547360, 29557360, 29567360]</msg>
<status status="PASS" starttime="20201112 12:28:10.455" endtime="20201112 12:28:10.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.450" endtime="20201112 12:28:10.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.463" endtime="20201112 12:28:10.755"></status>
</kw>
<msg timestamp="20201112 12:28:10.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030732167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.462" endtime="20201112 12:28:10.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030732167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.758" endtime="20201112 12:28:10.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.766" endtime="20201112 12:28:10.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.459" endtime="20201112 12:28:10.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.458" endtime="20201112 12:28:10.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.793" level="INFO">${RESULT} = {'diff': [0, 0.010170973, 0.009960027, 0.009964874999999998, 0.009965388999999998, 0.00996523600000001, 0.009965277999999994, 0.009965056, 0.009965083, 0.009965445000000003, 0.009965137999999998, 0.00...</msg>
<status status="PASS" starttime="20201112 12:28:10.769" endtime="20201112 12:28:10.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.798" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:10.796" endtime="20201112 12:28:10.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.799" level="INFO">VALUE: 0.020561194</msg>
<status status="PASS" starttime="20201112 12:28:10.799" endtime="20201112 12:28:10.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.794" endtime="20201112 12:28:10.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.805" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:10.804" endtime="20201112 12:28:10.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.811" level="INFO">VALUE: [0.030732167, 0.040692194, 0.050657069, 0.060622458, 0.070587694, 0.080552972, 0.090518028, 0.100483111, 0.110448556, 0.120413694, 0.130379431, 0.140344111, 0.150310153, 0.160275625, 0.170239903, 0.180204833, 0.190169708, 0.200135097, 0.210099472, 0.220065042, 0.230029528, 0.2399945, 0.249959306, 0.259924542, 0.269888875, 0.279853931, 0.289819014, 0.299783125, 0.309748083, 0.319711792, 0.329676653, 0.339640903, 0.349606306, 0.359571472, 0.369536653, 0.379501569, 0.389465417, 0.399430111, 0.4093945, 0.419358306, 0.429322333, 0.439286222, 0.449249958, 0.45921375, 0.4691775, 0.479141444, 0.489105486, 0.499069583, 0.509033319, 0.518997278, 0.528961264, 0.538925028, 0.548888958, 0.558852056, 0.568816944, 0.578780431, 0.588744, 0.598707514, 0.608671236, 0.618635222, 0.628599653, 0.638563528, 0.648526903, 0.658490528, 0.668454819, 0.678418306, 0.688382389, 0.698346514, 0.708310014, 0.718274056, 0.728238389, 0.738202667, 0.748166819, 0.758130736, 0.768095111, 0.778059097, 0.788023403, 0.797987264, 0.807951236, 0.817915236, 0.827879472, 0.837843931, 0.847808111, 0.857772792, 0.867736167, 0.877700778, 0.887664917, 0.897629333, 0.907592111, 0.917556333, 0.927520403, 0.937484778, 0.947449014, 0.957413139, 0.967376722, 0.977340375, 0.987304514, 0.997269028, 1.007233722, 1.017198333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:10.806" endtime="20201112 12:28:10.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.801" endtime="20201112 12:28:10.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.814" endtime="20201112 12:28:10.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.818" endtime="20201112 12:28:10.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.816" endtime="20201112 12:28:10.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.813" endtime="20201112 12:28:10.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.294" endtime="20201112 12:28:10.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.220" endtime="20201112 12:28:10.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.219" endtime="20201112 12:28:10.839"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:10.841" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.849" endtime="20201112 12:28:12.953"></status>
</kw>
<msg timestamp="20201112 12:28:12.954" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31123431, 'wakeups': [31133699, 31143694, 31153694, 31163694, 31173694...</msg>
<status status="PASS" starttime="20201112 12:28:10.848" endtime="20201112 12:28:12.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.957" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31123431, 'wakeups': [31133699, 31143694, 31153694, 31163694, 31173694...</msg>
<status status="PASS" starttime="20201112 12:28:12.955" endtime="20201112 12:28:12.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.958" endtime="20201112 12:28:12.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.845" endtime="20201112 12:28:12.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.843" endtime="20201112 12:28:12.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.963" level="INFO">${RESULT} = {'wakeups': [31133699, 31143694, 31153694, 31163694, 31173694, 31183694, 31193694, 31203694, 31213694, 31223694, 31233694, 31243694, 31253694, 31263694, 31273694, 31283694, 31293694, 31303694, 3131369...</msg>
<status status="PASS" starttime="20201112 12:28:12.961" endtime="20201112 12:28:12.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.967" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:12.966" endtime="20201112 12:28:12.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.969" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:12.968" endtime="20201112 12:28:12.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.964" endtime="20201112 12:28:12.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.975" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:12.974" endtime="20201112 12:28:12.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.977" level="INFO">VALUE: 31123431</msg>
<status status="PASS" starttime="20201112 12:28:12.976" endtime="20201112 12:28:12.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.970" endtime="20201112 12:28:12.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.982" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:12.981" endtime="20201112 12:28:12.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.984" level="INFO">VALUE: [31133699, 31143694, 31153694, 31163694, 31173694, 31183694, 31193694, 31203694, 31213694, 31223694, 31233694, 31243694, 31253694, 31263694, 31273694, 31283694, 31293694, 31303694, 31313690, 31323689, 31333693, 31343690, 31353693, 31363694, 31373694, 31383694, 31393694, 31403694, 31413694, 31423694, 31433694, 31443694, 31453694, 31463694, 31473690, 31483693, 31493694, 31503694, 31513694, 31523694, 31533694, 31543694, 31553694, 31563694, 31573694, 31583694, 31593694, 31603694, 31613694, 31623694, 31633694, 31643694, 31653694, 31663694, 31673694, 31683694, 31693694, 31703694, 31713694, 31723694, 31733694, 31743694, 31753694, 31763694, 31773694, 31783694, 31793694, 31803694, 31813694, 31823694, 31833694, 31843694, 31853694, 31863694, 31873694, 31883694, 31893694, 31903694, 31913694, 31923694, 31933690, 31943693, 31953694, 31963694, 31973694, 31983694, 31993694, 32003694, 32013694, 32023694, 32033694, 32043690, 32053689, 32063693, 32073694, 32083694, 32093694, 32103694, 32113694, 32123694]</msg>
<status status="PASS" starttime="20201112 12:28:12.983" endtime="20201112 12:28:12.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.978" endtime="20201112 12:28:12.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.992" endtime="20201112 12:28:13.282"></status>
</kw>
<msg timestamp="20201112 12:28:13.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032642625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:12.990" endtime="20201112 12:28:13.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032642625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:13.291" endtime="20201112 12:28:13.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.298" endtime="20201112 12:28:13.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.988" endtime="20201112 12:28:13.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.986" endtime="20201112 12:28:13.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.324" level="INFO">${RESULT} = {'diff': [0, 0.010231625000000001, 0.009959999999999997, 0.009965444000000004, 0.009965374999999992, 0.009964945000000003, 0.009964917000000004, 0.009965374999999999, 0.009965388000000006, 0.009965237...</msg>
<status status="PASS" starttime="20201112 12:28:13.302" endtime="20201112 12:28:13.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.329" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:13.328" endtime="20201112 12:28:13.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.331" level="INFO">VALUE: 0.022411</msg>
<status status="PASS" starttime="20201112 12:28:13.330" endtime="20201112 12:28:13.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.325" endtime="20201112 12:28:13.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.337" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:13.335" endtime="20201112 12:28:13.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.339" level="INFO">VALUE: [0.032642625, 0.042602625, 0.052568069, 0.062533444, 0.072498389, 0.082463306, 0.092428681, 0.102394069, 0.112359306, 0.122324278, 0.132289361, 0.142254194, 0.152218222, 0.162183, 0.172147889, 0.182112278, 0.192077042, 0.202041556, 0.212002264, 0.221966222, 0.231934833, 0.241896042, 0.251864014, 0.261829778, 0.271794625, 0.281759806, 0.291725222, 0.30169075, 0.311656764, 0.321621778, 0.331587181, 0.341552389, 0.351517972, 0.361483486, 0.371444208, 0.381411583, 0.391377181, 0.401341153, 0.411305194, 0.421269819, 0.431234403, 0.441198333, 0.451163389, 0.461128042, 0.471093028, 0.481058417, 0.491023514, 0.500988542, 0.510953083, 0.520918014, 0.530882708, 0.540847319, 0.550811875, 0.560776694, 0.570742597, 0.580708236, 0.590673819, 0.600639431, 0.610604931, 0.620570625, 0.630536236, 0.64050175, 0.650466917, 0.660432375, 0.67039775, 0.680362972, 0.69032825, 0.700293972, 0.710259958, 0.720225583, 0.730190847, 0.740157125, 0.750123194, 0.760088819, 0.770053903, 0.780019278, 0.789984764, 0.799950278, 0.809915819, 0.819881375, 0.829842375, 0.839811222, 0.849778056, 0.859744014, 0.869709667, 0.879675694, 0.889641861, 0.899607514, 0.9095725, 0.919538278, 0.929503625, 0.939464403, 0.949428597, 0.959397542, 0.969363153, 0.979327319, 0.989291417, 0.999255542, 1.009220139, 1.019185194] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:13.338" endtime="20201112 12:28:13.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.332" endtime="20201112 12:28:13.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.342" endtime="20201112 12:28:13.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.346" endtime="20201112 12:28:13.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.345" endtime="20201112 12:28:13.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.341" endtime="20201112 12:28:13.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.842" endtime="20201112 12:28:13.367"></status>
</kw>
<msg timestamp="20201112 12:28:13.367" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.375" endtime="20201112 12:28:15.498"></status>
</kw>
<msg timestamp="20201112 12:28:15.499" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33658284, 'wakeups': [33668552, 33678547, 33688547, 33698547, 33708547...</msg>
<status status="PASS" starttime="20201112 12:28:13.373" endtime="20201112 12:28:15.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.505" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33658284, 'wakeups': [33668552, 33678547, 33688547, 33698547, 33708547...</msg>
<status status="PASS" starttime="20201112 12:28:15.501" endtime="20201112 12:28:15.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.507" endtime="20201112 12:28:15.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.371" endtime="20201112 12:28:15.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.369" endtime="20201112 12:28:15.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.518" level="INFO">${RESULT} = {'wakeups': [33668552, 33678547, 33688547, 33698547, 33708547, 33718547, 33728547, 33738547, 33748547, 33758547, 33768547, 33778547, 33788547, 33798543, 33808546, 33818547, 33828547, 33838547, 3384854...</msg>
<status status="PASS" starttime="20201112 12:28:15.514" endtime="20201112 12:28:15.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.526" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:15.524" endtime="20201112 12:28:15.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.530" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:15.528" endtime="20201112 12:28:15.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.519" endtime="20201112 12:28:15.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.539" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:15.538" endtime="20201112 12:28:15.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.541" level="INFO">VALUE: 33658284</msg>
<status status="PASS" starttime="20201112 12:28:15.540" endtime="20201112 12:28:15.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.533" endtime="20201112 12:28:15.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.546" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:15.545" endtime="20201112 12:28:15.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.548" level="INFO">VALUE: [33668552, 33678547, 33688547, 33698547, 33708547, 33718547, 33728547, 33738547, 33748547, 33758547, 33768547, 33778547, 33788547, 33798543, 33808546, 33818547, 33828547, 33838547, 33848547, 33858547, 33868547, 33878547, 33888547, 33898547, 33908547, 33918547, 33928547, 33938547, 33948547, 33958547, 33968547, 33978547, 33988543, 33998546, 34008547, 34018547, 34028547, 34038547, 34048547, 34058547, 34068547, 34078547, 34088547, 34098547, 34108547, 34118547, 34128547, 34138547, 34148547, 34158547, 34168547, 34178547, 34188547, 34198547, 34208547, 34218547, 34228547, 34238547, 34248547, 34258547, 34268547, 34278547, 34288547, 34298547, 34308547, 34318547, 34328547, 34338547, 34348547, 34358547, 34368547, 34378547, 34388547, 34398547, 34408547, 34418547, 34428547, 34438547, 34448547, 34458547, 34468547, 34478547, 34488547, 34498547, 34508547, 34518547, 34528547, 34538547, 34548547, 34558547, 34568547, 34578543, 34588546, 34598547, 34608547, 34618547, 34628547, 34638547, 34648547, 34658547]</msg>
<status status="PASS" starttime="20201112 12:28:15.547" endtime="20201112 12:28:15.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.542" endtime="20201112 12:28:15.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.557" endtime="20201112 12:28:15.848"></status>
</kw>
<msg timestamp="20201112 12:28:15.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029848986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.554" endtime="20201112 12:28:15.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029848986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.852" endtime="20201112 12:28:15.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.860" endtime="20201112 12:28:15.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.551" endtime="20201112 12:28:15.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.550" endtime="20201112 12:28:15.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.886" level="INFO">${RESULT} = {'diff': [0, 0.010232722, 0.009960556000000002, 0.009964943999999996, 0.009965930999999997, 0.009966014000000002, 0.009965708000000004, 0.009965528000000001, 0.00996494399999999, 0.009965625000000006,...</msg>
<status status="PASS" starttime="20201112 12:28:15.863" endtime="20201112 12:28:15.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.890" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:15.889" endtime="20201112 12:28:15.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.892" level="INFO">VALUE: 0.019616264</msg>
<status status="PASS" starttime="20201112 12:28:15.891" endtime="20201112 12:28:15.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.887" endtime="20201112 12:28:15.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.898" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:15.897" endtime="20201112 12:28:15.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.900" level="INFO">VALUE: [0.029848986, 0.039809542, 0.049774486, 0.059740417, 0.069706431, 0.079672139, 0.089637667, 0.099602611, 0.109568236, 0.119533917, 0.129498972, 0.139464417, 0.149429764, 0.159390806, 0.169358819, 0.179324653, 0.189289167, 0.199253861, 0.209218819, 0.219184125, 0.229148875, 0.23911375, 0.249078667, 0.259044458, 0.269009542, 0.278974111, 0.288938542, 0.298903097, 0.308868264, 0.318833667, 0.328799208, 0.338764333, 0.348725097, 0.358692792, 0.368658514, 0.378623028, 0.388588083, 0.398553375, 0.408518667, 0.418483333, 0.428448097, 0.438413806, 0.448379403, 0.458344958, 0.468309903, 0.478275139, 0.488240097, 0.498205986, 0.508172583, 0.518138486, 0.528104139, 0.538069569, 0.548034792, 0.558001097, 0.567967181, 0.577932458, 0.587898069, 0.597864153, 0.607829806, 0.617795264, 0.627761, 0.637726736, 0.647692722, 0.657658972, 0.667625903, 0.677592889, 0.687559597, 0.697526472, 0.707493361, 0.717460181, 0.727426847, 0.737393681, 0.747360917, 0.757328056, 0.767295319, 0.777262264, 0.787229056, 0.797194847, 0.807160278, 0.817126139, 0.827092264, 0.837058375, 0.847024861, 0.856990986, 0.866956875, 0.876922542, 0.886888722, 0.896854264, 0.906820194, 0.916785694, 0.926750722, 0.936712069, 0.946680222, 0.956646028, 0.966610958, 0.976576333, 0.986542028, 0.996508028, 1.006474375, 1.016440069] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:15.899" endtime="20201112 12:28:15.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.894" endtime="20201112 12:28:15.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.903" endtime="20201112 12:28:15.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.906" endtime="20201112 12:28:15.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.905" endtime="20201112 12:28:15.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.901" endtime="20201112 12:28:15.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.368" endtime="20201112 12:28:15.927"></status>
</kw>
<msg timestamp="20201112 12:28:15.927" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.936" endtime="20201112 12:28:18.058"></status>
</kw>
<msg timestamp="20201112 12:28:18.059" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36228323, 'wakeups': [36238591, 36248586, 36258586, 36268586, 36278586...</msg>
<status status="PASS" starttime="20201112 12:28:15.933" endtime="20201112 12:28:18.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.066" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36228323, 'wakeups': [36238591, 36248586, 36258586, 36268586, 36278586...</msg>
<status status="PASS" starttime="20201112 12:28:18.062" endtime="20201112 12:28:18.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.068" endtime="20201112 12:28:18.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.931" endtime="20201112 12:28:18.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.929" endtime="20201112 12:28:18.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.079" level="INFO">${RESULT} = {'wakeups': [36238591, 36248586, 36258586, 36268586, 36278586, 36288586, 36298586, 36308586, 36318586, 36328586, 36338586, 36348586, 36358586, 36368586, 36378586, 36388586, 36398586, 36408586, 3641858...</msg>
<status status="PASS" starttime="20201112 12:28:18.075" endtime="20201112 12:28:18.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.088" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:18.085" endtime="20201112 12:28:18.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.092" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:18.090" endtime="20201112 12:28:18.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.081" endtime="20201112 12:28:18.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.100" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:18.099" endtime="20201112 12:28:18.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.102" level="INFO">VALUE: 36228323</msg>
<status status="PASS" starttime="20201112 12:28:18.101" endtime="20201112 12:28:18.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.095" endtime="20201112 12:28:18.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.107" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:18.106" endtime="20201112 12:28:18.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.109" level="INFO">VALUE: [36238591, 36248586, 36258586, 36268586, 36278586, 36288586, 36298586, 36308586, 36318586, 36328586, 36338586, 36348586, 36358586, 36368586, 36378586, 36388586, 36398586, 36408586, 36418586, 36428586, 36438586, 36448586, 36458586, 36468586, 36478586, 36488586, 36498586, 36508586, 36518586, 36528586, 36538586, 36548586, 36558586, 36568586, 36578586, 36588586, 36598586, 36608586, 36618586, 36628586, 36638586, 36648586, 36658586, 36668586, 36678586, 36688586, 36698586, 36708586, 36718586, 36728586, 36738586, 36748586, 36758586, 36768586, 36778586, 36788582, 36798585, 36808582, 36818585, 36828586, 36838586, 36848586, 36858586, 36868586, 36878586, 36888586, 36898586, 36908586, 36918586, 36928586, 36938586, 36948586, 36958586, 36968586, 36978586, 36988586, 36998586, 37008586, 37018586, 37028586, 37038586, 37048586, 37058586, 37068586, 37078582, 37088585, 37098586, 37108586, 37118586, 37128586, 37138586, 37148586, 37158586, 37168586, 37178586, 37188586, 37198586, 37208586, 37218586, 37228586]</msg>
<status status="PASS" starttime="20201112 12:28:18.108" endtime="20201112 12:28:18.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.103" endtime="20201112 12:28:18.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.116" endtime="20201112 12:28:18.408"></status>
</kw>
<msg timestamp="20201112 12:28:18.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030869708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.115" endtime="20201112 12:28:18.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030869708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.412" endtime="20201112 12:28:18.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.420" endtime="20201112 12:28:18.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.112" endtime="20201112 12:28:18.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.110" endtime="20201112 12:28:18.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.446" level="INFO">${RESULT} = {'diff': [0, 0.010232986, 0.009961236000000002, 0.009965999999999996, 0.009966181000000005, 0.009966124999999992, 0.009966208000000004, 0.009966375, 0.009966181000000005, 0.009966693999999998, 0.00996...</msg>
<status status="PASS" starttime="20201112 12:28:18.423" endtime="20201112 12:28:18.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.451" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:18.450" endtime="20201112 12:28:18.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.453" level="INFO">VALUE: 0.020636722</msg>
<status status="PASS" starttime="20201112 12:28:18.452" endtime="20201112 12:28:18.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.447" endtime="20201112 12:28:18.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.458" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:18.457" endtime="20201112 12:28:18.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.460" level="INFO">VALUE: [0.030869708, 0.040830944, 0.050796944, 0.060763125, 0.07072925, 0.080695458, 0.090661833, 0.100628014, 0.110594708, 0.120560903, 0.130527083, 0.140493125, 0.150459889, 0.160426819, 0.170393361, 0.180359292, 0.190325417, 0.200291792, 0.210257847, 0.220223264, 0.230189125, 0.240155319, 0.250121667, 0.260087944, 0.270053542, 0.280019319, 0.289986014, 0.299952431, 0.309919139, 0.319885708, 0.329852625, 0.339819028, 0.349785625, 0.359751917, 0.369718319, 0.379684903, 0.389651139, 0.399616792, 0.409582264, 0.419547931, 0.429513833, 0.439480306, 0.449446764, 0.459412889, 0.469379194, 0.479345542, 0.489311736, 0.499277889, 0.509243972, 0.519210125, 0.529176042, 0.539142208, 0.549107972, 0.559074319, 0.569040931, 0.579002069, 0.5889705, 0.598933375, 0.608902278, 0.618868861, 0.628834667, 0.638800639, 0.648767069, 0.658733375, 0.668699278, 0.678665403, 0.688631958, 0.698598083, 0.708564597, 0.718530847, 0.728496792, 0.738462514, 0.748428153, 0.758394389, 0.768360639, 0.778326667, 0.788292639, 0.798258347, 0.808224375, 0.818190014, 0.828156042, 0.838121486, 0.848086514, 0.858051611, 0.868012958, 0.877981125, 0.887947167, 0.897912694, 0.907878806, 0.917844389, 0.9278095, 0.937774486, 0.94774025, 0.957705875, 0.967671347, 0.977636361, 0.987601694, 0.997567361, 1.007533181, 1.017499208] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:18.459" endtime="20201112 12:28:18.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.454" endtime="20201112 12:28:18.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.463" endtime="20201112 12:28:18.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:18.467" endtime="20201112 12:28:18.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.465" endtime="20201112 12:28:18.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.462" endtime="20201112 12:28:18.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.928" endtime="20201112 12:28:18.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.840" endtime="20201112 12:28:18.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.839" endtime="20201112 12:28:18.488"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:18.490" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.498" endtime="20201112 12:28:20.620"></status>
</kw>
<msg timestamp="20201112 12:28:20.622" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38799689, 'wakeups': [38810023, 38820013, 38830013, 38840013, 38850013...</msg>
<status status="PASS" starttime="20201112 12:28:18.497" endtime="20201112 12:28:20.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.628" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38799689, 'wakeups': [38810023, 38820013, 38830013, 38840013, 38850013...</msg>
<status status="PASS" starttime="20201112 12:28:20.624" endtime="20201112 12:28:20.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.630" endtime="20201112 12:28:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.494" endtime="20201112 12:28:20.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.492" endtime="20201112 12:28:20.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:20.641" level="INFO">${RESULT} = {'wakeups': [38810023, 38820013, 38830013, 38840013, 38850013, 38860013, 38870013, 38880013, 38890013, 38900013, 38910013, 38920013, 38930013, 38940013, 38950013, 38960013, 38970013, 38980013, 3899001...</msg>
<status status="PASS" starttime="20201112 12:28:20.637" endtime="20201112 12:28:20.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.647" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:20.646" endtime="20201112 12:28:20.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.649" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:20.648" endtime="20201112 12:28:20.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.642" endtime="20201112 12:28:20.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.655" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:20.653" endtime="20201112 12:28:20.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.657" level="INFO">VALUE: 38799689</msg>
<status status="PASS" starttime="20201112 12:28:20.656" endtime="20201112 12:28:20.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.651" endtime="20201112 12:28:20.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.662" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:20.661" endtime="20201112 12:28:20.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.664" level="INFO">VALUE: [38810023, 38820013, 38830013, 38840013, 38850013, 38860013, 38870013, 38880013, 38890013, 38900013, 38910013, 38920013, 38930013, 38940013, 38950013, 38960013, 38970013, 38980013, 38990013, 39000013, 39010013, 39020013, 39030013, 39040013, 39050013, 39060013, 39070013, 39080013, 39090013, 39100013, 39110013, 39120013, 39130013, 39140013, 39150013, 39160013, 39170013, 39180013, 39190013, 39200013, 39210013, 39220013, 39230013, 39240013, 39250013, 39260013, 39270013, 39280013, 39290013, 39300013, 39310013, 39320013, 39330013, 39340013, 39350013, 39360013, 39370013, 39380013, 39390013, 39400013, 39410013, 39420013, 39430013, 39440013, 39450013, 39460013, 39470013, 39480013, 39490013, 39500013, 39510013, 39520013, 39530013, 39540013, 39550013, 39560013, 39570013, 39580013, 39590013, 39600013, 39610013, 39620013, 39630013, 39640013, 39650013, 39660013, 39670013, 39680013, 39690013, 39700013, 39710013, 39720013, 39730013, 39740013, 39750013, 39760013, 39770013, 39780013, 39790013, 39800013]</msg>
<status status="PASS" starttime="20201112 12:28:20.663" endtime="20201112 12:28:20.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.659" endtime="20201112 12:28:20.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.671" endtime="20201112 12:28:20.962"></status>
</kw>
<msg timestamp="20201112 12:28:20.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032775583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:20.670" endtime="20201112 12:28:20.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032775583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:20.966" endtime="20201112 12:28:20.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.973" endtime="20201112 12:28:20.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.667" endtime="20201112 12:28:20.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.666" endtime="20201112 12:28:20.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:21.000" level="INFO">${RESULT} = {'diff': [0, 0.010297082999999999, 0.009955917000000002, 0.009965181000000004, 0.009964790999999994, 0.009964597000000006, 0.009965069999999993, 0.009964889000000005, 0.009965721999999996, 0.009965917...</msg>
<status status="PASS" starttime="20201112 12:28:20.977" endtime="20201112 12:28:21.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.004" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:21.003" endtime="20201112 12:28:21.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.006" level="INFO">VALUE: 0.0224785</msg>
<status status="PASS" starttime="20201112 12:28:21.005" endtime="20201112 12:28:21.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.001" endtime="20201112 12:28:21.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.012" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:21.011" endtime="20201112 12:28:21.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.014" level="INFO">VALUE: [0.032775583, 0.0427315, 0.052696681, 0.062661472, 0.072626069, 0.082591139, 0.092556028, 0.10252175, 0.112487667, 0.122453597, 0.132418931, 0.142384194, 0.152349681, 0.162315069, 0.172281222, 0.182246611, 0.192212708, 0.202178292, 0.212143514, 0.222109361, 0.232074708, 0.242040292, 0.25200625, 0.261972306, 0.271938181, 0.281904222, 0.291870153, 0.301836097, 0.311802028, 0.321767333, 0.331732847, 0.341697958, 0.351663125, 0.361628, 0.371592833, 0.381557556, 0.391521736, 0.401486569, 0.411451167, 0.421415972, 0.431381472, 0.441347403, 0.451312694, 0.461278278, 0.471243792, 0.481209292, 0.491175278, 0.501141583, 0.511107431, 0.521073681, 0.531039708, 0.541005667, 0.550971542, 0.560937347, 0.570903125, 0.580868542, 0.590834403, 0.600799514, 0.610765708, 0.620731792, 0.630697681, 0.640662958, 0.650628181, 0.660593875, 0.670559, 0.680524736, 0.690490111, 0.700456028, 0.710422125, 0.720387958, 0.730353222, 0.740318583, 0.750284097, 0.760250389, 0.770216333, 0.780182389, 0.790148444, 0.800115264, 0.810081444, 0.820047681, 0.830013833, 0.83997975, 0.849945792, 0.859911583, 0.869877069, 0.879842694, 0.889808528, 0.899774222, 0.909740125, 0.919705736, 0.929671125, 0.939637264, 0.949603153, 0.959568764, 0.969534347, 0.979500569, 0.989466611, 0.999432528, 1.009398139, 1.019364042] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:21.013" endtime="20201112 12:28:21.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.008" endtime="20201112 12:28:21.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.018" endtime="20201112 12:28:21.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:21.021" endtime="20201112 12:28:21.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.020" endtime="20201112 12:28:21.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.016" endtime="20201112 12:28:21.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.491" endtime="20201112 12:28:21.042"></status>
</kw>
<msg timestamp="20201112 12:28:21.042" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.050" endtime="20201112 12:28:23.172"></status>
</kw>
<msg timestamp="20201112 12:28:23.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41360573, 'wakeups': [41370906, 41380897, 41390897, 41400897, 41410897...</msg>
<status status="PASS" starttime="20201112 12:28:21.049" endtime="20201112 12:28:23.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.179" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41360573, 'wakeups': [41370906, 41380897, 41390897, 41400897, 41410897...</msg>
<status status="PASS" starttime="20201112 12:28:23.176" endtime="20201112 12:28:23.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.181" endtime="20201112 12:28:23.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.046" endtime="20201112 12:28:23.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.044" endtime="20201112 12:28:23.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.192" level="INFO">${RESULT} = {'wakeups': [41370906, 41380897, 41390897, 41400897, 41410897, 41420897, 41430897, 41440897, 41450897, 41460897, 41470897, 41480897, 41490897, 41500897, 41510897, 41520897, 41530897, 41540897, 4155089...</msg>
<status status="PASS" starttime="20201112 12:28:23.188" endtime="20201112 12:28:23.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.201" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:23.199" endtime="20201112 12:28:23.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.205" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:23.203" endtime="20201112 12:28:23.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.194" endtime="20201112 12:28:23.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.211" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:23.210" endtime="20201112 12:28:23.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.213" level="INFO">VALUE: 41360573</msg>
<status status="PASS" starttime="20201112 12:28:23.212" endtime="20201112 12:28:23.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.208" endtime="20201112 12:28:23.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.218" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:23.217" endtime="20201112 12:28:23.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.220" level="INFO">VALUE: [41370906, 41380897, 41390897, 41400897, 41410897, 41420897, 41430897, 41440897, 41450897, 41460897, 41470897, 41480897, 41490897, 41500897, 41510897, 41520897, 41530897, 41540897, 41550897, 41560897, 41570897, 41580897, 41590897, 41600897, 41610897, 41620897, 41630897, 41640897, 41650897, 41660897, 41670897, 41680897, 41690897, 41700897, 41710897, 41720897, 41730897, 41740897, 41750897, 41760897, 41770897, 41780897, 41790897, 41800897, 41810897, 41820897, 41830897, 41840897, 41850897, 41860897, 41870897, 41880897, 41890897, 41900897, 41910897, 41920897, 41930897, 41940897, 41950897, 41960897, 41970897, 41980897, 41990897, 42000897, 42010897, 42020897, 42030897, 42040897, 42050897, 42060897, 42070897, 42080897, 42090897, 42100897, 42110897, 42120897, 42130897, 42140897, 42150897, 42160897, 42170897, 42180897, 42190897, 42200897, 42210897, 42220897, 42230897, 42240897, 42250897, 42260897, 42270897, 42280897, 42290897, 42300897, 42310897, 42320897, 42330897, 42340897, 42350897, 42360897]</msg>
<status status="PASS" starttime="20201112 12:28:23.219" endtime="20201112 12:28:23.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.215" endtime="20201112 12:28:23.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.232" endtime="20201112 12:28:23.522"></status>
</kw>
<msg timestamp="20201112 12:28:23.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030027458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.230" endtime="20201112 12:28:23.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030027458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.526" endtime="20201112 12:28:23.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.533" endtime="20201112 12:28:23.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.228" endtime="20201112 12:28:23.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.222" endtime="20201112 12:28:23.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.559" level="INFO">${RESULT} = {'diff': [0, 0.010297277, 0.009957445000000002, 0.009965819, 0.009966319999999994, 0.009966250000000003, 0.009966319000000001, 0.009965777999999995, 0.009964874999999998, 0.009964986000000009, 0.00996...</msg>
<status status="PASS" starttime="20201112 12:28:23.537" endtime="20201112 12:28:23.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.564" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:23.563" endtime="20201112 12:28:23.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.566" level="INFO">VALUE: 0.019730181</msg>
<status status="PASS" starttime="20201112 12:28:23.565" endtime="20201112 12:28:23.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.560" endtime="20201112 12:28:23.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.571" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:23.570" endtime="20201112 12:28:23.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.573" level="INFO">VALUE: [0.030027458, 0.039984903, 0.049950722, 0.059917042, 0.069883292, 0.079849611, 0.089815389, 0.099780264, 0.10974525, 0.119709472, 0.129674069, 0.139639625, 0.149604903, 0.159570472, 0.169535736, 0.179501431, 0.189467222, 0.199433042, 0.209398792, 0.219364458, 0.229330347, 0.239296236, 0.249262153, 0.259227556, 0.269192847, 0.279158403, 0.289124736, 0.299090736, 0.309056986, 0.319022958, 0.328989292, 0.338954944, 0.348921139, 0.35888725, 0.368853639, 0.378819764, 0.388786083, 0.398752472, 0.408718556, 0.418684917, 0.428651417, 0.438617861, 0.448583556, 0.458549125, 0.468515014, 0.478480472, 0.488445764, 0.498411972, 0.508377792, 0.518343361, 0.528308542, 0.538274153, 0.54824, 0.558206056, 0.568171917, 0.578137681, 0.588103694, 0.598069819, 0.608036389, 0.618002486, 0.627967764, 0.637932875, 0.64789825, 0.657863139, 0.66782875, 0.677793819, 0.687759264, 0.697724208, 0.707688708, 0.717654125, 0.727619792, 0.737585625, 0.747551042, 0.757516722, 0.767482042, 0.77744775, 0.787414111, 0.797379681, 0.807345667, 0.817311944, 0.82727825, 0.837243806, 0.847209486, 0.857175056, 0.867141319, 0.877107403, 0.887073278, 0.897039181, 0.907005681, 0.916971431, 0.926937361, 0.936903403, 0.946869528, 0.956836014, 0.966802236, 0.976768472, 0.986734736, 0.996700625, 1.006666528, 1.016632431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:23.572" endtime="20201112 12:28:23.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.567" endtime="20201112 12:28:23.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.576" endtime="20201112 12:28:23.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:23.580" endtime="20201112 12:28:23.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.578" endtime="20201112 12:28:23.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.574" endtime="20201112 12:28:23.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.043" endtime="20201112 12:28:23.600"></status>
</kw>
<msg timestamp="20201112 12:28:23.600" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.609" endtime="20201112 12:28:25.758"></status>
</kw>
<msg timestamp="20201112 12:28:25.758" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43928663, 'wakeups': [43938994, 43948987, 43958987, 43968987, 43978987...</msg>
<status status="PASS" starttime="20201112 12:28:23.607" endtime="20201112 12:28:25.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.761" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43928663, 'wakeups': [43938994, 43948987, 43958987, 43968987, 43978987...</msg>
<status status="PASS" starttime="20201112 12:28:25.760" endtime="20201112 12:28:25.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.762" endtime="20201112 12:28:25.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.604" endtime="20201112 12:28:25.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.602" endtime="20201112 12:28:25.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.768" level="INFO">${RESULT} = {'wakeups': [43938994, 43948987, 43958987, 43968987, 43978987, 43988987, 43998987, 44008987, 44018987, 44028987, 44038987, 44048987, 44058987, 44068987, 44078987, 44088987, 44098987, 44108987, 4411898...</msg>
<status status="PASS" starttime="20201112 12:28:25.766" endtime="20201112 12:28:25.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.772" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:25.771" endtime="20201112 12:28:25.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.774" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:25.773" endtime="20201112 12:28:25.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.769" endtime="20201112 12:28:25.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.779" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:25.778" endtime="20201112 12:28:25.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.781" level="INFO">VALUE: 43928663</msg>
<status status="PASS" starttime="20201112 12:28:25.780" endtime="20201112 12:28:25.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.775" endtime="20201112 12:28:25.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.785" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:25.784" endtime="20201112 12:28:25.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.788" level="INFO">VALUE: [43938994, 43948987, 43958987, 43968987, 43978987, 43988987, 43998987, 44008987, 44018987, 44028987, 44038987, 44048987, 44058987, 44068987, 44078987, 44088987, 44098987, 44108987, 44118987, 44128987, 44138987, 44148987, 44158987, 44168987, 44178987, 44188987, 44198987, 44208987, 44218987, 44228987, 44238987, 44248987, 44258987, 44268987, 44278987, 44288987, 44298987, 44308987, 44318987, 44328987, 44338987, 44348987, 44358987, 44368987, 44378987, 44388987, 44398987, 44408987, 44418987, 44428987, 44438987, 44448987, 44458987, 44468987, 44478987, 44488987, 44498987, 44508987, 44518987, 44528987, 44538987, 44548987, 44558987, 44568987, 44578987, 44588987, 44598987, 44608987, 44618987, 44628987, 44638987, 44648987, 44658987, 44668987, 44678987, 44688987, 44698987, 44708987, 44718987, 44728987, 44738987, 44748987, 44758987, 44768987, 44778987, 44788987, 44798987, 44808987, 44818987, 44828987, 44838987, 44848987, 44858987, 44868987, 44878987, 44888987, 44898987, 44908987, 44918987, 44928987]</msg>
<status status="PASS" starttime="20201112 12:28:25.786" endtime="20201112 12:28:25.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.782" endtime="20201112 12:28:25.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.795" endtime="20201112 12:28:26.086"></status>
</kw>
<msg timestamp="20201112 12:28:26.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020677903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030972806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.793" endtime="20201112 12:28:26.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020677903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030972806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.090" endtime="20201112 12:28:26.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.097" endtime="20201112 12:28:26.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.791" endtime="20201112 12:28:26.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.789" endtime="20201112 12:28:26.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:26.125" level="INFO">${RESULT} = {'diff': [0, 0.010294902999999998, 0.009959347, 0.009966125, 0.009966083, 0.009966042000000001, 0.009965902999999998, 0.009966097000000007, 0.009965471999999989, 0.009965819, 0.00996632, 0.00996616700...</msg>
<status status="PASS" starttime="20201112 12:28:26.101" endtime="20201112 12:28:26.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.129" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:26.128" endtime="20201112 12:28:26.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.131" level="INFO">VALUE: 0.020677903</msg>
<status status="PASS" starttime="20201112 12:28:26.130" endtime="20201112 12:28:26.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.126" endtime="20201112 12:28:26.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.137" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:26.135" endtime="20201112 12:28:26.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.139" level="INFO">VALUE: [0.030972806, 0.040932153, 0.050898278, 0.060864361, 0.070830403, 0.080796306, 0.090762403, 0.100727875, 0.110693694, 0.120660014, 0.130626181, 0.140592833, 0.150559264, 0.160525653, 0.170492264, 0.180458472, 0.190425333, 0.200391625, 0.210357833, 0.220324347, 0.230291667, 0.240258389, 0.250224833, 0.260191556, 0.270157681, 0.280123681, 0.290089431, 0.300055097, 0.310020194, 0.319985847, 0.329950986, 0.339916361, 0.349881361, 0.359846486, 0.369812042, 0.37977725, 0.389742667, 0.399708375, 0.409673556, 0.419637875, 0.429602681, 0.439567903, 0.449533042, 0.459498, 0.469463486, 0.479428681, 0.489394222, 0.499360181, 0.509326264, 0.519292389, 0.529258278, 0.539223875, 0.549189278, 0.559155264, 0.569121236, 0.579087486, 0.589053167, 0.599018694, 0.608984764, 0.618950847, 0.628916708, 0.638882833, 0.648848333, 0.658814097, 0.668779361, 0.678744278, 0.688710083, 0.698676194, 0.708641861, 0.718607167, 0.728572569, 0.738537833, 0.748502889, 0.758468583, 0.768433875, 0.778399444, 0.788364681, 0.798330389, 0.808295417, 0.818261181, 0.828226722, 0.838191833, 0.84815675, 0.858122139, 0.868087222, 0.878052028, 0.888016847, 0.897982028, 0.907946861, 0.917912292, 0.927877542, 0.937842681, 0.947808833, 0.957774167, 0.967738958, 0.977704208, 0.987668931, 0.997633736, 1.007598306, 1.017563417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:26.138" endtime="20201112 12:28:26.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.133" endtime="20201112 12:28:26.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.142" endtime="20201112 12:28:26.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:26.145" endtime="20201112 12:28:26.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.144" endtime="20201112 12:28:26.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.140" endtime="20201112 12:28:26.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.601" endtime="20201112 12:28:26.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.489" endtime="20201112 12:28:26.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.488" endtime="20201112 12:28:26.166"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:26.169" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.177" endtime="20201112 12:28:28.281"></status>
</kw>
<msg timestamp="20201112 12:28:28.282" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46505076, 'wakeups': [46515481, 46525474, 46535466, 46545474, 46555466...</msg>
<status status="PASS" starttime="20201112 12:28:26.175" endtime="20201112 12:28:28.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.284" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46505076, 'wakeups': [46515481, 46525474, 46535466, 46545474, 46555466...</msg>
<status status="PASS" starttime="20201112 12:28:28.283" endtime="20201112 12:28:28.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.285" endtime="20201112 12:28:28.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.173" endtime="20201112 12:28:28.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.171" endtime="20201112 12:28:28.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.291" level="INFO">${RESULT} = {'wakeups': [46515481, 46525474, 46535466, 46545474, 46555466, 46565474, 46575474, 46585474, 46595474, 46605466, 46615474, 46625474, 46635474, 46645474, 46655474, 46665474, 46675474, 46685466, 4669547...</msg>
<status status="PASS" starttime="20201112 12:28:28.289" endtime="20201112 12:28:28.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.300" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:28.299" endtime="20201112 12:28:28.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.302" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:28.301" endtime="20201112 12:28:28.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.296" endtime="20201112 12:28:28.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.308" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:28.307" endtime="20201112 12:28:28.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.310" level="INFO">VALUE: 46505076</msg>
<status status="PASS" starttime="20201112 12:28:28.309" endtime="20201112 12:28:28.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.303" endtime="20201112 12:28:28.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.315" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:28.314" endtime="20201112 12:28:28.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.317" level="INFO">VALUE: [46515481, 46525474, 46535466, 46545474, 46555466, 46565474, 46575474, 46585474, 46595474, 46605466, 46615474, 46625474, 46635474, 46645474, 46655474, 46665474, 46675474, 46685466, 46695474, 46705474, 46715474, 46725474, 46735474, 46745474, 46755474, 46765474, 46775474, 46785474, 46795474, 46805474, 46815466, 46825474, 46835474, 46845474, 46855474, 46865474, 46875474, 46885474, 46895474, 46905474, 46915474, 46925474, 46935474, 46945474, 46955474, 46965474, 46975474, 46985474, 46995474, 47005474, 47015474, 47025474, 47035474, 47045474, 47055474, 47065474, 47075474, 47085474, 47095474, 47105474, 47115466, 47125474, 47135466, 47145474, 47155474, 47165474, 47175474, 47185474, 47195474, 47205474, 47215474, 47225474, 47235474, 47245466, 47255474, 47265474, 47275474, 47285474, 47295474, 47305474, 47315474, 47325474, 47335474, 47345474, 47355474, 47365474, 47375474, 47385474, 47395466, 47405474, 47415474, 47425474, 47435474, 47445466, 47455474, 47465474, 47475474, 47485474, 47495474, 47505474]</msg>
<status status="PASS" starttime="20201112 12:28:28.316" endtime="20201112 12:28:28.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.311" endtime="20201112 12:28:28.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.324" endtime="20201112 12:28:28.615"></status>
</kw>
<msg timestamp="20201112 12:28:28.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032797833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.323" endtime="20201112 12:28:28.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032797833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.618" endtime="20201112 12:28:28.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.626" endtime="20201112 12:28:28.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.320" endtime="20201112 12:28:28.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.318" endtime="20201112 12:28:28.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.652" level="INFO">${RESULT} = {'diff': [0, 0.010368304999999998, 0.009958042, 0.009958069, 0.009973112000000006, 0.009958221999999989, 0.009972791000000009, 0.009965181000000004, 0.009965110999999999, 0.009965194999999996, 0.00995...</msg>
<status status="PASS" starttime="20201112 12:28:28.629" endtime="20201112 12:28:28.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.657" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:28.656" endtime="20201112 12:28:28.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.659" level="INFO">VALUE: 0.022429528</msg>
<status status="PASS" starttime="20201112 12:28:28.658" endtime="20201112 12:28:28.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.653" endtime="20201112 12:28:28.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.665" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:28.664" endtime="20201112 12:28:28.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.668" level="INFO">VALUE: [0.032797833, 0.042755875, 0.052713944, 0.062687056, 0.072645278, 0.082618069, 0.09258325, 0.102548361, 0.112513556, 0.122471083, 0.132443681, 0.142408806, 0.152373806, 0.162339069, 0.172304833, 0.182270556, 0.192236458, 0.202195306, 0.212169097, 0.222134833, 0.232100583, 0.242066014, 0.252030972, 0.261995681, 0.271960972, 0.281926, 0.291891194, 0.301856083, 0.311820972, 0.321786028, 0.33174375, 0.341716083, 0.351681681, 0.361647389, 0.371612819, 0.381577944, 0.391543389, 0.401509014, 0.411474333, 0.421439944, 0.431405444, 0.441370486, 0.45133575, 0.461300944, 0.471266083, 0.481231111, 0.491195694, 0.501160028, 0.511125014, 0.521089861, 0.531055194, 0.541020514, 0.550985403, 0.560950542, 0.570916389, 0.580882528, 0.590848042, 0.600813528, 0.610779444, 0.620745181, 0.630703444, 0.640676708, 0.650634819, 0.660608153, 0.670574125, 0.680540236, 0.690506111, 0.700471944, 0.710437444, 0.720402278, 0.730367653, 0.740332639, 0.750298639, 0.760257222, 0.770230597, 0.780196653, 0.790162653, 0.800128125, 0.810093611, 0.820059472, 0.830025792, 0.839991653, 0.849957444, 0.859923014, 0.869888792, 0.879854264, 0.889819778, 0.899785042, 0.909743181, 0.919715889, 0.929681597, 0.939647444, 0.949612903, 0.959570625, 0.969543819, 0.9795095, 0.989474889, 0.999439722, 1.009405083, 1.019370931] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:28.666" endtime="20201112 12:28:28.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.660" endtime="20201112 12:28:28.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.671" endtime="20201112 12:28:28.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:28.674" endtime="20201112 12:28:28.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.672" endtime="20201112 12:28:28.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.669" endtime="20201112 12:28:28.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.169" endtime="20201112 12:28:28.695"></status>
</kw>
<msg timestamp="20201112 12:28:28.695" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.703" endtime="20201112 12:28:30.819"></status>
</kw>
<msg timestamp="20201112 12:28:30.820" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49040015, 'wakeups': [49050420, 49060413, 49070413, 49080413, 49090413...</msg>
<status status="PASS" starttime="20201112 12:28:28.701" endtime="20201112 12:28:30.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.822" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49040015, 'wakeups': [49050420, 49060413, 49070413, 49080413, 49090413...</msg>
<status status="PASS" starttime="20201112 12:28:30.821" endtime="20201112 12:28:30.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.823" endtime="20201112 12:28:30.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.699" endtime="20201112 12:28:30.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.697" endtime="20201112 12:28:30.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.829" level="INFO">${RESULT} = {'wakeups': [49050420, 49060413, 49070413, 49080413, 49090413, 49100413, 49110413, 49120413, 49130413, 49140413, 49150413, 49160413, 49170413, 49180413, 49190413, 49200413, 49210413, 49220413, 4923041...</msg>
<status status="PASS" starttime="20201112 12:28:30.827" endtime="20201112 12:28:30.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.833" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:30.832" endtime="20201112 12:28:30.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.835" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:30.834" endtime="20201112 12:28:30.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.829" endtime="20201112 12:28:30.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.840" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:30.839" endtime="20201112 12:28:30.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.842" level="INFO">VALUE: 49040015</msg>
<status status="PASS" starttime="20201112 12:28:30.841" endtime="20201112 12:28:30.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.836" endtime="20201112 12:28:30.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.846" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:30.845" endtime="20201112 12:28:30.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.849" level="INFO">VALUE: [49050420, 49060413, 49070413, 49080413, 49090413, 49100413, 49110413, 49120413, 49130413, 49140413, 49150413, 49160413, 49170413, 49180413, 49190413, 49200413, 49210413, 49220413, 49230413, 49240413, 49250413, 49260413, 49270413, 49280413, 49290413, 49300413, 49310413, 49320413, 49330413, 49340413, 49350413, 49360413, 49370413, 49380413, 49390413, 49400413, 49410413, 49420413, 49430413, 49440405, 49450413, 49460413, 49470413, 49480413, 49490413, 49500413, 49510413, 49520405, 49530413, 49540413, 49550413, 49560413, 49570413, 49580413, 49590413, 49600413, 49610413, 49620413, 49630413, 49640413, 49650413, 49660413, 49670413, 49680405, 49690413, 49700413, 49710413, 49720413, 49730413, 49740413, 49750413, 49760405, 49770413, 49780413, 49790413, 49800413, 49810413, 49820413, 49830413, 49840413, 49850413, 49860413, 49870413, 49880413, 49890413, 49900413, 49910413, 49920413, 49930413, 49940405, 49950413, 49960413, 49970413, 49980413, 49990413, 50000413, 50010413, 50020413, 50030413, 50040413]</msg>
<status status="PASS" starttime="20201112 12:28:30.848" endtime="20201112 12:28:30.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.843" endtime="20201112 12:28:30.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.857" endtime="20201112 12:28:31.148"></status>
</kw>
<msg timestamp="20201112 12:28:31.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030067361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.855" endtime="20201112 12:28:31.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030067361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.152" endtime="20201112 12:28:31.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.159" endtime="20201112 12:28:31.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.852" endtime="20201112 12:28:31.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.851" endtime="20201112 12:28:31.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:31.185" level="INFO">${RESULT} = {'diff': [0, 0.01036993, 0.009959499999999996, 0.009966653000000006, 0.009967291999999996, 0.009966583000000008, 0.009966541999999995, 0.009966583000000001, 0.009966652999999992, 0.009966972000000004,...</msg>
<status status="PASS" starttime="20201112 12:28:31.163" endtime="20201112 12:28:31.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.189" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:31.188" endtime="20201112 12:28:31.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.192" level="INFO">VALUE: 0.019697431</msg>
<status status="PASS" starttime="20201112 12:28:31.191" endtime="20201112 12:28:31.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.186" endtime="20201112 12:28:31.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.197" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:31.196" endtime="20201112 12:28:31.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.199" level="INFO">VALUE: [0.030067361, 0.040026861, 0.049993514, 0.059960806, 0.069927389, 0.079893931, 0.089860514, 0.099827167, 0.109794139, 0.119761375, 0.129728139, 0.139694931, 0.149662056, 0.159629222, 0.169596514, 0.179563861, 0.189530625, 0.199497375, 0.209463875, 0.219430431, 0.229396681, 0.239362903, 0.2493295, 0.259296, 0.269262528, 0.279228514, 0.289194764, 0.299161458, 0.309127861, 0.319094264, 0.329060375, 0.339027417, 0.348994764, 0.358961389, 0.368928139, 0.378895014, 0.388861361, 0.398828514, 0.40879525, 0.41875425, 0.428728361, 0.438694958, 0.448661431, 0.458628069, 0.468594264, 0.478560028, 0.488526708, 0.498486139, 0.508460736, 0.518428139, 0.528395167, 0.538362361, 0.548329208, 0.558295806, 0.568262111, 0.578228444, 0.588194722, 0.598161083, 0.608127417, 0.618093375, 0.628059347, 0.638026167, 0.647992431, 0.657952069, 0.667925722, 0.677891931, 0.687857569, 0.6978235, 0.707789861, 0.717755819, 0.727721819, 0.737680514, 0.747654458, 0.757621556, 0.767588139, 0.777554764, 0.787521389, 0.797488056, 0.807455042, 0.817422764, 0.827390653, 0.837357861, 0.847325194, 0.857291958, 0.867259444, 0.877225819, 0.887192167, 0.897158167, 0.90712475, 0.917083611, 0.92705725, 0.937024, 0.946990806, 0.956957653, 0.966924972, 0.976891583, 0.986858681, 0.996826167, 1.006792944, 1.016760667] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:31.198" endtime="20201112 12:28:31.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.193" endtime="20201112 12:28:31.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.202" endtime="20201112 12:28:31.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:31.205" endtime="20201112 12:28:31.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.204" endtime="20201112 12:28:31.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.200" endtime="20201112 12:28:31.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.696" endtime="20201112 12:28:31.227"></status>
</kw>
<msg timestamp="20201112 12:28:31.227" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.236" endtime="20201112 12:28:33.367"></status>
</kw>
<msg timestamp="20201112 12:28:33.369" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51582012, 'wakeups': [51592416, 51602410, 51612410, 51622410, 51632410...</msg>
<status status="PASS" starttime="20201112 12:28:31.235" endtime="20201112 12:28:33.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.376" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51582012, 'wakeups': [51592416, 51602410, 51612410, 51622410, 51632410...</msg>
<status status="PASS" starttime="20201112 12:28:33.371" endtime="20201112 12:28:33.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.378" endtime="20201112 12:28:33.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.231" endtime="20201112 12:28:33.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.229" endtime="20201112 12:28:33.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.383" level="INFO">${RESULT} = {'wakeups': [51592416, 51602410, 51612410, 51622410, 51632410, 51642402, 51652410, 51662410, 51672410, 51682410, 51692410, 51702410, 51712410, 51722410, 51732410, 51742410, 51752410, 51762410, 5177241...</msg>
<status status="PASS" starttime="20201112 12:28:33.381" endtime="20201112 12:28:33.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.388" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:33.387" endtime="20201112 12:28:33.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.390" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:33.389" endtime="20201112 12:28:33.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.384" endtime="20201112 12:28:33.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.394" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:33.393" endtime="20201112 12:28:33.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.396" level="INFO">VALUE: 51582012</msg>
<status status="PASS" starttime="20201112 12:28:33.395" endtime="20201112 12:28:33.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.391" endtime="20201112 12:28:33.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.401" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:33.400" endtime="20201112 12:28:33.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.404" level="INFO">VALUE: [51592416, 51602410, 51612410, 51622410, 51632410, 51642402, 51652410, 51662410, 51672410, 51682410, 51692410, 51702410, 51712410, 51722410, 51732410, 51742410, 51752410, 51762410, 51772410, 51782410, 51792410, 51802410, 51812410, 51822410, 51832410, 51842410, 51852410, 51862410, 51872410, 51882410, 51892410, 51902402, 51912410, 51922410, 51932410, 51942410, 51952410, 51962410, 51972410, 51982410, 51992410, 52002410, 52012410, 52022410, 52032410, 52042410, 52052410, 52062410, 52072410, 52082402, 52092410, 52102410, 52112410, 52122410, 52132402, 52142410, 52152402, 52162410, 52172410, 52182410, 52192410, 52202410, 52212410, 52222410, 52232410, 52242410, 52252410, 52262410, 52272410, 52282410, 52292410, 52302410, 52312410, 52322410, 52332410, 52342410, 52352410, 52362410, 52372410, 52382410, 52392402, 52402410, 52412402, 52422410, 52432410, 52442410, 52452410, 52462410, 52472410, 52482410, 52492410, 52502410, 52512410, 52522410, 52532410, 52542410, 52552410, 52562410, 52572410, 52582410]</msg>
<status status="PASS" starttime="20201112 12:28:33.403" endtime="20201112 12:28:33.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.398" endtime="20201112 12:28:33.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.412" endtime="20201112 12:28:33.704"></status>
</kw>
<msg timestamp="20201112 12:28:33.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032051056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.410" endtime="20201112 12:28:33.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032051056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.708" endtime="20201112 12:28:33.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.716" endtime="20201112 12:28:33.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.407" endtime="20201112 12:28:33.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.405" endtime="20201112 12:28:33.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.743" level="INFO">${RESULT} = {'diff': [0, 0.010371195, 0.009960832999999995, 0.009967750000000004, 0.009968221999999999, 0.009967944999999999, 0.009959805000000002, 0.009975402999999994, 0.009967653000000007, 0.009967124999999993...</msg>
<status status="PASS" starttime="20201112 12:28:33.719" endtime="20201112 12:28:33.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.747" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:33.746" endtime="20201112 12:28:33.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.749" level="INFO">VALUE: 0.021679861</msg>
<status status="PASS" starttime="20201112 12:28:33.748" endtime="20201112 12:28:33.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.744" endtime="20201112 12:28:33.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.755" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:33.754" endtime="20201112 12:28:33.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.757" level="INFO">VALUE: [0.032051056, 0.042011889, 0.051979639, 0.061947861, 0.071915806, 0.081875611, 0.091851014, 0.101818667, 0.111785792, 0.12175325, 0.131720639, 0.141688222, 0.151655653, 0.161623333, 0.171590889, 0.181558944, 0.191526597, 0.201494278, 0.211462347, 0.221430042, 0.23139825, 0.241366389, 0.251334472, 0.261302319, 0.271270542, 0.281237542, 0.291204403, 0.301171333, 0.311138431, 0.321105514, 0.331073278, 0.341032931, 0.351007653, 0.360975417, 0.370943236, 0.380911069, 0.390878569, 0.400846319, 0.410814097, 0.420781292, 0.430748708, 0.440716389, 0.450684111, 0.460651278, 0.470618583, 0.480585764, 0.490553069, 0.500520653, 0.510488458, 0.520448417, 0.530423278, 0.540390069, 0.550356597, 0.560323778, 0.570283375, 0.580258028, 0.590217861, 0.600192097, 0.610159125, 0.620126042, 0.630093194, 0.640060569, 0.650028236, 0.659995431, 0.669962778, 0.679929375, 0.689895694, 0.699862222, 0.709829111, 0.719796083, 0.729763264, 0.739731472, 0.749698861, 0.759665722, 0.769632403, 0.779599514, 0.789565889, 0.799533347, 0.809500139, 0.819466819, 0.829426375, 0.839400611, 0.849359944, 0.859334097, 0.869301194, 0.879268403, 0.889235444, 0.899202639, 0.909170111, 0.919137861, 0.929105431, 0.939072625, 0.949039667, 0.959006417, 0.968973431, 0.978941153, 0.988908361, 0.998875764, 1.0088435, 1.018810333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:33.756" endtime="20201112 12:28:33.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.751" endtime="20201112 12:28:33.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.760" endtime="20201112 12:28:33.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:33.763" endtime="20201112 12:28:33.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.762" endtime="20201112 12:28:33.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.758" endtime="20201112 12:28:33.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.227" endtime="20201112 12:28:33.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.167" endtime="20201112 12:28:33.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.167" endtime="20201112 12:28:33.784"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:33.787" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.795" endtime="20201112 12:28:35.928"></status>
</kw>
<msg timestamp="20201112 12:28:35.929" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54149422, 'wakeups': [54159891, 54169888, 54179888, 54189888, 54199892...</msg>
<status status="PASS" starttime="20201112 12:28:33.793" endtime="20201112 12:28:35.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54149422, 'wakeups': [54159891, 54169888, 54179888, 54189888, 54199892...</msg>
<status status="PASS" starttime="20201112 12:28:35.930" endtime="20201112 12:28:35.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.933" endtime="20201112 12:28:35.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.791" endtime="20201112 12:28:35.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.789" endtime="20201112 12:28:35.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.938" level="INFO">${RESULT} = {'wakeups': [54159891, 54169888, 54179888, 54189888, 54199892, 54209888, 54219883, 54229883, 54239888, 54249892, 54259888, 54269888, 54279883, 54289888, 54299888, 54309883, 54319888, 54329883, 5433988...</msg>
<status status="PASS" starttime="20201112 12:28:35.936" endtime="20201112 12:28:35.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.943" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:35.942" endtime="20201112 12:28:35.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.945" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:35.944" endtime="20201112 12:28:35.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.939" endtime="20201112 12:28:35.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.951" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:35.949" endtime="20201112 12:28:35.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.953" level="INFO">VALUE: 54149422</msg>
<status status="PASS" starttime="20201112 12:28:35.952" endtime="20201112 12:28:35.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.946" endtime="20201112 12:28:35.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.958" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:35.957" endtime="20201112 12:28:35.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.960" level="INFO">VALUE: [54159891, 54169888, 54179888, 54189888, 54199892, 54209888, 54219883, 54229883, 54239888, 54249892, 54259888, 54269888, 54279883, 54289888, 54299888, 54309883, 54319888, 54329883, 54339888, 54349888, 54359883, 54369888, 54379888, 54389883, 54399888, 54409883, 54419888, 54429892, 54439888, 54449888, 54459888, 54469888, 54479888, 54489888, 54499883, 54509888, 54519888, 54529888, 54539883, 54549888, 54559888, 54569883, 54579888, 54589888, 54599892, 54609888, 54619888, 54629883, 54639888, 54649883, 54659888, 54669888, 54679888, 54689892, 54699883, 54709888, 54719883, 54729888, 54739888, 54749883, 54759888, 54769888, 54779883, 54789883, 54799888, 54809888, 54819888, 54829883, 54839888, 54849888, 54859883, 54869883, 54879883, 54889888, 54899888, 54909888, 54919888, 54929883, 54939883, 54949883, 54959888, 54969888, 54979888, 54989888, 54999888, 55009888, 55019883, 55029883, 55039888, 55049888, 55059888, 55069888, 55079883, 55089883, 55099883, 55109888, 55119883, 55129883, 55139888, 55149888]</msg>
<status status="PASS" starttime="20201112 12:28:35.959" endtime="20201112 12:28:35.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.954" endtime="20201112 12:28:35.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.967" endtime="20201112 12:28:36.261"></status>
</kw>
<msg timestamp="20201112 12:28:36.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032953333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.966" endtime="20201112 12:28:36.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032953333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:36.265" endtime="20201112 12:28:36.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.272" endtime="20201112 12:28:36.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.963" endtime="20201112 12:28:36.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.961" endtime="20201112 12:28:36.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:36.298" level="INFO">${RESULT} = {'diff': [0, 0.010433486000000002, 0.009964097999999998, 0.009966833000000001, 0.009966804999999995, 0.009971500000000008, 0.009961917, 0.00996206999999999, 0.00996651300000001, 0.009971347999999991, ...</msg>
<status status="PASS" starttime="20201112 12:28:36.276" endtime="20201112 12:28:36.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.303" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:36.302" endtime="20201112 12:28:36.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.305" level="INFO">VALUE: 0.022519847</msg>
<status status="PASS" starttime="20201112 12:28:36.304" endtime="20201112 12:28:36.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.299" endtime="20201112 12:28:36.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.310" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:36.309" endtime="20201112 12:28:36.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.313" level="INFO">VALUE: [0.032953333, 0.042917431, 0.052884264, 0.062851069, 0.072822569, 0.082784486, 0.092746556, 0.102713069, 0.112684417, 0.122655736, 0.132617417, 0.142583708, 0.152546125, 0.162516958, 0.172483514, 0.182446194, 0.192416653, 0.202378875, 0.212349542, 0.222316514, 0.232279431, 0.242250333, 0.252216889, 0.262179583, 0.272150583, 0.282113528, 0.292084542, 0.302056389, 0.312018417, 0.321985222, 0.331952042, 0.341918972, 0.351885653, 0.361851667, 0.371814875, 0.381785639, 0.391752083, 0.401718556, 0.411681764, 0.421652639, 0.431619528, 0.44158175, 0.451552139, 0.461518444, 0.471490431, 0.481452153, 0.491419014, 0.501382236, 0.511353556, 0.521315806, 0.531285431, 0.541251333, 0.551217903, 0.561188792, 0.571145472, 0.581115972, 0.591078597, 0.601049167, 0.611015444, 0.620978014, 0.630949264, 0.640916153, 0.650878542, 0.660845333, 0.670816139, 0.680782361, 0.690748597, 0.700710444, 0.710682264, 0.720648958, 0.730611792, 0.740579111, 0.750546431, 0.760517847, 0.770485403, 0.780453028, 0.790421236, 0.800384694, 0.810352042, 0.820319389, 0.830290792, 0.8402585, 0.850226708, 0.860194597, 0.870162694, 0.880130736, 0.890093556, 0.9000605, 0.910031944, 0.919998972, 0.929966639, 0.939934458, 0.949897875, 0.959865542, 0.969833111, 0.979804653, 0.989767569, 0.999734958, 1.009706375, 1.019673694] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:36.312" endtime="20201112 12:28:36.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.306" endtime="20201112 12:28:36.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.316" endtime="20201112 12:28:36.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:36.320" endtime="20201112 12:28:36.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.318" endtime="20201112 12:28:36.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.314" endtime="20201112 12:28:36.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.788" endtime="20201112 12:28:36.340"></status>
</kw>
<msg timestamp="20201112 12:28:36.341" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.348" endtime="20201112 12:28:38.453"></status>
</kw>
<msg timestamp="20201112 12:28:38.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56711556, 'wakeups': [56722025, 56732022, 56742022, 56752022, 56762022...</msg>
<status status="PASS" starttime="20201112 12:28:36.347" endtime="20201112 12:28:38.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.456" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56711556, 'wakeups': [56722025, 56732022, 56742022, 56752022, 56762022...</msg>
<status status="PASS" starttime="20201112 12:28:38.455" endtime="20201112 12:28:38.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.457" endtime="20201112 12:28:38.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.344" endtime="20201112 12:28:38.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.342" endtime="20201112 12:28:38.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.463" level="INFO">${RESULT} = {'wakeups': [56722025, 56732022, 56742022, 56752022, 56762022, 56772022, 56782022, 56792026, 56802022, 56812022, 56822017, 56832017, 56842022, 56852022, 56862026, 56872022, 56882022, 56892017, 5690202...</msg>
<status status="PASS" starttime="20201112 12:28:38.461" endtime="20201112 12:28:38.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.467" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:38.466" endtime="20201112 12:28:38.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.469" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:38.468" endtime="20201112 12:28:38.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.463" endtime="20201112 12:28:38.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.479" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:38.478" endtime="20201112 12:28:38.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.481" level="INFO">VALUE: 56711556</msg>
<status status="PASS" starttime="20201112 12:28:38.480" endtime="20201112 12:28:38.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.475" endtime="20201112 12:28:38.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.486" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:38.485" endtime="20201112 12:28:38.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.488" level="INFO">VALUE: [56722025, 56732022, 56742022, 56752022, 56762022, 56772022, 56782022, 56792026, 56802022, 56812022, 56822017, 56832017, 56842022, 56852022, 56862026, 56872022, 56882022, 56892017, 56902022, 56912022, 56922022, 56932022, 56942022, 56952022, 56962026, 56972022, 56982022, 56992022, 57002022, 57012026, 57022017, 57032022, 57042022, 57052017, 57062022, 57072022, 57082017, 57092022, 57102022, 57112026, 57122017, 57132022, 57142022, 57152022, 57162017, 57172017, 57182022, 57192022, 57202017, 57212022, 57222022, 57232017, 57242022, 57252022, 57262017, 57272022, 57282022, 57292022, 57302022, 57312022, 57322017, 57332022, 57342022, 57352022, 57362022, 57372022, 57382017, 57392022, 57402022, 57412022, 57422022, 57432017, 57442022, 57452022, 57462022, 57472017, 57482022, 57492022, 57502022, 57512017, 57522017, 57532022, 57542022, 57552022, 57562022, 57572017, 57582022, 57592022, 57602017, 57612022, 57622022, 57632022, 57642022, 57652017, 57662022, 57672022, 57682017, 57692022, 57702022, 57712017]</msg>
<status status="PASS" starttime="20201112 12:28:38.487" endtime="20201112 12:28:38.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.482" endtime="20201112 12:28:38.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.495" endtime="20201112 12:28:38.788"></status>
</kw>
<msg timestamp="20201112 12:28:38.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030112958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.494" endtime="20201112 12:28:38.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030112958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.791" endtime="20201112 12:28:38.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.799" endtime="20201112 12:28:38.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.491" endtime="20201112 12:28:38.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.490" endtime="20201112 12:28:38.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.824" level="INFO">${RESULT} = {'diff': [0, 0.010434443999999998, 0.009964625000000001, 0.009967792000000003, 0.009967791999999996, 0.009967526999999997, 0.009967375, 0.009967139, 0.00997244500000001, 0.009962027999999998, 0.009967...</msg>
<status status="PASS" starttime="20201112 12:28:38.802" endtime="20201112 12:28:38.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.829" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:38.828" endtime="20201112 12:28:38.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.831" level="INFO">VALUE: 0.019678514</msg>
<status status="PASS" starttime="20201112 12:28:38.830" endtime="20201112 12:28:38.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.825" endtime="20201112 12:28:38.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.836" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:38.835" endtime="20201112 12:28:38.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.838" level="INFO">VALUE: [0.030112958, 0.040077583, 0.050045375, 0.060013167, 0.069980694, 0.079948069, 0.089915208, 0.099887653, 0.109849681, 0.119816778, 0.129779347, 0.139745875, 0.149716486, 0.159683361, 0.169655403, 0.179617792, 0.1895845, 0.19954725, 0.209517736, 0.219484486, 0.229451125, 0.239418069, 0.249385181, 0.259351792, 0.269323333, 0.279285153, 0.289252139, 0.299218833, 0.309185847, 0.319156667, 0.329114528, 0.339085125, 0.349051181, 0.359012736, 0.368982889, 0.378949264, 0.388911819, 0.398882792, 0.408849625, 0.418821875, 0.428779903, 0.438751, 0.448718167, 0.458685167, 0.468647944, 0.478614736, 0.488585653, 0.498552444, 0.508515014, 0.518486208, 0.528453111, 0.538416028, 0.548387375, 0.558354694, 0.568316542, 0.578286736, 0.588252958, 0.598218722, 0.608184292, 0.618149625, 0.628110333, 0.63808025, 0.648045417, 0.658010347, 0.667976069, 0.677942306, 0.687903986, 0.697874181, 0.707840361, 0.717807167, 0.727773611, 0.737736056, 0.747706306, 0.757672097, 0.767637806, 0.777599528, 0.787569028, 0.797534917, 0.807501, 0.817462278, 0.827428764, 0.837399125, 0.847364792, 0.857330361, 0.867296153, 0.877257778, 0.887228694, 0.897194889, 0.907157667, 0.917128014, 0.927094097, 0.937059958, 0.947026056, 0.956988056, 0.966958264, 0.976924639, 0.986886264, 0.996856389, 1.006821778, 1.016783319] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:38.837" endtime="20201112 12:28:38.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.832" endtime="20201112 12:28:38.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.842" endtime="20201112 12:28:38.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:38.845" endtime="20201112 12:28:38.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.844" endtime="20201112 12:28:38.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.840" endtime="20201112 12:28:38.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.341" endtime="20201112 12:28:38.866"></status>
</kw>
<msg timestamp="20201112 12:28:38.866" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.875" endtime="20201112 12:28:41.003"></status>
</kw>
<msg timestamp="20201112 12:28:41.004" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59246846, 'wakeups': [59257315, 59267312, 59277312, 59287307, 59297312...</msg>
<status status="PASS" starttime="20201112 12:28:38.873" endtime="20201112 12:28:41.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.006" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59246846, 'wakeups': [59257315, 59267312, 59277312, 59287307, 59297312...</msg>
<status status="PASS" starttime="20201112 12:28:41.005" endtime="20201112 12:28:41.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.008" endtime="20201112 12:28:41.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.870" endtime="20201112 12:28:41.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.868" endtime="20201112 12:28:41.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.013" level="INFO">${RESULT} = {'wakeups': [59257315, 59267312, 59277312, 59287307, 59297312, 59307312, 59317312, 59327307, 59337312, 59347312, 59357316, 59367312, 59377312, 59387312, 59397312, 59407316, 59417307, 59427312, 5943730...</msg>
<status status="PASS" starttime="20201112 12:28:41.011" endtime="20201112 12:28:41.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.017" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:41.016" endtime="20201112 12:28:41.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.019" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:41.018" endtime="20201112 12:28:41.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.014" endtime="20201112 12:28:41.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.025" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:41.024" endtime="20201112 12:28:41.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.027" level="INFO">VALUE: 59246846</msg>
<status status="PASS" starttime="20201112 12:28:41.026" endtime="20201112 12:28:41.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.021" endtime="20201112 12:28:41.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.032" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:41.031" endtime="20201112 12:28:41.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.035" level="INFO">VALUE: [59257315, 59267312, 59277312, 59287307, 59297312, 59307312, 59317312, 59327307, 59337312, 59347312, 59357316, 59367312, 59377312, 59387312, 59397312, 59407316, 59417307, 59427312, 59437307, 59447312, 59457312, 59467312, 59477316, 59487312, 59497316, 59507307, 59517312, 59527312, 59537312, 59547312, 59557312, 59567307, 59577312, 59587312, 59597312, 59607312, 59617307, 59627312, 59637312, 59647312, 59657312, 59667312, 59677307, 59687312, 59697312, 59707312, 59717307, 59727312, 59737312, 59747312, 59757316, 59767312, 59777307, 59787312, 59797312, 59807312, 59817312, 59827316, 59837312, 59847312, 59857312, 59867312, 59877307, 59887312, 59897312, 59907312, 59917307, 59927312, 59937312, 59947312, 59957312, 59967307, 59977312, 59987312, 59997312, 60007312, 60017307, 60027312, 60037312, 60047307, 60057312, 60067312, 60077312, 60087316, 60097312, 60107312, 60117312, 60127312, 60137312, 60147312, 60157307, 60167312, 60177312, 60187307, 60197307, 60207307, 60217312, 60227312, 60237312, 60247307]</msg>
<status status="PASS" starttime="20201112 12:28:41.033" endtime="20201112 12:28:41.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.029" endtime="20201112 12:28:41.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.043" endtime="20201112 12:28:41.333"></status>
</kw>
<msg timestamp="20201112 12:28:41.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020627875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031061597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.041" endtime="20201112 12:28:41.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020627875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031061597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.337" endtime="20201112 12:28:41.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.344" endtime="20201112 12:28:41.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.038" endtime="20201112 12:28:41.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.036" endtime="20201112 12:28:41.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.370" level="INFO">${RESULT} = {'diff': [0, 0.010433722, 0.009963014000000003, 0.009966763999999996, 0.009962403000000002, 0.009971014, 0.009966111, 0.009966125000000006, 0.009962054999999997, 0.00997025, 0.009966597999999993, 0.00...</msg>
<status status="PASS" starttime="20201112 12:28:41.347" endtime="20201112 12:28:41.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.375" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:41.374" endtime="20201112 12:28:41.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.377" level="INFO">VALUE: 0.020627875</msg>
<status status="PASS" starttime="20201112 12:28:41.376" endtime="20201112 12:28:41.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.371" endtime="20201112 12:28:41.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.382" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:41.381" endtime="20201112 12:28:41.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.384" level="INFO">VALUE: [0.031061597, 0.041024611, 0.050991375, 0.060953778, 0.070924792, 0.080890903, 0.090857028, 0.100819083, 0.110789333, 0.120755931, 0.130726833, 0.140687917, 0.150653944, 0.160619917, 0.170585444, 0.180555903, 0.190512833, 0.200482556, 0.210443972, 0.220413403, 0.230379167, 0.240345528, 0.250316292, 0.260277667, 0.270248375, 0.280205125, 0.290175236, 0.300141069, 0.310106917, 0.320072819, 0.330038514, 0.339999778, 0.349969653, 0.359936028, 0.369901819, 0.37986825, 0.389830347, 0.399801167, 0.409767222, 0.419733764, 0.42969975, 0.439666542, 0.449628903, 0.459599139, 0.469565528, 0.479531792, 0.489493778, 0.499464458, 0.509430569, 0.519396792, 0.529368, 0.539329542, 0.549292208, 0.559262722, 0.569228653, 0.579194847, 0.589161125, 0.599131931, 0.609093069, 0.619059208, 0.629025042, 0.638991222, 0.648952819, 0.658922694, 0.668888153, 0.678853889, 0.68881525, 0.698785236, 0.708750528, 0.718716181, 0.728681611, 0.738642931, 0.748612236, 0.758577458, 0.768542667, 0.778507778, 0.788468542, 0.798437708, 0.808403, 0.818363986, 0.828333042, 0.838298028, 0.848262583, 0.858231708, 0.868191236, 0.878156042, 0.888120958, 0.898085903, 0.908050903, 0.918015583, 0.927976306, 0.937945292, 0.947910181, 0.957870667, 0.967835417, 0.977799972, 0.987769319, 0.997734319, 1.007699597, 1.017660264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:41.383" endtime="20201112 12:28:41.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.378" endtime="20201112 12:28:41.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.387" endtime="20201112 12:28:41.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:41.391" endtime="20201112 12:28:41.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.389" endtime="20201112 12:28:41.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.386" endtime="20201112 12:28:41.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.867" endtime="20201112 12:28:41.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.786" endtime="20201112 12:28:41.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.785" endtime="20201112 12:28:41.412"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:41.414" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.423" endtime="20201112 12:28:43.576"></status>
</kw>
<msg timestamp="20201112 12:28:43.578" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61803432, 'wakeups': [61813991, 61823960, 61833960, 61843960, 61853960...</msg>
<status status="PASS" starttime="20201112 12:28:41.421" endtime="20201112 12:28:43.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.583" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61803432, 'wakeups': [61813991, 61823960, 61833960, 61843960, 61853960...</msg>
<status status="PASS" starttime="20201112 12:28:43.580" endtime="20201112 12:28:43.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.585" endtime="20201112 12:28:43.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.418" endtime="20201112 12:28:43.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.416" endtime="20201112 12:28:43.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.593" level="INFO">${RESULT} = {'wakeups': [61813991, 61823960, 61833960, 61843960, 61853960, 61863960, 61873960, 61883960, 61893960, 61903960, 61913960, 61923978, 61933960, 61943960, 61953960, 61963960, 61973960, 61983960, 6199396...</msg>
<status status="PASS" starttime="20201112 12:28:43.591" endtime="20201112 12:28:43.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.597" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:43.596" endtime="20201112 12:28:43.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.599" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:43.598" endtime="20201112 12:28:43.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.594" endtime="20201112 12:28:43.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.605" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.604" endtime="20201112 12:28:43.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.607" level="INFO">VALUE: 61803432</msg>
<status status="PASS" starttime="20201112 12:28:43.606" endtime="20201112 12:28:43.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.600" endtime="20201112 12:28:43.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.612" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.611" endtime="20201112 12:28:43.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.614" level="INFO">VALUE: [61813991, 61823960, 61833960, 61843960, 61853960, 61863960, 61873960, 61883960, 61893960, 61903960, 61913960, 61923978, 61933960, 61943960, 61953960, 61963960, 61973960, 61983960, 61993960, 62003960, 62013960, 62023960, 62033960, 62043978, 62053960, 62063960, 62073960, 62083960, 62093960, 62103960, 62113960, 62123960, 62133960, 62143960, 62153960, 62163960, 62173960, 62183960, 62193960, 62203978, 62213960, 62223960, 62233960, 62243960, 62253960, 62263960, 62273960, 62283960, 62293978, 62303960, 62313978, 62323960, 62333960, 62343960, 62353960, 62363960, 62373960, 62383960, 62393960, 62403960, 62413960, 62423960, 62433978, 62443960, 62453960, 62463960, 62473960, 62483960, 62493960, 62503960, 62513960, 62523960, 62533960, 62543960, 62553960, 62563960, 62573960, 62583960, 62593960, 62603960, 62613960, 62623960, 62633960, 62643960, 62653960, 62663960, 62673960, 62683960, 62693960, 62703960, 62713960, 62723960, 62733960, 62743960, 62753960, 62763960, 62773960, 62783960, 62793960, 62803978]</msg>
<status status="PASS" starttime="20201112 12:28:43.613" endtime="20201112 12:28:43.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.608" endtime="20201112 12:28:43.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.621" endtime="20201112 12:28:43.912"></status>
</kw>
<msg timestamp="20201112 12:28:43.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033401792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.620" endtime="20201112 12:28:43.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033401792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.915" endtime="20201112 12:28:43.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.923" endtime="20201112 12:28:43.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.617" endtime="20201112 12:28:43.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.615" endtime="20201112 12:28:43.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.954" level="INFO">${RESULT} = {'diff': [0, 0.010522389, 0.009935318999999998, 0.009966458000000004, 0.009966098, 0.009966429999999998, 0.009966445000000004, 0.009966360999999993, 0.009966249999999996, 0.009966444000000005, 0.00996...</msg>
<status status="PASS" starttime="20201112 12:28:43.931" endtime="20201112 12:28:43.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.958" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.957" endtime="20201112 12:28:43.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.960" level="INFO">VALUE: 0.022879403</msg>
<status status="PASS" starttime="20201112 12:28:43.959" endtime="20201112 12:28:43.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.955" endtime="20201112 12:28:43.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.966" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.964" endtime="20201112 12:28:43.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.968" level="INFO">VALUE: [0.033401792, 0.043337111, 0.053303569, 0.063269667, 0.073236097, 0.083202542, 0.093168903, 0.103135153, 0.113101597, 0.123067778, 0.133034111, 0.143017917, 0.152966861, 0.162933125, 0.1728995, 0.182865389, 0.192830458, 0.202795903, 0.212761014, 0.222726361, 0.232692, 0.242657056, 0.252622944, 0.262606556, 0.272554542, 0.2825205, 0.29248575, 0.302451514, 0.312417819, 0.322383181, 0.332348556, 0.342314639, 0.352280486, 0.362247181, 0.372213278, 0.382179431, 0.392145375, 0.402111236, 0.412076875, 0.422060542, 0.432008861, 0.441974181, 0.451939653, 0.461904917, 0.471871528, 0.48183725, 0.491802861, 0.501768847, 0.511752569, 0.521700431, 0.531683778, 0.541632083, 0.551598389, 0.561564639, 0.571531486, 0.581497653, 0.591464014, 0.601430319, 0.611396639, 0.621362861, 0.631329208, 0.641295625, 0.651280111, 0.661228917, 0.671195625, 0.681162708, 0.691128764, 0.701095236, 0.711061194, 0.721027625, 0.730994153, 0.740960042, 0.750926069, 0.760892208, 0.770857931, 0.780823764, 0.79078925, 0.800755375, 0.810721514, 0.820687792, 0.830653806, 0.840620069, 0.850586375, 0.860552556, 0.870518903, 0.880484931, 0.890451111, 0.900417125, 0.910383181, 0.920349014, 0.930315028, 0.940281042, 0.95024725, 0.960214097, 0.970180583, 0.980146931, 0.99011325, 1.000079667, 1.010046292, 1.020030778] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:43.967" endtime="20201112 12:28:43.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.962" endtime="20201112 12:28:43.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.971" endtime="20201112 12:28:43.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.975" endtime="20201112 12:28:43.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.973" endtime="20201112 12:28:43.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.970" endtime="20201112 12:28:43.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.415" endtime="20201112 12:28:43.996"></status>
</kw>
<msg timestamp="20201112 12:28:43.996" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.004" endtime="20201112 12:28:46.127"></status>
</kw>
<msg timestamp="20201112 12:28:46.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64393595, 'wakeups': [64404153, 64414123, 64424123, 64434123, 64444123...</msg>
<status status="PASS" starttime="20201112 12:28:44.002" endtime="20201112 12:28:46.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64393595, 'wakeups': [64404153, 64414123, 64424123, 64434123, 64444123...</msg>
<status status="PASS" starttime="20201112 12:28:46.130" endtime="20201112 12:28:46.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.136" endtime="20201112 12:28:46.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.000" endtime="20201112 12:28:46.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.998" endtime="20201112 12:28:46.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.147" level="INFO">${RESULT} = {'wakeups': [64404153, 64414123, 64424123, 64434123, 64444123, 64454123, 64464123, 64474123, 64484123, 64494123, 64504123, 64514123, 64524123, 64534123, 64544123, 64554123, 64564123, 64574123, 6458412...</msg>
<status status="PASS" starttime="20201112 12:28:46.143" endtime="20201112 12:28:46.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.152" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:46.151" endtime="20201112 12:28:46.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.155" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:46.153" endtime="20201112 12:28:46.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.149" endtime="20201112 12:28:46.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.160" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:46.159" endtime="20201112 12:28:46.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.162" level="INFO">VALUE: 64393595</msg>
<status status="PASS" starttime="20201112 12:28:46.161" endtime="20201112 12:28:46.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.156" endtime="20201112 12:28:46.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.167" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:46.166" endtime="20201112 12:28:46.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.169" level="INFO">VALUE: [64404153, 64414123, 64424123, 64434123, 64444123, 64454123, 64464123, 64474123, 64484123, 64494123, 64504123, 64514123, 64524123, 64534123, 64544123, 64554123, 64564123, 64574123, 64584123, 64594123, 64604123, 64614123, 64624141, 64634123, 64644123, 64654141, 64664123, 64674123, 64684123, 64694123, 64704123, 64714123, 64724123, 64734123, 64744123, 64754123, 64764123, 64774123, 64784123, 64794123, 64804141, 64814123, 64824123, 64834123, 64844123, 64854141, 64864123, 64874123, 64884123, 64894123, 64904123, 64914141, 64924123, 64934123, 64944141, 64954123, 64964123, 64974123, 64984123, 64994123, 65004141, 65014123, 65024123, 65034123, 65044123, 65054123, 65064123, 65074123, 65084123, 65094123, 65104123, 65114123, 65124123, 65134123, 65144123, 65154123, 65164123, 65174141, 65184123, 65194141, 65204123, 65214141, 65224123, 65234123, 65244123, 65254123, 65264141, 65274123, 65284123, 65294123, 65304123, 65314123, 65324123, 65334123, 65344123, 65354123, 65364123, 65374123, 65384123, 65394123]</msg>
<status status="PASS" starttime="20201112 12:28:46.168" endtime="20201112 12:28:46.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.164" endtime="20201112 12:28:46.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.177" endtime="20201112 12:28:46.468"></status>
</kw>
<msg timestamp="20201112 12:28:46.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030375264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.175" endtime="20201112 12:28:46.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030375264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.472" endtime="20201112 12:28:46.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.479" endtime="20201112 12:28:46.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.173" endtime="20201112 12:28:46.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.171" endtime="20201112 12:28:46.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.505" level="INFO">${RESULT} = {'diff': [0, 0.010523167, 0.009936610999999998, 0.009967194000000006, 0.009966555999999994, 0.009966625000000007, 0.009966277999999995, 0.009966221999999997, 0.009966625000000007, 0.009967041999999995...</msg>
<status status="PASS" starttime="20201112 12:28:46.482" endtime="20201112 12:28:46.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.509" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:46.508" endtime="20201112 12:28:46.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.511" level="INFO">VALUE: 0.019852097</msg>
<status status="PASS" starttime="20201112 12:28:46.510" endtime="20201112 12:28:46.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.506" endtime="20201112 12:28:46.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.517" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:46.516" endtime="20201112 12:28:46.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.519" level="INFO">VALUE: [0.030375264, 0.040311875, 0.050279069, 0.060245625, 0.07021225, 0.080178528, 0.09014475, 0.100111375, 0.110078417, 0.120045097, 0.130011889, 0.139978528, 0.149945167, 0.159911694, 0.169878139, 0.179844681, 0.189811306, 0.199777986, 0.209744708, 0.219711292, 0.229677958, 0.239644444, 0.249628708, 0.259577736, 0.269544153, 0.279528875, 0.289477319, 0.299443875, 0.309410722, 0.319377181, 0.329343792, 0.339310472, 0.349277306, 0.359243903, 0.369210292, 0.379176403, 0.389142736, 0.399109167, 0.409075444, 0.419041583, 0.429025153, 0.438973625, 0.4489395, 0.458905514, 0.468871694, 0.478855361, 0.488802986, 0.498768444, 0.508733889, 0.518699847, 0.528666375, 0.538650528, 0.548598778, 0.558565056, 0.568548667, 0.578496722, 0.588463236, 0.598429181, 0.608394639, 0.618360056, 0.628343236, 0.638290806, 0.648256292, 0.658221083, 0.668185889, 0.678151083, 0.688116736, 0.698082278, 0.708047958, 0.718013431, 0.727979306, 0.737944986, 0.747910639, 0.757876333, 0.767841986, 0.777807264, 0.787772528, 0.797754931, 0.807702528, 0.817686167, 0.827633819, 0.837616875, 0.847564764, 0.857530181, 0.867495472, 0.877460708, 0.887443972, 0.897391431, 0.9073565, 0.917321222, 0.927285917, 0.937251167, 0.947216431, 0.957181653, 0.967147028, 0.977112931, 0.987078972, 0.997044431, 1.007010167, 1.016975861] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:46.518" endtime="20201112 12:28:46.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.513" endtime="20201112 12:28:46.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.522" endtime="20201112 12:28:46.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:46.526" endtime="20201112 12:28:46.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.524" endtime="20201112 12:28:46.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.521" endtime="20201112 12:28:46.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.996" endtime="20201112 12:28:46.546"></status>
</kw>
<msg timestamp="20201112 12:28:46.547" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.555" endtime="20201112 12:28:48.662"></status>
</kw>
<msg timestamp="20201112 12:28:48.663" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66954326, 'wakeups': [66964885, 66974854, 66984872, 66994854, 67004872...</msg>
<status status="PASS" starttime="20201112 12:28:46.553" endtime="20201112 12:28:48.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.665" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66954326, 'wakeups': [66964885, 66974854, 66984872, 66994854, 67004872...</msg>
<status status="PASS" starttime="20201112 12:28:48.664" endtime="20201112 12:28:48.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.666" endtime="20201112 12:28:48.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.551" endtime="20201112 12:28:48.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.549" endtime="20201112 12:28:48.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:48.672" level="INFO">${RESULT} = {'wakeups': [66964885, 66974854, 66984872, 66994854, 67004872, 67014854, 67024854, 67034854, 67044854, 67054854, 67064854, 67074854, 67084854, 67094872, 67104854, 67114854, 67124854, 67134854, 6714485...</msg>
<status status="PASS" starttime="20201112 12:28:48.670" endtime="20201112 12:28:48.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.676" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:48.675" endtime="20201112 12:28:48.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.678" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:48.677" endtime="20201112 12:28:48.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.672" endtime="20201112 12:28:48.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.683" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:48.682" endtime="20201112 12:28:48.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.685" level="INFO">VALUE: 66954326</msg>
<status status="PASS" starttime="20201112 12:28:48.684" endtime="20201112 12:28:48.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.679" endtime="20201112 12:28:48.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.690" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:48.689" endtime="20201112 12:28:48.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.692" level="INFO">VALUE: [66964885, 66974854, 66984872, 66994854, 67004872, 67014854, 67024854, 67034854, 67044854, 67054854, 67064854, 67074854, 67084854, 67094872, 67104854, 67114854, 67124854, 67134854, 67144854, 67154872, 67164854, 67174854, 67184854, 67194854, 67204854, 67214872, 67224872, 67234854, 67244854, 67254854, 67264854, 67274854, 67284854, 67294854, 67304854, 67314854, 67324854, 67334854, 67344854, 67354854, 67364872, 67374854, 67384854, 67394854, 67404872, 67414854, 67424854, 67434854, 67444854, 67454854, 67464872, 67474854, 67484854, 67494854, 67504854, 67514854, 67524854, 67534854, 67544854, 67554854, 67564854, 67574854, 67584854, 67594854, 67604854, 67614854, 67624854, 67634854, 67644854, 67654854, 67664854, 67674854, 67684854, 67694854, 67704854, 67714854, 67724854, 67734854, 67744854, 67754872, 67764854, 67774854, 67784854, 67794854, 67804854, 67814854, 67824854, 67834854, 67844854, 67854854, 67864854, 67874854, 67884854, 67894854, 67904854, 67914854, 67924854, 67934854, 67944854, 67954854]</msg>
<status status="PASS" starttime="20201112 12:28:48.691" endtime="20201112 12:28:48.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.686" endtime="20201112 12:28:48.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.700" endtime="20201112 12:28:48.990"></status>
</kw>
<msg timestamp="20201112 12:28:48.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020618264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031139014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:48.698" endtime="20201112 12:28:48.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020618264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031139014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:48.994" endtime="20201112 12:28:49.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.002" endtime="20201112 12:28:49.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.695" endtime="20201112 12:28:49.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.694" endtime="20201112 12:28:49.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:49.029" level="INFO">${RESULT} = {'diff': [0, 0.010520749999999999, 0.009933735999999999, 0.009982722, 0.009947084000000002, 0.009982138000000002, 0.009946653, 0.009964736000000002, 0.009964333999999991, 0.009964472000000002, 0.00996...</msg>
<status status="PASS" starttime="20201112 12:28:49.005" endtime="20201112 12:28:49.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.033" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:49.032" endtime="20201112 12:28:49.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.035" level="INFO">VALUE: 0.020618264</msg>
<status status="PASS" starttime="20201112 12:28:49.034" endtime="20201112 12:28:49.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.030" endtime="20201112 12:28:49.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.040" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:49.039" endtime="20201112 12:28:49.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.043" level="INFO">VALUE: [0.031139014, 0.04107275, 0.051055472, 0.061002556, 0.070984694, 0.080931347, 0.090896083, 0.100860417, 0.110824889, 0.120789347, 0.130754125, 0.140719, 0.150683681, 0.160666292, 0.170613056, 0.180577847, 0.190542903, 0.200508375, 0.210473625, 0.220456208, 0.230403111, 0.240367806, 0.250332889, 0.260299403, 0.270265486, 0.28024775, 0.290212347, 0.300158667, 0.310122736, 0.32008725, 0.330052889, 0.340018306, 0.349983667, 0.359948708, 0.369914028, 0.379880083, 0.389845556, 0.399810694, 0.409775847, 0.419740986, 0.429724208, 0.439671917, 0.449636847, 0.459601917, 0.469585486, 0.479533486, 0.489499111, 0.499465236, 0.509430667, 0.519396208, 0.529378847, 0.539325875, 0.549291042, 0.559256125, 0.569221361, 0.579186931, 0.589152347, 0.599117431, 0.609082333, 0.619047639, 0.629012875, 0.638977986, 0.648943806, 0.658908736, 0.668873778, 0.678839875, 0.688805625, 0.698770972, 0.708735792, 0.718700556, 0.728665458, 0.738631278, 0.748596569, 0.758562653, 0.768528417, 0.778493667, 0.788459167, 0.79842425, 0.808389903, 0.818373444, 0.828321194, 0.838286319, 0.848251639, 0.858216792, 0.868181556, 0.878146694, 0.888112083, 0.8980785, 0.908044514, 0.918010181, 0.927975597, 0.937940917, 0.947906139, 0.957871972, 0.967837597, 0.977802819, 0.987768292, 0.997733389, 1.007698431, 1.017662903] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:49.042" endtime="20201112 12:28:49.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.036" endtime="20201112 12:28:49.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.046" endtime="20201112 12:28:49.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:49.049" endtime="20201112 12:28:49.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.048" endtime="20201112 12:28:49.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.044" endtime="20201112 12:28:49.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.547" endtime="20201112 12:28:49.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.413" endtime="20201112 12:28:49.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.412" endtime="20201112 12:28:49.075"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:49.077" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.085" endtime="20201112 12:28:51.208"></status>
</kw>
<msg timestamp="20201112 12:28:51.209" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69493390, 'wakeups': [69504018, 69514007, 69524007, 69534007, 695440...</msg>
<status status="PASS" starttime="20201112 12:28:49.084" endtime="20201112 12:28:51.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.211" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69493390, 'wakeups': [69504018, 69514007, 69524007, 69534007, 695440...</msg>
<status status="PASS" starttime="20201112 12:28:51.210" endtime="20201112 12:28:51.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.212" endtime="20201112 12:28:51.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.081" endtime="20201112 12:28:51.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.079" endtime="20201112 12:28:51.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:51.218" level="INFO">${RESULT} = {'wakeups': [69504018, 69514007, 69524007, 69534007, 69544007, 69554007, 69564007, 69574007, 69584017, 69594007, 69604007, 69614007, 69624007, 69634007, 69644007, 69654007, 69664007, 69674007, 6968401...</msg>
<status status="PASS" starttime="20201112 12:28:51.216" endtime="20201112 12:28:51.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.222" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:51.221" endtime="20201112 12:28:51.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.224" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:51.223" endtime="20201112 12:28:51.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.219" endtime="20201112 12:28:51.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.230" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:51.229" endtime="20201112 12:28:51.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.232" level="INFO">VALUE: 69493390</msg>
<status status="PASS" starttime="20201112 12:28:51.231" endtime="20201112 12:28:51.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.225" endtime="20201112 12:28:51.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.237" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:51.236" endtime="20201112 12:28:51.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.239" level="INFO">VALUE: [69504018, 69514007, 69524007, 69534007, 69544007, 69554007, 69564007, 69574007, 69584017, 69594007, 69604007, 69614007, 69624007, 69634007, 69644007, 69654007, 69664007, 69674007, 69684017, 69694007, 69704017, 69714017, 69724007, 69734007, 69744007, 69754007, 69764007, 69774007, 69784007, 69794007, 69804007, 69814007, 69824007, 69834007, 69844017, 69854007, 69864007, 69874007, 69884007, 69894007, 69904007, 69914007, 69924007, 69934007, 69944007, 69954007, 69964007, 69974007, 69984007, 69994007, 70004007, 70014007, 70024007, 70034017, 70044007, 70054007, 70064007, 70074007, 70084007, 70094007, 70104017, 70114007, 70124007, 70134007, 70144007, 70154007, 70164007, 70174007, 70184007, 70194007, 70204007, 70214007, 70224007, 70234007, 70244007, 70254017, 70264007, 70274007, 70284007, 70294007, 70304007, 70314007, 70324007, 70334007, 70344007, 70354007, 70364007, 70374007, 70384007, 70394007, 70404007, 70414007, 70424007, 70434007, 70444007, 70454007, 70464007, 70474007, 70484017, 70494007]</msg>
<status status="PASS" starttime="20201112 12:28:51.238" endtime="20201112 12:28:51.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.233" endtime="20201112 12:28:51.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.246" endtime="20201112 12:28:51.537"></status>
</kw>
<msg timestamp="20201112 12:28:51.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027191639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037782986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.244" endtime="20201112 12:28:51.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027191639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037782986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.540" endtime="20201112 12:28:51.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.548" endtime="20201112 12:28:51.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.242" endtime="20201112 12:28:51.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.240" endtime="20201112 12:28:51.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:51.574" level="INFO">${RESULT} = {'diff': [0, 0.010591346999999997, 0.009954264000000004, 0.009965124999999998, 0.009966319000000001, 0.009965681000000004, 0.009965666999999997, 0.009965804999999994, 0.009965874999999999, 0.009976139...</msg>
<status status="PASS" starttime="20201112 12:28:51.551" endtime="20201112 12:28:51.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.578" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:51.577" endtime="20201112 12:28:51.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.580" level="INFO">VALUE: 0.027191639</msg>
<status status="PASS" starttime="20201112 12:28:51.579" endtime="20201112 12:28:51.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.575" endtime="20201112 12:28:51.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.586" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:51.585" endtime="20201112 12:28:51.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.588" level="INFO">VALUE: [0.037782986, 0.04773725, 0.057702375, 0.067668694, 0.077634375, 0.087600042, 0.097565847, 0.107531722, 0.117507861, 0.127464, 0.137430361, 0.147395972, 0.157361653, 0.167327167, 0.177293222, 0.187259319, 0.197225597, 0.207191333, 0.217167444, 0.227122806, 0.237098736, 0.247065222, 0.257021778, 0.266987444, 0.276953194, 0.286919278, 0.296885458, 0.306851403, 0.316817708, 0.326783333, 0.336748792, 0.346714708, 0.356680653, 0.366646667, 0.376622181, 0.386577889, 0.396543833, 0.406509639, 0.416474931, 0.426440583, 0.436406319, 0.446372125, 0.456338181, 0.466303556, 0.476269306, 0.48623475, 0.496200139, 0.506166042, 0.516131806, 0.52609725, 0.536061958, 0.546026986, 0.555992056, 0.565967153, 0.575922458, 0.585887986, 0.595853653, 0.605819625, 0.615785917, 0.625752333, 0.635728639, 0.645684167, 0.655649931, 0.665615736, 0.675581944, 0.685547903, 0.695513986, 0.70547975, 0.715445556, 0.725411597, 0.735377458, 0.745343181, 0.755309167, 0.765275069, 0.775240681, 0.785216153, 0.795171653, 0.805137097, 0.815102361, 0.825067264, 0.835032306, 0.844997139, 0.854962833, 0.864929056, 0.87489525, 0.884861653, 0.894828236, 0.90479425, 0.914760042, 0.924726264, 0.934692528, 0.944658986, 0.954625056, 0.964591653, 0.974557847, 0.984523681, 0.994489819, 1.004455889, 1.014432056, 1.024388403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:51.587" endtime="20201112 12:28:51.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.582" endtime="20201112 12:28:51.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.591" endtime="20201112 12:28:51.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:51.595" endtime="20201112 12:28:51.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.593" endtime="20201112 12:28:51.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.590" endtime="20201112 12:28:51.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.078" endtime="20201112 12:28:51.615"></status>
</kw>
<msg timestamp="20201112 12:28:51.616" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.624" endtime="20201112 12:28:53.747"></status>
</kw>
<msg timestamp="20201112 12:28:53.748" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72040513, 'wakeups': [72051141, 72061130, 72071130, 72081130, 720911...</msg>
<status status="PASS" starttime="20201112 12:28:51.622" endtime="20201112 12:28:53.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.754" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72040513, 'wakeups': [72051141, 72061130, 72071130, 72081130, 720911...</msg>
<status status="PASS" starttime="20201112 12:28:53.750" endtime="20201112 12:28:53.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.757" endtime="20201112 12:28:53.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.620" endtime="20201112 12:28:53.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.618" endtime="20201112 12:28:53.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:53.763" level="INFO">${RESULT} = {'wakeups': [72051141, 72061130, 72071130, 72081130, 72091140, 72101130, 72111130, 72121140, 72131130, 72141130, 72151130, 72161140, 72171140, 72181130, 72191130, 72201130, 72211130, 72221130, 7223113...</msg>
<status status="PASS" starttime="20201112 12:28:53.761" endtime="20201112 12:28:53.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.768" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:53.767" endtime="20201112 12:28:53.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.770" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:53.769" endtime="20201112 12:28:53.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.764" endtime="20201112 12:28:53.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.774" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:53.773" endtime="20201112 12:28:53.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.776" level="INFO">VALUE: 72040513</msg>
<status status="PASS" starttime="20201112 12:28:53.775" endtime="20201112 12:28:53.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.771" endtime="20201112 12:28:53.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.782" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:53.781" endtime="20201112 12:28:53.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.784" level="INFO">VALUE: [72051141, 72061130, 72071130, 72081130, 72091140, 72101130, 72111130, 72121140, 72131130, 72141130, 72151130, 72161140, 72171140, 72181130, 72191130, 72201130, 72211130, 72221130, 72231130, 72241140, 72251130, 72261130, 72271130, 72281130, 72291130, 72301130, 72311130, 72321130, 72331130, 72341130, 72351130, 72361130, 72371130, 72381130, 72391130, 72401130, 72411130, 72421140, 72431140, 72441140, 72451130, 72461130, 72471130, 72481130, 72491130, 72501130, 72511130, 72521130, 72531130, 72541130, 72551130, 72561130, 72571130, 72581130, 72591130, 72601130, 72611130, 72621130, 72631130, 72641130, 72651130, 72661130, 72671130, 72681130, 72691130, 72701130, 72711130, 72721130, 72731130, 72741130, 72751130, 72761130, 72771130, 72781130, 72791130, 72801130, 72811130, 72821130, 72831130, 72841130, 72851130, 72861130, 72871130, 72881130, 72891130, 72901130, 72911130, 72921130, 72931130, 72941130, 72951130, 72961130, 72971130, 72981130, 72991130, 73001130, 73011130, 73021130, 73031130, 73041130]</msg>
<status status="PASS" starttime="20201112 12:28:53.783" endtime="20201112 12:28:53.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.778" endtime="20201112 12:28:53.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.792" endtime="20201112 12:28:54.083"></status>
</kw>
<msg timestamp="20201112 12:28:54.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01978125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030370208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:53.790" endtime="20201112 12:28:54.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01978125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030370208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:54.087" endtime="20201112 12:28:54.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.095" endtime="20201112 12:28:54.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.787" endtime="20201112 12:28:54.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.785" endtime="20201112 12:28:54.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:54.121" level="INFO">${RESULT} = {'diff': [0, 0.010588957999999999, 0.009951763999999998, 0.009963277999999999, 0.009962222000000007, 0.009972013999999994, 0.009952625000000007, 0.009962874999999996, 0.009973152999999998, 0.009953819...</msg>
<status status="PASS" starttime="20201112 12:28:54.098" endtime="20201112 12:28:54.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.131" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:54.130" endtime="20201112 12:28:54.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.133" level="INFO">VALUE: 0.01978125</msg>
<status status="PASS" starttime="20201112 12:28:54.132" endtime="20201112 12:28:54.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.127" endtime="20201112 12:28:54.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.138" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:54.137" endtime="20201112 12:28:54.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.140" level="INFO">VALUE: [0.030370208, 0.040321972, 0.05028525, 0.060247472, 0.070219486, 0.080172111, 0.090134986, 0.100108139, 0.110061958, 0.120025403, 0.1299885, 0.139961194, 0.149923986, 0.159876167, 0.169839389, 0.179802625, 0.189766306, 0.199729736, 0.209692375, 0.219666153, 0.229620375, 0.23958575, 0.249551069, 0.259515917, 0.269480208, 0.279445278, 0.289409056, 0.29937325, 0.309337542, 0.319301917, 0.32926675, 0.33923175, 0.349197, 0.359161292, 0.369125389, 0.379089264, 0.389053306, 0.399027556, 0.408992097, 0.418956153, 0.428910347, 0.438874458, 0.448838472, 0.458802361, 0.468766333, 0.478730306, 0.488694167, 0.498658458, 0.508622292, 0.518586292, 0.528550431, 0.538514778, 0.548478264, 0.55844175, 0.56840575, 0.578369833, 0.588333806, 0.598297889, 0.608261111, 0.618224736, 0.628188167, 0.638152194, 0.648115486, 0.658079042, 0.668043042, 0.678007111, 0.687971667, 0.697935764, 0.707899833, 0.717864097, 0.727828389, 0.737792528, 0.747756472, 0.757720167, 0.767684292, 0.777648569, 0.787612736, 0.797577028, 0.807541444, 0.817506153, 0.827470681, 0.837434972, 0.847399083, 0.857363125, 0.867327444, 0.877291083, 0.887254986, 0.897218875, 0.907182931, 0.917147653, 0.927112292, 0.937077278, 0.947041639, 0.957005819, 0.966969667, 0.976933653, 0.98689775, 0.996861278, 1.006825167, 1.016789153] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:54.139" endtime="20201112 12:28:54.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.134" endtime="20201112 12:28:54.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.143" endtime="20201112 12:28:54.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:54.146" endtime="20201112 12:28:54.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.145" endtime="20201112 12:28:54.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.141" endtime="20201112 12:28:54.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.616" endtime="20201112 12:28:54.167"></status>
</kw>
<msg timestamp="20201112 12:28:54.167" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.176" endtime="20201112 12:28:56.299"></status>
</kw>
<msg timestamp="20201112 12:28:56.300" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74602696, 'wakeups': [74613324, 74623313, 74633313, 74643313, 746533...</msg>
<status status="PASS" starttime="20201112 12:28:54.174" endtime="20201112 12:28:56.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.306" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74602696, 'wakeups': [74613324, 74623313, 74633313, 74643313, 746533...</msg>
<status status="PASS" starttime="20201112 12:28:56.302" endtime="20201112 12:28:56.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.308" endtime="20201112 12:28:56.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.171" endtime="20201112 12:28:56.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.169" endtime="20201112 12:28:56.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:56.317" level="INFO">${RESULT} = {'wakeups': [74613324, 74623313, 74633313, 74643313, 74653313, 74663313, 74673313, 74683313, 74693313, 74703313, 74713313, 74723313, 74733313, 74743313, 74753313, 74763313, 74773313, 74783313, 7479331...</msg>
<status status="PASS" starttime="20201112 12:28:56.315" endtime="20201112 12:28:56.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.321" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:56.320" endtime="20201112 12:28:56.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.323" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:56.322" endtime="20201112 12:28:56.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.318" endtime="20201112 12:28:56.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.328" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:56.327" endtime="20201112 12:28:56.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.330" level="INFO">VALUE: 74602696</msg>
<status status="PASS" starttime="20201112 12:28:56.329" endtime="20201112 12:28:56.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.325" endtime="20201112 12:28:56.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.335" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:56.334" endtime="20201112 12:28:56.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.337" level="INFO">VALUE: [74613324, 74623313, 74633313, 74643313, 74653313, 74663313, 74673313, 74683313, 74693313, 74703313, 74713313, 74723313, 74733313, 74743313, 74753313, 74763313, 74773313, 74783313, 74793313, 74803313, 74813313, 74823313, 74833323, 74843323, 74853323, 74863313, 74873313, 74883313, 74893313, 74903313, 74913313, 74923313, 74933313, 74943313, 74953313, 74963313, 74973313, 74983313, 74993313, 75003313, 75013313, 75023313, 75033313, 75043313, 75053313, 75063313, 75073313, 75083313, 75093313, 75103313, 75113313, 75123313, 75133313, 75143313, 75153313, 75163313, 75173313, 75183313, 75193313, 75203313, 75213323, 75223313, 75233313, 75243313, 75253313, 75263313, 75273313, 75283313, 75293313, 75303313, 75313313, 75323313, 75333313, 75343313, 75353313, 75363313, 75373313, 75383313, 75393313, 75403313, 75413313, 75423313, 75433313, 75443313, 75453313, 75463313, 75473313, 75483313, 75493313, 75503313, 75513313, 75523313, 75533323, 75543313, 75553323, 75563313, 75573323, 75583313, 75593313, 75603313]</msg>
<status status="PASS" starttime="20201112 12:28:56.336" endtime="20201112 12:28:56.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.332" endtime="20201112 12:28:56.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.345" endtime="20201112 12:28:56.636"></status>
</kw>
<msg timestamp="20201112 12:28:56.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020772083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03136225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:56.343" endtime="20201112 12:28:56.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020772083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03136225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:56.640" endtime="20201112 12:28:56.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.647" endtime="20201112 12:28:56.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.341" endtime="20201112 12:28:56.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.339" endtime="20201112 12:28:56.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:56.674" level="INFO">${RESULT} = {'diff': [0, 0.010590167000000001, 0.009953263999999996, 0.009964528, 0.009964250000000001, 0.009963902000000004, 0.009963583999999998, 0.009963346999999997, 0.009963472000000001, 0.009963402999999996...</msg>
<status status="PASS" starttime="20201112 12:28:56.650" endtime="20201112 12:28:56.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.678" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:56.677" endtime="20201112 12:28:56.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.680" level="INFO">VALUE: 0.020772083</msg>
<status status="PASS" starttime="20201112 12:28:56.679" endtime="20201112 12:28:56.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.674" endtime="20201112 12:28:56.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.685" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:56.684" endtime="20201112 12:28:56.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.688" level="INFO">VALUE: [0.03136225, 0.041315514, 0.051280042, 0.061244292, 0.071208194, 0.081171778, 0.091135125, 0.101098597, 0.111062, 0.121025528, 0.130989306, 0.140952778, 0.150916444, 0.160879861, 0.170843306, 0.180807167, 0.190771069, 0.200734833, 0.210698708, 0.220662431, 0.230626958, 0.240591319, 0.250565625, 0.260530014, 0.270494444, 0.280448861, 0.290413236, 0.300376958, 0.310341347, 0.320305903, 0.330270222, 0.340234806, 0.350199306, 0.3601635, 0.370128125, 0.380092278, 0.390056514, 0.400020597, 0.409985389, 0.419950028, 0.429914542, 0.439879056, 0.449843444, 0.459808139, 0.469773042, 0.479737514, 0.489702528, 0.499667042, 0.509631472, 0.519596, 0.529560528, 0.539525, 0.549488875, 0.559453222, 0.569417653, 0.57938225, 0.589347097, 0.599311292, 0.609275736, 0.619240444, 0.629214736, 0.639169431, 0.649133819, 0.659098181, 0.669063319, 0.679028306, 0.6889925, 0.698956806, 0.708920625, 0.718884792, 0.728849111, 0.738813611, 0.748778222, 0.758742583, 0.768707111, 0.778671861, 0.78863625, 0.79859975, 0.808563347, 0.818527625, 0.828492028, 0.838456111, 0.848419889, 0.858384056, 0.868348472, 0.878313222, 0.888277458, 0.898242014, 0.908206639, 0.918171722, 0.928136861, 0.938102153, 0.948076944, 0.958032056, 0.968007028, 0.977962056, 0.98793675, 0.997891486, 1.007856056, 1.017820889] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:56.687" endtime="20201112 12:28:56.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.681" endtime="20201112 12:28:56.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.691" endtime="20201112 12:28:56.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:56.694" endtime="20201112 12:28:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.693" endtime="20201112 12:28:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.689" endtime="20201112 12:28:56.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.168" endtime="20201112 12:28:56.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.076" endtime="20201112 12:28:56.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.075" endtime="20201112 12:28:56.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.241" endtime="20201112 12:28:56.716"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:40.173" endtime="20201112 12:28:56.717" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:27:38.725" endtime="20201112 12:28:56.720"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:25:48.974" endtime="20201112 12:28:56.737"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_saml10-xpro</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
