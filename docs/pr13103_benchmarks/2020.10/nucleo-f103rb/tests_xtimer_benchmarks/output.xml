<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 12:26:20.754" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.986" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:22.002" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:23.831" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:21.982" endtime="20201112 12:26:23.832"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.837" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:23.834" endtime="20201112 12:26:23.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.979" endtime="20201112 12:26:23.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.844" endtime="20201112 12:26:24.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.842" endtime="20201112 12:26:24.177"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.209" endtime="20201112 12:26:24.231"></status>
</kw>
<msg timestamp="20201112 12:26:24.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201112 12:26:24.206" endtime="20201112 12:26:24.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.239" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201112 12:26:24.235" endtime="20201112 12:26:24.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.246" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:24.242" endtime="20201112 12:26:24.247"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:24.199" endtime="20201112 12:26:24.249"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:24.192" endtime="20201112 12:26:24.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.189" endtime="20201112 12:26:24.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:24.261" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:24.259" endtime="20201112 12:26:24.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.254" endtime="20201112 12:26:24.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.188" endtime="20201112 12:26:24.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.186" endtime="20201112 12:26:24.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.266" endtime="20201112 12:26:24.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.182" endtime="20201112 12:26:24.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.273" endtime="20201112 12:26:24.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.178" endtime="20201112 12:26:24.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.975" endtime="20201112 12:26:24.279"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.294" endtime="20201112 12:26:24.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.290" endtime="20201112 12:26:24.317"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.354" endtime="20201112 12:26:24.372"></status>
</kw>
<msg timestamp="20201112 12:26:24.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.350" endtime="20201112 12:26:24.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.376" endtime="20201112 12:26:24.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.387" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:24.382" endtime="20201112 12:26:24.387"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:24.343" endtime="20201112 12:26:24.389"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:24.336" endtime="20201112 12:26:24.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.333" endtime="20201112 12:26:24.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:24.399" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:24.398" endtime="20201112 12:26:24.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.394" endtime="20201112 12:26:24.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.331" endtime="20201112 12:26:24.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.328" endtime="20201112 12:26:24.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.403" endtime="20201112 12:26:24.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.324" endtime="20201112 12:26:24.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.319" endtime="20201112 12:26:24.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.287" endtime="20201112 12:26:24.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.429" endtime="20201112 12:26:24.442"></status>
</kw>
<msg timestamp="20201112 12:26:24.443" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.425" endtime="20201112 12:26:24.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.449" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.445" endtime="20201112 12:26:24.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.451" endtime="20201112 12:26:24.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.418" endtime="20201112 12:26:24.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.413" endtime="20201112 12:26:24.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.469" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:26:24.467" endtime="20201112 12:26:24.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.474" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:26:24.471" endtime="20201112 12:26:24.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.460" endtime="20201112 12:26:24.476"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:24.280" endtime="20201112 12:26:24.478" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:21.016" endtime="20201112 12:26:24.485"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.622" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:24.638" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:26.563" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:24.618" endtime="20201112 12:26:26.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.570" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:26.566" endtime="20201112 12:26:26.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.615" endtime="20201112 12:26:26.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.577" endtime="20201112 12:26:26.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.574" endtime="20201112 12:26:26.910"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.940" endtime="20201112 12:26:26.963"></status>
</kw>
<msg timestamp="20201112 12:26:26.964" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.937" endtime="20201112 12:26:26.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.970" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.966" endtime="20201112 12:26:26.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.977" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:26.973" endtime="20201112 12:26:26.978"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:26.930" endtime="20201112 12:26:26.980"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:26.925" endtime="20201112 12:26:26.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.922" endtime="20201112 12:26:26.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:26.990" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:26.989" endtime="20201112 12:26:26.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.984" endtime="20201112 12:26:26.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.920" endtime="20201112 12:26:26.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.918" endtime="20201112 12:26:26.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.994" endtime="20201112 12:26:26.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.915" endtime="20201112 12:26:26.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.001" endtime="20201112 12:26:27.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.912" endtime="20201112 12:26:27.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.612" endtime="20201112 12:26:27.007"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.021" endtime="20201112 12:26:27.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.017" endtime="20201112 12:26:27.045"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.142" endtime="20201112 12:26:27.161"></status>
</kw>
<msg timestamp="20201112 12:26:27.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.138" endtime="20201112 12:26:27.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.164" endtime="20201112 12:26:27.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.175" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:27.171" endtime="20201112 12:26:27.176"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:27.131" endtime="20201112 12:26:27.178"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:27.124" endtime="20201112 12:26:27.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.059" endtime="20201112 12:26:27.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:27.188" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:27.187" endtime="20201112 12:26:27.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.182" endtime="20201112 12:26:27.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.057" endtime="20201112 12:26:27.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.055" endtime="20201112 12:26:27.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.192" endtime="20201112 12:26:27.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.051" endtime="20201112 12:26:27.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.046" endtime="20201112 12:26:27.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.014" endtime="20201112 12:26:27.199"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:27.204" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.224" endtime="20201112 12:26:27.238"></status>
</kw>
<msg timestamp="20201112 12:26:27.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.221" endtime="20201112 12:26:27.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.245" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.241" endtime="20201112 12:26:27.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.248" endtime="20201112 12:26:27.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.213" endtime="20201112 12:26:27.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.208" endtime="20201112 12:26:27.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.273" endtime="20201112 12:26:27.576"></status>
</kw>
<msg timestamp="20201112 12:26:27.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193758931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.193771458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.270" endtime="20201112 12:26:27.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193758931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.193771458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.579" endtime="20201112 12:26:27.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.585" endtime="20201112 12:26:27.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.262" endtime="20201112 12:26:27.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.257" endtime="20201112 12:26:27.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.593" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:27.592" endtime="20201112 12:26:27.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.597" level="INFO">VALUE: [{'time': 0.193758931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.193771458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527000000012167e-05, 'source_diff': 1.2527000000012167e-05}, {'time': 0.193779167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708999999994637e-06, 'source_diff': 7.708999999994637e-06}, {'time': 0.193787097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929999999989334e-06, 'source_diff': 7.929999999989334e-06}, {'time': 0.193793361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.193798403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000010649e-06, 'source_diff': 5.042000000010649e-06}, {'time': 0.193812792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.193824667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1874999999994529e-05, 'source_diff': 1.1874999999994529e-05}, {'time': 0.193827181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999812535e-06, 'source_diff': 2.5139999999812535e-06}, {'time': 0.193842403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000009173e-05, 'source_diff': 1.5222000000009173e-05}, {'time': 0.193852625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.193863931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1305999999988714e-05, 'source_diff': 1.1305999999988714e-05}, {'time': 0.193878069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4137999999996875e-05, 'source_diff': 1.4137999999996875e-05}, {'time': 0.193883139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.070000000023667e-06, 'source_diff': 5.070000000023667e-06}, {'time': 0.193890389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.249999999986434e-06, 'source_diff': 7.249999999986434e-06}, {'time': 0.193904986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4597000000005078e-05, 'source_diff': 1.4597000000005078e-05}, {'time': 0.193918333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3346999999996889e-05, 'source_diff': 1.3346999999996889e-05}, {'time': 0.193921486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1530000000057345e-06, 'source_diff': 3.1530000000057345e-06}, {'time': 0.193926917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.193941319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4401999999996695e-05, 'source_diff': 1.4401999999996695e-05}, {'time': 0.193949653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.193960153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.193962625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4720000000033604e-06, 'source_diff': 2.4720000000033604e-06}, {'time': 0.193973875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999990434e-05, 'source_diff': 1.1249999999990434e-05}, {'time': 0.193984111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.193987847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.193990375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.193998292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.194006889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.194022278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5389000000004538e-05, 'source_diff': 1.5389000000004538e-05}, {'time': 0.194034181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000007546e-05, 'source_diff': 1.1903000000007546e-05}, {'time': 0.194038139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.194052125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3985999999993615e-05, 'source_diff': 1.3985999999993615e-05}, {'time': 0.194054861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.194068819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000008353e-05, 'source_diff': 1.3958000000008353e-05}, {'time': 0.194081139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.23200000000101e-05, 'source_diff': 1.23200000000101e-05}, {'time': 0.194095736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4596999999977323e-05, 'source_diff': 1.4596999999977323e-05}, {'time': 0.194102042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.306000000011469e-06, 'source_diff': 6.306000000011469e-06}, {'time': 0.19411575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3708000000001164e-05, 'source_diff': 1.3708000000001164e-05}, {'time': 0.194120347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.194132681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2334000000002732e-05, 'source_diff': 1.2334000000002732e-05}, {'time': 0.194140167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.19414625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999900686e-06, 'source_diff': 6.0829999999900686e-06}, {'time': 0.194157097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000008267e-05, 'source_diff': 1.0847000000008267e-05}, {'time': 0.194171944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4847000000012267e-05, 'source_diff': 1.4847000000012267e-05}, {'time': 0.194185444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.194195667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.022299999997589e-05, 'source_diff': 1.022299999997589e-05}, {'time': 0.194202972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3050000000129955e-06, 'source_diff': 7.3050000000129955e-06}, {'time': 0.194210917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000009195e-06, 'source_diff': 7.945000000009195e-06}, {'time': 0.194219667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:27.594" endtime="20201112 12:26:27.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.589" endtime="20201112 12:26:27.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:27.613" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.599" endtime="20201112 12:26:27.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.617" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:27.616" endtime="20201112 12:26:27.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.621" level="INFO">VALUE: {'sourcetime': [0.193758931, 0.193771458, 0.193779167, 0.193787097, 0.193793361, 0.193798403, 0.193812792, 0.193824667, 0.193827181, 0.193842403, 0.193852625, 0.193863931, 0.193878069, 0.193883139, 0.193890389, 0.193904986, 0.193918333, 0.193921486, 0.193926917, 0.193941319, 0.193949653, 0.193960153, 0.193962625, 0.193973875, 0.193984111, 0.193987847, 0.193990375, 0.193998292, 0.194006889, 0.194022278, 0.194034181, 0.194038139, 0.194052125, 0.194054861, 0.194068819, 0.194081139, 0.194095736, 0.194102042, 0.19411575, 0.194120347, 0.194132681, 0.194140167, 0.19414625, 0.194157097, 0.194171944, 0.194185444, 0.194195667, 0.194202972, 0.194210917, 0.194219667], 'eventsource_diff': [0, 1.2527000000012167e-05, 7.708999999994637e-06, 7.929999999989334e-06, 6.2640000000058205e-06, 5.042000000010649e-06, 1.4389000000003538e-05, 1.1874999999994529e-05, 2.5139999999812535e-06, 1.5222000000009173e-05, 1.0222000000004172e-05, 1.1305999999988714e-05, 1.4137999999996875e-05, 5.070000000023667e-06, 7.249999999986434e-06, 1.4597000000005078e-05, 1.3346999999996889e-05, 3.1530000000057345e-06, 5.431000000000186e-06, 1.4401999999996695e-05, 8.333999999998731e-06, 1.0499999999996623e-05, 2.4720000000033604e-06, 1.1249999999990434e-05, 1.0235999999996803e-05, 3.7360000000041804e-06, 2.52800000000164e-06, 7.916999999996177e-06, 8.596999999999078e-06, 1.5389000000004538e-05, 1.1903000000007546e-05, 3.957999999998352e-06, 1.3985999999993615e-05, 2.7360000000031803e-06, 1.3958000000008353e-05, 1.23200000000101e-05, 1.4596999999977323e-05, 6.306000000011469e-06, 1.3708000000001164e-05, 4.596999999995077e-06, 1.2334000000002732e-05, 7.486000000000992e-06, 6.0829999999900686e-06, 1.0847000000008267e-05, 1.4847000000012267e-05, 1.3499999999999623e-05, 1.022299999997589e-05, 7.3050000000129955e-06, 7.945000000009195e-06, 8.750000000001812e-06], 'diff': [0, 1.2527000000012167e-05, 7.708999999994637e-06, 7.929999999989334e-06, 6.2640000000058205e-06, 5.042000000010649e-06, 1.4389000000003538e-05, 1.1874999999994529e-05, 2.5139999999812535e-06, 1.5222000000009173e-05, 1.0222000000004172e-05, 1.1305999999988714e-05, 1.4137999999996875e-05, 5.070000000023667e-06, 7.249999999986434e-06, 1.4597000000005078e-05, 1.3346999999996889e-05, 3.1530000000057345e-06, 5.431000000000186e-06, 1.4401999999996695e-05, 8.333999999998731e-06, 1.0499999999996623e-05, 2.4720000000033604e-06, 1.1249999999990434e-05, 1.0235999999996803e-05, 3.7360000000041804e-06, 2.52800000000164e-06, 7.916999999996177e-06, 8.596999999999078e-06, 1.5389000000004538e-05, 1.1903000000007546e-05, 3.957999999998352e-06, 1.3985999999993615e-05, 2.7360000000031803e-06, 1.3958000000008353e-05, 1.23200000000101e-05, 1.4596999999977323e-05, 6.306000000011469e-06, 1.3708000000001164e-05, 4.596999999995077e-06, 1.2334000000002732e-05, 7.486000000000992e-06, 6.0829999999900686e-06, 1.0847000000008267e-05, 1.4847000000012267e-05, 1.3499999999999623e-05, 1.022299999997589e-05, 7.3050000000129955e-06, 7.945000000009195e-06, 8.750000000001812e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:27.619" endtime="20201112 12:26:27.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.614" endtime="20201112 12:26:27.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.626" level="INFO">${RESULT} = [{'time': 0.193771458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527000000012167e-05, 'source_diff': 1.2527000000012167e-05}, {'time': 0.193787097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.623" endtime="20201112 12:26:27.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:27.635" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.627" endtime="20201112 12:26:27.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.640" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:27.639" endtime="20201112 12:26:27.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.643" level="INFO">VALUE: [1.2527000000012167e-05, 7.929999999989334e-06, 5.042000000010649e-06, 1.1874999999994529e-05, 1.5222000000009173e-05, 1.1305999999988714e-05, 5.070000000023667e-06, 1.4597000000005078e-05, 3.1530000000057345e-06, 1.4401999999996695e-05, 1.0499999999996623e-05, 1.1249999999990434e-05, 3.7360000000041804e-06, 7.916999999996177e-06, 1.5389000000004538e-05, 3.957999999998352e-06, 2.7360000000031803e-06, 1.23200000000101e-05, 6.306000000011469e-06, 4.596999999995077e-06, 7.486000000000992e-06, 1.0847000000008267e-05, 1.3499999999999623e-05, 7.3050000000129955e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201112 12:26:27.641" endtime="20201112 12:26:27.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.636" endtime="20201112 12:26:27.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.647" endtime="20201112 12:26:27.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.651" endtime="20201112 12:26:27.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.649" endtime="20201112 12:26:27.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.645" endtime="20201112 12:26:27.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.205" endtime="20201112 12:26:27.672"></status>
</kw>
<msg timestamp="20201112 12:26:27.673" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.682" endtime="20201112 12:26:27.694"></status>
</kw>
<msg timestamp="20201112 12:26:27.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.681" endtime="20201112 12:26:27.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.697" endtime="20201112 12:26:27.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.704" endtime="20201112 12:26:27.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.677" endtime="20201112 12:26:27.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.675" endtime="20201112 12:26:27.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.729" endtime="20201112 12:26:28.047"></status>
</kw>
<msg timestamp="20201112 12:26:28.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021481556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021493444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.725" endtime="20201112 12:26:28.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021481556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021493444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.053" endtime="20201112 12:26:28.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.066" endtime="20201112 12:26:28.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.718" endtime="20201112 12:26:28.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.713" endtime="20201112 12:26:28.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.083" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:28.081" endtime="20201112 12:26:28.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.091" level="INFO">VALUE: [{'time': 0.021481556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021493444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1888000000001564e-05, 'source_diff': 1.1888000000001564e-05}, {'time': 0.021507222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3777999999999013e-05, 'source_diff': 1.3777999999999013e-05}, {'time': 0.021509931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.021522653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.021527681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.021530194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.512999999999127e-06, 'source_diff': 2.512999999999127e-06}, {'time': 0.021538153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.959000000001826e-06, 'source_diff': 7.959000000001826e-06}, {'time': 0.021541458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.304999999998587e-06, 'source_diff': 3.304999999998587e-06}, {'time': 0.021548139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.021563181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5041999999999833e-05, 'source_diff': 1.5041999999999833e-05}, {'time': 0.021567764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.021577597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.021589681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083999999999012e-05, 'source_diff': 1.2083999999999012e-05}, {'time': 0.021603639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.021616361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.021621167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.021633056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.021639944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888000000000033e-06, 'source_diff': 6.888000000000033e-06}, {'time': 0.021645167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.021654972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.021667486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.021670875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.021684417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3542000000001803e-05, 'source_diff': 1.3542000000001803e-05}, {'time': 0.021687125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.021702569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5443999999999874e-05, 'source_diff': 1.5443999999999874e-05}, {'time': 0.021714667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2097999999998582e-05, 'source_diff': 1.2097999999998582e-05}, {'time': 0.021717389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.021720931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.021736153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.021739292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.021745556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.021758903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.0217685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.021770847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.021783528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.021787514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.021799042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.021814208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5166000000000485e-05, 'source_diff': 1.5166000000000485e-05}, {'time': 0.021828819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}, {'time': 0.021839667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.021847181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.021850514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.021861778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.021872431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0653000000002827e-05, 'source_diff': 1.0653000000002827e-05}, {'time': 0.021884514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2082999999999539e-05, 'source_diff': 1.2082999999999539e-05}, {'time': 0.021888069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.021902736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.021906486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.021920833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4347000000001359e-05, 'source_diff': 1.4347000000001359e-05}]</msg>
<status status="PASS" starttime="20201112 12:26:28.085" endtime="20201112 12:26:28.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.074" endtime="20201112 12:26:28.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:28.126" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:28.096" endtime="20201112 12:26:28.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.136" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:28.133" endtime="20201112 12:26:28.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.144" level="INFO">VALUE: {'sourcetime': [0.021481556, 0.021493444, 0.021507222, 0.021509931, 0.021522653, 0.021527681, 0.021530194, 0.021538153, 0.021541458, 0.021548139, 0.021563181, 0.021567764, 0.021577597, 0.021589681, 0.021603639, 0.021616361, 0.021621167, 0.021633056, 0.021639944, 0.021645167, 0.021654972, 0.021667486, 0.021670875, 0.021684417, 0.021687125, 0.021702569, 0.021714667, 0.021717389, 0.021720931, 0.021736153, 0.021739292, 0.021745556, 0.021758903, 0.0217685, 0.021770847, 0.021783528, 0.021787514, 0.021799042, 0.021814208, 0.021828819, 0.021839667, 0.021847181, 0.021850514, 0.021861778, 0.021872431, 0.021884514, 0.021888069, 0.021902736, 0.021906486, 0.021920833], 'eventsource_diff': [0, 1.1888000000001564e-05, 1.3777999999999013e-05, 2.7090000000000447e-06, 1.2721999999999734e-05, 5.028000000000671e-06, 2.512999999999127e-06, 7.959000000001826e-06, 3.304999999998587e-06, 6.681000000001436e-06, 1.5041999999999833e-05, 4.582999999998977e-06, 9.833000000000758e-06, 1.2083999999999012e-05, 1.3958000000001414e-05, 1.2721999999999734e-05, 4.805999999999561e-06, 1.1889000000001038e-05, 6.888000000000033e-06, 5.222999999998645e-06, 9.805000000001618e-06, 1.2513999999998193e-05, 3.3889999999994758e-06, 1.3542000000001803e-05, 2.708000000000571e-06, 1.5443999999999874e-05, 1.2097999999998582e-05, 2.722000000000141e-06, 3.5419999999987406e-06, 1.5222000000002234e-05, 3.1389999999992257e-06, 6.2639999999988816e-06, 1.3347000000000359e-05, 9.597000000000078e-06, 2.346999999999766e-06, 1.2681000000000497e-05, 3.986000000000961e-06, 1.1528000000000233e-05, 1.5166000000000485e-05, 1.461099999999771e-05, 1.0848000000000801e-05, 7.514000000000132e-06, 3.333000000001196e-06, 1.1263999999996943e-05, 1.0653000000002827e-05, 1.2082999999999539e-05, 3.554999999998837e-06, 1.4666999999999458e-05, 3.750000000000281e-06, 1.4347000000001359e-05], 'diff': [0, 1.1888000000001564e-05, 1.3777999999999013e-05, 2.7090000000000447e-06, 1.2721999999999734e-05, 5.028000000000671e-06, 2.512999999999127e-06, 7.959000000001826e-06, 3.304999999998587e-06, 6.681000000001436e-06, 1.5041999999999833e-05, 4.582999999998977e-06, 9.833000000000758e-06, 1.2083999999999012e-05, 1.3958000000001414e-05, 1.2721999999999734e-05, 4.805999999999561e-06, 1.1889000000001038e-05, 6.888000000000033e-06, 5.222999999998645e-06, 9.805000000001618e-06, 1.2513999999998193e-05, 3.3889999999994758e-06, 1.3542000000001803e-05, 2.708000000000571e-06, 1.5443999999999874e-05, 1.2097999999998582e-05, 2.722000000000141e-06, 3.5419999999987406e-06, 1.5222000000002234e-05, 3.1389999999992257e-06, 6.2639999999988816e-06, 1.3347000000000359e-05, 9.597000000000078e-06, 2.346999999999766e-06, 1.2681000000000497e-05, 3.986000000000961e-06, 1.1528000000000233e-05, 1.5166000000000485e-05, 1.461099999999771e-05, 1.0848000000000801e-05, 7.514000000000132e-06, 3.333000000001196e-06, 1.1263999999996943e-05, 1.0653000000002827e-05, 1.2082999999999539e-05, 3.554999999998837e-06, 1.4666999999999458e-05, 3.750000000000281e-06, 1.4347000000001359e-05]}</msg>
<status status="PASS" starttime="20201112 12:26:28.138" endtime="20201112 12:26:28.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.128" endtime="20201112 12:26:28.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.156" level="INFO">${RESULT} = [{'time': 0.021493444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1888000000001564e-05, 'source_diff': 1.1888000000001564e-05}, {'time': 0.021509931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.148" endtime="20201112 12:26:28.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:28.174" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:28.158" endtime="20201112 12:26:28.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.184" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:28.182" endtime="20201112 12:26:28.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.189" level="INFO">VALUE: [1.1888000000001564e-05, 2.7090000000000447e-06, 5.028000000000671e-06, 7.959000000001826e-06, 6.681000000001436e-06, 4.582999999998977e-06, 1.2083999999999012e-05, 1.2721999999999734e-05, 1.1889000000001038e-05, 5.222999999998645e-06, 1.2513999999998193e-05, 1.3542000000001803e-05, 1.5443999999999874e-05, 2.722000000000141e-06, 1.5222000000002234e-05, 6.2639999999988816e-06, 9.597000000000078e-06, 1.2681000000000497e-05, 1.1528000000000233e-05, 1.461099999999771e-05, 7.514000000000132e-06, 1.1263999999996943e-05, 1.2082999999999539e-05, 1.4666999999999458e-05, 1.4347000000001359e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.186" endtime="20201112 12:26:28.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.176" endtime="20201112 12:26:28.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.199" endtime="20201112 12:26:28.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.207" endtime="20201112 12:26:28.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.203" endtime="20201112 12:26:28.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.194" endtime="20201112 12:26:28.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.673" endtime="20201112 12:26:28.233"></status>
</kw>
<msg timestamp="20201112 12:26:28.233" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.254" endtime="20201112 12:26:28.266"></status>
</kw>
<msg timestamp="20201112 12:26:28.268" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.250" endtime="20201112 12:26:28.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.274" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.270" endtime="20201112 12:26:28.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.276" endtime="20201112 12:26:28.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.243" endtime="20201112 12:26:28.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.238" endtime="20201112 12:26:28.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.300" endtime="20201112 12:26:28.616"></status>
</kw>
<msg timestamp="20201112 12:26:28.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037118833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037130083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.297" endtime="20201112 12:26:28.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037118833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037130083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.623" endtime="20201112 12:26:28.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.636" endtime="20201112 12:26:28.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.289" endtime="20201112 12:26:28.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.285" endtime="20201112 12:26:28.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.652" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:28.650" endtime="20201112 12:26:28.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.661" level="INFO">VALUE: [{'time': 0.037118833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037130083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.037138014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999995747e-06, 'source_diff': 7.930999999995747e-06}, {'time': 0.037146764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.037156986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.037169736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2749999999998873e-05, 'source_diff': 1.2749999999998873e-05}, {'time': 0.037175792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.037188306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.037190597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.037205819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.037210625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999996091e-06, 'source_diff': 4.805999999996091e-06}, {'time': 0.037218556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}, {'time': 0.037232361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.380499999999868e-05, 'source_diff': 1.380499999999868e-05}, {'time': 0.037240681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.037245903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.037258403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000005562e-05, 'source_diff': 1.2500000000005562e-05}, {'time': 0.037263417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.037274681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.037278486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.037289917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1430999999999247e-05, 'source_diff': 1.1430999999999247e-05}, {'time': 0.037301833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1916000000000704e-05, 'source_diff': 1.1916000000000704e-05}, {'time': 0.037312681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.037321639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.037333528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.037346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000003828e-05, 'source_diff': 1.3347000000003828e-05}, {'time': 0.037361486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}, {'time': 0.037370875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.037385264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.037392347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.037402569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.037409458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.037423653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.037433458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.037436403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.037438917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.037444972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.037454972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.037470208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5235999999994865e-05, 'source_diff': 1.5235999999994865e-05}, {'time': 0.0374825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2292000000004022e-05, 'source_diff': 1.2292000000004022e-05}, {'time': 0.037490639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.037500653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.037511083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.037519444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.037533403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.037542167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037547181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.037553236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.037556611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.037571611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.037579542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:28.655" endtime="20201112 12:26:28.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.644" endtime="20201112 12:26:28.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:28.698" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:28.666" endtime="20201112 12:26:28.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.707" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:28.705" endtime="20201112 12:26:28.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.715" level="INFO">VALUE: {'sourcetime': [0.037118833, 0.037130083, 0.037138014, 0.037146764, 0.037156986, 0.037169736, 0.037175792, 0.037188306, 0.037190597, 0.037205819, 0.037210625, 0.037218556, 0.037232361, 0.037240681, 0.037245903, 0.037258403, 0.037263417, 0.037274681, 0.037278486, 0.037289917, 0.037301833, 0.037312681, 0.037321639, 0.037333528, 0.037346875, 0.037361486, 0.037370875, 0.037385264, 0.037392347, 0.037402569, 0.037409458, 0.037423653, 0.037433458, 0.037436403, 0.037438917, 0.037444972, 0.037454972, 0.037470208, 0.0374825, 0.037490639, 0.037500653, 0.037511083, 0.037519444, 0.037533403, 0.037542167, 0.037547181, 0.037553236, 0.037556611, 0.037571611, 0.037579542], 'eventsource_diff': [0, 1.1250000000004312e-05, 7.930999999995747e-06, 8.750000000001812e-06, 1.0222000000004172e-05, 1.2749999999998873e-05, 6.055999999997341e-06, 1.2513999999998193e-05, 2.2910000000014863e-06, 1.5222000000002234e-05, 4.805999999996091e-06, 7.931000000002686e-06, 1.380499999999868e-05, 8.319999999999161e-06, 5.221999999999172e-06, 1.2500000000005562e-05, 5.0139999999976315e-06, 1.1263999999996943e-05, 3.8050000000025563e-06, 1.1430999999999247e-05, 1.1916000000000704e-05, 1.0848000000000801e-05, 8.957999999996413e-06, 1.1889000000001038e-05, 1.3347000000003828e-05, 1.461099999999771e-05, 9.388999999998537e-06, 1.4389000000003538e-05, 7.0829999999980076e-06, 1.0221999999997233e-05, 6.889000000002976e-06, 1.4195000000001567e-05, 9.805000000001618e-06, 2.9449999999972554e-06, 2.51400000000207e-06, 6.054999999997868e-06, 1.0000000000003062e-05, 1.5235999999994865e-05, 1.2292000000004022e-05, 8.138999999997287e-06, 1.0014000000002632e-05, 1.0429999999998774e-05, 8.360999999998397e-06, 1.3959000000000887e-05, 8.764000000001382e-06, 5.0139999999976315e-06, 6.054999999997868e-06, 3.374999999999906e-06, 1.5000000000001124e-05, 7.931000000002686e-06], 'diff': [0, 1.1250000000004312e-05, 7.930999999995747e-06, 8.750000000001812e-06, 1.0222000000004172e-05, 1.2749999999998873e-05, 6.055999999997341e-06, 1.2513999999998193e-05, 2.2910000000014863e-06, 1.5222000000002234e-05, 4.805999999996091e-06, 7.931000000002686e-06, 1.380499999999868e-05, 8.319999999999161e-06, 5.221999999999172e-06, 1.2500000000005562e-05, 5.0139999999976315e-06, 1.1263999999996943e-05, 3.8050000000025563e-06, 1.1430999999999247e-05, 1.1916000000000704e-05, 1.0848000000000801e-05, 8.957999999996413e-06, 1.1889000000001038e-05, 1.3347000000003828e-05, 1.461099999999771e-05, 9.388999999998537e-06, 1.4389000000003538e-05, 7.0829999999980076e-06, 1.0221999999997233e-05, 6.889000000002976e-06, 1.4195000000001567e-05, 9.805000000001618e-06, 2.9449999999972554e-06, 2.51400000000207e-06, 6.054999999997868e-06, 1.0000000000003062e-05, 1.5235999999994865e-05, 1.2292000000004022e-05, 8.138999999997287e-06, 1.0014000000002632e-05, 1.0429999999998774e-05, 8.360999999998397e-06, 1.3959000000000887e-05, 8.764000000001382e-06, 5.0139999999976315e-06, 6.054999999997868e-06, 3.374999999999906e-06, 1.5000000000001124e-05, 7.931000000002686e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:28.710" endtime="20201112 12:26:28.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.700" endtime="20201112 12:26:28.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.726" level="INFO">${RESULT} = [{'time': 0.037130083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.037146764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.719" endtime="20201112 12:26:28.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:28.745" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:28.729" endtime="20201112 12:26:28.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.756" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:28.754" endtime="20201112 12:26:28.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.761" level="INFO">VALUE: [1.1250000000004312e-05, 8.750000000001812e-06, 1.2749999999998873e-05, 1.2513999999998193e-05, 1.5222000000002234e-05, 7.931000000002686e-06, 8.319999999999161e-06, 1.2500000000005562e-05, 1.1263999999996943e-05, 1.1430999999999247e-05, 1.0848000000000801e-05, 1.1889000000001038e-05, 1.461099999999771e-05, 1.4389000000003538e-05, 1.0221999999997233e-05, 1.4195000000001567e-05, 2.9449999999972554e-06, 6.054999999997868e-06, 1.5235999999994865e-05, 8.138999999997287e-06, 1.0429999999998774e-05, 1.3959000000000887e-05, 5.0139999999976315e-06, 3.374999999999906e-06, 7.931000000002686e-06]</msg>
<status status="PASS" starttime="20201112 12:26:28.758" endtime="20201112 12:26:28.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.747" endtime="20201112 12:26:28.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.771" endtime="20201112 12:26:28.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.780" endtime="20201112 12:26:28.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.776" endtime="20201112 12:26:28.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.767" endtime="20201112 12:26:28.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.235" endtime="20201112 12:26:28.806"></status>
</kw>
<msg timestamp="20201112 12:26:28.807" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.827" endtime="20201112 12:26:28.840"></status>
</kw>
<msg timestamp="20201112 12:26:28.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.824" endtime="20201112 12:26:28.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.848" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.844" endtime="20201112 12:26:28.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.850" endtime="20201112 12:26:28.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.816" endtime="20201112 12:26:28.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.811" endtime="20201112 12:26:28.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.874" endtime="20201112 12:26:29.187"></status>
</kw>
<msg timestamp="20201112 12:26:29.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037334778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03734375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:28.870" endtime="20201112 12:26:29.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037334778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03734375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:29.193" endtime="20201112 12:26:29.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.206" endtime="20201112 12:26:29.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.863" endtime="20201112 12:26:29.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.858" endtime="20201112 12:26:29.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.224" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:29.222" endtime="20201112 12:26:29.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.233" level="INFO">VALUE: [{'time': 0.037334778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03734375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.037348972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.037363986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.037370042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.037382972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2930000000001274e-05, 'source_diff': 1.2930000000001274e-05}, {'time': 0.037397375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4402999999996169e-05, 'source_diff': 1.4402999999996169e-05}, {'time': 0.037406139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037421361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.037426583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.037435764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.037439528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.037454972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5444000000003344e-05, 'source_diff': 1.5444000000003344e-05}, {'time': 0.037465194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.037469153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.037480431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1278000000003452e-05, 'source_diff': 1.1278000000003452e-05}, {'time': 0.037484597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.037496903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305999999996653e-05, 'source_diff': 1.2305999999996653e-05}, {'time': 0.037512139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.037522847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.037527431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.037541764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.433299999999832e-05, 'source_diff': 1.433299999999832e-05}, {'time': 0.037552819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1055000000002868e-05, 'source_diff': 1.1055000000002868e-05}, {'time': 0.037567, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.037579319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.231899999999675e-05, 'source_diff': 1.231899999999675e-05}, {'time': 0.037587681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.361999999997871e-06, 'source_diff': 8.361999999997871e-06}, {'time': 0.037591208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5270000000031665e-06, 'source_diff': 3.5270000000031665e-06}, {'time': 0.037593931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722999999996145e-06, 'source_diff': 2.722999999996145e-06}, {'time': 0.037601653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.037608333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.037614597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.037629403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4805999999999153e-05, 'source_diff': 1.4805999999999153e-05}, {'time': 0.037640278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.037642792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.037647375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999995507e-06, 'source_diff': 4.582999999995507e-06}, {'time': 0.037652181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.80600000000303e-06, 'source_diff': 4.80600000000303e-06}, {'time': 0.037665542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3361000000003398e-05, 'source_diff': 1.3361000000003398e-05}, {'time': 0.037679708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4165999999996015e-05, 'source_diff': 1.4165999999996015e-05}, {'time': 0.037688486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.037692444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.037703917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1473000000004896e-05, 'source_diff': 1.1473000000004896e-05}, {'time': 0.037713931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999995693e-05, 'source_diff': 1.0013999999995693e-05}, {'time': 0.037726861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2930000000001274e-05, 'source_diff': 1.2930000000001274e-05}, {'time': 0.037731264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.037739389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.037752569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3180000000001524e-05, 'source_diff': 1.3180000000001524e-05}, {'time': 0.037756736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.037769444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.03777925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.037782264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:29.227" endtime="20201112 12:26:29.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.216" endtime="20201112 12:26:29.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:29.267" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.238" endtime="20201112 12:26:29.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.277" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:29.275" endtime="20201112 12:26:29.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.284" level="INFO">VALUE: {'sourcetime': [0.037334778, 0.03734375, 0.037348972, 0.037363986, 0.037370042, 0.037382972, 0.037397375, 0.037406139, 0.037421361, 0.037426583, 0.037435764, 0.037439528, 0.037454972, 0.037465194, 0.037469153, 0.037480431, 0.037484597, 0.037496903, 0.037512139, 0.037522847, 0.037527431, 0.037541764, 0.037552819, 0.037567, 0.037579319, 0.037587681, 0.037591208, 0.037593931, 0.037601653, 0.037608333, 0.037614597, 0.037629403, 0.037640278, 0.037642792, 0.037647375, 0.037652181, 0.037665542, 0.037679708, 0.037688486, 0.037692444, 0.037703917, 0.037713931, 0.037726861, 0.037731264, 0.037739389, 0.037752569, 0.037756736, 0.037769444, 0.03777925, 0.037782264], 'eventsource_diff': [0, 8.972000000002922e-06, 5.221999999999172e-06, 1.5014000000000693e-05, 6.055999999997341e-06, 1.2930000000001274e-05, 1.4402999999996169e-05, 8.764000000001382e-06, 1.5222000000002234e-05, 5.221999999999172e-06, 9.181000000003936e-06, 3.7639999999963814e-06, 1.5444000000003344e-05, 1.0221999999997233e-05, 3.958999999997825e-06, 1.1278000000003452e-05, 4.165999999999892e-06, 1.2305999999996653e-05, 1.5236000000001804e-05, 1.0707999999998163e-05, 4.58400000000192e-06, 1.433299999999832e-05, 1.1055000000002868e-05, 1.4181000000001998e-05, 1.231899999999675e-05, 8.361999999997871e-06, 3.5270000000031665e-06, 2.722999999996145e-06, 7.722000000001672e-06, 6.680000000001962e-06, 6.2639999999988816e-06, 1.4805999999999153e-05, 1.0875000000000468e-05, 2.51400000000207e-06, 4.582999999995507e-06, 4.80600000000303e-06, 1.3361000000003398e-05, 1.4165999999996015e-05, 8.778000000000952e-06, 3.957999999998352e-06, 1.1473000000004896e-05, 1.0013999999995693e-05, 1.2930000000001274e-05, 4.403000000000046e-06, 8.124999999997717e-06, 1.3180000000001524e-05, 4.166999999999366e-06, 1.2708000000000164e-05, 9.806000000001092e-06, 3.01400000000257e-06], 'diff': [0, 8.972000000002922e-06, 5.221999999999172e-06, 1.5014000000000693e-05, 6.055999999997341e-06, 1.2930000000001274e-05, 1.4402999999996169e-05, 8.764000000001382e-06, 1.5222000000002234e-05, 5.221999999999172e-06, 9.181000000003936e-06, 3.7639999999963814e-06, 1.5444000000003344e-05, 1.0221999999997233e-05, 3.958999999997825e-06, 1.1278000000003452e-05, 4.165999999999892e-06, 1.2305999999996653e-05, 1.5236000000001804e-05, 1.0707999999998163e-05, 4.58400000000192e-06, 1.433299999999832e-05, 1.1055000000002868e-05, 1.4181000000001998e-05, 1.231899999999675e-05, 8.361999999997871e-06, 3.5270000000031665e-06, 2.722999999996145e-06, 7.722000000001672e-06, 6.680000000001962e-06, 6.2639999999988816e-06, 1.4805999999999153e-05, 1.0875000000000468e-05, 2.51400000000207e-06, 4.582999999995507e-06, 4.80600000000303e-06, 1.3361000000003398e-05, 1.4165999999996015e-05, 8.778000000000952e-06, 3.957999999998352e-06, 1.1473000000004896e-05, 1.0013999999995693e-05, 1.2930000000001274e-05, 4.403000000000046e-06, 8.124999999997717e-06, 1.3180000000001524e-05, 4.166999999999366e-06, 1.2708000000000164e-05, 9.806000000001092e-06, 3.01400000000257e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:29.279" endtime="20201112 12:26:29.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.269" endtime="20201112 12:26:29.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.296" level="INFO">${RESULT} = [{'time': 0.03734375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.037363986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:29.289" endtime="20201112 12:26:29.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:29.314" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.298" endtime="20201112 12:26:29.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.325" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:29.322" endtime="20201112 12:26:29.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.330" level="INFO">VALUE: [8.972000000002922e-06, 1.5014000000000693e-05, 1.2930000000001274e-05, 8.764000000001382e-06, 5.221999999999172e-06, 3.7639999999963814e-06, 1.0221999999997233e-05, 1.1278000000003452e-05, 1.2305999999996653e-05, 1.0707999999998163e-05, 1.433299999999832e-05, 1.4181000000001998e-05, 8.361999999997871e-06, 2.722999999996145e-06, 6.680000000001962e-06, 1.4805999999999153e-05, 2.51400000000207e-06, 4.80600000000303e-06, 1.4165999999996015e-05, 3.957999999998352e-06, 1.0013999999995693e-05, 4.403000000000046e-06, 1.3180000000001524e-05, 1.2708000000000164e-05, 3.01400000000257e-06]</msg>
<status status="PASS" starttime="20201112 12:26:29.327" endtime="20201112 12:26:29.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.316" endtime="20201112 12:26:29.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.339" endtime="20201112 12:26:29.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.348" endtime="20201112 12:26:29.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.343" endtime="20201112 12:26:29.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.335" endtime="20201112 12:26:29.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.808" endtime="20201112 12:26:29.373"></status>
</kw>
<msg timestamp="20201112 12:26:29.374" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.394" endtime="20201112 12:26:29.407"></status>
</kw>
<msg timestamp="20201112 12:26:29.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.391" endtime="20201112 12:26:29.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.415" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.411" endtime="20201112 12:26:29.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.417" endtime="20201112 12:26:29.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.383" endtime="20201112 12:26:29.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.378" endtime="20201112 12:26:29.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.443" endtime="20201112 12:26:29.759"></status>
</kw>
<msg timestamp="20201112 12:26:29.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036979889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036985472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.437" endtime="20201112 12:26:29.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036979889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036985472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.766" endtime="20201112 12:26:29.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.779" endtime="20201112 12:26:29.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.430" endtime="20201112 12:26:29.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.425" endtime="20201112 12:26:29.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.797" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:29.794" endtime="20201112 12:26:29.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.805" level="INFO">VALUE: [{'time': 0.036979889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036985472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.036993403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}, {'time': 0.037004528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1125000000000718e-05, 'source_diff': 1.1125000000000718e-05}, {'time': 0.037012597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.037027, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4402999999996169e-05, 'source_diff': 1.4402999999996169e-05}, {'time': 0.037037653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.037042236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.03704475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.037057458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.037061028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.037073528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.037084792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.037097111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2319000000003688e-05, 'source_diff': 1.2319000000003688e-05}, {'time': 0.037104208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.037111097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.037117375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.037127597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.037136972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.037150333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3361000000003398e-05, 'source_diff': 1.3361000000003398e-05}, {'time': 0.037154917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.037166389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.037171611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.0371785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.037184347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.037187694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.037200431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2736999999998777e-05, 'source_diff': 1.2736999999998777e-05}, {'time': 0.037209181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.037217528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.037230292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2763999999998443e-05, 'source_diff': 1.2763999999998443e-05}, {'time': 0.037235486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.037249042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3556000000004842e-05, 'source_diff': 1.3556000000004842e-05}, {'time': 0.037258222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.037263903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.037274306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.037287889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.358299999999757e-05, 'source_diff': 1.358299999999757e-05}, {'time': 0.037303083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5194000000003094e-05, 'source_diff': 1.5194000000003094e-05}, {'time': 0.037309333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037319764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.037323111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.0373275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.037332319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.819000000003126e-06, 'source_diff': 4.819000000003126e-06}, {'time': 0.03734025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999995747e-06, 'source_diff': 7.930999999995747e-06}, {'time': 0.037353806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3556000000004842e-05, 'source_diff': 1.3556000000004842e-05}, {'time': 0.037360486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999995023e-06, 'source_diff': 6.679999999995023e-06}, {'time': 0.03737425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.037385097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.037388458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.037397625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.037407694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}]</msg>
<status status="PASS" starttime="20201112 12:26:29.799" endtime="20201112 12:26:29.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.788" endtime="20201112 12:26:29.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:29.841" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.811" endtime="20201112 12:26:29.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.851" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:29.848" endtime="20201112 12:26:29.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.858" level="INFO">VALUE: {'sourcetime': [0.036979889, 0.036985472, 0.036993403, 0.037004528, 0.037012597, 0.037027, 0.037037653, 0.037042236, 0.03704475, 0.037057458, 0.037061028, 0.037073528, 0.037084792, 0.037097111, 0.037104208, 0.037111097, 0.037117375, 0.037127597, 0.037136972, 0.037150333, 0.037154917, 0.037166389, 0.037171611, 0.0371785, 0.037184347, 0.037187694, 0.037200431, 0.037209181, 0.037217528, 0.037230292, 0.037235486, 0.037249042, 0.037258222, 0.037263903, 0.037274306, 0.037287889, 0.037303083, 0.037309333, 0.037319764, 0.037323111, 0.0373275, 0.037332319, 0.03734025, 0.037353806, 0.037360486, 0.03737425, 0.037385097, 0.037388458, 0.037397625, 0.037407694], 'eventsource_diff': [0, 5.582999999996507e-06, 7.931000000002686e-06, 1.1125000000000718e-05, 8.068999999999438e-06, 1.4402999999996169e-05, 1.0652999999999357e-05, 4.583000000002446e-06, 2.51400000000207e-06, 1.2708000000000164e-05, 3.57000000000135e-06, 1.2499999999998623e-05, 1.1263999999996943e-05, 1.2319000000003688e-05, 7.0969999999975775e-06, 6.889000000002976e-06, 6.2779999999984515e-06, 1.0221999999997233e-05, 9.374999999998967e-06, 1.3361000000003398e-05, 4.58400000000192e-06, 1.1471999999998483e-05, 5.221999999999172e-06, 6.889000000002976e-06, 5.846999999996327e-06, 3.347000000000766e-06, 1.2736999999998777e-05, 8.750000000001812e-06, 8.346999999998828e-06, 1.2763999999998443e-05, 5.194000000000032e-06, 1.3556000000004842e-05, 9.179999999997523e-06, 5.681000000000436e-06, 1.0402999999999107e-05, 1.358299999999757e-05, 1.5194000000003094e-05, 6.249999999999312e-06, 1.0430999999998247e-05, 3.347000000000766e-06, 4.389000000000476e-06, 4.819000000003126e-06, 7.930999999995747e-06, 1.3556000000004842e-05, 6.679999999995023e-06, 1.3763999999999443e-05, 1.0847000000001328e-05, 3.361000000000336e-06, 9.166999999997427e-06, 1.0069000000001438e-05], 'diff': [0, 5.582999999996507e-06, 7.931000000002686e-06, 1.1125000000000718e-05, 8.068999999999438e-06, 1.4402999999996169e-05, 1.0652999999999357e-05, 4.583000000002446e-06, 2.51400000000207e-06, 1.2708000000000164e-05, 3.57000000000135e-06, 1.2499999999998623e-05, 1.1263999999996943e-05, 1.2319000000003688e-05, 7.0969999999975775e-06, 6.889000000002976e-06, 6.2779999999984515e-06, 1.0221999999997233e-05, 9.374999999998967e-06, 1.3361000000003398e-05, 4.58400000000192e-06, 1.1471999999998483e-05, 5.221999999999172e-06, 6.889000000002976e-06, 5.846999999996327e-06, 3.347000000000766e-06, 1.2736999999998777e-05, 8.750000000001812e-06, 8.346999999998828e-06, 1.2763999999998443e-05, 5.194000000000032e-06, 1.3556000000004842e-05, 9.179999999997523e-06, 5.681000000000436e-06, 1.0402999999999107e-05, 1.358299999999757e-05, 1.5194000000003094e-05, 6.249999999999312e-06, 1.0430999999998247e-05, 3.347000000000766e-06, 4.389000000000476e-06, 4.819000000003126e-06, 7.930999999995747e-06, 1.3556000000004842e-05, 6.679999999995023e-06, 1.3763999999999443e-05, 1.0847000000001328e-05, 3.361000000000336e-06, 9.166999999997427e-06, 1.0069000000001438e-05]}</msg>
<status status="PASS" starttime="20201112 12:26:29.853" endtime="20201112 12:26:29.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.843" endtime="20201112 12:26:29.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.870" level="INFO">${RESULT} = [{'time': 0.036985472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.037004528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:29.862" endtime="20201112 12:26:29.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:29.888" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.872" endtime="20201112 12:26:29.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.898" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:29.896" endtime="20201112 12:26:29.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.904" level="INFO">VALUE: [5.582999999996507e-06, 1.1125000000000718e-05, 1.4402999999996169e-05, 4.583000000002446e-06, 1.2708000000000164e-05, 1.2499999999998623e-05, 1.2319000000003688e-05, 6.889000000002976e-06, 1.0221999999997233e-05, 1.3361000000003398e-05, 1.1471999999998483e-05, 6.889000000002976e-06, 3.347000000000766e-06, 8.750000000001812e-06, 1.2763999999998443e-05, 1.3556000000004842e-05, 5.681000000000436e-06, 1.358299999999757e-05, 6.249999999999312e-06, 3.347000000000766e-06, 4.819000000003126e-06, 1.3556000000004842e-05, 1.3763999999999443e-05, 3.361000000000336e-06, 1.0069000000001438e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.901" endtime="20201112 12:26:29.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.890" endtime="20201112 12:26:29.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.913" endtime="20201112 12:26:29.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.922" endtime="20201112 12:26:29.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.917" endtime="20201112 12:26:29.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.908" endtime="20201112 12:26:29.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.375" endtime="20201112 12:26:29.947"></status>
</kw>
<msg timestamp="20201112 12:26:29.948" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.968" endtime="20201112 12:26:29.981"></status>
</kw>
<msg timestamp="20201112 12:26:29.982" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.964" endtime="20201112 12:26:29.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.988" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.984" endtime="20201112 12:26:29.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.991" endtime="20201112 12:26:29.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.957" endtime="20201112 12:26:29.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.952" endtime="20201112 12:26:29.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.016" endtime="20201112 12:26:30.332"></status>
</kw>
<msg timestamp="20201112 12:26:30.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037190847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037194819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.013" endtime="20201112 12:26:30.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037190847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037194819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.338" endtime="20201112 12:26:30.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.351" endtime="20201112 12:26:30.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.004" endtime="20201112 12:26:30.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.999" endtime="20201112 12:26:30.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.368" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:30.365" endtime="20201112 12:26:30.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.376" level="INFO">VALUE: [{'time': 0.037190847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037194819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.037200931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.11200000000256e-06, 'source_diff': 6.11200000000256e-06}, {'time': 0.037210889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.037214667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.037225083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.037229472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.037232403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.037236583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.037245361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.037256208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.037259361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.037267694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.037279167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1473000000004896e-05, 'source_diff': 1.1473000000004896e-05}, {'time': 0.037290639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.037300667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.037308375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999995163e-06, 'source_diff': 7.707999999995163e-06}, {'time': 0.037320931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2556000000003842e-05, 'source_diff': 1.2556000000003842e-05}, {'time': 0.037334861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3929999999995335e-05, 'source_diff': 1.3929999999995335e-05}, {'time': 0.037340931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.07000000000385e-06, 'source_diff': 6.07000000000385e-06}, {'time': 0.037346986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.037360528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.037374931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4403000000003108e-05, 'source_diff': 1.4403000000003108e-05}, {'time': 0.037389319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4387999999997125e-05, 'source_diff': 1.4387999999997125e-05}, {'time': 0.037404542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5223000000001707e-05, 'source_diff': 1.5223000000001707e-05}, {'time': 0.037412472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.037416444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.037425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.037437306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305999999996653e-05, 'source_diff': 1.2305999999996653e-05}, {'time': 0.037440056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.037452167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2111000000002148e-05, 'source_diff': 1.2111000000002148e-05}, {'time': 0.037460264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037472361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2097000000002578e-05, 'source_diff': 1.2097000000002578e-05}, {'time': 0.037487181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4819999999998723e-05, 'source_diff': 1.4819999999998723e-05}, {'time': 0.037492806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.037498042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2360000000056806e-06, 'source_diff': 5.2360000000056806e-06}, {'time': 0.037505542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.037519958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4415999999996265e-05, 'source_diff': 1.4415999999996265e-05}, {'time': 0.037529556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.037535597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.037549569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.037552347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.037558764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.037567528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037570458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.037574222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.037583611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.389000000005476e-06, 'source_diff': 9.389000000005476e-06}, {'time': 0.037593833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.037597403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.037602819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:30.370" endtime="20201112 12:26:30.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.359" endtime="20201112 12:26:30.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:30.413" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.382" endtime="20201112 12:26:30.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.422" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:30.420" endtime="20201112 12:26:30.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.429" level="INFO">VALUE: {'sourcetime': [0.037190847, 0.037194819, 0.037200931, 0.037210889, 0.037214667, 0.037225083, 0.037229472, 0.037232403, 0.037236583, 0.037245361, 0.037256208, 0.037259361, 0.037267694, 0.037279167, 0.037290639, 0.037300667, 0.037308375, 0.037320931, 0.037334861, 0.037340931, 0.037346986, 0.037360528, 0.037374931, 0.037389319, 0.037404542, 0.037412472, 0.037416444, 0.037425, 0.037437306, 0.037440056, 0.037452167, 0.037460264, 0.037472361, 0.037487181, 0.037492806, 0.037498042, 0.037505542, 0.037519958, 0.037529556, 0.037535597, 0.037549569, 0.037552347, 0.037558764, 0.037567528, 0.037570458, 0.037574222, 0.037583611, 0.037593833, 0.037597403, 0.037602819], 'eventsource_diff': [0, 3.971999999997922e-06, 6.11200000000256e-06, 9.957999999997413e-06, 3.77800000000289e-06, 1.0415999999999204e-05, 4.389000000000476e-06, 2.9309999999976855e-06, 4.179999999999462e-06, 8.778000000000952e-06, 1.0847000000001328e-05, 3.1529999999987957e-06, 8.332999999999258e-06, 1.1473000000004896e-05, 1.1471999999998483e-05, 1.0028000000002202e-05, 7.707999999995163e-06, 1.2556000000003842e-05, 1.3929999999995335e-05, 6.07000000000385e-06, 6.054999999997868e-06, 1.3541999999998333e-05, 1.4403000000003108e-05, 1.4387999999997125e-05, 1.5223000000001707e-05, 7.930000000003212e-06, 3.971999999997922e-06, 8.555999999999842e-06, 1.2305999999996653e-05, 2.7500000000027502e-06, 1.2111000000002148e-05, 8.096999999998578e-06, 1.2097000000002578e-05, 1.4819999999998723e-05, 5.624999999995217e-06, 5.2360000000056806e-06, 7.500000000000562e-06, 1.4415999999996265e-05, 9.597999999999551e-06, 6.040999999998298e-06, 1.3972000000000984e-05, 2.77800000000189e-06, 6.417000000001616e-06, 8.764000000001382e-06, 2.929999999998212e-06, 3.7639999999963814e-06, 9.389000000005476e-06, 1.0221999999997233e-05, 3.57000000000135e-06, 5.416000000001142e-06], 'diff': [0, 3.971999999997922e-06, 6.11200000000256e-06, 9.957999999997413e-06, 3.77800000000289e-06, 1.0415999999999204e-05, 4.389000000000476e-06, 2.9309999999976855e-06, 4.179999999999462e-06, 8.778000000000952e-06, 1.0847000000001328e-05, 3.1529999999987957e-06, 8.332999999999258e-06, 1.1473000000004896e-05, 1.1471999999998483e-05, 1.0028000000002202e-05, 7.707999999995163e-06, 1.2556000000003842e-05, 1.3929999999995335e-05, 6.07000000000385e-06, 6.054999999997868e-06, 1.3541999999998333e-05, 1.4403000000003108e-05, 1.4387999999997125e-05, 1.5223000000001707e-05, 7.930000000003212e-06, 3.971999999997922e-06, 8.555999999999842e-06, 1.2305999999996653e-05, 2.7500000000027502e-06, 1.2111000000002148e-05, 8.096999999998578e-06, 1.2097000000002578e-05, 1.4819999999998723e-05, 5.624999999995217e-06, 5.2360000000056806e-06, 7.500000000000562e-06, 1.4415999999996265e-05, 9.597999999999551e-06, 6.040999999998298e-06, 1.3972000000000984e-05, 2.77800000000189e-06, 6.417000000001616e-06, 8.764000000001382e-06, 2.929999999998212e-06, 3.7639999999963814e-06, 9.389000000005476e-06, 1.0221999999997233e-05, 3.57000000000135e-06, 5.416000000001142e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:30.424" endtime="20201112 12:26:30.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.414" endtime="20201112 12:26:30.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.441" level="INFO">${RESULT} = [{'time': 0.037194819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.037210889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.434" endtime="20201112 12:26:30.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:30.459" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.443" endtime="20201112 12:26:30.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.470" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:30.467" endtime="20201112 12:26:30.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.475" level="INFO">VALUE: [3.971999999997922e-06, 9.957999999997413e-06, 1.0415999999999204e-05, 2.9309999999976855e-06, 8.778000000000952e-06, 3.1529999999987957e-06, 1.1473000000004896e-05, 1.0028000000002202e-05, 1.2556000000003842e-05, 6.07000000000385e-06, 1.3541999999998333e-05, 1.4387999999997125e-05, 7.930000000003212e-06, 8.555999999999842e-06, 2.7500000000027502e-06, 8.096999999998578e-06, 1.4819999999998723e-05, 5.2360000000056806e-06, 1.4415999999996265e-05, 6.040999999998298e-06, 2.77800000000189e-06, 8.764000000001382e-06, 3.7639999999963814e-06, 1.0221999999997233e-05, 5.416000000001142e-06]</msg>
<status status="PASS" starttime="20201112 12:26:30.472" endtime="20201112 12:26:30.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.461" endtime="20201112 12:26:30.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.484" endtime="20201112 12:26:30.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.493" endtime="20201112 12:26:30.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.488" endtime="20201112 12:26:30.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.480" endtime="20201112 12:26:30.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.949" endtime="20201112 12:26:30.519"></status>
</kw>
<msg timestamp="20201112 12:26:30.519" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.539" endtime="20201112 12:26:30.553"></status>
</kw>
<msg timestamp="20201112 12:26:30.554" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.536" endtime="20201112 12:26:30.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.561" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.557" endtime="20201112 12:26:30.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.563" endtime="20201112 12:26:30.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.529" endtime="20201112 12:26:30.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.524" endtime="20201112 12:26:30.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.588" endtime="20201112 12:26:30.905"></status>
</kw>
<msg timestamp="20201112 12:26:30.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037143903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037159347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.585" endtime="20201112 12:26:30.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037143903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037159347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.912" endtime="20201112 12:26:30.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.924" endtime="20201112 12:26:30.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.576" endtime="20201112 12:26:30.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.571" endtime="20201112 12:26:30.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.932" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:30.931" endtime="20201112 12:26:30.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.936" level="INFO">VALUE: [{'time': 0.037143903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037159347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5444000000003344e-05, 'source_diff': 1.5444000000003344e-05}, {'time': 0.037167264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.037173528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.037185208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.037187931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.723000000003084e-06, 'source_diff': 2.723000000003084e-06}, {'time': 0.037199819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1888000000001564e-05, 'source_diff': 1.1888000000001564e-05}, {'time': 0.037209417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.037220889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.037230694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.037236958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.037239722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.037244764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.037251792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.037260583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.037270417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.037273944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5270000000031665e-06, 'source_diff': 3.5270000000031665e-06}, {'time': 0.037286028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083999999995543e-05, 'source_diff': 1.2083999999995543e-05}, {'time': 0.037298333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305000000004118e-05, 'source_diff': 1.2305000000004118e-05}, {'time': 0.037303764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.037319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5235999999994865e-05, 'source_diff': 1.5235999999994865e-05}, {'time': 0.037333181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.037343403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.03735675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3347000000003828e-05, 'source_diff': 1.3347000000003828e-05}, {'time': 0.037366597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.037377389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0791999999995583e-05, 'source_diff': 1.0791999999995583e-05}, {'time': 0.037391792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4403000000003108e-05, 'source_diff': 1.4403000000003108e-05}, {'time': 0.037400361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.037409944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.037414125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.037422681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.037431861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.037444167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000003592e-05, 'source_diff': 1.2306000000003592e-05}, {'time': 0.037446903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7359999999962414e-06, 'source_diff': 2.7359999999962414e-06}, {'time': 0.037449194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.037458792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.037465889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000004516e-06, 'source_diff': 7.097000000004516e-06}, {'time': 0.037473403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.037481125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999994733e-06, 'source_diff': 7.721999999994733e-06}, {'time': 0.037492847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1722000000005672e-05, 'source_diff': 1.1722000000005672e-05}, {'time': 0.037501569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.037513056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1487000000004466e-05, 'source_diff': 1.1487000000004466e-05}, {'time': 0.037521819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.76299999999497e-06, 'source_diff': 8.76299999999497e-06}, {'time': 0.037530792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.973000000002396e-06, 'source_diff': 8.973000000002396e-06}, {'time': 0.037540611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.037543319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.037552292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.973000000002396e-06, 'source_diff': 8.973000000002396e-06}, {'time': 0.037567097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.037576486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.037589014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}]</msg>
<status status="PASS" starttime="20201112 12:26:30.933" endtime="20201112 12:26:30.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.928" endtime="20201112 12:26:30.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:30.951" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.938" endtime="20201112 12:26:30.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.956" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:30.955" endtime="20201112 12:26:30.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.959" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.037143903, 0.037159347, 0.037167264, 0.037173528, 0.037185208, 0.037187931, 0.037199819, 0.037209417, 0.037220889, 0.037230694, 0.037236958, 0.037239722, 0.037244764, 0.037251792, 0.037260583, 0.037270417, 0.037273944, 0.037286028, 0.037298333, 0.037303764, 0.037319, 0.037333181, 0.037343403, 0.03735675, 0.037366597, 0.037377389, 0.037391792, 0.037400361, 0.037409944, 0.037414125, 0.037422681, 0.037431861, 0.037444167, 0.037446903, 0.037449194, 0.037458792, 0.037465889, 0.037473403, 0.037481125, 0.037492847, 0.037501569, 0.037513056, 0.037521819, 0.037530792, 0.037540611, 0.037543319, 0.037552292, 0.037567097, 0.037576486, 0.037589014], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.5444000000003344e-05, 7.916999999996177e-06, 6.2639999999988816e-06, 1.1680000000000024e-05, 2.723000000003084e-06, 1.1888000000001564e-05, 9.597999999999551e-06, 1.1471999999998483e-05, 9.805000000001618e-06, 6.2639999999988816e-06, 2.76400000000232e-06, 5.041999999996771e-06, 7.0279999999992016e-06, 8.791000000001048e-06, 9.834000000000231e-06, 3.5270000000031665e-06, 1.2083999999995543e-05, 1.2305000000004118e-05, 5.431000000000186e-06, 1.5235999999994865e-05, 1.4181000000001998e-05, 1.0221999999997233e-05, 1.3347000000003828e-05, 9.847000000000328e-06, 1.0791999999995583e-05, 1.4403000000003108e-05, 8.568999999999938e-06, 9.583000000000508e-06, 4.1809999999989356e-06, 8.555999999999842e-06, 9.179999999997523e-06, 1.2306000000003592e-05, 2.7359999999962414e-06, 2.2910000000014863e-06, 9.597999999999551e-06, 7.097000000004516e-06, 7.514000000000132e-06, 7.721999999994733e-06, 1.1722000000005672e-05, 8.721999999995733e-06, 1.1487000000004466e-05, 8.76299999999497e-06, 8.973000000002396e-06, 9.819000000001188e-06, 2.7079999999971016e-06, 8.973000000002396e-06, 1.480499999999968e-05, 9.388999999998537e-06, 1.2527999999997763e-05], 'diff': [0, 1.5444000000003344e-05, 7.916999999996177e-06, 6.2639999999988816e-06, 1.1680000000000024e-05, 2.723000000003084e-06, 1.1888000000001564e-05, 9.597999999999551e-06, 1.1471999999998483e-05, 9.805000000001618e-06, 6.2639999999988816e-06, 2.76400000000232e-06, 5.041999999996771e-06, 7.0279999999992016e-06, 8.791000000001048e-06, 9.834000000000231e-06, 3.5270000000031665e-06, 1.2083999999995543e-05, 1.2305000000004118e-05, 5.431000000000186e-06, 1.5235999999994865e-05, 1.4181000000001998e-05, 1.0221999999997233e-05, 1.3347000000003828e-05, 9.847000000000328e-06, 1.0791999999995583e-05, 1.4403000000003108e-05, 8.568999999999938e-06, 9.583000000000508e-06, 4.1809999999989356e-06, 8.555999999999842e-06, 9.179999999997523e-06, 1.2306000000003592e-05, 2.7359999999962414e-06, 2.2910000000014863e-06, 9.597999999999551e-06, 7.097000000004516e-06, 7.514000000000132e-06, 7.721999999994733e-06, 1.1722000000005672e-05, 8.721999999995733e-06, 1.1487000000004466e-05, 8.76299999999497e-06, 8.973000000002396e-06, 9.819000000001188e-06, 2.7079999999971016e-06, 8.973000000002396e-06, 1.480499999999968e-05, 9.388999999998537e-06, 1.2527999999997763e-05]}</msg>
<status status="PASS" starttime="20201112 12:26:30.957" endtime="20201112 12:26:30.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.952" endtime="20201112 12:26:30.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.965" level="INFO">${RESULT} = [{'time': 0.037159347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5444000000003344e-05, 'source_diff': 1.5444000000003344e-05}, {'time': 0.037173528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:30.961" endtime="20201112 12:26:30.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:30.973" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.966" endtime="20201112 12:26:30.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.978" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:30.977" endtime="20201112 12:26:30.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.980" level="INFO">VALUE: [1.5444000000003344e-05, 6.2639999999988816e-06, 2.723000000003084e-06, 9.597999999999551e-06, 9.805000000001618e-06, 2.76400000000232e-06, 7.0279999999992016e-06, 9.834000000000231e-06, 1.2083999999995543e-05, 5.431000000000186e-06, 1.4181000000001998e-05, 1.3347000000003828e-05, 1.0791999999995583e-05, 8.568999999999938e-06, 4.1809999999989356e-06, 9.179999999997523e-06, 2.7359999999962414e-06, 9.597999999999551e-06, 7.514000000000132e-06, 1.1722000000005672e-05, 1.1487000000004466e-05, 8.973000000002396e-06, 2.7079999999971016e-06, 1.480499999999968e-05, 1.2527999999997763e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.979" endtime="20201112 12:26:30.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.974" endtime="20201112 12:26:30.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.985" endtime="20201112 12:26:30.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.989" endtime="20201112 12:26:31.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.987" endtime="20201112 12:26:31.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.983" endtime="20201112 12:26:31.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.521" endtime="20201112 12:26:31.010"></status>
</kw>
<msg timestamp="20201112 12:26:31.011" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.020" endtime="20201112 12:26:31.032"></status>
</kw>
<msg timestamp="20201112 12:26:31.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.018" endtime="20201112 12:26:31.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.035" endtime="20201112 12:26:31.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.042" endtime="20201112 12:26:31.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.015" endtime="20201112 12:26:31.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.013" endtime="20201112 12:26:31.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.067" endtime="20201112 12:26:31.384"></status>
</kw>
<msg timestamp="20201112 12:26:31.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021086611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.064" endtime="20201112 12:26:31.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021086611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.390" endtime="20201112 12:26:31.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.403" endtime="20201112 12:26:31.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.055" endtime="20201112 12:26:31.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.050" endtime="20201112 12:26:31.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.420" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:31.418" endtime="20201112 12:26:31.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.428" level="INFO">VALUE: [{'time': 0.021079306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021086611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305000000002587e-06, 'source_diff': 7.305000000002587e-06}, {'time': 0.021095208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.021110597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.53889999999976e-05, 'source_diff': 1.53889999999976e-05}, {'time': 0.02111775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.021125028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.021127958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.021138375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0417000000002147e-05, 'source_diff': 1.0417000000002147e-05}, {'time': 0.021153389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.021164861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.021173417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.021185319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1902000000001134e-05, 'source_diff': 1.1902000000001134e-05}, {'time': 0.021191778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.021207, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5221999999998764e-05, 'source_diff': 1.5221999999998764e-05}, {'time': 0.021211806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.021215389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.021219347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.021223931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.021229361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.429999999997243e-06, 'source_diff': 5.429999999997243e-06}, {'time': 0.021235681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.021243556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.021257958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4402000000000165e-05, 'source_diff': 1.4402000000000165e-05}, {'time': 0.021260903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}, {'time': 0.021268611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.021282583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.021294056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1472999999997957e-05, 'source_diff': 1.1472999999997957e-05}, {'time': 0.021306361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305000000000649e-05, 'source_diff': 1.2305000000000649e-05}, {'time': 0.021312847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.021315764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.021330569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.021344958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.021354986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.021360819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.021365208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.021369389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.021379417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.021393389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3971999999997514e-05, 'source_diff': 1.3971999999997514e-05}, {'time': 0.021397361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.021409875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.021424306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4431000000002248e-05, 'source_diff': 1.4431000000002248e-05}, {'time': 0.021437403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3097000000000109e-05, 'source_diff': 1.3097000000000109e-05}, {'time': 0.021447417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.021459097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.021464319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.021473292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.973000000002396e-06, 'source_diff': 8.973000000002396e-06}, {'time': 0.021488097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.021495611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.021506458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0846999999997858e-05, 'source_diff': 1.0846999999997858e-05}, {'time': 0.021509611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.021524222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}]</msg>
<status status="PASS" starttime="20201112 12:26:31.423" endtime="20201112 12:26:31.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.412" endtime="20201112 12:26:31.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:31.463" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:31.434" endtime="20201112 12:26:31.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.473" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:31.471" endtime="20201112 12:26:31.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.480" level="INFO">VALUE: {'sourcetime': [0.021079306, 0.021086611, 0.021095208, 0.021110597, 0.02111775, 0.021125028, 0.021127958, 0.021138375, 0.021153389, 0.021164861, 0.021173417, 0.021185319, 0.021191778, 0.021207, 0.021211806, 0.021215389, 0.021219347, 0.021223931, 0.021229361, 0.021235681, 0.021243556, 0.021257958, 0.021260903, 0.021268611, 0.021282583, 0.021294056, 0.021306361, 0.021312847, 0.021315764, 0.021330569, 0.021344958, 0.021354986, 0.021360819, 0.021365208, 0.021369389, 0.021379417, 0.021393389, 0.021397361, 0.021409875, 0.021424306, 0.021437403, 0.021447417, 0.021459097, 0.021464319, 0.021473292, 0.021488097, 0.021495611, 0.021506458, 0.021509611, 0.021524222], 'eventsource_diff': [0, 7.305000000002587e-06, 8.596999999999078e-06, 1.53889999999976e-05, 7.153000000002796e-06, 7.2779999999994516e-06, 2.929999999998212e-06, 1.0417000000002147e-05, 1.5014000000000693e-05, 1.1471999999998483e-05, 8.555999999999842e-06, 1.1902000000001134e-05, 6.459000000000326e-06, 1.5221999999998764e-05, 4.805999999999561e-06, 3.583000000001446e-06, 3.957999999998352e-06, 4.58400000000192e-06, 5.429999999997243e-06, 6.320000000000631e-06, 7.875000000000937e-06, 1.4402000000000165e-05, 2.945000000000725e-06, 7.707999999998633e-06, 1.3972000000000984e-05, 1.1472999999997957e-05, 1.2305000000000649e-05, 6.485999999999992e-06, 2.917000000001585e-06, 1.480499999999968e-05, 1.4389000000000068e-05, 1.0027999999998732e-05, 5.833000000000227e-06, 4.389000000000476e-06, 4.1809999999989356e-06, 1.0028000000002202e-05, 1.3971999999997514e-05, 3.972000000001391e-06, 1.2513999999998193e-05, 1.4431000000002248e-05, 1.3097000000000109e-05, 1.0013999999999162e-05, 1.1680000000000024e-05, 5.221999999999172e-06, 8.973000000002396e-06, 1.480499999999968e-05, 7.514000000000132e-06, 1.0846999999997858e-05, 3.153000000002265e-06, 1.461099999999771e-05], 'diff': [0, 7.305000000002587e-06, 8.596999999999078e-06, 1.53889999999976e-05, 7.153000000002796e-06, 7.2779999999994516e-06, 2.929999999998212e-06, 1.0417000000002147e-05, 1.5014000000000693e-05, 1.1471999999998483e-05, 8.555999999999842e-06, 1.1902000000001134e-05, 6.459000000000326e-06, 1.5221999999998764e-05, 4.805999999999561e-06, 3.583000000001446e-06, 3.957999999998352e-06, 4.58400000000192e-06, 5.429999999997243e-06, 6.320000000000631e-06, 7.875000000000937e-06, 1.4402000000000165e-05, 2.945000000000725e-06, 7.707999999998633e-06, 1.3972000000000984e-05, 1.1472999999997957e-05, 1.2305000000000649e-05, 6.485999999999992e-06, 2.917000000001585e-06, 1.480499999999968e-05, 1.4389000000000068e-05, 1.0027999999998732e-05, 5.833000000000227e-06, 4.389000000000476e-06, 4.1809999999989356e-06, 1.0028000000002202e-05, 1.3971999999997514e-05, 3.972000000001391e-06, 1.2513999999998193e-05, 1.4431000000002248e-05, 1.3097000000000109e-05, 1.0013999999999162e-05, 1.1680000000000024e-05, 5.221999999999172e-06, 8.973000000002396e-06, 1.480499999999968e-05, 7.514000000000132e-06, 1.0846999999997858e-05, 3.153000000002265e-06, 1.461099999999771e-05]}</msg>
<status status="PASS" starttime="20201112 12:26:31.475" endtime="20201112 12:26:31.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.465" endtime="20201112 12:26:31.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.492" level="INFO">${RESULT} = [{'time': 0.021086611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305000000002587e-06, 'source_diff': 7.305000000002587e-06}, {'time': 0.021110597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.484" endtime="20201112 12:26:31.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:31.510" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:31.494" endtime="20201112 12:26:31.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.520" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:31.518" endtime="20201112 12:26:31.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.526" level="INFO">VALUE: [7.305000000002587e-06, 1.53889999999976e-05, 7.2779999999994516e-06, 1.0417000000002147e-05, 1.1471999999998483e-05, 1.1902000000001134e-05, 1.5221999999998764e-05, 3.583000000001446e-06, 4.58400000000192e-06, 6.320000000000631e-06, 1.4402000000000165e-05, 7.707999999998633e-06, 1.1472999999997957e-05, 6.485999999999992e-06, 1.480499999999968e-05, 1.0027999999998732e-05, 4.389000000000476e-06, 1.0028000000002202e-05, 3.972000000001391e-06, 1.4431000000002248e-05, 1.0013999999999162e-05, 5.221999999999172e-06, 1.480499999999968e-05, 1.0846999999997858e-05, 1.461099999999771e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.523" endtime="20201112 12:26:31.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.512" endtime="20201112 12:26:31.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.535" endtime="20201112 12:26:31.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.544" endtime="20201112 12:26:31.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.539" endtime="20201112 12:26:31.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.530" endtime="20201112 12:26:31.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.011" endtime="20201112 12:26:31.569"></status>
</kw>
<msg timestamp="20201112 12:26:31.570" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.590" endtime="20201112 12:26:31.604"></status>
</kw>
<msg timestamp="20201112 12:26:31.605" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.587" endtime="20201112 12:26:31.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.612" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.608" endtime="20201112 12:26:31.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.614" endtime="20201112 12:26:31.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.579" endtime="20201112 12:26:31.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.574" endtime="20201112 12:26:31.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.638" endtime="20201112 12:26:31.953"></status>
</kw>
<msg timestamp="20201112 12:26:31.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037238528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037240806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.635" endtime="20201112 12:26:31.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037238528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037240806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.960" endtime="20201112 12:26:31.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.973" endtime="20201112 12:26:31.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.627" endtime="20201112 12:26:31.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.623" endtime="20201112 12:26:31.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.989" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:31.987" endtime="20201112 12:26:31.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.998" level="INFO">VALUE: [{'time': 0.037238528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037240806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.037256236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5429999999996835e-05, 'source_diff': 1.5429999999996835e-05}, {'time': 0.037261875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.037273778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.037283375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.037291306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}, {'time': 0.037304847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.354099999999886e-05, 'source_diff': 1.354099999999886e-05}, {'time': 0.037319472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.037333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.037336972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.037341792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.819999999995661e-06, 'source_diff': 4.819999999995661e-06}, {'time': 0.03735075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.037355153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.03736725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2096999999995639e-05, 'source_diff': 1.2096999999995639e-05}, {'time': 0.037373514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.037385806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2292000000004022e-05, 'source_diff': 1.2292000000004022e-05}, {'time': 0.037398139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2332999999996319e-05, 'source_diff': 1.2332999999996319e-05}, {'time': 0.037400639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.0374115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.037422958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.037427153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.037431125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.037435292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.037442389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.037449917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.037455542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.037457847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.037470778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2931000000000747e-05, 'source_diff': 1.2931000000000747e-05}, {'time': 0.037474389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.610999999993647e-06, 'source_diff': 3.610999999993647e-06}, {'time': 0.037488736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000004828e-05, 'source_diff': 1.4347000000004828e-05}, {'time': 0.037501861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.037517292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.037530667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3374999999996029e-05, 'source_diff': 1.3374999999996029e-05}, {'time': 0.037545458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.037549431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973000000004334e-06, 'source_diff': 3.973000000004334e-06}, {'time': 0.037553056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.037563, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.037566556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.037569958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.037574917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.037583681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037597444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.376299999999997e-05, 'source_diff': 1.376299999999997e-05}, {'time': 0.03760475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.037608736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.037617278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.037623542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.037634389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0846999999994389e-05, 'source_diff': 1.0846999999994389e-05}, {'time': 0.037643597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000003602e-06, 'source_diff': 9.208000000003602e-06}, {'time': 0.037649847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:31.992" endtime="20201112 12:26:32.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.981" endtime="20201112 12:26:32.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:32.034" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:32.003" endtime="20201112 12:26:32.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.044" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:32.041" endtime="20201112 12:26:32.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.051" level="INFO">VALUE: {'sourcetime': [0.037238528, 0.037240806, 0.037256236, 0.037261875, 0.037273778, 0.037283375, 0.037291306, 0.037304847, 0.037319472, 0.037333, 0.037336972, 0.037341792, 0.03735075, 0.037355153, 0.03736725, 0.037373514, 0.037385806, 0.037398139, 0.037400639, 0.0374115, 0.037422958, 0.037427153, 0.037431125, 0.037435292, 0.037442389, 0.037449917, 0.037455542, 0.037457847, 0.037470778, 0.037474389, 0.037488736, 0.037501861, 0.037517292, 0.037530667, 0.037545458, 0.037549431, 0.037553056, 0.037563, 0.037566556, 0.037569958, 0.037574917, 0.037583681, 0.037597444, 0.03760475, 0.037608736, 0.037617278, 0.037623542, 0.037634389, 0.037643597, 0.037649847], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 2.27800000000139e-06, 1.5429999999996835e-05, 5.639000000001726e-06, 1.1903000000000608e-05, 9.597000000000078e-06, 7.931000000002686e-06, 1.354099999999886e-05, 1.4624999999997279e-05, 1.3527999999998763e-05, 3.9720000000048605e-06, 4.819999999995661e-06, 8.958000000003352e-06, 4.403000000000046e-06, 1.2096999999995639e-05, 6.2639999999988816e-06, 1.2292000000004022e-05, 1.2332999999996319e-05, 2.5000000000025002e-06, 1.0861000000000898e-05, 1.1457999999998913e-05, 4.1949999999985055e-06, 3.9720000000048605e-06, 4.166999999999366e-06, 7.0969999999975775e-06, 7.527999999999702e-06, 5.625000000002156e-06, 2.305000000001056e-06, 1.2931000000000747e-05, 3.610999999993647e-06, 1.4347000000004828e-05, 1.3124999999995779e-05, 1.5431000000003248e-05, 1.3374999999996029e-05, 1.479100000000011e-05, 3.973000000004334e-06, 3.625000000000156e-06, 9.943999999997843e-06, 3.55600000000178e-06, 3.401999999999572e-06, 4.9589999999988255e-06, 8.764000000001382e-06, 1.376299999999997e-05, 7.305999999998591e-06, 3.9859999999974915e-06, 8.542000000000272e-06, 6.2640000000058205e-06, 1.0846999999994389e-05, 9.208000000003602e-06, 6.249999999999312e-06], 'diff': [0, 2.27800000000139e-06, 1.5429999999996835e-05, 5.639000000001726e-06, 1.1903000000000608e-05, 9.597000000000078e-06, 7.931000000002686e-06, 1.354099999999886e-05, 1.4624999999997279e-05, 1.3527999999998763e-05, 3.9720000000048605e-06, 4.819999999995661e-06, 8.958000000003352e-06, 4.403000000000046e-06, 1.2096999999995639e-05, 6.2639999999988816e-06, 1.2292000000004022e-05, 1.2332999999996319e-05, 2.5000000000025002e-06, 1.0861000000000898e-05, 1.1457999999998913e-05, 4.1949999999985055e-06, 3.9720000000048605e-06, 4.166999999999366e-06, 7.0969999999975775e-06, 7.527999999999702e-06, 5.625000000002156e-06, 2.305000000001056e-06, 1.2931000000000747e-05, 3.610999999993647e-06, 1.4347000000004828e-05, 1.3124999999995779e-05, 1.5431000000003248e-05, 1.3374999999996029e-05, 1.479100000000011e-05, 3.973000000004334e-06, 3.625000000000156e-06, 9.943999999997843e-06, 3.55600000000178e-06, 3.401999999999572e-06, 4.9589999999988255e-06, 8.764000000001382e-06, 1.376299999999997e-05, 7.305999999998591e-06, 3.9859999999974915e-06, 8.542000000000272e-06, 6.2640000000058205e-06, 1.0846999999994389e-05, 9.208000000003602e-06, 6.249999999999312e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:32.046" endtime="20201112 12:26:32.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.036" endtime="20201112 12:26:32.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.063" level="INFO">${RESULT} = [{'time': 0.037240806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.037261875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:32.055" endtime="20201112 12:26:32.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:32.081" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:32.065" endtime="20201112 12:26:32.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.092" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:32.089" endtime="20201112 12:26:32.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.097" level="INFO">VALUE: [2.27800000000139e-06, 5.639000000001726e-06, 9.597000000000078e-06, 1.354099999999886e-05, 1.3527999999998763e-05, 4.819999999995661e-06, 4.403000000000046e-06, 6.2639999999988816e-06, 1.2332999999996319e-05, 1.0861000000000898e-05, 4.1949999999985055e-06, 4.166999999999366e-06, 7.527999999999702e-06, 2.305000000001056e-06, 3.610999999993647e-06, 1.3124999999995779e-05, 1.3374999999996029e-05, 3.973000000004334e-06, 9.943999999997843e-06, 3.401999999999572e-06, 8.764000000001382e-06, 7.305999999998591e-06, 8.542000000000272e-06, 1.0846999999994389e-05, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201112 12:26:32.094" endtime="20201112 12:26:32.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.083" endtime="20201112 12:26:32.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.106" endtime="20201112 12:26:32.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.115" endtime="20201112 12:26:32.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.110" endtime="20201112 12:26:32.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.102" endtime="20201112 12:26:32.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.571" endtime="20201112 12:26:32.140"></status>
</kw>
<msg timestamp="20201112 12:26:32.141" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.163" endtime="20201112 12:26:32.176"></status>
</kw>
<msg timestamp="20201112 12:26:32.177" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.158" endtime="20201112 12:26:32.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.183" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.179" endtime="20201112 12:26:32.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.186" endtime="20201112 12:26:32.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.150" endtime="20201112 12:26:32.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.145" endtime="20201112 12:26:32.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.210" endtime="20201112 12:26:32.529"></status>
</kw>
<msg timestamp="20201112 12:26:32.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038578708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038582875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.206" endtime="20201112 12:26:32.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038578708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038582875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.536" endtime="20201112 12:26:32.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.548" endtime="20201112 12:26:32.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.199" endtime="20201112 12:26:32.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.194" endtime="20201112 12:26:32.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.565" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:32.563" endtime="20201112 12:26:32.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.574" level="INFO">VALUE: [{'time': 0.038578708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038582875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.038590611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999994303e-06, 'source_diff': 7.735999999994303e-06}, {'time': 0.038597486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038605639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.038609417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.038620889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.038627139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038636319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000004462e-06, 'source_diff': 9.180000000004462e-06}, {'time': 0.038645958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.038661361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540299999999717e-05, 'source_diff': 1.540299999999717e-05}, {'time': 0.038664903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.038674736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.038678472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.038687667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000003506e-06, 'source_diff': 9.195000000003506e-06}, {'time': 0.038689986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.038696236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038701444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.038709, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.038717736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.038729833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2096999999995639e-05, 'source_diff': 1.2096999999995639e-05}, {'time': 0.038743806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.038746958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.038760097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.038770514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.038783236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.038787417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.038792847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.038797667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.038800583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.038808306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.038822931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.038828819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888000000002502e-06, 'source_diff': 5.888000000002502e-06}, {'time': 0.038833764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.03884525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.03885775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000005562e-05, 'source_diff': 1.2500000000005562e-05}, {'time': 0.038863833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.038870708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.038876972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.038891986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.038905125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999995349e-05, 'source_diff': 1.3138999999995349e-05}, {'time': 0.038916181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.0389185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.038920792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.038932069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.127699999999704e-05, 'source_diff': 1.127699999999704e-05}, {'time': 0.038945819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.038959167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3348000000003302e-05, 'source_diff': 1.3348000000003302e-05}, {'time': 0.038969806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.038974833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.038984431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:32.567" endtime="20201112 12:26:32.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.557" endtime="20201112 12:26:32.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:32.609" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:32.579" endtime="20201112 12:26:32.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.618" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:32.616" endtime="20201112 12:26:32.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.625" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.038578708, 0.038582875, 0.038590611, 0.038597486, 0.038605639, 0.038609417, 0.038620889, 0.038627139, 0.038636319, 0.038645958, 0.038661361, 0.038664903, 0.038674736, 0.038678472, 0.038687667, 0.038689986, 0.038696236, 0.038701444, 0.038709, 0.038717736, 0.038729833, 0.038743806, 0.038746958, 0.038760097, 0.038770514, 0.038783236, 0.038787417, 0.038792847, 0.038797667, 0.038800583, 0.038808306, 0.038822931, 0.038828819, 0.038833764, 0.03884525, 0.03885775, 0.038863833, 0.038870708, 0.038876972, 0.038891986, 0.038905125, 0.038916181, 0.0389185, 0.038920792, 0.038932069, 0.038945819, 0.038959167, 0.038969806, 0.038974833, 0.038984431], 'eventsource_diff': [0, 4.166999999999366e-06, 7.735999999994303e-06, 6.875000000003406e-06, 8.152999999996857e-06, 3.77800000000289e-06, 1.1471999999998483e-05, 6.249999999999312e-06, 9.180000000004462e-06, 9.638999999998787e-06, 1.540299999999717e-05, 3.54200000000221e-06, 9.833000000000758e-06, 3.7359999999972415e-06, 9.195000000003506e-06, 2.319000000000626e-06, 6.249999999999312e-06, 5.207999999999602e-06, 7.555999999998841e-06, 8.736000000002242e-06, 1.2096999999995639e-05, 1.3973000000000457e-05, 3.151999999999322e-06, 1.3139000000002288e-05, 1.0416999999998677e-05, 1.2721999999999734e-05, 4.1809999999989356e-06, 5.430000000000712e-06, 4.8200000000026e-06, 2.915999999998642e-06, 7.723000000001146e-06, 1.4624999999997279e-05, 5.888000000002502e-06, 4.9449999999992555e-06, 1.1485999999998053e-05, 1.2500000000005562e-05, 6.0829999999970075e-06, 6.874999999996467e-06, 6.2640000000058205e-06, 1.5014000000000693e-05, 1.3138999999995349e-05, 1.1056000000002342e-05, 2.319000000000626e-06, 2.29200000000096e-06, 1.127699999999704e-05, 1.3749999999999873e-05, 1.3348000000003302e-05, 1.0638999999999788e-05, 5.026999999997728e-06, 9.597999999999551e-06], 'diff': [0, 4.166999999999366e-06, 7.735999999994303e-06, 6.875000000003406e-06, 8.152999999996857e-06, 3.77800000000289e-06, 1.1471999999998483e-05, 6.249999999999312e-06, 9.180000000004462e-06, 9.638999999998787e-06, 1.540299999999717e-05, 3.54200000000221e-06, 9.833000000000758e-06, 3.7359999999972415e-06, 9.195000000003506e-06, 2.319000000000626e-06, 6.249999999999312e-06, 5.207999999999602e-06, 7.555999999998841e-06, 8.736000000002242e-06, 1.2096999999995639e-05, 1.3973000000000457e-05, 3.151999999999322e-06, 1.3139000000002288e-05, 1.0416999999998677e-05, 1.2721999999999734e-05, 4.1809999999989356e-06, 5.430000000000712e-06, 4.8200000000026e-06, 2.915999999998642e-06, 7.723000000001146e-06, 1.4624999999997279e-05, 5.888000000002502e-06, 4.9449999999992555e-06, 1.1485999999998053e-05, 1.2500000000005562e-05, 6.0829999999970075e-06, 6.874999999996467e-06, 6.2640000000058205e-06, 1.5014000000000693e-05, 1.3138999999995349e-05, 1.1056000000002342e-05, 2.319000000000626e-06, 2.29200000000096e-06, 1.127699999999704e-05, 1.3749999999999873e-05, 1.3348000000003302e-05, 1.0638999999999788e-05, 5.026999999997728e-06, 9.597999999999551e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:32.621" endtime="20201112 12:26:32.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.611" endtime="20201112 12:26:32.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.637" level="INFO">${RESULT} = [{'time': 0.038582875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.038597486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:32.630" endtime="20201112 12:26:32.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:32.656" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:32.639" endtime="20201112 12:26:32.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.666" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:32.664" endtime="20201112 12:26:32.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.671" level="INFO">VALUE: [4.166999999999366e-06, 6.875000000003406e-06, 3.77800000000289e-06, 6.249999999999312e-06, 9.638999999998787e-06, 3.54200000000221e-06, 3.7359999999972415e-06, 2.319000000000626e-06, 5.207999999999602e-06, 8.736000000002242e-06, 1.3973000000000457e-05, 1.3139000000002288e-05, 1.2721999999999734e-05, 5.430000000000712e-06, 2.915999999998642e-06, 1.4624999999997279e-05, 4.9449999999992555e-06, 1.2500000000005562e-05, 6.874999999996467e-06, 1.5014000000000693e-05, 1.1056000000002342e-05, 2.29200000000096e-06, 1.3749999999999873e-05, 1.0638999999999788e-05, 9.597999999999551e-06]</msg>
<status status="PASS" starttime="20201112 12:26:32.668" endtime="20201112 12:26:32.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.658" endtime="20201112 12:26:32.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.686" endtime="20201112 12:26:32.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.695" endtime="20201112 12:26:32.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.690" endtime="20201112 12:26:32.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.681" endtime="20201112 12:26:32.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.142" endtime="20201112 12:26:32.720"></status>
</kw>
<msg timestamp="20201112 12:26:32.721" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.742" endtime="20201112 12:26:32.755"></status>
</kw>
<msg timestamp="20201112 12:26:32.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.737" endtime="20201112 12:26:32.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.759" endtime="20201112 12:26:32.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.765" endtime="20201112 12:26:32.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.730" endtime="20201112 12:26:32.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.725" endtime="20201112 12:26:32.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.789" endtime="20201112 12:26:33.110"></status>
</kw>
<msg timestamp="20201112 12:26:33.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038462806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038476389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.786" endtime="20201112 12:26:33.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038462806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038476389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.117" endtime="20201112 12:26:33.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.129" endtime="20201112 12:26:33.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.778" endtime="20201112 12:26:33.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.773" endtime="20201112 12:26:33.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.146" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:33.144" endtime="20201112 12:26:33.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.155" level="INFO">VALUE: [{'time': 0.038462806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038476389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.358299999999757e-05, 'source_diff': 1.358299999999757e-05}, {'time': 0.038487014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038491819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8049999999966175e-06, 'source_diff': 4.8049999999966175e-06}, {'time': 0.038496208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.038503306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.09800000000399e-06, 'source_diff': 7.09800000000399e-06}, {'time': 0.038510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.762999999999908e-06, 'source_diff': 6.762999999999908e-06}, {'time': 0.038523764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3695000000001067e-05, 'source_diff': 1.3695000000001067e-05}, {'time': 0.038537722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.038541694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.038548167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.038557764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.038565903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.038572375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.038575306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.038579278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.038585542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038597639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2097000000002578e-05, 'source_diff': 1.2097000000002578e-05}, {'time': 0.038610583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2943999999993905e-05, 'source_diff': 1.2943999999993905e-05}, {'time': 0.038623514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2931000000000747e-05, 'source_diff': 1.2931000000000747e-05}, {'time': 0.038628319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8050000000035564e-06, 'source_diff': 4.8050000000035564e-06}, {'time': 0.038634583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038639194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.038645653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.038656083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.038663389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.038677153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.038680931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.038696347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5415999999997265e-05, 'source_diff': 1.5415999999997265e-05}, {'time': 0.038710111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.038717236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000003656e-06, 'source_diff': 7.125000000003656e-06}, {'time': 0.038724514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038737264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2749999999998873e-05, 'source_diff': 1.2749999999998873e-05}, {'time': 0.038739806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.038746264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.038753542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.038768583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2735999999999303e-05, 'source_diff': 1.2735999999999303e-05}, {'time': 0.038780042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.038784083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0409999999962976e-06, 'source_diff': 4.0409999999962976e-06}, {'time': 0.038796333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2250000000005312e-05, 'source_diff': 1.2250000000005312e-05}, {'time': 0.038809472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3138999999995349e-05, 'source_diff': 1.3138999999995349e-05}, {'time': 0.038820097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038823069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9720000000038604e-06, 'source_diff': 2.9720000000038604e-06}, {'time': 0.038833681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0612000000000121e-05, 'source_diff': 1.0612000000000121e-05}, {'time': 0.038844736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.105499999999593e-05, 'source_diff': 1.105499999999593e-05}, {'time': 0.038859542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4805999999999153e-05, 'source_diff': 1.4805999999999153e-05}, {'time': 0.038867667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.038874778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.038883153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:33.149" endtime="20201112 12:26:33.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.138" endtime="20201112 12:26:33.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:33.193" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.160" endtime="20201112 12:26:33.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.203" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:33.201" endtime="20201112 12:26:33.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.211" level="INFO">VALUE: {'sourcetime': [0.038462806, 0.038476389, 0.038487014, 0.038491819, 0.038496208, 0.038503306, 0.038510069, 0.038523764, 0.038537722, 0.038541694, 0.038548167, 0.038557764, 0.038565903, 0.038572375, 0.038575306, 0.038579278, 0.038585542, 0.038597639, 0.038610583, 0.038623514, 0.038628319, 0.038634583, 0.038639194, 0.038645653, 0.038656083, 0.038663389, 0.038677153, 0.038680931, 0.038696347, 0.038710111, 0.038717236, 0.038724514, 0.038737264, 0.038739806, 0.038746264, 0.038753542, 0.038755847, 0.038768583, 0.038780042, 0.038784083, 0.038796333, 0.038809472, 0.038820097, 0.038823069, 0.038833681, 0.038844736, 0.038859542, 0.038867667, 0.038874778, 0.038883153], 'eventsource_diff': [0, 1.358299999999757e-05, 1.0625000000000218e-05, 4.8049999999966175e-06, 4.389000000000476e-06, 7.09800000000399e-06, 6.762999999999908e-06, 1.3695000000001067e-05, 1.3958000000001414e-05, 3.971999999997922e-06, 6.4729999999998955e-06, 9.597000000000078e-06, 8.138999999997287e-06, 6.472000000000422e-06, 2.9309999999976855e-06, 3.9720000000048605e-06, 6.2639999999988816e-06, 1.2097000000002578e-05, 1.2943999999993905e-05, 1.2931000000000747e-05, 4.8050000000035564e-06, 6.2639999999988816e-06, 4.611000000001586e-06, 6.459000000000326e-06, 1.0429999999998774e-05, 7.305999999998591e-06, 1.3763999999999443e-05, 3.77800000000289e-06, 1.5415999999997265e-05, 1.3763999999999443e-05, 7.125000000003656e-06, 7.2779999999994516e-06, 1.2749999999998873e-05, 2.54200000000121e-06, 6.458000000000852e-06, 7.2779999999994516e-06, 2.305000000001056e-06, 1.2735999999999303e-05, 1.1458999999998387e-05, 4.0409999999962976e-06, 1.2250000000005312e-05, 1.3138999999995349e-05, 1.0625000000000218e-05, 2.9720000000038604e-06, 1.0612000000000121e-05, 1.105499999999593e-05, 1.4805999999999153e-05, 8.125000000004656e-06, 7.110999999997147e-06, 8.374999999997967e-06], 'diff': [0, 1.358299999999757e-05, 1.0625000000000218e-05, 4.8049999999966175e-06, 4.389000000000476e-06, 7.09800000000399e-06, 6.762999999999908e-06, 1.3695000000001067e-05, 1.3958000000001414e-05, 3.971999999997922e-06, 6.4729999999998955e-06, 9.597000000000078e-06, 8.138999999997287e-06, 6.472000000000422e-06, 2.9309999999976855e-06, 3.9720000000048605e-06, 6.2639999999988816e-06, 1.2097000000002578e-05, 1.2943999999993905e-05, 1.2931000000000747e-05, 4.8050000000035564e-06, 6.2639999999988816e-06, 4.611000000001586e-06, 6.459000000000326e-06, 1.0429999999998774e-05, 7.305999999998591e-06, 1.3763999999999443e-05, 3.77800000000289e-06, 1.5415999999997265e-05, 1.3763999999999443e-05, 7.125000000003656e-06, 7.2779999999994516e-06, 1.2749999999998873e-05, 2.54200000000121e-06, 6.458000000000852e-06, 7.2779999999994516e-06, 2.305000000001056e-06, 1.2735999999999303e-05, 1.1458999999998387e-05, 4.0409999999962976e-06, 1.2250000000005312e-05, 1.3138999999995349e-05, 1.0625000000000218e-05, 2.9720000000038604e-06, 1.0612000000000121e-05, 1.105499999999593e-05, 1.4805999999999153e-05, 8.125000000004656e-06, 7.110999999997147e-06, 8.374999999997967e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:33.206" endtime="20201112 12:26:33.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.195" endtime="20201112 12:26:33.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.223" level="INFO">${RESULT} = [{'time': 0.038476389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.358299999999757e-05, 'source_diff': 1.358299999999757e-05}, {'time': 0.038491819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:33.215" endtime="20201112 12:26:33.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:33.241" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.225" endtime="20201112 12:26:33.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.252" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:33.250" endtime="20201112 12:26:33.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.257" level="INFO">VALUE: [1.358299999999757e-05, 4.8049999999966175e-06, 7.09800000000399e-06, 1.3695000000001067e-05, 3.971999999997922e-06, 9.597000000000078e-06, 6.472000000000422e-06, 3.9720000000048605e-06, 1.2097000000002578e-05, 1.2931000000000747e-05, 6.2639999999988816e-06, 6.459000000000326e-06, 7.305999999998591e-06, 3.77800000000289e-06, 1.3763999999999443e-05, 7.2779999999994516e-06, 2.54200000000121e-06, 7.2779999999994516e-06, 1.2735999999999303e-05, 4.0409999999962976e-06, 1.3138999999995349e-05, 2.9720000000038604e-06, 1.105499999999593e-05, 8.125000000004656e-06, 8.374999999997967e-06]</msg>
<status status="PASS" starttime="20201112 12:26:33.254" endtime="20201112 12:26:33.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.243" endtime="20201112 12:26:33.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.267" endtime="20201112 12:26:33.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.275" endtime="20201112 12:26:33.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.271" endtime="20201112 12:26:33.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.262" endtime="20201112 12:26:33.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.722" endtime="20201112 12:26:33.301"></status>
</kw>
<msg timestamp="20201112 12:26:33.302" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.323" endtime="20201112 12:26:33.337"></status>
</kw>
<msg timestamp="20201112 12:26:33.338" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.318" endtime="20201112 12:26:33.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.345" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.341" endtime="20201112 12:26:33.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.347" endtime="20201112 12:26:33.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.311" endtime="20201112 12:26:33.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.306" endtime="20201112 12:26:33.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.371" endtime="20201112 12:26:33.688"></status>
</kw>
<msg timestamp="20201112 12:26:33.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038977472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038988514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.367" endtime="20201112 12:26:33.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038977472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038988514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.695" endtime="20201112 12:26:33.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.708" endtime="20201112 12:26:33.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.360" endtime="20201112 12:26:33.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.355" endtime="20201112 12:26:33.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.725" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:33.723" endtime="20201112 12:26:33.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.733" level="INFO">VALUE: [{'time': 0.038977472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038988514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.038999778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.039011875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2097000000002578e-05, 'source_diff': 1.2097000000002578e-05}, {'time': 0.039023556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.039029833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.03904525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.541699999999674e-05, 'source_diff': 1.541699999999674e-05}, {'time': 0.039053806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.55600000000678e-06, 'source_diff': 8.55600000000678e-06}, {'time': 0.039059861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.039072222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2360999999995459e-05, 'source_diff': 1.2360999999995459e-05}, {'time': 0.039080944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.039090542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.039096403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.039111444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.504100000000036e-05, 'source_diff': 1.504100000000036e-05}, {'time': 0.039126014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4569999999998473e-05, 'source_diff': 1.4569999999998473e-05}, {'time': 0.039139139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.039145403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.039153542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.039157111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.039160875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.039168389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.039183, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4611000000004648e-05, 'source_diff': 1.4611000000004648e-05}, {'time': 0.039187389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.039198222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0832999999994819e-05, 'source_diff': 1.0832999999994819e-05}, {'time': 0.039204486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.039210333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.039220347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.039231194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0846999999994389e-05, 'source_diff': 1.0846999999994389e-05}, {'time': 0.039236417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.223000000005584e-06, 'source_diff': 5.223000000005584e-06}, {'time': 0.039244778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.039253319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.039260625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.039266514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.039270458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.039276542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083999999996481e-06, 'source_diff': 6.083999999996481e-06}, {'time': 0.039287972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1429999999999774e-05, 'source_diff': 1.1429999999999774e-05}, {'time': 0.039299236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000003882e-05, 'source_diff': 1.1264000000003882e-05}, {'time': 0.039308625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.039315528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.039329778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4250000000000373e-05, 'source_diff': 1.4250000000000373e-05}, {'time': 0.039338264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999995053e-06, 'source_diff': 8.485999999995053e-06}, {'time': 0.039345597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3330000000051965e-06, 'source_diff': 7.3330000000051965e-06}, {'time': 0.039354347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.039360181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.83400000000317e-06, 'source_diff': 5.83400000000317e-06}, {'time': 0.039375403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.039390417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5013999999993755e-05, 'source_diff': 1.5013999999993755e-05}, {'time': 0.039397139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.039408361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1222000000005172e-05, 'source_diff': 1.1222000000005172e-05}, {'time': 0.039410889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.527999999994701e-06, 'source_diff': 2.527999999994701e-06}, {'time': 0.039415069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:33.727" endtime="20201112 12:26:33.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.716" endtime="20201112 12:26:33.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:33.770" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.739" endtime="20201112 12:26:33.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.779" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:33.777" endtime="20201112 12:26:33.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.786" level="INFO">VALUE: {'sourcetime': [0.038977472, 0.038988514, 0.038999778, 0.039011875, 0.039023556, 0.039029833, 0.03904525, 0.039053806, 0.039059861, 0.039072222, 0.039080944, 0.039090542, 0.039096403, 0.039111444, 0.039126014, 0.039139139, 0.039145403, 0.039153542, 0.039157111, 0.039160875, 0.039168389, 0.039183, 0.039187389, 0.039198222, 0.039204486, 0.039210333, 0.039220347, 0.039231194, 0.039236417, 0.039244778, 0.039253319, 0.039260625, 0.039266514, 0.039270458, 0.039276542, 0.039287972, 0.039299236, 0.039308625, 0.039315528, 0.039329778, 0.039338264, 0.039345597, 0.039354347, 0.039360181, 0.039375403, 0.039390417, 0.039397139, 0.039408361, 0.039410889, 0.039415069], 'eventsource_diff': [0, 1.1042000000002772e-05, 1.1263999999996943e-05, 1.2097000000002578e-05, 1.1680999999999497e-05, 6.276999999998978e-06, 1.541699999999674e-05, 8.55600000000678e-06, 6.054999999997868e-06, 1.2360999999995459e-05, 8.722000000002672e-06, 9.597999999999551e-06, 5.861000000002836e-06, 1.504100000000036e-05, 1.4569999999998473e-05, 1.3125000000002718e-05, 6.2639999999988816e-06, 8.138999999997287e-06, 3.5690000000018762e-06, 3.7639999999963814e-06, 7.514000000000132e-06, 1.4611000000004648e-05, 4.389000000000476e-06, 1.0832999999994819e-05, 6.2639999999988816e-06, 5.847000000003266e-06, 1.0014000000002632e-05, 1.0846999999994389e-05, 5.223000000005584e-06, 8.360999999998397e-06, 8.541000000000798e-06, 7.305999999998591e-06, 5.889000000001976e-06, 3.943999999998782e-06, 6.083999999996481e-06, 1.1429999999999774e-05, 1.1264000000003882e-05, 9.388999999998537e-06, 6.903000000002546e-06, 1.4250000000000373e-05, 8.485999999995053e-06, 7.3330000000051965e-06, 8.749999999994873e-06, 5.83400000000317e-06, 1.5222000000002234e-05, 1.5013999999993755e-05, 6.722000000000672e-06, 1.1222000000005172e-05, 2.527999999994701e-06, 4.179999999999462e-06], 'diff': [0, 1.1042000000002772e-05, 1.1263999999996943e-05, 1.2097000000002578e-05, 1.1680999999999497e-05, 6.276999999998978e-06, 1.541699999999674e-05, 8.55600000000678e-06, 6.054999999997868e-06, 1.2360999999995459e-05, 8.722000000002672e-06, 9.597999999999551e-06, 5.861000000002836e-06, 1.504100000000036e-05, 1.4569999999998473e-05, 1.3125000000002718e-05, 6.2639999999988816e-06, 8.138999999997287e-06, 3.5690000000018762e-06, 3.7639999999963814e-06, 7.514000000000132e-06, 1.4611000000004648e-05, 4.389000000000476e-06, 1.0832999999994819e-05, 6.2639999999988816e-06, 5.847000000003266e-06, 1.0014000000002632e-05, 1.0846999999994389e-05, 5.223000000005584e-06, 8.360999999998397e-06, 8.541000000000798e-06, 7.305999999998591e-06, 5.889000000001976e-06, 3.943999999998782e-06, 6.083999999996481e-06, 1.1429999999999774e-05, 1.1264000000003882e-05, 9.388999999998537e-06, 6.903000000002546e-06, 1.4250000000000373e-05, 8.485999999995053e-06, 7.3330000000051965e-06, 8.749999999994873e-06, 5.83400000000317e-06, 1.5222000000002234e-05, 1.5013999999993755e-05, 6.722000000000672e-06, 1.1222000000005172e-05, 2.527999999994701e-06, 4.179999999999462e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:33.782" endtime="20201112 12:26:33.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.772" endtime="20201112 12:26:33.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.799" level="INFO">${RESULT} = [{'time': 0.038988514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.039011875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:33.791" endtime="20201112 12:26:33.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:33.817" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.801" endtime="20201112 12:26:33.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.828" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:33.826" endtime="20201112 12:26:33.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.833" level="INFO">VALUE: [1.1042000000002772e-05, 1.2097000000002578e-05, 6.276999999998978e-06, 8.55600000000678e-06, 1.2360999999995459e-05, 9.597999999999551e-06, 1.504100000000036e-05, 1.3125000000002718e-05, 8.138999999997287e-06, 3.7639999999963814e-06, 1.4611000000004648e-05, 1.0832999999994819e-05, 5.847000000003266e-06, 1.0846999999994389e-05, 8.360999999998397e-06, 7.305999999998591e-06, 3.943999999998782e-06, 1.1429999999999774e-05, 9.388999999998537e-06, 1.4250000000000373e-05, 7.3330000000051965e-06, 5.83400000000317e-06, 1.5013999999993755e-05, 1.1222000000005172e-05, 4.179999999999462e-06]</msg>
<status status="PASS" starttime="20201112 12:26:33.830" endtime="20201112 12:26:33.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.819" endtime="20201112 12:26:33.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.843" endtime="20201112 12:26:33.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.851" endtime="20201112 12:26:33.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.847" endtime="20201112 12:26:33.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.838" endtime="20201112 12:26:33.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.303" endtime="20201112 12:26:33.877"></status>
</kw>
<msg timestamp="20201112 12:26:33.877" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.899" endtime="20201112 12:26:33.912"></status>
</kw>
<msg timestamp="20201112 12:26:33.914" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.894" endtime="20201112 12:26:33.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.920" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.916" endtime="20201112 12:26:33.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.923" endtime="20201112 12:26:33.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.887" endtime="20201112 12:26:33.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.882" endtime="20201112 12:26:33.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.948" endtime="20201112 12:26:34.263"></status>
</kw>
<msg timestamp="20201112 12:26:34.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038994986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038998736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.945" endtime="20201112 12:26:34.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038994986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038998736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.267" endtime="20201112 12:26:34.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.272" endtime="20201112 12:26:34.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.937" endtime="20201112 12:26:34.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.932" endtime="20201112 12:26:34.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.280" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:34.279" endtime="20201112 12:26:34.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.284" level="INFO">VALUE: [{'time': 0.038994986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038998736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.039007917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.039012097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.039021278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.039035875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.039042764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.039046319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.039050514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.039058028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.039067903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.039083042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5138999999997349e-05, 'source_diff': 1.5138999999997349e-05}, {'time': 0.039092431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.039095986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.039107042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.039119389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2346999999995889e-05, 'source_diff': 1.2346999999995889e-05}, {'time': 0.039127917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.039142306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.039153792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.039164, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.039170056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.05600000000428e-06, 'source_diff': 6.05600000000428e-06}, {'time': 0.039178819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.76299999999497e-06, 'source_diff': 8.76299999999497e-06}, {'time': 0.0391855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.039195319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.039203667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347999999998301e-06, 'source_diff': 8.347999999998301e-06}, {'time': 0.039206375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7080000000040405e-06, 'source_diff': 2.7080000000040405e-06}, {'time': 0.039216194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.039220583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.039225167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583999999994981e-06, 'source_diff': 4.583999999994981e-06}, {'time': 0.039233306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.039237917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999994647e-06, 'source_diff': 4.610999999994647e-06}, {'time': 0.039248556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.039256694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138000000004753e-06, 'source_diff': 8.138000000004753e-06}, {'time': 0.039262333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.039276931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4597999999997613e-05, 'source_diff': 1.4597999999997613e-05}, {'time': 0.039289667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2735999999999303e-05, 'source_diff': 1.2735999999999303e-05}, {'time': 0.039298, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.039312181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.039321778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.039333917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2139000000001288e-05, 'source_diff': 1.2139000000001288e-05}, {'time': 0.039348264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.039355361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.039369556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.03937375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.039385208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.039397722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}, {'time': 0.039401694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.039413403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1708999999998637e-05, 'source_diff': 1.1708999999998637e-05}, {'time': 0.039427583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.039434861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:34.281" endtime="20201112 12:26:34.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.276" endtime="20201112 12:26:34.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:34.300" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.287" endtime="20201112 12:26:34.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.304" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:34.303" endtime="20201112 12:26:34.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.308" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.038994986, 0.038998736, 0.039007917, 0.039012097, 0.039021278, 0.039035875, 0.039042764, 0.039046319, 0.039050514, 0.039058028, 0.039067903, 0.039083042, 0.039092431, 0.039095986, 0.039107042, 0.039119389, 0.039127917, 0.039142306, 0.039153792, 0.039164, 0.039170056, 0.039178819, 0.0391855, 0.039195319, 0.039203667, 0.039206375, 0.039216194, 0.039220583, 0.039225167, 0.039233306, 0.039237917, 0.039248556, 0.039256694, 0.039262333, 0.039276931, 0.039289667, 0.039298, 0.039312181, 0.039321778, 0.039333917, 0.039348264, 0.039355361, 0.039369556, 0.03937375, 0.039385208, 0.039397722, 0.039401694, 0.039413403, 0.039427583, 0.039434861], 'eventsource_diff': [0, 3.7499999999968114e-06, 9.181000000003936e-06, 4.179999999999462e-06, 9.180999999996997e-06, 1.459699999999814e-05, 6.889000000002976e-06, 3.5550000000023063e-06, 4.1949999999985055e-06, 7.514000000000132e-06, 9.874999999999468e-06, 1.5138999999997349e-05, 9.388999999998537e-06, 3.5550000000023063e-06, 1.1056000000002342e-05, 1.2346999999995889e-05, 8.528000000000702e-06, 1.4389000000003538e-05, 1.1485999999998053e-05, 1.0207999999997663e-05, 6.05600000000428e-06, 8.76299999999497e-06, 6.681000000001436e-06, 9.819000000001188e-06, 8.347999999998301e-06, 2.7080000000040405e-06, 9.819000000001188e-06, 4.389000000000476e-06, 4.583999999994981e-06, 8.139000000004226e-06, 4.610999999994647e-06, 1.0638999999999788e-05, 8.138000000004753e-06, 5.639000000001726e-06, 1.4597999999997613e-05, 1.2735999999999303e-05, 8.332999999999258e-06, 1.4181000000001998e-05, 9.597000000000078e-06, 1.2139000000001288e-05, 1.434699999999789e-05, 7.0969999999975775e-06, 1.4195000000001567e-05, 4.193999999999032e-06, 1.1457999999998913e-05, 1.2514000000005132e-05, 3.971999999997922e-06, 1.1708999999998637e-05, 1.4180000000002524e-05, 7.2779999999994516e-06], 'diff': [0, 3.7499999999968114e-06, 9.181000000003936e-06, 4.179999999999462e-06, 9.180999999996997e-06, 1.459699999999814e-05, 6.889000000002976e-06, 3.5550000000023063e-06, 4.1949999999985055e-06, 7.514000000000132e-06, 9.874999999999468e-06, 1.5138999999997349e-05, 9.388999999998537e-06, 3.5550000000023063e-06, 1.1056000000002342e-05, 1.2346999999995889e-05, 8.528000000000702e-06, 1.4389000000003538e-05, 1.1485999999998053e-05, 1.0207999999997663e-05, 6.05600000000428e-06, 8.76299999999497e-06, 6.681000000001436e-06, 9.819000000001188e-06, 8.347999999998301e-06, 2.7080000000040405e-06, 9.819000000001188e-06, 4.389000000000476e-06, 4.583999999994981e-06, 8.139000000004226e-06, 4.610999999994647e-06, 1.0638999999999788e-05, 8.138000000004753e-06, 5.639000000001726e-06, 1.4597999999997613e-05, 1.2735999999999303e-05, 8.332999999999258e-06, 1.4181000000001998e-05, 9.597000000000078e-06, 1.2139000000001288e-05, 1.434699999999789e-05, 7.0969999999975775e-06, 1.4195000000001567e-05, 4.193999999999032e-06, 1.1457999999998913e-05, 1.2514000000005132e-05, 3.971999999997922e-06, 1.1708999999998637e-05, 1.4180000000002524e-05, 7.2779999999994516e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:34.306" endtime="20201112 12:26:34.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.301" endtime="20201112 12:26:34.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.313" level="INFO">${RESULT} = [{'time': 0.038998736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.039012097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:34.310" endtime="20201112 12:26:34.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:34.321" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.314" endtime="20201112 12:26:34.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.326" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:34.325" endtime="20201112 12:26:34.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.329" level="INFO">VALUE: [3.7499999999968114e-06, 4.179999999999462e-06, 1.459699999999814e-05, 3.5550000000023063e-06, 7.514000000000132e-06, 1.5138999999997349e-05, 3.5550000000023063e-06, 1.2346999999995889e-05, 1.4389000000003538e-05, 1.0207999999997663e-05, 8.76299999999497e-06, 9.819000000001188e-06, 2.7080000000040405e-06, 4.389000000000476e-06, 8.139000000004226e-06, 1.0638999999999788e-05, 5.639000000001726e-06, 1.2735999999999303e-05, 1.4181000000001998e-05, 1.2139000000001288e-05, 7.0969999999975775e-06, 4.193999999999032e-06, 1.2514000000005132e-05, 1.1708999999998637e-05, 7.2779999999994516e-06]</msg>
<status status="PASS" starttime="20201112 12:26:34.328" endtime="20201112 12:26:34.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.322" endtime="20201112 12:26:34.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.333" endtime="20201112 12:26:34.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.337" endtime="20201112 12:26:34.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.335" endtime="20201112 12:26:34.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.331" endtime="20201112 12:26:34.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.878" endtime="20201112 12:26:34.359"></status>
</kw>
<msg timestamp="20201112 12:26:34.359" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.369" endtime="20201112 12:26:34.380"></status>
</kw>
<msg timestamp="20201112 12:26:34.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.367" endtime="20201112 12:26:34.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.382" endtime="20201112 12:26:34.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.385" endtime="20201112 12:26:34.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.363" endtime="20201112 12:26:34.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.361" endtime="20201112 12:26:34.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.396" endtime="20201112 12:26:34.700"></status>
</kw>
<msg timestamp="20201112 12:26:34.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.394" endtime="20201112 12:26:34.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.706" endtime="20201112 12:26:34.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.719" endtime="20201112 12:26:34.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.391" endtime="20201112 12:26:34.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.388" endtime="20201112 12:26:34.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.736" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:34.734" endtime="20201112 12:26:34.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.744" level="INFO">VALUE: [{'time': 0.021987764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305000000000649e-05, 'source_diff': 1.2305000000000649e-05}, {'time': 0.022007583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.022017597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.022023236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.02203825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5013999999997224e-05, 'source_diff': 1.5013999999997224e-05}, {'time': 0.022049306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.022061222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1915999999997234e-05, 'source_diff': 1.1915999999997234e-05}, {'time': 0.022065583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.022071444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022083944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2500000000002093e-05, 'source_diff': 1.2500000000002093e-05}, {'time': 0.022089792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.022092528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.022107125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.022112417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.022127778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.536100000000193e-05, 'source_diff': 1.536100000000193e-05}, {'time': 0.022143208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5430000000000305e-05, 'source_diff': 1.5430000000000305e-05}, {'time': 0.022154694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.022162819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.022178042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222999999998238e-05, 'source_diff': 1.5222999999998238e-05}, {'time': 0.022191806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3764000000002913e-05, 'source_diff': 1.3764000000002913e-05}, {'time': 0.022198903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.022203292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.022209153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022211444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.02221875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.022221278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.022231903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.022241972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0068999999997968e-05, 'source_diff': 1.0068999999997968e-05}, {'time': 0.022252986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.022267167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.022276139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022282417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.022292625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.022306597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.022313486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022325375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.022335597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.022348319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.022356042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.022366681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.022379833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3151999999998915e-05, 'source_diff': 1.3151999999998915e-05}, {'time': 0.022395056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5223000000001707e-05, 'source_diff': 1.5223000000001707e-05}, {'time': 0.022402583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.022409875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.022425111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.022438028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2916999999997708e-05, 'source_diff': 1.2916999999997708e-05}, {'time': 0.022443667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.022452014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.022465792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3777999999999013e-05, 'source_diff': 1.3777999999999013e-05}]</msg>
<status status="PASS" starttime="20201112 12:26:34.738" endtime="20201112 12:26:34.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.728" endtime="20201112 12:26:34.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:34.779" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.750" endtime="20201112 12:26:34.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.789" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:34.786" endtime="20201112 12:26:34.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.796" level="INFO">VALUE: {'sourcetime': [0.021987764, 0.022000069, 0.022007583, 0.022017597, 0.022023236, 0.02203825, 0.022049306, 0.022061222, 0.022065583, 0.022071444, 0.022083944, 0.022089792, 0.022092528, 0.022107125, 0.022112417, 0.022127778, 0.022143208, 0.022154694, 0.022162819, 0.022178042, 0.022191806, 0.022198903, 0.022203292, 0.022209153, 0.022211444, 0.02221875, 0.022221278, 0.022231903, 0.022241972, 0.022252986, 0.022267167, 0.022276139, 0.022282417, 0.022292625, 0.022306597, 0.022313486, 0.022325375, 0.022335597, 0.022348319, 0.022356042, 0.022366681, 0.022379833, 0.022395056, 0.022402583, 0.022409875, 0.022425111, 0.022438028, 0.022443667, 0.022452014, 0.022465792], 'eventsource_diff': [0, 1.2305000000000649e-05, 7.514000000000132e-06, 1.0013999999999162e-05, 5.639000000001726e-06, 1.5013999999997224e-05, 1.1056000000002342e-05, 1.1915999999997234e-05, 4.361000000001336e-06, 5.860999999999367e-06, 1.2500000000002093e-05, 5.8479999999992704e-06, 2.735999999999711e-06, 1.459699999999814e-05, 5.292000000000491e-06, 1.536100000000193e-05, 1.5430000000000305e-05, 1.1485999999998053e-05, 8.125000000001187e-06, 1.5222999999998238e-05, 1.3764000000002913e-05, 7.0969999999975775e-06, 4.389000000000476e-06, 5.860999999999367e-06, 2.2910000000014863e-06, 7.305999999998591e-06, 2.52800000000164e-06, 1.0625000000000218e-05, 1.0068999999997968e-05, 1.1014000000000163e-05, 1.4181000000001998e-05, 8.971999999999453e-06, 6.2779999999984515e-06, 1.0208000000001133e-05, 1.3972000000000984e-05, 6.888999999999507e-06, 1.1889000000001038e-05, 1.0221999999997233e-05, 1.2721999999999734e-05, 7.723000000001146e-06, 1.0638999999999788e-05, 1.3151999999998915e-05, 1.5223000000001707e-05, 7.527000000000228e-06, 7.2919999999990215e-06, 1.5236000000001804e-05, 1.2916999999997708e-05, 5.639000000001726e-06, 8.346999999998828e-06, 1.3777999999999013e-05], 'diff': [0, 1.2305000000000649e-05, 7.514000000000132e-06, 1.0013999999999162e-05, 5.639000000001726e-06, 1.5013999999997224e-05, 1.1056000000002342e-05, 1.1915999999997234e-05, 4.361000000001336e-06, 5.860999999999367e-06, 1.2500000000002093e-05, 5.8479999999992704e-06, 2.735999999999711e-06, 1.459699999999814e-05, 5.292000000000491e-06, 1.536100000000193e-05, 1.5430000000000305e-05, 1.1485999999998053e-05, 8.125000000001187e-06, 1.5222999999998238e-05, 1.3764000000002913e-05, 7.0969999999975775e-06, 4.389000000000476e-06, 5.860999999999367e-06, 2.2910000000014863e-06, 7.305999999998591e-06, 2.52800000000164e-06, 1.0625000000000218e-05, 1.0068999999997968e-05, 1.1014000000000163e-05, 1.4181000000001998e-05, 8.971999999999453e-06, 6.2779999999984515e-06, 1.0208000000001133e-05, 1.3972000000000984e-05, 6.888999999999507e-06, 1.1889000000001038e-05, 1.0221999999997233e-05, 1.2721999999999734e-05, 7.723000000001146e-06, 1.0638999999999788e-05, 1.3151999999998915e-05, 1.5223000000001707e-05, 7.527000000000228e-06, 7.2919999999990215e-06, 1.5236000000001804e-05, 1.2916999999997708e-05, 5.639000000001726e-06, 8.346999999998828e-06, 1.3777999999999013e-05]}</msg>
<status status="PASS" starttime="20201112 12:26:34.791" endtime="20201112 12:26:34.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.781" endtime="20201112 12:26:34.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.808" level="INFO">${RESULT} = [{'time': 0.022000069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305000000000649e-05, 'source_diff': 1.2305000000000649e-05}, {'time': 0.022017597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:34.800" endtime="20201112 12:26:34.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:34.826" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.810" endtime="20201112 12:26:34.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.837" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:34.834" endtime="20201112 12:26:34.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.842" level="INFO">VALUE: [1.2305000000000649e-05, 1.0013999999999162e-05, 1.5013999999997224e-05, 1.1915999999997234e-05, 5.860999999999367e-06, 5.8479999999992704e-06, 1.459699999999814e-05, 1.536100000000193e-05, 1.1485999999998053e-05, 1.5222999999998238e-05, 7.0969999999975775e-06, 5.860999999999367e-06, 7.305999999998591e-06, 1.0625000000000218e-05, 1.1014000000000163e-05, 8.971999999999453e-06, 1.0208000000001133e-05, 6.888999999999507e-06, 1.0221999999997233e-05, 7.723000000001146e-06, 1.3151999999998915e-05, 7.527000000000228e-06, 1.5236000000001804e-05, 5.639000000001726e-06, 1.3777999999999013e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.839" endtime="20201112 12:26:34.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.828" endtime="20201112 12:26:34.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.851" endtime="20201112 12:26:34.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.860" endtime="20201112 12:26:34.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.855" endtime="20201112 12:26:34.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.847" endtime="20201112 12:26:34.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.359" endtime="20201112 12:26:34.886"></status>
</kw>
<msg timestamp="20201112 12:26:34.886" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.908" endtime="20201112 12:26:34.922"></status>
</kw>
<msg timestamp="20201112 12:26:34.923" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.903" endtime="20201112 12:26:34.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.929" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.925" endtime="20201112 12:26:34.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.931" endtime="20201112 12:26:34.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.896" endtime="20201112 12:26:34.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.891" endtime="20201112 12:26:34.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.956" endtime="20201112 12:26:35.270"></status>
</kw>
<msg timestamp="20201112 12:26:35.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039021986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039027833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.952" endtime="20201112 12:26:35.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039021986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039027833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.277" endtime="20201112 12:26:35.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.290" endtime="20201112 12:26:35.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.945" endtime="20201112 12:26:35.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.940" endtime="20201112 12:26:35.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.306" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:35.304" endtime="20201112 12:26:35.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.315" level="INFO">VALUE: [{'time': 0.039021986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039027833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.039038319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.039045778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.039049583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8049999999956174e-06, 'source_diff': 3.8049999999956174e-06}, {'time': 0.039053931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.039060819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8879999999965635e-06, 'source_diff': 6.8879999999965635e-06}, {'time': 0.03907, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.039085236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.039090028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.039105056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.039115347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0291000000002548e-05, 'source_diff': 1.0291000000002548e-05}, {'time': 0.039125347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.039134681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.039144903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.039152833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929999999996273e-06, 'source_diff': 7.929999999996273e-06}, {'time': 0.039162014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.039175778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.039187472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.039197681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208999999997137e-05, 'source_diff': 1.0208999999997137e-05}, {'time': 0.039212125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4444000000002344e-05, 'source_diff': 1.4444000000002344e-05}, {'time': 0.039219806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.039223347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5409999999957975e-06, 'source_diff': 3.5409999999957975e-06}, {'time': 0.039238778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.039242347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5689999999949373e-06, 'source_diff': 3.5689999999949373e-06}, {'time': 0.039256125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3778000000005952e-05, 'source_diff': 1.3778000000005952e-05}, {'time': 0.039264875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.039268444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.039272236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.039285333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3096999999996639e-05, 'source_diff': 1.3096999999996639e-05}, {'time': 0.039292028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.039303278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.03931725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.039332056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4805999999999153e-05, 'source_diff': 1.4805999999999153e-05}, {'time': 0.039346028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.039348542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.039355222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.039365694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.039372764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.039382625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.0393955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2875000000002468e-05, 'source_diff': 1.2875000000002468e-05}, {'time': 0.039409681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.039424486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.039429917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.039435139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.039445375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.039456014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.039458764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.039467694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.03948, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2306000000003592e-05, 'source_diff': 1.2306000000003592e-05}]</msg>
<status status="PASS" starttime="20201112 12:26:35.309" endtime="20201112 12:26:35.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.298" endtime="20201112 12:26:35.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:35.351" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.320" endtime="20201112 12:26:35.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.361" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:35.358" endtime="20201112 12:26:35.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.368" level="INFO">VALUE: {'sourcetime': [0.039021986, 0.039027833, 0.039038319, 0.039045778, 0.039049583, 0.039053931, 0.039060819, 0.03907, 0.039085236, 0.039090028, 0.039105056, 0.039115347, 0.039125347, 0.039134681, 0.039144903, 0.039152833, 0.039162014, 0.039175778, 0.039187472, 0.039197681, 0.039212125, 0.039219806, 0.039223347, 0.039238778, 0.039242347, 0.039256125, 0.039264875, 0.039268444, 0.039272236, 0.039285333, 0.039292028, 0.039303278, 0.03931725, 0.039332056, 0.039346028, 0.039348542, 0.039355222, 0.039365694, 0.039372764, 0.039382625, 0.0393955, 0.039409681, 0.039424486, 0.039429917, 0.039435139, 0.039445375, 0.039456014, 0.039458764, 0.039467694, 0.03948], 'eventsource_diff': [0, 5.846999999996327e-06, 1.0486000000003992e-05, 7.459000000001326e-06, 3.8049999999956174e-06, 4.34800000000124e-06, 6.8879999999965635e-06, 9.181000000003936e-06, 1.5236000000001804e-05, 4.791999999996521e-06, 1.5028000000000263e-05, 1.0291000000002548e-05, 9.999999999996123e-06, 9.333999999999731e-06, 1.0222000000004172e-05, 7.929999999996273e-06, 9.181000000003936e-06, 1.3763999999999443e-05, 1.1693999999999594e-05, 1.0208999999997137e-05, 1.4444000000002344e-05, 7.681000000002436e-06, 3.5409999999957975e-06, 1.5431000000003248e-05, 3.5689999999949373e-06, 1.3778000000005952e-05, 8.749999999994873e-06, 3.5690000000018762e-06, 3.79200000000246e-06, 1.3096999999996639e-05, 6.695000000001006e-06, 1.1249999999997373e-05, 1.3972000000000984e-05, 1.4805999999999153e-05, 1.3972000000000984e-05, 2.51400000000207e-06, 6.680000000001962e-06, 1.0471999999997483e-05, 7.069999999997911e-06, 9.860999999999898e-06, 1.2875000000002468e-05, 1.4181000000001998e-05, 1.480499999999968e-05, 5.431000000000186e-06, 5.221999999999172e-06, 1.0235999999996803e-05, 1.0638999999999788e-05, 2.7500000000027502e-06, 8.929999999997273e-06, 1.2306000000003592e-05], 'diff': [0, 5.846999999996327e-06, 1.0486000000003992e-05, 7.459000000001326e-06, 3.8049999999956174e-06, 4.34800000000124e-06, 6.8879999999965635e-06, 9.181000000003936e-06, 1.5236000000001804e-05, 4.791999999996521e-06, 1.5028000000000263e-05, 1.0291000000002548e-05, 9.999999999996123e-06, 9.333999999999731e-06, 1.0222000000004172e-05, 7.929999999996273e-06, 9.181000000003936e-06, 1.3763999999999443e-05, 1.1693999999999594e-05, 1.0208999999997137e-05, 1.4444000000002344e-05, 7.681000000002436e-06, 3.5409999999957975e-06, 1.5431000000003248e-05, 3.5689999999949373e-06, 1.3778000000005952e-05, 8.749999999994873e-06, 3.5690000000018762e-06, 3.79200000000246e-06, 1.3096999999996639e-05, 6.695000000001006e-06, 1.1249999999997373e-05, 1.3972000000000984e-05, 1.4805999999999153e-05, 1.3972000000000984e-05, 2.51400000000207e-06, 6.680000000001962e-06, 1.0471999999997483e-05, 7.069999999997911e-06, 9.860999999999898e-06, 1.2875000000002468e-05, 1.4181000000001998e-05, 1.480499999999968e-05, 5.431000000000186e-06, 5.221999999999172e-06, 1.0235999999996803e-05, 1.0638999999999788e-05, 2.7500000000027502e-06, 8.929999999997273e-06, 1.2306000000003592e-05]}</msg>
<status status="PASS" starttime="20201112 12:26:35.363" endtime="20201112 12:26:35.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.353" endtime="20201112 12:26:35.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.379" level="INFO">${RESULT} = [{'time': 0.039027833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.039045778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:35.372" endtime="20201112 12:26:35.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:35.398" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.382" endtime="20201112 12:26:35.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.408" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:35.406" endtime="20201112 12:26:35.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.414" level="INFO">VALUE: [5.846999999996327e-06, 7.459000000001326e-06, 4.34800000000124e-06, 9.181000000003936e-06, 4.791999999996521e-06, 1.0291000000002548e-05, 9.333999999999731e-06, 7.929999999996273e-06, 1.3763999999999443e-05, 1.0208999999997137e-05, 7.681000000002436e-06, 1.5431000000003248e-05, 1.3778000000005952e-05, 3.5690000000018762e-06, 1.3096999999996639e-05, 1.1249999999997373e-05, 1.4805999999999153e-05, 2.51400000000207e-06, 1.0471999999997483e-05, 9.860999999999898e-06, 1.4181000000001998e-05, 5.431000000000186e-06, 1.0235999999996803e-05, 2.7500000000027502e-06, 1.2306000000003592e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.411" endtime="20201112 12:26:35.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.400" endtime="20201112 12:26:35.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.423" endtime="20201112 12:26:35.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.432" endtime="20201112 12:26:35.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.427" endtime="20201112 12:26:35.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.419" endtime="20201112 12:26:35.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.887" endtime="20201112 12:26:35.458"></status>
</kw>
<msg timestamp="20201112 12:26:35.458" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.480" endtime="20201112 12:26:35.493"></status>
</kw>
<msg timestamp="20201112 12:26:35.494" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.475" endtime="20201112 12:26:35.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.501" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.497" endtime="20201112 12:26:35.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.503" endtime="20201112 12:26:35.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.468" endtime="20201112 12:26:35.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.463" endtime="20201112 12:26:35.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.527" endtime="20201112 12:26:35.844"></status>
</kw>
<msg timestamp="20201112 12:26:35.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038830528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.524" endtime="20201112 12:26:35.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038830528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.850" endtime="20201112 12:26:35.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.863" endtime="20201112 12:26:35.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.516" endtime="20201112 12:26:35.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.512" endtime="20201112 12:26:35.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.880" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:35.878" endtime="20201112 12:26:35.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.888" level="INFO">VALUE: [{'time': 0.038827389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038830528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1390000000061646e-06, 'source_diff': 3.1390000000061646e-06}, {'time': 0.038839708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.038852861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.038865361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.038873347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.038884361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013999999996693e-05, 'source_diff': 1.1013999999996693e-05}, {'time': 0.038893542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.038904181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.038918986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.038924625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.638999999994787e-06, 'source_diff': 5.638999999994787e-06}, {'time': 0.038934014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.389000000005476e-06, 'source_diff': 9.389000000005476e-06}, {'time': 0.038937986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.038943625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.038952222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.038956361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.038958875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999951312e-06, 'source_diff': 2.5139999999951312e-06}, {'time': 0.038964556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.038970986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.038977889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.038985181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.038993319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.137999999997814e-06, 'source_diff': 8.137999999997814e-06}, {'time': 0.038999167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.039014403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.039016708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3049999999941173e-06, 'source_diff': 2.3049999999941173e-06}, {'time': 0.039026306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.039040694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4388000000004064e-05, 'source_diff': 1.4388000000004064e-05}, {'time': 0.039051347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.039063847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.039071792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.039078125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.039081597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4720000000043605e-06, 'source_diff': 3.4720000000043605e-06}, {'time': 0.039096, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4402999999996169e-05, 'source_diff': 1.4402999999996169e-05}, {'time': 0.039102042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.039112681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0639000000006726e-05, 'source_diff': 1.0639000000006726e-05}, {'time': 0.039122306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.039131056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.039138778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.039150458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.039161722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000003882e-05, 'source_diff': 1.1264000000003882e-05}, {'time': 0.039168833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.039175708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.039183667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.959000000001826e-06, 'source_diff': 7.959000000001826e-06}, {'time': 0.039188444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777000000004417e-06, 'source_diff': 4.777000000004417e-06}, {'time': 0.039203042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4597999999997613e-05, 'source_diff': 1.4597999999997613e-05}, {'time': 0.039214111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1069000000002438e-05, 'source_diff': 1.1069000000002438e-05}, {'time': 0.039227875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.039235597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.721999999994733e-06, 'source_diff': 7.721999999994733e-06}, {'time': 0.039242278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.03925375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}]</msg>
<status status="PASS" starttime="20201112 12:26:35.882" endtime="20201112 12:26:35.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.872" endtime="20201112 12:26:35.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:35.924" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.894" endtime="20201112 12:26:35.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.933" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:35.931" endtime="20201112 12:26:35.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.940" level="INFO">VALUE: {'sourcetime': [0.038827389, 0.038830528, 0.038839708, 0.038852861, 0.038865361, 0.038873347, 0.038884361, 0.038893542, 0.038904181, 0.038918986, 0.038924625, 0.038934014, 0.038937986, 0.038943625, 0.038952222, 0.038956361, 0.038958875, 0.038964556, 0.038970986, 0.038977889, 0.038985181, 0.038993319, 0.038999167, 0.039014403, 0.039016708, 0.039026306, 0.039040694, 0.039051347, 0.039063847, 0.039071792, 0.039078125, 0.039081597, 0.039096, 0.039102042, 0.039112681, 0.039122306, 0.039131056, 0.039138778, 0.039150458, 0.039161722, 0.039168833, 0.039175708, 0.039183667, 0.039188444, 0.039203042, 0.039214111, 0.039227875, 0.039235597, 0.039242278, 0.03925375], 'eventsource_diff': [0, 3.1390000000061646e-06, 9.179999999997523e-06, 1.3153000000001858e-05, 1.2499999999998623e-05, 7.986000000001492e-06, 1.1013999999996693e-05, 9.181000000003936e-06, 1.0638999999999788e-05, 1.480499999999968e-05, 5.638999999994787e-06, 9.389000000005476e-06, 3.971999999997922e-06, 5.639000000001726e-06, 8.596999999999078e-06, 4.139000000000226e-06, 2.5139999999951312e-06, 5.681000000000436e-06, 6.430000000001712e-06, 6.903000000002546e-06, 7.2919999999990215e-06, 8.137999999997814e-06, 5.84800000000274e-06, 1.5236000000001804e-05, 2.3049999999941173e-06, 9.597999999999551e-06, 1.4388000000004064e-05, 1.0652999999999357e-05, 1.2499999999998623e-05, 7.945000000002256e-06, 6.3329999999972575e-06, 3.4720000000043605e-06, 1.4402999999996169e-05, 6.041999999997771e-06, 1.0639000000006726e-05, 9.624999999999218e-06, 8.749999999994873e-06, 7.722000000001672e-06, 1.1680000000000024e-05, 1.1264000000003882e-05, 7.110999999997147e-06, 6.874999999996467e-06, 7.959000000001826e-06, 4.777000000004417e-06, 1.4597999999997613e-05, 1.1069000000002438e-05, 1.3763999999999443e-05, 7.721999999994733e-06, 6.681000000001436e-06, 1.1471999999998483e-05], 'diff': [0, 3.1390000000061646e-06, 9.179999999997523e-06, 1.3153000000001858e-05, 1.2499999999998623e-05, 7.986000000001492e-06, 1.1013999999996693e-05, 9.181000000003936e-06, 1.0638999999999788e-05, 1.480499999999968e-05, 5.638999999994787e-06, 9.389000000005476e-06, 3.971999999997922e-06, 5.639000000001726e-06, 8.596999999999078e-06, 4.139000000000226e-06, 2.5139999999951312e-06, 5.681000000000436e-06, 6.430000000001712e-06, 6.903000000002546e-06, 7.2919999999990215e-06, 8.137999999997814e-06, 5.84800000000274e-06, 1.5236000000001804e-05, 2.3049999999941173e-06, 9.597999999999551e-06, 1.4388000000004064e-05, 1.0652999999999357e-05, 1.2499999999998623e-05, 7.945000000002256e-06, 6.3329999999972575e-06, 3.4720000000043605e-06, 1.4402999999996169e-05, 6.041999999997771e-06, 1.0639000000006726e-05, 9.624999999999218e-06, 8.749999999994873e-06, 7.722000000001672e-06, 1.1680000000000024e-05, 1.1264000000003882e-05, 7.110999999997147e-06, 6.874999999996467e-06, 7.959000000001826e-06, 4.777000000004417e-06, 1.4597999999997613e-05, 1.1069000000002438e-05, 1.3763999999999443e-05, 7.721999999994733e-06, 6.681000000001436e-06, 1.1471999999998483e-05]}</msg>
<status status="PASS" starttime="20201112 12:26:35.936" endtime="20201112 12:26:35.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.925" endtime="20201112 12:26:35.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.952" level="INFO">${RESULT} = [{'time': 0.038830528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1390000000061646e-06, 'source_diff': 3.1390000000061646e-06}, {'time': 0.038852861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:35.945" endtime="20201112 12:26:35.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:35.971" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.954" endtime="20201112 12:26:35.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.981" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:35.979" endtime="20201112 12:26:35.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.987" level="INFO">VALUE: [3.1390000000061646e-06, 1.3153000000001858e-05, 7.986000000001492e-06, 9.181000000003936e-06, 1.480499999999968e-05, 9.389000000005476e-06, 5.639000000001726e-06, 4.139000000000226e-06, 5.681000000000436e-06, 6.903000000002546e-06, 8.137999999997814e-06, 1.5236000000001804e-05, 9.597999999999551e-06, 1.0652999999999357e-05, 7.945000000002256e-06, 3.4720000000043605e-06, 6.041999999997771e-06, 9.624999999999218e-06, 7.722000000001672e-06, 1.1264000000003882e-05, 6.874999999996467e-06, 4.777000000004417e-06, 1.1069000000002438e-05, 7.721999999994733e-06, 1.1471999999998483e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.984" endtime="20201112 12:26:35.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.973" endtime="20201112 12:26:35.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.997" endtime="20201112 12:26:36.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.006" endtime="20201112 12:26:36.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.001" endtime="20201112 12:26:36.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.992" endtime="20201112 12:26:36.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.459" endtime="20201112 12:26:36.032"></status>
</kw>
<msg timestamp="20201112 12:26:36.033" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.054" endtime="20201112 12:26:36.068"></status>
</kw>
<msg timestamp="20201112 12:26:36.069" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.049" endtime="20201112 12:26:36.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.076" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.071" endtime="20201112 12:26:36.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.078" endtime="20201112 12:26:36.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.042" endtime="20201112 12:26:36.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.037" endtime="20201112 12:26:36.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.102" endtime="20201112 12:26:36.416"></status>
</kw>
<msg timestamp="20201112 12:26:36.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039108403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039116583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.098" endtime="20201112 12:26:36.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039108403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039116583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.422" endtime="20201112 12:26:36.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.435" endtime="20201112 12:26:36.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.091" endtime="20201112 12:26:36.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.086" endtime="20201112 12:26:36.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.452" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:36.449" endtime="20201112 12:26:36.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.460" level="INFO">VALUE: [{'time': 0.039108403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039116583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.039131611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5027999999993324e-05, 'source_diff': 1.5027999999993324e-05}, {'time': 0.039140319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.039148722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.039161056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2334000000002732e-05, 'source_diff': 1.2334000000002732e-05}, {'time': 0.039165569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.512999999997658e-06, 'source_diff': 4.512999999997658e-06}, {'time': 0.039176833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000003882e-05, 'source_diff': 1.1264000000003882e-05}, {'time': 0.039183722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.039187306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5840000000009198e-06, 'source_diff': 3.5840000000009198e-06}, {'time': 0.039195042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.039208361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.039219, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.039226722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.039234042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.039241542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.039255931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.039264083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.039279097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.039288736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.039299736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1000000000004062e-05, 'source_diff': 1.1000000000004062e-05}, {'time': 0.0393135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.039317681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.039324361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.039338556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4194999999994629e-05, 'source_diff': 1.4194999999994629e-05}, {'time': 0.039344417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.039347125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.039357972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.039368819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.039377611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.039387875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0264000000002882e-05, 'source_diff': 1.0264000000002882e-05}, {'time': 0.039394278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.402999999995107e-06, 'source_diff': 6.402999999995107e-06}, {'time': 0.039406167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.039412444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.039415361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}, {'time': 0.039426417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1055999999995403e-05, 'source_diff': 1.1055999999995403e-05}, {'time': 0.039438319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1902000000001134e-05, 'source_diff': 1.1902000000001134e-05}, {'time': 0.039449375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.039459181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.039466694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.512999999993719e-06, 'source_diff': 7.512999999993719e-06}, {'time': 0.039471292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.039474222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9300000000051507e-06, 'source_diff': 2.9300000000051507e-06}, {'time': 0.03948675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.03949675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.039502389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.039508861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.039513056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.039527847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.039539528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.039543972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:36.454" endtime="20201112 12:26:36.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.443" endtime="20201112 12:26:36.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:36.495" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:36.466" endtime="20201112 12:26:36.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.505" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:36.502" endtime="20201112 12:26:36.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.512" level="INFO">VALUE: {'sourcetime': [0.039108403, 0.039116583, 0.039131611, 0.039140319, 0.039148722, 0.039161056, 0.039165569, 0.039176833, 0.039183722, 0.039187306, 0.039195042, 0.039208361, 0.039219, 0.039226722, 0.039234042, 0.039241542, 0.039255931, 0.039264083, 0.039279097, 0.039288736, 0.039299736, 0.0393135, 0.039317681, 0.039324361, 0.039338556, 0.039344417, 0.039347125, 0.039357972, 0.039368819, 0.039377611, 0.039387875, 0.039394278, 0.039406167, 0.039412444, 0.039415361, 0.039426417, 0.039438319, 0.039449375, 0.039459181, 0.039466694, 0.039471292, 0.039474222, 0.03948675, 0.03949675, 0.039502389, 0.039508861, 0.039513056, 0.039527847, 0.039539528, 0.039543972], 'eventsource_diff': [0, 8.180000000003462e-06, 1.5027999999993324e-05, 8.708000000003102e-06, 8.402999999997107e-06, 1.2334000000002732e-05, 4.512999999997658e-06, 1.1264000000003882e-05, 6.888999999996037e-06, 3.5840000000009198e-06, 7.736000000001242e-06, 1.331899999999775e-05, 1.0638999999999788e-05, 7.722000000001672e-06, 7.319999999998161e-06, 7.500000000000562e-06, 1.4389000000003538e-05, 8.151999999997384e-06, 1.5014000000000693e-05, 9.638999999998787e-06, 1.1000000000004062e-05, 1.3763999999999443e-05, 4.1809999999989356e-06, 6.680000000001962e-06, 1.4194999999994629e-05, 5.861000000002836e-06, 2.7079999999971016e-06, 1.0847000000001328e-05, 1.0847000000001328e-05, 8.792000000000522e-06, 1.0264000000002882e-05, 6.402999999995107e-06, 1.1889000000001038e-05, 6.276999999998978e-06, 2.9170000000050544e-06, 1.1055999999995403e-05, 1.1902000000001134e-05, 1.1056000000002342e-05, 9.806000000001092e-06, 7.512999999993719e-06, 4.59800000000149e-06, 2.9300000000051507e-06, 1.2527999999997763e-05, 9.999999999996123e-06, 5.639000000001726e-06, 6.472000000000422e-06, 4.1949999999985055e-06, 1.479100000000011e-05, 1.1680999999999497e-05, 4.443999999999282e-06], 'diff': [0, 8.180000000003462e-06, 1.5027999999993324e-05, 8.708000000003102e-06, 8.402999999997107e-06, 1.2334000000002732e-05, 4.512999999997658e-06, 1.1264000000003882e-05, 6.888999999996037e-06, 3.5840000000009198e-06, 7.736000000001242e-06, 1.331899999999775e-05, 1.0638999999999788e-05, 7.722000000001672e-06, 7.319999999998161e-06, 7.500000000000562e-06, 1.4389000000003538e-05, 8.151999999997384e-06, 1.5014000000000693e-05, 9.638999999998787e-06, 1.1000000000004062e-05, 1.3763999999999443e-05, 4.1809999999989356e-06, 6.680000000001962e-06, 1.4194999999994629e-05, 5.861000000002836e-06, 2.7079999999971016e-06, 1.0847000000001328e-05, 1.0847000000001328e-05, 8.792000000000522e-06, 1.0264000000002882e-05, 6.402999999995107e-06, 1.1889000000001038e-05, 6.276999999998978e-06, 2.9170000000050544e-06, 1.1055999999995403e-05, 1.1902000000001134e-05, 1.1056000000002342e-05, 9.806000000001092e-06, 7.512999999993719e-06, 4.59800000000149e-06, 2.9300000000051507e-06, 1.2527999999997763e-05, 9.999999999996123e-06, 5.639000000001726e-06, 6.472000000000422e-06, 4.1949999999985055e-06, 1.479100000000011e-05, 1.1680999999999497e-05, 4.443999999999282e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:36.507" endtime="20201112 12:26:36.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.497" endtime="20201112 12:26:36.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.524" level="INFO">${RESULT} = [{'time': 0.039116583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.039140319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:36.516" endtime="20201112 12:26:36.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:36.542" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:36.526" endtime="20201112 12:26:36.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.552" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:36.550" endtime="20201112 12:26:36.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.557" level="INFO">VALUE: [8.180000000003462e-06, 8.708000000003102e-06, 1.2334000000002732e-05, 1.1264000000003882e-05, 3.5840000000009198e-06, 1.331899999999775e-05, 7.722000000001672e-06, 7.500000000000562e-06, 8.151999999997384e-06, 9.638999999998787e-06, 1.3763999999999443e-05, 6.680000000001962e-06, 5.861000000002836e-06, 1.0847000000001328e-05, 8.792000000000522e-06, 6.402999999995107e-06, 6.276999999998978e-06, 1.1055999999995403e-05, 1.1056000000002342e-05, 7.512999999993719e-06, 2.9300000000051507e-06, 9.999999999996123e-06, 6.472000000000422e-06, 1.479100000000011e-05, 4.443999999999282e-06]</msg>
<status status="PASS" starttime="20201112 12:26:36.555" endtime="20201112 12:26:36.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.544" endtime="20201112 12:26:36.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.567" endtime="20201112 12:26:36.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.575" endtime="20201112 12:26:36.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.571" endtime="20201112 12:26:36.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.562" endtime="20201112 12:26:36.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.034" endtime="20201112 12:26:36.601"></status>
</kw>
<msg timestamp="20201112 12:26:36.602" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.623" endtime="20201112 12:26:36.637"></status>
</kw>
<msg timestamp="20201112 12:26:36.639" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.618" endtime="20201112 12:26:36.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.641" endtime="20201112 12:26:36.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.647" endtime="20201112 12:26:36.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.611" endtime="20201112 12:26:36.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.606" endtime="20201112 12:26:36.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.671" endtime="20201112 12:26:36.987"></status>
</kw>
<msg timestamp="20201112 12:26:36.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038960722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038967792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.668" endtime="20201112 12:26:36.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038960722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038967792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.994" endtime="20201112 12:26:37.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.007" endtime="20201112 12:26:37.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.660" endtime="20201112 12:26:37.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.656" endtime="20201112 12:26:37.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.024" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:37.022" endtime="20201112 12:26:37.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.033" level="INFO">VALUE: [{'time': 0.038960722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038967792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.038977181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.038990528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3347000000003828e-05, 'source_diff': 1.3347000000003828e-05}, {'time': 0.038998681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.039013056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.039021819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763000000001908e-06, 'source_diff': 8.763000000001908e-06}, {'time': 0.039030792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.973000000002396e-06, 'source_diff': 8.973000000002396e-06}, {'time': 0.039035389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.039043542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000003796e-06, 'source_diff': 8.153000000003796e-06}, {'time': 0.039054167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.039059417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.039068167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.039077347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.039082792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.039093014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.039096139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.039104694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.039117847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3152999999994919e-05, 'source_diff': 1.3152999999994919e-05}, {'time': 0.039130347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000005562e-05, 'source_diff': 1.2500000000005562e-05}, {'time': 0.039141819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.039150583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.039164153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3569999999997473e-05, 'source_diff': 1.3569999999997473e-05}, {'time': 0.039172694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.039178333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.039185222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.039190444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.039202167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1723000000005146e-05, 'source_diff': 1.1723000000005146e-05}, {'time': 0.039209458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.039214042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583999999994981e-06, 'source_diff': 4.583999999994981e-06}, {'time': 0.039216556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.039228486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1930000000000274e-05, 'source_diff': 1.1930000000000274e-05}, {'time': 0.039237431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.039250556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.039262458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1902000000001134e-05, 'source_diff': 1.1902000000001134e-05}, {'time': 0.039271222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.039274139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.039281875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.039297333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5457999999995975e-05, 'source_diff': 1.5457999999995975e-05}, {'time': 0.039302972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.039305875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.039308167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.039315889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.039327583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.039337181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.039339708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.039342639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.039355764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.039359944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.039372458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}]</msg>
<status status="PASS" starttime="20201112 12:26:37.027" endtime="20201112 12:26:37.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.015" endtime="20201112 12:26:37.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:37.070" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.038" endtime="20201112 12:26:37.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.079" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:37.077" endtime="20201112 12:26:37.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.086" level="INFO">VALUE: {'sourcetime': [0.038960722, 0.038967792, 0.038977181, 0.038990528, 0.038998681, 0.039013056, 0.039021819, 0.039030792, 0.039035389, 0.039043542, 0.039054167, 0.039059417, 0.039068167, 0.039077347, 0.039082792, 0.039093014, 0.039096139, 0.039104694, 0.039117847, 0.039130347, 0.039141819, 0.039150583, 0.039164153, 0.039172694, 0.039178333, 0.039185222, 0.039190444, 0.039202167, 0.039209458, 0.039214042, 0.039216556, 0.039228486, 0.039237431, 0.039250556, 0.039262458, 0.039271222, 0.039274139, 0.039281875, 0.039297333, 0.039302972, 0.039305875, 0.039308167, 0.039315889, 0.039327583, 0.039337181, 0.039339708, 0.039342639, 0.039355764, 0.039359944, 0.039372458], 'eventsource_diff': [0, 7.069999999997911e-06, 9.388999999998537e-06, 1.3347000000003828e-05, 8.152999999996857e-06, 1.4374999999997029e-05, 8.763000000001908e-06, 8.973000000002396e-06, 4.596999999995077e-06, 8.153000000003796e-06, 1.0625000000000218e-05, 5.2499999999983116e-06, 8.750000000001812e-06, 9.179999999997523e-06, 5.444999999999756e-06, 1.0222000000004172e-05, 3.124999999999656e-06, 8.555000000000368e-06, 1.3152999999994919e-05, 1.2500000000005562e-05, 1.1471999999998483e-05, 8.764000000001382e-06, 1.3569999999997473e-05, 8.541000000000798e-06, 5.639000000001726e-06, 6.888999999996037e-06, 5.221999999999172e-06, 1.1723000000005146e-05, 7.290999999999548e-06, 4.583999999994981e-06, 2.51400000000207e-06, 1.1930000000000274e-05, 8.945000000003256e-06, 1.3124999999995779e-05, 1.1902000000001134e-05, 8.764000000001382e-06, 2.9169999999981155e-06, 7.736000000001242e-06, 1.5457999999995975e-05, 5.639000000001726e-06, 2.9029999999985456e-06, 2.29200000000096e-06, 7.722000000001672e-06, 1.1693999999999594e-05, 9.597999999999551e-06, 2.5270000000021664e-06, 2.9309999999976855e-06, 1.3125000000002718e-05, 4.179999999999462e-06, 1.2513999999998193e-05], 'diff': [0, 7.069999999997911e-06, 9.388999999998537e-06, 1.3347000000003828e-05, 8.152999999996857e-06, 1.4374999999997029e-05, 8.763000000001908e-06, 8.973000000002396e-06, 4.596999999995077e-06, 8.153000000003796e-06, 1.0625000000000218e-05, 5.2499999999983116e-06, 8.750000000001812e-06, 9.179999999997523e-06, 5.444999999999756e-06, 1.0222000000004172e-05, 3.124999999999656e-06, 8.555000000000368e-06, 1.3152999999994919e-05, 1.2500000000005562e-05, 1.1471999999998483e-05, 8.764000000001382e-06, 1.3569999999997473e-05, 8.541000000000798e-06, 5.639000000001726e-06, 6.888999999996037e-06, 5.221999999999172e-06, 1.1723000000005146e-05, 7.290999999999548e-06, 4.583999999994981e-06, 2.51400000000207e-06, 1.1930000000000274e-05, 8.945000000003256e-06, 1.3124999999995779e-05, 1.1902000000001134e-05, 8.764000000001382e-06, 2.9169999999981155e-06, 7.736000000001242e-06, 1.5457999999995975e-05, 5.639000000001726e-06, 2.9029999999985456e-06, 2.29200000000096e-06, 7.722000000001672e-06, 1.1693999999999594e-05, 9.597999999999551e-06, 2.5270000000021664e-06, 2.9309999999976855e-06, 1.3125000000002718e-05, 4.179999999999462e-06, 1.2513999999998193e-05]}</msg>
<status status="PASS" starttime="20201112 12:26:37.082" endtime="20201112 12:26:37.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.072" endtime="20201112 12:26:37.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.098" level="INFO">${RESULT} = [{'time': 0.038967792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.038990528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:37.091" endtime="20201112 12:26:37.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:37.117" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.101" endtime="20201112 12:26:37.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.128" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:37.125" endtime="20201112 12:26:37.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.133" level="INFO">VALUE: [7.069999999997911e-06, 1.3347000000003828e-05, 1.4374999999997029e-05, 8.973000000002396e-06, 8.153000000003796e-06, 5.2499999999983116e-06, 9.179999999997523e-06, 1.0222000000004172e-05, 8.555000000000368e-06, 1.2500000000005562e-05, 8.764000000001382e-06, 8.541000000000798e-06, 6.888999999996037e-06, 1.1723000000005146e-05, 4.583999999994981e-06, 1.1930000000000274e-05, 1.3124999999995779e-05, 8.764000000001382e-06, 7.736000000001242e-06, 5.639000000001726e-06, 2.29200000000096e-06, 1.1693999999999594e-05, 2.5270000000021664e-06, 1.3125000000002718e-05, 1.2513999999998193e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.130" endtime="20201112 12:26:37.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.119" endtime="20201112 12:26:37.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.142" endtime="20201112 12:26:37.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.151" endtime="20201112 12:26:37.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.146" endtime="20201112 12:26:37.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.138" endtime="20201112 12:26:37.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.603" endtime="20201112 12:26:37.176"></status>
</kw>
<msg timestamp="20201112 12:26:37.177" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.199" endtime="20201112 12:26:37.212"></status>
</kw>
<msg timestamp="20201112 12:26:37.213" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.194" endtime="20201112 12:26:37.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.220" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.215" endtime="20201112 12:26:37.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.222" endtime="20201112 12:26:37.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.186" endtime="20201112 12:26:37.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.182" endtime="20201112 12:26:37.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.246" endtime="20201112 12:26:37.562"></status>
</kw>
<msg timestamp="20201112 12:26:37.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038860069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:37.242" endtime="20201112 12:26:37.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038860069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:37.569" endtime="20201112 12:26:37.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.581" endtime="20201112 12:26:37.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.235" endtime="20201112 12:26:37.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.230" endtime="20201112 12:26:37.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.598" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:37.596" endtime="20201112 12:26:37.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.606" level="INFO">VALUE: [{'time': 0.038845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038860069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.50689999999995e-05, 'source_diff': 1.50689999999995e-05}, {'time': 0.038871486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1416999999999677e-05, 'source_diff': 1.1416999999999677e-05}, {'time': 0.038886931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5445000000002818e-05, 'source_diff': 1.5445000000002818e-05}, {'time': 0.038896306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.038904875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.038920097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.038929694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.038935125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.038937847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.038946444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.038955389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.038959972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.038970819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0846999999994389e-05, 'source_diff': 1.0846999999994389e-05}, {'time': 0.038983972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.038987514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.038998361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.039005875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.039019847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.039035083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5235999999994865e-05, 'source_diff': 1.5235999999994865e-05}, {'time': 0.039050514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.039065819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.530500000000018e-05, 'source_diff': 1.530500000000018e-05}, {'time': 0.039078875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3055999999997403e-05, 'source_diff': 1.3055999999997403e-05}, {'time': 0.039087014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.039095153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.039108722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3568999999998e-05, 'source_diff': 1.3568999999998e-05}, {'time': 0.039121222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.039132694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1472000000005422e-05, 'source_diff': 1.1472000000005422e-05}, {'time': 0.03914625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.039155514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.039162319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.039168583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.039179861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1278000000003452e-05, 'source_diff': 1.1278000000003452e-05}, {'time': 0.039188639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777999999994013e-06, 'source_diff': 8.777999999994013e-06}, {'time': 0.039197806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.039200111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.039202833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.039205972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.039210569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.039224958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.039231847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.039234361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.039247931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3569999999997473e-05, 'source_diff': 1.3569999999997473e-05}, {'time': 0.03925775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.039260236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4859999999959914e-06, 'source_diff': 2.4859999999959914e-06}, {'time': 0.039262542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.039276736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4194000000002094e-05, 'source_diff': 1.4194000000002094e-05}, {'time': 0.039290069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.333299999999732e-05, 'source_diff': 1.333299999999732e-05}, {'time': 0.039298847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.039306167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3200000000051e-06, 'source_diff': 7.3200000000051e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:37.600" endtime="20201112 12:26:37.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.590" endtime="20201112 12:26:37.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:37.641" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.612" endtime="20201112 12:26:37.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.651" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:37.649" endtime="20201112 12:26:37.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.658" level="INFO">VALUE: {'sourcetime': [0.038845, 0.038860069, 0.038871486, 0.038886931, 0.038896306, 0.038904875, 0.038920097, 0.038929694, 0.038935125, 0.038937847, 0.038946444, 0.038955389, 0.038959972, 0.038970819, 0.038983972, 0.038987514, 0.038998361, 0.039005875, 0.039019847, 0.039035083, 0.039050514, 0.039065819, 0.039078875, 0.039087014, 0.039095153, 0.039108722, 0.039121222, 0.039132694, 0.03914625, 0.039155514, 0.039162319, 0.039168583, 0.039179861, 0.039188639, 0.039197806, 0.039200111, 0.039202833, 0.039205972, 0.039210569, 0.039224958, 0.039231847, 0.039234361, 0.039247931, 0.03925775, 0.039260236, 0.039262542, 0.039276736, 0.039290069, 0.039298847, 0.039306167], 'eventsource_diff': [0, 1.50689999999995e-05, 1.1416999999999677e-05, 1.5445000000002818e-05, 9.374999999998967e-06, 8.568999999999938e-06, 1.5222000000002234e-05, 9.597000000000078e-06, 5.431000000000186e-06, 2.7219999999966715e-06, 8.596999999999078e-06, 8.945000000003256e-06, 4.583000000002446e-06, 1.0846999999994389e-05, 1.3153000000001858e-05, 3.54200000000221e-06, 1.0847000000001328e-05, 7.514000000000132e-06, 1.3972000000000984e-05, 1.5235999999994865e-05, 1.5431000000003248e-05, 1.530500000000018e-05, 1.3055999999997403e-05, 8.139000000004226e-06, 8.138999999997287e-06, 1.3568999999998e-05, 1.2499999999998623e-05, 1.1472000000005422e-05, 1.3555999999997903e-05, 9.264000000001882e-06, 6.804999999998618e-06, 6.2639999999988816e-06, 1.1278000000003452e-05, 8.777999999994013e-06, 9.167000000004366e-06, 2.305000000001056e-06, 2.7219999999966715e-06, 3.1389999999992257e-06, 4.597000000002016e-06, 1.4388999999996599e-05, 6.889000000002976e-06, 2.51400000000207e-06, 1.3569999999997473e-05, 9.819000000001188e-06, 2.4859999999959914e-06, 2.30600000000053e-06, 1.4194000000002094e-05, 1.333299999999732e-05, 8.778000000000952e-06, 7.3200000000051e-06], 'diff': [0, 1.50689999999995e-05, 1.1416999999999677e-05, 1.5445000000002818e-05, 9.374999999998967e-06, 8.568999999999938e-06, 1.5222000000002234e-05, 9.597000000000078e-06, 5.431000000000186e-06, 2.7219999999966715e-06, 8.596999999999078e-06, 8.945000000003256e-06, 4.583000000002446e-06, 1.0846999999994389e-05, 1.3153000000001858e-05, 3.54200000000221e-06, 1.0847000000001328e-05, 7.514000000000132e-06, 1.3972000000000984e-05, 1.5235999999994865e-05, 1.5431000000003248e-05, 1.530500000000018e-05, 1.3055999999997403e-05, 8.139000000004226e-06, 8.138999999997287e-06, 1.3568999999998e-05, 1.2499999999998623e-05, 1.1472000000005422e-05, 1.3555999999997903e-05, 9.264000000001882e-06, 6.804999999998618e-06, 6.2639999999988816e-06, 1.1278000000003452e-05, 8.777999999994013e-06, 9.167000000004366e-06, 2.305000000001056e-06, 2.7219999999966715e-06, 3.1389999999992257e-06, 4.597000000002016e-06, 1.4388999999996599e-05, 6.889000000002976e-06, 2.51400000000207e-06, 1.3569999999997473e-05, 9.819000000001188e-06, 2.4859999999959914e-06, 2.30600000000053e-06, 1.4194000000002094e-05, 1.333299999999732e-05, 8.778000000000952e-06, 7.3200000000051e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:37.653" endtime="20201112 12:26:37.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.643" endtime="20201112 12:26:37.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.670" level="INFO">${RESULT} = [{'time': 0.038860069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.50689999999995e-05, 'source_diff': 1.50689999999995e-05}, {'time': 0.038886931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:37.663" endtime="20201112 12:26:37.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:37.688" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.672" endtime="20201112 12:26:37.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.699" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:37.697" endtime="20201112 12:26:37.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.704" level="INFO">VALUE: [1.50689999999995e-05, 1.5445000000002818e-05, 8.568999999999938e-06, 9.597000000000078e-06, 2.7219999999966715e-06, 8.945000000003256e-06, 1.0846999999994389e-05, 3.54200000000221e-06, 7.514000000000132e-06, 1.5235999999994865e-05, 1.530500000000018e-05, 8.139000000004226e-06, 1.3568999999998e-05, 1.1472000000005422e-05, 9.264000000001882e-06, 6.2639999999988816e-06, 8.777999999994013e-06, 2.305000000001056e-06, 3.1389999999992257e-06, 1.4388999999996599e-05, 2.51400000000207e-06, 9.819000000001188e-06, 2.30600000000053e-06, 1.333299999999732e-05, 7.3200000000051e-06]</msg>
<status status="PASS" starttime="20201112 12:26:37.701" endtime="20201112 12:26:37.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.690" endtime="20201112 12:26:37.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.714" endtime="20201112 12:26:37.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.718" endtime="20201112 12:26:37.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.716" endtime="20201112 12:26:37.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.712" endtime="20201112 12:26:37.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.178" endtime="20201112 12:26:37.739"></status>
</kw>
<msg timestamp="20201112 12:26:37.739" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.750" endtime="20201112 12:26:37.760"></status>
</kw>
<msg timestamp="20201112 12:26:37.761" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.747" endtime="20201112 12:26:37.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.764" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.762" endtime="20201112 12:26:37.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.765" endtime="20201112 12:26:37.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.744" endtime="20201112 12:26:37.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.742" endtime="20201112 12:26:37.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.776" endtime="20201112 12:26:38.068"></status>
</kw>
<msg timestamp="20201112 12:26:38.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.775" endtime="20201112 12:26:38.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.075" endtime="20201112 12:26:38.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.088" endtime="20201112 12:26:38.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.771" endtime="20201112 12:26:38.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.769" endtime="20201112 12:26:38.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.105" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:38.103" endtime="20201112 12:26:38.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.113" level="INFO">VALUE: [{'time': 0.021943278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.021967903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3945000000001317e-05, 'source_diff': 1.3945000000001317e-05}, {'time': 0.021979375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.021988139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.021993806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.022008181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.022023181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999997654e-05, 'source_diff': 1.4999999999997654e-05}, {'time': 0.022028194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.013000000001627e-06, 'source_diff': 5.013000000001627e-06}, {'time': 0.022030917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.022035528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.022049917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.022055958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.022068889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2931000000000747e-05, 'source_diff': 1.2931000000000747e-05}, {'time': 0.022076819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.02208225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.022086861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.022089361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.022096903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.542000000002741e-06, 'source_diff': 7.542000000002741e-06}, {'time': 0.022105458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.022111917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458999999996856e-06, 'source_diff': 6.458999999996856e-06}, {'time': 0.022127139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.0221295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.022140097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.022142597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.022156597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.022159917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.022171806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1888999999997568e-05, 'source_diff': 1.1888999999997568e-05}, {'time': 0.022177028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.022180014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.022194361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.022197708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.022206264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.022217097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.022220444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.022223792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.022236944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3152000000002384e-05, 'source_diff': 1.3152000000002384e-05}, {'time': 0.022240083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.022250306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0223000000000176e-05, 'source_diff': 1.0223000000000176e-05}, {'time': 0.0222645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.022270333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.022279722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.022288069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.02229475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680999999997966e-06, 'source_diff': 6.680999999997966e-06}, {'time': 0.022301639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.022309986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.022317292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.022329806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.022337111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.022342958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:38.107" endtime="20201112 12:26:38.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.097" endtime="20201112 12:26:38.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:38.148" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:38.119" endtime="20201112 12:26:38.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.158" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:38.156" endtime="20201112 12:26:38.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.165" level="INFO">VALUE: {'sourcetime': [0.021943278, 0.021953958, 0.021967903, 0.021979375, 0.021988139, 0.021993806, 0.022008181, 0.022023181, 0.022028194, 0.022030917, 0.022035528, 0.022049917, 0.022055958, 0.022068889, 0.022076819, 0.02208225, 0.022086861, 0.022089361, 0.022096903, 0.022105458, 0.022111917, 0.022127139, 0.0221295, 0.022140097, 0.022142597, 0.022156597, 0.022159917, 0.022171806, 0.022177028, 0.022180014, 0.022194361, 0.022197708, 0.022206264, 0.022217097, 0.022220444, 0.022223792, 0.022236944, 0.022240083, 0.022250306, 0.0222645, 0.022270333, 0.022279722, 0.022288069, 0.02229475, 0.022301639, 0.022309986, 0.022317292, 0.022329806, 0.022337111, 0.022342958], 'eventsource_diff': [0, 1.0679999999999024e-05, 1.3945000000001317e-05, 1.1471999999998483e-05, 8.764000000001382e-06, 5.667000000000866e-06, 1.4375000000000498e-05, 1.4999999999997654e-05, 5.013000000001627e-06, 2.7229999999996146e-06, 4.610999999998117e-06, 1.4389000000000068e-05, 6.041000000001767e-06, 1.2931000000000747e-05, 7.929999999999743e-06, 5.431000000000186e-06, 4.610999999998117e-06, 2.4999999999990308e-06, 7.542000000002741e-06, 8.555000000000368e-06, 6.458999999996856e-06, 1.5222000000002234e-05, 2.360999999999336e-06, 1.0597000000001078e-05, 2.4999999999990308e-06, 1.4000000000000123e-05, 3.3200000000011e-06, 1.1888999999997568e-05, 5.222000000002641e-06, 2.985999999999961e-06, 1.434699999999789e-05, 3.347000000000766e-06, 8.555999999999842e-06, 1.0833000000001758e-05, 3.3469999999972966e-06, 3.3480000000002397e-06, 1.3152000000002384e-05, 3.1389999999992257e-06, 1.0223000000000176e-05, 1.4193999999998624e-05, 5.833000000000227e-06, 9.388999999998537e-06, 8.347000000002297e-06, 6.680999999997966e-06, 6.889000000002976e-06, 8.346999999998828e-06, 7.305999999998591e-06, 1.2514000000001663e-05, 7.304999999999118e-06, 5.846999999999797e-06], 'diff': [0, 1.0679999999999024e-05, 1.3945000000001317e-05, 1.1471999999998483e-05, 8.764000000001382e-06, 5.667000000000866e-06, 1.4375000000000498e-05, 1.4999999999997654e-05, 5.013000000001627e-06, 2.7229999999996146e-06, 4.610999999998117e-06, 1.4389000000000068e-05, 6.041000000001767e-06, 1.2931000000000747e-05, 7.929999999999743e-06, 5.431000000000186e-06, 4.610999999998117e-06, 2.4999999999990308e-06, 7.542000000002741e-06, 8.555000000000368e-06, 6.458999999996856e-06, 1.5222000000002234e-05, 2.360999999999336e-06, 1.0597000000001078e-05, 2.4999999999990308e-06, 1.4000000000000123e-05, 3.3200000000011e-06, 1.1888999999997568e-05, 5.222000000002641e-06, 2.985999999999961e-06, 1.434699999999789e-05, 3.347000000000766e-06, 8.555999999999842e-06, 1.0833000000001758e-05, 3.3469999999972966e-06, 3.3480000000002397e-06, 1.3152000000002384e-05, 3.1389999999992257e-06, 1.0223000000000176e-05, 1.4193999999998624e-05, 5.833000000000227e-06, 9.388999999998537e-06, 8.347000000002297e-06, 6.680999999997966e-06, 6.889000000002976e-06, 8.346999999998828e-06, 7.305999999998591e-06, 1.2514000000001663e-05, 7.304999999999118e-06, 5.846999999999797e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:38.160" endtime="20201112 12:26:38.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.150" endtime="20201112 12:26:38.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.177" level="INFO">${RESULT} = [{'time': 0.021953958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.021979375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:38.170" endtime="20201112 12:26:38.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:38.195" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:38.179" endtime="20201112 12:26:38.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.206" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:38.204" endtime="20201112 12:26:38.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.211" level="INFO">VALUE: [1.0679999999999024e-05, 1.1471999999998483e-05, 5.667000000000866e-06, 1.4999999999997654e-05, 2.7229999999996146e-06, 1.4389000000000068e-05, 1.2931000000000747e-05, 5.431000000000186e-06, 2.4999999999990308e-06, 8.555000000000368e-06, 1.5222000000002234e-05, 1.0597000000001078e-05, 1.4000000000000123e-05, 1.1888999999997568e-05, 2.985999999999961e-06, 3.347000000000766e-06, 1.0833000000001758e-05, 3.3480000000002397e-06, 3.1389999999992257e-06, 1.4193999999998624e-05, 9.388999999998537e-06, 6.680999999997966e-06, 8.346999999998828e-06, 1.2514000000001663e-05, 5.846999999999797e-06]</msg>
<status status="PASS" starttime="20201112 12:26:38.208" endtime="20201112 12:26:38.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.197" endtime="20201112 12:26:38.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.221" endtime="20201112 12:26:38.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.229" endtime="20201112 12:26:38.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.225" endtime="20201112 12:26:38.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.216" endtime="20201112 12:26:38.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.740" endtime="20201112 12:26:38.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.202" endtime="20201112 12:26:38.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.266" endtime="20201112 12:26:38.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.262" endtime="20201112 12:26:38.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.259" endtime="20201112 12:26:38.290"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:27.008" endtime="20201112 12:26:38.291" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.309" endtime="20201112 12:26:38.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.305" endtime="20201112 12:26:38.333"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.368" endtime="20201112 12:26:38.387"></status>
</kw>
<msg timestamp="20201112 12:26:38.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.365" endtime="20201112 12:26:38.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.395" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.391" endtime="20201112 12:26:38.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.401" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:38.397" endtime="20201112 12:26:38.402"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:38.358" endtime="20201112 12:26:38.404"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:38.351" endtime="20201112 12:26:38.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.348" endtime="20201112 12:26:38.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:38.415" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:38.413" endtime="20201112 12:26:38.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.408" endtime="20201112 12:26:38.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.346" endtime="20201112 12:26:38.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.345" endtime="20201112 12:26:38.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.418" endtime="20201112 12:26:38.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.340" endtime="20201112 12:26:38.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.334" endtime="20201112 12:26:38.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.303" endtime="20201112 12:26:38.425"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:38.430" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.451" endtime="20201112 12:26:38.466"></status>
</kw>
<msg timestamp="20201112 12:26:38.468" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.447" endtime="20201112 12:26:38.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.474" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.470" endtime="20201112 12:26:38.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.476" endtime="20201112 12:26:38.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.439" endtime="20201112 12:26:38.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.435" endtime="20201112 12:26:38.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.502" endtime="20201112 12:26:38.849"></status>
</kw>
<msg timestamp="20201112 12:26:38.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133862708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133864347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.499" endtime="20201112 12:26:38.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133862708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133864347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.858" endtime="20201112 12:26:38.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.877" endtime="20201112 12:26:38.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.491" endtime="20201112 12:26:38.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.485" endtime="20201112 12:26:38.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.895" level="INFO">${RESULT} = [{'time': 0.133864347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.133868847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:38.886" endtime="20201112 12:26:38.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:38.928" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:38.898" endtime="20201112 12:26:38.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.938" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:38.936" endtime="20201112 12:26:38.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.944" level="INFO">VALUE: [1.6389999999977256e-06, 1.6250000000050946e-06, 1.6529999999903566e-06, 1.5979999999915506e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.651999999990883e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.6530000000181122e-06, 1.6250000000050946e-06, 1.7079999999891626e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.6520000000186386e-06, 1.7080000000169182e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6670000000107432e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6669999999829876e-06, 1.6670000000107432e-06, 1.596999999992077e-06, 1.651999999990883e-06, 1.5980000000193062e-06, 1.6250000000050946e-06, 1.6670000000107432e-06, 1.6389999999977256e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6669999999829876e-06, 1.637999999998252e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6670000000107432e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6529999999903566e-06, 1.6529999999903566e-06]</msg>
<status status="PASS" starttime="20201112 12:26:38.941" endtime="20201112 12:26:38.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.930" endtime="20201112 12:26:38.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.953" endtime="20201112 12:26:38.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.961" endtime="20201112 12:26:38.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.957" endtime="20201112 12:26:38.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.948" endtime="20201112 12:26:38.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.431" endtime="20201112 12:26:38.987"></status>
</kw>
<msg timestamp="20201112 12:26:38.988" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.009" endtime="20201112 12:26:39.024"></status>
</kw>
<msg timestamp="20201112 12:26:39.025" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.005" endtime="20201112 12:26:39.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.027" endtime="20201112 12:26:39.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.033" endtime="20201112 12:26:39.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.998" endtime="20201112 12:26:39.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.993" endtime="20201112 12:26:39.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.057" endtime="20201112 12:26:39.395"></status>
</kw>
<msg timestamp="20201112 12:26:39.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039050139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039051792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.054" endtime="20201112 12:26:39.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039050139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039051792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.405" endtime="20201112 12:26:39.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.424" endtime="20201112 12:26:39.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.046" endtime="20201112 12:26:39.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.042" endtime="20201112 12:26:39.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.442" level="INFO">${RESULT} = [{'time': 0.039051792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6530000000042344e-06, 'source_diff': 1.6530000000042344e-06}, {'time': 0.039065486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:39.432" endtime="20201112 12:26:39.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:39.472" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:39.444" endtime="20201112 12:26:39.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.483" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:39.480" endtime="20201112 12:26:39.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.488" level="INFO">VALUE: [1.6530000000042344e-06, 1.6250000000050946e-06, 1.5969999999990159e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.582999999999446e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6950000000029442e-06, 1.6810000000033742e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6530000000042344e-06, 1.6110000000055247e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6670000000038043e-06]</msg>
<status status="PASS" starttime="20201112 12:26:39.485" endtime="20201112 12:26:39.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.474" endtime="20201112 12:26:39.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.497" endtime="20201112 12:26:39.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.506" endtime="20201112 12:26:39.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.502" endtime="20201112 12:26:39.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.493" endtime="20201112 12:26:39.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.989" endtime="20201112 12:26:39.532"></status>
</kw>
<msg timestamp="20201112 12:26:39.533" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.553" endtime="20201112 12:26:39.568"></status>
</kw>
<msg timestamp="20201112 12:26:39.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.549" endtime="20201112 12:26:39.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.575" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.571" endtime="20201112 12:26:39.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.578" endtime="20201112 12:26:39.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.542" endtime="20201112 12:26:39.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.537" endtime="20201112 12:26:39.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.602" endtime="20201112 12:26:39.943"></status>
</kw>
<msg timestamp="20201112 12:26:39.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038447319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038448972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.598" endtime="20201112 12:26:39.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038447319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038448972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.952" endtime="20201112 12:26:39.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.972" endtime="20201112 12:26:39.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.591" endtime="20201112 12:26:39.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.586" endtime="20201112 12:26:39.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.989" level="INFO">${RESULT} = [{'time': 0.038448972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.038465361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:39.980" endtime="20201112 12:26:39.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:40.020" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:39.992" endtime="20201112 12:26:40.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.031" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:40.028" endtime="20201112 12:26:40.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.036" level="INFO">VALUE: [1.6529999999972955e-06, 1.5970000000059548e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.6529999999972955e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.5559999999997798e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6809999999964353e-06, 1.6390000000046645e-06, 1.6659999999973918e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6530000000042344e-06, 1.6520000000047608e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6939999999965316e-06, 1.7079999999961015e-06]</msg>
<status status="PASS" starttime="20201112 12:26:40.033" endtime="20201112 12:26:40.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.022" endtime="20201112 12:26:40.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.046" endtime="20201112 12:26:40.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.054" endtime="20201112 12:26:40.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.050" endtime="20201112 12:26:40.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.041" endtime="20201112 12:26:40.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.534" endtime="20201112 12:26:40.080"></status>
</kw>
<msg timestamp="20201112 12:26:40.080" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.100" endtime="20201112 12:26:40.116"></status>
</kw>
<msg timestamp="20201112 12:26:40.117" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.097" endtime="20201112 12:26:40.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.119" endtime="20201112 12:26:40.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.126" endtime="20201112 12:26:40.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.090" endtime="20201112 12:26:40.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.085" endtime="20201112 12:26:40.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.152" endtime="20201112 12:26:40.490"></status>
</kw>
<msg timestamp="20201112 12:26:40.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038351819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038353472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.148" endtime="20201112 12:26:40.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038351819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038353472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.499" endtime="20201112 12:26:40.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.518" endtime="20201112 12:26:40.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.140" endtime="20201112 12:26:40.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.135" endtime="20201112 12:26:40.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.536" level="INFO">${RESULT} = [{'time': 0.038353472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.038357347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:40.527" endtime="20201112 12:26:40.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:40.568" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:40.538" endtime="20201112 12:26:40.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.578" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:40.576" endtime="20201112 12:26:40.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.584" level="INFO">VALUE: [1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6950000000029442e-06, 1.6519999999978219e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5699999999993497e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6110000000055247e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6809999999964353e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6670000000038043e-06]</msg>
<status status="PASS" starttime="20201112 12:26:40.581" endtime="20201112 12:26:40.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.570" endtime="20201112 12:26:40.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.594" endtime="20201112 12:26:40.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.602" endtime="20201112 12:26:40.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.598" endtime="20201112 12:26:40.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.589" endtime="20201112 12:26:40.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.082" endtime="20201112 12:26:40.628"></status>
</kw>
<msg timestamp="20201112 12:26:40.628" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.648" endtime="20201112 12:26:40.663"></status>
</kw>
<msg timestamp="20201112 12:26:40.665" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.645" endtime="20201112 12:26:40.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.667" endtime="20201112 12:26:40.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.673" endtime="20201112 12:26:40.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.638" endtime="20201112 12:26:40.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.633" endtime="20201112 12:26:40.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.697" endtime="20201112 12:26:41.036"></status>
</kw>
<msg timestamp="20201112 12:26:41.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038320833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038322472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.694" endtime="20201112 12:26:41.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038320833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038322472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.045" endtime="20201112 12:26:41.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.064" endtime="20201112 12:26:41.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.686" endtime="20201112 12:26:41.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.682" endtime="20201112 12:26:41.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.082" level="INFO">${RESULT} = [{'time': 0.038322472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.038330736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:41.073" endtime="20201112 12:26:41.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:41.116" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.084" endtime="20201112 12:26:41.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.127" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:41.124" endtime="20201112 12:26:41.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.132" level="INFO">VALUE: [1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.6519999999978219e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6950000000029442e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6249999999981557e-06, 1.6250000000050946e-06]</msg>
<status status="PASS" starttime="20201112 12:26:41.129" endtime="20201112 12:26:41.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.118" endtime="20201112 12:26:41.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.142" endtime="20201112 12:26:41.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.148" endtime="20201112 12:26:41.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.146" endtime="20201112 12:26:41.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.137" endtime="20201112 12:26:41.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.629" endtime="20201112 12:26:41.169"></status>
</kw>
<msg timestamp="20201112 12:26:41.170" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.179" endtime="20201112 12:26:41.192"></status>
</kw>
<msg timestamp="20201112 12:26:41.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.177" endtime="20201112 12:26:41.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.195" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.193" endtime="20201112 12:26:41.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.196" endtime="20201112 12:26:41.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.174" endtime="20201112 12:26:41.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.172" endtime="20201112 12:26:41.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.207" endtime="20201112 12:26:41.540"></status>
</kw>
<msg timestamp="20201112 12:26:41.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.206" endtime="20201112 12:26:41.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.550" endtime="20201112 12:26:41.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.569" endtime="20201112 12:26:41.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.202" endtime="20201112 12:26:41.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.200" endtime="20201112 12:26:41.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.587" level="INFO">${RESULT} = [{'time': 0.022273722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.022288056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:41.577" endtime="20201112 12:26:41.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:41.619" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.589" endtime="20201112 12:26:41.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.629" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:41.627" endtime="20201112 12:26:41.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.635" level="INFO">VALUE: [1.6389999999977256e-06, 1.6809999999999048e-06, 1.6669999999968654e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6520000000012913e-06, 1.6389999999977256e-06, 1.5830000000029154e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.6529999999972955e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.584000000002389e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.5970000000024853e-06, 1.6659999999973918e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.6520000000012913e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 12:26:41.631" endtime="20201112 12:26:41.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.621" endtime="20201112 12:26:41.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.644" endtime="20201112 12:26:41.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.653" endtime="20201112 12:26:41.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.648" endtime="20201112 12:26:41.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.640" endtime="20201112 12:26:41.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.170" endtime="20201112 12:26:41.678"></status>
</kw>
<msg timestamp="20201112 12:26:41.679" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.699" endtime="20201112 12:26:41.714"></status>
</kw>
<msg timestamp="20201112 12:26:41.715" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.696" endtime="20201112 12:26:41.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.721" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.717" endtime="20201112 12:26:41.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.724" endtime="20201112 12:26:41.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.688" endtime="20201112 12:26:41.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.684" endtime="20201112 12:26:41.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.747" endtime="20201112 12:26:42.084"></status>
</kw>
<msg timestamp="20201112 12:26:42.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038268833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038270472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.744" endtime="20201112 12:26:42.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038268833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038270472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.094" endtime="20201112 12:26:42.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.113" endtime="20201112 12:26:42.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.737" endtime="20201112 12:26:42.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.732" endtime="20201112 12:26:42.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.131" level="INFO">${RESULT} = [{'time': 0.038270472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.038274556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:42.121" endtime="20201112 12:26:42.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:42.162" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:42.133" endtime="20201112 12:26:42.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.174" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:42.171" endtime="20201112 12:26:42.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.180" level="INFO">VALUE: [1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6810000000033742e-06, 1.6670000000038043e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6519999999978219e-06, 1.6670000000038043e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6110000000055247e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.5970000000059548e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 12:26:42.176" endtime="20201112 12:26:42.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.164" endtime="20201112 12:26:42.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.190" endtime="20201112 12:26:42.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.199" endtime="20201112 12:26:42.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.195" endtime="20201112 12:26:42.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.185" endtime="20201112 12:26:42.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.680" endtime="20201112 12:26:42.225"></status>
</kw>
<msg timestamp="20201112 12:26:42.226" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.246" endtime="20201112 12:26:42.261"></status>
</kw>
<msg timestamp="20201112 12:26:42.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.242" endtime="20201112 12:26:42.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.264" endtime="20201112 12:26:42.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.270" endtime="20201112 12:26:42.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.235" endtime="20201112 12:26:42.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.230" endtime="20201112 12:26:42.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.294" endtime="20201112 12:26:42.629"></status>
</kw>
<msg timestamp="20201112 12:26:42.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038108847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038110472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.291" endtime="20201112 12:26:42.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038108847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038110472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.638" endtime="20201112 12:26:42.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.657" endtime="20201112 12:26:42.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.284" endtime="20201112 12:26:42.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.279" endtime="20201112 12:26:42.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.675" level="INFO">${RESULT} = [{'time': 0.038110472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.038115194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:42.666" endtime="20201112 12:26:42.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:42.706" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:42.677" endtime="20201112 12:26:42.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.717" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:42.714" endtime="20201112 12:26:42.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.724" level="INFO">VALUE: [1.6249999999981557e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6669999999968654e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6659999999973918e-06, 1.6380000000051909e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6809999999964353e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6520000000047608e-06, 1.6380000000051909e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6809999999964353e-06, 1.6520000000047608e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201112 12:26:42.719" endtime="20201112 12:26:42.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.708" endtime="20201112 12:26:42.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.739" endtime="20201112 12:26:42.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.747" endtime="20201112 12:26:42.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.743" endtime="20201112 12:26:42.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.734" endtime="20201112 12:26:42.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.227" endtime="20201112 12:26:42.773"></status>
</kw>
<msg timestamp="20201112 12:26:42.773" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.793" endtime="20201112 12:26:42.809"></status>
</kw>
<msg timestamp="20201112 12:26:42.810" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.790" endtime="20201112 12:26:42.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.812" endtime="20201112 12:26:42.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.818" endtime="20201112 12:26:42.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.783" endtime="20201112 12:26:42.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.778" endtime="20201112 12:26:42.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.842" endtime="20201112 12:26:43.178"></status>
</kw>
<msg timestamp="20201112 12:26:43.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03825225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038253917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:42.839" endtime="20201112 12:26:43.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03825225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038253917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:43.187" endtime="20201112 12:26:43.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.207" endtime="20201112 12:26:43.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.832" endtime="20201112 12:26:43.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.827" endtime="20201112 12:26:43.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.225" level="INFO">${RESULT} = [{'time': 0.038253917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.038261319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:43.216" endtime="20201112 12:26:43.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:43.258" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:43.228" endtime="20201112 12:26:43.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.269" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:43.266" endtime="20201112 12:26:43.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.274" level="INFO">VALUE: [1.6669999999968654e-06, 1.6380000000051909e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.5839999999989196e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5559999999997798e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6669999999968654e-06, 1.6530000000042344e-06, 1.6799999999969617e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6519999999978219e-06, 1.6519999999978219e-06, 1.6939999999965316e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.5839999999989196e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6520000000047608e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.5559999999997798e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.5550000000003061e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201112 12:26:43.271" endtime="20201112 12:26:43.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.260" endtime="20201112 12:26:43.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.284" endtime="20201112 12:26:43.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.294" endtime="20201112 12:26:43.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.290" endtime="20201112 12:26:43.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.279" endtime="20201112 12:26:43.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.774" endtime="20201112 12:26:43.320"></status>
</kw>
<msg timestamp="20201112 12:26:43.320" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.340" endtime="20201112 12:26:43.355"></status>
</kw>
<msg timestamp="20201112 12:26:43.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.337" endtime="20201112 12:26:43.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.362" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.358" endtime="20201112 12:26:43.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.365" endtime="20201112 12:26:43.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.330" endtime="20201112 12:26:43.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.325" endtime="20201112 12:26:43.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.389" endtime="20201112 12:26:43.724"></status>
</kw>
<msg timestamp="20201112 12:26:43.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038180056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038181722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.385" endtime="20201112 12:26:43.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038180056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038181722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.734" endtime="20201112 12:26:43.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.753" endtime="20201112 12:26:43.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.378" endtime="20201112 12:26:43.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.373" endtime="20201112 12:26:43.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.771" level="INFO">${RESULT} = [{'time': 0.038181722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000043307e-06, 'source_diff': 1.6660000000043307e-06}, {'time': 0.038187056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:43.761" endtime="20201112 12:26:43.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:43.802" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:43.773" endtime="20201112 12:26:43.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.812" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:43.810" endtime="20201112 12:26:43.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.818" level="INFO">VALUE: [1.6660000000043307e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.7080000000030404e-06, 1.6390000000046645e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.5830000000063849e-06, 1.6380000000051909e-06, 1.6519999999978219e-06, 1.7360000000021802e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6249999999981557e-06, 1.6799999999969617e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.723000000002084e-06, 1.6519999999978219e-06, 1.6520000000047608e-06, 1.6380000000051909e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.6520000000047608e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6809999999964353e-06]</msg>
<status status="PASS" starttime="20201112 12:26:43.814" endtime="20201112 12:26:43.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.804" endtime="20201112 12:26:43.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.827" endtime="20201112 12:26:43.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.836" endtime="20201112 12:26:43.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.831" endtime="20201112 12:26:43.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.823" endtime="20201112 12:26:43.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.322" endtime="20201112 12:26:43.861"></status>
</kw>
<msg timestamp="20201112 12:26:43.862" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.884" endtime="20201112 12:26:43.899"></status>
</kw>
<msg timestamp="20201112 12:26:43.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.880" endtime="20201112 12:26:43.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.902" endtime="20201112 12:26:43.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.909" endtime="20201112 12:26:43.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.873" endtime="20201112 12:26:43.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.866" endtime="20201112 12:26:43.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.932" endtime="20201112 12:26:44.273"></status>
</kw>
<msg timestamp="20201112 12:26:44.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039769556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039771194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.929" endtime="20201112 12:26:44.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039769556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039771194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.283" endtime="20201112 12:26:44.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.302" endtime="20201112 12:26:44.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.922" endtime="20201112 12:26:44.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.917" endtime="20201112 12:26:44.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.319" level="INFO">${RESULT} = [{'time': 0.039771194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6380000000051909e-06, 'source_diff': 1.6380000000051909e-06}, {'time': 0.039779431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:44.310" endtime="20201112 12:26:44.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:44.351" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:44.322" endtime="20201112 12:26:44.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.361" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:44.359" endtime="20201112 12:26:44.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.366" level="INFO">VALUE: [1.6380000000051909e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6670000000038043e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6659999999973918e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6799999999969617e-06, 1.6390000000046645e-06, 1.6660000000043307e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6520000000047608e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6670000000038043e-06, 1.5840000000058585e-06, 1.6249999999981557e-06, 1.6799999999969617e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.723000000002084e-06, 1.6519999999978219e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201112 12:26:44.363" endtime="20201112 12:26:44.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.352" endtime="20201112 12:26:44.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.376" endtime="20201112 12:26:44.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.385" endtime="20201112 12:26:44.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.381" endtime="20201112 12:26:44.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.372" endtime="20201112 12:26:44.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.863" endtime="20201112 12:26:44.411"></status>
</kw>
<msg timestamp="20201112 12:26:44.411" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.431" endtime="20201112 12:26:44.448"></status>
</kw>
<msg timestamp="20201112 12:26:44.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.428" endtime="20201112 12:26:44.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.455" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.451" endtime="20201112 12:26:44.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.458" endtime="20201112 12:26:44.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.421" endtime="20201112 12:26:44.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.416" endtime="20201112 12:26:44.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.482" endtime="20201112 12:26:44.804"></status>
</kw>
<msg timestamp="20201112 12:26:44.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039684139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.478" endtime="20201112 12:26:44.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039684139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.813" endtime="20201112 12:26:44.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.833" endtime="20201112 12:26:44.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.471" endtime="20201112 12:26:44.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.466" endtime="20201112 12:26:44.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.850" level="INFO">${RESULT} = [{'time': 0.039685778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.039699028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:44.841" endtime="20201112 12:26:44.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:44.881" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:44.853" endtime="20201112 12:26:44.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.892" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:44.889" endtime="20201112 12:26:44.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.897" level="INFO">VALUE: [1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6529999999972955e-06, 1.6659999999973918e-06, 1.637999999998252e-06, 1.6520000000047608e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.5699999999993497e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6520000000047608e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6659999999973918e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6669999999968654e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6250000000050946e-06, 1.6799999999969617e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6669999999968654e-06]</msg>
<status status="PASS" starttime="20201112 12:26:44.894" endtime="20201112 12:26:44.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.883" endtime="20201112 12:26:44.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.907" endtime="20201112 12:26:44.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.915" endtime="20201112 12:26:44.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.911" endtime="20201112 12:26:44.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.902" endtime="20201112 12:26:44.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.412" endtime="20201112 12:26:44.941"></status>
</kw>
<msg timestamp="20201112 12:26:44.942" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.962" endtime="20201112 12:26:44.977"></status>
</kw>
<msg timestamp="20201112 12:26:44.978" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.958" endtime="20201112 12:26:44.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.984" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.980" endtime="20201112 12:26:44.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.987" endtime="20201112 12:26:44.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.951" endtime="20201112 12:26:44.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.946" endtime="20201112 12:26:44.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.013" endtime="20201112 12:26:45.352"></status>
</kw>
<msg timestamp="20201112 12:26:45.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038443361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038445014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.009" endtime="20201112 12:26:45.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038443361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038445014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.362" endtime="20201112 12:26:45.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.381" endtime="20201112 12:26:45.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.000" endtime="20201112 12:26:45.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.995" endtime="20201112 12:26:45.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.399" level="INFO">${RESULT} = [{'time': 0.038445014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.038450778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:45.390" endtime="20201112 12:26:45.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:45.431" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.401" endtime="20201112 12:26:45.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.442" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:45.440" endtime="20201112 12:26:45.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.447" level="INFO">VALUE: [1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6950000000029442e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7360000000021802e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 12:26:45.444" endtime="20201112 12:26:45.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.433" endtime="20201112 12:26:45.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.457" endtime="20201112 12:26:45.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.466" endtime="20201112 12:26:45.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.461" endtime="20201112 12:26:45.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.453" endtime="20201112 12:26:45.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.943" endtime="20201112 12:26:45.491"></status>
</kw>
<msg timestamp="20201112 12:26:45.492" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.512" endtime="20201112 12:26:45.527"></status>
</kw>
<msg timestamp="20201112 12:26:45.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.508" endtime="20201112 12:26:45.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.534" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.530" endtime="20201112 12:26:45.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.537" endtime="20201112 12:26:45.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.501" endtime="20201112 12:26:45.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.496" endtime="20201112 12:26:45.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.560" endtime="20201112 12:26:45.897"></status>
</kw>
<msg timestamp="20201112 12:26:45.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038166653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038168208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.557" endtime="20201112 12:26:45.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038166653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038168208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.907" endtime="20201112 12:26:45.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.926" endtime="20201112 12:26:45.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.550" endtime="20201112 12:26:45.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.545" endtime="20201112 12:26:45.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.944" level="INFO">${RESULT} = [{'time': 0.038168208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.038172125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:45.934" endtime="20201112 12:26:45.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:45.974" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.946" endtime="20201112 12:26:45.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.984" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:45.982" endtime="20201112 12:26:45.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.990" level="INFO">VALUE: [1.5550000000003061e-06, 1.6810000000033742e-06, 1.6669999999968654e-06, 1.582999999999446e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6670000000038043e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.5839999999989196e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.7360000000021802e-06, 1.6800000000039006e-06, 1.6799999999969617e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6949999999960053e-06, 1.6519999999978219e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 12:26:45.987" endtime="20201112 12:26:45.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.976" endtime="20201112 12:26:45.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.000" endtime="20201112 12:26:46.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.008" endtime="20201112 12:26:46.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.004" endtime="20201112 12:26:46.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.995" endtime="20201112 12:26:46.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.493" endtime="20201112 12:26:46.034"></status>
</kw>
<msg timestamp="20201112 12:26:46.034" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.054" endtime="20201112 12:26:46.070"></status>
</kw>
<msg timestamp="20201112 12:26:46.071" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.051" endtime="20201112 12:26:46.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.078" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.074" endtime="20201112 12:26:46.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.080" endtime="20201112 12:26:46.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.044" endtime="20201112 12:26:46.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.039" endtime="20201112 12:26:46.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.104" endtime="20201112 12:26:46.445"></status>
</kw>
<msg timestamp="20201112 12:26:46.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038384264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038385986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.100" endtime="20201112 12:26:46.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038384264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038385986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.455" endtime="20201112 12:26:46.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.474" endtime="20201112 12:26:46.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.093" endtime="20201112 12:26:46.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.088" endtime="20201112 12:26:46.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.492" level="INFO">${RESULT} = [{'time': 0.038385986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999956714e-06, 'source_diff': 1.7219999999956714e-06}, {'time': 0.038399375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:46.482" endtime="20201112 12:26:46.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:46.522" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:46.494" endtime="20201112 12:26:46.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.533" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:46.530" endtime="20201112 12:26:46.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.538" level="INFO">VALUE: [1.7219999999956714e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6659999999973918e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.6250000000050946e-06, 1.6669999999968654e-06, 1.6799999999969617e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6520000000047608e-06, 1.5969999999990159e-06, 1.6799999999969617e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6520000000047608e-06, 1.5979999999984895e-06, 1.6249999999981557e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201112 12:26:46.535" endtime="20201112 12:26:46.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.524" endtime="20201112 12:26:46.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.548" endtime="20201112 12:26:46.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.556" endtime="20201112 12:26:46.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.552" endtime="20201112 12:26:46.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.543" endtime="20201112 12:26:46.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.036" endtime="20201112 12:26:46.582"></status>
</kw>
<msg timestamp="20201112 12:26:46.583" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.603" endtime="20201112 12:26:46.617"></status>
</kw>
<msg timestamp="20201112 12:26:46.619" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.599" endtime="20201112 12:26:46.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.625" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.621" endtime="20201112 12:26:46.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.627" endtime="20201112 12:26:46.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.592" endtime="20201112 12:26:46.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.587" endtime="20201112 12:26:46.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.651" endtime="20201112 12:26:46.988"></status>
</kw>
<msg timestamp="20201112 12:26:46.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038293181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038294833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.648" endtime="20201112 12:26:46.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038293181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038294833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.998" endtime="20201112 12:26:47.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.017" endtime="20201112 12:26:47.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.640" endtime="20201112 12:26:47.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.636" endtime="20201112 12:26:47.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.036" level="INFO">${RESULT} = [{'time': 0.038294833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.038303931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:47.027" endtime="20201112 12:26:47.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:47.066" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:47.038" endtime="20201112 12:26:47.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.077" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:47.075" endtime="20201112 12:26:47.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.082" level="INFO">VALUE: [1.6519999999978219e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.6520000000047608e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6660000000043307e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.6949999999960053e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6660000000043307e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6800000000039006e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6810000000033742e-06, 1.6810000000033742e-06, 1.6949999999960053e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 12:26:47.079" endtime="20201112 12:26:47.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.068" endtime="20201112 12:26:47.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.092" endtime="20201112 12:26:47.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.101" endtime="20201112 12:26:47.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.096" endtime="20201112 12:26:47.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.087" endtime="20201112 12:26:47.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.584" endtime="20201112 12:26:47.126"></status>
</kw>
<msg timestamp="20201112 12:26:47.127" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.148" endtime="20201112 12:26:47.163"></status>
</kw>
<msg timestamp="20201112 12:26:47.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.144" endtime="20201112 12:26:47.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.170" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.166" endtime="20201112 12:26:47.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.172" endtime="20201112 12:26:47.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.137" endtime="20201112 12:26:47.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.132" endtime="20201112 12:26:47.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.196" endtime="20201112 12:26:47.534"></status>
</kw>
<msg timestamp="20201112 12:26:47.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038855458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038857111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.193" endtime="20201112 12:26:47.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038855458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038857111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.543" endtime="20201112 12:26:47.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.562" endtime="20201112 12:26:47.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.185" endtime="20201112 12:26:47.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.181" endtime="20201112 12:26:47.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.581" level="INFO">${RESULT} = [{'time': 0.038857111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.038862861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:47.572" endtime="20201112 12:26:47.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:47.615" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:47.584" endtime="20201112 12:26:47.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.625" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:47.623" endtime="20201112 12:26:47.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.630" level="INFO">VALUE: [1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6950000000029442e-06, 1.6669999999968654e-06, 1.6799999999969617e-06, 1.6940000000034705e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6799999999969617e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.5979999999984895e-06, 1.6660000000043307e-06, 1.6530000000042344e-06, 1.7079999999961015e-06, 1.6530000000042344e-06, 1.6659999999973918e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6519999999978219e-06, 1.6669999999968654e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6380000000051909e-06, 1.6249999999981557e-06, 1.6530000000042344e-06]</msg>
<status status="PASS" starttime="20201112 12:26:47.627" endtime="20201112 12:26:47.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.616" endtime="20201112 12:26:47.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.640" endtime="20201112 12:26:47.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.649" endtime="20201112 12:26:47.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.644" endtime="20201112 12:26:47.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.636" endtime="20201112 12:26:47.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.128" endtime="20201112 12:26:47.674"></status>
</kw>
<msg timestamp="20201112 12:26:47.675" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.695" endtime="20201112 12:26:47.710"></status>
</kw>
<msg timestamp="20201112 12:26:47.711" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.692" endtime="20201112 12:26:47.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.717" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.713" endtime="20201112 12:26:47.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.719" endtime="20201112 12:26:47.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.684" endtime="20201112 12:26:47.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.679" endtime="20201112 12:26:47.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.743" endtime="20201112 12:26:48.037"></status>
</kw>
<msg timestamp="20201112 12:26:48.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038197069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038198694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.740" endtime="20201112 12:26:48.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038197069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038198694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.046" endtime="20201112 12:26:48.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.065" endtime="20201112 12:26:48.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.733" endtime="20201112 12:26:48.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.728" endtime="20201112 12:26:48.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.084" level="INFO">${RESULT} = [{'time': 0.038198694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.038207583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:48.074" endtime="20201112 12:26:48.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:48.116" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:48.086" endtime="20201112 12:26:48.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.127" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:48.124" endtime="20201112 12:26:48.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.132" level="INFO">VALUE: [1.6249999999981557e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6670000000038043e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6809999999964353e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.7360000000021802e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6670000000038043e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.5969999999990159e-06, 1.6529999999972955e-06, 1.637999999998252e-06, 1.6660000000043307e-06, 1.6249999999981557e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201112 12:26:48.129" endtime="20201112 12:26:48.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.118" endtime="20201112 12:26:48.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.142" endtime="20201112 12:26:48.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.151" endtime="20201112 12:26:48.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.147" endtime="20201112 12:26:48.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.138" endtime="20201112 12:26:48.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.676" endtime="20201112 12:26:48.177"></status>
</kw>
<msg timestamp="20201112 12:26:48.177" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.198" endtime="20201112 12:26:48.213"></status>
</kw>
<msg timestamp="20201112 12:26:48.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.194" endtime="20201112 12:26:48.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.217" endtime="20201112 12:26:48.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.223" endtime="20201112 12:26:48.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.187" endtime="20201112 12:26:48.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.182" endtime="20201112 12:26:48.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.247" endtime="20201112 12:26:48.585"></status>
</kw>
<msg timestamp="20201112 12:26:48.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038891236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038892889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.244" endtime="20201112 12:26:48.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038891236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038892889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.594" endtime="20201112 12:26:48.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.613" endtime="20201112 12:26:48.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.236" endtime="20201112 12:26:48.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.231" endtime="20201112 12:26:48.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.631" level="INFO">${RESULT} = [{'time': 0.038892889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.038902597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:48.622" endtime="20201112 12:26:48.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:48.663" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:48.633" endtime="20201112 12:26:48.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.674" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:48.671" endtime="20201112 12:26:48.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.679" level="INFO">VALUE: [1.6529999999972955e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.5969999999990159e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7079999999961015e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6520000000047608e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 12:26:48.676" endtime="20201112 12:26:48.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.665" endtime="20201112 12:26:48.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.689" endtime="20201112 12:26:48.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.697" endtime="20201112 12:26:48.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.693" endtime="20201112 12:26:48.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.684" endtime="20201112 12:26:48.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.178" endtime="20201112 12:26:48.723"></status>
</kw>
<msg timestamp="20201112 12:26:48.723" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.744" endtime="20201112 12:26:48.759"></status>
</kw>
<msg timestamp="20201112 12:26:48.760" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.740" endtime="20201112 12:26:48.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.766" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.762" endtime="20201112 12:26:48.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.769" endtime="20201112 12:26:48.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.733" endtime="20201112 12:26:48.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.728" endtime="20201112 12:26:48.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.793" endtime="20201112 12:26:49.134"></status>
</kw>
<msg timestamp="20201112 12:26:49.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038536875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038538514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.789" endtime="20201112 12:26:49.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038536875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038538514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.144" endtime="20201112 12:26:49.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.163" endtime="20201112 12:26:49.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.782" endtime="20201112 12:26:49.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.777" endtime="20201112 12:26:49.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.180" level="INFO">${RESULT} = [{'time': 0.038538514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.038549903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:49.171" endtime="20201112 12:26:49.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:49.213" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:49.183" endtime="20201112 12:26:49.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.224" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:49.221" endtime="20201112 12:26:49.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.229" level="INFO">VALUE: [1.6390000000046645e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.5830000000063849e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6249999999981557e-06, 1.5979999999984895e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.637999999998252e-06, 1.6110000000055247e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 12:26:49.226" endtime="20201112 12:26:49.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.215" endtime="20201112 12:26:49.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.239" endtime="20201112 12:26:49.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.247" endtime="20201112 12:26:49.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.243" endtime="20201112 12:26:49.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.234" endtime="20201112 12:26:49.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.725" endtime="20201112 12:26:49.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.428" endtime="20201112 12:26:49.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.284" endtime="20201112 12:26:49.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.280" endtime="20201112 12:26:49.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.277" endtime="20201112 12:26:49.308"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:38.296" endtime="20201112 12:26:49.309" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.327" endtime="20201112 12:26:49.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.324" endtime="20201112 12:26:49.351"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.385" endtime="20201112 12:26:49.403"></status>
</kw>
<msg timestamp="20201112 12:26:49.405" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.381" endtime="20201112 12:26:49.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.407" endtime="20201112 12:26:49.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.419" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:49.414" endtime="20201112 12:26:49.419"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:49.374" endtime="20201112 12:26:49.422"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:49.367" endtime="20201112 12:26:49.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.365" endtime="20201112 12:26:49.424"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:49.435" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:49.433" endtime="20201112 12:26:49.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.426" endtime="20201112 12:26:49.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.363" endtime="20201112 12:26:49.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.361" endtime="20201112 12:26:49.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.438" endtime="20201112 12:26:49.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.357" endtime="20201112 12:26:49.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.353" endtime="20201112 12:26:49.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.321" endtime="20201112 12:26:49.446"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.470" endtime="20201112 12:26:49.495"></status>
</kw>
<msg timestamp="20201112 12:26:49.496" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.466" endtime="20201112 12:26:49.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.502" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.498" endtime="20201112 12:26:49.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.505" endtime="20201112 12:26:49.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.459" endtime="20201112 12:26:49.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.453" endtime="20201112 12:26:49.512"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.516" endtime="20201112 12:26:49.521"></status>
</kw>
<msg timestamp="20201112 12:26:49.522" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:49.513" endtime="20201112 12:26:49.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.532" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:49.530" endtime="20201112 12:26:49.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.537" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:49.534" endtime="20201112 12:26:49.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.524" endtime="20201112 12:26:49.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.549" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:49.546" endtime="20201112 12:26:49.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.553" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:49.551" endtime="20201112 12:26:49.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.540" endtime="20201112 12:26:49.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.573" endtime="20201112 12:26:49.920"></status>
</kw>
<msg timestamp="20201112 12:26:49.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13630325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136307778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:49.569" endtime="20201112 12:26:49.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13630325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136307778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:49.929" endtime="20201112 12:26:49.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.948" endtime="20201112 12:26:49.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.562" endtime="20201112 12:26:49.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.557" endtime="20201112 12:26:49.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.966" level="INFO">${RESULT} = [{'time': 0.136307778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.136325944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:49.957" endtime="20201112 12:26:49.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:50.000" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:49.968" endtime="20201112 12:26:50.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.012" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:50.009" endtime="20201112 12:26:50.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.018" level="INFO">VALUE: [4.52800000000364e-06, 4.7360000000051805e-06, 4.66600000001427e-06, 4.693999999999532e-06, 4.6810000000063745e-06, 4.693999999999532e-06, 4.707999999992163e-06, 4.611000000015464e-06, 4.7360000000051805e-06, 4.7089999999916365e-06, 4.7360000000051805e-06, 4.707999999992163e-06, 4.7220000000125495e-06, 4.707999999992163e-06, 4.639000000000726e-06, 4.707999999992163e-06, 4.707999999992163e-06, 4.707999999992163e-06, 4.7089999999916365e-06, 4.6810000000063745e-06, 4.7080000000199185e-06, 4.6949999999990055e-06, 4.666999999985988e-06, 4.7080000000199185e-06, 4.693999999999532e-06, 4.723000000012023e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.7089999999916365e-06, 4.6810000000063745e-06, 4.6949999999990055e-06, 4.707999999992163e-06, 4.7220000000125495e-06, 4.7360000000051805e-06, 4.693999999999532e-06, 4.679999999979145e-06, 4.764000000018198e-06, 4.7080000000199185e-06, 4.680000000006901e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.7639999999904425e-06, 4.764000000018198e-06, 4.707999999992163e-06, 4.624999999980339e-06, 4.7089999999916365e-06, 4.6949999999990055e-06, 4.6810000000063745e-06]</msg>
<status status="PASS" starttime="20201112 12:26:50.015" endtime="20201112 12:26:50.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.002" endtime="20201112 12:26:50.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.027" endtime="20201112 12:26:50.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.036" endtime="20201112 12:26:50.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.031" endtime="20201112 12:26:50.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.022" endtime="20201112 12:26:50.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.448" endtime="20201112 12:26:50.061"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:49.314" endtime="20201112 12:26:50.063" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.082" endtime="20201112 12:26:50.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.078" endtime="20201112 12:26:50.105"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.139" endtime="20201112 12:26:50.157"></status>
</kw>
<msg timestamp="20201112 12:26:50.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.135" endtime="20201112 12:26:50.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.165" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.161" endtime="20201112 12:26:50.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.172" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:50.168" endtime="20201112 12:26:50.173"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:50.128" endtime="20201112 12:26:50.175"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:50.122" endtime="20201112 12:26:50.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.119" endtime="20201112 12:26:50.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:50.185" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:50.183" endtime="20201112 12:26:50.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.179" endtime="20201112 12:26:50.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.117" endtime="20201112 12:26:50.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.115" endtime="20201112 12:26:50.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.188" endtime="20201112 12:26:50.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.111" endtime="20201112 12:26:50.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.107" endtime="20201112 12:26:50.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.075" endtime="20201112 12:26:50.196"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.222" endtime="20201112 12:26:50.306"></status>
</kw>
<msg timestamp="20201112 12:26:50.308" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.219" endtime="20201112 12:26:50.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.314" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.310" endtime="20201112 12:26:50.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.316" endtime="20201112 12:26:50.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.211" endtime="20201112 12:26:50.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.203" endtime="20201112 12:26:50.323"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.328" endtime="20201112 12:26:50.333"></status>
</kw>
<msg timestamp="20201112 12:26:50.334" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:50.325" endtime="20201112 12:26:50.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.344" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:50.342" endtime="20201112 12:26:50.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.348" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:50.346" endtime="20201112 12:26:50.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.335" endtime="20201112 12:26:50.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.361" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:50.358" endtime="20201112 12:26:50.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.365" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:50.363" endtime="20201112 12:26:50.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.352" endtime="20201112 12:26:50.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.384" endtime="20201112 12:26:50.733"></status>
</kw>
<msg timestamp="20201112 12:26:50.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135126236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135169556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.381" endtime="20201112 12:26:50.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135126236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135169556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.743" endtime="20201112 12:26:50.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.761" endtime="20201112 12:26:50.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.374" endtime="20201112 12:26:50.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.369" endtime="20201112 12:26:50.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.779" level="INFO">${RESULT} = [{'time': 0.135169556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.331999999998559e-05, 'source_diff': 4.331999999998559e-05}, {'time': 0.136394639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.770" endtime="20201112 12:26:50.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:50.810" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:50.781" endtime="20201112 12:26:50.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.822" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:50.820" endtime="20201112 12:26:50.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.829" level="INFO">VALUE: [4.331999999998559e-05, 4.320800000001679e-05, 4.3194999999995876e-05, 4.320800000001679e-05, 4.319500000002363e-05, 4.3221999999981664e-05, 4.320799999998903e-05, 4.31939999999964e-05, 4.320900000001626e-05, 4.31939999999964e-05, 4.320800000001679e-05, 4.320799999998903e-05, 4.323600000000205e-05, 4.3194999999995876e-05, 4.3208999999988507e-05, 4.320799999998903e-05, 4.3277999999979944e-05, 4.3221999999981664e-05, 4.3263000000015595e-05, 4.326399999998731e-05, 4.322299999998114e-05, 4.3167000000010614e-05, 4.3194999999995876e-05, 4.326400000001507e-05, 4.320800000001679e-05, 4.320799999998903e-05, 4.318000000000377e-05, 4.320799999998903e-05, 4.31939999999964e-05, 4.3181000000003245e-05, 4.315300000001798e-05, 4.320799999998903e-05, 4.3194999999995876e-05, 4.322299999998114e-05, 4.320799999998903e-05, 4.324999999999468e-05, 4.322299999998114e-05, 4.3181000000003245e-05, 4.329200000000033e-05, 4.319400000002416e-05, 4.3194999999995876e-05, 4.320799999998903e-05, 4.322200000000942e-05, 4.326400000001507e-05, 4.31939999999964e-05, 4.320799999998903e-05, 4.322200000000942e-05, 4.319400000002416e-05, 4.320800000001679e-05, 4.323600000000205e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.825" endtime="20201112 12:26:50.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.813" endtime="20201112 12:26:50.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.838" endtime="20201112 12:26:50.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.847" endtime="20201112 12:26:50.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.842" endtime="20201112 12:26:50.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.833" endtime="20201112 12:26:50.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.197" endtime="20201112 12:26:50.872"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:50.068" endtime="20201112 12:26:50.874" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.893" endtime="20201112 12:26:50.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.889" endtime="20201112 12:26:50.916"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.950" endtime="20201112 12:26:50.969"></status>
</kw>
<msg timestamp="20201112 12:26:50.970" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.947" endtime="20201112 12:26:50.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.972" endtime="20201112 12:26:50.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.983" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:50.979" endtime="20201112 12:26:50.984"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:50.939" endtime="20201112 12:26:50.986"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:50.933" endtime="20201112 12:26:50.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.930" endtime="20201112 12:26:50.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:50.996" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:50.995" endtime="20201112 12:26:50.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.990" endtime="20201112 12:26:50.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.928" endtime="20201112 12:26:50.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.927" endtime="20201112 12:26:50.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.000" endtime="20201112 12:26:51.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.922" endtime="20201112 12:26:51.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.918" endtime="20201112 12:26:51.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.886" endtime="20201112 12:26:51.008"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.034" endtime="20201112 12:26:51.282"></status>
</kw>
<msg timestamp="20201112 12:26:51.283" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.030" endtime="20201112 12:26:51.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.289" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.285" endtime="20201112 12:26:51.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.292" endtime="20201112 12:26:51.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.021" endtime="20201112 12:26:51.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.015" endtime="20201112 12:26:51.299"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.304" endtime="20201112 12:26:51.308"></status>
</kw>
<msg timestamp="20201112 12:26:51.310" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:51.301" endtime="20201112 12:26:51.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.320" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:51.317" endtime="20201112 12:26:51.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.324" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:51.322" endtime="20201112 12:26:51.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.311" endtime="20201112 12:26:51.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.336" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:51.334" endtime="20201112 12:26:51.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.341" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:51.339" endtime="20201112 12:26:51.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.328" endtime="20201112 12:26:51.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.360" endtime="20201112 12:26:51.705"></status>
</kw>
<msg timestamp="20201112 12:26:51.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137531431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137615028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.357" endtime="20201112 12:26:51.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137531431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137615028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.714" endtime="20201112 12:26:51.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.732" endtime="20201112 12:26:51.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.349" endtime="20201112 12:26:51.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.345" endtime="20201112 12:26:51.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.750" level="INFO">${RESULT} = [{'time': 0.137615028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.359699999999082e-05, 'source_diff': 8.359699999999082e-05}, {'time': 0.142120819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:51.741" endtime="20201112 12:26:51.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:51.782" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:51.753" endtime="20201112 12:26:51.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.793" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:51.791" endtime="20201112 12:26:51.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.799" level="INFO">VALUE: [8.359699999999082e-05, 8.263799999999599e-05, 8.262500000000284e-05, 8.26110000000102e-05, 8.262500000000284e-05, 8.261099999998245e-05, 8.26110000000102e-05, 8.254099999999154e-05, 8.261200000000968e-05, 8.266700000000848e-05, 8.262500000000284e-05, 8.262500000000284e-05, 8.262499999997508e-05, 8.263899999999547e-05, 8.259699999998982e-05, 8.262500000000284e-05, 8.26110000000102e-05, 8.266600000000901e-05, 8.262500000000284e-05, 8.252799999999838e-05, 8.259800000001705e-05, 8.26110000000102e-05, 8.262500000000284e-05, 8.262500000000284e-05, 8.258299999999719e-05, 8.263899999999547e-05, 8.261199999998192e-05, 8.258300000002494e-05, 8.263900000005098e-05, 8.26110000000102e-05, 8.262500000000284e-05, 8.266700000003624e-05, 8.259700000001757e-05, 8.268000000000164e-05, 8.259700000001757e-05, 8.262500000000284e-05, 8.25980000000448e-05, 8.266600000000901e-05, 8.262500000000284e-05, 8.259699999996206e-05, 8.259700000001757e-05, 8.262499999994732e-05, 8.262499999994732e-05, 8.262500000000284e-05, 8.259700000001757e-05, 8.262500000000284e-05, 8.26110000000102e-05, 8.262499999994732e-05, 8.26110000000102e-05, 8.262500000000284e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.795" endtime="20201112 12:26:51.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.783" endtime="20201112 12:26:51.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.808" endtime="20201112 12:26:51.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.816" endtime="20201112 12:26:51.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.812" endtime="20201112 12:26:51.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.803" endtime="20201112 12:26:51.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.010" endtime="20201112 12:26:51.843"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:50.879" endtime="20201112 12:26:51.846" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.864" endtime="20201112 12:26:51.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.860" endtime="20201112 12:26:51.887"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.921" endtime="20201112 12:26:51.940"></status>
</kw>
<msg timestamp="20201112 12:26:51.941" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.918" endtime="20201112 12:26:51.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.948" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.943" endtime="20201112 12:26:51.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.954" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:51.950" endtime="20201112 12:26:51.955"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:51.911" endtime="20201112 12:26:51.957"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:51.904" endtime="20201112 12:26:51.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.901" endtime="20201112 12:26:51.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:51.967" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:51.966" endtime="20201112 12:26:51.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.961" endtime="20201112 12:26:51.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.900" endtime="20201112 12:26:51.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.898" endtime="20201112 12:26:51.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.972" endtime="20201112 12:26:51.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.894" endtime="20201112 12:26:51.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.889" endtime="20201112 12:26:51.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.857" endtime="20201112 12:26:51.979"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.004" endtime="20201112 12:26:52.029"></status>
</kw>
<msg timestamp="20201112 12:26:52.030" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.999" endtime="20201112 12:26:52.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.037" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.033" endtime="20201112 12:26:52.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.039" endtime="20201112 12:26:52.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.992" endtime="20201112 12:26:52.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.986" endtime="20201112 12:26:52.046"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.051" endtime="20201112 12:26:52.055"></status>
</kw>
<msg timestamp="20201112 12:26:52.056" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:52.048" endtime="20201112 12:26:52.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.067" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:52.064" endtime="20201112 12:26:52.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.071" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:52.069" endtime="20201112 12:26:52.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.058" endtime="20201112 12:26:52.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.083" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:52.081" endtime="20201112 12:26:52.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.088" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:52.086" endtime="20201112 12:26:52.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.075" endtime="20201112 12:26:52.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.107" endtime="20201112 12:26:52.455"></status>
</kw>
<msg timestamp="20201112 12:26:52.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134417194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134418653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.104" endtime="20201112 12:26:52.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134417194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134418653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.465" endtime="20201112 12:26:52.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.484" endtime="20201112 12:26:52.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.096" endtime="20201112 12:26:52.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.091" endtime="20201112 12:26:52.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.503" level="INFO">${RESULT} = [{'time': 0.134418653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000009203e-06, 'source_diff': 1.459000000009203e-06}, {'time': 0.134429958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.494" endtime="20201112 12:26:52.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:52.536" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:52.505" endtime="20201112 12:26:52.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.548" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:52.546" endtime="20201112 12:26:52.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.554" level="INFO">VALUE: [1.459000000009203e-06, 1.5409999999937973e-06, 1.4720000000023603e-06, 1.4579999999819737e-06, 1.4589999999814474e-06, 1.4440000000170983e-06, 1.4589999999814474e-06, 1.4579999999819737e-06, 1.445000000016572e-06, 1.4309999999961853e-06, 1.4579999999819737e-06, 1.4720000000023603e-06, 1.4449999999888163e-06, 1.4579999999819737e-06, 1.4720000000023603e-06, 1.4439999999893427e-06, 1.459000000009203e-06, 1.4589999999814474e-06, 1.4859999999949913e-06, 1.4579999999819737e-06, 1.4449999999888163e-06, 1.4160000000040807e-06, 1.459000000009203e-06, 1.4589999999814474e-06, 1.500000000015378e-06, 1.459000000009203e-06, 1.445000000016572e-06, 1.4580000000097293e-06, 1.4440000000170983e-06, 1.4589999999814474e-06, 1.4729999999740784e-06, 1.4720000000023603e-06, 1.459000000009203e-06, 1.4439999999893427e-06, 1.4859999999949913e-06, 1.4579999999819737e-06, 1.5270000000011663e-06, 1.4579999999819737e-06, 1.4579999999819737e-06, 1.4720000000023603e-06, 1.4720000000023603e-06, 1.4579999999819737e-06, 1.4579999999819737e-06, 1.4439999999893427e-06, 1.4580000000097293e-06, 1.445000000016572e-06, 1.4439999999893427e-06, 1.4579999999819737e-06, 1.4580000000097293e-06, 1.4720000000023603e-06]</msg>
<status status="PASS" starttime="20201112 12:26:52.551" endtime="20201112 12:26:52.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.538" endtime="20201112 12:26:52.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.563" endtime="20201112 12:26:52.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.571" endtime="20201112 12:26:52.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.567" endtime="20201112 12:26:52.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.558" endtime="20201112 12:26:52.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.981" endtime="20201112 12:26:52.597"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:51.851" endtime="20201112 12:26:52.599" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.618" endtime="20201112 12:26:52.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.614" endtime="20201112 12:26:52.643"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.676" endtime="20201112 12:26:52.694"></status>
</kw>
<msg timestamp="20201112 12:26:52.696" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.673" endtime="20201112 12:26:52.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.698" endtime="20201112 12:26:52.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.709" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:52.705" endtime="20201112 12:26:52.710"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:52.666" endtime="20201112 12:26:52.712"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:52.659" endtime="20201112 12:26:52.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.657" endtime="20201112 12:26:52.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:52.723" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:52.721" endtime="20201112 12:26:52.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.716" endtime="20201112 12:26:52.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.655" endtime="20201112 12:26:52.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.653" endtime="20201112 12:26:52.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.726" endtime="20201112 12:26:52.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.649" endtime="20201112 12:26:52.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.644" endtime="20201112 12:26:52.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.611" endtime="20201112 12:26:52.733"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.757" endtime="20201112 12:26:52.842"></status>
</kw>
<msg timestamp="20201112 12:26:52.844" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.754" endtime="20201112 12:26:52.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.850" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.846" endtime="20201112 12:26:52.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.852" endtime="20201112 12:26:52.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.746" endtime="20201112 12:26:52.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.740" endtime="20201112 12:26:52.859"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.864" endtime="20201112 12:26:52.869"></status>
</kw>
<msg timestamp="20201112 12:26:52.870" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:52.861" endtime="20201112 12:26:52.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.882" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:52.878" endtime="20201112 12:26:52.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.887" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:52.884" endtime="20201112 12:26:52.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.872" endtime="20201112 12:26:52.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.899" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:52.897" endtime="20201112 12:26:52.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.904" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:52.901" endtime="20201112 12:26:52.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.890" endtime="20201112 12:26:52.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.923" endtime="20201112 12:26:53.274"></status>
</kw>
<msg timestamp="20201112 12:26:53.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132877917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132893625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.919" endtime="20201112 12:26:53.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132877917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132893625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.283" endtime="20201112 12:26:53.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.303" endtime="20201112 12:26:53.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.912" endtime="20201112 12:26:53.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.907" endtime="20201112 12:26:53.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.320" level="INFO">${RESULT} = [{'time': 0.132893625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5707999999975408e-05, 'source_diff': 1.5707999999975408e-05}, {'time': 0.134121819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:53.311" endtime="20201112 12:26:53.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:53.352" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:53.323" endtime="20201112 12:26:53.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.363" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:53.361" endtime="20201112 12:26:53.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.369" level="INFO">VALUE: [1.5707999999975408e-05, 1.573600000001618e-05, 1.5777999999994075e-05, 1.5750000000008813e-05, 1.572299999999527e-05, 1.572299999999527e-05, 1.5749999999981057e-05, 1.5750000000008813e-05, 1.5791000000014987e-05, 1.5708000000003164e-05, 1.5764000000001444e-05, 1.5749999999981057e-05, 1.5764000000001444e-05, 1.5750000000008813e-05, 1.5735999999988426e-05, 1.5749999999981057e-05, 1.573600000001618e-05, 1.5777999999994075e-05, 1.5791000000014987e-05, 1.5749999999981057e-05, 1.5764000000001444e-05, 1.5750000000008813e-05, 1.5750000000008813e-05, 1.5805999999979337e-05, 1.5750000000008813e-05, 1.5708000000003164e-05, 1.5735999999988426e-05, 1.5750000000008813e-05, 1.5764000000001444e-05, 1.5749999999981057e-05, 1.5750000000008813e-05, 1.5735999999988426e-05, 1.5764000000001444e-05, 1.5791999999986706e-05, 1.5735999999988426e-05, 1.5764000000001444e-05, 1.57769999999946e-05, 1.576300000000197e-05, 1.5750000000008813e-05, 1.5708000000003164e-05, 1.5735999999988426e-05, 1.576300000000197e-05, 1.5750000000008813e-05, 1.5750000000008813e-05, 1.5764000000001444e-05, 1.5750000000008813e-05, 1.573600000001618e-05, 1.5749999999981057e-05, 1.5709000000002638e-05, 1.5790999999987232e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.366" endtime="20201112 12:26:53.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.354" endtime="20201112 12:26:53.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.379" endtime="20201112 12:26:53.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.387" endtime="20201112 12:26:53.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.383" endtime="20201112 12:26:53.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.374" endtime="20201112 12:26:53.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.735" endtime="20201112 12:26:53.413"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:52.604" endtime="20201112 12:26:53.415" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.434" endtime="20201112 12:26:53.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.430" endtime="20201112 12:26:53.458"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.495" endtime="20201112 12:26:53.514"></status>
</kw>
<msg timestamp="20201112 12:26:53.515" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.492" endtime="20201112 12:26:53.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.517" endtime="20201112 12:26:53.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.529" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:53.524" endtime="20201112 12:26:53.529"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:53.484" endtime="20201112 12:26:53.531"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:53.477" endtime="20201112 12:26:53.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.474" endtime="20201112 12:26:53.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:53.542" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:53.540" endtime="20201112 12:26:53.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.536" endtime="20201112 12:26:53.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.472" endtime="20201112 12:26:53.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.469" endtime="20201112 12:26:53.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.546" endtime="20201112 12:26:53.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.464" endtime="20201112 12:26:53.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.459" endtime="20201112 12:26:53.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.427" endtime="20201112 12:26:53.554"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.579" endtime="20201112 12:26:53.829"></status>
</kw>
<msg timestamp="20201112 12:26:53.831" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.575" endtime="20201112 12:26:53.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.837" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.833" endtime="20201112 12:26:53.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.839" endtime="20201112 12:26:53.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.567" endtime="20201112 12:26:53.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.561" endtime="20201112 12:26:53.846"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.851" endtime="20201112 12:26:53.856"></status>
</kw>
<msg timestamp="20201112 12:26:53.857" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:53.848" endtime="20201112 12:26:53.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.867" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:53.864" endtime="20201112 12:26:53.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.872" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:53.869" endtime="20201112 12:26:53.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.858" endtime="20201112 12:26:53.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.884" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:53.881" endtime="20201112 12:26:53.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.889" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:53.886" endtime="20201112 12:26:53.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.875" endtime="20201112 12:26:53.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.910" endtime="20201112 12:26:54.252"></status>
</kw>
<msg timestamp="20201112 12:26:54.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143227375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143257708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.907" endtime="20201112 12:26:54.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143227375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143257708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.262" endtime="20201112 12:26:54.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.280" endtime="20201112 12:26:54.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.897" endtime="20201112 12:26:54.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.893" endtime="20201112 12:26:54.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.298" level="INFO">${RESULT} = [{'time': 0.143257708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.033300000002126e-05, 'source_diff': 3.033300000002126e-05}, {'time': 0.147789514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.289" endtime="20201112 12:26:54.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:54.329" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.300" endtime="20201112 12:26:54.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.341" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:54.338" endtime="20201112 12:26:54.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.346" level="INFO">VALUE: [3.033300000002126e-05, 3.033300000002126e-05, 3.0333999999992978e-05, 3.0388999999991784e-05, 3.0319000000000873e-05, 3.0277999999994698e-05, 3.0333999999992978e-05, 3.0332999999993504e-05, 3.0306000000007716e-05, 3.0278000000022454e-05, 3.0333999999992978e-05, 3.0374999999999153e-05, 3.0278000000022454e-05, 3.0346999999986135e-05, 3.0319000000000873e-05, 3.0320000000000347e-05, 3.036100000000652e-05, 3.0318999999973117e-05, 3.034700000001389e-05, 3.0332999999993504e-05, 3.0292000000015085e-05, 3.0305000000008242e-05, 3.0277999999994698e-05, 3.033300000002126e-05, 3.0319000000000873e-05, 3.0319000000000873e-05, 3.02909999999601e-05, 3.027700000002298e-05, 3.0333000000049015e-05, 3.0332999999993504e-05, 3.0333999999965222e-05, 3.0347000000041646e-05, 3.04170000000048e-05, 3.0348000000013364e-05, 3.0334000000020733e-05, 3.0334000000020733e-05, 3.0347999999957853e-05, 3.0320000000028102e-05, 3.0347000000041646e-05, 3.0334000000020733e-05, 3.0332999999993504e-05, 3.0348000000013364e-05, 3.0346999999986135e-05, 3.0375000000026908e-05, 3.0348000000013364e-05, 3.0332999999993504e-05, 3.030599999997996e-05, 3.029199999998733e-05, 3.0332999999993504e-05, 3.0348000000013364e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.343" endtime="20201112 12:26:54.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.331" endtime="20201112 12:26:54.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.355" endtime="20201112 12:26:54.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.364" endtime="20201112 12:26:54.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.359" endtime="20201112 12:26:54.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.351" endtime="20201112 12:26:54.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.556" endtime="20201112 12:26:54.389"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:53.420" endtime="20201112 12:26:54.391" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:24.499" endtime="20201112 12:26:54.413"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.585" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:54.600" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:56.520" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:54.581" endtime="20201112 12:26:56.522"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.527" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:56.524" endtime="20201112 12:26:56.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.578" endtime="20201112 12:26:56.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.534" endtime="20201112 12:26:56.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.531" endtime="20201112 12:26:56.865"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.896" endtime="20201112 12:26:56.915"></status>
</kw>
<msg timestamp="20201112 12:26:56.916" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.892" endtime="20201112 12:26:56.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.918" endtime="20201112 12:26:56.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.929" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:56.925" endtime="20201112 12:26:56.930"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:56.886" endtime="20201112 12:26:56.932"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:56.880" endtime="20201112 12:26:56.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.877" endtime="20201112 12:26:56.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:56.943" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:56.941" endtime="20201112 12:26:56.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.936" endtime="20201112 12:26:56.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.875" endtime="20201112 12:26:56.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.873" endtime="20201112 12:26:56.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.946" endtime="20201112 12:26:56.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.870" endtime="20201112 12:26:56.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.953" endtime="20201112 12:26:56.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.867" endtime="20201112 12:26:56.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.575" endtime="20201112 12:26:56.959"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.976" endtime="20201112 12:26:56.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.970" endtime="20201112 12:26:56.999"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.034" endtime="20201112 12:26:57.053"></status>
</kw>
<msg timestamp="20201112 12:26:57.054" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.030" endtime="20201112 12:26:57.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.056" endtime="20201112 12:26:57.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.067" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:57.063" endtime="20201112 12:26:57.068"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:57.023" endtime="20201112 12:26:57.070"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:57.016" endtime="20201112 12:26:57.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.014" endtime="20201112 12:26:57.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:57.081" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:57.079" endtime="20201112 12:26:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.074" endtime="20201112 12:26:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.012" endtime="20201112 12:26:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.010" endtime="20201112 12:26:57.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.084" endtime="20201112 12:26:57.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.006" endtime="20201112 12:26:57.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.001" endtime="20201112 12:26:57.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.967" endtime="20201112 12:26:57.092"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.118" endtime="20201112 12:26:57.136"></status>
</kw>
<msg timestamp="20201112 12:26:57.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.114" endtime="20201112 12:26:57.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.140" endtime="20201112 12:26:57.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.146" endtime="20201112 12:26:57.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.107" endtime="20201112 12:26:57.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.101" endtime="20201112 12:26:57.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.172" endtime="20201112 12:26:57.525"></status>
</kw>
<msg timestamp="20201112 12:26:57.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135457583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135460472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.169" endtime="20201112 12:26:57.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135457583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135460472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.536" endtime="20201112 12:26:57.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.555" endtime="20201112 12:26:57.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.159" endtime="20201112 12:26:57.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.154" endtime="20201112 12:26:57.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.573" level="INFO">${RESULT} = [{'time': 0.135460472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8890000000059146e-06, 'source_diff': 2.8890000000059146e-06}, {'time': 0.135476444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:57.563" endtime="20201112 12:26:57.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.603" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:57.575" endtime="20201112 12:26:57.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.615" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.612" endtime="20201112 12:26:57.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.620" level="INFO">VALUE: [2.8890000000059146e-06, 3.4720000000043605e-06, 3.500000000017378e-06, 2.9029999999985456e-06, 3.4580000000117295e-06, 3.4720000000043605e-06, 3.374999999999906e-06, 2.9719999999899827e-06, 3.457999999983974e-06, 2.915999999991703e-06, 2.903000000026301e-06, 3.4720000000043605e-06, 2.8750000000132836e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 3.3890000000202924e-06, 3.4449999999908165e-06, 2.9029999999985456e-06, 3.4440000000190985e-06, 4.013999999996631e-06, 3.459000000011203e-06, 3.514000000010009e-06, 3.471999999976605e-06, 2.901999999999072e-06, 3.957999999998352e-06, 2.9029999999985456e-06, 3.473000000003834e-06, 2.888999999978159e-06, 4.000000000004e-06, 3.4589999999834475e-06, 2.929999999984334e-06, 2.9029999999985456e-06, 3.3890000000202924e-06, 2.9450000000041943e-06, 2.9169999999911767e-06, 2.9170000000189322e-06, 3.4019999999856942e-06, 3.4589999999834475e-06, 3.443999999991343e-06, 3.4580000000117295e-06, 3.4170000000055545e-06, 3.957999999998352e-06, 4.027000000017544e-06, 2.9169999999911767e-06, 3.416999999977799e-06, 3.4309999999981855e-06, 3.4030000000129235e-06, 2.915999999991703e-06, 2.9579999999973516e-06, 3.445000000018572e-06]</msg>
<status status="PASS" starttime="20201112 12:26:57.617" endtime="20201112 12:26:57.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.605" endtime="20201112 12:26:57.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.630" endtime="20201112 12:26:57.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.639" endtime="20201112 12:26:57.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.634" endtime="20201112 12:26:57.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.625" endtime="20201112 12:26:57.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.096" endtime="20201112 12:26:57.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.095" endtime="20201112 12:26:57.665"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.688" endtime="20201112 12:26:57.707"></status>
</kw>
<msg timestamp="20201112 12:26:57.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.685" endtime="20201112 12:26:57.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.710" endtime="20201112 12:26:57.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.717" endtime="20201112 12:26:57.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.677" endtime="20201112 12:26:57.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.671" endtime="20201112 12:26:57.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.741" endtime="20201112 12:26:58.045"></status>
</kw>
<msg timestamp="20201112 12:26:58.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043147458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043151403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.738" endtime="20201112 12:26:58.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043147458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043151403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.050" endtime="20201112 12:26:58.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.058" endtime="20201112 12:26:58.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.731" endtime="20201112 12:26:58.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.726" endtime="20201112 12:26:58.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.067" level="INFO">${RESULT} = [{'time': 0.043151403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.043167264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:58.063" endtime="20201112 12:26:58.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.080" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.068" endtime="20201112 12:26:58.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.086" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.084" endtime="20201112 12:26:58.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.088" level="INFO">VALUE: [3.9449999999982555e-06, 3.971999999997922e-06, 4.5549999999963675e-06, 3.9720000000048605e-06, 4.485999999997992e-06, 3.959000000004764e-06, 4.51400000000407e-06, 3.958000000005291e-06, 3.957999999998352e-06, 3.9859999999974915e-06, 3.943999999998782e-06, 4.513999999997131e-06, 4.416999999999616e-06, 4.4999999999975615e-06, 4.471999999998422e-06, 3.9720000000048605e-06, 4.51400000000407e-06, 4.000000000004e-06, 3.9860000000044304e-06, 3.971999999997922e-06, 3.971999999997922e-06, 4.51400000000407e-06, 4.513999999997131e-06, 4.473000000004834e-06, 4.443999999999282e-06, 4.513999999997131e-06, 3.957999999998352e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.486999999997465e-06, 3.971999999997922e-06, 4.527000000004167e-06, 3.958000000005291e-06, 4.457999999998852e-06, 4.4999999999975615e-06, 4.5000000000045e-06, 3.971999999997922e-06, 4.5000000000045e-06, 4.458999999998325e-06, 4.4999999999975615e-06, 4.52800000000364e-06, 4.5000000000045e-06, 4.527999999996701e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 3.957999999998352e-06, 4.471999999998422e-06, 4.5000000000045e-06, 3.944000000005721e-06, 4.471999999998422e-06]</msg>
<status status="PASS" starttime="20201112 12:26:58.087" endtime="20201112 12:26:58.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.081" endtime="20201112 12:26:58.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.098" endtime="20201112 12:26:58.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.103" endtime="20201112 12:26:58.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.101" endtime="20201112 12:26:58.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.096" endtime="20201112 12:26:58.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.667" endtime="20201112 12:26:58.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.666" endtime="20201112 12:26:58.124"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.135" endtime="20201112 12:26:58.151"></status>
</kw>
<msg timestamp="20201112 12:26:58.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.133" endtime="20201112 12:26:58.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.154" endtime="20201112 12:26:58.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.161" endtime="20201112 12:26:58.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.130" endtime="20201112 12:26:58.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.127" endtime="20201112 12:26:58.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.185" endtime="20201112 12:26:58.537"></status>
</kw>
<msg timestamp="20201112 12:26:58.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024597083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.181" endtime="20201112 12:26:58.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024597083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.546" endtime="20201112 12:26:58.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.565" endtime="20201112 12:26:58.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.174" endtime="20201112 12:26:58.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.169" endtime="20201112 12:26:58.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.583" level="INFO">${RESULT} = [{'time': 0.024597083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.024613917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.574" endtime="20201112 12:26:58.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.613" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.585" endtime="20201112 12:26:58.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.625" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.622" endtime="20201112 12:26:58.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.630" level="INFO">VALUE: [5.040999999997298e-06, 5.5139999999981315e-06, 5.014000000001101e-06, 5.0139999999976315e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.556000000000311e-06, 5.027999999997201e-06, 5.485999999998992e-06, 5.027999999997201e-06, 4.9999999999980616e-06, 5.556000000000311e-06, 5.57000000000335e-06, 5.582999999999977e-06, 5.556000000000311e-06, 5.0139999999976315e-06, 5.027000000001197e-06, 4.9999999999980616e-06, 5.5139999999981315e-06, 5.097000000002516e-06, 5.027999999997201e-06, 5.527999999997701e-06, 5.096999999999047e-06, 5.5689999999969375e-06, 5.569999999999881e-06, 5.512999999998658e-06, 5.542000000000741e-06, 4.9999999999980616e-06, 5.528000000001171e-06, 5.042000000000241e-06, 5.0139999999976315e-06, 5.042000000000241e-06, 5.014000000001101e-06, 5.582999999999977e-06, 5.028000000000671e-06, 5.055000000000337e-06, 5.027000000001197e-06, 5.528000000001171e-06, 5.012999999998158e-06, 5.58400000000292e-06, 5.569999999999881e-06, 5.014000000001101e-06, 4.9999999999980616e-06, 5.000000000001531e-06, 4.985999999998492e-06, 5.000000000001531e-06, 5.555000000000837e-06, 5.014000000001101e-06, 5.014000000001101e-06]</msg>
<status status="PASS" starttime="20201112 12:26:58.627" endtime="20201112 12:26:58.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.615" endtime="20201112 12:26:58.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.640" endtime="20201112 12:26:58.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.648" endtime="20201112 12:26:58.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.644" endtime="20201112 12:26:58.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.635" endtime="20201112 12:26:58.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.125" endtime="20201112 12:26:58.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.124" endtime="20201112 12:26:58.675"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.698" endtime="20201112 12:26:58.716"></status>
</kw>
<msg timestamp="20201112 12:26:58.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.694" endtime="20201112 12:26:58.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.720" endtime="20201112 12:26:58.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.726" endtime="20201112 12:26:58.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.687" endtime="20201112 12:26:58.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.681" endtime="20201112 12:26:58.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.752" endtime="20201112 12:26:59.098"></status>
</kw>
<msg timestamp="20201112 12:26:59.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042607153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042613222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.748" endtime="20201112 12:26:59.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042607153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042613222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.108" endtime="20201112 12:26:59.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.127" endtime="20201112 12:26:59.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.740" endtime="20201112 12:26:59.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.735" endtime="20201112 12:26:59.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.144" level="INFO">${RESULT} = [{'time': 0.042613222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.042628333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:59.135" endtime="20201112 12:26:59.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.176" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.147" endtime="20201112 12:26:59.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.187" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.185" endtime="20201112 12:26:59.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.193" level="INFO">VALUE: [6.0689999999974376e-06, 6.138999999995287e-06, 6.083000000003946e-06, 6.624999999996217e-06, 6.096999999996577e-06, 6.096999999996577e-06, 6.554999999998368e-06, 6.0279999999982015e-06, 6.097000000003516e-06, 6.583999999996981e-06, 6.07000000000385e-06, 6.0690000000043764e-06, 6.625000000003156e-06, 6.57000000000435e-06, 6.096999999996577e-06, 5.583999999995981e-06, 6.07000000000385e-06, 6.59800000000349e-06, 6.083000000003946e-06, 6.0829999999970075e-06, 6.625000000003156e-06, 6.55600000000478e-06, 6.11200000000256e-06, 6.625000000003156e-06, 6.583000000004446e-06, 6.568999999997938e-06, 6.568999999997938e-06, 6.097000000003516e-06, 6.583000000004446e-06, 6.040999999998298e-06, 6.09800000000299e-06, 6.055999999997341e-06, 6.0690000000043764e-06, 6.625000000003156e-06, 6.055999999997341e-06, 6.58400000000392e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.583000000004446e-06, 6.083000000003946e-06, 6.0689999999974376e-06, 6.5829999999975075e-06, 6.083999999996481e-06, 6.624999999996217e-06, 6.07000000000385e-06, 6.0829999999970075e-06, 6.0690000000043764e-06, 6.054999999997868e-06]</msg>
<status status="PASS" starttime="20201112 12:26:59.190" endtime="20201112 12:26:59.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.178" endtime="20201112 12:26:59.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.203" endtime="20201112 12:26:59.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.211" endtime="20201112 12:26:59.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.207" endtime="20201112 12:26:59.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.198" endtime="20201112 12:26:59.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.677" endtime="20201112 12:26:59.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.675" endtime="20201112 12:26:59.237"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.261" endtime="20201112 12:26:59.279"></status>
</kw>
<msg timestamp="20201112 12:26:59.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.257" endtime="20201112 12:26:59.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.282" endtime="20201112 12:26:59.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.289" endtime="20201112 12:26:59.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.250" endtime="20201112 12:26:59.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.244" endtime="20201112 12:26:59.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.313" endtime="20201112 12:26:59.653"></status>
</kw>
<msg timestamp="20201112 12:26:59.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042658181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042665806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.309" endtime="20201112 12:26:59.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042658181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042665806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.662" endtime="20201112 12:26:59.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.681" endtime="20201112 12:26:59.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.302" endtime="20201112 12:26:59.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.297" endtime="20201112 12:26:59.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.699" level="INFO">${RESULT} = [{'time': 0.042665806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.042678583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.690" endtime="20201112 12:26:59.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.733" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.701" endtime="20201112 12:26:59.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.744" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.742" endtime="20201112 12:26:59.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.750" level="INFO">VALUE: [7.624999999997217e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.152999999995857e-06, 7.638999999996787e-06, 7.624999999997217e-06, 7.097000000004516e-06, 7.680000000002962e-06, 7.124999999996717e-06, 7.625000000004156e-06, 7.139000000003226e-06, 7.694000000002532e-06, 7.681000000002436e-06, 7.582999999998508e-06, 7.0690000000053765e-06, 7.139000000003226e-06, 7.680000000002962e-06, 7.624999999997217e-06, 7.5969999999980775e-06, 7.693999999995593e-06, 7.124999999996717e-06, 6.569999999997411e-06, 7.07000000000485e-06, 7.125000000003656e-06, 7.125000000003656e-06, 7.666999999995927e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.680000000002962e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.152999999995857e-06, 7.083999999997481e-06, 7.138999999996287e-06, 7.680000000002962e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.666000000003392e-06, 7.694000000002532e-06, 7.679999999996023e-06, 7.639000000003726e-06, 7.166000000002892e-06, 7.125000000003656e-06, 7.124999999996717e-06, 7.111000000004086e-06, 7.694000000002532e-06, 7.1380000000037525e-06, 7.693999999995593e-06, 7.679999999996023e-06, 7.124999999996717e-06]</msg>
<status status="PASS" starttime="20201112 12:26:59.746" endtime="20201112 12:26:59.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.735" endtime="20201112 12:26:59.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.760" endtime="20201112 12:26:59.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.769" endtime="20201112 12:26:59.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.764" endtime="20201112 12:26:59.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.755" endtime="20201112 12:26:59.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.239" endtime="20201112 12:26:59.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.238" endtime="20201112 12:26:59.796"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.819" endtime="20201112 12:26:59.837"></status>
</kw>
<msg timestamp="20201112 12:26:59.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.816" endtime="20201112 12:26:59.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.841" endtime="20201112 12:26:59.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.847" endtime="20201112 12:26:59.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.808" endtime="20201112 12:26:59.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.802" endtime="20201112 12:26:59.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.871" endtime="20201112 12:27:00.210"></status>
</kw>
<msg timestamp="20201112 12:27:00.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043089403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.868" endtime="20201112 12:27:00.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043089403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.220" endtime="20201112 12:27:00.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.238" endtime="20201112 12:27:00.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.860" endtime="20201112 12:27:00.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.856" endtime="20201112 12:27:00.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.256" level="INFO">${RESULT} = [{'time': 0.043089403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999996427e-06, 'source_diff': 8.166999999996427e-06}, {'time': 0.043101556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.247" endtime="20201112 12:27:00.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.288" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.258" endtime="20201112 12:27:00.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.299" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.297" endtime="20201112 12:27:00.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.305" level="INFO">VALUE: [8.166999999996427e-06, 8.166999999996427e-06, 7.639000000003726e-06, 8.179999999996523e-06, 8.180999999995997e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.152999999996857e-06, 8.723000000002146e-06, 8.195000000002506e-06, 8.195000000002506e-06, 8.679999999997023e-06, 8.721999999995733e-06, 8.680999999996497e-06, 8.124999999997717e-06, 8.179999999996523e-06, 8.181000000002936e-06, 8.735999999995303e-06, 7.611000000004586e-06, 8.209000000002076e-06, 7.639000000003726e-06, 8.778000000000952e-06, 8.694999999996067e-06, 8.694999999996067e-06, 8.708000000003102e-06, 8.222000000002172e-06, 7.639000000003726e-06, 8.666999999996927e-06, 8.680999999996497e-06, 8.193999999996093e-06, 7.638999999996787e-06, 8.193999999996093e-06, 7.694000000002532e-06, 8.236000000001742e-06, 8.694000000003532e-06, 8.693999999996593e-06, 8.181000000002936e-06, 7.639000000003726e-06, 8.722999999995207e-06, 8.721999999995733e-06, 8.139000000004226e-06, 8.209000000002076e-06, 8.722000000002672e-06, 8.181000000002936e-06, 7.736000000001242e-06, 8.750000000001812e-06, 8.194000000003032e-06, 8.194000000003032e-06, 8.208000000002602e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 12:27:00.302" endtime="20201112 12:27:00.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.290" endtime="20201112 12:27:00.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.314" endtime="20201112 12:27:00.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.323" endtime="20201112 12:27:00.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.318" endtime="20201112 12:27:00.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.310" endtime="20201112 12:27:00.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.798" endtime="20201112 12:27:00.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.796" endtime="20201112 12:27:00.349"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.372" endtime="20201112 12:27:00.390"></status>
</kw>
<msg timestamp="20201112 12:27:00.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.369" endtime="20201112 12:27:00.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.393" endtime="20201112 12:27:00.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.399" endtime="20201112 12:27:00.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.361" endtime="20201112 12:27:00.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.356" endtime="20201112 12:27:00.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.423" endtime="20201112 12:27:00.763"></status>
</kw>
<msg timestamp="20201112 12:27:00.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042504833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042514056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.420" endtime="20201112 12:27:00.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042504833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042514056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.772" endtime="20201112 12:27:00.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.791" endtime="20201112 12:27:00.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.413" endtime="20201112 12:27:00.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.408" endtime="20201112 12:27:00.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.810" level="INFO">${RESULT} = [{'time': 0.042514056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.223000000002646e-06, 'source_diff': 9.223000000002646e-06}, {'time': 0.042539278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.800" endtime="20201112 12:27:00.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.841" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.812" endtime="20201112 12:27:00.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.854" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.852" endtime="20201112 12:27:00.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.859" level="INFO">VALUE: [9.223000000002646e-06, 9.792000000001522e-06, 8.721999999995733e-06, 8.736000000002242e-06, 9.236000000002742e-06, 9.750000000002812e-06, 8.680999999996497e-06, 9.791000000002048e-06, 9.264000000001882e-06, 9.249999999995373e-06, 9.791999999994583e-06, 9.235999999995803e-06, 8.750000000001812e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.221999999996233e-06, 9.264000000001882e-06, 8.791000000001048e-06, 8.694999999996067e-06, 8.736000000002242e-06, 8.694000000003532e-06, 8.708999999995637e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.750000000002812e-06, 9.249999999995373e-06, 9.237000000002216e-06, 9.250000000002312e-06, 9.249999999995373e-06, 8.778000000000952e-06, 8.638999999997787e-06, 9.194999999996567e-06, 8.667000000003866e-06, 9.778000000001952e-06, 9.805000000001618e-06, 9.235999999995803e-06, 9.223000000002646e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.805000000001618e-06, 9.179999999997523e-06, 9.264000000001882e-06, 8.722000000002672e-06, 9.750000000002812e-06, 8.708000000003102e-06, 9.264000000001882e-06, 9.750000000002812e-06, 9.221999999996233e-06]</msg>
<status status="PASS" starttime="20201112 12:27:00.856" endtime="20201112 12:27:00.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.843" endtime="20201112 12:27:00.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.869" endtime="20201112 12:27:00.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.878" endtime="20201112 12:27:00.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.873" endtime="20201112 12:27:00.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.864" endtime="20201112 12:27:00.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.351" endtime="20201112 12:27:00.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.350" endtime="20201112 12:27:00.904"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.927" endtime="20201112 12:27:00.945"></status>
</kw>
<msg timestamp="20201112 12:27:00.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.923" endtime="20201112 12:27:00.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.948" endtime="20201112 12:27:00.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.954" endtime="20201112 12:27:00.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.916" endtime="20201112 12:27:00.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.910" endtime="20201112 12:27:00.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.978" endtime="20201112 12:27:01.318"></status>
</kw>
<msg timestamp="20201112 12:27:01.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042353569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042363931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.975" endtime="20201112 12:27:01.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042353569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042363931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.327" endtime="20201112 12:27:01.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.346" endtime="20201112 12:27:01.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.967" endtime="20201112 12:27:01.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.963" endtime="20201112 12:27:01.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.364" level="INFO">${RESULT} = [{'time': 0.042363931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0361999999999871e-05, 'source_diff': 1.0361999999999871e-05}, {'time': 0.042381972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:01.355" endtime="20201112 12:27:01.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.390" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.366" endtime="20201112 12:27:01.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.396" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.395" endtime="20201112 12:27:01.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.399" level="INFO">VALUE: [1.0361999999999871e-05, 1.080499999999568e-05, 1.0305000000002118e-05, 1.027699999999604e-05, 1.029099999999561e-05, 1.0374999999999968e-05, 1.0277999999995513e-05, 1.0305999999994653e-05, 1.0291000000002548e-05, 1.0292000000002022e-05, 1.0819000000002188e-05, 9.736000000003242e-06, 1.0792000000002522e-05, 1.0806000000002092e-05, 1.0235999999996803e-05, 1.0292000000002022e-05, 9.736000000003242e-06, 1.0833000000001758e-05, 1.0292000000002022e-05, 1.0861000000000898e-05, 9.792000000001522e-06, 9.749999999995873e-06, 1.0292000000002022e-05, 1.0320000000001162e-05, 9.749999999995873e-06, 1.0806000000002092e-05, 1.0305999999994653e-05, 1.0806000000002092e-05, 9.778000000001952e-06, 1.0306000000001592e-05, 1.0805000000002618e-05, 9.763999999995443e-06, 1.0306000000001592e-05, 1.0304999999995179e-05, 1.0277000000002978e-05, 1.0834000000001232e-05, 9.736000000003242e-06, 1.0319000000001688e-05, 1.0306000000001592e-05, 1.0805000000002618e-05, 9.763999999995443e-06, 9.792000000001522e-06, 1.0291999999995083e-05, 9.777999999995013e-06, 1.0320000000001162e-05, 1.0305999999994653e-05, 1.0306000000001592e-05, 1.0292000000002022e-05, 9.693999999997593e-06, 1.0263999999995943e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.398" endtime="20201112 12:27:01.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.391" endtime="20201112 12:27:01.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.404" endtime="20201112 12:27:01.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.408" endtime="20201112 12:27:01.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.406" endtime="20201112 12:27:01.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.402" endtime="20201112 12:27:01.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.906" endtime="20201112 12:27:01.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.905" endtime="20201112 12:27:01.429"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.440" endtime="20201112 12:27:01.455"></status>
</kw>
<msg timestamp="20201112 12:27:01.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.438" endtime="20201112 12:27:01.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.456" endtime="20201112 12:27:01.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.459" endtime="20201112 12:27:01.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.435" endtime="20201112 12:27:01.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.432" endtime="20201112 12:27:01.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.471" endtime="20201112 12:27:01.793"></status>
</kw>
<msg timestamp="20201112 12:27:01.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024745569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024756917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.469" endtime="20201112 12:27:01.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024745569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024756917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.803" endtime="20201112 12:27:01.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.822" endtime="20201112 12:27:01.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.466" endtime="20201112 12:27:01.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.463" endtime="20201112 12:27:01.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.841" level="INFO">${RESULT} = [{'time': 0.024756917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1348000000001301e-05, 'source_diff': 1.1348000000001301e-05}, {'time': 0.024770583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:01.831" endtime="20201112 12:27:01.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.843" endtime="20201112 12:27:01.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.884" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.882" endtime="20201112 12:27:01.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.889" level="INFO">VALUE: [1.1348000000001301e-05, 1.1360999999997928e-05, 1.1917000000000177e-05, 1.1361999999997402e-05, 1.0806000000002092e-05, 1.1347000000001828e-05, 1.1403000000000107e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1361000000001398e-05, 1.1360999999997928e-05, 1.0832999999998288e-05, 1.1361000000001398e-05, 1.1361000000001398e-05, 1.0833000000001758e-05, 1.0889000000000038e-05, 1.1860999999998428e-05, 1.1361000000001398e-05, 1.1917000000000177e-05, 1.0847000000001328e-05, 1.1319999999998692e-05, 1.0874999999996998e-05, 1.1347000000001828e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1277000000000509e-05, 1.1361000000001398e-05, 1.1346999999998358e-05, 1.1346999999998358e-05, 1.1375000000000968e-05, 1.1860999999998428e-05, 1.1861000000001898e-05, 1.1346999999998358e-05, 1.1860999999998428e-05, 1.0792000000002522e-05, 1.1361000000001398e-05, 1.1360999999997928e-05, 1.0847000000001328e-05, 1.1361000000001398e-05, 1.0846999999997858e-05, 1.0847000000001328e-05, 1.1361000000001398e-05, 1.1347999999997832e-05, 1.1346999999998358e-05, 1.1362000000000871e-05, 1.1360999999997928e-05, 1.1917000000000177e-05, 1.0819000000002188e-05, 1.0846999999997858e-05, 1.0847000000001328e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.886" endtime="20201112 12:27:01.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.875" endtime="20201112 12:27:01.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.899" endtime="20201112 12:27:01.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.909" endtime="20201112 12:27:01.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.905" endtime="20201112 12:27:01.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.894" endtime="20201112 12:27:01.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.430" endtime="20201112 12:27:01.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.430" endtime="20201112 12:27:01.935"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.958" endtime="20201112 12:27:01.976"></status>
</kw>
<msg timestamp="20201112 12:27:01.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.954" endtime="20201112 12:27:01.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.979" endtime="20201112 12:27:01.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.985" endtime="20201112 12:27:01.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.947" endtime="20201112 12:27:01.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.941" endtime="20201112 12:27:01.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.009" endtime="20201112 12:27:02.356"></status>
</kw>
<msg timestamp="20201112 12:27:02.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042256806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042268708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.005" endtime="20201112 12:27:02.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042256806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042268708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.365" endtime="20201112 12:27:02.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.384" endtime="20201112 12:27:02.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.998" endtime="20201112 12:27:02.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.993" endtime="20201112 12:27:02.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.402" level="INFO">${RESULT} = [{'time': 0.042268708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1902000000001134e-05, 'source_diff': 1.1902000000001134e-05}, {'time': 0.042284806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:02.393" endtime="20201112 12:27:02.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.432" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.404" endtime="20201112 12:27:02.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.443" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.441" endtime="20201112 12:27:02.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.448" level="INFO">VALUE: [1.1902000000001134e-05, 1.1917000000000177e-05, 1.2429999999993835e-05, 1.1847000000002328e-05, 1.1889000000001038e-05, 1.2403000000001108e-05, 1.2417000000000677e-05, 1.1833999999995293e-05, 1.1903000000000608e-05, 1.2375000000001968e-05, 1.2403000000001108e-05, 1.2429999999993835e-05, 1.2417000000000677e-05, 1.1902000000001134e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.2985999999999553e-05, 1.2430000000000774e-05, 1.2457999999999914e-05, 1.2417000000000677e-05, 1.1861000000001898e-05, 1.1861000000001898e-05, 1.1861000000001898e-05, 1.1903000000000608e-05, 1.2945000000000317e-05, 1.1861000000001898e-05, 1.1901999999994195e-05, 1.2971999999999984e-05, 1.1861000000001898e-05, 1.1889000000001038e-05, 1.2431000000000247e-05, 1.2347000000002828e-05, 1.2403000000001108e-05, 1.1917000000000177e-05, 1.2402999999994169e-05, 1.2417000000000677e-05, 1.1889000000001038e-05, 1.2416000000001204e-05, 1.2403000000001108e-05, 1.2430000000000774e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.2416999999993739e-05, 1.180499999999668e-05, 1.2402999999994169e-05, 1.2417000000000677e-05, 1.3013999999998693e-05, 1.1875000000001468e-05, 1.2430000000000774e-05, 1.2417000000000677e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.445" endtime="20201112 12:27:02.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.434" endtime="20201112 12:27:02.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.458" endtime="20201112 12:27:02.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.466" endtime="20201112 12:27:02.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.462" endtime="20201112 12:27:02.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.453" endtime="20201112 12:27:02.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.937" endtime="20201112 12:27:02.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.936" endtime="20201112 12:27:02.492"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.516" endtime="20201112 12:27:02.535"></status>
</kw>
<msg timestamp="20201112 12:27:02.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.513" endtime="20201112 12:27:02.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.538" endtime="20201112 12:27:02.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.545" endtime="20201112 12:27:02.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.506" endtime="20201112 12:27:02.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.499" endtime="20201112 12:27:02.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.568" endtime="20201112 12:27:02.903"></status>
</kw>
<msg timestamp="20201112 12:27:02.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043601597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043615069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.565" endtime="20201112 12:27:02.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043601597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043615069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.912" endtime="20201112 12:27:02.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.931" endtime="20201112 12:27:02.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.558" endtime="20201112 12:27:02.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.553" endtime="20201112 12:27:02.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.948" level="INFO">${RESULT} = [{'time': 0.043615069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.043642097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:02.939" endtime="20201112 12:27:02.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.979" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.950" endtime="20201112 12:27:02.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.990" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.987" endtime="20201112 12:27:02.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.995" level="INFO">VALUE: [1.3472000000000484e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.2958999999999887e-05, 1.2972999999999457e-05, 1.3472999999999957e-05, 1.2931000000000747e-05, 1.2930000000001274e-05, 1.3513999999999193e-05, 1.3459000000000387e-05, 1.2931000000000747e-05, 1.3457999999993975e-05, 1.3416000000002204e-05, 1.2903000000001608e-05, 1.3472000000000484e-05, 1.2957999999993475e-05, 1.2874999999995529e-05, 1.3459000000000387e-05, 1.2930999999993809e-05, 1.2971999999999984e-05, 1.3445000000000817e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3444999999993879e-05, 1.3416999999994739e-05, 1.3417000000001678e-05, 1.3444000000001344e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2917000000001178e-05, 1.2916999999994239e-05, 1.4000000000000123e-05, 1.3472000000000484e-05, 1.3486999999999527e-05, 1.3444000000001344e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.2915999999994765e-05, 1.2944000000000844e-05, 1.2999999999999123e-05, 1.3472000000000484e-05, 1.2971999999999984e-05, 1.3458000000000914e-05, 1.2930000000001274e-05, 1.2916000000001704e-05, 1.2917000000001178e-05, 1.2958000000000414e-05, 1.3499999999999623e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.992" endtime="20201112 12:27:02.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.981" endtime="20201112 12:27:02.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.005" endtime="20201112 12:27:03.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.013" endtime="20201112 12:27:03.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.009" endtime="20201112 12:27:03.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.000" endtime="20201112 12:27:03.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.494" endtime="20201112 12:27:03.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.493" endtime="20201112 12:27:03.039"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.062" endtime="20201112 12:27:03.082"></status>
</kw>
<msg timestamp="20201112 12:27:03.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.059" endtime="20201112 12:27:03.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.085" endtime="20201112 12:27:03.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.091" endtime="20201112 12:27:03.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.052" endtime="20201112 12:27:03.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.046" endtime="20201112 12:27:03.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.115" endtime="20201112 12:27:03.448"></status>
</kw>
<msg timestamp="20201112 12:27:03.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043638444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043652972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.112" endtime="20201112 12:27:03.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043638444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043652972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.457" endtime="20201112 12:27:03.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.476" endtime="20201112 12:27:03.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.104" endtime="20201112 12:27:03.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.100" endtime="20201112 12:27:03.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.494" level="INFO">${RESULT} = [{'time': 0.043652972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.043678, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:03.485" endtime="20201112 12:27:03.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.524" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:03.496" endtime="20201112 12:27:03.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.535" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.533" endtime="20201112 12:27:03.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.541" level="INFO">VALUE: [1.4527999999999763e-05, 1.3958000000001414e-05, 1.4514000000000193e-05, 1.3986000000000554e-05, 1.4514000000000193e-05, 1.4569999999998473e-05, 1.4500000000000624e-05, 1.4542000000006272e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.4013999999999693e-05, 1.4458000000001914e-05, 1.4084000000004482e-05, 1.4027999999999263e-05, 1.4514000000000193e-05, 1.3972000000000984e-05, 1.4514000000000193e-05, 1.3931000000001748e-05, 1.452700000000029e-05, 1.4041999999998833e-05, 1.4459000000001387e-05, 1.4514000000000193e-05, 1.4527999999999763e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.4042000000005772e-05, 1.3929999999995335e-05, 1.3959000000000887e-05, 1.4499999999993685e-05, 1.4514000000000193e-05, 1.455499999999943e-05, 1.4487000000000527e-05, 1.3971999999994045e-05, 1.3986000000000554e-05, 1.4541999999999333e-05, 1.451300000000072e-05, 1.4598000000004552e-05, 1.3916000000002704e-05, 1.4027999999999263e-05, 1.4541999999999333e-05, 1.452700000000029e-05, 1.4514000000000193e-05, 1.4069999999997973e-05, 1.3945000000001317e-05, 1.4000000000000123e-05, 1.4013999999999693e-05, 1.402699999999979e-05, 1.4514000000000193e-05, 1.4500000000000624e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.537" endtime="20201112 12:27:03.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.526" endtime="20201112 12:27:03.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.557" endtime="20201112 12:27:03.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.565" endtime="20201112 12:27:03.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.560" endtime="20201112 12:27:03.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.552" endtime="20201112 12:27:03.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.041" endtime="20201112 12:27:03.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.040" endtime="20201112 12:27:03.591"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.614" endtime="20201112 12:27:03.633"></status>
</kw>
<msg timestamp="20201112 12:27:03.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.610" endtime="20201112 12:27:03.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.636" endtime="20201112 12:27:03.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.642" endtime="20201112 12:27:03.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.603" endtime="20201112 12:27:03.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.597" endtime="20201112 12:27:03.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.667" endtime="20201112 12:27:04.005"></status>
</kw>
<msg timestamp="20201112 12:27:04.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042397347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042412875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.664" endtime="20201112 12:27:04.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042397347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042412875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.014" endtime="20201112 12:27:04.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.033" endtime="20201112 12:27:04.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.655" endtime="20201112 12:27:04.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.650" endtime="20201112 12:27:04.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.050" level="INFO">${RESULT} = [{'time': 0.042412875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5528000000000763e-05, 'source_diff': 1.5528000000000763e-05}, {'time': 0.042431722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:04.041" endtime="20201112 12:27:04.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.082" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.052" endtime="20201112 12:27:04.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.093" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.091" endtime="20201112 12:27:04.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.099" level="INFO">VALUE: [1.5528000000000763e-05, 1.508299999999907e-05, 1.50689999999995e-05, 1.558299999999957e-05, 1.50689999999995e-05, 1.5069999999998973e-05, 1.5028000000000263e-05, 1.565299999999742e-05, 1.5111000000005148e-05, 1.5055999999999403e-05, 1.5597999999998613e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.508299999999907e-05, 1.558299999999957e-05, 1.5625000000005218e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.5028000000000263e-05, 1.5124999999997779e-05, 1.5569e-05, 1.501300000000122e-05, 1.5569e-05, 1.5055999999999403e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.5083999999998543e-05, 1.502700000000079e-05, 1.5569e-05, 1.5028000000000263e-05, 1.504100000000036e-05, 1.5583999999999043e-05, 1.50689999999995e-05, 1.5583999999999043e-05, 1.5569e-05, 1.4527999999999763e-05, 1.555500000000043e-05, 1.5055999999999403e-05, 1.558299999999957e-05, 1.508299999999907e-05, 1.5569999999999473e-05, 1.5069999999998973e-05, 1.558299999999957e-05, 1.5069999999998973e-05, 1.5041999999999833e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.5041999999999833e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.095" endtime="20201112 12:27:04.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.084" endtime="20201112 12:27:04.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.108" endtime="20201112 12:27:04.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.116" endtime="20201112 12:27:04.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.112" endtime="20201112 12:27:04.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.104" endtime="20201112 12:27:04.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.593" endtime="20201112 12:27:04.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.592" endtime="20201112 12:27:04.142"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.165" endtime="20201112 12:27:04.183"></status>
</kw>
<msg timestamp="20201112 12:27:04.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.162" endtime="20201112 12:27:04.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.186" endtime="20201112 12:27:04.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.192" endtime="20201112 12:27:04.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.155" endtime="20201112 12:27:04.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.149" endtime="20201112 12:27:04.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.216" endtime="20201112 12:27:04.552"></status>
</kw>
<msg timestamp="20201112 12:27:04.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041959431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.213" endtime="20201112 12:27:04.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041959431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.562" endtime="20201112 12:27:04.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.581" endtime="20201112 12:27:04.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.205" endtime="20201112 12:27:04.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.201" endtime="20201112 12:27:04.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.598" level="INFO">${RESULT} = [{'time': 0.041959431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.612499999999878e-05, 'source_diff': 1.612499999999878e-05}, {'time': 0.041988389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.589" endtime="20201112 12:27:04.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.628" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.600" endtime="20201112 12:27:04.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.639" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.637" endtime="20201112 12:27:04.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.645" level="INFO">VALUE: [1.612499999999878e-05, 1.658300000000057e-05, 1.662499999999928e-05, 1.5569e-05, 1.663899999999885e-05, 1.6125000000005718e-05, 1.6695000000004068e-05, 1.60690000000005e-05, 1.663899999999885e-05, 1.612499999999878e-05, 1.661099999999971e-05, 1.613899999999835e-05, 1.6042000000000833e-05, 1.661099999999971e-05, 1.5583999999999043e-05, 1.662499999999928e-05, 1.6625000000006218e-05, 1.662499999999928e-05, 1.558299999999957e-05, 1.6069999999999973e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.663899999999885e-05, 1.612499999999878e-05, 1.663899999999885e-05, 1.6651999999998945e-05, 1.663899999999885e-05, 1.602700000000179e-05, 1.612499999999878e-05, 1.606899999999356e-05, 1.6584000000000043e-05, 1.608300000000007e-05, 1.662499999999928e-05, 1.5569999999999473e-05, 1.609699999999964e-05, 1.60690000000005e-05, 1.6083999999999543e-05, 1.606899999999356e-05, 1.6083999999999543e-05, 1.6639000000005788e-05, 1.6014000000001694e-05, 1.609699999999964e-05, 1.663899999999885e-05, 1.658300000000057e-05, 1.6639000000005788e-05, 1.662499999999928e-05, 1.6097000000006578e-05, 1.60690000000005e-05, 1.6138000000005814e-05, 1.609699999999964e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.642" endtime="20201112 12:27:04.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.630" endtime="20201112 12:27:04.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.655" endtime="20201112 12:27:04.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.663" endtime="20201112 12:27:04.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.658" endtime="20201112 12:27:04.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.650" endtime="20201112 12:27:04.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.144" endtime="20201112 12:27:04.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.143" endtime="20201112 12:27:04.689"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.713" endtime="20201112 12:27:04.733"></status>
</kw>
<msg timestamp="20201112 12:27:04.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.709" endtime="20201112 12:27:04.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.736" endtime="20201112 12:27:04.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.743" endtime="20201112 12:27:04.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.701" endtime="20201112 12:27:04.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.695" endtime="20201112 12:27:04.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.768" endtime="20201112 12:27:05.105"></status>
</kw>
<msg timestamp="20201112 12:27:05.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045343014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045360681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.763" endtime="20201112 12:27:05.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045343014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045360681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.114" endtime="20201112 12:27:05.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.133" endtime="20201112 12:27:05.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.756" endtime="20201112 12:27:05.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.751" endtime="20201112 12:27:05.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.151" level="INFO">${RESULT} = [{'time': 0.045360681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.766699999999899e-05, 'source_diff': 1.766699999999899e-05}, {'time': 0.045383708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:05.142" endtime="20201112 12:27:05.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.181" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.153" endtime="20201112 12:27:05.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.192" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.190" endtime="20201112 12:27:05.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.197" level="INFO">VALUE: [1.766699999999899e-05, 1.7179999999998585e-05, 1.7679999999999085e-05, 1.7209000000004138e-05, 1.7179999999998585e-05, 1.665299999999842e-05, 1.713899999999935e-05, 1.7181000000004998e-05, 1.7708000000005164e-05, 1.7193999999998155e-05, 1.7165999999999015e-05, 1.7707999999998225e-05, 1.662499999999928e-05, 1.665299999999842e-05, 1.713899999999935e-05, 1.662499999999928e-05, 1.7165999999999015e-05, 1.716699999999849e-05, 1.7181000000004998e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.7707999999998225e-05, 1.712499999999978e-05, 1.77089999999977e-05, 1.769499999999813e-05, 1.7180000000005524e-05, 1.7181000000004998e-05, 1.716699999999849e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.719499999999763e-05, 1.662499999999928e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.715299999999892e-05, 1.7681000000005498e-05, 1.7179999999998585e-05, 1.7707999999998225e-05, 1.7679999999999085e-05, 1.7194000000005094e-05, 1.7181000000004998e-05, 1.661099999999971e-05, 1.7139000000006288e-05, 1.6625000000006218e-05, 1.713899999999935e-05, 1.769499999999813e-05, 1.7153000000005858e-05, 1.7735999999997365e-05, 1.661099999999971e-05, 1.6639000000005788e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.194" endtime="20201112 12:27:05.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.183" endtime="20201112 12:27:05.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.207" endtime="20201112 12:27:05.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.216" endtime="20201112 12:27:05.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.211" endtime="20201112 12:27:05.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.203" endtime="20201112 12:27:05.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.691" endtime="20201112 12:27:05.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.690" endtime="20201112 12:27:05.241"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.264" endtime="20201112 12:27:05.282"></status>
</kw>
<msg timestamp="20201112 12:27:05.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.261" endtime="20201112 12:27:05.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.285" endtime="20201112 12:27:05.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.292" endtime="20201112 12:27:05.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.254" endtime="20201112 12:27:05.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.248" endtime="20201112 12:27:05.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.315" endtime="20201112 12:27:05.650"></status>
</kw>
<msg timestamp="20201112 12:27:05.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042027417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042046153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.312" endtime="20201112 12:27:05.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042027417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042046153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.659" endtime="20201112 12:27:05.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.678" endtime="20201112 12:27:05.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.305" endtime="20201112 12:27:05.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.300" endtime="20201112 12:27:05.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.697" level="INFO">${RESULT} = [{'time': 0.042046153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8736000000005304e-05, 'source_diff': 1.8736000000005304e-05}, {'time': 0.042066972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:05.688" endtime="20201112 12:27:05.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.727" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.699" endtime="20201112 12:27:05.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.738" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.736" endtime="20201112 12:27:05.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.744" level="INFO">VALUE: [1.8736000000005304e-05, 1.7665999999999515e-05, 1.8236000000004804e-05, 1.8736000000005304e-05, 1.82089999999982e-05, 1.8249999999997435e-05, 1.7735999999997365e-05, 1.8222000000005234e-05, 1.8179999999999585e-05, 1.8166000000000015e-05, 1.819499999999863e-05, 1.8764000000004444e-05, 1.8207999999998725e-05, 1.8179999999999585e-05, 1.8193999999999155e-05, 1.8236000000004804e-05, 1.8250000000004374e-05, 1.8166000000000015e-05, 1.7709000000004638e-05, 1.8193999999999155e-05, 1.869499999999913e-05, 1.7707999999998225e-05, 1.8263999999997005e-05, 1.7707999999998225e-05, 1.7693999999998655e-05, 1.8736000000005304e-05, 1.82089999999982e-05, 1.8721999999998795e-05, 1.8249999999997435e-05, 1.8235999999997865e-05, 1.8792000000003584e-05, 1.8207999999998725e-05, 1.8749999999997935e-05, 1.768099999999856e-05, 1.8749999999997935e-05, 1.8249999999997435e-05, 1.8250000000004374e-05, 1.8167000000006428e-05, 1.8221999999998295e-05, 1.7681000000005498e-05, 1.8235999999997865e-05, 1.8193999999999155e-05, 1.7707999999998225e-05, 1.8207999999998725e-05, 1.869499999999913e-05, 1.769499999999813e-05, 1.819499999999863e-05, 1.8166000000000015e-05, 1.880499999999674e-05, 1.8195000000005568e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.741" endtime="20201112 12:27:05.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.729" endtime="20201112 12:27:05.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.753" endtime="20201112 12:27:05.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.762" endtime="20201112 12:27:05.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.757" endtime="20201112 12:27:05.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.749" endtime="20201112 12:27:05.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.243" endtime="20201112 12:27:05.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.242" endtime="20201112 12:27:05.788"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.810" endtime="20201112 12:27:05.829"></status>
</kw>
<msg timestamp="20201112 12:27:05.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.807" endtime="20201112 12:27:05.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.832" endtime="20201112 12:27:05.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.838" endtime="20201112 12:27:05.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.800" endtime="20201112 12:27:05.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.794" endtime="20201112 12:27:05.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.862" endtime="20201112 12:27:06.198"></status>
</kw>
<msg timestamp="20201112 12:27:06.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042100111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042119903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.859" endtime="20201112 12:27:06.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042100111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042119903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.208" endtime="20201112 12:27:06.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.226" endtime="20201112 12:27:06.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.852" endtime="20201112 12:27:06.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.847" endtime="20201112 12:27:06.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.245" level="INFO">${RESULT} = [{'time': 0.042119903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9791999999997645e-05, 'source_diff': 1.9791999999997645e-05}, {'time': 0.042147944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:06.236" endtime="20201112 12:27:06.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.278" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.248" endtime="20201112 12:27:06.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.289" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.287" endtime="20201112 12:27:06.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.295" level="INFO">VALUE: [1.9791999999997645e-05, 1.9888000000002626e-05, 1.8721999999998795e-05, 1.9291999999997145e-05, 1.9764000000005444e-05, 1.9819999999996785e-05, 1.929100000000461e-05, 1.9791999999997645e-05, 1.8749999999997935e-05, 1.9819999999996785e-05, 1.9249999999998435e-05, 1.9791999999997645e-05, 1.931900000000375e-05, 1.9320000000003223e-05, 1.981899999999731e-05, 1.9277999999997575e-05, 1.980499999999774e-05, 1.9805999999997215e-05, 1.8680000000000085e-05, 1.929099999999767e-05, 1.9249999999998435e-05, 1.929100000000461e-05, 1.9805999999997215e-05, 1.9277999999997575e-05, 1.9820000000003724e-05, 1.9291999999997145e-05, 1.9249999999998435e-05, 1.8735999999998365e-05, 1.9277999999997575e-05, 1.9278000000004514e-05, 1.881900000000325e-05, 1.9792000000004584e-05, 1.8749999999997935e-05, 1.873699999999784e-05, 1.9277999999997575e-05, 1.8735999999998365e-05, 1.9249999999998435e-05, 1.8749999999997935e-05, 1.9249999999998435e-05, 1.9777999999998075e-05, 1.9291999999997145e-05, 1.8735999999998365e-05, 1.9792000000004584e-05, 1.8735999999998365e-05, 1.980499999999774e-05, 1.9250000000005374e-05, 1.8763999999997505e-05, 1.9249999999998435e-05, 1.9306000000003654e-05, 1.981899999999731e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.292" endtime="20201112 12:27:06.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.280" endtime="20201112 12:27:06.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.304" endtime="20201112 12:27:06.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.313" endtime="20201112 12:27:06.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.308" endtime="20201112 12:27:06.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.300" endtime="20201112 12:27:06.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.790" endtime="20201112 12:27:06.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.788" endtime="20201112 12:27:06.339"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.362" endtime="20201112 12:27:06.379"></status>
</kw>
<msg timestamp="20201112 12:27:06.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.358" endtime="20201112 12:27:06.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.383" endtime="20201112 12:27:06.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.389" endtime="20201112 12:27:06.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.351" endtime="20201112 12:27:06.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.345" endtime="20201112 12:27:06.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.413" endtime="20201112 12:27:06.748"></status>
</kw>
<msg timestamp="20201112 12:27:06.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041964486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041984792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.409" endtime="20201112 12:27:06.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041964486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041984792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.757" endtime="20201112 12:27:06.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.776" endtime="20201112 12:27:06.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.402" endtime="20201112 12:27:06.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.397" endtime="20201112 12:27:06.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.794" level="INFO">${RESULT} = [{'time': 0.041984792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0305999999997715e-05, 'source_diff': 2.0305999999997715e-05}, {'time': 0.042011694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:06.785" endtime="20201112 12:27:06.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.825" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.796" endtime="20201112 12:27:06.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.836" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.834" endtime="20201112 12:27:06.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.842" level="INFO">VALUE: [2.0305999999997715e-05, 1.980500000000468e-05, 2.0861999999996494e-05, 2.034699999999695e-05, 1.981899999999731e-05, 2.086100000000396e-05, 2.034699999999695e-05, 1.9791999999997645e-05, 2.0333999999996855e-05, 1.9805999999997215e-05, 2.026299999999953e-05, 1.980499999999774e-05, 2.034699999999695e-05, 1.980499999999774e-05, 2.091700000000224e-05, 2.0319999999997285e-05, 2.029099999999867e-05, 2.030499999999824e-05, 1.9777999999998075e-05, 2.033299999999738e-05, 2.088899999999616e-05, 1.9791999999997645e-05, 2.086099999999702e-05, 2.0305999999997715e-05, 2.0305999999997715e-05, 2.030499999999824e-05, 2.086100000000396e-05, 1.9791999999997645e-05, 1.9806000000004154e-05, 2.036099999999652e-05, 2.084699999999745e-05, 1.9819999999996785e-05, 2.0319999999997285e-05, 2.086099999999702e-05, 1.9792000000004584e-05, 2.040300000000217e-05, 2.037500000000303e-05, 2.0249999999999435e-05, 2.033300000000432e-05, 2.0292000000005084e-05, 2.040300000000217e-05, 2.0306000000004654e-05, 2.030500000000518e-05, 2.033299999999738e-05, 2.0348000000003363e-05, 2.0862000000003433e-05, 1.9791999999997645e-05, 1.983299999999688e-05, 1.9735999999999365e-05, 2.0806000000005154e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.839" endtime="20201112 12:27:06.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.827" endtime="20201112 12:27:06.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.851" endtime="20201112 12:27:06.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.860" endtime="20201112 12:27:06.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.855" endtime="20201112 12:27:06.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.847" endtime="20201112 12:27:06.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.341" endtime="20201112 12:27:06.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.340" endtime="20201112 12:27:06.886"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.908" endtime="20201112 12:27:06.928"></status>
</kw>
<msg timestamp="20201112 12:27:06.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.905" endtime="20201112 12:27:06.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.931" endtime="20201112 12:27:06.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.937" endtime="20201112 12:27:06.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.898" endtime="20201112 12:27:06.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.892" endtime="20201112 12:27:06.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.961" endtime="20201112 12:27:07.296"></status>
</kw>
<msg timestamp="20201112 12:27:07.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041877222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041901889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.957" endtime="20201112 12:27:07.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041877222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041901889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.305" endtime="20201112 12:27:07.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.324" endtime="20201112 12:27:07.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.950" endtime="20201112 12:27:07.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.946" endtime="20201112 12:27:07.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.342" level="INFO">${RESULT} = [{'time': 0.041901889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.466699999999905e-05, 'source_diff': 2.466699999999905e-05}, {'time': 0.041946917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.333" endtime="20201112 12:27:07.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.373" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.344" endtime="20201112 12:27:07.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.384" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.382" endtime="20201112 12:27:07.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.390" level="INFO">VALUE: [2.466699999999905e-05, 2.5084000000001605e-05, 2.4542000000002395e-05, 2.45970000000012e-05, 2.4570000000001535e-05, 2.4499999999996747e-05, 2.4902000000000257e-05, 2.445899999999751e-05, 2.4693999999998717e-05, 2.4348000000000425e-05, 2.4457999999998037e-05, 2.512500000000084e-05, 2.445900000000445e-05, 2.5250000000004436e-05, 2.487500000000059e-05, 2.4471999999997607e-05, 2.5207999999998787e-05, 2.4500000000003685e-05, 2.5124999999993902e-05, 2.486100000000102e-05, 2.45970000000012e-05, 2.4792000000002645e-05, 2.4957999999998537e-05, 2.4957999999998537e-05, 2.4929999999999397e-05, 2.4500000000003685e-05, 2.4584000000001105e-05, 2.458300000000163e-05, 2.4458000000004976e-05, 2.49169999999993e-05, 2.516699999999955e-05, 2.4848000000000925e-05, 2.483300000000188e-05, 2.4348000000000425e-05, 2.4862000000000495e-05, 2.4749999999996997e-05, 2.4416000000006266e-05, 2.49169999999993e-05, 2.4486000000004116e-05, 2.4624999999993402e-05, 2.5179999999999647e-05, 2.45970000000012e-05, 2.4512999999996843e-05, 2.42770000000031e-05, 2.461100000000077e-05, 2.4749999999996997e-05, 2.4929999999999397e-05, 2.4721999999997857e-05, 2.430500000000224e-05, 2.4735999999997427e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.387" endtime="20201112 12:27:07.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.375" endtime="20201112 12:27:07.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.399" endtime="20201112 12:27:07.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.407" endtime="20201112 12:27:07.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.403" endtime="20201112 12:27:07.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.395" endtime="20201112 12:27:07.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.888" endtime="20201112 12:27:07.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.886" endtime="20201112 12:27:07.433"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.456" endtime="20201112 12:27:07.475"></status>
</kw>
<msg timestamp="20201112 12:27:07.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.453" endtime="20201112 12:27:07.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.479" endtime="20201112 12:27:07.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.485" endtime="20201112 12:27:07.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.446" endtime="20201112 12:27:07.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.440" endtime="20201112 12:27:07.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.509" endtime="20201112 12:27:07.845"></status>
</kw>
<msg timestamp="20201112 12:27:07.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042194028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042219458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.505" endtime="20201112 12:27:07.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042194028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042219458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.855" endtime="20201112 12:27:07.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.873" endtime="20201112 12:27:07.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.498" endtime="20201112 12:27:07.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.493" endtime="20201112 12:27:07.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.891" level="INFO">${RESULT} = [{'time': 0.042219458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5429999999999897e-05, 'source_diff': 2.5429999999999897e-05}, {'time': 0.042260403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:07.882" endtime="20201112 12:27:07.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.922" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.893" endtime="20201112 12:27:07.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.934" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.931" endtime="20201112 12:27:07.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.939" level="INFO">VALUE: [2.5429999999999897e-05, 2.54169999999998e-05, 2.6138999999994472e-05, 2.5583999999995166e-05, 2.6250000000005436e-05, 2.545899999999851e-05, 2.566700000000005e-05, 2.6096999999995762e-05, 2.6040999999997483e-05, 2.5360999999994582e-05, 2.5457999999999037e-05, 2.563900000000091e-05, 2.6098000000002175e-05, 2.620899999999926e-05, 2.611100000000227e-05, 2.5624999999994402e-05, 2.5443999999999467e-05, 2.558300000000263e-05, 2.5540999999996983e-05, 2.5486000000005116e-05, 2.561100000000177e-05, 2.584700000000245e-05, 2.5693999999999717e-05, 2.5443999999999467e-05, 2.5596999999995262e-05, 2.60970000000027e-05, 2.563900000000091e-05, 2.619499999999969e-05, 2.587500000000159e-05, 2.611100000000227e-05, 2.566700000000005e-05, 2.568099999999962e-05, 2.547300000000502e-05, 2.6235999999998927e-05, 2.566700000000005e-05, 2.5735999999998427e-05, 2.5848000000001925e-05, 2.59170000000003e-05, 2.587500000000159e-05, 2.5888999999994222e-05, 2.6207999999999787e-05, 2.5693999999999717e-05, 2.5750000000004936e-05, 2.5332999999995442e-05, 2.611100000000227e-05, 2.5693999999999717e-05, 2.5820000000002785e-05, 2.55970000000022e-05, 2.5749999999997997e-05, 2.6249999999998497e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.936" endtime="20201112 12:27:07.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.924" endtime="20201112 12:27:07.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.949" endtime="20201112 12:27:07.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.957" endtime="20201112 12:27:07.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.953" endtime="20201112 12:27:07.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.944" endtime="20201112 12:27:07.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.436" endtime="20201112 12:27:07.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.434" endtime="20201112 12:27:07.983"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.006" endtime="20201112 12:27:08.025"></status>
</kw>
<msg timestamp="20201112 12:27:08.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.002" endtime="20201112 12:27:08.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.028" endtime="20201112 12:27:08.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.035" endtime="20201112 12:27:08.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.995" endtime="20201112 12:27:08.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.989" endtime="20201112 12:27:08.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.060" endtime="20201112 12:27:08.362"></status>
</kw>
<msg timestamp="20201112 12:27:08.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042157653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042183931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.056" endtime="20201112 12:27:08.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042157653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042183931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.372" endtime="20201112 12:27:08.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.391" endtime="20201112 12:27:08.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.049" endtime="20201112 12:27:08.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.044" endtime="20201112 12:27:08.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.408" level="INFO">${RESULT} = [{'time': 0.042183931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6277999999997637e-05, 'source_diff': 2.6277999999997637e-05}, {'time': 0.042218958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.399" endtime="20201112 12:27:08.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.410" endtime="20201112 12:27:08.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.452" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.450" endtime="20201112 12:27:08.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.458" level="INFO">VALUE: [2.6277999999997637e-05, 2.6972000000000107e-05, 2.6944000000000967e-05, 2.6554999999997553e-05, 2.712500000000284e-05, 2.6666000000001577e-05, 2.6916000000001827e-05, 2.6916999999994362e-05, 2.6582999999996693e-05, 2.6999999999999247e-05, 2.6846999999996513e-05, 2.6944000000000967e-05, 2.6944000000000967e-05, 2.6999999999999247e-05, 2.7013999999998817e-05, 2.65970000000032e-05, 2.7070000000004035e-05, 2.6486000000006116e-05, 2.6972000000000107e-05, 2.643100000000037e-05, 2.662500000000234e-05, 2.6735999999999427e-05, 2.6360999999995582e-05, 2.6888999999995222e-05, 2.6556000000003965e-05, 2.7180000000001647e-05, 2.6500000000005686e-05, 2.6527999999997887e-05, 2.6790999999998233e-05, 2.648700000000559e-05, 2.708300000000413e-05, 2.6332999999996443e-05, 2.6930000000001397e-05, 2.6735999999999427e-05, 2.6290999999997733e-05, 2.661100000000277e-05, 2.7235999999999927e-05, 2.661100000000277e-05, 2.6999999999999247e-05, 2.6902999999994792e-05, 2.72369999999994e-05, 2.662500000000234e-05, 2.7138999999995472e-05, 2.719500000000069e-05, 2.662500000000234e-05, 2.6471999999999607e-05, 2.7249999999999497e-05, 2.666700000000105e-05, 2.644499999999994e-05, 2.6569999999996596e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.454" endtime="20201112 12:27:08.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.443" endtime="20201112 12:27:08.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.467" endtime="20201112 12:27:08.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.476" endtime="20201112 12:27:08.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.471" endtime="20201112 12:27:08.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.463" endtime="20201112 12:27:08.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.985" endtime="20201112 12:27:08.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.984" endtime="20201112 12:27:08.502"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.524" endtime="20201112 12:27:08.544"></status>
</kw>
<msg timestamp="20201112 12:27:08.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.521" endtime="20201112 12:27:08.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.547" endtime="20201112 12:27:08.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.554" endtime="20201112 12:27:08.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.514" endtime="20201112 12:27:08.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.508" endtime="20201112 12:27:08.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.577" endtime="20201112 12:27:08.916"></status>
</kw>
<msg timestamp="20201112 12:27:08.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042024125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042051972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.574" endtime="20201112 12:27:08.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042024125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042051972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.925" endtime="20201112 12:27:08.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.944" endtime="20201112 12:27:08.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.567" endtime="20201112 12:27:08.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.562" endtime="20201112 12:27:08.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.961" level="INFO">${RESULT} = [{'time': 0.042051972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7846999999997513e-05, 'source_diff': 2.7846999999997513e-05}, {'time': 0.042096958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.952" endtime="20201112 12:27:08.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.992" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.964" endtime="20201112 12:27:08.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.005" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.001" endtime="20201112 12:27:09.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.010" level="INFO">VALUE: [2.7846999999997513e-05, 2.769399999999478e-05, 2.7540999999998983e-05, 2.7610999999996833e-05, 2.7972000000001107e-05, 2.783300000000488e-05, 2.7749999999999997e-05, 2.8222000000001357e-05, 2.734700000000395e-05, 2.7514000000006256e-05, 2.786100000000402e-05, 2.790300000000273e-05, 2.766700000000205e-05, 2.7624999999996402e-05, 2.815300000000298e-05, 2.7583999999997166e-05, 2.7610999999996833e-05, 2.8166999999995612e-05, 2.8124999999996902e-05, 2.812500000000384e-05, 2.7430999999994432e-05, 2.762500000000334e-05, 2.8083999999997666e-05, 2.7430000000001897e-05, 2.794399999999503e-05, 2.7958000000001537e-05, 2.7526999999999413e-05, 2.7596999999997263e-05, 2.7819999999997846e-05, 2.7472000000000607e-05, 2.7958000000001537e-05, 2.7360999999996582e-05, 2.7416000000002327e-05, 2.7777999999999137e-05, 2.8110999999997333e-05, 2.813900000000341e-05, 2.7986000000000677e-05, 2.79170000000023e-05, 2.815199999999657e-05, 2.79170000000023e-05, 2.7444999999994002e-05, 2.7722000000000857e-05, 2.743100000000137e-05, 2.769500000000119e-05, 2.794500000000144e-05, 2.7610999999996833e-05, 2.7555999999998027e-05, 2.8013999999999817e-05, 2.7499999999999747e-05, 2.8263000000000593e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.007" endtime="20201112 12:27:09.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.994" endtime="20201112 12:27:09.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.024" endtime="20201112 12:27:09.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.033" endtime="20201112 12:27:09.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.028" endtime="20201112 12:27:09.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.019" endtime="20201112 12:27:09.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.504" endtime="20201112 12:27:09.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.503" endtime="20201112 12:27:09.059"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.083" endtime="20201112 12:27:09.102"></status>
</kw>
<msg timestamp="20201112 12:27:09.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.079" endtime="20201112 12:27:09.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.106" endtime="20201112 12:27:09.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.112" endtime="20201112 12:27:09.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.072" endtime="20201112 12:27:09.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.066" endtime="20201112 12:27:09.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.136" endtime="20201112 12:27:09.471"></status>
</kw>
<msg timestamp="20201112 12:27:09.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043958889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043988139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.132" endtime="20201112 12:27:09.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043958889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043988139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.480" endtime="20201112 12:27:09.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.499" endtime="20201112 12:27:09.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.125" endtime="20201112 12:27:09.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.120" endtime="20201112 12:27:09.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.517" level="INFO">${RESULT} = [{'time': 0.043988139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9250000000001497e-05, 'source_diff': 2.9250000000001497e-05}, {'time': 0.044037167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:09.508" endtime="20201112 12:27:09.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.547" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.519" endtime="20201112 12:27:09.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.558" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.556" endtime="20201112 12:27:09.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.564" level="INFO">VALUE: [2.9250000000001497e-05, 2.9098000000005175e-05, 2.9264000000001067e-05, 2.918100000000312e-05, 2.8708999999994822e-05, 2.869500000000219e-05, 2.9194999999995752e-05, 2.840300000000323e-05, 2.916700000000355e-05, 2.9180000000003647e-05, 2.8874999999997653e-05, 2.8514000000000317e-05, 2.9194000000003217e-05, 2.922199999999542e-05, 2.84579999999951e-05, 2.892999999999646e-05, 2.9124999999997903e-05, 2.858300000000563e-05, 2.844399999999553e-05, 2.894399999999603e-05, 2.8862000000004495e-05, 2.8680000000003147e-05, 2.836100000000452e-05, 2.918100000000312e-05, 2.9041999999999957e-05, 2.8319999999998346e-05, 2.9222000000002357e-05, 2.9124999999997903e-05, 2.894500000000244e-05, 2.8736000000001427e-05, 2.8694999999995252e-05, 2.844500000000194e-05, 2.8486000000001177e-05, 2.887500000000459e-05, 2.861100000000477e-05, 2.8596999999998263e-05, 2.8596999999998263e-05, 2.8541999999999457e-05, 2.869500000000219e-05, 2.8486000000001177e-05, 2.869500000000219e-05, 2.8304999999999303e-05, 2.9055999999999527e-05, 2.8305000000006242e-05, 2.837500000000409e-05, 2.9041999999999957e-05, 2.9028000000000387e-05, 2.8624999999997403e-05, 2.8874999999997653e-05, 2.9041999999999957e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.561" endtime="20201112 12:27:09.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.549" endtime="20201112 12:27:09.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.575" endtime="20201112 12:27:09.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.583" endtime="20201112 12:27:09.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.579" endtime="20201112 12:27:09.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.570" endtime="20201112 12:27:09.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.061" endtime="20201112 12:27:09.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.060" endtime="20201112 12:27:09.609"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.632" endtime="20201112 12:27:09.651"></status>
</kw>
<msg timestamp="20201112 12:27:09.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.628" endtime="20201112 12:27:09.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.654" endtime="20201112 12:27:09.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.660" endtime="20201112 12:27:09.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.621" endtime="20201112 12:27:09.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.616" endtime="20201112 12:27:09.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.684" endtime="20201112 12:27:10.021"></status>
</kw>
<msg timestamp="20201112 12:27:10.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042212236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042241958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.681" endtime="20201112 12:27:10.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042212236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042241958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.030" endtime="20201112 12:27:10.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.050" endtime="20201112 12:27:10.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.673" endtime="20201112 12:27:10.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.669" endtime="20201112 12:27:10.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.067" level="INFO">${RESULT} = [{'time': 0.042241958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9722000000002857e-05, 'source_diff': 2.9722000000002857e-05}, {'time': 0.042278986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:10.058" endtime="20201112 12:27:10.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.098" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.069" endtime="20201112 12:27:10.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.109" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.107" endtime="20201112 12:27:10.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.115" level="INFO">VALUE: [2.9722000000002857e-05, 2.9542000000000457e-05, 2.9541000000000983e-05, 3.022199999999642e-05, 2.9888999999998223e-05, 2.9999999999995308e-05, 3.0096999999999763e-05, 2.9749999999995058e-05, 2.9528000000000887e-05, 2.994399999999703e-05, 2.9764000000001567e-05, 2.9347999999998486e-05, 2.961100000000577e-05, 2.9500000000001747e-05, 2.9264000000001067e-05, 2.9528000000000887e-05, 2.9346999999999013e-05, 2.9292000000000207e-05, 2.970900000000276e-05, 2.967999999999721e-05, 2.9528000000000887e-05, 2.9527000000001413e-05, 2.9986000000002677e-05, 2.9513999999994378e-05, 2.9527000000001413e-05, 2.9332999999999443e-05, 2.967999999999721e-05, 2.9680999999996682e-05, 2.9832999999999943e-05, 2.9874999999998653e-05, 2.9666000000004578e-05, 2.9846999999999513e-05, 2.941599999999739e-05, 3.0194999999996752e-05, 3.0083000000000193e-05, 2.9778000000001137e-05, 2.9847000000006452e-05, 2.9792000000000707e-05, 3.0222000000003357e-05, 2.9472000000002607e-05, 2.9846999999999513e-05, 3.0305000000001303e-05, 2.9292000000000207e-05, 2.969399999999678e-05, 2.972300000000233e-05, 2.9596999999999263e-05, 2.963900000000491e-05, 2.9318999999999873e-05, 2.9805000000000803e-05, 2.9332999999999443e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.112" endtime="20201112 12:27:10.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.100" endtime="20201112 12:27:10.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.125" endtime="20201112 12:27:10.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.135" endtime="20201112 12:27:10.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.131" endtime="20201112 12:27:10.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.121" endtime="20201112 12:27:10.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.611" endtime="20201112 12:27:10.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.610" endtime="20201112 12:27:10.161"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.184" endtime="20201112 12:27:10.203"></status>
</kw>
<msg timestamp="20201112 12:27:10.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.180" endtime="20201112 12:27:10.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.206" endtime="20201112 12:27:10.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.213" endtime="20201112 12:27:10.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.173" endtime="20201112 12:27:10.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.167" endtime="20201112 12:27:10.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.236" endtime="20201112 12:27:10.570"></status>
</kw>
<msg timestamp="20201112 12:27:10.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042369569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042400056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.233" endtime="20201112 12:27:10.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042369569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042400056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.580" endtime="20201112 12:27:10.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.598" endtime="20201112 12:27:10.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.225" endtime="20201112 12:27:10.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.221" endtime="20201112 12:27:10.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.616" level="INFO">${RESULT} = [{'time': 0.042400056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0486999999995712e-05, 'source_diff': 3.0486999999995712e-05}, {'time': 0.042443028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:10.607" endtime="20201112 12:27:10.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.648" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.618" endtime="20201112 12:27:10.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.659" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.657" endtime="20201112 12:27:10.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.664" level="INFO">VALUE: [3.0486999999995712e-05, 3.118099999999818e-05, 3.019500000000369e-05, 3.077800000000214e-05, 3.087500000000659e-05, 3.047199999999667e-05, 3.041599999999839e-05, 3.056900000000112e-05, 3.073600000000343e-05, 3.068000000000515e-05, 3.105500000000205e-05, 3.069400000000472e-05, 3.101400000000282e-05, 3.080600000000128e-05, 3.097200000000411e-05, 3.067999999999821e-05, 3.0486000000003177e-05, 3.079200000000171e-05, 3.095800000000454e-05, 3.0360999999999583e-05, 3.056900000000112e-05, 3.093100000000487e-05, 3.0597999999999737e-05, 3.0333000000000443e-05, 3.076400000000257e-05, 3.086100000000008e-05, 3.087499999999965e-05, 3.101399999999588e-05, 3.090299999999879e-05, 3.111100000000033e-05, 3.0374999999999153e-05, 3.0500000000002747e-05, 3.0361999999999056e-05, 3.091699999999836e-05, 3.0360999999999583e-05, 3.117999999999871e-05, 3.073599999999649e-05, 3.08050000000018e-05, 3.06249999999994e-05, 3.0347000000000013e-05, 3.108400000000067e-05, 3.123699999999646e-05, 3.052799999999495e-05, 3.073600000000343e-05, 3.083300000000094e-05, 3.0402999999998293e-05, 3.07779999999952e-05, 3.099999999999631e-05, 3.087499999999965e-05, 3.113899999999947e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.661" endtime="20201112 12:27:10.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.650" endtime="20201112 12:27:10.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.674" endtime="20201112 12:27:10.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.683" endtime="20201112 12:27:10.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.678" endtime="20201112 12:27:10.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.669" endtime="20201112 12:27:10.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.163" endtime="20201112 12:27:10.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.162" endtime="20201112 12:27:10.710"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.733" endtime="20201112 12:27:10.753"></status>
</kw>
<msg timestamp="20201112 12:27:10.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.729" endtime="20201112 12:27:10.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.756" endtime="20201112 12:27:10.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.762" endtime="20201112 12:27:10.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.722" endtime="20201112 12:27:10.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.716" endtime="20201112 12:27:10.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.785" endtime="20201112 12:27:11.120"></status>
</kw>
<msg timestamp="20201112 12:27:11.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043351556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043383625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.782" endtime="20201112 12:27:11.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043351556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043383625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.130" endtime="20201112 12:27:11.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.149" endtime="20201112 12:27:11.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.775" endtime="20201112 12:27:11.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.770" endtime="20201112 12:27:11.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.167" level="INFO">${RESULT} = [{'time': 0.043383625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.206900000000262e-05, 'source_diff': 3.206900000000262e-05}, {'time': 0.043433653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.158" endtime="20201112 12:27:11.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.197" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.169" endtime="20201112 12:27:11.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.208" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.206" endtime="20201112 12:27:11.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.214" level="INFO">VALUE: [3.206900000000262e-05, 3.211100000000133e-05, 3.223599999999799e-05, 3.193099999999893e-05, 3.227800000000364e-05, 3.192999999999946e-05, 3.177800000000314e-05, 3.209700000000176e-05, 3.165299999999954e-05, 3.161100000000083e-05, 3.2262999999997655e-05, 3.163899999999997e-05, 3.1262999999996655e-05, 3.220799999999885e-05, 3.154100000000298e-05, 3.21250000000009e-05, 3.211100000000133e-05, 3.2096999999994824e-05, 3.163899999999997e-05, 3.170900000000476e-05, 3.170799999999835e-05, 3.222199999999842e-05, 3.166699999999911e-05, 3.186100000000108e-05, 3.188900000000022e-05, 3.19579999999986e-05, 3.213900000000047e-05, 3.173599999999749e-05, 3.169499999999825e-05, 3.127800000000264e-05, 3.226400000000407e-05, 3.209800000000124e-05, 3.149999999999681e-05, 3.222299999999789e-05, 3.223600000000493e-05, 3.22370000000044e-05, 3.137500000000015e-05, 3.222200000000536e-05, 3.1750000000004e-05, 3.170799999999835e-05, 3.170799999999835e-05, 3.169399999999878e-05, 3.204100000000348e-05, 3.159700000000126e-05, 3.224999999999756e-05, 3.198599999999774e-05, 3.166699999999911e-05, 3.202799999999645e-05, 3.144399999999853e-05, 3.219399999999928e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.211" endtime="20201112 12:27:11.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.199" endtime="20201112 12:27:11.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.224" endtime="20201112 12:27:11.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.232" endtime="20201112 12:27:11.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.227" endtime="20201112 12:27:11.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.219" endtime="20201112 12:27:11.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.712" endtime="20201112 12:27:11.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.711" endtime="20201112 12:27:11.258"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.282" endtime="20201112 12:27:11.302"></status>
</kw>
<msg timestamp="20201112 12:27:11.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.279" endtime="20201112 12:27:11.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.305" endtime="20201112 12:27:11.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.311" endtime="20201112 12:27:11.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.272" endtime="20201112 12:27:11.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.264" endtime="20201112 12:27:11.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.335" endtime="20201112 12:27:11.644"></status>
</kw>
<msg timestamp="20201112 12:27:11.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043738861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04377175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:11.331" endtime="20201112 12:27:11.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043738861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04377175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:11.649" endtime="20201112 12:27:11.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.657" endtime="20201112 12:27:11.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.324" endtime="20201112 12:27:11.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.320" endtime="20201112 12:27:11.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.665" level="INFO">${RESULT} = [{'time': 0.04377175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.288900000000122e-05, 'source_diff': 3.288900000000122e-05}, {'time': 0.04381175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:11.661" endtime="20201112 12:27:11.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.679" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.666" endtime="20201112 12:27:11.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.684" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.683" endtime="20201112 12:27:11.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.687" level="INFO">VALUE: [3.288900000000122e-05, 3.234700000000201e-05, 3.282000000000285e-05, 3.266700000000011e-05, 3.2554999999996614e-05, 3.243099999999943e-05, 3.249999999999781e-05, 3.3124999999994964e-05, 3.22779999999967e-05, 3.274999999999806e-05, 3.315300000000104e-05, 3.323599999999899e-05, 3.227800000000364e-05, 3.290300000000079e-05, 3.259700000000226e-05, 3.2527000000004413e-05, 3.31250000000019e-05, 3.269399999999978e-05, 3.2277000000004163e-05, 3.234700000000201e-05, 3.248599999999824e-05, 3.293000000000046e-05, 3.274999999999806e-05, 3.258300000000269e-05, 3.238900000000072e-05, 3.22779999999967e-05, 3.230600000000278e-05, 3.272200000000586e-05, 3.2346999999995074e-05, 3.309700000000276e-05, 3.251400000000432e-05, 3.29449999999995e-05, 3.245899999999857e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.323599999999899e-05, 3.276399999999763e-05, 3.287500000000165e-05, 3.28050000000038e-05, 3.302799999999745e-05, 3.2610999999994894e-05, 3.247199999999867e-05, 3.234700000000201e-05, 3.299999999999831e-05, 3.287500000000165e-05, 3.270799999999935e-05, 3.323599999999899e-05, 3.316700000000061e-05, 3.29449999999995e-05, 3.323600000000593e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.685" endtime="20201112 12:27:11.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.680" endtime="20201112 12:27:11.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.691" endtime="20201112 12:27:11.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.696" endtime="20201112 12:27:11.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.693" endtime="20201112 12:27:11.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.689" endtime="20201112 12:27:11.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.260" endtime="20201112 12:27:11.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.259" endtime="20201112 12:27:11.721"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.744" endtime="20201112 12:27:11.763"></status>
</kw>
<msg timestamp="20201112 12:27:11.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.740" endtime="20201112 12:27:11.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.766" endtime="20201112 12:27:11.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.773" endtime="20201112 12:27:11.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.733" endtime="20201112 12:27:11.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.727" endtime="20201112 12:27:11.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.798" endtime="20201112 12:27:12.134"></status>
</kw>
<msg timestamp="20201112 12:27:12.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042046792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042080319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.795" endtime="20201112 12:27:12.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042046792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042080319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.143" endtime="20201112 12:27:12.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.162" endtime="20201112 12:27:12.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.787" endtime="20201112 12:27:12.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.783" endtime="20201112 12:27:12.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.181" level="INFO">${RESULT} = [{'time': 0.042080319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3526999999998475e-05, 'source_diff': 3.3526999999998475e-05}, {'time': 0.042122347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:12.171" endtime="20201112 12:27:12.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.211" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.183" endtime="20201112 12:27:12.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.222" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.220" endtime="20201112 12:27:12.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.228" level="INFO">VALUE: [3.3526999999998475e-05, 3.374999999999906e-05, 3.3832999999997004e-05, 3.4124999999995964e-05, 3.3832999999997004e-05, 3.39580000000006e-05, 3.369399999999384e-05, 3.4096999999996824e-05, 3.348599999999924e-05, 3.326399999999813e-05, 3.423599999999999e-05, 3.39580000000006e-05, 3.4110999999996394e-05, 3.333300000000344e-05, 3.409700000000376e-05, 3.361100000000283e-05, 3.349999999999881e-05, 3.336100000000258e-05, 3.4262999999999655e-05, 3.3445e-05, 3.3346999999996074e-05, 3.409700000000376e-05, 3.3790999999998295e-05, 3.4096999999996824e-05, 3.36250000000024e-05, 3.3554999999997615e-05, 3.3902999999994854e-05, 3.351400000000532e-05, 3.4040999999998545e-05, 3.336100000000258e-05, 3.365300000000154e-05, 3.402799999999845e-05, 3.3346999999996074e-05, 3.366700000000111e-05, 3.393100000000093e-05, 3.4138000000003e-05, 3.42779999999987e-05, 3.326400000000507e-05, 3.343100000000043e-05, 3.374999999999906e-05, 3.411100000000333e-05, 3.383400000000342e-05, 3.336100000000258e-05, 3.395900000000007e-05, 3.397299999999964e-05, 3.359800000000274e-05, 3.363900000000197e-05, 3.4082999999997254e-05, 3.3374999999995214e-05, 3.4082999999997254e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.225" endtime="20201112 12:27:12.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.213" endtime="20201112 12:27:12.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.237" endtime="20201112 12:27:12.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.246" endtime="20201112 12:27:12.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.241" endtime="20201112 12:27:12.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.233" endtime="20201112 12:27:12.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.723" endtime="20201112 12:27:12.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.722" endtime="20201112 12:27:12.272"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.295" endtime="20201112 12:27:12.314"></status>
</kw>
<msg timestamp="20201112 12:27:12.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.291" endtime="20201112 12:27:12.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.317" endtime="20201112 12:27:12.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.323" endtime="20201112 12:27:12.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.284" endtime="20201112 12:27:12.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.278" endtime="20201112 12:27:12.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.349" endtime="20201112 12:27:12.685"></status>
</kw>
<msg timestamp="20201112 12:27:12.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042351028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042385986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.345" endtime="20201112 12:27:12.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042351028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042385986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.694" endtime="20201112 12:27:12.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.713" endtime="20201112 12:27:12.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.336" endtime="20201112 12:27:12.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.331" endtime="20201112 12:27:12.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.731" level="INFO">${RESULT} = [{'time': 0.042385986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49580000000016e-05, 'source_diff': 3.49580000000016e-05}, {'time': 0.042432056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:12.722" endtime="20201112 12:27:12.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.763" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.733" endtime="20201112 12:27:12.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.774" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.772" endtime="20201112 12:27:12.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.779" level="INFO">VALUE: [3.49580000000016e-05, 3.508400000000467e-05, 3.479200000000571e-05, 3.47779999999992e-05, 3.5152999999996104e-05, 3.49450000000015e-05, 3.486100000000408e-05, 3.509800000000424e-05, 3.500000000000031e-05, 3.495900000000107e-05, 3.468000000000221e-05, 3.500000000000031e-05, 3.4374999999996214e-05, 3.468000000000221e-05, 3.423599999999999e-05, 3.484700000000451e-05, 3.5082999999998254e-05, 3.468000000000221e-05, 3.4360999999996644e-05, 3.511100000000433e-05, 3.447200000000067e-05, 3.494400000000203e-05, 3.511100000000433e-05, 3.449999999999981e-05, 3.490300000000279e-05, 3.437500000000315e-05, 3.504199999999902e-05, 3.5096999999997824e-05, 3.4374999999996214e-05, 3.430599999999784e-05, 3.522200000000142e-05, 3.475000000000006e-05, 3.502799999999945e-05, 3.523600000000099e-05, 3.5026999999999975e-05, 3.5110999999997394e-05, 3.4902999999995854e-05, 3.486199999999662e-05, 3.473600000000049e-05, 3.4262999999999655e-05, 3.4776999999999725e-05, 3.444400000000153e-05, 3.480599999999834e-05, 3.473599999999355e-05, 3.4346999999997074e-05, 3.434700000000401e-05, 3.477800000000614e-05, 3.473600000000049e-05, 3.451399999999938e-05, 3.4860999999997144e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.776" endtime="20201112 12:27:12.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.765" endtime="20201112 12:27:12.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.789" endtime="20201112 12:27:12.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.797" endtime="20201112 12:27:12.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.793" endtime="20201112 12:27:12.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.785" endtime="20201112 12:27:12.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.274" endtime="20201112 12:27:12.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.273" endtime="20201112 12:27:12.823"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.846" endtime="20201112 12:27:12.865"></status>
</kw>
<msg timestamp="20201112 12:27:12.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.843" endtime="20201112 12:27:12.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.869" endtime="20201112 12:27:12.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.875" endtime="20201112 12:27:12.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.836" endtime="20201112 12:27:12.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.830" endtime="20201112 12:27:12.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.898" endtime="20201112 12:27:13.238"></status>
</kw>
<msg timestamp="20201112 12:27:13.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041985542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042021708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.895" endtime="20201112 12:27:13.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041985542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042021708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.248" endtime="20201112 12:27:13.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.267" endtime="20201112 12:27:13.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.888" endtime="20201112 12:27:13.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.883" endtime="20201112 12:27:13.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.285" level="INFO">${RESULT} = [{'time': 0.042021708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.61659999999972e-05, 'source_diff': 3.61659999999972e-05}, {'time': 0.042066708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:13.276" endtime="20201112 12:27:13.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.315" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.287" endtime="20201112 12:27:13.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.326" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.324" endtime="20201112 12:27:13.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.332" level="INFO">VALUE: [3.61659999999972e-05, 3.6110999999998394e-05, 3.5583000000005693e-05, 3.552799999999995e-05, 3.570800000000235e-05, 3.552799999999995e-05, 3.580599999999934e-05, 3.6096999999998824e-05, 3.551400000000038e-05, 3.6096999999998824e-05, 3.532000000000535e-05, 3.549999999999387e-05, 3.598600000000174e-05, 3.6138999999997534e-05, 3.5722999999994454e-05, 3.543100000000243e-05, 3.566700000000311e-05, 3.569399999999584e-05, 3.573600000000149e-05, 3.572300000000139e-05, 3.601400000000088e-05, 3.570799999999541e-05, 3.59859999999948e-05, 3.572199999999498e-05, 3.543000000000296e-05, 3.5346999999998074e-05, 3.626400000000113e-05, 3.5930999999995994e-05, 3.6082999999999255e-05, 3.579199999999977e-05, 3.622199999999548e-05, 3.5346999999998074e-05, 3.5346999999998074e-05, 3.6083000000006193e-05, 3.6208999999995384e-05, 3.5916999999996424e-05, 3.6096999999998824e-05, 3.551400000000038e-05, 3.570900000000182e-05, 3.5374999999997214e-05, 3.584799999999805e-05, 3.5874999999997714e-05, 3.586199999999762e-05, 3.5304999999999365e-05, 3.598700000000121e-05, 3.550000000000081e-05, 3.567999999999627e-05, 3.591600000000389e-05, 3.593000000000346e-05, 3.626399999999419e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.328" endtime="20201112 12:27:13.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.317" endtime="20201112 12:27:13.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.341" endtime="20201112 12:27:13.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.350" endtime="20201112 12:27:13.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.345" endtime="20201112 12:27:13.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.337" endtime="20201112 12:27:13.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.825" endtime="20201112 12:27:13.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.824" endtime="20201112 12:27:13.377"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.400" endtime="20201112 12:27:13.420"></status>
</kw>
<msg timestamp="20201112 12:27:13.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.397" endtime="20201112 12:27:13.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.424" endtime="20201112 12:27:13.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.432" endtime="20201112 12:27:13.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.389" endtime="20201112 12:27:13.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.383" endtime="20201112 12:27:13.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.458" endtime="20201112 12:27:13.797"></status>
</kw>
<msg timestamp="20201112 12:27:13.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043777986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043814528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.455" endtime="20201112 12:27:13.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043777986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043814528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.807" endtime="20201112 12:27:13.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.826" endtime="20201112 12:27:13.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.447" endtime="20201112 12:27:13.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.441" endtime="20201112 12:27:13.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.843" level="INFO">${RESULT} = [{'time': 0.043814528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.654200000000052e-05, 'source_diff': 3.654200000000052e-05}, {'time': 0.043863542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.834" endtime="20201112 12:27:13.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.874" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.846" endtime="20201112 12:27:13.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.885" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.883" endtime="20201112 12:27:13.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.890" level="INFO">VALUE: [3.654200000000052e-05, 3.7180999999997244e-05, 3.691599999999795e-05, 3.651400000000138e-05, 3.692999999999752e-05, 3.6541000000001045e-05, 3.691599999999795e-05, 3.7041000000001545e-05, 3.6638999999998034e-05, 3.7110999999999394e-05, 3.6291000000000795e-05, 3.698600000000274e-05, 3.7124999999998964e-05, 3.725000000000256e-05, 3.633399999999898e-05, 3.668100000000368e-05, 3.652799999999401e-05, 3.668100000000368e-05, 3.680600000000034e-05, 3.634800000000549e-05, 3.629200000000027e-05, 3.711199999999887e-05, 3.6902999999997854e-05, 3.7166999999997674e-05, 3.711100000000633e-05, 3.687500000000565e-05, 3.6540999999994106e-05, 3.698700000000221e-05, 3.688799999999881e-05, 3.6833000000000005e-05, 3.722200000000342e-05, 3.6291000000000795e-05, 3.6833000000000005e-05, 3.7138999999998534e-05, 3.713900000000547e-05, 3.724999999999562e-05, 3.648600000000224e-05, 3.707000000000016e-05, 3.719500000000375e-05, 3.6582999999999755e-05, 3.681999999999991e-05, 3.647200000000267e-05, 3.6930999999996994e-05, 3.717999999999777e-05, 3.6902999999997854e-05, 3.643100000000343e-05, 3.711200000000581e-05, 3.6360999999998644e-05, 3.648600000000224e-05, 3.6777000000001725e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.887" endtime="20201112 12:27:13.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.876" endtime="20201112 12:27:13.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.900" endtime="20201112 12:27:13.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.908" endtime="20201112 12:27:13.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.904" endtime="20201112 12:27:13.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.895" endtime="20201112 12:27:13.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.379" endtime="20201112 12:27:13.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.378" endtime="20201112 12:27:13.934"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.958" endtime="20201112 12:27:13.977"></status>
</kw>
<msg timestamp="20201112 12:27:13.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.954" endtime="20201112 12:27:13.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.981" endtime="20201112 12:27:13.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.987" endtime="20201112 12:27:13.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.947" endtime="20201112 12:27:13.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.941" endtime="20201112 12:27:13.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.011" endtime="20201112 12:27:14.347"></status>
</kw>
<msg timestamp="20201112 12:27:14.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042810722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042848681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.007" endtime="20201112 12:27:14.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042810722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042848681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.357" endtime="20201112 12:27:14.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.375" endtime="20201112 12:27:14.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.000" endtime="20201112 12:27:14.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.995" endtime="20201112 12:27:14.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.395" level="INFO">${RESULT} = [{'time': 0.042848681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7958999999997134e-05, 'source_diff': 3.7958999999997134e-05}, {'time': 0.042903694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.385" endtime="20201112 12:27:14.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.425" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.397" endtime="20201112 12:27:14.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.436" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.434" endtime="20201112 12:27:14.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.442" level="INFO">VALUE: [3.7958999999997134e-05, 3.819399999999834e-05, 3.8026999999996036e-05, 3.7360999999999644e-05, 3.7319000000000935e-05, 3.7818999999994496e-05, 3.824999999999662e-05, 3.792999999999852e-05, 3.7610999999999895e-05, 3.805600000000159e-05, 3.7347000000000075e-05, 3.824999999999662e-05, 3.76659999999987e-05, 3.7944999999997564e-05, 3.747300000000314e-05, 3.8097000000000825e-05, 3.765300000000554e-05, 3.8097000000000825e-05, 3.758400000000023e-05, 3.7472999999996204e-05, 3.754200000000152e-05, 3.817999999999877e-05, 3.727799999999476e-05, 3.7583000000000755e-05, 3.825000000000356e-05, 3.825000000000356e-05, 3.7569000000001185e-05, 3.8083000000001255e-05, 3.7569000000001185e-05, 3.7819000000001435e-05, 3.7790999999995356e-05, 3.776399999999569e-05, 3.7624999999999464e-05, 3.7374999999999214e-05, 3.7569000000001185e-05, 3.801399999999594e-05, 3.7874999999999714e-05, 3.820799999999791e-05, 3.797200000000417e-05, 3.7624999999999464e-05, 3.80980000000003e-05, 3.7374999999999214e-05, 3.7666999999998174e-05, 3.7722999999996454e-05, 3.7597000000000325e-05, 3.727799999999476e-05, 3.794399999999809e-05, 3.8069000000001685e-05, 3.8111000000000395e-05, 3.773599999999655e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.438" endtime="20201112 12:27:14.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.427" endtime="20201112 12:27:14.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.456" endtime="20201112 12:27:14.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.465" endtime="20201112 12:27:14.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.460" endtime="20201112 12:27:14.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.452" endtime="20201112 12:27:14.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.936" endtime="20201112 12:27:14.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.935" endtime="20201112 12:27:14.490"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.513" endtime="20201112 12:27:14.533"></status>
</kw>
<msg timestamp="20201112 12:27:14.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.510" endtime="20201112 12:27:14.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.537" endtime="20201112 12:27:14.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.543" endtime="20201112 12:27:14.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.503" endtime="20201112 12:27:14.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.497" endtime="20201112 12:27:14.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.566" endtime="20201112 12:27:14.911"></status>
</kw>
<msg timestamp="20201112 12:27:14.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042255403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04229425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:14.563" endtime="20201112 12:27:14.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042255403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04229425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:14.921" endtime="20201112 12:27:14.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.939" endtime="20201112 12:27:14.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.556" endtime="20201112 12:27:14.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.551" endtime="20201112 12:27:14.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.952" level="INFO">${RESULT} = [{'time': 0.04229425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8847000000001575e-05, 'source_diff': 3.8847000000001575e-05}, {'time': 0.042342236, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:14.948" endtime="20201112 12:27:14.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.953" endtime="20201112 12:27:14.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.973" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.971" endtime="20201112 12:27:14.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.975" level="INFO">VALUE: [3.8847000000001575e-05, 3.8625000000000465e-05, 3.8319000000001935e-05, 3.8846999999994636e-05, 3.847200000000467e-05, 3.829200000000227e-05, 3.926399999999719e-05, 3.8527000000003475e-05, 3.8625000000000465e-05, 3.908399999999479e-05, 3.857000000000166e-05, 3.8361000000000645e-05, 3.8291000000002795e-05, 3.8875000000000715e-05, 3.9111000000001395e-05, 3.9069000000002685e-05, 3.901399999999694e-05, 3.851399999999644e-05, 3.919399999999934e-05, 3.8611000000000895e-05, 3.8833000000002005e-05, 3.8375000000000214e-05, 3.866700000000611e-05, 3.9194999999998814e-05, 3.843100000000543e-05, 3.869399999999884e-05, 3.8958999999998134e-05, 3.901400000000388e-05, 3.911200000000087e-05, 3.907000000000216e-05, 3.872199999999798e-05, 3.9139000000000534e-05, 3.9041000000003545e-05, 3.8861000000001145e-05, 3.8875000000000715e-05, 3.8541000000003045e-05, 3.8554999999995676e-05, 3.869399999999884e-05, 3.9055000000003115e-05, 3.8625000000000465e-05, 3.924999999999762e-05, 3.8680999999998744e-05, 3.8291000000002795e-05, 3.844399999999859e-05, 3.8611000000000895e-05, 3.8361000000000645e-05, 3.929199999999633e-05, 3.9166999999999674e-05, 3.869399999999884e-05, 3.8444999999998064e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.974" endtime="20201112 12:27:14.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.968" endtime="20201112 12:27:14.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.980" endtime="20201112 12:27:14.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.984" endtime="20201112 12:27:15.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.982" endtime="20201112 12:27:15.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.977" endtime="20201112 12:27:15.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.492" endtime="20201112 12:27:15.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.491" endtime="20201112 12:27:15.005"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.016" endtime="20201112 12:27:15.033"></status>
</kw>
<msg timestamp="20201112 12:27:15.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.014" endtime="20201112 12:27:15.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.034" endtime="20201112 12:27:15.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.037" endtime="20201112 12:27:15.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.011" endtime="20201112 12:27:15.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.008" endtime="20201112 12:27:15.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.048" endtime="20201112 12:27:15.396"></status>
</kw>
<msg timestamp="20201112 12:27:15.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024894681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024933958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.047" endtime="20201112 12:27:15.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024894681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024933958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.406" endtime="20201112 12:27:15.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.425" endtime="20201112 12:27:15.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.043" endtime="20201112 12:27:15.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.041" endtime="20201112 12:27:15.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.443" level="INFO">${RESULT} = [{'time': 0.024933958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9277000000000756e-05, 'source_diff': 3.9277000000000756e-05}, {'time': 0.024980986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:15.433" endtime="20201112 12:27:15.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.474" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.445" endtime="20201112 12:27:15.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.485" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.483" endtime="20201112 12:27:15.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.490" level="INFO">VALUE: [3.9277000000000756e-05, 3.9596999999998855e-05, 3.9582999999999285e-05, 3.950000000000134e-05, 4.0111000000002395e-05, 3.948600000000177e-05, 3.974999999999812e-05, 4.0097000000002825e-05, 3.950000000000134e-05, 3.94859999999983e-05, 3.9639000000001035e-05, 3.97920000000003e-05, 3.9389000000000784e-05, 3.934800000000155e-05, 4.008399999999926e-05, 3.9361000000001645e-05, 3.9625000000001465e-05, 3.9667000000000174e-05, 3.951399999999744e-05, 3.9874999999998245e-05, 3.973600000000202e-05, 3.973599999999855e-05, 3.999999999999837e-05, 4.020799999999991e-05, 3.970800000000288e-05, 4.0082999999999785e-05, 4.002799999999751e-05, 3.9333000000002505e-05, 3.9860999999998675e-05, 3.9596999999998855e-05, 3.9332999999999035e-05, 3.9694999999999314e-05, 3.9332999999999035e-05, 3.9889000000001285e-05, 3.9458999999998634e-05, 3.9847000000002575e-05, 4.0167000000000674e-05, 3.975000000000159e-05, 3.9347000000002075e-05, 3.9846999999999105e-05, 4.011200000000187e-05, 3.9875000000001715e-05, 3.970799999999941e-05, 4.019400000000034e-05, 3.991600000000095e-05, 3.993000000000052e-05, 3.945800000000263e-05, 3.945799999999916e-05, 3.995799999999966e-05, 3.9625000000001465e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.487" endtime="20201112 12:27:15.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.476" endtime="20201112 12:27:15.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.500" endtime="20201112 12:27:15.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.508" endtime="20201112 12:27:15.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.504" endtime="20201112 12:27:15.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.495" endtime="20201112 12:27:15.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.006" endtime="20201112 12:27:15.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.005" endtime="20201112 12:27:15.535"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.557" endtime="20201112 12:27:15.577"></status>
</kw>
<msg timestamp="20201112 12:27:15.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.554" endtime="20201112 12:27:15.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.581" endtime="20201112 12:27:15.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.587" endtime="20201112 12:27:15.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.547" endtime="20201112 12:27:15.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.541" endtime="20201112 12:27:15.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.611" endtime="20201112 12:27:15.959"></status>
</kw>
<msg timestamp="20201112 12:27:15.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042553514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042594014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.607" endtime="20201112 12:27:15.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042553514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042594014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.968" endtime="20201112 12:27:15.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.987" endtime="20201112 12:27:15.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.600" endtime="20201112 12:27:15.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.595" endtime="20201112 12:27:15.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.004" level="INFO">${RESULT} = [{'time': 0.042594014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.049999999999887e-05, 'source_diff': 4.049999999999887e-05}, {'time': 0.042652028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.995" endtime="20201112 12:27:16.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.006" endtime="20201112 12:27:16.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.047" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.045" endtime="20201112 12:27:16.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.053" level="INFO">VALUE: [4.049999999999887e-05, 4.0917000000001424e-05, 4.056999999999672e-05, 4.083399999999654e-05, 4.0653000000001605e-05, 4.102800000000545e-05, 4.1195000000000814e-05, 4.123600000000005e-05, 4.1041000000005545e-05, 4.070800000000041e-05, 4.1111000000003395e-05, 4.0833000000004005e-05, 4.069400000000084e-05, 4.0611000000002895e-05, 4.0333000000003505e-05, 4.0332999999996566e-05, 4.0916999999994486e-05, 4.027799999999776e-05, 4.083400000000348e-05, 4.054199999999758e-05, 4.059799999999586e-05, 4.0624999999995526e-05, 4.1124999999996026e-05, 4.0653000000001605e-05, 4.094400000000109e-05, 4.0458999999999634e-05, 4.07780000000052e-05, 4.094400000000109e-05, 4.1209000000000384e-05, 4.066599999999476e-05, 4.094400000000109e-05, 4.1125000000002965e-05, 4.0625000000002465e-05, 4.0305000000004365e-05, 4.0611000000002895e-05, 4.1082999999997316e-05, 4.07780000000052e-05, 4.1096999999996886e-05, 4.073599999999955e-05, 4.08059999999974e-05, 4.0903000000001855e-05, 4.054200000000452e-05, 4.0361000000002645e-05, 4.050000000000581e-05, 4.1181000000001244e-05, 4.052799999999801e-05, 4.054199999999758e-05, 4.04859999999993e-05, 4.0861000000003145e-05, 4.099999999999937e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.049" endtime="20201112 12:27:16.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.038" endtime="20201112 12:27:16.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.062" endtime="20201112 12:27:16.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.071" endtime="20201112 12:27:16.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.066" endtime="20201112 12:27:16.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.058" endtime="20201112 12:27:16.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.537" endtime="20201112 12:27:16.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.535" endtime="20201112 12:27:16.097"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.119" endtime="20201112 12:27:16.140"></status>
</kw>
<msg timestamp="20201112 12:27:16.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.116" endtime="20201112 12:27:16.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.143" endtime="20201112 12:27:16.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.149" endtime="20201112 12:27:16.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.109" endtime="20201112 12:27:16.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.103" endtime="20201112 12:27:16.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.173" endtime="20201112 12:27:16.520"></status>
</kw>
<msg timestamp="20201112 12:27:16.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042292653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042334, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:16.169" endtime="20201112 12:27:16.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042292653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042334, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:16.530" endtime="20201112 12:27:16.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.549" endtime="20201112 12:27:16.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.162" endtime="20201112 12:27:16.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.158" endtime="20201112 12:27:16.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.566" level="INFO">${RESULT} = [{'time': 0.042334, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1346999999997136e-05, 'source_diff': 4.1346999999997136e-05}, {'time': 0.042388, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201112 12:27:16.557" endtime="20201112 12:27:16.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.598" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.568" endtime="20201112 12:27:16.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.609" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.607" endtime="20201112 12:27:16.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.614" level="INFO">VALUE: [4.1346999999997136e-05, 4.130600000000484e-05, 4.1681000000001744e-05, 4.152799999999901e-05, 4.1360999999996706e-05, 4.170799999999447e-05, 4.1945000000001564e-05, 4.1709000000000884e-05, 4.194400000000209e-05, 4.134800000000355e-05, 4.158399999999729e-05, 4.1818999999998496e-05, 4.1791000000006295e-05, 4.1874999999996776e-05, 4.151399999999944e-05, 4.219400000000234e-05, 4.219400000000234e-05, 4.1582999999997816e-05, 4.1597000000004325e-05, 4.143000000000202e-05, 4.151400000000638e-05, 4.222199999999454e-05, 4.1389000000002785e-05, 4.175000000000012e-05, 4.14860000000003e-05, 4.1347000000004075e-05, 4.204199999999908e-05, 4.184799999999711e-05, 4.175000000000012e-05, 4.1709000000000884e-05, 4.198599999999386e-05, 4.1624999999996526e-05, 4.225000000000062e-05, 4.195799999999472e-05, 4.1262999999999717e-05, 4.143000000000202e-05, 4.175000000000012e-05, 4.190199999999644e-05, 4.220800000000191e-05, 4.2181000000002244e-05, 4.1596999999997386e-05, 4.2167000000002675e-05, 4.205600000000559e-05, 4.172200000000098e-05, 4.127799999999876e-05, 4.1361000000003645e-05, 4.2124999999997026e-05, 4.2082999999998316e-05, 4.200000000000037e-05, 4.1930999999995056e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.611" endtime="20201112 12:27:16.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.600" endtime="20201112 12:27:16.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.624" endtime="20201112 12:27:16.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.632" endtime="20201112 12:27:16.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.628" endtime="20201112 12:27:16.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.619" endtime="20201112 12:27:16.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.099" endtime="20201112 12:27:16.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.097" endtime="20201112 12:27:16.658"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.681" endtime="20201112 12:27:16.701"></status>
</kw>
<msg timestamp="20201112 12:27:16.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.678" endtime="20201112 12:27:16.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.704" endtime="20201112 12:27:16.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.711" endtime="20201112 12:27:16.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.670" endtime="20201112 12:27:16.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.665" endtime="20201112 12:27:16.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.734" endtime="20201112 12:27:17.069"></status>
</kw>
<msg timestamp="20201112 12:27:17.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042311708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042354639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.731" endtime="20201112 12:27:17.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042311708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042354639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.079" endtime="20201112 12:27:17.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.097" endtime="20201112 12:27:17.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.724" endtime="20201112 12:27:17.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.719" endtime="20201112 12:27:17.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.115" level="INFO">${RESULT} = [{'time': 0.042354639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2930999999996056e-05, 'source_diff': 4.2930999999996056e-05}, {'time': 0.042406639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:17.106" endtime="20201112 12:27:17.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.117" endtime="20201112 12:27:17.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.159" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.156" endtime="20201112 12:27:17.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.164" level="INFO">VALUE: [4.2930999999996056e-05, 4.2695000000002314e-05, 4.227799999999976e-05, 4.252800000000001e-05, 4.277800000000026e-05, 4.2389000000003785e-05, 4.244399999999565e-05, 4.251400000000044e-05, 4.3096999999998886e-05, 4.2388999999996846e-05, 4.2611000000004895e-05, 4.2554999999999676e-05, 4.29860000000018e-05, 4.2541000000000107e-05, 4.268000000000327e-05, 4.2332999999998566e-05, 4.250000000000087e-05, 4.2695000000002314e-05, 4.229199999999933e-05, 4.254199999999958e-05, 4.273599999999461e-05, 4.24860000000013e-05, 4.280600000000634e-05, 4.2375000000004215e-05, 4.229199999999933e-05, 4.2389000000003785e-05, 4.283399999999854e-05, 4.326300000000172e-05, 4.3096999999998886e-05, 4.291599999999701e-05, 4.268000000000327e-05, 4.2791000000000357e-05, 4.323599999999511e-05, 4.2625000000004465e-05, 4.3124999999998026e-05, 4.2888999999997346e-05, 4.254199999999958e-05, 4.2374999999997276e-05, 4.279199999999983e-05, 4.3181000000003245e-05, 4.307000000000616e-05, 4.2860999999998206e-05, 4.326400000000119e-05, 4.3153000000004105e-05, 4.2582999999998816e-05, 4.2473000000001204e-05, 4.2611000000004895e-05, 4.275000000000112e-05, 4.2695000000002314e-05, 4.265200000000413e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.161" endtime="20201112 12:27:17.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.150" endtime="20201112 12:27:17.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.174" endtime="20201112 12:27:17.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.182" endtime="20201112 12:27:17.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.178" endtime="20201112 12:27:17.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.169" endtime="20201112 12:27:17.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.660" endtime="20201112 12:27:17.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.659" endtime="20201112 12:27:17.208"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.231" endtime="20201112 12:27:17.251"></status>
</kw>
<msg timestamp="20201112 12:27:17.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.228" endtime="20201112 12:27:17.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.254" endtime="20201112 12:27:17.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.261" endtime="20201112 12:27:17.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.220" endtime="20201112 12:27:17.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.215" endtime="20201112 12:27:17.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.284" endtime="20201112 12:27:17.619"></status>
</kw>
<msg timestamp="20201112 12:27:17.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042105611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042148903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.281" endtime="20201112 12:27:17.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042105611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042148903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.629" endtime="20201112 12:27:17.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.648" endtime="20201112 12:27:17.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.274" endtime="20201112 12:27:17.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.269" endtime="20201112 12:27:17.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.665" level="INFO">${RESULT} = [{'time': 0.042148903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.329200000000033e-05, 'source_diff': 4.329200000000033e-05}, {'time': 0.042204972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:17.656" endtime="20201112 12:27:17.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.667" endtime="20201112 12:27:17.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.708" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.705" endtime="20201112 12:27:17.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.714" level="INFO">VALUE: [4.329200000000033e-05, 4.3555000000000677e-05, 4.3624999999998526e-05, 4.349999999999493e-05, 4.3861000000006145e-05, 4.3444999999996126e-05, 4.343000000000402e-05, 4.394399999999715e-05, 4.397200000000323e-05, 4.3638999999998096e-05, 4.3889000000005285e-05, 4.375000000000212e-05, 4.401400000000194e-05, 4.3417000000003925e-05, 4.354200000000058e-05, 4.4110999999999456e-05, 4.3625000000005465e-05, 4.3667000000004175e-05, 4.4111000000006395e-05, 4.3959000000003134e-05, 4.3944999999996626e-05, 4.419400000000434e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3958999999996196e-05, 4.376399999999475e-05, 4.400000000000237e-05, 4.4138999999998596e-05, 4.3624999999998526e-05, 4.3332999999999566e-05, 4.3819000000000496e-05, 4.3902999999997916e-05, 4.34860000000023e-05, 4.373599999999561e-05, 4.345799999999622e-05, 4.395800000000366e-05, 4.377800000000126e-05, 4.384799999999911e-05, 4.422199999999654e-05, 4.327799999999382e-05, 4.423600000000305e-05, 4.334799999999861e-05, 4.3624999999998526e-05, 4.36939999999969e-05, 4.370800000000341e-05, 4.3582999999999816e-05, 4.400000000000237e-05, 4.350000000000187e-05, 4.422199999999654e-05, 4.3582999999999816e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.710" endtime="20201112 12:27:17.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.698" endtime="20201112 12:27:17.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.723" endtime="20201112 12:27:17.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.732" endtime="20201112 12:27:17.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.727" endtime="20201112 12:27:17.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.719" endtime="20201112 12:27:17.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.210" endtime="20201112 12:27:17.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.209" endtime="20201112 12:27:17.757"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.780" endtime="20201112 12:27:17.801"></status>
</kw>
<msg timestamp="20201112 12:27:17.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.777" endtime="20201112 12:27:17.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.804" endtime="20201112 12:27:17.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.811" endtime="20201112 12:27:17.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.770" endtime="20201112 12:27:17.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.764" endtime="20201112 12:27:17.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.834" endtime="20201112 12:27:18.171"></status>
</kw>
<msg timestamp="20201112 12:27:18.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042279111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042323569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.831" endtime="20201112 12:27:18.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042279111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042323569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.180" endtime="20201112 12:27:18.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.199" endtime="20201112 12:27:18.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.824" endtime="20201112 12:27:18.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.819" endtime="20201112 12:27:18.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.216" level="INFO">${RESULT} = [{'time': 0.042323569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.445799999999722e-05, 'source_diff': 4.445799999999722e-05}, {'time': 0.042381569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:18.207" endtime="20201112 12:27:18.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.247" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.219" endtime="20201112 12:27:18.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.258" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.256" endtime="20201112 12:27:18.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.264" level="INFO">VALUE: [4.445799999999722e-05, 4.473600000000355e-05, 4.4652999999998666e-05, 4.4847000000000636e-05, 4.526399999999625e-05, 4.472200000000398e-05, 4.4681000000004745e-05, 4.4666999999998236e-05, 4.5111000000000456e-05, 4.4402999999998416e-05, 4.4445000000004065e-05, 4.4958999999997196e-05, 4.451400000000244e-05, 4.4861000000000206e-05, 4.504199999999514e-05, 4.481899999999456e-05, 4.4666999999998236e-05, 4.445799999999722e-05, 4.4930999999998056e-05, 4.5111000000000456e-05, 4.479100000000236e-05, 4.445799999999722e-05, 4.447199999999679e-05, 4.4374999999999276e-05, 4.504099999999567e-05, 4.4360999999999706e-05, 4.525000000000362e-05, 4.4695000000004315e-05, 4.4319000000000996e-05, 4.447200000000373e-05, 4.502800000000251e-05, 4.4680999999997806e-05, 4.497199999999729e-05, 4.4847000000000636e-05, 4.508400000000079e-05, 4.5125000000000026e-05, 4.5223000000003954e-05, 4.502800000000251e-05, 4.477799999999532e-05, 4.466599999999876e-05, 4.467999999999833e-05, 4.526400000000319e-05, 4.450000000000287e-05, 4.447200000000373e-05, 4.5097000000000886e-05, 4.472200000000398e-05, 4.477800000000226e-05, 4.4374999999999276e-05, 4.5138999999999596e-05, 4.4417000000004925e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.260" endtime="20201112 12:27:18.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.249" endtime="20201112 12:27:18.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.275" endtime="20201112 12:27:18.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.283" endtime="20201112 12:27:18.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.279" endtime="20201112 12:27:18.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.270" endtime="20201112 12:27:18.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.760" endtime="20201112 12:27:18.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.758" endtime="20201112 12:27:18.305"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.316" endtime="20201112 12:27:18.333"></status>
</kw>
<msg timestamp="20201112 12:27:18.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.314" endtime="20201112 12:27:18.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.335" endtime="20201112 12:27:18.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.338" endtime="20201112 12:27:18.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.311" endtime="20201112 12:27:18.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.308" endtime="20201112 12:27:18.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.349" endtime="20201112 12:27:18.677"></status>
</kw>
<msg timestamp="20201112 12:27:18.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024875778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024921597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.347" endtime="20201112 12:27:18.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024875778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024921597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.686" endtime="20201112 12:27:18.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.705" endtime="20201112 12:27:18.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.344" endtime="20201112 12:27:18.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.342" endtime="20201112 12:27:18.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.722" level="INFO">${RESULT} = [{'time': 0.024921597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.581899999999903e-05, 'source_diff': 4.581899999999903e-05}, {'time': 0.024982583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:18.713" endtime="20201112 12:27:18.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.753" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.725" endtime="20201112 12:27:18.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.764" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.762" endtime="20201112 12:27:18.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.769" level="INFO">VALUE: [4.581899999999903e-05, 4.60000000000009e-05, 4.625000000000115e-05, 4.5583000000001817e-05, 4.55000000000004e-05, 4.5361000000000706e-05, 4.5902999999999916e-05, 4.5652999999999666e-05, 4.576300000000075e-05, 4.624999999999768e-05, 4.626400000000072e-05, 4.5473000000000735e-05, 4.5875000000000776e-05, 4.5319000000001997e-05, 4.565200000000019e-05, 4.5695000000001845e-05, 4.5583000000001817e-05, 4.567999999999933e-05, 4.542999999999908e-05, 4.622199999999854e-05, 4.570800000000194e-05, 4.5375000000000276e-05, 4.543000000000255e-05, 4.60000000000009e-05, 4.5931000000002525e-05, 4.612499999999756e-05, 4.5569000000002247e-05, 4.5375000000000276e-05, 4.586099999999774e-05, 4.622199999999854e-05, 4.533400000000104e-05, 4.623600000000158e-05, 4.529199999999886e-05, 4.53329999999981e-05, 4.561099999999749e-05, 4.6208999999998446e-05, 4.544400000000212e-05, 4.570800000000194e-05, 4.577700000000032e-05, 4.5652999999999666e-05, 4.551399999999997e-05, 4.5861000000001206e-05, 4.548600000000083e-05, 4.598600000000133e-05, 4.555500000000268e-05, 4.604199999999961e-05, 4.577799999999979e-05, 4.605599999999918e-05, 4.548600000000083e-05, 4.575000000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.766" endtime="20201112 12:27:18.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.755" endtime="20201112 12:27:18.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.779" endtime="20201112 12:27:18.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.789" endtime="20201112 12:27:18.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.784" endtime="20201112 12:27:18.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.774" endtime="20201112 12:27:18.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.306" endtime="20201112 12:27:18.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.305" endtime="20201112 12:27:18.815"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.837" endtime="20201112 12:27:18.858"></status>
</kw>
<msg timestamp="20201112 12:27:18.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.834" endtime="20201112 12:27:18.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.861" endtime="20201112 12:27:18.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.867" endtime="20201112 12:27:18.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.827" endtime="20201112 12:27:18.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.821" endtime="20201112 12:27:18.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.891" endtime="20201112 12:27:19.228"></status>
</kw>
<msg timestamp="20201112 12:27:19.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042371875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042418625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.888" endtime="20201112 12:27:19.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042371875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042418625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.238" endtime="20201112 12:27:19.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.256" endtime="20201112 12:27:19.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.880" endtime="20201112 12:27:19.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.876" endtime="20201112 12:27:19.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.274" level="INFO">${RESULT} = [{'time': 0.042418625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.674999999999818e-05, 'source_diff': 4.674999999999818e-05}, {'time': 0.042483625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.265" endtime="20201112 12:27:19.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.304" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.276" endtime="20201112 12:27:19.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.316" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.313" endtime="20201112 12:27:19.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.321" level="INFO">VALUE: [4.674999999999818e-05, 4.652799999999707e-05, 4.651400000000444e-05, 4.673599999999861e-05, 4.6861000000002206e-05, 4.6694999999999376e-05, 4.704199999999714e-05, 4.630499999999649e-05, 4.726399999999825e-05, 4.686200000000168e-05, 4.701299999999853e-05, 4.652799999999707e-05, 4.676399999999775e-05, 4.694400000000015e-05, 4.680499999999699e-05, 4.713899999999466e-05, 4.644399999999965e-05, 4.66939999999999e-05, 4.713899999999466e-05, 4.661099999999502e-05, 4.6917000000000486e-05, 4.727699999999835e-05, 4.6389000000000846e-05, 4.705600000000365e-05, 4.6416999999999986e-05, 4.686200000000168e-05, 4.647199999999879e-05, 4.700000000000537e-05, 4.699999999999843e-05, 4.673600000000555e-05, 4.637499999999434e-05, 4.712499999999509e-05, 4.629100000000386e-05, 4.668000000000033e-05, 4.726399999999825e-05, 4.679199999999689e-05, 4.652799999999707e-05, 4.6917000000000486e-05, 4.6611000000001956e-05, 4.6667000000000236e-05, 4.680599999999646e-05, 4.626399999999725e-05, 4.7194999999999876e-05, 4.6931000000000056e-05, 4.63060000000029e-05, 4.7209000000006385e-05, 4.644399999999965e-05, 4.7125000000002026e-05, 4.7097000000002887e-05, 4.672199999999904e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.318" endtime="20201112 12:27:19.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.306" endtime="20201112 12:27:19.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.331" endtime="20201112 12:27:19.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.339" endtime="20201112 12:27:19.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.335" endtime="20201112 12:27:19.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.326" endtime="20201112 12:27:19.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.817" endtime="20201112 12:27:19.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.815" endtime="20201112 12:27:19.369"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.393" endtime="20201112 12:27:19.414"></status>
</kw>
<msg timestamp="20201112 12:27:19.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.389" endtime="20201112 12:27:19.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.418" endtime="20201112 12:27:19.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.424" endtime="20201112 12:27:19.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.382" endtime="20201112 12:27:19.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.376" endtime="20201112 12:27:19.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.447" endtime="20201112 12:27:19.796"></status>
</kw>
<msg timestamp="20201112 12:27:19.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044138444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044186042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.444" endtime="20201112 12:27:19.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044138444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044186042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.806" endtime="20201112 12:27:19.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.824" endtime="20201112 12:27:19.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.437" endtime="20201112 12:27:19.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.432" endtime="20201112 12:27:19.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.842" level="INFO">${RESULT} = [{'time': 0.044186042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.759800000000286e-05, 'source_diff': 4.759800000000286e-05}, {'time': 0.044252042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.833" endtime="20201112 12:27:19.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.872" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.844" endtime="20201112 12:27:19.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.883" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.881" endtime="20201112 12:27:19.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.889" level="INFO">VALUE: [4.759800000000286e-05, 4.7667000000001236e-05, 4.805499999999824e-05, 4.736200000000218e-05, 4.809699999999695e-05, 4.772200000000004e-05, 4.7943999999994213e-05, 4.733300000000357e-05, 4.780499999999799e-05, 4.726399999999825e-05, 4.822200000000054e-05, 4.7611000000002957e-05, 4.7431000000000556e-05, 4.7931000000001056e-05, 4.7361000000002706e-05, 4.822200000000054e-05, 4.823600000000011e-05, 4.759800000000286e-05, 4.73060000000039e-05, 4.806900000000475e-05, 4.8167000000001736e-05, 4.7486999999998836e-05, 4.779199999999789e-05, 4.818000000000183e-05, 4.812499999999609e-05, 4.7389000000001846e-05, 4.754099999999817e-05, 4.809699999999695e-05, 4.804099999999867e-05, 4.784799999999617e-05, 4.8139000000002596e-05, 4.826399999999925e-05, 4.7417000000000986e-05, 4.813899999999566e-05, 4.7917000000001486e-05, 4.7945000000000626e-05, 4.758399999999635e-05, 4.777800000000526e-05, 4.726399999999825e-05, 4.7667000000001236e-05, 4.808399999999685e-05, 4.772200000000004e-05, 4.809700000000389e-05, 4.76940000000009e-05, 4.7875000000002776e-05, 4.826399999999925e-05, 4.823600000000011e-05, 4.777800000000526e-05, 4.776399999999875e-05, 4.759699999999645e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.886" endtime="20201112 12:27:19.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.874" endtime="20201112 12:27:19.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.903" endtime="20201112 12:27:19.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.912" endtime="20201112 12:27:19.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.907" endtime="20201112 12:27:19.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.899" endtime="20201112 12:27:19.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.371" endtime="20201112 12:27:19.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.370" endtime="20201112 12:27:19.938"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.962" endtime="20201112 12:27:19.982"></status>
</kw>
<msg timestamp="20201112 12:27:19.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.959" endtime="20201112 12:27:19.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.986" endtime="20201112 12:27:19.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.992" endtime="20201112 12:27:19.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.952" endtime="20201112 12:27:19.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.944" endtime="20201112 12:27:19.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.016" endtime="20201112 12:27:20.363"></status>
</kw>
<msg timestamp="20201112 12:27:20.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043682, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043731222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:20.012" endtime="20201112 12:27:20.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043682, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043731222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:20.373" endtime="20201112 12:27:20.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.392" endtime="20201112 12:27:20.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.005" endtime="20201112 12:27:20.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.000" endtime="20201112 12:27:20.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.409" level="INFO">${RESULT} = [{'time': 0.043731222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.922200000000154e-05, 'source_diff': 4.922200000000154e-05}, {'time': 0.043788236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.400" endtime="20201112 12:27:20.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.412" endtime="20201112 12:27:20.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.452" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.450" endtime="20201112 12:27:20.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.458" level="INFO">VALUE: [4.922200000000154e-05, 4.854199999999864e-05, 4.845800000000122e-05, 4.8889000000003346e-05, 4.904199999999914e-05, 4.9139000000003596e-05, 4.904199999999914e-05, 4.908400000000479e-05, 4.827799999999882e-05, 4.854199999999864e-05, 4.909799999999742e-05, 4.9195000000001876e-05, 4.88469999999977e-05, 4.8667000000002236e-05, 4.893099999999512e-05, 4.855499999999874e-05, 4.911099999999752e-05, 4.872200000000104e-05, 4.843000000000208e-05, 4.844400000000165e-05, 4.852800000000601e-05, 4.852799999999907e-05, 4.908299999999838e-05, 4.833300000000457e-05, 4.922200000000154e-05, 4.883299999999813e-05, 4.908299999999838e-05, 4.895800000000172e-05, 4.908399999999785e-05, 4.902799999999957e-05, 4.827799999999882e-05, 4.856899999999831e-05, 4.8415999999995574e-05, 4.8695000000001376e-05, 4.879100000000636e-05, 4.848600000000036e-05, 4.848600000000036e-05, 4.8625000000003527e-05, 4.8915999999996074e-05, 4.877799999999932e-05, 4.887499999999684e-05, 4.912499999999709e-05, 4.8667000000002236e-05, 4.852800000000601e-05, 4.834700000000414e-05, 4.877799999999932e-05, 4.9181000000002306e-05, 4.875000000000018e-05, 4.884799999999717e-05, 4.905599999999871e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.455" endtime="20201112 12:27:20.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.443" endtime="20201112 12:27:20.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.467" endtime="20201112 12:27:20.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.476" endtime="20201112 12:27:20.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.471" endtime="20201112 12:27:20.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.463" endtime="20201112 12:27:20.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.940" endtime="20201112 12:27:20.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.939" endtime="20201112 12:27:20.502"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.525" endtime="20201112 12:27:20.544"></status>
</kw>
<msg timestamp="20201112 12:27:20.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.521" endtime="20201112 12:27:20.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.548" endtime="20201112 12:27:20.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.554" endtime="20201112 12:27:20.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.514" endtime="20201112 12:27:20.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.508" endtime="20201112 12:27:20.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.579" endtime="20201112 12:27:20.914"></status>
</kw>
<msg timestamp="20201112 12:27:20.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042164583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042214139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.576" endtime="20201112 12:27:20.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042164583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042214139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.923" endtime="20201112 12:27:20.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.942" endtime="20201112 12:27:20.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.569" endtime="20201112 12:27:20.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.564" endtime="20201112 12:27:20.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.960" level="INFO">${RESULT} = [{'time': 0.042214139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.955599999999921e-05, 'source_diff': 4.955599999999921e-05}, {'time': 0.042274153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.951" endtime="20201112 12:27:20.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.990" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.962" endtime="20201112 12:27:20.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.001" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.999" endtime="20201112 12:27:21.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.007" level="INFO">VALUE: [4.955599999999921e-05, 4.9389000000003846e-05, 4.950000000000093e-05, 5.013899999999766e-05, 5.0014000000001e-05, 4.979199999999989e-05, 4.965299999999673e-05, 5.018099999999637e-05, 4.954100000000017e-05, 5.00270000000011e-05, 5.012499999999809e-05, 4.9417000000002986e-05, 4.958299999999888e-05, 4.990299999999698e-05, 5.002800000000057e-05, 4.962499999999759e-05, 4.93469999999982e-05, 4.986099999999827e-05, 4.98339999999986e-05, 5.005599999999971e-05, 4.937499999999734e-05, 4.979199999999989e-05, 4.969499999999544e-05, 4.9693999999995964e-05, 4.961199999999749e-05, 5.009699999999895e-05, 5.009700000000589e-05, 5.005500000000024e-05, 4.962499999999759e-05, 4.961099999999802e-05, 4.958299999999888e-05, 4.933299999999863e-05, 4.927799999999982e-05, 5.012500000000503e-05, 4.993099999999612e-05, 4.959800000000486e-05, 4.961099999999802e-05, 5.009799999999842e-05, 4.973600000000161e-05, 4.930599999999896e-05, 5.025000000000168e-05, 4.96940000000029e-05, 4.979100000000042e-05, 4.98469999999987e-05, 5.022200000000254e-05, 5.01940000000034e-05, 4.952800000000007e-05, 4.95140000000005e-05, 5.022200000000254e-05, 4.970800000000247e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.004" endtime="20201112 12:27:21.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.992" endtime="20201112 12:27:21.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.016" endtime="20201112 12:27:21.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.025" endtime="20201112 12:27:21.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.020" endtime="20201112 12:27:21.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.012" endtime="20201112 12:27:21.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.504" endtime="20201112 12:27:21.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.503" endtime="20201112 12:27:21.051"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.074" endtime="20201112 12:27:21.094"></status>
</kw>
<msg timestamp="20201112 12:27:21.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.070" endtime="20201112 12:27:21.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.098" endtime="20201112 12:27:21.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.104" endtime="20201112 12:27:21.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.063" endtime="20201112 12:27:21.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.057" endtime="20201112 12:27:21.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.129" endtime="20201112 12:27:21.465"></status>
</kw>
<msg timestamp="20201112 12:27:21.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042031653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042082319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.126" endtime="20201112 12:27:21.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042031653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042082319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.475" endtime="20201112 12:27:21.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.494" endtime="20201112 12:27:21.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.117" endtime="20201112 12:27:21.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.112" endtime="20201112 12:27:21.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.512" level="INFO">${RESULT} = [{'time': 0.042082319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0665999999997824e-05, 'source_diff': 5.0665999999997824e-05}, {'time': 0.042142319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:21.503" endtime="20201112 12:27:21.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.542" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:21.514" endtime="20201112 12:27:21.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.553" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.551" endtime="20201112 12:27:21.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.558" level="INFO">VALUE: [5.0665999999997824e-05, 5.0679999999997394e-05, 5.086099999999927e-05, 5.030500000000049e-05, 5.0417000000003986e-05, 5.113899999999866e-05, 5.127800000000182e-05, 5.0737000000002086e-05, 5.074999999999524e-05, 5.086099999999927e-05, 5.0695000000003376e-05, 5.06669999999973e-05, 5.03469999999992e-05, 5.075000000000218e-05, 5.06940000000039e-05, 5.088899999999841e-05, 5.0667000000004236e-05, 5.1221999999996604e-05, 5.095800000000372e-05, 5.029099999999398e-05, 5.098600000000286e-05, 5.088900000000535e-05, 5.11390000000056e-05, 5.059699999999945e-05, 5.111099999999952e-05, 5.030599999999996e-05, 5.109699999999995e-05, 5.079200000000089e-05, 5.0457999999996284e-05, 5.079200000000089e-05, 5.125000000000268e-05, 5.102800000000157e-05, 5.079200000000089e-05, 5.036099999999877e-05, 5.037499999999834e-05, 5.054200000000064e-05, 5.123699999999565e-05, 5.038899999999791e-05, 5.058299999999988e-05, 5.077800000000132e-05, 5.036099999999877e-05, 5.088899999999841e-05, 5.029100000000092e-05, 5.058299999999988e-05, 5.045800000000322e-05, 5.108399999999985e-05, 5.0443999999996714e-05, 5.050000000000193e-05, 5.127700000000235e-05, 5.111199999999899e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.555" endtime="20201112 12:27:21.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.544" endtime="20201112 12:27:21.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.568" endtime="20201112 12:27:21.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.576" endtime="20201112 12:27:21.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.572" endtime="20201112 12:27:21.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.563" endtime="20201112 12:27:21.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.053" endtime="20201112 12:27:21.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.052" endtime="20201112 12:27:21.602"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.625" endtime="20201112 12:27:21.644"></status>
</kw>
<msg timestamp="20201112 12:27:21.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.622" endtime="20201112 12:27:21.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.646" endtime="20201112 12:27:21.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.649" endtime="20201112 12:27:21.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.615" endtime="20201112 12:27:21.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.609" endtime="20201112 12:27:21.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.660" endtime="20201112 12:27:21.969"></status>
</kw>
<msg timestamp="20201112 12:27:21.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042093417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042145181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.658" endtime="20201112 12:27:21.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042093417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042145181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.979" endtime="20201112 12:27:21.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.997" endtime="20201112 12:27:22.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.655" endtime="20201112 12:27:22.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.653" endtime="20201112 12:27:22.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.015" level="INFO">${RESULT} = [{'time': 0.042145181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.176399999999581e-05, 'source_diff': 5.176399999999581e-05}, {'time': 0.042208194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.006" endtime="20201112 12:27:22.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.045" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.017" endtime="20201112 12:27:22.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.057" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.054" endtime="20201112 12:27:22.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.062" level="INFO">VALUE: [5.176399999999581e-05, 5.183299999999419e-05, 5.129100000000192e-05, 5.1945000000004626e-05, 5.1735999999996674e-05, 5.205500000000224e-05, 5.1735999999996674e-05, 5.131900000000106e-05, 5.187499999999984e-05, 5.220800000000497e-05, 5.191699999999855e-05, 5.202799999999563e-05, 5.157000000000078e-05, 5.136099999999977e-05, 5.2235999999997174e-05, 5.2138000000000184e-05, 5.129200000000139e-05, 5.1959000000004196e-05, 5.209800000000042e-05, 5.2263999999996313e-05, 5.1445000000004126e-05, 5.209700000000095e-05, 5.131900000000106e-05, 5.1943999999998214e-05, 5.136099999999977e-05, 5.202800000000257e-05, 5.152800000000207e-05, 5.130600000000096e-05, 5.226400000000325e-05, 5.130600000000096e-05, 5.209700000000095e-05, 5.1681000000004806e-05, 5.152800000000207e-05, 5.193099999999812e-05, 5.209800000000042e-05, 5.176400000000275e-05, 5.1403000000005417e-05, 5.136099999999977e-05, 5.125000000000268e-05, 5.127700000000235e-05, 5.18470000000007e-05, 5.1651999999999254e-05, 5.1985999999996924e-05, 5.154099999999523e-05, 5.144499999999719e-05, 5.208400000000085e-05, 5.1945000000004626e-05, 5.137500000000628e-05, 5.133300000000063e-05, 5.193099999999812e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.059" endtime="20201112 12:27:22.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.047" endtime="20201112 12:27:22.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.072" endtime="20201112 12:27:22.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.080" endtime="20201112 12:27:22.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.076" endtime="20201112 12:27:22.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.067" endtime="20201112 12:27:22.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.605" endtime="20201112 12:27:22.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.603" endtime="20201112 12:27:22.106"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.129" endtime="20201112 12:27:22.149"></status>
</kw>
<msg timestamp="20201112 12:27:22.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.125" endtime="20201112 12:27:22.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.153" endtime="20201112 12:27:22.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.159" endtime="20201112 12:27:22.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.118" endtime="20201112 12:27:22.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.112" endtime="20201112 12:27:22.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.183" endtime="20201112 12:27:22.519"></status>
</kw>
<msg timestamp="20201112 12:27:22.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042153528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042206569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.179" endtime="20201112 12:27:22.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042153528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042206569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.529" endtime="20201112 12:27:22.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.548" endtime="20201112 12:27:22.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.172" endtime="20201112 12:27:22.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.167" endtime="20201112 12:27:22.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.566" level="INFO">${RESULT} = [{'time': 0.042206569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.304099999999673e-05, 'source_diff': 5.304099999999673e-05}, {'time': 0.042273542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.556" endtime="20201112 12:27:22.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.568" endtime="20201112 12:27:22.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.607" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.605" endtime="20201112 12:27:22.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.612" level="INFO">VALUE: [5.304099999999673e-05, 5.312499999999415e-05, 5.277800000000332e-05, 5.3223000000005016e-05, 5.259800000000092e-05, 5.2888000000000934e-05, 5.272200000000504e-05, 5.308300000000238e-05, 5.2665999999999824e-05, 5.2443999999998714e-05, 5.2735999999997674e-05, 5.3193999999999464e-05, 5.290299999999998e-05, 5.2415999999999574e-05, 5.2471999999997854e-05, 5.237500000000034e-05, 5.2888000000000934e-05, 5.237500000000034e-05, 5.284800000000117e-05, 5.307000000000228e-05, 5.277799999999638e-05, 5.251299999999709e-05, 5.2499999999996994e-05, 5.2943999999999214e-05, 5.252699999999666e-05, 5.254200000000264e-05, 5.3166000000000324e-05, 5.312500000000109e-05, 5.2707999999998534e-05, 5.323600000000511e-05, 5.254200000000264e-05, 5.259700000000145e-05, 5.3263999999997313e-05, 5.318099999999937e-05, 5.2945000000005626e-05, 5.2749999999997244e-05, 5.295899999999826e-05, 5.256899999999537e-05, 5.279200000000289e-05, 5.259800000000092e-05, 5.2902000000000504e-05, 5.283300000000213e-05, 5.30549999999963e-05, 5.236100000000077e-05, 5.326400000000425e-05, 5.288900000000041e-05, 5.283300000000213e-05, 5.276400000000375e-05, 5.244499999999819e-05, 5.261100000000102e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.609" endtime="20201112 12:27:22.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.598" endtime="20201112 12:27:22.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.622" endtime="20201112 12:27:22.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.630" endtime="20201112 12:27:22.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.626" endtime="20201112 12:27:22.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.617" endtime="20201112 12:27:22.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.108" endtime="20201112 12:27:22.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.107" endtime="20201112 12:27:22.656"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.679" endtime="20201112 12:27:22.700"></status>
</kw>
<msg timestamp="20201112 12:27:22.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.676" endtime="20201112 12:27:22.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.703" endtime="20201112 12:27:22.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.709" endtime="20201112 12:27:22.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.669" endtime="20201112 12:27:22.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.663" endtime="20201112 12:27:22.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.733" endtime="20201112 12:27:23.069"></status>
</kw>
<msg timestamp="20201112 12:27:23.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042121847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042175875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.730" endtime="20201112 12:27:23.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042121847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042175875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.078" endtime="20201112 12:27:23.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.097" endtime="20201112 12:27:23.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.723" endtime="20201112 12:27:23.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.718" endtime="20201112 12:27:23.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.116" level="INFO">${RESULT} = [{'time': 0.042175875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402800000000457e-05, 'source_diff': 5.402800000000457e-05}, {'time': 0.042247917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.107" endtime="20201112 12:27:23.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.146" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.118" endtime="20201112 12:27:23.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.157" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.155" endtime="20201112 12:27:23.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.162" level="INFO">VALUE: [5.402800000000457e-05, 5.41670000000008e-05, 5.412500000000209e-05, 5.390299999999404e-05, 5.393100000000012e-05, 5.4180000000000894e-05, 5.415299999999429e-05, 5.3929999999993705e-05, 5.3985999999998924e-05, 5.352800000000407e-05, 5.425000000000568e-05, 5.3735999999998674e-05, 5.330500000000349e-05, 5.331900000000306e-05, 5.4263999999998314e-05, 5.386100000000227e-05, 5.4014000000005e-05, 5.3957999999999784e-05, 5.361100000000202e-05, 5.418099999999343e-05, 5.345899999999876e-05, 5.370899999999901e-05, 5.38619999999948e-05, 5.4263999999998314e-05, 5.372299999999858e-05, 5.337500000000134e-05, 5.3999999999998494e-05, 5.344400000000665e-05, 5.350000000000493e-05, 5.388900000000141e-05, 5.361100000000202e-05, 5.41670000000008e-05, 5.3957999999999784e-05, 5.336100000000177e-05, 5.354200000000364e-05, 5.413899999999472e-05, 5.394499999999969e-05, 5.390300000000098e-05, 5.3416000000000574e-05, 5.338900000000091e-05, 5.3973000000005766e-05, 5.40419999999972e-05, 5.379099999999748e-05, 5.377699999999791e-05, 5.336100000000177e-05, 5.333300000000263e-05, 5.3499999999997994e-05, 5.4235999999999174e-05, 5.387500000000184e-05, 5.381999999999609e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.159" endtime="20201112 12:27:23.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.148" endtime="20201112 12:27:23.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.172" endtime="20201112 12:27:23.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.181" endtime="20201112 12:27:23.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.176" endtime="20201112 12:27:23.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.167" endtime="20201112 12:27:23.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.658" endtime="20201112 12:27:23.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.657" endtime="20201112 12:27:23.206"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.229" endtime="20201112 12:27:23.249"></status>
</kw>
<msg timestamp="20201112 12:27:23.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.226" endtime="20201112 12:27:23.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.253" endtime="20201112 12:27:23.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.259" endtime="20201112 12:27:23.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.219" endtime="20201112 12:27:23.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.213" endtime="20201112 12:27:23.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.283" endtime="20201112 12:27:23.618"></status>
</kw>
<msg timestamp="20201112 12:27:23.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042289125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042343944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.279" endtime="20201112 12:27:23.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042289125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042343944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.628" endtime="20201112 12:27:23.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.646" endtime="20201112 12:27:23.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.272" endtime="20201112 12:27:23.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.267" endtime="20201112 12:27:23.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.665" level="INFO">${RESULT} = [{'time': 0.042343944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.481900000000456e-05, 'source_diff': 5.481900000000456e-05}, {'time': 0.042413958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.656" endtime="20201112 12:27:23.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.668" endtime="20201112 12:27:23.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.707" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.704" endtime="20201112 12:27:23.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.712" level="INFO">VALUE: [5.481900000000456e-05, 5.437500000000234e-05, 5.51670000000018e-05, 5.4513999999998564e-05, 5.506999999999734e-05, 5.511100000000352e-05, 5.511200000000299e-05, 5.455599999999727e-05, 5.511200000000299e-05, 5.5249999999999744e-05, 5.469500000000044e-05, 5.456999999999684e-05, 5.4999999999999494e-05, 5.438900000000191e-05, 5.497299999999983e-05, 5.497299999999983e-05, 5.456900000000431e-05, 5.4749999999999244e-05, 5.4930000000001644e-05, 5.4749999999999244e-05, 5.468100000000087e-05, 5.51670000000018e-05, 5.512500000000309e-05, 5.504200000000514e-05, 5.4708000000000534e-05, 5.506999999999734e-05, 5.437500000000234e-05, 5.470900000000001e-05, 5.5180000000001894e-05, 5.48340000000036e-05, 5.511100000000352e-05, 5.5249999999999744e-05, 5.4415999999994635e-05, 5.438900000000191e-05, 5.508300000000438e-05, 5.504099999999873e-05, 5.4722000000000104e-05, 5.455500000000474e-05, 5.513900000000266e-05, 5.4485999999999424e-05, 5.4777999999998384e-05, 5.4722000000000104e-05, 5.518100000000137e-05, 5.469500000000044e-05, 5.463899999999522e-05, 5.461100000000302e-05, 5.511200000000299e-05, 5.463900000000216e-05, 5.441700000000105e-05, 5.4958000000000784e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.709" endtime="20201112 12:27:23.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.697" endtime="20201112 12:27:23.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.722" endtime="20201112 12:27:23.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.730" endtime="20201112 12:27:23.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.726" endtime="20201112 12:27:23.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.717" endtime="20201112 12:27:23.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.208" endtime="20201112 12:27:23.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.207" endtime="20201112 12:27:23.756"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.779" endtime="20201112 12:27:23.799"></status>
</kw>
<msg timestamp="20201112 12:27:23.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.776" endtime="20201112 12:27:23.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.803" endtime="20201112 12:27:23.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.809" endtime="20201112 12:27:23.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.768" endtime="20201112 12:27:23.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.763" endtime="20201112 12:27:23.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.833" endtime="20201112 12:27:24.169"></status>
</kw>
<msg timestamp="20201112 12:27:24.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042179083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042234667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.829" endtime="20201112 12:27:24.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042179083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042234667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.178" endtime="20201112 12:27:24.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.197" endtime="20201112 12:27:24.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.822" endtime="20201112 12:27:24.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.817" endtime="20201112 12:27:24.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.218" level="INFO">${RESULT} = [{'time': 0.042234667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.558399999999741e-05, 'source_diff': 5.558399999999741e-05}, {'time': 0.042309681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:24.209" endtime="20201112 12:27:24.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.248" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.220" endtime="20201112 12:27:24.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.259" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.257" endtime="20201112 12:27:24.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.265" level="INFO">VALUE: [5.558399999999741e-05, 5.582000000000503e-05, 5.5486000000000424e-05, 5.611099999999758e-05, 5.5735999999993735e-05, 5.618100000000237e-05, 5.6166000000003324e-05, 5.588899999999647e-05, 5.5763999999999814e-05, 5.5486000000000424e-05, 5.612499999999715e-05, 5.5499999999999994e-05, 5.6041999999999204e-05, 5.5513999999999564e-05, 5.593100000000212e-05, 5.594500000000169e-05, 5.6264000000000314e-05, 5.602700000000016e-05, 5.594500000000169e-05, 5.5486000000000424e-05, 5.5416000000002574e-05, 5.6250000000000744e-05, 5.55549999999988e-05, 5.6250000000000744e-05, 5.5722000000001104e-05, 5.6250000000000744e-05, 5.6014000000000064e-05, 5.588899999999647e-05, 5.6055999999998773e-05, 5.584699999999776e-05, 5.593099999999518e-05, 5.595899999999432e-05, 5.611100000000452e-05, 5.6027999999999634e-05, 5.530499999999855e-05, 5.536200000000324e-05, 5.5916000000003074e-05, 5.554099999999923e-05, 5.5680000000002394e-05, 5.5680000000002394e-05, 5.5777999999999384e-05, 5.561100000000402e-05, 5.6264000000000314e-05, 5.53749999999964e-05, 5.590299999999604e-05, 5.568100000000187e-05, 5.5499999999999994e-05, 5.554200000000564e-05, 5.6000000000000494e-05, 5.558299999999794e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.261" endtime="20201112 12:27:24.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.250" endtime="20201112 12:27:24.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.274" endtime="20201112 12:27:24.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.283" endtime="20201112 12:27:24.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.278" endtime="20201112 12:27:24.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.269" endtime="20201112 12:27:24.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.758" endtime="20201112 12:27:24.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.757" endtime="20201112 12:27:24.308"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.331" endtime="20201112 12:27:24.352"></status>
</kw>
<msg timestamp="20201112 12:27:24.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.328" endtime="20201112 12:27:24.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.355" endtime="20201112 12:27:24.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.361" endtime="20201112 12:27:24.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.321" endtime="20201112 12:27:24.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.315" endtime="20201112 12:27:24.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.385" endtime="20201112 12:27:24.721"></status>
</kw>
<msg timestamp="20201112 12:27:24.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042192542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042248917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.382" endtime="20201112 12:27:24.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042192542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042248917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.731" endtime="20201112 12:27:24.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.749" endtime="20201112 12:27:24.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.374" endtime="20201112 12:27:24.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.370" endtime="20201112 12:27:24.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.769" level="INFO">${RESULT} = [{'time': 0.042248917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.63749999999974e-05, 'source_diff': 5.63749999999974e-05}, {'time': 0.042324986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:24.760" endtime="20201112 12:27:24.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.799" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.771" endtime="20201112 12:27:24.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.810" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.808" endtime="20201112 12:27:24.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.815" level="INFO">VALUE: [5.63749999999974e-05, 5.6528000000000134e-05, 5.712499999999815e-05, 5.6430000000003144e-05, 5.654100000000023e-05, 5.7179999999996955e-05, 5.6721999999995165e-05, 5.682000000000603e-05, 5.713900000000466e-05, 5.666699999999636e-05, 5.6693999999996025e-05, 5.711099999999858e-05, 5.6958000000002784e-05, 5.690300000000398e-05, 5.729099999999404e-05, 5.695900000000226e-05, 5.7250000000001744e-05, 5.711099999999858e-05, 5.7194000000003464e-05, 5.6693999999996025e-05, 5.6652000000004255e-05, 5.7166000000004324e-05, 5.679100000000048e-05, 5.641699999999611e-05, 5.7221999999995665e-05, 5.66670000000033e-05, 5.659699999999851e-05, 5.6778000000000384e-05, 5.638900000000391e-05, 5.6291999999999454e-05, 5.684799999999823e-05, 5.715300000000423e-05, 5.6264000000000314e-05, 5.6694000000002964e-05, 5.662499999999765e-05, 5.7138000000005185e-05, 5.68470000000057e-05, 5.688899999999747e-05, 5.63749999999974e-05, 5.70550000000003e-05, 5.636099999999783e-05, 5.6707999999995595e-05, 5.6901999999997566e-05, 5.712499999999815e-05, 5.7055999999999774e-05, 5.711099999999858e-05, 5.6305999999999023e-05, 5.709700000000595e-05, 5.7000000000001494e-05, 5.676300000000134e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.812" endtime="20201112 12:27:24.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.801" endtime="20201112 12:27:24.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.825" endtime="20201112 12:27:24.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.834" endtime="20201112 12:27:24.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.829" endtime="20201112 12:27:24.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.821" endtime="20201112 12:27:24.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.311" endtime="20201112 12:27:24.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.309" endtime="20201112 12:27:24.860"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.882" endtime="20201112 12:27:24.903"></status>
</kw>
<msg timestamp="20201112 12:27:24.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.879" endtime="20201112 12:27:24.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.906" endtime="20201112 12:27:24.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.913" endtime="20201112 12:27:24.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.872" endtime="20201112 12:27:24.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.866" endtime="20201112 12:27:24.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.936" endtime="20201112 12:27:25.241"></status>
</kw>
<msg timestamp="20201112 12:27:25.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042214528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042272472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.933" endtime="20201112 12:27:25.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042214528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042272472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.245" endtime="20201112 12:27:25.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.254" endtime="20201112 12:27:25.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.926" endtime="20201112 12:27:25.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.921" endtime="20201112 12:27:25.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.263" level="INFO">${RESULT} = [{'time': 0.042272472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7943999999997275e-05, 'source_diff': 5.7943999999997275e-05}, {'time': 0.042350486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:25.259" endtime="20201112 12:27:25.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.282" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.264" endtime="20201112 12:27:25.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.293" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.291" endtime="20201112 12:27:25.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.299" level="INFO">VALUE: [5.7943999999997275e-05, 5.808300000000044e-05, 5.7722000000003104e-05, 5.795900000000326e-05, 5.7514000000001564e-05, 5.743100000000362e-05, 5.812499999999915e-05, 5.8013999999995125e-05, 5.734799999999873e-05, 5.765299999999779e-05, 5.8083999999999913e-05, 5.797299999999589e-05, 5.7902000000005505e-05, 5.762499999999865e-05, 5.73749999999984e-05, 5.759700000000645e-05, 5.7429999999997206e-05, 5.811100000000652e-05, 5.736099999999883e-05, 5.7500000000001994e-05, 5.784699999999976e-05, 5.793099999999718e-05, 5.7500000000001994e-05, 5.738900000000491e-05, 5.7319999999999593e-05, 5.76949999999965e-05, 5.762499999999865e-05, 5.745900000000276e-05, 5.758299999999994e-05, 5.8137999999999246e-05, 5.809700000000001e-05, 5.762499999999865e-05, 5.73470000000062e-05, 5.7486000000002424e-05, 5.8000000000002494e-05, 5.7278000000000884e-05, 5.787500000000584e-05, 5.7792000000000954e-05, 5.8070000000000344e-05, 5.759799999999898e-05, 5.7292000000000454e-05, 5.741700000000405e-05, 5.813899999999872e-05, 5.7556000000000274e-05, 5.761199999999855e-05, 5.784799999999923e-05, 5.731900000000012e-05, 5.78749999999989e-05, 5.7652000000005255e-05, 5.812499999999915e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.296" endtime="20201112 12:27:25.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.284" endtime="20201112 12:27:25.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.312" endtime="20201112 12:27:25.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.321" endtime="20201112 12:27:25.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.316" endtime="20201112 12:27:25.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.308" endtime="20201112 12:27:25.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.862" endtime="20201112 12:27:25.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.860" endtime="20201112 12:27:25.347"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.369" endtime="20201112 12:27:25.390"></status>
</kw>
<msg timestamp="20201112 12:27:25.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.366" endtime="20201112 12:27:25.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.393" endtime="20201112 12:27:25.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.400" endtime="20201112 12:27:25.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.359" endtime="20201112 12:27:25.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.353" endtime="20201112 12:27:25.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.423" endtime="20201112 12:27:25.758"></status>
</kw>
<msg timestamp="20201112 12:27:25.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042065667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042124569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.420" endtime="20201112 12:27:25.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042065667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042124569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.767" endtime="20201112 12:27:25.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.786" endtime="20201112 12:27:25.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.413" endtime="20201112 12:27:25.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.408" endtime="20201112 12:27:25.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.805" level="INFO">${RESULT} = [{'time': 0.042124569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8901999999999566e-05, 'source_diff': 5.8901999999999566e-05}, {'time': 0.042192583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:25.796" endtime="20201112 12:27:25.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.835" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.807" endtime="20201112 12:27:25.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.846" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.844" endtime="20201112 12:27:25.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.852" level="INFO">VALUE: [5.8901999999999566e-05, 5.912500000000015e-05, 5.880499999999511e-05, 5.8429999999998206e-05, 5.8750000000003244e-05, 5.833300000000069e-05, 5.862499999999965e-05, 5.918099999999843e-05, 5.8722000000004104e-05, 5.8806000000001524e-05, 5.862499999999965e-05, 5.843099999999768e-05, 5.844499999999725e-05, 5.862499999999965e-05, 5.913899999999972e-05, 5.8750000000003244e-05, 5.858300000000094e-05, 5.8514000000002564e-05, 5.8806000000001524e-05, 5.881900000000162e-05, 5.904100000000273e-05, 5.9235999999997235e-05, 5.8514000000002564e-05, 5.8457999999997345e-05, 5.836099999999983e-05, 5.9207999999998095e-05, 5.8528000000002134e-05, 5.868099999999793e-05, 5.898699999999646e-05, 5.834700000000026e-05, 5.886100000000033e-05, 5.92629999999969e-05, 5.8693999999998026e-05, 5.859700000000051e-05, 5.911100000000058e-05, 5.9179999999998956e-05, 5.8971999999997415e-05, 5.8306000000001024e-05, 5.8805999999994585e-05, 5.868099999999793e-05, 5.913899999999972e-05, 5.862499999999965e-05, 5.915299999999929e-05, 5.8292000000001454e-05, 5.9014000000003064e-05, 5.847300000000333e-05, 5.868099999999793e-05, 5.89870000000034e-05, 5.85550000000018e-05, 5.862499999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.848" endtime="20201112 12:27:25.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.837" endtime="20201112 12:27:25.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.861" endtime="20201112 12:27:25.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.869" endtime="20201112 12:27:25.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.865" endtime="20201112 12:27:25.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.857" endtime="20201112 12:27:25.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.349" endtime="20201112 12:27:25.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.347" endtime="20201112 12:27:25.895"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.918" endtime="20201112 12:27:25.939"></status>
</kw>
<msg timestamp="20201112 12:27:25.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.915" endtime="20201112 12:27:25.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.942" endtime="20201112 12:27:25.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.949" endtime="20201112 12:27:25.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.907" endtime="20201112 12:27:25.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.902" endtime="20201112 12:27:25.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.972" endtime="20201112 12:27:26.305"></status>
</kw>
<msg timestamp="20201112 12:27:26.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041741583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.969" endtime="20201112 12:27:26.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041741583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.315" endtime="20201112 12:27:26.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.333" endtime="20201112 12:27:26.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.961" endtime="20201112 12:27:26.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.957" endtime="20201112 12:27:26.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.354" level="INFO">${RESULT} = [{'time': 0.041801639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0056000000002774e-05, 'source_diff': 6.0056000000002774e-05}, {'time': 0.041876653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:26.345" endtime="20201112 12:27:26.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.384" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.356" endtime="20201112 12:27:26.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.395" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.393" endtime="20201112 12:27:26.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.400" level="INFO">VALUE: [6.0056000000002774e-05, 5.9471999999997915e-05, 5.9805999999995585e-05, 5.990300000000004e-05, 6.011099999999464e-05, 5.988900000000047e-05, 5.947299999999739e-05, 5.936100000000083e-05, 5.9693999999999026e-05, 6.0235999999998235e-05, 5.9457999999998346e-05, 5.954100000000323e-05, 5.9693999999999026e-05, 5.9693999999999026e-05, 5.993099999999918e-05, 5.9999999999997555e-05, 6.0027999999996695e-05, 5.9971999999998415e-05, 5.9583999999994475e-05, 5.970900000000501e-05, 5.9735999999997735e-05, 6.0194999999999e-05, 5.936100000000083e-05, 5.930499999999561e-05, 6.011099999999464e-05, 5.9528000000003134e-05, 5.9943999999999276e-05, 6.0193999999999526e-05, 5.9264000000003314e-05, 6.0056000000002774e-05, 5.96949999999985e-05, 5.972299999999764e-05, 6.0207999999999096e-05, 6.0207999999999096e-05, 6.009700000000201e-05, 5.9792000000002954e-05, 5.98750000000009e-05, 5.9556000000002274e-05, 5.9485999999997485e-05, 5.981900000000262e-05, 6.011100000000158e-05, 5.983300000000219e-05, 5.954099999999629e-05, 5.9985999999997985e-05, 5.968099999999893e-05, 5.9986000000004924e-05, 6.012500000000115e-05, 5.9541999999995765e-05, 5.986099999999439e-05, 5.9971999999998415e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.397" endtime="20201112 12:27:26.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.386" endtime="20201112 12:27:26.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.410" endtime="20201112 12:27:26.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.418" endtime="20201112 12:27:26.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.414" endtime="20201112 12:27:26.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.405" endtime="20201112 12:27:26.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.897" endtime="20201112 12:27:26.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.896" endtime="20201112 12:27:26.444"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.467" endtime="20201112 12:27:26.488"></status>
</kw>
<msg timestamp="20201112 12:27:26.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.463" endtime="20201112 12:27:26.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.491" endtime="20201112 12:27:26.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.497" endtime="20201112 12:27:26.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.456" endtime="20201112 12:27:26.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.451" endtime="20201112 12:27:26.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.520" endtime="20201112 12:27:26.855"></status>
</kw>
<msg timestamp="20201112 12:27:26.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041659569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041719861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.517" endtime="20201112 12:27:26.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041659569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041719861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.864" endtime="20201112 12:27:26.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.883" endtime="20201112 12:27:26.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.510" endtime="20201112 12:27:26.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.505" endtime="20201112 12:27:26.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.902" level="INFO">${RESULT} = [{'time': 0.041719861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0291999999996515e-05, 'source_diff': 6.0291999999996515e-05}, {'time': 0.041796903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:26.893" endtime="20201112 12:27:26.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.932" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.904" endtime="20201112 12:27:26.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.943" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.941" endtime="20201112 12:27:26.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.948" level="INFO">VALUE: [6.0291999999996515e-05, 6.043100000000662e-05, 6.0735999999998735e-05, 6.066700000000036e-05, 6.088900000000147e-05, 6.12499999999988e-05, 6.1000000000005494e-05, 6.061100000000208e-05, 6.10699999999964e-05, 6.111100000000258e-05, 6.09159999999942e-05, 6.112499999999521e-05, 6.0957999999999846e-05, 6.0749999999998305e-05, 6.097299999999889e-05, 6.0443999999999776e-05, 6.077699999999797e-05, 6.0583999999995475e-05, 6.065300000000079e-05, 6.0957999999999846e-05, 6.0250000000004744e-05, 6.034699999999532e-05, 6.043099999999968e-05, 6.105499999999736e-05, 6.111200000000205e-05, 6.0763999999997875e-05, 6.111100000000258e-05, 6.080499999999711e-05, 6.0694000000000026e-05, 6.093100000000018e-05, 6.1000000000005494e-05, 6.0485999999998485e-05, 6.068099999999993e-05, 6.059699999999557e-05, 6.068099999999993e-05, 6.0514000000004564e-05, 6.112499999999521e-05, 6.090300000000104e-05, 6.043099999999968e-05, 6.0277999999996945e-05, 6.112500000000215e-05, 6.0916000000001136e-05, 6.122199999999967e-05, 6.1013999999998125e-05, 6.063900000000122e-05, 6.0471999999998916e-05, 6.034700000000226e-05, 6.0485999999998485e-05, 6.059700000000251e-05, 6.088900000000147e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.945" endtime="20201112 12:27:26.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.934" endtime="20201112 12:27:26.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.958" endtime="20201112 12:27:26.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.966" endtime="20201112 12:27:26.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.962" endtime="20201112 12:27:26.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.953" endtime="20201112 12:27:26.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.446" endtime="20201112 12:27:26.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.445" endtime="20201112 12:27:26.992"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.015" endtime="20201112 12:27:27.036"></status>
</kw>
<msg timestamp="20201112 12:27:27.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.011" endtime="20201112 12:27:27.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.039" endtime="20201112 12:27:27.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.045" endtime="20201112 12:27:27.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.004" endtime="20201112 12:27:27.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.998" endtime="20201112 12:27:27.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.069" endtime="20201112 12:27:27.402"></status>
</kw>
<msg timestamp="20201112 12:27:27.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042060597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042122556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.065" endtime="20201112 12:27:27.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042060597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042122556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.412" endtime="20201112 12:27:27.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.430" endtime="20201112 12:27:27.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.058" endtime="20201112 12:27:27.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.054" endtime="20201112 12:27:27.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.449" level="INFO">${RESULT} = [{'time': 0.042122556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195900000000032e-05, 'source_diff': 6.195900000000032e-05}, {'time': 0.042198583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.440" endtime="20201112 12:27:27.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.479" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:27.451" endtime="20201112 12:27:27.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.490" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.488" endtime="20201112 12:27:27.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.495" level="INFO">VALUE: [6.195900000000032e-05, 6.129099999999804e-05, 6.162500000000265e-05, 6.216600000000239e-05, 6.194400000000128e-05, 6.179199999999802e-05, 6.193100000000118e-05, 6.186100000000333e-05, 6.204199999999827e-05, 6.193100000000118e-05, 6.127799999999795e-05, 6.211199999999611e-05, 6.130600000000402e-05, 6.220900000000057e-05, 6.161099999999614e-05, 6.197200000000042e-05, 6.211099999999664e-05, 6.14300000000012e-05, 6.145800000000035e-05, 6.159699999999657e-05, 6.166600000000189e-05, 6.13750000000024e-05, 6.208399999999697e-05, 6.193099999999424e-05, 6.168100000000093e-05, 6.184800000000323e-05, 6.208400000000391e-05, 6.205599999999784e-05, 6.161099999999614e-05, 6.176399999999888e-05, 6.127799999999795e-05, 6.204099999999879e-05, 6.199999999999956e-05, 6.13750000000024e-05, 6.217999999999502e-05, 6.211100000000358e-05, 6.184699999999682e-05, 6.14029999999946e-05, 6.213900000000272e-05, 6.131899999999718e-05, 6.212500000000315e-05, 6.193100000000118e-05, 6.17499999999993e-05, 6.219400000000153e-05, 6.2195000000001e-05, 6.22499999999998e-05, 6.156899999999743e-05, 6.172200000000017e-05, 6.181900000000462e-05, 6.220799999999416e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.492" endtime="20201112 12:27:27.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.481" endtime="20201112 12:27:27.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.505" endtime="20201112 12:27:27.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.513" endtime="20201112 12:27:27.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.509" endtime="20201112 12:27:27.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.501" endtime="20201112 12:27:27.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.994" endtime="20201112 12:27:27.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.993" endtime="20201112 12:27:27.539"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.562" endtime="20201112 12:27:27.582"></status>
</kw>
<msg timestamp="20201112 12:27:27.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.559" endtime="20201112 12:27:27.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.586" endtime="20201112 12:27:27.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.592" endtime="20201112 12:27:27.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.552" endtime="20201112 12:27:27.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.546" endtime="20201112 12:27:27.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.615" endtime="20201112 12:27:27.952"></status>
</kw>
<msg timestamp="20201112 12:27:27.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041780181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.612" endtime="20201112 12:27:27.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041780181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.961" endtime="20201112 12:27:27.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.979" endtime="20201112 12:27:27.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.605" endtime="20201112 12:27:27.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.600" endtime="20201112 12:27:27.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.998" level="INFO">${RESULT} = [{'time': 0.041843486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.330499999999961e-05, 'source_diff': 6.330499999999961e-05}, {'time': 0.041926431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.989" endtime="20201112 12:27:27.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.001" endtime="20201112 12:27:28.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.040" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.037" endtime="20201112 12:27:28.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.045" level="INFO">VALUE: [6.330499999999961e-05, 6.28479999999973e-05, 6.298600000000099e-05, 6.27080000000016e-05, 6.233299999999775e-05, 6.236099999999689e-05, 6.279099999999954e-05, 6.270900000000107e-05, 6.284700000000476e-05, 6.266699999999542e-05, 6.291699999999567e-05, 6.288899999999653e-05, 6.268099999999499e-05, 6.327700000000047e-05, 6.300000000000056e-05, 6.23750000000034e-05, 6.311100000000458e-05, 6.266599999999595e-05, 6.256899999999843e-05, 6.273600000000074e-05, 6.281899999999868e-05, 6.269400000000203e-05, 6.316699999999592e-05, 6.230599999999809e-05, 6.23750000000034e-05, 6.259700000000451e-05, 6.313899999999678e-05, 6.293100000000218e-05, 6.322300000000114e-05, 6.261100000000408e-05, 6.286100000000433e-05, 6.247200000000092e-05, 6.292999999999577e-05, 6.27500000000003e-05, 6.280499999999911e-05, 6.240300000000254e-05, 6.281999999999816e-05, 6.277799999999945e-05, 6.261100000000408e-05, 6.319400000000253e-05, 6.251399999999963e-05, 6.245900000000082e-05, 6.24029999999956e-05, 6.279199999999902e-05, 6.236099999999689e-05, 6.255499999999886e-05, 6.319399999999559e-05, 6.279100000000648e-05, 6.229099999999904e-05, 6.272199999999423e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.042" endtime="20201112 12:27:28.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.031" endtime="20201112 12:27:28.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.055" endtime="20201112 12:27:28.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.063" endtime="20201112 12:27:28.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.059" endtime="20201112 12:27:28.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.050" endtime="20201112 12:27:28.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.541" endtime="20201112 12:27:28.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.540" endtime="20201112 12:27:28.089"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.112" endtime="20201112 12:27:28.133"></status>
</kw>
<msg timestamp="20201112 12:27:28.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.108" endtime="20201112 12:27:28.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.136" endtime="20201112 12:27:28.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.142" endtime="20201112 12:27:28.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.101" endtime="20201112 12:27:28.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.095" endtime="20201112 12:27:28.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.166" endtime="20201112 12:27:28.500"></status>
</kw>
<msg timestamp="20201112 12:27:28.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042163056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042227056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.162" endtime="20201112 12:27:28.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042163056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042227056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.509" endtime="20201112 12:27:28.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.518" endtime="20201112 12:27:28.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.155" endtime="20201112 12:27:28.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.150" endtime="20201112 12:27:28.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.528" level="INFO">${RESULT} = [{'time': 0.042227056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.400000000000156e-05, 'source_diff': 6.400000000000156e-05}, {'time': 0.042308069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:28.524" endtime="20201112 12:27:28.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.541" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.529" endtime="20201112 12:27:28.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.546" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.545" endtime="20201112 12:27:28.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.549" level="INFO">VALUE: [6.400000000000156e-05, 6.377699999999403e-05, 6.373600000000174e-05, 6.42080000000031e-05, 6.373600000000174e-05, 6.377800000000045e-05, 6.386099999999839e-05, 6.355599999999934e-05, 6.354199999999977e-05, 6.393099999999624e-05, 6.374999999999437e-05, 6.366699999999642e-05, 6.379200000000002e-05, 6.370799999999566e-05, 6.387499999999796e-05, 6.338899999999703e-05, 6.368099999999599e-05, 6.377700000000097e-05, 6.345799999999541e-05, 6.352700000000072e-05, 6.361100000000508e-05, 6.411099999999864e-05, 6.405599999999984e-05, 6.337499999999746e-05, 6.393100000000318e-05, 6.377800000000045e-05, 6.345900000000182e-05, 6.326400000000038e-05, 6.329199999999952e-05, 6.411099999999864e-05, 6.376400000000088e-05, 6.350000000000106e-05, 6.331899999999918e-05, 6.390300000000404e-05, 6.404100000000079e-05, 6.334700000000526e-05, 6.383299999999925e-05, 6.420899999999563e-05, 6.350000000000106e-05, 6.38750000000049e-05, 6.418100000000343e-05, 6.336099999999789e-05, 6.344499999999531e-05, 6.387499999999796e-05, 6.408399999999898e-05, 6.400000000000156e-05, 6.412499999999821e-05, 6.355499999999986e-05, 6.386099999999839e-05, 6.38750000000049e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.547" endtime="20201112 12:27:28.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.542" endtime="20201112 12:27:28.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.554" endtime="20201112 12:27:28.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.557" endtime="20201112 12:27:28.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.555" endtime="20201112 12:27:28.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.551" endtime="20201112 12:27:28.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.091" endtime="20201112 12:27:28.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.090" endtime="20201112 12:27:28.579"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.589" endtime="20201112 12:27:28.608"></status>
</kw>
<msg timestamp="20201112 12:27:28.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.588" endtime="20201112 12:27:28.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.609" endtime="20201112 12:27:28.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.613" endtime="20201112 12:27:28.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.585" endtime="20201112 12:27:28.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.582" endtime="20201112 12:27:28.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.637" endtime="20201112 12:27:28.971"></status>
</kw>
<msg timestamp="20201112 12:27:28.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024667694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024732917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.633" endtime="20201112 12:27:28.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024667694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024732917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.980" endtime="20201112 12:27:28.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.998" endtime="20201112 12:27:29.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.626" endtime="20201112 12:27:29.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.621" endtime="20201112 12:27:29.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.018" level="INFO">${RESULT} = [{'time': 0.024732917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.522299999999967e-05, 'source_diff': 6.522299999999967e-05}, {'time': 0.024808958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.009" endtime="20201112 12:27:29.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.048" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.020" endtime="20201112 12:27:29.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.059" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.056" endtime="20201112 12:27:29.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.064" level="INFO">VALUE: [6.522299999999967e-05, 6.465199999999838e-05, 6.515199999999888e-05, 6.44029999999976e-05, 6.452699999999825e-05, 6.49440000000008e-05, 6.468000000000099e-05, 6.495800000000038e-05, 6.511099999999964e-05, 6.449999999999859e-05, 6.494500000000028e-05, 6.434700000000279e-05, 6.516600000000192e-05, 6.473600000000274e-05, 6.445899999999935e-05, 6.437499999999846e-05, 6.486099999999939e-05, 6.490300000000157e-05, 6.459699999999957e-05, 6.433299999999975e-05, 6.450000000000206e-05, 6.479099999999807e-05, 6.512499999999921e-05, 6.473599999999927e-05, 6.511099999999964e-05, 6.52639999999989e-05, 6.448600000000249e-05, 6.516700000000139e-05, 6.495899999999985e-05, 6.433399999999923e-05, 6.513899999999878e-05, 6.498599999999952e-05, 6.484699999999982e-05, 6.493000000000124e-05, 6.434699999999932e-05, 6.436099999999889e-05, 6.524999999999934e-05, 6.442999999999727e-05, 6.445899999999935e-05, 6.511099999999964e-05, 6.474999999999884e-05, 6.52220000000002e-05, 6.47500000000023e-05, 6.486200000000233e-05, 6.509799999999955e-05, 6.463899999999828e-05, 6.47630000000024e-05, 6.469400000000056e-05, 6.437500000000193e-05, 6.493000000000124e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.061" endtime="20201112 12:27:29.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.050" endtime="20201112 12:27:29.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.074" endtime="20201112 12:27:29.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.082" endtime="20201112 12:27:29.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.077" endtime="20201112 12:27:29.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.069" endtime="20201112 12:27:29.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.580" endtime="20201112 12:27:29.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.579" endtime="20201112 12:27:29.108"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.130" endtime="20201112 12:27:29.152"></status>
</kw>
<msg timestamp="20201112 12:27:29.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.127" endtime="20201112 12:27:29.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.155" endtime="20201112 12:27:29.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.161" endtime="20201112 12:27:29.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.120" endtime="20201112 12:27:29.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.114" endtime="20201112 12:27:29.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.185" endtime="20201112 12:27:29.519"></status>
</kw>
<msg timestamp="20201112 12:27:29.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041842264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041907639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.181" endtime="20201112 12:27:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041842264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041907639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.528" endtime="20201112 12:27:29.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.547" endtime="20201112 12:27:29.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.174" endtime="20201112 12:27:29.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.169" endtime="20201112 12:27:29.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.566" level="INFO">${RESULT} = [{'time': 0.041907639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.537499999999946e-05, 'source_diff': 6.537499999999946e-05}, {'time': 0.041983667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.557" endtime="20201112 12:27:29.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.568" endtime="20201112 12:27:29.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.607" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.605" endtime="20201112 12:27:29.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.612" level="INFO">VALUE: [6.537499999999946e-05, 6.60280000000027e-05, 6.548599999999655e-05, 6.559800000000005e-05, 6.568099999999799e-05, 6.548700000000296e-05, 6.626299999999696e-05, 6.537499999999946e-05, 6.570799999999766e-05, 6.540300000000554e-05, 6.548599999999655e-05, 6.576400000000288e-05, 6.609700000000107e-05, 6.561100000000014e-05, 6.552799999999526e-05, 6.57779999999955e-05, 6.534700000000032e-05, 6.538899999999903e-05, 6.538799999999956e-05, 6.550000000000306e-05, 6.536099999999989e-05, 6.599999999999662e-05, 6.599999999999662e-05, 6.572199999999723e-05, 6.536099999999989e-05, 6.57359999999968e-05, 6.559699999999363e-05, 6.616699999999892e-05, 6.537499999999946e-05, 6.551399999999569e-05, 6.562499999999971e-05, 6.53750000000064e-05, 6.622300000000414e-05, 6.54159999999987e-05, 6.555499999999492e-05, 6.609700000000107e-05, 6.569399999999809e-05, 6.595799999999791e-05, 6.619399999999859e-05, 6.591699999999867e-05, 6.551400000000263e-05, 6.555600000000134e-05, 6.5277999999995e-05, 6.611200000000012e-05, 6.566700000000536e-05, 6.594499999999781e-05, 6.59159999999992e-05, 6.544499999999731e-05, 6.563899999999928e-05, 6.551300000000315e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.609" endtime="20201112 12:27:29.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.598" endtime="20201112 12:27:29.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.622" endtime="20201112 12:27:29.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.630" endtime="20201112 12:27:29.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.626" endtime="20201112 12:27:29.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.617" endtime="20201112 12:27:29.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.110" endtime="20201112 12:27:29.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.109" endtime="20201112 12:27:29.656"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.679" endtime="20201112 12:27:29.700"></status>
</kw>
<msg timestamp="20201112 12:27:29.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.676" endtime="20201112 12:27:29.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.703" endtime="20201112 12:27:29.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.709" endtime="20201112 12:27:29.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.668" endtime="20201112 12:27:29.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.663" endtime="20201112 12:27:29.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.734" endtime="20201112 12:27:30.068"></status>
</kw>
<msg timestamp="20201112 12:27:30.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04204325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042109556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:29.731" endtime="20201112 12:27:30.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04204325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042109556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:30.078" endtime="20201112 12:27:30.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.096" endtime="20201112 12:27:30.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.723" endtime="20201112 12:27:30.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.718" endtime="20201112 12:27:30.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.115" level="INFO">${RESULT} = [{'time': 0.042109556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.630600000000209e-05, 'source_diff': 6.630600000000209e-05}, {'time': 0.042184597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.106" endtime="20201112 12:27:30.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.145" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.117" endtime="20201112 12:27:30.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.156" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.154" endtime="20201112 12:27:30.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.161" level="INFO">VALUE: [6.630600000000209e-05, 6.636099999999395e-05, 6.715300000000035e-05, 6.711100000000164e-05, 6.662500000000071e-05, 6.670799999999866e-05, 6.720899999999863e-05, 6.65559999999954e-05, 6.668099999999899e-05, 6.684700000000182e-05, 6.626400000000338e-05, 6.672199999999823e-05, 6.687500000000096e-05, 6.627800000000295e-05, 6.669399999999909e-05, 6.638800000000056e-05, 6.722199999999873e-05, 6.686100000000139e-05, 6.726400000000438e-05, 6.659699999999463e-05, 6.654199999999583e-05, 6.716699999999992e-05, 6.6583000000002e-05, 6.638900000000003e-05, 6.680600000000259e-05, 6.713900000000078e-05, 6.72500000000048e-05, 6.677799999999651e-05, 6.686200000000087e-05, 6.695799999999891e-05, 6.636100000000089e-05, 6.718000000000002e-05, 6.648599999999755e-05, 6.687500000000096e-05, 6.669399999999909e-05, 6.659699999999463e-05, 6.679100000000354e-05, 6.693099999999924e-05, 6.630600000000209e-05, 6.718099999999949e-05, 6.680600000000259e-05, 6.651399999999669e-05, 6.694499999999881e-05, 6.668099999999899e-05, 6.711100000000164e-05, 6.669399999999909e-05, 6.637500000000046e-05, 6.698599999999805e-05, 6.726400000000438e-05, 6.722199999999873e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.158" endtime="20201112 12:27:30.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.147" endtime="20201112 12:27:30.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.171" endtime="20201112 12:27:30.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.179" endtime="20201112 12:27:30.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.175" endtime="20201112 12:27:30.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.166" endtime="20201112 12:27:30.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.658" endtime="20201112 12:27:30.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.657" endtime="20201112 12:27:30.205"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.228" endtime="20201112 12:27:30.249"></status>
</kw>
<msg timestamp="20201112 12:27:30.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.225" endtime="20201112 12:27:30.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.253" endtime="20201112 12:27:30.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.259" endtime="20201112 12:27:30.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.217" endtime="20201112 12:27:30.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.212" endtime="20201112 12:27:30.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.282" endtime="20201112 12:27:30.616"></status>
</kw>
<msg timestamp="20201112 12:27:30.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042090306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042158431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.279" endtime="20201112 12:27:30.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042090306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042158431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.625" endtime="20201112 12:27:30.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.644" endtime="20201112 12:27:30.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.272" endtime="20201112 12:27:30.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.267" endtime="20201112 12:27:30.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.665" level="INFO">${RESULT} = [{'time': 0.042158431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.812500000000221e-05, 'source_diff': 6.812500000000221e-05}, {'time': 0.042235444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.656" endtime="20201112 12:27:30.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.695" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.667" endtime="20201112 12:27:30.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.706" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.703" endtime="20201112 12:27:30.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.711" level="INFO">VALUE: [6.812500000000221e-05, 6.787499999999502e-05, 6.812499999999527e-05, 6.77359999999988e-05, 6.797199999999948e-05, 6.824999999999887e-05, 6.727799999999701e-05, 6.762500000000171e-05, 6.816700000000092e-05, 6.80979999999956e-05, 6.780600000000359e-05, 6.777799999999751e-05, 6.779199999999708e-05, 6.783399999999579e-05, 6.797199999999948e-05, 6.736100000000189e-05, 6.736100000000189e-05, 6.783299999999631e-05, 6.801400000000513e-05, 6.818100000000049e-05, 6.749999999999812e-05, 6.795799999999991e-05, 6.736099999999495e-05, 6.795799999999991e-05, 6.769400000000009e-05, 6.826399999999844e-05, 6.801399999999819e-05, 6.75979999999951e-05, 6.765300000000085e-05, 6.811100000000264e-05, 6.749999999999812e-05, 6.780599999999665e-05, 6.794400000000034e-05, 6.744399999999984e-05, 6.752799999999726e-05, 6.791700000000067e-05, 6.791700000000067e-05, 6.788900000000153e-05, 6.761100000000214e-05, 6.748599999999855e-05, 6.787500000000196e-05, 6.763900000000128e-05, 6.815300000000135e-05, 6.812500000000221e-05, 6.818000000000102e-05, 6.77500000000053e-05, 6.783300000000325e-05, 6.780499999999717e-05, 6.730499999999667e-05, 6.743099999999974e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.708" endtime="20201112 12:27:30.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.697" endtime="20201112 12:27:30.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.725" endtime="20201112 12:27:30.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.733" endtime="20201112 12:27:30.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.728" endtime="20201112 12:27:30.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.720" endtime="20201112 12:27:30.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.207" endtime="20201112 12:27:30.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.206" endtime="20201112 12:27:30.759"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.783" endtime="20201112 12:27:30.804"></status>
</kw>
<msg timestamp="20201112 12:27:30.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.780" endtime="20201112 12:27:30.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.807" endtime="20201112 12:27:30.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.814" endtime="20201112 12:27:30.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.772" endtime="20201112 12:27:30.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.766" endtime="20201112 12:27:30.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.837" endtime="20201112 12:27:31.171"></status>
</kw>
<msg timestamp="20201112 12:27:31.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043575667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043644375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.834" endtime="20201112 12:27:31.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043575667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043644375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.180" endtime="20201112 12:27:31.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.199" endtime="20201112 12:27:31.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.827" endtime="20201112 12:27:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.822" endtime="20201112 12:27:31.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.218" level="INFO">${RESULT} = [{'time': 0.043644375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.870800000000066e-05, 'source_diff': 6.870800000000066e-05}, {'time': 0.043721417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.209" endtime="20201112 12:27:31.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.248" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.220" endtime="20201112 12:27:31.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.259" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.256" endtime="20201112 12:27:31.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.264" level="INFO">VALUE: [6.870800000000066e-05, 6.898600000000005e-05, 6.888900000000253e-05, 6.884700000000382e-05, 6.868100000000099e-05, 6.836099999999595e-05, 6.920900000000063e-05, 6.899999999999962e-05, 6.887500000000296e-05, 6.843000000000127e-05, 6.858299999999706e-05, 6.901400000000613e-05, 6.869500000000056e-05, 6.912499999999627e-05, 6.854199999999783e-05, 6.874999999999937e-05, 6.879199999999808e-05, 6.836200000000237e-05, 6.870900000000013e-05, 6.894499999999387e-05, 6.901299999999971e-05, 6.918000000000202e-05, 6.861100000000314e-05, 6.883299999999731e-05, 6.912500000000321e-05, 6.862500000000271e-05, 6.902799999999876e-05, 6.87500000000063e-05, 6.874999999999937e-05, 6.876399999999894e-05, 6.870800000000066e-05, 6.92360000000003e-05, 6.829199999999758e-05, 6.851399999999869e-05, 6.897299999999995e-05, 6.841700000000117e-05, 6.843000000000127e-05, 6.838900000000203e-05, 6.924999999999987e-05, 6.895800000000091e-05, 6.849999999999912e-05, 6.891700000000167e-05, 6.844500000000031e-05, 6.918100000000149e-05, 6.918100000000149e-05, 6.862500000000271e-05, 6.869500000000056e-05, 6.8583000000004e-05, 6.866700000000142e-05, 6.868000000000152e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.261" endtime="20201112 12:27:31.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.249" endtime="20201112 12:27:31.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.274" endtime="20201112 12:27:31.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.282" endtime="20201112 12:27:31.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.278" endtime="20201112 12:27:31.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.269" endtime="20201112 12:27:31.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.761" endtime="20201112 12:27:31.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.760" endtime="20201112 12:27:31.308"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.331" endtime="20201112 12:27:31.352"></status>
</kw>
<msg timestamp="20201112 12:27:31.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.327" endtime="20201112 12:27:31.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.355" endtime="20201112 12:27:31.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.361" endtime="20201112 12:27:31.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.320" endtime="20201112 12:27:31.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.314" endtime="20201112 12:27:31.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.385" endtime="20201112 12:27:31.719"></status>
</kw>
<msg timestamp="20201112 12:27:31.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042013333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.382" endtime="20201112 12:27:31.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042013333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.728" endtime="20201112 12:27:31.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.747" endtime="20201112 12:27:31.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.374" endtime="20201112 12:27:31.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.370" endtime="20201112 12:27:31.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.766" level="INFO">${RESULT} = [{'time': 0.042013333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.004099999999985e-05, 'source_diff': 7.004099999999985e-05}, {'time': 0.042092333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.757" endtime="20201112 12:27:31.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.796" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.768" endtime="20201112 12:27:31.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.808" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.806" endtime="20201112 12:27:31.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.814" level="INFO">VALUE: [7.004099999999985e-05, 6.948600000000055e-05, 6.980599999999865e-05, 6.97360000000008e-05, 6.995900000000138e-05, 6.983299999999831e-05, 7.015199999999694e-05, 6.980600000000559e-05, 6.94309999999948e-05, 7.01109999999977e-05, 7.02910000000001e-05, 6.986100000000439e-05, 7.015299999999641e-05, 6.97360000000008e-05, 6.936100000000389e-05, 6.950000000000012e-05, 6.984699999999788e-05, 6.961100000000414e-05, 6.998600000000105e-05, 6.968100000000199e-05, 7.002799999999976e-05, 6.936199999999643e-05, 6.951399999999969e-05, 6.980599999999865e-05, 6.96109999999972e-05, 7.027700000000053e-05, 6.927799999999901e-05, 7.01109999999977e-05, 6.99439999999954e-05, 7.018000000000302e-05, 7.020800000000216e-05, 6.956999999999797e-05, 7.005499999999942e-05, 6.952799999999926e-05, 7.018100000000249e-05, 6.959699999999763e-05, 6.933399999999729e-05, 6.926399999999944e-05, 6.976399999999994e-05, 6.95559999999984e-05, 6.929200000000552e-05, 6.934699999999738e-05, 6.972200000000123e-05, 6.975000000000037e-05, 6.986099999999745e-05, 6.934699999999738e-05, 6.968100000000199e-05, 7.022200000000173e-05, 7.025000000000087e-05, 6.993100000000224e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.811" endtime="20201112 12:27:31.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.798" endtime="20201112 12:27:31.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.823" endtime="20201112 12:27:31.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.832" endtime="20201112 12:27:31.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.827" endtime="20201112 12:27:31.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.819" endtime="20201112 12:27:31.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.310" endtime="20201112 12:27:31.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.309" endtime="20201112 12:27:31.858"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.881" endtime="20201112 12:27:31.902"></status>
</kw>
<msg timestamp="20201112 12:27:31.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.877" endtime="20201112 12:27:31.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.906" endtime="20201112 12:27:31.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.912" endtime="20201112 12:27:31.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.870" endtime="20201112 12:27:31.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.864" endtime="20201112 12:27:31.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.935" endtime="20201112 12:27:32.254"></status>
</kw>
<msg timestamp="20201112 12:27:32.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042125681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.932" endtime="20201112 12:27:32.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042125681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.264" endtime="20201112 12:27:32.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.282" endtime="20201112 12:27:32.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.925" endtime="20201112 12:27:32.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.920" endtime="20201112 12:27:32.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.301" level="INFO">${RESULT} = [{'time': 0.042125681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.123699999999483e-05, 'source_diff': 7.123699999999483e-05}, {'time': 0.042210667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.292" endtime="20201112 12:27:32.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.331" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.303" endtime="20201112 12:27:32.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.342" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.340" endtime="20201112 12:27:32.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.348" level="INFO">VALUE: [7.123699999999483e-05, 7.070900000000213e-05, 7.055499999999992e-05, 7.059699999999863e-05, 7.117999999999708e-05, 7.059699999999863e-05, 7.104100000000085e-05, 7.070800000000266e-05, 7.084699999999888e-05, 7.029199999999958e-05, 7.069499999999562e-05, 7.065300000000385e-05, 7.067999999999658e-05, 7.075000000000137e-05, 7.034799999999786e-05, 7.050000000000112e-05, 7.069400000000309e-05, 7.036199999999743e-05, 7.090199999999769e-05, 7.093000000000377e-05, 7.093000000000377e-05, 7.074999999999443e-05, 7.11109999999987e-05, 7.031899999999924e-05, 7.113899999999784e-05, 7.031999999999872e-05, 7.062499999999777e-05, 7.095900000000238e-05, 7.044499999999537e-05, 7.094499999999587e-05, 7.115199999999794e-05, 7.037500000000446e-05, 7.034699999999838e-05, 7.06109999999982e-05, 7.112500000000521e-05, 7.059699999999863e-05, 7.063899999999734e-05, 7.075000000000137e-05, 7.086099999999845e-05, 7.109699999999913e-05, 7.101400000000119e-05, 7.084799999999836e-05, 7.032000000000566e-05, 7.065299999999691e-05, 7.072200000000223e-05, 7.063900000000428e-05, 7.104100000000085e-05, 7.07360000000018e-05, 7.120799999999622e-05, 7.052800000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.345" endtime="20201112 12:27:32.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.333" endtime="20201112 12:27:32.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.357" endtime="20201112 12:27:32.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.366" endtime="20201112 12:27:32.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.361" endtime="20201112 12:27:32.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.353" endtime="20201112 12:27:32.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.860" endtime="20201112 12:27:32.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.859" endtime="20201112 12:27:32.392"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.415" endtime="20201112 12:27:32.436"></status>
</kw>
<msg timestamp="20201112 12:27:32.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.411" endtime="20201112 12:27:32.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.440" endtime="20201112 12:27:32.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.446" endtime="20201112 12:27:32.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.404" endtime="20201112 12:27:32.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.398" endtime="20201112 12:27:32.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.469" endtime="20201112 12:27:32.804"></status>
</kw>
<msg timestamp="20201112 12:27:32.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04206975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042141944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:32.466" endtime="20201112 12:27:32.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04206975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042141944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:32.814" endtime="20201112 12:27:32.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.833" endtime="20201112 12:27:32.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.459" endtime="20201112 12:27:32.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.454" endtime="20201112 12:27:32.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.855" level="INFO">${RESULT} = [{'time': 0.042141944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.219399999999765e-05, 'source_diff': 7.219399999999765e-05}, {'time': 0.042222931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.846" endtime="20201112 12:27:32.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.885" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.857" endtime="20201112 12:27:32.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.896" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.893" endtime="20201112 12:27:32.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.901" level="INFO">VALUE: [7.219399999999765e-05, 7.126400000000144e-05, 7.12360000000023e-05, 7.17910000000016e-05, 7.211100000000664e-05, 7.17910000000016e-05, 7.188899999999859e-05, 7.138900000000503e-05, 7.134699999999938e-05, 7.149999999999518e-05, 7.133399999999929e-05, 7.184699999999988e-05, 7.159799999999911e-05, 7.184699999999988e-05, 7.19309999999973e-05, 7.158300000000006e-05, 7.127700000000153e-05, 7.205500000000142e-05, 7.134699999999938e-05, 7.226400000000244e-05, 7.193100000000424e-05, 7.17360000000028e-05, 7.190299999999816e-05, 7.14309999999968e-05, 7.220800000000416e-05, 7.180600000000065e-05, 7.17230000000027e-05, 7.170799999999672e-05, 7.209700000000013e-05, 7.180499999999423e-05, 7.137499999999852e-05, 7.187499999999902e-05, 7.201400000000219e-05, 7.21109999999997e-05, 7.162499999999877e-05, 7.224999999999593e-05, 7.150000000000212e-05, 7.126400000000144e-05, 7.218100000000449e-05, 7.220899999999669e-05, 7.184699999999988e-05, 7.174999999999543e-05, 7.170800000000366e-05, 7.166599999999801e-05, 7.219399999999765e-05, 7.19439999999974e-05, 7.19439999999974e-05, 7.202800000000176e-05, 7.133399999999929e-05, 7.219499999999712e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.898" endtime="20201112 12:27:32.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.886" endtime="20201112 12:27:32.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.911" endtime="20201112 12:27:32.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.919" endtime="20201112 12:27:32.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.915" endtime="20201112 12:27:32.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.906" endtime="20201112 12:27:32.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.394" endtime="20201112 12:27:32.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.393" endtime="20201112 12:27:32.946"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.968" endtime="20201112 12:27:32.990"></status>
</kw>
<msg timestamp="20201112 12:27:32.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.965" endtime="20201112 12:27:32.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.994" endtime="20201112 12:27:32.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.000" endtime="20201112 12:27:33.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.958" endtime="20201112 12:27:33.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.952" endtime="20201112 12:27:33.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.024" endtime="20201112 12:27:33.363"></status>
</kw>
<msg timestamp="20201112 12:27:33.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042635847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042708347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.020" endtime="20201112 12:27:33.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042635847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042708347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.372" endtime="20201112 12:27:33.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.391" endtime="20201112 12:27:33.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.013" endtime="20201112 12:27:33.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.008" endtime="20201112 12:27:33.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.410" level="INFO">${RESULT} = [{'time': 0.042708347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-05, 'source_diff': 7.250000000000312e-05}, {'time': 0.042800375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.401" endtime="20201112 12:27:33.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:33.412" endtime="20201112 12:27:33.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.452" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.449" endtime="20201112 12:27:33.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.457" level="INFO">VALUE: [7.250000000000312e-05, 7.248600000000355e-05, 7.266699999999848e-05, 7.245800000000441e-05, 7.320899999999769e-05, 7.287500000000002e-05, 7.234799999999986e-05, 7.24309999999978e-05, 7.267999999999858e-05, 7.277700000000303e-05, 7.25969999999937e-05, 7.241599999999876e-05, 7.32639999999965e-05, 7.320800000000516e-05, 7.277800000000251e-05, 7.241699999999823e-05, 7.27360000000038e-05, 7.237499999999952e-05, 7.29309999999983e-05, 7.302800000000276e-05, 7.250000000000312e-05, 7.262499999999977e-05, 7.27360000000038e-05, 7.299999999999668e-05, 7.254100000000235e-05, 7.269399999999815e-05, 7.31110000000007e-05, 7.243000000000527e-05, 7.277799999999557e-05, 7.279199999999514e-05, 7.243100000000474e-05, 7.230599999999421e-05, 7.274999999999643e-05, 7.237499999999952e-05, 7.272200000000423e-05, 7.247200000000398e-05, 7.229099999999516e-05, 7.237499999999952e-05, 7.291599999999926e-05, 7.262499999999977e-05, 7.316699999999898e-05, 7.308299999999462e-05, 7.284700000000088e-05, 7.280600000000165e-05, 7.297299999999701e-05, 7.319500000000506e-05, 7.302800000000276e-05, 7.236099999999995e-05, 7.286100000000045e-05, 7.291599999999926e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.454" endtime="20201112 12:27:33.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.442" endtime="20201112 12:27:33.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.467" endtime="20201112 12:27:33.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.476" endtime="20201112 12:27:33.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.471" endtime="20201112 12:27:33.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.463" endtime="20201112 12:27:33.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.948" endtime="20201112 12:27:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.947" endtime="20201112 12:27:33.503"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.528" endtime="20201112 12:27:33.550"></status>
</kw>
<msg timestamp="20201112 12:27:33.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.525" endtime="20201112 12:27:33.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.554" endtime="20201112 12:27:33.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.560" endtime="20201112 12:27:33.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.518" endtime="20201112 12:27:33.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.511" endtime="20201112 12:27:33.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.584" endtime="20201112 12:27:33.920"></status>
</kw>
<msg timestamp="20201112 12:27:33.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046589097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046662417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.580" endtime="20201112 12:27:33.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046589097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046662417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.929" endtime="20201112 12:27:33.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.948" endtime="20201112 12:27:33.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.573" endtime="20201112 12:27:33.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.568" endtime="20201112 12:27:33.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.967" level="INFO">${RESULT} = [{'time': 0.046662417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.331999999999478e-05, 'source_diff': 7.331999999999478e-05}, {'time': 0.046754458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.958" endtime="20201112 12:27:33.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.997" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:33.969" endtime="20201112 12:27:33.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.008" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.006" endtime="20201112 12:27:34.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.014" level="INFO">VALUE: [7.331999999999478e-05, 7.336100000000095e-05, 7.390300000000016e-05, 7.377799999999657e-05, 7.366699999999948e-05, 7.348600000000455e-05, 7.383400000000179e-05, 7.401300000000471e-05, 7.35969999999947e-05, 7.334700000000138e-05, 7.426400000000444e-05, 7.369399999999915e-05, 7.336100000000095e-05, 7.35560000000024e-05, 7.395799999999897e-05, 7.336200000000043e-05, 7.390300000000016e-05, 7.422299999999826e-05, 7.344499999999837e-05, 7.419399999999965e-05, 7.405500000000342e-05, 7.41110000000017e-05, 7.34439999999989e-05, 7.338900000000009e-05, 7.372199999999829e-05, 7.397299999999801e-05, 7.384700000000188e-05, 7.379200000000308e-05, 7.419499999999912e-05, 7.337500000000052e-05, 7.352800000000326e-05, 7.392999999999983e-05, 7.393000000000677e-05, 7.337500000000052e-05, 7.326300000000396e-05, 7.352699999999684e-05, 7.32910000000031e-05, 7.336099999999401e-05, 7.358300000000206e-05, 7.418100000000649e-05, 7.344499999999837e-05, 7.350000000000412e-05, 7.368099999999905e-05, 7.379200000000308e-05, 7.425000000000487e-05, 7.409700000000213e-05, 7.334700000000138e-05, 7.390300000000016e-05, 7.338900000000009e-05, 7.409700000000213e-05]</msg>
<status status="PASS" starttime="20201112 12:27:34.011" endtime="20201112 12:27:34.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.999" endtime="20201112 12:27:34.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.023" endtime="20201112 12:27:34.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.032" endtime="20201112 12:27:34.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.027" endtime="20201112 12:27:34.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.019" endtime="20201112 12:27:34.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.506" endtime="20201112 12:27:34.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.504" endtime="20201112 12:27:34.058"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.080" endtime="20201112 12:27:34.102"></status>
</kw>
<msg timestamp="20201112 12:27:34.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.077" endtime="20201112 12:27:34.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.106" endtime="20201112 12:27:34.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.112" endtime="20201112 12:27:34.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.070" endtime="20201112 12:27:34.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.064" endtime="20201112 12:27:34.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.135" endtime="20201112 12:27:34.471"></status>
</kw>
<msg timestamp="20201112 12:27:34.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041981097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042055583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.132" endtime="20201112 12:27:34.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041981097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042055583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.480" endtime="20201112 12:27:34.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.498" endtime="20201112 12:27:34.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.125" endtime="20201112 12:27:34.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.120" endtime="20201112 12:27:34.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.518" level="INFO">${RESULT} = [{'time': 0.042055583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.448599999999861e-05, 'source_diff': 7.448599999999861e-05}, {'time': 0.042146625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:34.509" endtime="20201112 12:27:34.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.547" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:34.520" endtime="20201112 12:27:34.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.558" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.556" endtime="20201112 12:27:34.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.564" level="INFO">VALUE: [7.448599999999861e-05, 7.484700000000288e-05, 7.430499999999673e-05, 7.46110000000022e-05, 7.511099999999576e-05, 7.449999999999818e-05, 7.494499999999987e-05, 7.498599999999911e-05, 7.501399999999825e-05, 7.445900000000588e-05, 7.467999999999364e-05, 7.466600000000101e-05, 7.436100000000195e-05, 7.493000000000083e-05, 7.430600000000315e-05, 7.524999999999893e-05, 7.499999999999868e-05, 7.518100000000055e-05, 7.479199999999714e-05, 7.452800000000426e-05, 7.468000000000058e-05, 7.459799999999517e-05, 7.474999999999843e-05, 7.45969999999957e-05, 7.437500000000152e-05, 7.513900000000184e-05, 7.487500000000202e-05, 7.520799999999328e-05, 7.494499999999987e-05, 7.499999999999868e-05, 7.452800000000426e-05, 7.472199999999929e-05, 7.49310000000003e-05, 7.518100000000055e-05, 7.431999999999578e-05, 7.462500000000177e-05, 7.504200000000433e-05, 7.469400000000015e-05, 7.513900000000184e-05, 7.466600000000101e-05, 7.477799999999757e-05, 7.512500000000227e-05, 7.468100000000005e-05, 7.473599999999886e-05, 7.481999999999628e-05, 7.488800000000212e-05, 7.504199999999739e-05, 7.42639999999975e-05, 7.470899999999919e-05, 7.499999999999868e-05]</msg>
<status status="PASS" starttime="20201112 12:27:34.561" endtime="20201112 12:27:34.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.549" endtime="20201112 12:27:34.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.574" endtime="20201112 12:27:34.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.582" endtime="20201112 12:27:34.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.577" endtime="20201112 12:27:34.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.569" endtime="20201112 12:27:34.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.060" endtime="20201112 12:27:34.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.058" endtime="20201112 12:27:34.608"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.631" endtime="20201112 12:27:34.653"></status>
</kw>
<msg timestamp="20201112 12:27:34.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.627" endtime="20201112 12:27:34.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.656" endtime="20201112 12:27:34.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.662" endtime="20201112 12:27:34.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.620" endtime="20201112 12:27:34.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.614" endtime="20201112 12:27:34.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.686" endtime="20201112 12:27:35.021"></status>
</kw>
<msg timestamp="20201112 12:27:35.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042437083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042512389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.682" endtime="20201112 12:27:35.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042437083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042512389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.030" endtime="20201112 12:27:35.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.049" endtime="20201112 12:27:35.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.675" endtime="20201112 12:27:35.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.670" endtime="20201112 12:27:35.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.070" level="INFO">${RESULT} = [{'time': 0.042512389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.530599999999721e-05, 'source_diff': 7.530599999999721e-05}, {'time': 0.042601417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:35.061" endtime="20201112 12:27:35.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.099" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:35.072" endtime="20201112 12:27:35.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.111" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.108" endtime="20201112 12:27:35.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.116" level="INFO">VALUE: [7.530599999999721e-05, 7.534800000000286e-05, 7.558299999999712e-05, 7.581999999999728e-05, 7.593000000000183e-05, 7.531999999999678e-05, 7.616700000000198e-05, 7.530499999999773e-05, 7.604099999999892e-05, 7.54310000000008e-05, 7.555599999999746e-05, 7.527799999999807e-05, 7.58890000000026e-05, 7.583299999999737e-05, 7.54310000000008e-05, 7.533400000000329e-05, 7.530599999999721e-05, 7.595900000000044e-05, 7.597300000000001e-05, 7.577799999999857e-05, 7.574999999999943e-05, 7.563900000000234e-05, 7.616600000000251e-05, 7.53890000000021e-05, 7.602799999999882e-05, 7.624999999999993e-05, 7.554199999999789e-05, 7.619500000000112e-05, 7.579200000000508e-05, 7.59310000000013e-05, 7.60560000000049e-05, 7.572299999999976e-05, 7.565200000000244e-05, 7.580500000000517e-05, 7.52769999999986e-05, 7.59440000000014e-05, 7.537499999999558e-05, 7.537500000000252e-05, 7.600000000000662e-05, 7.569500000000062e-05, 7.552799999999832e-05, 7.591700000000173e-05, 7.623600000000036e-05, 7.611099999999676e-05, 7.549999999999918e-05, 7.593099999999436e-05, 7.619400000000165e-05, 7.530499999999773e-05, 7.568000000000158e-05, 7.624999999999993e-05]</msg>
<status status="PASS" starttime="20201112 12:27:35.113" endtime="20201112 12:27:35.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.101" endtime="20201112 12:27:35.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.125" endtime="20201112 12:27:35.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.134" endtime="20201112 12:27:35.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.129" endtime="20201112 12:27:35.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.121" endtime="20201112 12:27:35.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.610" endtime="20201112 12:27:35.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.609" endtime="20201112 12:27:35.160"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.182" endtime="20201112 12:27:35.204"></status>
</kw>
<msg timestamp="20201112 12:27:35.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.179" endtime="20201112 12:27:35.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.207" endtime="20201112 12:27:35.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.214" endtime="20201112 12:27:35.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.172" endtime="20201112 12:27:35.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.166" endtime="20201112 12:27:35.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.237" endtime="20201112 12:27:35.529"></status>
</kw>
<msg timestamp="20201112 12:27:35.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042274917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042351375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.234" endtime="20201112 12:27:35.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042274917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042351375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.533" endtime="20201112 12:27:35.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.541" endtime="20201112 12:27:35.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.226" endtime="20201112 12:27:35.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.222" endtime="20201112 12:27:35.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.550" level="INFO">${RESULT} = [{'time': 0.042351375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.645799999999453e-05, 'source_diff': 7.645799999999453e-05}, {'time': 0.042439403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:35.546" endtime="20201112 12:27:35.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.564" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:35.551" endtime="20201112 12:27:35.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.569" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.568" endtime="20201112 12:27:35.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.572" level="INFO">VALUE: [7.645799999999453e-05, 7.64310000000018e-05, 7.652799999999932e-05, 7.679199999999914e-05, 7.673599999999392e-05, 7.630599999999821e-05, 7.713799999999743e-05, 7.629200000000558e-05, 7.700000000000068e-05, 7.66110000000042e-05, 7.651399999999975e-05, 7.648600000000061e-05, 7.637500000000352e-05, 7.675000000000043e-05, 7.719499999999518e-05, 7.668100000000205e-05, 7.65969999999977e-05, 7.722300000000126e-05, 7.651399999999975e-05, 7.709700000000513e-05, 7.675000000000043e-05, 7.725000000000093e-05, 7.723600000000136e-05, 7.661099999999726e-05, 7.688899999999665e-05, 7.708300000000556e-05, 7.70969999999982e-05, 7.66389999999964e-05, 7.666700000000248e-05, 7.68890000000036e-05, 7.700000000000068e-05, 7.719399999999571e-05, 7.654100000000635e-05, 7.648600000000061e-05, 7.701400000000025e-05, 7.64440000000019e-05, 7.656999999999803e-05, 7.719499999999518e-05, 7.702799999999982e-05, 7.673600000000086e-05, 7.633300000000481e-05, 7.669500000000162e-05, 7.629199999999864e-05, 7.698700000000058e-05, 7.636100000000395e-05, 7.708400000000504e-05, 7.723599999999442e-05, 7.672200000000129e-05, 7.693000000000283e-05, 7.720800000000222e-05]</msg>
<status status="PASS" starttime="20201112 12:27:35.570" endtime="20201112 12:27:35.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.565" endtime="20201112 12:27:35.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.576" endtime="20201112 12:27:35.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.580" endtime="20201112 12:27:35.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.578" endtime="20201112 12:27:35.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.574" endtime="20201112 12:27:35.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.162" endtime="20201112 12:27:35.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.161" endtime="20201112 12:27:35.602"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.612" endtime="20201112 12:27:35.631"></status>
</kw>
<msg timestamp="20201112 12:27:35.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.611" endtime="20201112 12:27:35.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.632" endtime="20201112 12:27:35.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.635" endtime="20201112 12:27:35.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.607" endtime="20201112 12:27:35.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.605" endtime="20201112 12:27:35.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.646" endtime="20201112 12:27:35.975"></status>
</kw>
<msg timestamp="20201112 12:27:35.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024888278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.645" endtime="20201112 12:27:35.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024888278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.984" endtime="20201112 12:27:36.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.003" endtime="20201112 12:27:36.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.642" endtime="20201112 12:27:36.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.639" endtime="20201112 12:27:36.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.022" level="INFO">${RESULT} = [{'time': 0.024888278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.788900000000112e-05, 'source_diff': 7.788900000000112e-05}, {'time': 0.024984292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.013" endtime="20201112 12:27:36.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.052" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.024" endtime="20201112 12:27:36.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.063" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.061" endtime="20201112 12:27:36.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.068" level="INFO">VALUE: [7.788900000000112e-05, 7.813900000000137e-05, 7.822300000000226e-05, 7.77779999999971e-05, 7.750000000000118e-05, 7.780500000000024e-05, 7.786099999999851e-05, 7.81389999999979e-05, 7.7457999999999e-05, 7.738900000000062e-05, 7.75830000000026e-05, 7.805599999999996e-05, 7.729199999999964e-05, 7.761100000000173e-05, 7.763900000000087e-05, 7.80129999999983e-05, 7.752800000000032e-05, 7.72770000000006e-05, 7.826399999999803e-05, 7.797200000000254e-05, 7.811100000000223e-05, 7.751400000000075e-05, 7.791700000000026e-05, 7.819499999999965e-05, 7.752800000000032e-05, 7.775000000000143e-05, 7.758400000000207e-05, 7.824999999999846e-05, 7.80969999999992e-05, 7.788799999999818e-05, 7.804099999999745e-05, 7.81389999999979e-05, 7.819400000000018e-05, 7.770799999999925e-05, 7.79449999999994e-05, 7.772199999999882e-05, 7.72640000000005e-05, 7.786099999999851e-05, 7.755599999999946e-05, 7.74310000000028e-05, 7.759700000000216e-05, 7.750000000000118e-05, 7.799999999999821e-05, 7.768000000000011e-05, 7.794399999999993e-05, 7.80969999999992e-05, 7.765300000000044e-05, 7.811099999999876e-05, 7.783299999999937e-05, 7.781999999999928e-05]</msg>
<status status="PASS" starttime="20201112 12:27:36.065" endtime="20201112 12:27:36.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.054" endtime="20201112 12:27:36.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.083" endtime="20201112 12:27:36.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.091" endtime="20201112 12:27:36.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.086" endtime="20201112 12:27:36.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.078" endtime="20201112 12:27:36.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.603" endtime="20201112 12:27:36.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.602" endtime="20201112 12:27:36.117"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.139" endtime="20201112 12:27:36.161"></status>
</kw>
<msg timestamp="20201112 12:27:36.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.136" endtime="20201112 12:27:36.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.164" endtime="20201112 12:27:36.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.170" endtime="20201112 12:27:36.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.129" endtime="20201112 12:27:36.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.123" endtime="20201112 12:27:36.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.194" endtime="20201112 12:27:36.529"></status>
</kw>
<msg timestamp="20201112 12:27:36.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041801264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041880556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.190" endtime="20201112 12:27:36.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041801264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041880556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.539" endtime="20201112 12:27:36.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.557" endtime="20201112 12:27:36.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.183" endtime="20201112 12:27:36.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.178" endtime="20201112 12:27:36.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.576" level="INFO">${RESULT} = [{'time': 0.041880556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929200000000164e-05, 'source_diff': 7.929200000000164e-05}, {'time': 0.041970542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.567" endtime="20201112 12:27:36.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.606" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.578" endtime="20201112 12:27:36.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.617" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.615" endtime="20201112 12:27:36.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.623" level="INFO">VALUE: [7.929200000000164e-05, 7.861099999999926e-05, 7.877800000000157e-05, 7.827799999999413e-05, 7.838799999999868e-05, 7.870800000000372e-05, 7.836099999999901e-05, 7.888899999999865e-05, 7.83049999999938e-05, 7.854200000000089e-05, 7.829200000000064e-05, 7.86389999999984e-05, 7.924999999999599e-05, 7.852800000000132e-05, 7.843000000000433e-05, 7.834799999999892e-05, 7.892999999999789e-05, 7.869399999999721e-05, 7.85969999999997e-05, 7.834699999999944e-05, 7.873599999999592e-05, 7.847200000000304e-05, 7.901400000000225e-05, 7.877799999999463e-05, 7.911099999999976e-05, 7.837499999999858e-05, 7.918099999999761e-05, 7.884699999999994e-05, 7.854200000000089e-05, 7.900000000000268e-05, 7.884699999999994e-05, 7.911099999999976e-05, 7.836099999999901e-05, 7.91389999999989e-05, 7.87919999999942e-05, 7.89169999999978e-05, 7.911099999999976e-05, 7.866700000000448e-05, 7.840200000000519e-05, 7.922300000000326e-05, 7.873599999999592e-05, 7.883300000000037e-05, 7.888899999999865e-05, 7.876399999999506e-05, 7.905500000000149e-05, 7.833299999999987e-05, 7.851400000000175e-05, 7.912499999999933e-05, 7.833299999999987e-05, 7.840300000000466e-05]</msg>
<status status="PASS" starttime="20201112 12:27:36.620" endtime="20201112 12:27:36.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.608" endtime="20201112 12:27:36.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.632" endtime="20201112 12:27:36.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.641" endtime="20201112 12:27:36.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.636" endtime="20201112 12:27:36.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.628" endtime="20201112 12:27:36.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.119" endtime="20201112 12:27:36.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.118" endtime="20201112 12:27:36.666"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.689" endtime="20201112 12:27:36.711"></status>
</kw>
<msg timestamp="20201112 12:27:36.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.686" endtime="20201112 12:27:36.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.714" endtime="20201112 12:27:36.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.720" endtime="20201112 12:27:36.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.679" endtime="20201112 12:27:36.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.673" endtime="20201112 12:27:36.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.744" endtime="20201112 12:27:37.078"></status>
</kw>
<msg timestamp="20201112 12:27:37.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041931208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04201125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:36.741" endtime="20201112 12:27:37.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041931208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04201125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:37.088" endtime="20201112 12:27:37.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.106" endtime="20201112 12:27:37.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.733" endtime="20201112 12:27:37.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.729" endtime="20201112 12:27:37.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.127" level="INFO">${RESULT} = [{'time': 0.04201125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.004200000000239e-05, 'source_diff': 8.004200000000239e-05}, {'time': 0.042111264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:37.118" endtime="20201112 12:27:37.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.157" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.129" endtime="20201112 12:27:37.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.168" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.166" endtime="20201112 12:27:37.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.174" level="INFO">VALUE: [8.004200000000239e-05, 7.987500000000008e-05, 7.968099999999811e-05, 8.018099999999861e-05, 7.982000000000128e-05, 7.929200000000164e-05, 7.999999999999674e-05, 7.986100000000051e-05, 8.00970000000012e-05, 7.972200000000429e-05, 7.933300000000088e-05, 7.937499999999958e-05, 8.020900000000469e-05, 7.930600000000121e-05, 7.979099999999573e-05, 8.022300000000426e-05, 8.019400000000565e-05, 7.934799999999992e-05, 7.992999999999889e-05, 7.930500000000174e-05, 7.994399999999846e-05, 8.011100000000076e-05, 8.017999999999914e-05, 7.979200000000214e-05, 7.973600000000386e-05, 7.940299999999872e-05, 8.01389999999999e-05, 7.948600000000361e-05, 7.973599999999692e-05, 7.987500000000008e-05, 7.951400000000275e-05, 7.972199999999735e-05, 8.011099999999383e-05, 7.991599999999932e-05, 7.936100000000001e-05, 8.023599999999742e-05, 7.944399999999796e-05, 7.947200000000404e-05, 8.018099999999861e-05, 7.948599999999667e-05, 7.966700000000548e-05, 7.951400000000275e-05, 8.015299999999947e-05, 7.998700000000358e-05, 7.965299999999897e-05, 7.977800000000257e-05, 7.966699999999854e-05, 7.987500000000008e-05, 7.988899999999965e-05, 7.94169999999983e-05]</msg>
<status status="PASS" starttime="20201112 12:27:37.171" endtime="20201112 12:27:37.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.159" endtime="20201112 12:27:37.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.183" endtime="20201112 12:27:37.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.192" endtime="20201112 12:27:37.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.187" endtime="20201112 12:27:37.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.179" endtime="20201112 12:27:37.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.669" endtime="20201112 12:27:37.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.667" endtime="20201112 12:27:37.218"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.240" endtime="20201112 12:27:37.263"></status>
</kw>
<msg timestamp="20201112 12:27:37.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.237" endtime="20201112 12:27:37.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.266" endtime="20201112 12:27:37.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.272" endtime="20201112 12:27:37.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.230" endtime="20201112 12:27:37.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.224" endtime="20201112 12:27:37.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.296" endtime="20201112 12:27:37.629"></status>
</kw>
<msg timestamp="20201112 12:27:37.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042222097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042303361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.292" endtime="20201112 12:27:37.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042222097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042303361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.639" endtime="20201112 12:27:37.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.657" endtime="20201112 12:27:37.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.285" endtime="20201112 12:27:37.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.280" endtime="20201112 12:27:37.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.676" level="INFO">${RESULT} = [{'time': 0.042303361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.126399999999756e-05, 'source_diff': 8.126399999999756e-05}, {'time': 0.042395375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:37.667" endtime="20201112 12:27:37.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.706" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.678" endtime="20201112 12:27:37.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.717" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.715" endtime="20201112 12:27:37.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.722" level="INFO">VALUE: [8.126399999999756e-05, 8.124999999999799e-05, 8.105600000000296e-05, 8.044499999999843e-05, 8.036100000000101e-05, 8.072299999999782e-05, 8.052800000000332e-05, 8.119399999999971e-05, 8.036100000000101e-05, 8.099999999999774e-05, 8.0764000000004e-05, 8.043099999999886e-05, 8.067999999999964e-05, 8.036100000000101e-05, 8.101399999999731e-05, 8.104200000000339e-05, 8.059800000000117e-05, 8.09169999999998e-05, 8.048699999999714e-05, 8.066600000000007e-05, 8.111100000000177e-05, 8.066600000000007e-05, 8.105500000000349e-05, 8.086100000000151e-05, 8.079100000000367e-05, 8.029200000000264e-05, 8.123600000000536e-05, 8.088900000000065e-05, 8.029200000000264e-05, 8.119399999999971e-05, 8.090300000000022e-05, 8.047300000000451e-05, 8.044500000000537e-05, 8.11390000000009e-05, 8.056900000000256e-05, 8.073599999999792e-05, 8.124999999999799e-05, 8.093099999999936e-05, 8.03469999999945e-05, 8.083299999999544e-05, 8.116700000000004e-05, 8.034800000000092e-05, 8.034800000000092e-05, 8.06390000000004e-05, 8.062500000000083e-05, 8.072199999999835e-05, 8.111100000000177e-05, 8.06520000000005e-05, 8.045799999999853e-05, 8.068099999999911e-05]</msg>
<status status="PASS" starttime="20201112 12:27:37.719" endtime="20201112 12:27:37.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.708" endtime="20201112 12:27:37.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.732" endtime="20201112 12:27:37.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.740" endtime="20201112 12:27:37.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.736" endtime="20201112 12:27:37.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.727" endtime="20201112 12:27:37.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.220" endtime="20201112 12:27:37.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.218" endtime="20201112 12:27:37.766"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.789" endtime="20201112 12:27:37.811"></status>
</kw>
<msg timestamp="20201112 12:27:37.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.786" endtime="20201112 12:27:37.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.814" endtime="20201112 12:27:37.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.820" endtime="20201112 12:27:37.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.779" endtime="20201112 12:27:37.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.773" endtime="20201112 12:27:37.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.844" endtime="20201112 12:27:38.178"></status>
</kw>
<msg timestamp="20201112 12:27:38.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042121, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042202819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:37.841" endtime="20201112 12:27:38.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042121, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042202819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:38.188" endtime="20201112 12:27:38.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.206" endtime="20201112 12:27:38.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.833" endtime="20201112 12:27:38.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.828" endtime="20201112 12:27:38.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.225" level="INFO">${RESULT} = [{'time': 0.042202819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.18190000000038e-05, 'source_diff': 8.18190000000038e-05}, {'time': 0.042294819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:38.216" endtime="20201112 12:27:38.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.255" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.228" endtime="20201112 12:27:38.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.266" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.264" endtime="20201112 12:27:38.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.272" level="INFO">VALUE: [8.18190000000038e-05, 8.144399999999996e-05, 8.12770000000046e-05, 8.137499999999465e-05, 8.130500000000374e-05, 8.133299999999594e-05, 8.224999999999899e-05, 8.1764000000005e-05, 8.136099999999508e-05, 8.149999999999824e-05, 8.169400000000021e-05, 8.206999999999659e-05, 8.133300000000288e-05, 8.177799999999763e-05, 8.219400000000071e-05, 8.16249999999949e-05, 8.206900000000406e-05, 8.170799999999978e-05, 8.15970000000027e-05, 8.136099999999508e-05, 8.187499999999515e-05, 8.1846999999996e-05, 8.149999999999824e-05, 8.21249999999954e-05, 8.222299999999932e-05, 8.194499999999993e-05, 8.13049999999968e-05, 8.173599999999892e-05, 8.19719999999996e-05, 8.170799999999978e-05, 8.187499999999515e-05, 8.224999999999899e-05, 8.149999999999824e-05, 8.224999999999899e-05, 8.144499999999943e-05, 8.211100000000277e-05, 8.212500000000234e-05, 8.188800000000218e-05, 8.179099999999773e-05, 8.186100000000252e-05, 8.193000000000089e-05, 8.206900000000406e-05, 8.168100000000011e-05, 8.169400000000021e-05, 8.152800000000432e-05, 8.141599999999388e-05, 8.177799999999763e-05, 8.154200000000389e-05, 8.172199999999935e-05, 8.201399999999831e-05]</msg>
<status status="PASS" starttime="20201112 12:27:38.269" endtime="20201112 12:27:38.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.257" endtime="20201112 12:27:38.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.281" endtime="20201112 12:27:38.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.290" endtime="20201112 12:27:38.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.285" endtime="20201112 12:27:38.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.277" endtime="20201112 12:27:38.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.768" endtime="20201112 12:27:38.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.767" endtime="20201112 12:27:38.315"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.338" endtime="20201112 12:27:38.360"></status>
</kw>
<msg timestamp="20201112 12:27:38.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.335" endtime="20201112 12:27:38.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.363" endtime="20201112 12:27:38.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.369" endtime="20201112 12:27:38.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.328" endtime="20201112 12:27:38.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.322" endtime="20201112 12:27:38.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.393" endtime="20201112 12:27:38.728"></status>
</kw>
<msg timestamp="20201112 12:27:38.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041989153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042071806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.389" endtime="20201112 12:27:38.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041989153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042071806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.737" endtime="20201112 12:27:38.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.756" endtime="20201112 12:27:38.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.382" endtime="20201112 12:27:38.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.378" endtime="20201112 12:27:38.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.775" level="INFO">${RESULT} = [{'time': 0.042071806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.265300000000197e-05, 'source_diff': 8.265300000000197e-05}, {'time': 0.042167819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:38.766" endtime="20201112 12:27:38.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.805" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.777" endtime="20201112 12:27:38.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.816" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.813" endtime="20201112 12:27:38.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.821" level="INFO">VALUE: [8.265300000000197e-05, 8.252699999999891e-05, 8.24720000000001e-05, 8.248599999999967e-05, 8.31390000000029e-05, 8.25970000000037e-05, 8.231999999999684e-05, 8.287499999999615e-05, 8.290300000000222e-05, 8.244500000000043e-05, 8.319399999999477e-05, 8.284799999999648e-05, 8.266600000000207e-05, 8.301399999999931e-05, 8.302799999999888e-05, 8.287500000000309e-05, 8.311099999999683e-05, 8.304199999999845e-05, 8.295800000000103e-05, 8.22919999999977e-05, 8.309799999999673e-05, 8.31249999999964e-05, 8.304199999999845e-05, 8.302800000000582e-05, 8.26119999999958e-05, 8.252699999999891e-05, 8.290200000000275e-05, 8.237499999999565e-05, 8.313899999999597e-05, 8.234700000000345e-05, 8.305600000000496e-05, 8.22919999999977e-05, 8.277799999999863e-05, 8.227800000000507e-05, 8.26249999999959e-05, 8.318100000000161e-05, 8.294399999999452e-05, 8.269399999999427e-05, 8.244400000000096e-05, 8.2846999999997e-05, 8.265300000000197e-05, 8.26390000000024e-05, 8.316700000000204e-05, 8.319500000000118e-05, 8.237500000000259e-05, 8.233399999999641e-05, 8.280599999999777e-05, 8.279200000000514e-05, 8.286199999999605e-05, 8.316599999999563e-05]</msg>
<status status="PASS" starttime="20201112 12:27:38.818" endtime="20201112 12:27:38.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.806" endtime="20201112 12:27:38.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.831" endtime="20201112 12:27:38.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.839" endtime="20201112 12:27:38.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.835" endtime="20201112 12:27:38.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.826" endtime="20201112 12:27:38.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.318" endtime="20201112 12:27:38.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.316" endtime="20201112 12:27:38.865"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.888" endtime="20201112 12:27:38.910"></status>
</kw>
<msg timestamp="20201112 12:27:38.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.884" endtime="20201112 12:27:38.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.914" endtime="20201112 12:27:38.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.920" endtime="20201112 12:27:38.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.877" endtime="20201112 12:27:38.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.871" endtime="20201112 12:27:38.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.939" endtime="20201112 12:27:39.257"></status>
</kw>
<msg timestamp="20201112 12:27:39.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042150014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042234028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.937" endtime="20201112 12:27:39.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042150014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042234028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.267" endtime="20201112 12:27:39.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.285" endtime="20201112 12:27:39.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.933" endtime="20201112 12:27:39.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.928" endtime="20201112 12:27:39.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.306" level="INFO">${RESULT} = [{'time': 0.042234028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.401400000000031e-05, 'source_diff': 8.401400000000031e-05}, {'time': 0.042334042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:39.297" endtime="20201112 12:27:39.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.336" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.308" endtime="20201112 12:27:39.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.347" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.345" endtime="20201112 12:27:39.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.352" level="INFO">VALUE: [8.401400000000031e-05, 8.404199999999945e-05, 8.327799999999913e-05, 8.369399999999527e-05, 8.372199999999441e-05, 8.352699999999991e-05, 8.377799999999963e-05, 8.36669999999956e-05, 8.37919999999992e-05, 8.377799999999963e-05, 8.32919999999987e-05, 8.411099999999783e-05, 8.345899999999407e-05, 8.370899999999432e-05, 8.33469999999975e-05, 8.376300000000059e-05, 8.36669999999956e-05, 8.406999999999859e-05, 8.375000000000049e-05, 8.336099999999708e-05, 8.411100000000477e-05, 8.340299999999579e-05, 8.368099999999518e-05, 8.394500000000193e-05, 8.348600000000067e-05, 8.420900000000175e-05, 8.423600000000142e-05, 8.368000000000264e-05, 8.327699999999966e-05, 8.36249999999969e-05, 8.363899999999647e-05, 8.375000000000049e-05, 8.37919999999992e-05, 8.419499999999525e-05, 8.336100000000402e-05, 8.337499999999665e-05, 8.336199999999655e-05, 8.418099999999568e-05, 8.397300000000107e-05, 8.35970000000047e-05, 8.356999999999809e-05, 8.425000000000099e-05, 8.340299999999579e-05, 8.32919999999987e-05, 8.337499999999665e-05, 8.376300000000059e-05, 8.418099999999568e-05, 8.408399999999816e-05, 8.356999999999809e-05, 8.388900000000366e-05]</msg>
<status status="PASS" starttime="20201112 12:27:39.349" endtime="20201112 12:27:39.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.338" endtime="20201112 12:27:39.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.362" endtime="20201112 12:27:39.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.370" endtime="20201112 12:27:39.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.366" endtime="20201112 12:27:39.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.357" endtime="20201112 12:27:39.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.867" endtime="20201112 12:27:39.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.866" endtime="20201112 12:27:39.396"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.419" endtime="20201112 12:27:39.440"></status>
</kw>
<msg timestamp="20201112 12:27:39.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.416" endtime="20201112 12:27:39.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.444" endtime="20201112 12:27:39.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.450" endtime="20201112 12:27:39.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.408" endtime="20201112 12:27:39.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.403" endtime="20201112 12:27:39.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.474" endtime="20201112 12:27:39.806"></status>
</kw>
<msg timestamp="20201112 12:27:39.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041975556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042060722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.470" endtime="20201112 12:27:39.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041975556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042060722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.816" endtime="20201112 12:27:39.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.834" endtime="20201112 12:27:39.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.463" endtime="20201112 12:27:39.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.458" endtime="20201112 12:27:39.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.853" level="INFO">${RESULT} = [{'time': 0.042060722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.516600000000457e-05, 'source_diff': 8.516600000000457e-05}, {'time': 0.042156722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:39.844" endtime="20201112 12:27:39.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.883" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.856" endtime="20201112 12:27:39.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.894" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.892" endtime="20201112 12:27:39.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.900" level="INFO">VALUE: [8.516600000000457e-05, 8.502800000000088e-05, 8.445899999999507e-05, 8.526400000000156e-05, 8.468100000000311e-05, 8.436200000000449e-05, 8.490299999999729e-05, 8.515299999999754e-05, 8.522299999999539e-05, 8.426400000000056e-05, 8.433299999999894e-05, 8.463899999999747e-05, 8.502799999999394e-05, 8.490300000000423e-05, 8.459699999999876e-05, 8.44720000000021e-05, 8.470900000000225e-05, 8.522199999999591e-05, 8.4459000000002e-05, 8.443099999999593e-05, 8.509699999999926e-05, 8.475000000000149e-05, 8.511099999999883e-05, 8.442999999999645e-05, 8.429100000000023e-05, 8.434700000000545e-05, 8.500000000000174e-05, 8.501400000000131e-05, 8.430599999999927e-05, 8.494500000000293e-05, 8.493100000000336e-05, 8.438899999999722e-05, 8.472200000000235e-05, 8.498700000000164e-05, 8.445799999999559e-05, 8.497199999999566e-05, 8.493000000000389e-05, 8.43469999999985e-05, 8.458299999999919e-05, 8.480599999999977e-05, 8.495800000000303e-05, 8.436099999999808e-05, 8.495899999999557e-05, 8.450000000000124e-05, 8.429200000000664e-05, 8.452699999999397e-05, 8.436099999999808e-05, 8.513899999999797e-05, 8.504100000000098e-05, 8.4944999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:27:39.897" endtime="20201112 12:27:39.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.885" endtime="20201112 12:27:39.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.909" endtime="20201112 12:27:39.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.918" endtime="20201112 12:27:39.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.913" endtime="20201112 12:27:39.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.905" endtime="20201112 12:27:39.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.398" endtime="20201112 12:27:39.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.397" endtime="20201112 12:27:39.944"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.966" endtime="20201112 12:27:39.988"></status>
</kw>
<msg timestamp="20201112 12:27:39.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.963" endtime="20201112 12:27:39.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.992" endtime="20201112 12:27:39.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.998" endtime="20201112 12:27:40.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.956" endtime="20201112 12:27:40.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.950" endtime="20201112 12:27:40.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.022" endtime="20201112 12:27:40.356"></status>
</kw>
<msg timestamp="20201112 12:27:40.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042091056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042177111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.018" endtime="20201112 12:27:40.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042091056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042177111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.366" endtime="20201112 12:27:40.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.385" endtime="20201112 12:27:40.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.011" endtime="20201112 12:27:40.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.006" endtime="20201112 12:27:40.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.404" level="INFO">${RESULT} = [{'time': 0.042177111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.605500000000155e-05, 'source_diff': 8.605500000000155e-05}, {'time': 0.042279125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:40.395" endtime="20201112 12:27:40.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.406" endtime="20201112 12:27:40.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.445" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.442" endtime="20201112 12:27:40.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.450" level="INFO">VALUE: [8.605500000000155e-05, 8.556900000000062e-05, 8.548599999999573e-05, 8.59999999999958e-05, 8.613899999999897e-05, 8.593100000000437e-05, 8.54449999999965e-05, 8.588900000000566e-05, 8.534799999999898e-05, 8.558300000000019e-05, 8.545799999999659e-05, 8.609700000000026e-05, 8.556900000000062e-05, 8.552800000000138e-05, 8.56249999999989e-05, 8.559699999999976e-05, 8.554200000000095e-05, 8.5944999999997e-05, 8.57920000000012e-05, 8.542999999999745e-05, 8.624999999999605e-05, 8.622199999999691e-05, 8.537499999999865e-05, 8.576400000000206e-05, 8.572199999999641e-05, 8.595800000000403e-05, 8.536099999999908e-05, 8.531999999999984e-05, 8.543099999999693e-05, 8.572300000000282e-05, 8.587499999999915e-05, 8.613899999999897e-05, 8.534799999999898e-05, 8.531900000000037e-05, 8.548600000000267e-05, 8.577800000000163e-05, 8.620899999999682e-05, 8.548600000000267e-05, 8.609700000000026e-05, 8.538899999999822e-05, 8.609799999999973e-05, 8.58329999999935e-05, 8.61249999999994e-05, 8.601399999999537e-05, 8.577699999999522e-05, 8.587499999999915e-05, 8.561099999999933e-05, 8.613899999999897e-05, 8.587499999999915e-05, 8.607000000000059e-05]</msg>
<status status="PASS" starttime="20201112 12:27:40.447" endtime="20201112 12:27:40.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.435" endtime="20201112 12:27:40.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.459" endtime="20201112 12:27:40.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.468" endtime="20201112 12:27:40.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.463" endtime="20201112 12:27:40.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.455" endtime="20201112 12:27:40.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.946" endtime="20201112 12:27:40.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.944" endtime="20201112 12:27:40.494"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.516" endtime="20201112 12:27:40.538"></status>
</kw>
<msg timestamp="20201112 12:27:40.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.513" endtime="20201112 12:27:40.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.542" endtime="20201112 12:27:40.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.548" endtime="20201112 12:27:40.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.506" endtime="20201112 12:27:40.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.500" endtime="20201112 12:27:40.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.571" endtime="20201112 12:27:40.906"></status>
</kw>
<msg timestamp="20201112 12:27:40.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041767153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041854194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.568" endtime="20201112 12:27:40.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041767153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041854194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.915" endtime="20201112 12:27:40.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.934" endtime="20201112 12:27:40.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.561" endtime="20201112 12:27:40.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.556" endtime="20201112 12:27:40.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.953" level="INFO">${RESULT} = [{'time': 0.041854194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.704099999999604e-05, 'source_diff': 8.704099999999604e-05}, {'time': 0.041954208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:40.944" endtime="20201112 12:27:40.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.983" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.955" endtime="20201112 12:27:40.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.994" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.992" endtime="20201112 12:27:40.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.999" level="INFO">VALUE: [8.704099999999604e-05, 8.652700000000291e-05, 8.670799999999784e-05, 8.643100000000487e-05, 8.626400000000256e-05, 8.720799999999834e-05, 8.687500000000015e-05, 8.655600000000152e-05, 8.724999999999705e-05, 8.668099999999818e-05, 8.63470000000005e-05, 8.63470000000005e-05, 8.638899999999922e-05, 8.681899999999493e-05, 8.629099999999529e-05, 8.704199999999551e-05, 8.672199999999741e-05, 8.687500000000015e-05, 8.686100000000058e-05, 8.73050000000028e-05, 8.716599999999963e-05, 8.680600000000177e-05, 8.647199999999716e-05, 8.698599999999723e-05, 8.687500000000015e-05, 8.668099999999818e-05, 8.638899999999922e-05, 8.71120000000003e-05, 8.672200000000435e-05, 8.650000000000324e-05, 8.673599999999698e-05, 8.687500000000015e-05, 8.651399999999587e-05, 8.695799999999809e-05, 8.723600000000442e-05, 8.713899999999997e-05, 8.694399999999852e-05, 8.724999999999705e-05, 8.679199999999526e-05, 8.686100000000058e-05, 8.687500000000015e-05, 8.636100000000008e-05, 8.665199999999956e-05, 8.648599999999673e-05, 8.692999999999895e-05, 8.672200000000435e-05, 8.720799999999834e-05, 8.676400000000306e-05, 8.725000000000399e-05, 8.704199999999551e-05]</msg>
<status status="PASS" starttime="20201112 12:27:40.996" endtime="20201112 12:27:41.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.985" endtime="20201112 12:27:41.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.009" endtime="20201112 12:27:41.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.017" endtime="20201112 12:27:41.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.013" endtime="20201112 12:27:41.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.004" endtime="20201112 12:27:41.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.496" endtime="20201112 12:27:41.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.494" endtime="20201112 12:27:41.043"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.066" endtime="20201112 12:27:41.089"></status>
</kw>
<msg timestamp="20201112 12:27:41.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.063" endtime="20201112 12:27:41.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.093" endtime="20201112 12:27:41.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.099" endtime="20201112 12:27:41.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.055" endtime="20201112 12:27:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.050" endtime="20201112 12:27:41.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.123" endtime="20201112 12:27:41.458"></status>
</kw>
<msg timestamp="20201112 12:27:41.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042746556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042834431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.119" endtime="20201112 12:27:41.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042746556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042834431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.468" endtime="20201112 12:27:41.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.486" endtime="20201112 12:27:41.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.112" endtime="20201112 12:27:41.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.107" endtime="20201112 12:27:41.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.507" level="INFO">${RESULT} = [{'time': 0.042834431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.787500000000115e-05, 'source_diff': 8.787500000000115e-05}, {'time': 0.042939444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:41.498" endtime="20201112 12:27:41.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.612" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:41.509" endtime="20201112 12:27:41.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.623" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.620" endtime="20201112 12:27:41.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.628" level="INFO">VALUE: [8.787500000000115e-05, 8.774999999999755e-05, 8.795799999999909e-05, 8.737500000000065e-05, 8.780600000000277e-05, 8.81250000000014e-05, 8.818099999999968e-05, 8.811100000000183e-05, 8.743099999999893e-05, 8.772300000000482e-05, 8.791600000000038e-05, 8.742999999999945e-05, 8.78879999999943e-05, 8.784700000000201e-05, 8.769399999999927e-05, 8.772199999999841e-05, 8.770799999999884e-05, 8.812499999999446e-05, 8.813900000000097e-05, 8.745800000000553e-05, 8.798599999999823e-05, 8.808399999999522e-05, 8.756900000000262e-05, 8.733300000000194e-05, 8.812499999999446e-05, 8.76799999999997e-05, 8.802800000000388e-05, 8.826399999999762e-05, 8.822199999999891e-05, 8.73470000000015e-05, 8.822199999999891e-05, 8.780600000000277e-05, 8.748599999999773e-05, 8.776400000000406e-05, 8.822300000000532e-05, 8.742999999999945e-05, 8.777800000000363e-05, 8.759700000000176e-05, 8.776400000000406e-05, 8.743100000000587e-05, 8.795899999999857e-05, 8.740300000000673e-05, 8.773699999999746e-05, 8.775000000000449e-05, 8.741699999999936e-05, 8.792999999999995e-05, 8.806900000000312e-05, 8.779199999999626e-05, 8.737500000000065e-05, 8.829199999999676e-05]</msg>
<status status="PASS" starttime="20201112 12:27:41.625" endtime="20201112 12:27:41.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.614" endtime="20201112 12:27:41.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.642" endtime="20201112 12:27:41.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.651" endtime="20201112 12:27:41.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.646" endtime="20201112 12:27:41.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.638" endtime="20201112 12:27:41.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.045" endtime="20201112 12:27:41.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.044" endtime="20201112 12:27:41.677"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.701" endtime="20201112 12:27:41.723"></status>
</kw>
<msg timestamp="20201112 12:27:41.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.696" endtime="20201112 12:27:41.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.726" endtime="20201112 12:27:41.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.733" endtime="20201112 12:27:41.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.689" endtime="20201112 12:27:41.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.683" endtime="20201112 12:27:41.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.756" endtime="20201112 12:27:42.089"></status>
</kw>
<msg timestamp="20201112 12:27:42.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043197083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043285722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.753" endtime="20201112 12:27:42.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043197083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043285722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.099" endtime="20201112 12:27:42.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.118" endtime="20201112 12:27:42.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.745" endtime="20201112 12:27:42.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.741" endtime="20201112 12:27:42.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.136" level="INFO">${RESULT} = [{'time': 0.043285722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.863900000000147e-05, 'source_diff': 8.863900000000147e-05}, {'time': 0.043388722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:42.127" endtime="20201112 12:27:42.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.166" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:42.138" endtime="20201112 12:27:42.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.177" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.174" endtime="20201112 12:27:42.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.182" level="INFO">VALUE: [8.863900000000147e-05, 8.86659999999942e-05, 8.876399999999812e-05, 8.856899999999668e-05, 8.857000000000309e-05, 8.883400000000291e-05, 8.86659999999942e-05, 8.880599999999683e-05, 8.861099999999539e-05, 8.847199999999916e-05, 8.844400000000002e-05, 8.874999999999855e-05, 8.91670000000011e-05, 8.855500000000405e-05, 8.902800000000488e-05, 8.926400000000556e-05, 8.908300000000369e-05, 8.908300000000369e-05, 8.859699999999582e-05, 8.888900000000172e-05, 8.905499999999761e-05, 8.894400000000052e-05, 8.884699999999607e-05, 8.855500000000405e-05, 8.829199999999676e-05, 8.911099999999589e-05, 8.840300000000079e-05, 8.888899999999478e-05, 8.84999999999983e-05, 8.905599999999708e-05, 8.91120000000023e-05, 8.900000000000574e-05, 8.83050000000038e-05, 8.911100000000283e-05, 8.893000000000095e-05, 8.834700000000251e-05, 8.893100000000043e-05, 8.913799999999555e-05, 8.834699999999557e-05, 8.92920000000047e-05, 8.918100000000068e-05, 8.91670000000011e-05, 8.919500000000025e-05, 8.854100000000448e-05, 8.830499999999686e-05, 8.861100000000233e-05, 8.841600000000088e-05, 8.902799999999794e-05, 8.913900000000197e-05, 8.865300000000104e-05]</msg>
<status status="PASS" starttime="20201112 12:27:42.179" endtime="20201112 12:27:42.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.168" endtime="20201112 12:27:42.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.192" endtime="20201112 12:27:42.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.200" endtime="20201112 12:27:42.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.196" endtime="20201112 12:27:42.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.187" endtime="20201112 12:27:42.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.679" endtime="20201112 12:27:42.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.678" endtime="20201112 12:27:42.226"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.249" endtime="20201112 12:27:42.273"></status>
</kw>
<msg timestamp="20201112 12:27:42.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.245" endtime="20201112 12:27:42.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.275" endtime="20201112 12:27:42.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.279" endtime="20201112 12:27:42.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.238" endtime="20201112 12:27:42.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.233" endtime="20201112 12:27:42.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.290" endtime="20201112 12:27:42.594"></status>
</kw>
<msg timestamp="20201112 12:27:42.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043172667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043261958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.288" endtime="20201112 12:27:42.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043172667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043261958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.603" endtime="20201112 12:27:42.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.622" endtime="20201112 12:27:42.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.285" endtime="20201112 12:27:42.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.282" endtime="20201112 12:27:42.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.639" level="INFO">${RESULT} = [{'time': 0.043261958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.929100000000523e-05, 'source_diff': 8.929100000000523e-05}, {'time': 0.043371014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:42.630" endtime="20201112 12:27:42.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.669" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:42.641" endtime="20201112 12:27:42.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.680" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.678" endtime="20201112 12:27:42.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.685" level="INFO">VALUE: [8.929100000000523e-05, 8.995800000000109e-05, 9.004199999999851e-05, 8.93199999999969e-05, 8.947200000000016e-05, 8.9945000000001e-05, 8.927800000000513e-05, 8.9332999999997e-05, 8.92920000000047e-05, 8.961099999999639e-05, 8.936100000000308e-05, 8.954099999999854e-05, 8.937500000000265e-05, 8.945800000000059e-05, 8.968100000000118e-05, 8.944400000000102e-05, 8.997200000000066e-05, 8.974999999999955e-05, 8.941600000000188e-05, 8.961100000000333e-05, 8.958400000000366e-05, 8.952799999999844e-05, 8.954100000000548e-05, 8.94450000000005e-05, 8.974999999999955e-05, 8.968100000000118e-05, 8.945800000000059e-05, 8.972200000000041e-05, 9.012499999999646e-05, 8.986099999999664e-05, 9.009700000000426e-05, 8.96800000000017e-05, 8.929099999999829e-05, 8.972200000000041e-05, 8.976299999999965e-05, 8.995800000000109e-05, 9.011100000000383e-05, 8.993100000000143e-05, 9.019500000000125e-05, 8.974999999999955e-05, 8.998600000000023e-05, 9.029099999999929e-05, 8.994399999999458e-05, 8.988900000000272e-05, 8.934699999999657e-05, 9.002799999999894e-05, 8.929199999999776e-05, 8.936100000000308e-05, 9.015300000000254e-05, 8.959700000000376e-05]</msg>
<status status="PASS" starttime="20201112 12:27:42.682" endtime="20201112 12:27:42.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.671" endtime="20201112 12:27:42.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.695" endtime="20201112 12:27:42.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.703" endtime="20201112 12:27:42.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.699" endtime="20201112 12:27:42.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.691" endtime="20201112 12:27:42.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.228" endtime="20201112 12:27:42.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.227" endtime="20201112 12:27:42.729"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.752" endtime="20201112 12:27:42.774"></status>
</kw>
<msg timestamp="20201112 12:27:42.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.749" endtime="20201112 12:27:42.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.777" endtime="20201112 12:27:42.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.784" endtime="20201112 12:27:42.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.741" endtime="20201112 12:27:42.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.736" endtime="20201112 12:27:42.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.809" endtime="20201112 12:27:43.143"></status>
</kw>
<msg timestamp="20201112 12:27:43.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041815139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041905736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.805" endtime="20201112 12:27:43.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041815139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041905736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.153" endtime="20201112 12:27:43.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.172" endtime="20201112 12:27:43.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.797" endtime="20201112 12:27:43.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.792" endtime="20201112 12:27:43.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.190" level="INFO">${RESULT} = [{'time': 0.041905736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.059699999999782e-05, 'source_diff': 9.059699999999782e-05}, {'time': 0.04201475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:43.181" endtime="20201112 12:27:43.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.220" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:43.192" endtime="20201112 12:27:43.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.231" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.229" endtime="20201112 12:27:43.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.237" level="INFO">VALUE: [9.059699999999782e-05, 9.047199999999422e-05, 9.102799999999994e-05, 9.106999999999865e-05, 9.034700000000451e-05, 9.041700000000236e-05, 9.05000000000003e-05, 9.075000000000055e-05, 9.095800000000209e-05, 9.030499999999886e-05, 9.088900000000372e-05, 9.124999999999411e-05, 9.037500000000365e-05, 9.090300000000329e-05, 9.056999999999815e-05, 9.063900000000347e-05, 9.042999999999551e-05, 9.119399999999583e-05, 9.090200000000381e-05, 9.090200000000381e-05, 9.081900000000587e-05, 9.045800000000159e-05, 9.095800000000209e-05, 9.10000000000008e-05, 9.123600000000148e-05, 9.055599999999858e-05, 9.04450000000015e-05, 9.034699999999757e-05, 9.063899999999653e-05, 9.086100000000458e-05, 9.105499999999961e-05, 9.06800000000027e-05, 9.076400000000012e-05, 9.119500000000225e-05, 9.073600000000098e-05, 9.036099999999714e-05, 9.104199999999951e-05, 9.034799999999704e-05, 9.061099999999739e-05, 9.06250000000039e-05, 9.02920000000057e-05, 9.119399999999583e-05, 9.088899999999678e-05, 9.086099999999764e-05, 9.12079999999954e-05, 9.037499999999671e-05, 9.043100000000193e-05, 9.070899999999438e-05, 9.047200000000116e-05, 9.0332999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:27:43.234" endtime="20201112 12:27:43.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.222" endtime="20201112 12:27:43.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.246" endtime="20201112 12:27:43.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.255" endtime="20201112 12:27:43.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.250" endtime="20201112 12:27:43.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.242" endtime="20201112 12:27:43.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.731" endtime="20201112 12:27:43.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.730" endtime="20201112 12:27:43.281"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.304" endtime="20201112 12:27:43.327"></status>
</kw>
<msg timestamp="20201112 12:27:43.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.300" endtime="20201112 12:27:43.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.330" endtime="20201112 12:27:43.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.336" endtime="20201112 12:27:43.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.293" endtime="20201112 12:27:43.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.287" endtime="20201112 12:27:43.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.360" endtime="20201112 12:27:43.711"></status>
</kw>
<msg timestamp="20201112 12:27:43.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042580139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042671986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.356" endtime="20201112 12:27:43.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042580139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042671986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.721" endtime="20201112 12:27:43.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.739" endtime="20201112 12:27:43.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.349" endtime="20201112 12:27:43.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.345" endtime="20201112 12:27:43.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.757" level="INFO">${RESULT} = [{'time': 0.042671986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.184699999999907e-05, 'source_diff': 9.184699999999907e-05}, {'time': 0.042779, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:43.748" endtime="20201112 12:27:43.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.789" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:43.759" endtime="20201112 12:27:43.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.800" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.797" endtime="20201112 12:27:43.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.805" level="INFO">VALUE: [9.184699999999907e-05, 9.179200000000026e-05, 9.14450000000025e-05, 9.152700000000097e-05, 9.147300000000164e-05, 9.136099999999814e-05, 9.133399999999847e-05, 9.218100000000368e-05, 9.174999999999461e-05, 9.212499999999846e-05, 9.18329999999995e-05, 9.190300000000429e-05, 9.166699999999667e-05, 9.152800000000044e-05, 9.19859999999953e-05, 9.186099999999864e-05, 9.130599999999933e-05, 9.190199999999787e-05, 9.134699999999857e-05, 9.18329999999995e-05, 9.226399999999468e-05, 9.212499999999846e-05, 9.194400000000352e-05, 9.172200000000241e-05, 9.187499999999821e-05, 9.143100000000293e-05, 9.212499999999846e-05, 9.154100000000054e-05, 9.155500000000011e-05, 9.20000000000018e-05, 9.13879999999978e-05, 9.226399999999468e-05, 9.136099999999814e-05, 9.225000000000205e-05, 9.211099999999889e-05, 9.201400000000137e-05, 9.170899999999538e-05, 9.147199999999522e-05, 9.16250000000049e-05, 9.21529999999976e-05, 9.138900000000422e-05, 9.154100000000054e-05, 9.195800000000309e-05, 9.20000000000018e-05, 9.166699999999667e-05, 9.137500000000465e-05, 9.170800000000284e-05, 9.137499999999771e-05, 9.220899999999588e-05, 9.172300000000189e-05]</msg>
<status status="PASS" starttime="20201112 12:27:43.802" endtime="20201112 12:27:43.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.791" endtime="20201112 12:27:43.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.815" endtime="20201112 12:27:43.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.823" endtime="20201112 12:27:43.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.819" endtime="20201112 12:27:43.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.810" endtime="20201112 12:27:43.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.283" endtime="20201112 12:27:43.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.282" endtime="20201112 12:27:43.849"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.872" endtime="20201112 12:27:43.894"></status>
</kw>
<msg timestamp="20201112 12:27:43.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.869" endtime="20201112 12:27:43.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.898" endtime="20201112 12:27:43.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.904" endtime="20201112 12:27:43.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.861" endtime="20201112 12:27:43.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.855" endtime="20201112 12:27:43.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.927" endtime="20201112 12:27:44.263"></status>
</kw>
<msg timestamp="20201112 12:27:44.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04210325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042195625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:43.924" endtime="20201112 12:27:44.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04210325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042195625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:44.272" endtime="20201112 12:27:44.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.291" endtime="20201112 12:27:44.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.917" endtime="20201112 12:27:44.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.912" endtime="20201112 12:27:44.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.308" level="INFO">${RESULT} = [{'time': 0.042195625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.237499999999871e-05, 'source_diff': 9.237499999999871e-05}, {'time': 0.042298639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:44.299" endtime="20201112 12:27:44.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:44.338" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:44.310" endtime="20201112 12:27:44.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.349" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:27:44.347" endtime="20201112 12:27:44.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.355" level="INFO">VALUE: [9.237499999999871e-05, 9.28330000000005e-05, 9.255600000000058e-05, 9.305500000000161e-05, 9.243099999999699e-05, 9.292999999999801e-05, 9.287499999999921e-05, 9.237499999999871e-05, 9.248600000000273e-05, 9.287499999999921e-05, 9.284700000000007e-05, 9.316699999999817e-05, 9.291699999999792e-05, 9.275000000000255e-05, 9.270900000000332e-05, 9.242999999999751e-05, 9.286199999999911e-05, 9.26659999999982e-05, 9.244399999999708e-05, 9.311099999999989e-05, 9.298600000000323e-05, 9.236099999999914e-05, 9.293100000000443e-05, 9.254200000000101e-05, 9.272300000000289e-05, 9.295900000000357e-05, 9.319399999999783e-05, 9.247200000000316e-05, 9.263900000000547e-05, 9.31529999999986e-05, 9.322199999999697e-05, 9.276399999999518e-05, 9.284799999999954e-05, 9.234799999999904e-05, 9.238899999999828e-05, 9.304200000000151e-05, 9.284799999999954e-05, 9.280600000000083e-05, 9.237499999999871e-05, 9.234699999999957e-05, 9.230500000000086e-05, 9.273600000000298e-05, 9.294399999999758e-05, 9.268099999999724e-05, 9.243100000000393e-05, 9.272200000000341e-05, 9.287499999999921e-05, 9.24729999999957e-05, 9.23879999999988e-05, 9.254100000000154e-05]</msg>
<status status="PASS" starttime="20201112 12:27:44.352" endtime="20201112 12:27:44.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.340" endtime="20201112 12:27:44.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.364" endtime="20201112 12:27:44.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.373" endtime="20201112 12:27:44.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.368" endtime="20201112 12:27:44.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.360" endtime="20201112 12:27:44.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.851" endtime="20201112 12:27:44.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.850" endtime="20201112 12:27:44.398"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.421" endtime="20201112 12:27:44.444"></status>
</kw>
<msg timestamp="20201112 12:27:44.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.418" endtime="20201112 12:27:44.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.447" endtime="20201112 12:27:44.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.453" endtime="20201112 12:27:44.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.411" endtime="20201112 12:27:44.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.405" endtime="20201112 12:27:44.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.477" endtime="20201112 12:27:44.811"></status>
</kw>
<msg timestamp="20201112 12:27:44.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041935625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042029653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.473" endtime="20201112 12:27:44.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041935625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042029653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.820" endtime="20201112 12:27:44.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.839" endtime="20201112 12:27:44.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.466" endtime="20201112 12:27:44.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.462" endtime="20201112 12:27:44.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.858" level="INFO">${RESULT} = [{'time': 0.042029653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402800000000294e-05, 'source_diff': 9.402800000000294e-05}, {'time': 0.042131667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:44.849" endtime="20201112 12:27:44.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:44.888" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:44.860" endtime="20201112 12:27:44.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.899" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:27:44.897" endtime="20201112 12:27:44.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.904" level="INFO">VALUE: [9.402800000000294e-05, 9.373599999999704e-05, 9.374999999999661e-05, 9.412500000000046e-05, 9.340299999999885e-05, 9.413900000000003e-05, 9.390299999999935e-05, 9.355599999999464e-05, 9.395800000000509e-05, 9.376400000000312e-05, 9.426399999999668e-05, 9.39859999999973e-05, 9.393099999999849e-05, 9.3945000000005e-05, 9.417999999999926e-05, 9.36659999999992e-05, 9.329100000000229e-05, 9.342999999999851e-05, 9.343100000000493e-05, 9.358400000000072e-05, 9.334800000000004e-05, 9.393099999999849e-05, 9.327800000000219e-05, 9.340200000000631e-05, 9.426400000000362e-05, 9.351399999999593e-05, 9.388899999999978e-05, 9.394399999999858e-05, 9.361100000000039e-05, 9.412500000000046e-05, 9.426399999999668e-05, 9.373600000000398e-05, 9.336100000000014e-05, 9.343100000000493e-05, 9.404100000000304e-05, 9.411100000000089e-05, 9.38330000000015e-05, 9.401400000000337e-05, 9.376400000000312e-05, 9.359700000000082e-05, 9.362499999999996e-05, 9.391699999999892e-05, 9.394499999999806e-05, 9.40000000000038e-05, 9.393000000000595e-05, 9.336100000000014e-05, 9.359700000000082e-05, 9.388899999999978e-05, 9.351400000000287e-05, 9.338899999999928e-05]</msg>
<status status="PASS" starttime="20201112 12:27:44.901" endtime="20201112 12:27:44.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.890" endtime="20201112 12:27:44.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.914" endtime="20201112 12:27:44.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.922" endtime="20201112 12:27:44.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.918" endtime="20201112 12:27:44.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.909" endtime="20201112 12:27:44.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.401" endtime="20201112 12:27:44.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.399" endtime="20201112 12:27:44.948"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.971" endtime="20201112 12:27:44.994"></status>
</kw>
<msg timestamp="20201112 12:27:44.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.967" endtime="20201112 12:27:44.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.997" endtime="20201112 12:27:45.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.004" endtime="20201112 12:27:45.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.960" endtime="20201112 12:27:45.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.955" endtime="20201112 12:27:45.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.027" endtime="20201112 12:27:45.360"></status>
</kw>
<msg timestamp="20201112 12:27:45.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042256542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042351375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.024" endtime="20201112 12:27:45.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042256542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042351375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.370" endtime="20201112 12:27:45.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.389" endtime="20201112 12:27:45.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.016" endtime="20201112 12:27:45.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.012" endtime="20201112 12:27:45.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:45.408" level="INFO">${RESULT} = [{'time': 0.042351375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.483299999999556e-05, 'source_diff': 9.483299999999556e-05}, {'time': 0.042458389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:45.399" endtime="20201112 12:27:45.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:45.438" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:45.410" endtime="20201112 12:27:45.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.449" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:27:45.446" endtime="20201112 12:27:45.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.454" level="INFO">VALUE: [9.483299999999556e-05, 9.491699999999992e-05, 9.441699999999942e-05, 9.513899999999409e-05, 9.459800000000129e-05, 9.47079999999989e-05, 9.455499999999617e-05, 9.497199999999872e-05, 9.461100000000139e-05, 9.445799999999865e-05, 9.475000000000455e-05, 9.444499999999856e-05, 9.493099999999949e-05, 9.511099999999495e-05, 9.508400000000222e-05, 9.449999999999736e-05, 9.509699999999538e-05, 9.494399999999958e-05, 9.524999999999811e-05, 9.477699999999728e-05, 9.436100000000114e-05, 9.456899999999574e-05, 9.437500000000071e-05, 9.494499999999906e-05, 9.429199999999582e-05, 9.480499999999642e-05, 9.463900000000053e-05, 9.452800000000344e-05, 9.480500000000336e-05, 9.472199999999847e-05, 9.505499999999667e-05, 9.472200000000541e-05, 9.445800000000559e-05, 9.473599999999804e-05, 9.501400000000437e-05, 9.495899999999863e-05, 9.484800000000154e-05, 9.458300000000225e-05, 9.511100000000189e-05, 9.497200000000566e-05, 9.509700000000232e-05, 9.47079999999989e-05, 9.495799999999915e-05, 9.52079999999994e-05, 9.493099999999949e-05, 9.43059999999954e-05, 9.44859999999978e-05, 9.43200000000019e-05, 9.469399999999933e-05, 9.462500000000096e-05]</msg>
<status status="PASS" starttime="20201112 12:27:45.451" endtime="20201112 12:27:45.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.440" endtime="20201112 12:27:45.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.464" endtime="20201112 12:27:45.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.472" endtime="20201112 12:27:45.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.468" endtime="20201112 12:27:45.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.459" endtime="20201112 12:27:45.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.950" endtime="20201112 12:27:45.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.949" endtime="20201112 12:27:45.498"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.521" endtime="20201112 12:27:45.543"></status>
</kw>
<msg timestamp="20201112 12:27:45.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.517" endtime="20201112 12:27:45.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.547" endtime="20201112 12:27:45.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.553" endtime="20201112 12:27:45.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.510" endtime="20201112 12:27:45.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.504" endtime="20201112 12:27:45.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.576" endtime="20201112 12:27:45.881"></status>
</kw>
<msg timestamp="20201112 12:27:45.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041895097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041990958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.573" endtime="20201112 12:27:45.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041895097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041990958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.885" endtime="20201112 12:27:45.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.893" endtime="20201112 12:27:45.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.566" endtime="20201112 12:27:45.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.561" endtime="20201112 12:27:45.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:45.902" level="INFO">${RESULT} = [{'time': 0.041990958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.586100000000264e-05, 'source_diff': 9.586100000000264e-05}, {'time': 0.042099958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:45.898" endtime="20201112 12:27:45.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:45.917" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:45.903" endtime="20201112 12:27:45.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.922" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:27:45.921" endtime="20201112 12:27:45.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.925" level="INFO">VALUE: [9.586100000000264e-05, 9.547199999999922e-05, 9.613900000000203e-05, 9.579200000000426e-05, 9.54859999999988e-05, 9.568100000000024e-05, 9.598600000000623e-05, 9.586100000000264e-05, 9.623699999999902e-05, 9.595899999999963e-05, 9.60000000000058e-05, 9.605499999999767e-05, 9.566700000000067e-05, 9.563899999999459e-05, 9.530500000000386e-05, 9.569499999999981e-05, 9.53059999999964e-05, 9.612499999999552e-05, 9.583399999999603e-05, 9.541700000000042e-05, 9.599999999999886e-05, 9.590200000000187e-05, 9.59859999999993e-05, 9.561100000000239e-05, 9.62080000000004e-05, 9.584700000000307e-05, 9.565200000000162e-05, 9.616700000000117e-05, 9.612500000000246e-05, 9.530600000000333e-05, 9.595899999999963e-05, 9.601399999999843e-05, 9.527699999999778e-05, 9.529099999999735e-05, 9.575000000000555e-05, 9.588900000000178e-05, 9.58059999999969e-05, 9.584699999999613e-05, 9.5333000000003e-05, 9.588900000000178e-05, 9.527699999999778e-05, 9.566700000000067e-05, 9.597199999999972e-05, 9.531899999999649e-05, 9.584700000000307e-05, 9.586100000000264e-05, 9.595800000000015e-05, 9.594500000000006e-05, 9.576399999999818e-05, 9.59729999999992e-05]</msg>
<status status="PASS" starttime="20201112 12:27:45.923" endtime="20201112 12:27:45.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.918" endtime="20201112 12:27:45.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.929" endtime="20201112 12:27:45.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.934" endtime="20201112 12:27:45.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.932" endtime="20201112 12:27:45.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.927" endtime="20201112 12:27:45.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.500" endtime="20201112 12:27:45.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.499" endtime="20201112 12:27:45.955"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.966" endtime="20201112 12:27:45.985"></status>
</kw>
<msg timestamp="20201112 12:27:45.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.964" endtime="20201112 12:27:45.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.987" endtime="20201112 12:27:45.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.990" endtime="20201112 12:27:45.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.961" endtime="20201112 12:27:45.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.958" endtime="20201112 12:27:45.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.001" endtime="20201112 12:27:46.330"></status>
</kw>
<msg timestamp="20201112 12:27:46.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024774569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.999" endtime="20201112 12:27:46.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024774569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.340" endtime="20201112 12:27:46.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.358" endtime="20201112 12:27:46.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.996" endtime="20201112 12:27:46.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.994" endtime="20201112 12:27:46.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.376" level="INFO">${RESULT} = [{'time': 0.024871083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651399999999893e-05, 'source_diff': 9.651399999999893e-05}, {'time': 0.024980097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:46.367" endtime="20201112 12:27:46.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:46.407" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:46.378" endtime="20201112 12:27:46.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.418" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:27:46.416" endtime="20201112 12:27:46.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.424" level="INFO">VALUE: [9.651399999999893e-05, 9.636099999999967e-05, 9.633300000000053e-05, 9.658299999999731e-05, 9.697199999999725e-05, 9.694500000000106e-05, 9.691700000000192e-05, 9.712499999999999e-05, 9.684800000000007e-05, 9.669399999999786e-05, 9.645800000000065e-05, 9.658300000000078e-05, 9.629100000000182e-05, 9.650000000000283e-05, 9.723600000000054e-05, 9.7027999999999e-05, 9.722300000000045e-05, 9.64729999999997e-05, 9.713899999999956e-05, 9.63880000000028e-05, 9.663799999999959e-05, 9.631900000000096e-05, 9.669400000000133e-05, 9.712499999999999e-05, 9.663900000000253e-05, 9.69860000000003e-05, 9.654200000000154e-05, 9.655600000000111e-05, 9.695900000000063e-05, 9.641699999999795e-05, 9.697200000000072e-05, 9.695800000000115e-05, 9.640299999999838e-05, 9.629100000000182e-05, 9.674999999999961e-05, 9.726399999999968e-05, 9.632000000000043e-05, 9.697200000000072e-05, 9.670900000000038e-05, 9.645800000000065e-05, 9.645900000000013e-05, 9.686100000000017e-05, 9.680500000000189e-05, 9.669500000000081e-05, 9.726399999999968e-05, 9.627799999999825e-05, 9.66660000000022e-05, 9.644500000000056e-05, 9.726399999999968e-05, 9.666599999999873e-05]</msg>
<status status="PASS" starttime="20201112 12:27:46.421" endtime="20201112 12:27:46.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.409" endtime="20201112 12:27:46.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.433" endtime="20201112 12:27:46.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:46.442" endtime="20201112 12:27:46.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.437" endtime="20201112 12:27:46.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.429" endtime="20201112 12:27:46.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.956" endtime="20201112 12:27:46.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.955" endtime="20201112 12:27:46.467"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.490" endtime="20201112 12:27:46.513"></status>
</kw>
<msg timestamp="20201112 12:27:46.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.487" endtime="20201112 12:27:46.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.517" endtime="20201112 12:27:46.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.523" endtime="20201112 12:27:46.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.479" endtime="20201112 12:27:46.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.474" endtime="20201112 12:27:46.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.546" endtime="20201112 12:27:46.880"></status>
</kw>
<msg timestamp="20201112 12:27:46.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041822444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.543" endtime="20201112 12:27:46.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041822444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.890" endtime="20201112 12:27:46.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.908" endtime="20201112 12:27:46.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.536" endtime="20201112 12:27:46.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.531" endtime="20201112 12:27:46.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.926" level="INFO">${RESULT} = [{'time': 0.041920458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.801400000000043e-05, 'source_diff': 9.801400000000043e-05}, {'time': 0.042033569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:46.917" endtime="20201112 12:27:46.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:46.957" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:46.928" endtime="20201112 12:27:46.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.968" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:27:46.966" endtime="20201112 12:27:46.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.974" level="INFO">VALUE: [9.801400000000043e-05, 9.819400000000283e-05, 9.795800000000215e-05, 9.793100000000249e-05, 9.750000000000036e-05, 9.740299999999591e-05, 9.776399999999325e-05, 9.777799999999975e-05, 9.81939999999959e-05, 9.781899999999899e-05, 9.767999999999583e-05, 9.727699999999978e-05, 9.79860000000013e-05, 9.729099999999935e-05, 9.733299999999806e-05, 9.761100000000439e-05, 9.831899999999949e-05, 9.793100000000249e-05, 9.8028e-05, 9.76660000000032e-05, 9.787500000000421e-05, 9.772200000000147e-05, 9.772200000000147e-05, 9.76660000000032e-05, 9.82359999999946e-05, 9.776400000000018e-05, 9.73609999999972e-05, 9.826400000000068e-05, 9.82080000000024e-05, 9.75279999999995e-05, 9.786199999999717e-05, 9.791600000000344e-05, 9.740299999999591e-05, 9.766599999999626e-05, 9.734699999999763e-05, 9.787499999999727e-05, 9.78609999999977e-05, 9.784699999999813e-05, 9.781999999999846e-05, 9.762499999999702e-05, 9.826400000000068e-05, 9.786100000000464e-05, 9.788899999999684e-05, 9.751399999999993e-05, 9.809699999999838e-05, 9.775000000000061e-05, 9.733299999999806e-05, 9.738900000000328e-05, 9.807000000000565e-05, 9.777799999999975e-05]</msg>
<status status="PASS" starttime="20201112 12:27:46.971" endtime="20201112 12:27:46.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.959" endtime="20201112 12:27:46.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.984" endtime="20201112 12:27:46.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:46.992" endtime="20201112 12:27:47.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.988" endtime="20201112 12:27:47.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.979" endtime="20201112 12:27:47.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.469" endtime="20201112 12:27:47.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.468" endtime="20201112 12:27:47.019"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.041" endtime="20201112 12:27:47.064"></status>
</kw>
<msg timestamp="20201112 12:27:47.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.038" endtime="20201112 12:27:47.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.068" endtime="20201112 12:27:47.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.074" endtime="20201112 12:27:47.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.031" endtime="20201112 12:27:47.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.025" endtime="20201112 12:27:47.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.097" endtime="20201112 12:27:47.432"></status>
</kw>
<msg timestamp="20201112 12:27:47.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042185889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042284611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.094" endtime="20201112 12:27:47.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042185889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042284611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.442" endtime="20201112 12:27:47.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.460" endtime="20201112 12:27:47.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.087" endtime="20201112 12:27:47.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.082" endtime="20201112 12:27:47.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.478" level="INFO">${RESULT} = [{'time': 0.042284611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.872200000000247e-05, 'source_diff': 9.872200000000247e-05}, {'time': 0.042401569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:47.469" endtime="20201112 12:27:47.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:47.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:47.480" endtime="20201112 12:27:47.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.520" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:47.518" endtime="20201112 12:27:47.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.526" level="INFO">VALUE: [9.872200000000247e-05, 9.85410000000006e-05, 9.895800000000315e-05, 9.91939999999969e-05, 9.894500000000306e-05, 9.83059999999994e-05, 9.881999999999946e-05, 9.829199999999982e-05, 9.884699999999913e-05, 9.90139999999945e-05, 9.913799999999862e-05, 9.897200000000272e-05, 9.837500000000471e-05, 9.830499999999992e-05, 9.92359999999956e-05, 9.88059999999999e-05, 9.900000000000186e-05, 9.893100000000349e-05, 9.845799999999572e-05, 9.88059999999999e-05, 9.891600000000444e-05, 9.838799999999787e-05, 9.901400000000143e-05, 9.901400000000143e-05, 9.844500000000256e-05, 9.927799999999432e-05, 9.837499999999777e-05, 9.877800000000075e-05, 9.872299999999501e-05, 9.837499999999777e-05, 9.866699999999673e-05, 9.831899999999949e-05, 9.840200000000437e-05, 9.822199999999504e-05, 9.861099999999845e-05, 9.913899999999809e-05, 9.901400000000143e-05, 9.841699999999648e-05, 9.863900000000453e-05, 9.850000000000136e-05, 9.845799999999572e-05, 9.855599999999964e-05, 9.879100000000085e-05, 9.91939999999969e-05, 9.886100000000564e-05, 9.876300000000171e-05, 9.879199999999339e-05, 9.859699999999888e-05, 9.87080000000029e-05, 9.86530000000041e-05]</msg>
<status status="PASS" starttime="20201112 12:27:47.523" endtime="20201112 12:27:47.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.511" endtime="20201112 12:27:47.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.535" endtime="20201112 12:27:47.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:47.544" endtime="20201112 12:27:47.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.539" endtime="20201112 12:27:47.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.531" endtime="20201112 12:27:47.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.021" endtime="20201112 12:27:47.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.019" endtime="20201112 12:27:47.569"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.592" endtime="20201112 12:27:47.616"></status>
</kw>
<msg timestamp="20201112 12:27:47.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.589" endtime="20201112 12:27:47.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.619" endtime="20201112 12:27:47.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.625" endtime="20201112 12:27:47.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.582" endtime="20201112 12:27:47.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.576" endtime="20201112 12:27:47.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.649" endtime="20201112 12:27:47.982"></status>
</kw>
<msg timestamp="20201112 12:27:47.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042226611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042326597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.646" endtime="20201112 12:27:47.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042226611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042326597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.991" endtime="20201112 12:27:48.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.010" endtime="20201112 12:27:48.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.638" endtime="20201112 12:27:48.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.634" endtime="20201112 12:27:48.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.028" level="INFO">${RESULT} = [{'time': 0.042326597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.99860000000033e-05, 'source_diff': 9.99860000000033e-05}, {'time': 0.042438583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:48.019" endtime="20201112 12:27:48.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:48.061" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:48.030" endtime="20201112 12:27:48.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.072" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:48.070" endtime="20201112 12:27:48.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.077" level="INFO">VALUE: [9.99860000000033e-05, 9.959699999999988e-05, 9.983300000000056e-05, 9.965199999999869e-05, 9.947200000000322e-05, 9.94860000000028e-05, 9.942999999999758e-05, 9.955600000000064e-05, 9.994500000000406e-05, 9.937499999999877e-05, 9.98060000000009e-05, 9.95280000000015e-05, 0.00010004099999999516, 9.93609999999992e-05, 0.00010020799999999747, 9.975000000000261e-05, 9.958300000000031e-05, 9.977800000000175e-05, 9.969499999999687e-05, 9.961199999999892e-05, 9.963899999999859e-05, 9.980599999999396e-05, 9.988899999999884e-05, 9.96660000000052e-05, 0.00010002700000000253, 9.973700000000252e-05, 0.00010023600000000354, 0.00010001400000000243, 9.999999999999593e-05, 9.95280000000015e-05, 9.947199999999629e-05, 0.00010009700000000038, 9.943000000000451e-05, 9.987500000000621e-05, 9.98609999999997e-05, 9.984700000000013e-05, 9.98609999999997e-05, 9.98060000000009e-05, 9.994500000000406e-05, 9.934699999999963e-05, 9.988899999999884e-05, 9.940299999999791e-05, 9.957000000000021e-05, 9.958300000000031e-05, 9.969400000000433e-05, 9.969400000000433e-05, 9.970900000000338e-05, 0.00010000000000000286, 0.00010008300000000081, 9.944500000000356e-05]</msg>
<status status="PASS" starttime="20201112 12:27:48.074" endtime="20201112 12:27:48.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.063" endtime="20201112 12:27:48.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.087" endtime="20201112 12:27:48.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.095" endtime="20201112 12:27:48.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.091" endtime="20201112 12:27:48.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.082" endtime="20201112 12:27:48.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.572" endtime="20201112 12:27:48.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.570" endtime="20201112 12:27:48.121"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.144" endtime="20201112 12:27:48.166"></status>
</kw>
<msg timestamp="20201112 12:27:48.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.140" endtime="20201112 12:27:48.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.169" endtime="20201112 12:27:48.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.176" endtime="20201112 12:27:48.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.133" endtime="20201112 12:27:48.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.127" endtime="20201112 12:27:48.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.199" endtime="20201112 12:27:48.532"></status>
</kw>
<msg timestamp="20201112 12:27:48.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042096722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042197194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.196" endtime="20201112 12:27:48.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042096722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042197194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.541" endtime="20201112 12:27:48.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.559" endtime="20201112 12:27:48.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.189" endtime="20201112 12:27:48.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.184" endtime="20201112 12:27:48.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.577" level="INFO">${RESULT} = [{'time': 0.042197194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010047199999999729, 'source_diff': 0.00010047199999999729}, {'time': 0.042314236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:48.568" endtime="20201112 12:27:48.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:48.607" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:48.579" endtime="20201112 12:27:48.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.619" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:48.616" endtime="20201112 12:27:48.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.625" level="INFO">VALUE: [0.00010047199999999729, 0.00010044399999999815, 0.00010120799999999847, 0.00010076400000000318, 0.000100513999999996, 0.00010093099999999855, 0.00010126400000000368, 0.00010045899999999719, 0.00010045799999999772, 0.00010109799999999391, 0.00010052700000000303, 0.0001010410000000031, 0.00010113900000000009, 0.00010109700000000138, 0.00010124999999999718, 0.00010037500000000671, 0.00010101400000000343, 0.00010048599999999686, 0.00010109800000000085, 0.00010126399999999675, 0.00010099999999999693, 0.00010124999999999718, 0.00010073600000000404, 0.00010116599999999976, 0.00010102799999999607, 0.0001004860000000038, 0.00010052799999999557, 0.00010105600000000214, 0.00010079199999999539, 0.00010069499999999787, 0.00010090299999999941, 0.00010097199999999779, 0.00010087500000000027, 0.00010088899999999984, 0.00010088899999999984, 0.00010030599999999446, 0.0001003610000000002, 0.00010088899999999984, 0.0001008610000000007, 0.00010027800000000225, 0.00010076400000000318, 0.0001010410000000031, 0.00010027799999999532, 0.00010062500000000002, 0.00010112500000000052, 0.00010086099999999376, 0.00010061100000000045, 0.00010083300000000156, 0.00010033400000000053, 0.00010127800000000325]</msg>
<status status="PASS" starttime="20201112 12:27:48.622" endtime="20201112 12:27:48.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.609" endtime="20201112 12:27:48.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.634" endtime="20201112 12:27:48.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.642" endtime="20201112 12:27:48.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.638" endtime="20201112 12:27:48.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.629" endtime="20201112 12:27:48.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.123" endtime="20201112 12:27:48.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.122" endtime="20201112 12:27:48.668"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.691" endtime="20201112 12:27:48.714"></status>
</kw>
<msg timestamp="20201112 12:27:48.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.688" endtime="20201112 12:27:48.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.717" endtime="20201112 12:27:48.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.724" endtime="20201112 12:27:48.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.680" endtime="20201112 12:27:48.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.675" endtime="20201112 12:27:48.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.747" endtime="20201112 12:27:49.080"></status>
</kw>
<msg timestamp="20201112 12:27:49.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041922847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042024139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.744" endtime="20201112 12:27:49.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041922847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042024139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.089" endtime="20201112 12:27:49.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.108" endtime="20201112 12:27:49.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.736" endtime="20201112 12:27:49.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.732" endtime="20201112 12:27:49.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:49.125" level="INFO">${RESULT} = [{'time': 0.042024139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010129200000000282, 'source_diff': 0.00010129200000000282}, {'time': 0.042133167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:49.116" endtime="20201112 12:27:49.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:49.155" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:49.127" endtime="20201112 12:27:49.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.166" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:49.163" endtime="20201112 12:27:49.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.171" level="INFO">VALUE: [0.00010129200000000282, 0.00010179199999999639, 0.00010197299999999826, 0.0001018480000000016, 0.00010137500000000077, 0.0001018610000000017, 0.00010162500000000102, 0.00010161100000000145, 0.00010220799999999947, 0.0001016809999999993, 0.00010159799999999441, 0.00010212500000000152, 0.00010127799999999632, 0.00010212499999999458, 0.00010167999999999983, 0.00010177800000000375, 0.00010142999999999958, 0.00010181999999999553, 0.0001016809999999993, 0.00010175000000000461, 0.00010129199999999589, 0.00010147200000000522, 0.00010220799999999947, 0.00010188799999999443, 0.00010209700000000238, 0.00010142999999999958, 0.00010137500000000077, 0.00010142999999999958, 0.00010225000000000511, 0.00010209700000000238, 0.00010174999999999768, 0.00010186099999999476, 0.00010150000000000436, 0.00010127799999999632, 0.00010145800000000565, 0.000101513999999997, 0.00010179100000000385, 0.00010154199999999614, 0.00010161200000000092, 0.00010145799999999872, 0.0001019860000000053, 0.00010144499999999862, 0.00010174999999999768, 0.00010191699999999998, 0.0001013610000000012, 0.00010154200000000307, 0.0001021809999999998, 0.00010134699999999469, 0.00010193099999999955, 0.00010194500000000606]</msg>
<status status="PASS" starttime="20201112 12:27:49.168" endtime="20201112 12:27:49.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.157" endtime="20201112 12:27:49.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.182" endtime="20201112 12:27:49.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:49.190" endtime="20201112 12:27:49.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.186" endtime="20201112 12:27:49.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.177" endtime="20201112 12:27:49.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.670" endtime="20201112 12:27:49.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.669" endtime="20201112 12:27:49.216"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.239" endtime="20201112 12:27:49.260"></status>
</kw>
<msg timestamp="20201112 12:27:49.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.236" endtime="20201112 12:27:49.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.262" endtime="20201112 12:27:49.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.264" endtime="20201112 12:27:49.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.228" endtime="20201112 12:27:49.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.223" endtime="20201112 12:27:49.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.276" endtime="20201112 12:27:49.596"></status>
</kw>
<msg timestamp="20201112 12:27:49.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041808194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041911431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.274" endtime="20201112 12:27:49.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041808194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041911431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.606" endtime="20201112 12:27:49.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.624" endtime="20201112 12:27:49.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.271" endtime="20201112 12:27:49.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.268" endtime="20201112 12:27:49.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:49.641" level="INFO">${RESULT} = [{'time': 0.041911431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010323699999999908, 'source_diff': 0.00010323699999999908}, {'time': 0.042031444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:49.633" endtime="20201112 12:27:49.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:49.671" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:49.643" endtime="20201112 12:27:49.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.682" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:49.680" endtime="20201112 12:27:49.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.688" level="INFO">VALUE: [0.00010323699999999908, 0.00010280500000000442, 0.0001032359999999996, 0.00010258300000000331, 0.00010315199999999525, 0.0001023610000000022, 0.00010327800000000525, 0.00010298599999999936, 0.00010287500000000227, 0.0001030559999999972, 0.00010320899999999994, 0.00010261099999999551, 0.00010251299999999852, 0.00010293000000000108, 0.000102416000000001, 0.00010261100000000245, 0.00010274999999999868, 0.0001030139999999985, 0.00010249999999999843, 0.00010244499999999962, 0.00010274999999999868, 0.00010294400000000065, 0.00010308399999999635, 0.00010295800000000022, 0.00010234699999999569, 0.000102416000000001, 0.00010330599999999746, 0.0001023610000000022, 0.00010326399999999875, 0.00010238900000000134, 0.00010315300000000166, 0.00010252699999999809, 0.00010249999999999843, 0.00010263900000000159, 0.00010266600000000126, 0.00010294500000000012, 0.00010322200000000004, 0.0001028889999999949, 0.0001030139999999985, 0.00010287500000000227, 0.00010233300000000306, 0.00010283299999999662, 0.00010291699999999404, 0.00010231899999999655, 0.00010287499999999533, 0.00010234700000000263, 0.00010261099999999551, 0.00010284699999999619, 0.0001030559999999972, 0.00010249999999999843]</msg>
<status status="PASS" starttime="20201112 12:27:49.685" endtime="20201112 12:27:49.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.673" endtime="20201112 12:27:49.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.697" endtime="20201112 12:27:49.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:49.707" endtime="20201112 12:27:49.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.703" endtime="20201112 12:27:49.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.693" endtime="20201112 12:27:49.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.218" endtime="20201112 12:27:49.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.217" endtime="20201112 12:27:49.733"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.755" endtime="20201112 12:27:49.779"></status>
</kw>
<msg timestamp="20201112 12:27:49.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.752" endtime="20201112 12:27:49.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.782" endtime="20201112 12:27:49.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.788" endtime="20201112 12:27:49.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.745" endtime="20201112 12:27:49.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.739" endtime="20201112 12:27:49.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.812" endtime="20201112 12:27:50.144"></status>
</kw>
<msg timestamp="20201112 12:27:50.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041834, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041938139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:49.808" endtime="20201112 12:27:50.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041834, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041938139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:50.153" endtime="20201112 12:27:50.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.171" endtime="20201112 12:27:50.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.801" endtime="20201112 12:27:50.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.796" endtime="20201112 12:27:50.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.188" level="INFO">${RESULT} = [{'time': 0.041938139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010413899999999615, 'source_diff': 0.00010413899999999615}, {'time': 0.042060139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:50.180" endtime="20201112 12:27:50.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:50.220" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:50.191" endtime="20201112 12:27:50.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.231" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:50.229" endtime="20201112 12:27:50.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.237" level="INFO">VALUE: [0.00010413899999999615, 0.00010329200000000482, 0.00010402799999999907, 0.0001035689999999978, 0.00010408399999999735, 0.00010422200000000104, 0.00010379099999999891, 0.00010411100000000395, 0.00010413900000000309, 0.0001040139999999995, 0.00010352799999999857, 0.0001037360000000001, 0.0001037360000000001, 0.00010336099999999626, 0.00010384699999999719, 0.00010383300000000456, 0.00010397200000000079, 0.0001036940000000014, 0.00010374999999999968, 0.0001033610000000032, 0.00010422200000000104, 0.00010352799999999857, 0.00010412499999999658, 0.00010352699999999909, 0.00010358299999999737, 0.00010425000000000018, 0.00010377699999999934, 0.00010365200000000269, 0.00010394500000000112, 0.00010419500000000137, 0.0001033889999999954, 0.00010376400000000618, 0.00010351299999999952, 0.00010363899999999565, 0.00010420800000000147, 0.00010411100000000395, 0.00010363900000000259, 0.00010404199999999864, 0.00010377799999999882, 0.00010411100000000395, 0.0001037219999999936, 0.00010343100000000105, 0.00010362500000000302, 0.00010398600000000036, 0.00010365200000000269, 0.00010330500000000492, 0.0001033610000000032, 0.00010329099999999841, 0.00010359699999999694, 0.00010331999999999703]</msg>
<status status="PASS" starttime="20201112 12:27:50.234" endtime="20201112 12:27:50.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.222" endtime="20201112 12:27:50.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.246" endtime="20201112 12:27:50.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.255" endtime="20201112 12:27:50.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.250" endtime="20201112 12:27:50.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.242" endtime="20201112 12:27:50.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.735" endtime="20201112 12:27:50.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.734" endtime="20201112 12:27:50.282"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.305" endtime="20201112 12:27:50.328"></status>
</kw>
<msg timestamp="20201112 12:27:50.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.301" endtime="20201112 12:27:50.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.331" endtime="20201112 12:27:50.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.337" endtime="20201112 12:27:50.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.294" endtime="20201112 12:27:50.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.288" endtime="20201112 12:27:50.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.362" endtime="20201112 12:27:50.696"></status>
</kw>
<msg timestamp="20201112 12:27:50.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043105792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043211014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.358" endtime="20201112 12:27:50.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043105792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043211014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.705" endtime="20201112 12:27:50.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.724" endtime="20201112 12:27:50.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.351" endtime="20201112 12:27:50.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.346" endtime="20201112 12:27:50.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.741" level="INFO">${RESULT} = [{'time': 0.043211014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010522200000000204, 'source_diff': 0.00010522200000000204}, {'time': 0.043333056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:50.732" endtime="20201112 12:27:50.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:50.770" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:50.743" endtime="20201112 12:27:50.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.781" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:50.779" endtime="20201112 12:27:50.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.786" level="INFO">VALUE: [0.00010522200000000204, 0.00010459800000000435, 0.00010465299999999622, 0.00010511199999999749, 0.000104514, 0.00010431900000000549, 0.00010508299999999887, 0.00010470800000000197, 0.00010450000000000043, 0.0001052219999999951, 0.0001047360000000011, 0.0001045559999999987, 0.00010429199999999889, 0.00010475000000000068, 0.00010455499999999923, 0.00010434700000000463, 0.00010455499999999923, 0.00010461100000000445, 0.00010433299999999812, 0.000104514, 0.00010500000000000093, 0.0001050559999999992, 0.00010498599999999442, 0.00010522300000000151, 0.00010520800000000247, 0.00010436099999999726, 0.0001052360000000016, 0.00010486099999999776, 0.00010512499999999758, 0.00010459699999999794, 0.00010483299999999862, 0.00010469499999999493, 0.00010454199999999914, 0.00010512500000000452, 0.00010472200000000154, 0.00010487499999999733, 0.00010463899999999665, 0.00010457000000000521, 0.00010511099999999801, 0.00010473599999999417, 0.00010433400000000453, 0.00010443100000000205, 0.00010452700000000009, 0.00010437500000000377, 0.00010486099999999776, 0.00010437499999999683, 0.00010526399999999381, 0.00010454199999999914, 0.0001051810000000028, 0.00010483300000000556]</msg>
<status status="PASS" starttime="20201112 12:27:50.784" endtime="20201112 12:27:50.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.772" endtime="20201112 12:27:50.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.796" endtime="20201112 12:27:50.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.805" endtime="20201112 12:27:50.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.800" endtime="20201112 12:27:50.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.792" endtime="20201112 12:27:50.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.284" endtime="20201112 12:27:50.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.283" endtime="20201112 12:27:50.830"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.855" endtime="20201112 12:27:50.878"></status>
</kw>
<msg timestamp="20201112 12:27:50.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.851" endtime="20201112 12:27:50.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.882" endtime="20201112 12:27:50.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.888" endtime="20201112 12:27:50.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.844" endtime="20201112 12:27:50.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.837" endtime="20201112 12:27:50.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.912" endtime="20201112 12:27:51.246"></status>
</kw>
<msg timestamp="20201112 12:27:51.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043571403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043677167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.908" endtime="20201112 12:27:51.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043571403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043677167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.255" endtime="20201112 12:27:51.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.273" endtime="20201112 12:27:51.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.901" endtime="20201112 12:27:51.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.896" endtime="20201112 12:27:51.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:51.291" level="INFO">${RESULT} = [{'time': 0.043677167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010576400000000125, 'source_diff': 0.00010576400000000125}, {'time': 0.043803181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:51.282" endtime="20201112 12:27:51.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:51.320" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:51.293" endtime="20201112 12:27:51.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.331" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:51.329" endtime="20201112 12:27:51.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.336" level="INFO">VALUE: [0.00010576400000000125, 0.00010587499999999833, 0.00010586099999999876, 0.00010562500000000502, 0.00010547200000000229, 0.00010552800000000057, 0.000105514000000001, 0.00010602800000000107, 0.00010559700000000588, 0.00010561099999999851, 0.00010602800000000107, 0.00010572300000000201, 0.00010625000000000218, 0.00010540300000000391, 0.00010561099999999851, 0.00010611099999999901, 0.000105514000000001, 0.00010542999999999664, 0.0001052360000000016, 0.00010544400000000315, 0.00010594499999999618, 0.00010608299999999987, 0.00010559699999999894, 0.00010579100000000091, 0.00010547200000000229, 0.00010612500000000552, 0.00010593100000000355, 0.00010551399999999406, 0.0001058339999999991, 0.00010541700000000348, 0.00010561099999999851, 0.0001061940000000039, 0.00010563899999999765, 0.00010530499999999998, 0.00010590300000000441, 0.00010526400000000075, 0.00010619499999999643, 0.00010618099999999686, 0.00010536199999999774, 0.00010575000000000168, 0.00010555500000000023, 0.00010580499999999354, 0.00010616599999999782, 0.00010561099999999851, 0.00010592999999999714, 0.00010580599999999996, 0.00010565199999999775, 0.00010583299999999962, 0.0001057089999999955, 0.00010574999999999474]</msg>
<status status="PASS" starttime="20201112 12:27:51.333" endtime="20201112 12:27:51.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.322" endtime="20201112 12:27:51.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.346" endtime="20201112 12:27:51.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:51.354" endtime="20201112 12:27:51.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.350" endtime="20201112 12:27:51.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.341" endtime="20201112 12:27:51.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.832" endtime="20201112 12:27:51.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.831" endtime="20201112 12:27:51.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.093" endtime="20201112 12:27:51.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:51.392" endtime="20201112 12:27:51.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.388" endtime="20201112 12:27:51.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.385" endtime="20201112 12:27:51.417"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:56.960" endtime="20201112 12:27:51.418" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:51.438" endtime="20201112 12:27:51.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.435" endtime="20201112 12:27:51.462"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.496" endtime="20201112 12:27:51.514"></status>
</kw>
<msg timestamp="20201112 12:27:51.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.493" endtime="20201112 12:27:51.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.518" endtime="20201112 12:27:51.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.529" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:51.524" endtime="20201112 12:27:51.529"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:51.486" endtime="20201112 12:27:51.531"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:51.480" endtime="20201112 12:27:51.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.477" endtime="20201112 12:27:51.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:51.541" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:51.540" endtime="20201112 12:27:51.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.535" endtime="20201112 12:27:51.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.475" endtime="20201112 12:27:51.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.473" endtime="20201112 12:27:51.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.545" endtime="20201112 12:27:51.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.468" endtime="20201112 12:27:51.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.463" endtime="20201112 12:27:51.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.432" endtime="20201112 12:27:51.552"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.579" endtime="20201112 12:27:51.597"></status>
</kw>
<msg timestamp="20201112 12:27:51.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.575" endtime="20201112 12:27:51.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.600" endtime="20201112 12:27:51.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.606" endtime="20201112 12:27:51.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.567" endtime="20201112 12:27:51.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.562" endtime="20201112 12:27:51.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.632" endtime="20201112 12:27:51.976"></status>
</kw>
<msg timestamp="20201112 12:27:51.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133924153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133930083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.627" endtime="20201112 12:27:51.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133924153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133930083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.986" endtime="20201112 12:27:52.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.005" endtime="20201112 12:27:52.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.619" endtime="20201112 12:27:52.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.615" endtime="20201112 12:27:52.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.022" level="INFO">${RESULT} = [{'time': 0.133930083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.93000000001509e-06, 'source_diff': 5.93000000001509e-06}, {'time': 0.133945944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:52.013" endtime="20201112 12:27:52.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:52.052" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:52.024" endtime="20201112 12:27:52.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.063" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:27:52.061" endtime="20201112 12:27:52.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.069" level="INFO">VALUE: [5.93000000001509e-06, 5.888000000009441e-06, 5.875000000016284e-06, 5.375000000001906e-06, 5.332999999996257e-06, 5.944000000007721e-06, 6.45800000001473e-06, 5.929999999987334e-06, 5.915999999994703e-06, 5.361000000009275e-06, 5.9450000000071945e-06, 5.402999999987168e-06, 6.431000000001186e-06, 5.388999999994537e-06, 5.388999999994537e-06, 5.929999999987334e-06, 5.903000000001546e-06, 6.416000000009081e-06, 5.9450000000071945e-06, 5.388999999994537e-06, 5.903000000001546e-06, 6.0000000000060005e-06, 5.388999999994537e-06, 5.361000000009275e-06, 6.443999999994343e-06, 5.9170000000219325e-06, 6.485999999999992e-06, 5.916999999994177e-06, 5.431000000000186e-06, 5.889000000008915e-06, 6.472000000007361e-06, 6.472000000007361e-06, 5.903000000001546e-06, 5.388999999994537e-06, 5.902000000002072e-06, 6.443999999994343e-06, 5.903000000001546e-06, 5.915999999994703e-06, 5.929999999987334e-06, 5.388999999994537e-06, 5.346999999988888e-06, 5.9450000000071945e-06, 6.416999999980799e-06, 5.388999999994537e-06, 5.889000000008915e-06, 5.944000000007721e-06, 5.958000000000352e-06, 5.375000000001906e-06, 5.431000000000186e-06, 5.388999999994537e-06]</msg>
<status status="PASS" starttime="20201112 12:27:52.066" endtime="20201112 12:27:52.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.054" endtime="20201112 12:27:52.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.078" endtime="20201112 12:27:52.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.086" endtime="20201112 12:27:52.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.082" endtime="20201112 12:27:52.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.073" endtime="20201112 12:27:52.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.557" endtime="20201112 12:27:52.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.556" endtime="20201112 12:27:52.112"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.140" endtime="20201112 12:27:52.158"></status>
</kw>
<msg timestamp="20201112 12:27:52.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.136" endtime="20201112 12:27:52.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.161" endtime="20201112 12:27:52.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.167" endtime="20201112 12:27:52.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.129" endtime="20201112 12:27:52.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.123" endtime="20201112 12:27:52.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.191" endtime="20201112 12:27:52.525"></status>
</kw>
<msg timestamp="20201112 12:27:52.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047147389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047154347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.187" endtime="20201112 12:27:52.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047147389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047154347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.535" endtime="20201112 12:27:52.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.553" endtime="20201112 12:27:52.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.180" endtime="20201112 12:27:52.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.175" endtime="20201112 12:27:52.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.571" level="INFO">${RESULT} = [{'time': 0.047154347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.047170278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:52.562" endtime="20201112 12:27:52.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:52.601" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:52.573" endtime="20201112 12:27:52.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.606" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:27:52.605" endtime="20201112 12:27:52.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.609" level="INFO">VALUE: [6.958000000001352e-06, 7.013999999999632e-06, 6.443999999994343e-06, 6.944999999994317e-06, 6.444000000001282e-06, 6.444000000001282e-06, 6.957999999994413e-06, 6.458000000000852e-06, 6.986000000000492e-06, 7.05600000000528e-06, 6.445000000000756e-06, 6.445000000000756e-06, 6.429999999994773e-06, 6.445000000000756e-06, 6.499999999999562e-06, 6.431000000001186e-06, 6.444000000001282e-06, 6.458000000000852e-06, 7.000000000000062e-06, 6.388999999995537e-06, 7.000000000000062e-06, 6.944000000001782e-06, 6.458000000000852e-06, 6.916999999995177e-06, 6.971999999993983e-06, 6.986000000000492e-06, 7.013999999999632e-06, 6.459000000000326e-06, 6.458999999993387e-06, 6.958000000001352e-06, 6.458000000000852e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.444000000001282e-06, 6.958999999993887e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.458000000000852e-06, 7.0279999999992016e-06, 6.972000000000922e-06, 6.458000000000852e-06, 6.417000000001616e-06, 6.445000000000756e-06, 6.443999999994343e-06, 6.403000000002046e-06, 7.000000000000062e-06, 6.457999999993913e-06, 6.431000000001186e-06, 6.445000000000756e-06, 6.986000000000492e-06]</msg>
<status status="PASS" starttime="20201112 12:27:52.607" endtime="20201112 12:27:52.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.602" endtime="20201112 12:27:52.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.613" endtime="20201112 12:27:52.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.618" endtime="20201112 12:27:52.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.615" endtime="20201112 12:27:52.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.611" endtime="20201112 12:27:52.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.119" endtime="20201112 12:27:52.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.117" endtime="20201112 12:27:52.639"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.650" endtime="20201112 12:27:52.665"></status>
</kw>
<msg timestamp="20201112 12:27:52.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.648" endtime="20201112 12:27:52.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.666" endtime="20201112 12:27:52.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.669" endtime="20201112 12:27:52.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.645" endtime="20201112 12:27:52.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.642" endtime="20201112 12:27:52.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.680" endtime="20201112 12:27:53.009"></status>
</kw>
<msg timestamp="20201112 12:27:53.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024802361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.679" endtime="20201112 12:27:53.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024802361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.019" endtime="20201112 12:27:53.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.038" endtime="20201112 12:27:53.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.675" endtime="20201112 12:27:53.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.673" endtime="20201112 12:27:53.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.056" level="INFO">${RESULT} = [{'time': 0.024802361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.024816444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:53.047" endtime="20201112 12:27:53.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:53.087" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:53.058" endtime="20201112 12:27:53.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.098" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:27:53.096" endtime="20201112 12:27:53.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.104" level="INFO">VALUE: [7.582999999998508e-06, 7.513000000000658e-06, 7.514000000000132e-06, 7.513999999996662e-06, 8.056000000002811e-06, 7.499999999997092e-06, 8.027000000000728e-06, 8.054999999999868e-06, 7.527999999999702e-06, 7.540999999999798e-06, 8.055999999999341e-06, 7.513000000000658e-06, 8.055999999999341e-06, 8.041999999999772e-06, 7.500000000000562e-06, 8.014000000000632e-06, 8.014000000000632e-06, 8.000000000001062e-06, 8.069999999998911e-06, 7.500000000000562e-06, 7.527999999999702e-06, 8.014000000000632e-06, 7.514000000000132e-06, 8.013999999997162e-06, 8.028000000000202e-06, 8.014000000000632e-06, 8.013999999997162e-06, 8.068999999999438e-06, 7.514000000000132e-06, 8.056000000002811e-06, 8.054999999999868e-06, 8.014000000000632e-06, 8.054999999999868e-06, 8.041000000000298e-06, 8.083000000002477e-06, 8.055999999999341e-06, 8.013000000001158e-06, 7.500000000000562e-06, 8.041999999999772e-06, 7.500000000000562e-06, 8.000000000001062e-06, 7.554999999999368e-06, 8.054999999999868e-06, 8.028000000000202e-06, 7.5419999999992715e-06, 7.486000000000992e-06, 7.554999999999368e-06, 7.514000000000132e-06, 8.041999999999772e-06, 8.096999999998578e-06]</msg>
<status status="PASS" starttime="20201112 12:27:53.101" endtime="20201112 12:27:53.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.089" endtime="20201112 12:27:53.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.114" endtime="20201112 12:27:53.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:53.122" endtime="20201112 12:27:53.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.118" endtime="20201112 12:27:53.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.109" endtime="20201112 12:27:53.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.640" endtime="20201112 12:27:53.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.639" endtime="20201112 12:27:53.148"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.175" endtime="20201112 12:27:53.193"></status>
</kw>
<msg timestamp="20201112 12:27:53.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.171" endtime="20201112 12:27:53.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.197" endtime="20201112 12:27:53.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.203" endtime="20201112 12:27:53.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.162" endtime="20201112 12:27:53.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.155" endtime="20201112 12:27:53.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.227" endtime="20201112 12:27:53.564"></status>
</kw>
<msg timestamp="20201112 12:27:53.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047178986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047187542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.223" endtime="20201112 12:27:53.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047178986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047187542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.575" endtime="20201112 12:27:53.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.595" endtime="20201112 12:27:53.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.216" endtime="20201112 12:27:53.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.211" endtime="20201112 12:27:53.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.613" level="INFO">${RESULT} = [{'time': 0.047187542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.047200667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:53.604" endtime="20201112 12:27:53.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:53.645" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:53.615" endtime="20201112 12:27:53.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.656" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:27:53.653" endtime="20201112 12:27:53.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.661" level="INFO">VALUE: [8.555999999999842e-06, 8.569999999999411e-06, 9.110999999999148e-06, 9.11200000000556e-06, 8.528000000000702e-06, 9.111000000006086e-06, 8.624999999998217e-06, 9.054999999993929e-06, 9.110999999999148e-06, 8.542000000000272e-06, 9.069000000000438e-06, 9.000000000002062e-06, 8.569999999999411e-06, 8.542000000000272e-06, 8.054999999999868e-06, 9.125000000005656e-06, 9.056000000000342e-06, 9.153000000004796e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.555000000000368e-06, 8.055999999999341e-06, 8.013999999993693e-06, 8.555999999999842e-06, 8.583999999998981e-06, 8.555000000000368e-06, 8.583000000006447e-06, 9.110999999999148e-06, 8.569999999999411e-06, 8.610999999998648e-06, 9.055000000000868e-06, 8.014000000000632e-06, 9.152000000005323e-06, 8.569999999999411e-06, 9.110999999999148e-06, 8.514000000001132e-06, 8.568999999999938e-06, 8.569999999999411e-06, 9.042000000000772e-06, 8.583999999998981e-06, 8.555999999999842e-06, 8.555999999999842e-06, 9.152999999997857e-06, 9.097999999999051e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.555000000000368e-06, 9.096999999999578e-06, 9.014000000001632e-06]</msg>
<status status="PASS" starttime="20201112 12:27:53.658" endtime="20201112 12:27:53.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.647" endtime="20201112 12:27:53.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.671" endtime="20201112 12:27:53.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:53.680" endtime="20201112 12:27:53.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.675" endtime="20201112 12:27:53.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.667" endtime="20201112 12:27:53.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.150" endtime="20201112 12:27:53.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.149" endtime="20201112 12:27:53.706"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.728" endtime="20201112 12:27:53.747"></status>
</kw>
<msg timestamp="20201112 12:27:53.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.725" endtime="20201112 12:27:53.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.751" endtime="20201112 12:27:53.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.757" endtime="20201112 12:27:53.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.718" endtime="20201112 12:27:53.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.712" endtime="20201112 12:27:53.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.782" endtime="20201112 12:27:54.117"></status>
</kw>
<msg timestamp="20201112 12:27:54.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042020181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042029792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.779" endtime="20201112 12:27:54.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042020181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042029792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.126" endtime="20201112 12:27:54.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.145" endtime="20201112 12:27:54.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.771" endtime="20201112 12:27:54.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.765" endtime="20201112 12:27:54.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:54.163" level="INFO">${RESULT} = [{'time': 0.042029792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.611000000006586e-06, 'source_diff': 9.611000000006586e-06}, {'time': 0.042044153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:54.154" endtime="20201112 12:27:54.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:54.195" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:54.165" endtime="20201112 12:27:54.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.205" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:27:54.203" endtime="20201112 12:27:54.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.211" level="INFO">VALUE: [9.611000000006586e-06, 9.610999999999648e-06, 9.624999999999218e-06, 1.0165999999998954e-05, 1.0166999999998427e-05, 9.610999999999648e-06, 1.0138999999999287e-05, 9.624999999999218e-06, 1.0124999999999718e-05, 1.0138999999999287e-05, 9.069000000000438e-06, 8.985999999995553e-06, 9.610999999999648e-06, 1.0124999999999718e-05, 9.610999999999648e-06, 9.624999999999218e-06, 9.639000000005726e-06, 9.693999999997593e-06, 1.0124999999999718e-05, 9.042000000000772e-06, 9.624999999999218e-06, 1.0124999999999718e-05, 1.0124999999999718e-05, 9.624999999999218e-06, 9.624999999999218e-06, 1.0179999999998524e-05, 1.0166999999998427e-05, 9.110999999999148e-06, 1.0152999999998857e-05, 9.555000000001368e-06, 9.624999999999218e-06, 1.0111999999999621e-05, 9.624999999999218e-06, 9.110999999999148e-06, 9.610999999999648e-06, 1.0180999999997997e-05, 9.624999999999218e-06, 1.0137999999999814e-05, 1.0167000000005366e-05, 9.624999999999218e-06, 9.625000000006156e-06, 1.0138999999999287e-05, 9.610999999999648e-06, 9.638999999998787e-06, 1.0111000000000148e-05, 9.069000000000438e-06, 9.069000000000438e-06, 9.638999999998787e-06, 9.069999999999911e-06, 1.0124999999999718e-05]</msg>
<status status="PASS" starttime="20201112 12:27:54.208" endtime="20201112 12:27:54.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.196" endtime="20201112 12:27:54.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.221" endtime="20201112 12:27:54.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:54.229" endtime="20201112 12:27:54.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.225" endtime="20201112 12:27:54.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.216" endtime="20201112 12:27:54.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.708" endtime="20201112 12:27:54.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.707" endtime="20201112 12:27:54.255"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.278" endtime="20201112 12:27:54.295"></status>
</kw>
<msg timestamp="20201112 12:27:54.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.274" endtime="20201112 12:27:54.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.299" endtime="20201112 12:27:54.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.305" endtime="20201112 12:27:54.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.267" endtime="20201112 12:27:54.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.261" endtime="20201112 12:27:54.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.328" endtime="20201112 12:27:54.663"></status>
</kw>
<msg timestamp="20201112 12:27:54.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042302472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.325" endtime="20201112 12:27:54.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042302472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.673" endtime="20201112 12:27:54.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.691" endtime="20201112 12:27:54.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.318" endtime="20201112 12:27:54.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.313" endtime="20201112 12:27:54.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:54.709" level="INFO">${RESULT} = [{'time': 0.042302472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.042319681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:54.700" endtime="20201112 12:27:54.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:54.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:54.711" endtime="20201112 12:27:54.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.753" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:27:54.750" endtime="20201112 12:27:54.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.759" level="INFO">VALUE: [1.0693999999998594e-05, 1.1222999999997707e-05, 1.0167000000005366e-05, 1.0152999999998857e-05, 1.0679999999999024e-05, 1.1165999999999954e-05, 1.0680999999998497e-05, 1.1221999999998233e-05, 1.0665999999999454e-05, 1.0680999999998497e-05, 1.0680999999998497e-05, 1.0167000000005366e-05, 1.0667000000005866e-05, 1.1221999999998233e-05, 1.1165999999999954e-05, 1.1209000000005076e-05, 1.0070000000000912e-05, 1.0652999999999357e-05, 1.0666999999998927e-05, 1.0680999999998497e-05, 1.1221999999998233e-05, 1.0665999999999454e-05, 1.1193999999999094e-05, 1.1235999999997803e-05, 1.0667000000005866e-05, 1.0179999999998524e-05, 1.0666999999998927e-05, 1.0166999999998427e-05, 1.0652999999999357e-05, 1.0679999999999024e-05, 1.0666999999998927e-05, 1.1125000000000718e-05, 1.0666999999998927e-05, 1.0665999999999454e-05, 1.1180999999998997e-05, 1.0679999999999024e-05, 1.1236000000004742e-05, 1.0181000000004936e-05, 1.0666999999998927e-05, 1.0681000000005436e-05, 1.1180999999998997e-05, 1.0665999999999454e-05, 1.1181000000005936e-05, 1.0666999999998927e-05, 1.1235999999997803e-05, 1.0680999999998497e-05, 1.0165999999998954e-05, 1.0735999999997303e-05, 1.0736000000004242e-05, 1.0179999999998524e-05]</msg>
<status status="PASS" starttime="20201112 12:27:54.755" endtime="20201112 12:27:54.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.743" endtime="20201112 12:27:54.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.768" endtime="20201112 12:27:54.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:54.776" endtime="20201112 12:27:54.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.772" endtime="20201112 12:27:54.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.764" endtime="20201112 12:27:54.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.257" endtime="20201112 12:27:54.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.256" endtime="20201112 12:27:54.802"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.825" endtime="20201112 12:27:54.843"></status>
</kw>
<msg timestamp="20201112 12:27:54.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.822" endtime="20201112 12:27:54.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.847" endtime="20201112 12:27:54.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.853" endtime="20201112 12:27:54.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.814" endtime="20201112 12:27:54.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.809" endtime="20201112 12:27:54.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.876" endtime="20201112 12:27:55.208"></status>
</kw>
<msg timestamp="20201112 12:27:55.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041876125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041888375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.873" endtime="20201112 12:27:55.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041876125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041888375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.218" endtime="20201112 12:27:55.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.237" endtime="20201112 12:27:55.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.866" endtime="20201112 12:27:55.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.861" endtime="20201112 12:27:55.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.254" level="INFO">${RESULT} = [{'time': 0.041888375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.041910472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:55.245" endtime="20201112 12:27:55.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:55.285" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:55.256" endtime="20201112 12:27:55.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.296" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:27:55.294" endtime="20201112 12:27:55.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.301" level="INFO">VALUE: [1.2249999999998373e-05, 1.1707999999999164e-05, 1.1221999999998233e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1763000000004908e-05, 1.1722999999998207e-05, 1.2305000000004118e-05, 1.1707999999999164e-05, 1.2305000000004118e-05, 1.1736999999997777e-05, 1.2221999999999233e-05, 1.1221999999998233e-05, 1.1722999999998207e-05, 1.1722000000005672e-05, 1.1291999999996083e-05, 1.227699999999804e-05, 1.1179999999999524e-05, 1.1207999999998663e-05, 1.1208000000005602e-05, 1.1209000000005076e-05, 1.2207999999999664e-05, 1.1722999999998207e-05, 1.2291999999997083e-05, 1.2278000000004452e-05, 1.1750000000004812e-05, 1.1666999999999927e-05, 1.2263999999997943e-05, 1.1721999999998733e-05, 1.2334000000002732e-05, 1.2221999999999233e-05, 1.227699999999804e-05, 1.2263999999997943e-05, 1.2291999999997083e-05, 1.1166999999999427e-05, 1.1223000000004646e-05, 1.1180999999998997e-05, 1.2278000000004452e-05, 1.1749999999997873e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.1736000000005242e-05, 1.1735999999998303e-05, 1.1750000000004812e-05, 1.1735999999998303e-05, 1.1180999999998997e-05, 1.1792000000003522e-05, 1.2249999999998373e-05, 1.1235999999997803e-05, 1.1194000000006032e-05]</msg>
<status status="PASS" starttime="20201112 12:27:55.298" endtime="20201112 12:27:55.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.287" endtime="20201112 12:27:55.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.311" endtime="20201112 12:27:55.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.321" endtime="20201112 12:27:55.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.316" endtime="20201112 12:27:55.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.306" endtime="20201112 12:27:55.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.804" endtime="20201112 12:27:55.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.803" endtime="20201112 12:27:55.346"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.369" endtime="20201112 12:27:55.387"></status>
</kw>
<msg timestamp="20201112 12:27:55.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.366" endtime="20201112 12:27:55.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.390" endtime="20201112 12:27:55.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.396" endtime="20201112 12:27:55.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.359" endtime="20201112 12:27:55.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.353" endtime="20201112 12:27:55.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.420" endtime="20201112 12:27:55.754"></status>
</kw>
<msg timestamp="20201112 12:27:55.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0419245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:55.417" endtime="20201112 12:27:55.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0419245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:55.763" endtime="20201112 12:27:55.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.782" endtime="20201112 12:27:55.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.409" endtime="20201112 12:27:55.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.405" endtime="20201112 12:27:55.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.799" level="INFO">${RESULT} = [{'time': 0.0419245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2792000000004522e-05, 'source_diff': 1.2792000000004522e-05}, {'time': 0.041948347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:55.790" endtime="20201112 12:27:55.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:55.830" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:55.802" endtime="20201112 12:27:55.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.841" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:27:55.839" endtime="20201112 12:27:55.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.846" level="INFO">VALUE: [1.2792000000004522e-05, 1.2221999999999233e-05, 1.3333999999996793e-05, 1.281899999999725e-05, 1.3333000000004258e-05, 1.3375000000002968e-05, 1.2778000000004952e-05, 1.2778000000004952e-05, 1.2791999999997583e-05, 1.3306000000004592e-05, 1.2805999999997153e-05, 1.276299999999897e-05, 1.279099999999811e-05, 1.2777999999998013e-05, 1.2805999999997153e-05, 1.3277999999998513e-05, 1.2263999999997943e-05, 1.2833000000003758e-05, 1.2791999999997583e-05, 1.2792000000004522e-05, 1.331899999999775e-05, 1.2791999999997583e-05, 1.3347000000003828e-05, 1.3334000000003732e-05, 1.2264000000004882e-05, 1.2763999999998443e-05, 1.2236000000005742e-05, 1.2235999999998803e-05, 1.2791999999997583e-05, 1.280499999999768e-05, 1.329099999999861e-05, 1.2249999999998373e-05, 1.2235999999998803e-05, 1.2292000000004022e-05, 1.2235999999998803e-05, 1.3346999999996889e-05, 1.3305999999997653e-05, 1.3291999999998083e-05, 1.2222999999998707e-05, 1.2791999999997583e-05, 1.2235999999998803e-05, 1.333299999999732e-05, 1.2792000000004522e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.2805999999997153e-05, 1.2778000000004952e-05, 1.2777999999998013e-05, 1.2777999999998013e-05, 1.2791999999997583e-05]</msg>
<status status="PASS" starttime="20201112 12:27:55.843" endtime="20201112 12:27:55.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.832" endtime="20201112 12:27:55.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.856" endtime="20201112 12:27:55.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.865" endtime="20201112 12:27:55.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.860" endtime="20201112 12:27:55.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.852" endtime="20201112 12:27:55.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.349" endtime="20201112 12:27:55.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.347" endtime="20201112 12:27:55.890"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.915" endtime="20201112 12:27:55.933"></status>
</kw>
<msg timestamp="20201112 12:27:55.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.911" endtime="20201112 12:27:55.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.936" endtime="20201112 12:27:55.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.941" endtime="20201112 12:27:55.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.904" endtime="20201112 12:27:55.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.897" endtime="20201112 12:27:55.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.952" endtime="20201112 12:27:56.237"></status>
</kw>
<msg timestamp="20201112 12:27:56.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043721694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043735569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.950" endtime="20201112 12:27:56.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043721694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043735569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.241" endtime="20201112 12:27:56.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.259" endtime="20201112 12:27:56.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.947" endtime="20201112 12:27:56.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.945" endtime="20201112 12:27:56.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:56.276" level="INFO">${RESULT} = [{'time': 0.043735569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3875000000003468e-05, 'source_diff': 1.3875000000003468e-05}, {'time': 0.043752139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:56.267" endtime="20201112 12:27:56.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:56.307" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:56.278" endtime="20201112 12:27:56.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.318" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:27:56.316" endtime="20201112 12:27:56.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.323" level="INFO">VALUE: [1.3875000000003468e-05, 1.3306000000004592e-05, 1.3277999999998513e-05, 1.3847000000004328e-05, 1.3819999999997723e-05, 1.3847000000004328e-05, 1.3291000000005548e-05, 1.384699999999739e-05, 1.4402999999996169e-05, 1.3875000000003468e-05, 1.3833000000004758e-05, 1.3777999999999013e-05, 1.3833000000004758e-05, 1.3888999999996099e-05, 1.3833000000004758e-05, 1.3916999999995239e-05, 1.3348000000003302e-05, 1.3834000000004232e-05, 1.4347000000004828e-05, 1.3847000000004328e-05, 1.3291999999998083e-05, 1.3847000000004328e-05, 1.3361000000003398e-05, 1.3833999999997293e-05, 1.3861000000003898e-05, 1.3291999999998083e-05, 1.3333000000004258e-05, 1.3833999999997293e-05, 1.3805999999998153e-05, 1.3277999999998513e-05, 1.434699999999789e-05, 1.3277999999998513e-05, 1.434699999999789e-05, 1.3833000000004758e-05, 1.3320000000004162e-05, 1.3860999999996959e-05, 1.3333000000004258e-05, 1.3347000000003828e-05, 1.4402999999996169e-05, 1.3860999999996959e-05, 1.384699999999739e-05, 1.434699999999789e-05, 1.3917000000002178e-05, 1.4389000000003538e-05, 1.3860999999996959e-05, 1.3333999999996793e-05, 1.3334000000003732e-05, 1.383299999999782e-05, 1.3833000000004758e-05, 1.3861000000003898e-05]</msg>
<status status="PASS" starttime="20201112 12:27:56.320" endtime="20201112 12:27:56.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.309" endtime="20201112 12:27:56.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.333" endtime="20201112 12:27:56.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:56.341" endtime="20201112 12:27:56.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.337" endtime="20201112 12:27:56.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.328" endtime="20201112 12:27:56.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.892" endtime="20201112 12:27:56.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.891" endtime="20201112 12:27:56.367"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.390" endtime="20201112 12:27:56.410"></status>
</kw>
<msg timestamp="20201112 12:27:56.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.386" endtime="20201112 12:27:56.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.413" endtime="20201112 12:27:56.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.420" endtime="20201112 12:27:56.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.379" endtime="20201112 12:27:56.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.373" endtime="20201112 12:27:56.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.443" endtime="20201112 12:27:56.780"></status>
</kw>
<msg timestamp="20201112 12:27:56.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04343375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043448139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:56.440" endtime="20201112 12:27:56.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04343375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043448139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:56.789" endtime="20201112 12:27:56.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.808" endtime="20201112 12:27:56.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.433" endtime="20201112 12:27:56.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.428" endtime="20201112 12:27:56.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:56.826" level="INFO">${RESULT} = [{'time': 0.043448139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.043471861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:56.817" endtime="20201112 12:27:56.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:56.858" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:56.828" endtime="20201112 12:27:56.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.869" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:27:56.867" endtime="20201112 12:27:56.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.875" level="INFO">VALUE: [1.4388999999996599e-05, 1.4389000000003538e-05, 1.486099999999796e-05, 1.4874999999997529e-05, 1.4917000000003178e-05, 1.4888999999997099e-05, 1.5403000000004108e-05, 1.4901999999997195e-05, 1.433299999999832e-05, 1.4874999999997529e-05, 1.4930000000003274e-05, 1.5445000000002818e-05, 1.4902999999996669e-05, 1.4375000000003968e-05, 1.4889000000004038e-05, 1.4915999999996765e-05, 1.4402999999996169e-05, 1.4402000000003634e-05, 1.4388999999996599e-05, 1.4874999999997529e-05, 1.4888999999997099e-05, 1.4945000000002318e-05, 1.484699999999839e-05, 1.486099999999796e-05, 1.4347999999997363e-05, 1.4903000000003608e-05, 1.4888999999997099e-05, 1.4889000000004038e-05, 1.481899999999925e-05, 1.4874999999997529e-05, 1.4917000000003178e-05, 1.486099999999796e-05, 1.4929999999996335e-05, 1.4888999999997099e-05, 1.4819999999998723e-05, 1.4915999999996765e-05, 1.4403000000003108e-05, 1.4874999999997529e-05, 1.4360999999997459e-05, 1.4903000000003608e-05, 1.4903000000003608e-05, 1.4874999999997529e-05, 1.4902999999996669e-05, 1.484699999999839e-05, 1.4902999999996669e-05, 1.483299999999882e-05, 1.4903000000003608e-05, 1.4889000000004038e-05, 1.434699999999789e-05, 1.4875000000004468e-05]</msg>
<status status="PASS" starttime="20201112 12:27:56.872" endtime="20201112 12:27:56.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.860" endtime="20201112 12:27:56.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.884" endtime="20201112 12:27:56.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:56.893" endtime="20201112 12:27:56.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.888" endtime="20201112 12:27:56.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.880" endtime="20201112 12:27:56.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.369" endtime="20201112 12:27:56.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.368" endtime="20201112 12:27:56.919"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.942" endtime="20201112 12:27:56.961"></status>
</kw>
<msg timestamp="20201112 12:27:56.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.938" endtime="20201112 12:27:56.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.964" endtime="20201112 12:27:56.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.970" endtime="20201112 12:27:56.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.931" endtime="20201112 12:27:56.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.925" endtime="20201112 12:27:56.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.996" endtime="20201112 12:27:57.332"></status>
</kw>
<msg timestamp="20201112 12:27:57.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042483875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042499278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.992" endtime="20201112 12:27:57.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042483875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042499278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.341" endtime="20201112 12:27:57.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.360" endtime="20201112 12:27:57.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.983" endtime="20201112 12:27:57.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.978" endtime="20201112 12:27:57.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.378" level="INFO">${RESULT} = [{'time': 0.042499278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5403000000004108e-05, 'source_diff': 1.5403000000004108e-05}, {'time': 0.042518389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:57.369" endtime="20201112 12:27:57.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:57.408" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:57.380" endtime="20201112 12:27:57.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.419" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:27:57.417" endtime="20201112 12:27:57.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.425" level="INFO">VALUE: [1.5403000000004108e-05, 1.540299999999717e-05, 1.5972000000002984e-05, 1.5403000000004108e-05, 1.5417000000003678e-05, 1.595899999999595e-05, 1.5457999999995975e-05, 1.5472000000002484e-05, 1.5431000000003248e-05, 1.5972000000002984e-05, 1.5889000000005038e-05, 1.5401999999997695e-05, 1.5388000000005064e-05, 1.5943999999996905e-05, 1.5972000000002984e-05, 1.5958000000003414e-05, 1.6485999999996115e-05, 1.5943999999996905e-05, 1.5929999999997335e-05, 1.595899999999595e-05, 1.6443999999997405e-05, 1.5458000000002914e-05, 1.5403000000004108e-05, 1.5971999999996045e-05, 1.5943999999996905e-05, 1.541699999999674e-05, 1.5417000000003678e-05, 1.5861000000005898e-05, 1.5958000000003414e-05, 1.5957999999996475e-05, 1.5986000000002554e-05, 1.5943999999996905e-05, 1.5958000000003414e-05, 1.5959000000002888e-05, 1.5944000000003844e-05, 1.5945000000003318e-05, 1.5958000000003414e-05, 1.5972000000002984e-05, 1.587499999999853e-05, 1.5972000000002984e-05, 1.5403000000004108e-05, 1.5957999999996475e-05, 1.5459000000002387e-05, 1.5957999999996475e-05, 1.5514000000001194e-05, 1.5417000000003678e-05, 1.6486000000003054e-05, 1.541699999999674e-05, 1.5971999999996045e-05, 1.537499999999803e-05]</msg>
<status status="PASS" starttime="20201112 12:27:57.422" endtime="20201112 12:27:57.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.410" endtime="20201112 12:27:57.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.439" endtime="20201112 12:27:57.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:57.448" endtime="20201112 12:27:57.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.443" endtime="20201112 12:27:57.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.434" endtime="20201112 12:27:57.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.921" endtime="20201112 12:27:57.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.920" endtime="20201112 12:27:57.474"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.496" endtime="20201112 12:27:57.515"></status>
</kw>
<msg timestamp="20201112 12:27:57.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.493" endtime="20201112 12:27:57.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.519" endtime="20201112 12:27:57.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.525" endtime="20201112 12:27:57.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.486" endtime="20201112 12:27:57.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.480" endtime="20201112 12:27:57.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.548" endtime="20201112 12:27:57.898"></status>
</kw>
<msg timestamp="20201112 12:27:57.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042116597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042133056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.545" endtime="20201112 12:27:57.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042116597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042133056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.907" endtime="20201112 12:27:57.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.927" endtime="20201112 12:27:57.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.538" endtime="20201112 12:27:57.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.533" endtime="20201112 12:27:57.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.945" level="INFO">${RESULT} = [{'time': 0.042133056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6459000000003388e-05, 'source_diff': 1.6459000000003388e-05}, {'time': 0.042159056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:57.935" endtime="20201112 12:27:57.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:57.975" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:57.947" endtime="20201112 12:27:57.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.986" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:27:57.984" endtime="20201112 12:27:57.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.991" level="INFO">VALUE: [1.6459000000003388e-05, 1.6459000000003388e-05, 1.7000000000003124e-05, 1.6458000000003914e-05, 1.6485999999996115e-05, 1.6443999999997405e-05, 1.7013999999995755e-05, 1.6457999999996975e-05, 1.6485999999996115e-05, 1.6943999999997905e-05, 1.640299999999817e-05, 1.7028000000002264e-05, 1.6457999999996975e-05, 1.7014000000002694e-05, 1.6457999999996975e-05, 1.6513999999995255e-05, 1.6971999999997045e-05, 1.647299999999602e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.7014000000002694e-05, 1.7013999999995755e-05, 1.6458000000003914e-05, 1.651299999999578e-05, 1.7014000000002694e-05, 1.6985999999996615e-05, 1.6500000000002624e-05, 1.7000000000003124e-05, 1.7013999999995755e-05, 1.6999999999996185e-05, 1.7013999999995755e-05, 1.645899999999645e-05, 1.7014000000002694e-05, 1.6473000000002957e-05, 1.6958000000004414e-05, 1.7013999999995755e-05, 1.7070000000000973e-05, 1.704099999999542e-05, 1.7014000000002694e-05, 1.6443999999997405e-05, 1.7013999999995755e-05, 1.7000000000003124e-05, 1.7014000000002694e-05, 1.6472000000003484e-05, 1.6999999999996185e-05, 1.6458000000003914e-05, 1.6457999999996975e-05, 1.6486000000003054e-05, 1.709700000000064e-05, 1.6500000000002624e-05]</msg>
<status status="PASS" starttime="20201112 12:27:57.988" endtime="20201112 12:27:57.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.977" endtime="20201112 12:27:57.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.001" endtime="20201112 12:27:58.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.010" endtime="20201112 12:27:58.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.005" endtime="20201112 12:27:58.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.996" endtime="20201112 12:27:58.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.476" endtime="20201112 12:27:58.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.474" endtime="20201112 12:27:58.036"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.059" endtime="20201112 12:27:58.077"></status>
</kw>
<msg timestamp="20201112 12:27:58.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.055" endtime="20201112 12:27:58.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.080" endtime="20201112 12:27:58.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.086" endtime="20201112 12:27:58.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.048" endtime="20201112 12:27:58.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.042" endtime="20201112 12:27:58.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.110" endtime="20201112 12:27:58.458"></status>
</kw>
<msg timestamp="20201112 12:27:58.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042463083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042480625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.107" endtime="20201112 12:27:58.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042463083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042480625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.468" endtime="20201112 12:27:58.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.487" endtime="20201112 12:27:58.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.099" endtime="20201112 12:27:58.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.095" endtime="20201112 12:27:58.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.504" level="INFO">${RESULT} = [{'time': 0.042480625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7542000000002334e-05, 'source_diff': 1.7542000000002334e-05}, {'time': 0.042513861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:58.495" endtime="20201112 12:27:58.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:58.535" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:58.506" endtime="20201112 12:27:58.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.546" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:27:58.544" endtime="20201112 12:27:58.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.552" level="INFO">VALUE: [1.7542000000002334e-05, 1.805500000000293e-05, 1.755499999999549e-05, 1.808300000000207e-05, 1.752700000000329e-05, 1.7556000000001903e-05, 1.7486000000004054e-05, 1.7499999999996685e-05, 1.751299999999678e-05, 1.805500000000293e-05, 1.808299999999513e-05, 1.8055999999995465e-05, 1.8027999999996325e-05, 1.755500000000243e-05, 1.8070000000001973e-05, 1.755500000000243e-05, 1.8083999999994604e-05, 1.7556000000001903e-05, 1.7013999999995755e-05, 1.7528000000002764e-05, 1.7569000000002e-05, 1.80690000000025e-05, 1.8070000000001973e-05, 1.7999999999997185e-05, 1.8042000000002834e-05, 1.808300000000207e-05, 1.7514000000003194e-05, 1.8042000000002834e-05, 1.755500000000243e-05, 1.812499999999384e-05, 1.7528000000002764e-05, 1.811100000000121e-05, 1.8056000000002403e-05, 1.80690000000025e-05, 1.8070000000001973e-05, 1.80690000000025e-05, 1.805499999999599e-05, 1.7514000000003194e-05, 1.7555999999994965e-05, 1.805499999999599e-05, 1.7457999999997975e-05, 1.702699999999585e-05, 1.8070000000001973e-05, 1.7457999999997975e-05, 1.7570000000001473e-05, 1.8055999999995465e-05, 1.8042000000002834e-05, 1.8084000000001543e-05, 1.7556000000001903e-05, 1.7528000000002764e-05]</msg>
<status status="PASS" starttime="20201112 12:27:58.548" endtime="20201112 12:27:58.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.537" endtime="20201112 12:27:58.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.561" endtime="20201112 12:27:58.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.570" endtime="20201112 12:27:58.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.565" endtime="20201112 12:27:58.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.557" endtime="20201112 12:27:58.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.038" endtime="20201112 12:27:58.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.037" endtime="20201112 12:27:58.596"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.620" endtime="20201112 12:27:58.639"></status>
</kw>
<msg timestamp="20201112 12:27:58.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.616" endtime="20201112 12:27:58.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.642" endtime="20201112 12:27:58.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.649" endtime="20201112 12:27:58.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.609" endtime="20201112 12:27:58.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.603" endtime="20201112 12:27:58.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.673" endtime="20201112 12:27:59.017"></status>
</kw>
<msg timestamp="20201112 12:27:59.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043606931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043626056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.669" endtime="20201112 12:27:59.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043606931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043626056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.027" endtime="20201112 12:27:59.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.045" endtime="20201112 12:27:59.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.662" endtime="20201112 12:27:59.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.657" endtime="20201112 12:27:59.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.064" level="INFO">${RESULT} = [{'time': 0.043626056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.04365375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:59.055" endtime="20201112 12:27:59.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:59.097" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:59.066" endtime="20201112 12:27:59.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.108" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:27:59.106" endtime="20201112 12:27:59.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.113" level="INFO">VALUE: [1.912500000000178e-05, 1.8513999999997255e-05, 1.911100000000221e-05, 1.8055999999995465e-05, 1.859700000000214e-05, 1.912499999999484e-05, 1.9098000000002113e-05, 1.8084000000001543e-05, 1.911100000000221e-05, 1.916700000000049e-05, 1.861099999999477e-05, 1.909700000000264e-05, 1.8569000000003e-05, 1.859700000000214e-05, 1.862500000000128e-05, 1.916700000000049e-05, 1.855500000000343e-05, 1.912500000000178e-05, 1.915300000000092e-05, 1.8569000000003e-05, 1.8542000000003334e-05, 1.8584000000002043e-05, 1.863900000000085e-05, 1.9138000000001876e-05, 1.861100000000171e-05, 1.912500000000178e-05, 1.8584000000002043e-05, 1.913900000000135e-05, 1.862500000000128e-05, 1.913900000000135e-05, 1.8513999999997255e-05, 1.911100000000221e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.911099999999527e-05, 1.8556000000002904e-05, 1.8598000000001613e-05, 1.862500000000128e-05, 1.861100000000171e-05, 1.909700000000264e-05, 1.911100000000221e-05, 1.911099999999527e-05, 1.90969999999957e-05, 1.856899999999606e-05, 1.911099999999527e-05, 1.8570000000002473e-05, 1.863900000000085e-05, 1.9084000000002543e-05, 1.85969999999952e-05, 1.911099999999527e-05]</msg>
<status status="PASS" starttime="20201112 12:27:59.110" endtime="20201112 12:27:59.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.099" endtime="20201112 12:27:59.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.123" endtime="20201112 12:27:59.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:59.131" endtime="20201112 12:27:59.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.127" endtime="20201112 12:27:59.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.118" endtime="20201112 12:27:59.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.598" endtime="20201112 12:27:59.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.597" endtime="20201112 12:27:59.157"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.180" endtime="20201112 12:27:59.199"></status>
</kw>
<msg timestamp="20201112 12:27:59.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.177" endtime="20201112 12:27:59.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.202" endtime="20201112 12:27:59.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.208" endtime="20201112 12:27:59.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.169" endtime="20201112 12:27:59.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.164" endtime="20201112 12:27:59.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.232" endtime="20201112 12:27:59.558"></status>
</kw>
<msg timestamp="20201112 12:27:59.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042575458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042595069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.229" endtime="20201112 12:27:59.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042575458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042595069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.563" endtime="20201112 12:27:59.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.571" endtime="20201112 12:27:59.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.221" endtime="20201112 12:27:59.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.217" endtime="20201112 12:27:59.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.579" level="INFO">${RESULT} = [{'time': 0.042595069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.961100000000271e-05, 'source_diff': 1.961100000000271e-05}, {'time': 0.042617986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:59.575" endtime="20201112 12:27:59.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:59.594" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:59.581" endtime="20201112 12:27:59.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.599" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:27:59.598" endtime="20201112 12:27:59.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.602" level="INFO">VALUE: [1.961100000000271e-05, 1.9541999999997395e-05, 1.963900000000185e-05, 2.016700000000149e-05, 2.018100000000106e-05, 1.913899999999441e-05, 2.018100000000106e-05, 1.9612000000002183e-05, 2.016700000000149e-05, 1.961100000000271e-05, 2.016700000000149e-05, 1.963900000000185e-05, 1.961100000000271e-05, 2.019500000000063e-05, 1.966700000000099e-05, 1.9694000000000655e-05, 1.9612000000002183e-05, 2.016700000000149e-05, 2.016700000000149e-05, 1.9152000000001446e-05, 1.912500000000178e-05, 2.016699999999455e-05, 1.962500000000228e-05, 2.012500000000278e-05, 1.9680000000001086e-05, 1.966699999999405e-05, 2.016700000000149e-05, 1.962500000000228e-05, 1.961099999999577e-05, 1.9651999999995007e-05, 1.9666000000001516e-05, 1.966700000000099e-05, 2.0194000000001155e-05, 1.969500000000013e-05, 1.965299999999448e-05, 2.0165999999995077e-05, 1.962500000000228e-05, 1.909700000000264e-05, 1.956899999999706e-05, 1.911099999999527e-05, 1.962499999999534e-05, 1.9694000000000655e-05, 1.913900000000135e-05, 1.966700000000099e-05, 1.906899999999656e-05, 1.963899999999491e-05, 2.0152000000002446e-05, 1.963900000000185e-05, 1.911099999999527e-05, 1.913900000000135e-05]</msg>
<status status="PASS" starttime="20201112 12:27:59.600" endtime="20201112 12:27:59.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.595" endtime="20201112 12:27:59.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.606" endtime="20201112 12:27:59.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:59.610" endtime="20201112 12:27:59.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.608" endtime="20201112 12:27:59.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.604" endtime="20201112 12:27:59.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.159" endtime="20201112 12:27:59.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.158" endtime="20201112 12:27:59.632"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.643" endtime="20201112 12:27:59.659"></status>
</kw>
<msg timestamp="20201112 12:27:59.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.641" endtime="20201112 12:27:59.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.660" endtime="20201112 12:27:59.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.663" endtime="20201112 12:27:59.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.637" endtime="20201112 12:27:59.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.635" endtime="20201112 12:27:59.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.675" endtime="20201112 12:28:00.009"></status>
</kw>
<msg timestamp="20201112 12:28:00.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025773528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.673" endtime="20201112 12:28:00.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025773528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.018" endtime="20201112 12:28:00.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.037" endtime="20201112 12:28:00.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.669" endtime="20201112 12:28:00.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.667" endtime="20201112 12:28:00.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.055" level="INFO">${RESULT} = [{'time': 0.025794806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1277999999999575e-05, 'source_diff': 2.1277999999999575e-05}, {'time': 0.025828653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:00.046" endtime="20201112 12:28:00.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:00.087" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:00.057" endtime="20201112 12:28:00.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.098" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:28:00.096" endtime="20201112 12:28:00.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.103" level="INFO">VALUE: [2.1277999999999575e-05, 2.1236000000000865e-05, 2.0666000000002516e-05, 2.0665999999999046e-05, 2.1236000000000865e-05, 2.068099999999809e-05, 2.0722000000000795e-05, 2.07229999999968e-05, 2.1236000000000865e-05, 2.068100000000156e-05, 2.1236000000000865e-05, 2.0736000000000365e-05, 2.072300000000027e-05, 2.07090000000007e-05, 2.012499999999931e-05, 2.0194000000001155e-05, 2.0180000000001586e-05, 2.069499999999766e-05, 2.0778000000002544e-05, 2.0708000000001225e-05, 2.07090000000007e-05, 2.07090000000007e-05, 2.068100000000156e-05, 2.02090000000002e-05, 2.1264000000000005e-05, 2.068099999999809e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.068099999999809e-05, 2.0749999999999935e-05, 2.1236000000000865e-05, 2.0665999999999046e-05, 2.0736000000000365e-05, 2.073700000000331e-05, 2.0166000000002016e-05, 2.072300000000027e-05, 2.1222000000001295e-05, 2.1236000000000865e-05, 2.0721999999997326e-05, 2.0179999999998116e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.1250000000000435e-05, 2.018100000000106e-05, 2.120899999999773e-05, 2.1222000000001295e-05, 2.1250000000000435e-05, 2.0235999999999865e-05, 2.016699999999802e-05]</msg>
<status status="PASS" starttime="20201112 12:28:00.100" endtime="20201112 12:28:00.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.089" endtime="20201112 12:28:00.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.113" endtime="20201112 12:28:00.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.121" endtime="20201112 12:28:00.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.117" endtime="20201112 12:28:00.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.108" endtime="20201112 12:28:00.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.633" endtime="20201112 12:28:00.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.632" endtime="20201112 12:28:00.147"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.170" endtime="20201112 12:28:00.188"></status>
</kw>
<msg timestamp="20201112 12:28:00.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.166" endtime="20201112 12:28:00.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.191" endtime="20201112 12:28:00.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.198" endtime="20201112 12:28:00.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.159" endtime="20201112 12:28:00.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.153" endtime="20201112 12:28:00.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.221" endtime="20201112 12:28:00.557"></status>
</kw>
<msg timestamp="20201112 12:28:00.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042072583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042094847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.218" endtime="20201112 12:28:00.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042072583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042094847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.567" endtime="20201112 12:28:00.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.586" endtime="20201112 12:28:00.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.211" endtime="20201112 12:28:00.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.206" endtime="20201112 12:28:00.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.603" level="INFO">${RESULT} = [{'time': 0.042094847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2264000000001005e-05, 'source_diff': 2.2264000000001005e-05}, {'time': 0.042124708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:00.594" endtime="20201112 12:28:00.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:00.635" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:00.605" endtime="20201112 12:28:00.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.646" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:28:00.644" endtime="20201112 12:28:00.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.652" level="INFO">VALUE: [2.2264000000001005e-05, 2.1776999999993663e-05, 2.2292000000000145e-05, 2.1750000000000935e-05, 2.2264000000001005e-05, 2.1778000000000075e-05, 2.1208000000001725e-05, 2.123700000000034e-05, 2.1222000000001295e-05, 2.1680000000003086e-05, 2.179100000000017e-05, 2.1222000000001295e-05, 2.1750000000000935e-05, 2.2305999999999715e-05, 2.1763999999993566e-05, 2.1736000000001365e-05, 2.1791999999999645e-05, 2.2208000000002726e-05, 2.1722000000001795e-05, 2.1735999999994426e-05, 2.179100000000017e-05, 2.2278000000000575e-05, 2.1221999999994356e-05, 2.1208000000001725e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.17770000000006e-05, 2.12369999999934e-05, 2.1736000000001365e-05, 2.1764000000000505e-05, 2.1222000000001295e-05, 2.1250000000000435e-05, 2.1236000000000865e-05, 2.1236000000000865e-05, 2.1721999999994857e-05, 2.1749999999993996e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.2292000000000145e-05, 2.1721999999994857e-05, 2.1736000000001365e-05, 2.1236000000000865e-05, 2.1764000000000505e-05, 2.1763999999993566e-05, 2.1778000000000075e-05, 2.2264000000001005e-05, 2.1764000000000505e-05, 2.1236000000000865e-05, 2.2264000000001005e-05]</msg>
<status status="PASS" starttime="20201112 12:28:00.648" endtime="20201112 12:28:00.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.637" endtime="20201112 12:28:00.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.662" endtime="20201112 12:28:00.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.670" endtime="20201112 12:28:00.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.666" endtime="20201112 12:28:00.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.657" endtime="20201112 12:28:00.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.149" endtime="20201112 12:28:00.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.148" endtime="20201112 12:28:00.697"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.719" endtime="20201112 12:28:00.738"></status>
</kw>
<msg timestamp="20201112 12:28:00.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.716" endtime="20201112 12:28:00.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.742" endtime="20201112 12:28:00.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.748" endtime="20201112 12:28:00.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.709" endtime="20201112 12:28:00.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.703" endtime="20201112 12:28:00.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.772" endtime="20201112 12:28:01.106"></status>
</kw>
<msg timestamp="20201112 12:28:01.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042974542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.768" endtime="20201112 12:28:01.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042974542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.116" endtime="20201112 12:28:01.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.135" endtime="20201112 12:28:01.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.761" endtime="20201112 12:28:01.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.756" endtime="20201112 12:28:01.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.152" level="INFO">${RESULT} = [{'time': 0.042974542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2819999999999785e-05, 'source_diff': 2.2819999999999785e-05}, {'time': 0.043005764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:01.143" endtime="20201112 12:28:01.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:01.185" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:01.154" endtime="20201112 12:28:01.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.197" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:28:01.194" endtime="20201112 12:28:01.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.202" level="INFO">VALUE: [2.2819999999999785e-05, 2.334699999999995e-05, 2.2792000000000645e-05, 2.22770000000011e-05, 2.2278000000000575e-05, 2.287499999999859e-05, 2.2320000000006224e-05, 2.2792000000000645e-05, 2.334699999999995e-05, 2.2292000000000145e-05, 2.283299999999988e-05, 2.2792000000000645e-05, 2.2736000000002365e-05, 2.233299999999938e-05, 2.2792000000000645e-05, 2.2847999999998925e-05, 2.336099999999952e-05, 2.334699999999995e-05, 2.286099999999902e-05, 2.2305999999999715e-05, 2.2750000000001935e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.3333999999999855e-05, 2.281900000000031e-05, 2.2791999999993706e-05, 2.230500000000024e-05, 2.283299999999988e-05, 2.2276999999994163e-05, 2.279100000000117e-05, 2.279100000000117e-05, 2.3333999999999855e-05, 2.2776999999994663e-05, 2.279100000000117e-05, 2.229100000000067e-05, 2.2806000000000215e-05, 2.2278000000000575e-05, 2.2792000000000645e-05, 2.231900000000675e-05, 2.2806000000000215e-05, 2.284699999999945e-05, 2.334699999999995e-05, 2.283299999999988e-05, 2.283299999999988e-05, 2.2264000000001005e-05, 2.2806000000000215e-05, 2.336099999999952e-05, 2.283299999999988e-05, 2.283299999999988e-05, 2.279100000000117e-05]</msg>
<status status="PASS" starttime="20201112 12:28:01.199" endtime="20201112 12:28:01.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.187" endtime="20201112 12:28:01.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.212" endtime="20201112 12:28:01.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:01.220" endtime="20201112 12:28:01.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.216" endtime="20201112 12:28:01.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.207" endtime="20201112 12:28:01.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.699" endtime="20201112 12:28:01.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.698" endtime="20201112 12:28:01.246"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.269" endtime="20201112 12:28:01.289"></status>
</kw>
<msg timestamp="20201112 12:28:01.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.266" endtime="20201112 12:28:01.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.292" endtime="20201112 12:28:01.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.299" endtime="20201112 12:28:01.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.258" endtime="20201112 12:28:01.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.252" endtime="20201112 12:28:01.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.322" endtime="20201112 12:28:01.666"></status>
</kw>
<msg timestamp="20201112 12:28:01.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042684778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.319" endtime="20201112 12:28:01.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042684778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.677" endtime="20201112 12:28:01.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.698" endtime="20201112 12:28:01.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.312" endtime="20201112 12:28:01.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.307" endtime="20201112 12:28:01.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.718" level="INFO">${RESULT} = [{'time': 0.042684778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4610999999996894e-05, 'source_diff': 3.4610999999996894e-05}, {'time': 0.042733778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:01.707" endtime="20201112 12:28:01.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:01.751" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:01.721" endtime="20201112 12:28:01.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.763" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:28:01.760" endtime="20201112 12:28:01.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.769" level="INFO">VALUE: [3.4610999999996894e-05, 3.483399999999748e-05, 3.513900000000347e-05, 3.468100000000168e-05, 3.495900000000107e-05, 3.416700000000161e-05, 3.442999999999502e-05, 3.424999999999956e-05, 3.509700000000476e-05, 3.449999999999981e-05, 3.4582999999997754e-05, 3.413900000000247e-05, 3.449999999999981e-05, 3.4888999999996284e-05, 3.495799999999466e-05, 3.46250000000034e-05, 3.51250000000039e-05, 3.500000000000031e-05, 3.452799999999895e-05, 3.423599999999999e-05, 3.4332999999997504e-05, 3.502799999999945e-05, 3.49580000000016e-05, 3.498600000000074e-05, 3.451399999999938e-05, 3.4860999999997144e-05, 3.501399999999988e-05, 3.493100000000193e-05, 3.508399999999773e-05, 3.447300000000014e-05, 3.431999999999741e-05, 3.5110999999997394e-05, 3.449999999999981e-05, 3.45979999999968e-05, 3.46659999999957e-05, 3.475000000000006e-05, 3.470799999999441e-05, 3.49580000000016e-05, 3.4790999999999295e-05, 3.4874999999996714e-05, 3.4582999999997754e-05, 3.424999999999956e-05, 3.520900000000132e-05, 3.455599999999809e-05, 3.484700000000451e-05, 3.429199999999827e-05, 3.451399999999938e-05, 3.508400000000467e-05, 3.449999999999981e-05, 3.430599999999784e-05]</msg>
<status status="PASS" starttime="20201112 12:28:01.766" endtime="20201112 12:28:01.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.753" endtime="20201112 12:28:01.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.779" endtime="20201112 12:28:01.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:01.787" endtime="20201112 12:28:01.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.783" endtime="20201112 12:28:01.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.774" endtime="20201112 12:28:01.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.248" endtime="20201112 12:28:01.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.247" endtime="20201112 12:28:01.813"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.836" endtime="20201112 12:28:01.855"></status>
</kw>
<msg timestamp="20201112 12:28:01.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.833" endtime="20201112 12:28:01.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.858" endtime="20201112 12:28:01.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.865" endtime="20201112 12:28:01.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.825" endtime="20201112 12:28:01.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.820" endtime="20201112 12:28:01.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.888" endtime="20201112 12:28:02.235"></status>
</kw>
<msg timestamp="20201112 12:28:02.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042573375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042609139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.885" endtime="20201112 12:28:02.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042573375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042609139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.245" endtime="20201112 12:28:02.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.263" endtime="20201112 12:28:02.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.878" endtime="20201112 12:28:02.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.873" endtime="20201112 12:28:02.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.281" level="INFO">${RESULT} = [{'time': 0.042609139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.576400000000063e-05, 'source_diff': 3.576400000000063e-05}, {'time': 0.042647153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:02.272" endtime="20201112 12:28:02.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:02.312" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:02.283" endtime="20201112 12:28:02.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.323" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:28:02.321" endtime="20201112 12:28:02.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.328" level="INFO">VALUE: [3.576400000000063e-05, 3.5346999999998074e-05, 3.5888999999997284e-05, 3.558399999999823e-05, 3.581999999999891e-05, 3.587500000000465e-05, 3.6138000000005e-05, 3.576400000000063e-05, 3.569500000000225e-05, 3.5791000000000295e-05, 3.5818999999999435e-05, 3.5374999999997214e-05, 3.600000000000131e-05, 3.5791000000000295e-05, 3.5374999999997214e-05, 3.520800000000185e-05, 3.5804999999999865e-05, 3.59859999999948e-05, 3.56659999999967e-05, 3.5416999999995924e-05, 3.587500000000465e-05, 3.601400000000088e-05, 3.554199999999952e-05, 3.5332999999998504e-05, 3.5610999999997894e-05, 3.520800000000185e-05, 3.551400000000038e-05, 3.556999999999866e-05, 3.605599999999959e-05, 3.5416999999995924e-05, 3.518000000000271e-05, 3.545900000000157e-05, 3.529199999999927e-05, 3.572300000000139e-05, 3.6082999999999255e-05, 3.542999999999602e-05, 3.5388999999996784e-05, 3.604200000000002e-05, 3.51659999999962e-05, 3.542999999999602e-05, 3.54580000000021e-05, 3.573600000000149e-05, 3.568000000000321e-05, 3.5582999999998755e-05, 3.5541000000000045e-05, 3.594399999999609e-05, 3.519400000000228e-05, 3.575000000000106e-05, 3.572199999999498e-05, 3.544400000000253e-05]</msg>
<status status="PASS" starttime="20201112 12:28:02.325" endtime="20201112 12:28:02.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.314" endtime="20201112 12:28:02.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.339" endtime="20201112 12:28:02.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:02.348" endtime="20201112 12:28:02.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.343" endtime="20201112 12:28:02.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.335" endtime="20201112 12:28:02.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.815" endtime="20201112 12:28:02.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.814" endtime="20201112 12:28:02.374"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.396" endtime="20201112 12:28:02.416"></status>
</kw>
<msg timestamp="20201112 12:28:02.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.393" endtime="20201112 12:28:02.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.419" endtime="20201112 12:28:02.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.426" endtime="20201112 12:28:02.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.386" endtime="20201112 12:28:02.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.380" endtime="20201112 12:28:02.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.449" endtime="20201112 12:28:02.796"></status>
</kw>
<msg timestamp="20201112 12:28:02.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042412514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.446" endtime="20201112 12:28:02.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042412514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.806" endtime="20201112 12:28:02.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.824" endtime="20201112 12:28:02.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.439" endtime="20201112 12:28:02.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.434" endtime="20201112 12:28:02.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.842" level="INFO">${RESULT} = [{'time': 0.042412514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6666999999997174e-05, 'source_diff': 3.6666999999997174e-05}, {'time': 0.042460556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:02.833" endtime="20201112 12:28:02.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:02.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:02.844" endtime="20201112 12:28:02.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.884" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:28:02.882" endtime="20201112 12:28:02.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.889" level="INFO">VALUE: [3.6666999999997174e-05, 3.641700000000386e-05, 3.6860999999999144e-05, 3.686199999999862e-05, 3.6680999999996744e-05, 3.631999999999941e-05, 3.616700000000361e-05, 3.7124999999998964e-05, 3.6305000000000365e-05, 3.620900000000232e-05, 3.722199999999648e-05, 3.6860999999999144e-05, 3.6569000000000185e-05, 3.676400000000163e-05, 3.6333000000006443e-05, 3.651400000000138e-05, 3.670800000000335e-05, 3.674999999999512e-05, 3.7083000000000255e-05, 3.6805000000000865e-05, 3.6124999999997964e-05, 3.618100000000318e-05, 3.6819000000000435e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.629200000000027e-05, 3.691700000000436e-05, 3.673600000000249e-05, 3.650000000000181e-05, 3.637500000000515e-05, 3.6402999999997354e-05, 3.670900000000282e-05, 3.6708999999995884e-05, 3.68059999999934e-05, 3.688900000000522e-05, 3.692999999999752e-05, 3.6513000000001905e-05, 3.6624999999998464e-05, 3.6582999999999755e-05, 3.647200000000267e-05, 3.650000000000181e-05, 3.676399999999469e-05, 3.64580000000031e-05, 3.697199999999623e-05, 3.6360999999998644e-05, 3.626400000000113e-05, 3.6930999999996994e-05, 3.6638999999998034e-05, 3.62780000000007e-05, 3.679200000000077e-05]</msg>
<status status="PASS" starttime="20201112 12:28:02.886" endtime="20201112 12:28:02.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.875" endtime="20201112 12:28:02.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.899" endtime="20201112 12:28:02.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:02.909" endtime="20201112 12:28:02.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.905" endtime="20201112 12:28:02.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.895" endtime="20201112 12:28:02.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.376" endtime="20201112 12:28:02.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.374" endtime="20201112 12:28:02.932"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.942" endtime="20201112 12:28:02.959"></status>
</kw>
<msg timestamp="20201112 12:28:02.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.941" endtime="20201112 12:28:02.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.960" endtime="20201112 12:28:02.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.963" endtime="20201112 12:28:02.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.937" endtime="20201112 12:28:02.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.935" endtime="20201112 12:28:02.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.975" endtime="20201112 12:28:03.311"></status>
</kw>
<msg timestamp="20201112 12:28:03.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024887764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024925139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.973" endtime="20201112 12:28:03.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024887764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024925139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.321" endtime="20201112 12:28:03.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.340" endtime="20201112 12:28:03.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.969" endtime="20201112 12:28:03.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.967" endtime="20201112 12:28:03.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.357" level="INFO">${RESULT} = [{'time': 0.024925139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7374999999999214e-05, 'source_diff': 3.7374999999999214e-05}, {'time': 0.024969167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:03.348" endtime="20201112 12:28:03.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:03.388" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:03.359" endtime="20201112 12:28:03.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.399" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:28:03.396" endtime="20201112 12:28:03.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.404" level="INFO">VALUE: [3.7374999999999214e-05, 3.799999999999984e-05, 3.7930999999997994e-05, 3.750000000000281e-05, 3.79590000000006e-05, 3.7667000000001644e-05, 3.7889000000002754e-05, 3.804200000000202e-05, 3.7874999999999714e-05, 3.7667000000001644e-05, 3.7416999999997924e-05, 3.799999999999984e-05, 3.7638999999999034e-05, 3.7305000000001365e-05, 3.7333000000000505e-05, 3.776399999999916e-05, 3.7888999999999284e-05, 3.774999999999959e-05, 3.750000000000281e-05, 3.7569000000001185e-05, 3.802800000000245e-05, 3.7818999999997965e-05, 3.804199999999855e-05, 3.7417000000001394e-05, 3.74720000000002e-05, 3.7375000000002684e-05, 3.7167000000001144e-05, 3.74720000000002e-05, 3.797300000000017e-05, 3.7416999999997924e-05, 3.811199999999987e-05, 3.808400000000073e-05, 3.7652999999998604e-05, 3.783400000000048e-05, 3.7917000000001894e-05, 3.722199999999995e-05, 3.8111000000000395e-05, 3.7819000000001435e-05, 3.8068999999998215e-05, 3.8181000000001714e-05, 3.740199999999888e-05, 3.727799999999823e-05, 3.8180999999998244e-05, 3.7541000000002045e-05, 3.74720000000002e-05, 3.7430999999997494e-05, 3.754200000000152e-05, 3.7389000000002254e-05, 3.751400000000238e-05, 3.730600000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:28:03.401" endtime="20201112 12:28:03.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.390" endtime="20201112 12:28:03.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.414" endtime="20201112 12:28:03.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.422" endtime="20201112 12:28:03.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.418" endtime="20201112 12:28:03.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.409" endtime="20201112 12:28:03.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.933" endtime="20201112 12:28:03.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.932" endtime="20201112 12:28:03.452"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.474" endtime="20201112 12:28:03.494"></status>
</kw>
<msg timestamp="20201112 12:28:03.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.471" endtime="20201112 12:28:03.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.497" endtime="20201112 12:28:03.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.504" endtime="20201112 12:28:03.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.464" endtime="20201112 12:28:03.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.458" endtime="20201112 12:28:03.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.527" endtime="20201112 12:28:03.885"></status>
</kw>
<msg timestamp="20201112 12:28:03.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042506847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042545417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.524" endtime="20201112 12:28:03.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042506847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042545417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.895" endtime="20201112 12:28:03.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.915" endtime="20201112 12:28:03.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.516" endtime="20201112 12:28:03.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.512" endtime="20201112 12:28:03.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.934" level="INFO">${RESULT} = [{'time': 0.042545417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.857000000000166e-05, 'source_diff': 3.857000000000166e-05}, {'time': 0.042587431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:03.924" endtime="20201112 12:28:03.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:03.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:03.936" endtime="20201112 12:28:03.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.978" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:28:03.976" endtime="20201112 12:28:03.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.984" level="INFO">VALUE: [3.857000000000166e-05, 3.825000000000356e-05, 3.8666999999999174e-05, 3.847199999999773e-05, 3.8304999999995426e-05, 3.8597000000001325e-05, 3.820799999999791e-05, 3.842999999999902e-05, 3.890200000000038e-05, 3.845799999999816e-05, 3.847199999999773e-05, 3.8083000000001255e-05, 3.8166999999998674e-05, 3.824999999999662e-05, 3.845799999999816e-05, 3.9153000000000104e-05, 3.868100000000568e-05, 3.851400000000338e-05, 3.9083000000002255e-05, 3.8972999999997704e-05, 3.904199999999608e-05, 3.8875000000000715e-05, 3.8861000000001145e-05, 3.85980000000008e-05, 3.904199999999608e-05, 3.899999999999737e-05, 3.892999999999952e-05, 3.8875000000000715e-05, 3.8875000000000715e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.855600000000209e-05, 3.9139000000000534e-05, 3.8639000000000034e-05, 3.849999999999687e-05, 3.9139000000000534e-05, 3.854200000000252e-05, 3.823599999999705e-05, 3.9111000000001395e-05, 3.879199999999583e-05, 3.85980000000008e-05, 3.8319000000001935e-05, 3.820800000000485e-05, 3.8847000000001575e-05, 3.8375000000000214e-05, 3.881999999999497e-05, 3.873600000000449e-05, 3.851399999999644e-05, 3.8680999999998744e-05, 3.826399999999619e-05]</msg>
<status status="PASS" starttime="20201112 12:28:03.981" endtime="20201112 12:28:03.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.968" endtime="20201112 12:28:03.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.995" endtime="20201112 12:28:03.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:04.004" endtime="20201112 12:28:04.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.999" endtime="20201112 12:28:04.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.990" endtime="20201112 12:28:04.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.454" endtime="20201112 12:28:04.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.453" endtime="20201112 12:28:04.031"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.057" endtime="20201112 12:28:04.077"></status>
</kw>
<msg timestamp="20201112 12:28:04.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.053" endtime="20201112 12:28:04.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.081" endtime="20201112 12:28:04.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.088" endtime="20201112 12:28:04.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.046" endtime="20201112 12:28:04.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.038" endtime="20201112 12:28:04.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.113" endtime="20201112 12:28:04.473"></status>
</kw>
<msg timestamp="20201112 12:28:04.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046689264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046729278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.110" endtime="20201112 12:28:04.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046689264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046729278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.483" endtime="20201112 12:28:04.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.502" endtime="20201112 12:28:04.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.102" endtime="20201112 12:28:04.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.097" endtime="20201112 12:28:04.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:04.519" level="INFO">${RESULT} = [{'time': 0.046729278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.001399999999794e-05, 'source_diff': 4.001399999999794e-05}, {'time': 0.046772264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:04.510" endtime="20201112 12:28:04.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:04.550" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:04.521" endtime="20201112 12:28:04.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.561" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:28:04.558" endtime="20201112 12:28:04.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.566" level="INFO">VALUE: [4.001399999999794e-05, 3.92780000000037e-05, 3.9375000000001215e-05, 3.9445000000006e-05, 3.932000000000241e-05, 3.9375000000001215e-05, 3.9430999999999494e-05, 4.008400000000273e-05, 3.980600000000334e-05, 3.944399999999959e-05, 3.9804999999996926e-05, 3.9333000000002505e-05, 3.923600000000499e-05, 3.9347000000002075e-05, 3.945799999999916e-05, 3.945799999999916e-05, 3.9569000000003185e-05, 3.9582999999995816e-05, 3.9166999999999674e-05, 4.004199999999708e-05, 3.970799999999941e-05, 4.002799999999751e-05, 3.945799999999916e-05, 4.0111000000002395e-05, 3.997199999999923e-05, 3.9332999999995566e-05, 3.9847000000002575e-05, 3.9554999999996676e-05, 3.9818999999996496e-05, 3.936200000000112e-05, 4.008400000000273e-05, 3.9958999999999134e-05, 3.958400000000223e-05, 3.94859999999983e-05, 3.9554999999996676e-05, 3.944399999999959e-05, 3.968000000000027e-05, 3.997199999999923e-05, 3.9832999999996066e-05, 3.99859999999988e-05, 3.952799999999701e-05, 3.9875000000001715e-05, 3.9374999999994276e-05, 3.945799999999916e-05, 3.9917000000000424e-05, 4.001399999999794e-05, 3.947200000000567e-05, 3.977799999999726e-05, 3.9583000000002755e-05, 3.9430999999999494e-05]</msg>
<status status="PASS" starttime="20201112 12:28:04.563" endtime="20201112 12:28:04.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.552" endtime="20201112 12:28:04.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.576" endtime="20201112 12:28:04.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:04.584" endtime="20201112 12:28:04.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.580" endtime="20201112 12:28:04.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.571" endtime="20201112 12:28:04.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.033" endtime="20201112 12:28:04.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.032" endtime="20201112 12:28:04.610"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.633" endtime="20201112 12:28:04.653"></status>
</kw>
<msg timestamp="20201112 12:28:04.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.630" endtime="20201112 12:28:04.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.656" endtime="20201112 12:28:04.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.662" endtime="20201112 12:28:04.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.622" endtime="20201112 12:28:04.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.617" endtime="20201112 12:28:04.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.688" endtime="20201112 12:28:05.024"></status>
</kw>
<msg timestamp="20201112 12:28:05.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042366667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042406889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.684" endtime="20201112 12:28:05.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042366667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042406889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.033" endtime="20201112 12:28:05.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.052" endtime="20201112 12:28:05.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.677" endtime="20201112 12:28:05.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.672" endtime="20201112 12:28:05.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.070" level="INFO">${RESULT} = [{'time': 0.042406889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.022200000000642e-05, 'source_diff': 4.022200000000642e-05}, {'time': 0.042462931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:05.061" endtime="20201112 12:28:05.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:05.100" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:05.072" endtime="20201112 12:28:05.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.111" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:28:05.109" endtime="20201112 12:28:05.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.117" level="INFO">VALUE: [4.022200000000642e-05, 4.086200000000262e-05, 4.057000000000366e-05, 4.027799999999776e-05, 4.051399999999844e-05, 4.0972999999999704e-05, 4.0236999999998524e-05, 4.0959000000000134e-05, 4.051399999999844e-05, 4.0554999999997676e-05, 4.0945000000000564e-05, 4.0375000000002215e-05, 4.1054999999998176e-05, 4.0639000000002035e-05, 4.018000000000077e-05, 4.1139000000002535e-05, 4.019400000000034e-05, 4.0639000000002035e-05, 4.074999999999912e-05, 4.0847000000003575e-05, 4.0431000000000494e-05, 4.0959000000000134e-05, 4.072199999999998e-05, 4.108399999999679e-05, 4.025000000000556e-05, 4.077799999999826e-05, 4.031999999999647e-05, 4.047199999999973e-05, 4.023599999999905e-05, 4.0389000000001785e-05, 4.027799999999776e-05, 4.102799999999851e-05, 4.099999999999937e-05, 4.049999999999887e-05, 4.018000000000077e-05, 4.020799999999991e-05, 4.091600000000195e-05, 4.049999999999887e-05, 4.0389000000001785e-05, 4.095799999999372e-05, 4.072199999999998e-05, 4.074999999999912e-05, 4.094400000000109e-05, 4.072199999999998e-05, 4.045800000000016e-05, 4.082000000000391e-05, 4.0403000000001354e-05, 4.029199999999733e-05, 4.0361000000002645e-05, 4.051399999999844e-05]</msg>
<status status="PASS" starttime="20201112 12:28:05.114" endtime="20201112 12:28:05.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.102" endtime="20201112 12:28:05.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.126" endtime="20201112 12:28:05.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.135" endtime="20201112 12:28:05.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.130" endtime="20201112 12:28:05.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.122" endtime="20201112 12:28:05.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.612" endtime="20201112 12:28:05.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.611" endtime="20201112 12:28:05.161"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.183" endtime="20201112 12:28:05.204"></status>
</kw>
<msg timestamp="20201112 12:28:05.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.180" endtime="20201112 12:28:05.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.207" endtime="20201112 12:28:05.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.213" endtime="20201112 12:28:05.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.173" endtime="20201112 12:28:05.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.167" endtime="20201112 12:28:05.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.239" endtime="20201112 12:28:05.573"></status>
</kw>
<msg timestamp="20201112 12:28:05.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042272181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042314056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.235" endtime="20201112 12:28:05.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042272181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042314056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.583" endtime="20201112 12:28:05.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.602" endtime="20201112 12:28:05.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.226" endtime="20201112 12:28:05.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.221" endtime="20201112 12:28:05.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.620" level="INFO">${RESULT} = [{'time': 0.042314056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1875000000003715e-05, 'source_diff': 4.1875000000003715e-05}, {'time': 0.042370056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:05.610" endtime="20201112 12:28:05.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:05.650" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:05.622" endtime="20201112 12:28:05.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.661" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:28:05.659" endtime="20201112 12:28:05.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.666" level="INFO">VALUE: [4.1875000000003715e-05, 4.1681000000001744e-05, 4.1666999999995236e-05, 4.191600000000295e-05, 4.1290999999998856e-05, 4.176399999999969e-05, 4.1804999999998926e-05, 4.1374999999996276e-05, 4.1333000000004505e-05, 4.197200000000123e-05, 4.147200000000073e-05, 4.122200000000048e-05, 4.1360999999996706e-05, 4.1847000000004575e-05, 4.195799999999472e-05, 4.1875000000003715e-05, 4.195800000000166e-05, 4.1694999999994375e-05, 4.1583000000004755e-05, 4.14860000000003e-05, 4.1666999999995236e-05, 4.2110999999997456e-05, 4.208399999999779e-05, 4.202799999999951e-05, 4.158399999999729e-05, 4.1417000000001924e-05, 4.205599999999865e-05, 4.169400000000184e-05, 4.1236999999999524e-05, 4.1305000000005365e-05, 4.1695000000001314e-05, 4.151399999999944e-05, 4.165199999999619e-05, 4.169400000000184e-05, 4.1597000000004325e-05, 4.201399999999994e-05, 4.1847000000004575e-05, 4.1818999999998496e-05, 4.1416999999994986e-05, 4.154199999999858e-05, 4.14860000000003e-05, 4.1875000000003715e-05, 4.201399999999994e-05, 4.1596999999997386e-05, 4.2125000000003965e-05, 4.127799999999876e-05, 4.130600000000484e-05, 4.1459000000000634e-05, 4.183400000000448e-05, 4.165199999999619e-05]</msg>
<status status="PASS" starttime="20201112 12:28:05.663" endtime="20201112 12:28:05.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.652" endtime="20201112 12:28:05.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.676" endtime="20201112 12:28:05.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.684" endtime="20201112 12:28:05.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.680" endtime="20201112 12:28:05.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.672" endtime="20201112 12:28:05.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.163" endtime="20201112 12:28:05.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.162" endtime="20201112 12:28:05.710"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.733" endtime="20201112 12:28:05.753"></status>
</kw>
<msg timestamp="20201112 12:28:05.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.730" endtime="20201112 12:28:05.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.756" endtime="20201112 12:28:05.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.762" endtime="20201112 12:28:05.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.723" endtime="20201112 12:28:05.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.717" endtime="20201112 12:28:05.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.786" endtime="20201112 12:28:06.127"></status>
</kw>
<msg timestamp="20201112 12:28:06.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042473292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.783" endtime="20201112 12:28:06.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042473292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.137" endtime="20201112 12:28:06.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.155" endtime="20201112 12:28:06.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.775" endtime="20201112 12:28:06.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.771" endtime="20201112 12:28:06.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.173" level="INFO">${RESULT} = [{'time': 0.042473292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.251400000000044e-05, 'source_diff': 4.251400000000044e-05}, {'time': 0.042527306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:06.164" endtime="20201112 12:28:06.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:06.203" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:06.175" endtime="20201112 12:28:06.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.214" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:28:06.212" endtime="20201112 12:28:06.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.220" level="INFO">VALUE: [4.251400000000044e-05, 4.301400000000094e-05, 4.2959000000002134e-05, 4.301300000000147e-05, 4.2875000000004715e-05, 4.301400000000094e-05, 4.256999999999872e-05, 4.2361000000004645e-05, 4.2568999999999246e-05, 4.225000000000062e-05, 4.273600000000155e-05, 4.2360999999997706e-05, 4.3082999999999316e-05, 4.3139000000004535e-05, 4.2916999999996486e-05, 4.2611000000004895e-05, 4.305599999999965e-05, 4.2195000000001814e-05, 4.304199999999314e-05, 4.284799999999811e-05, 4.26660000000037e-05, 4.2624999999997526e-05, 4.2819000000006435e-05, 4.247200000000173e-05, 4.225000000000062e-05, 4.291600000000395e-05, 4.276300000000122e-05, 4.2639000000004035e-05, 4.2889000000004285e-05, 4.231999999999847e-05, 4.2638999999997096e-05, 4.227799999999976e-05, 4.255599999999915e-05, 4.2667000000003175e-05, 4.272200000000198e-05, 4.304200000000008e-05, 4.2167000000002675e-05, 4.222200000000148e-05, 4.2917000000003425e-05, 4.256999999999872e-05, 4.2888999999997346e-05, 4.227799999999976e-05, 4.309799999999836e-05, 4.304200000000008e-05, 4.2361000000004645e-05, 4.224999999999368e-05, 4.252800000000001e-05, 4.2846999999998636e-05, 4.251400000000044e-05, 4.241599999999651e-05]</msg>
<status status="PASS" starttime="20201112 12:28:06.217" endtime="20201112 12:28:06.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.205" endtime="20201112 12:28:06.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.230" endtime="20201112 12:28:06.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:06.238" endtime="20201112 12:28:06.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.234" endtime="20201112 12:28:06.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.225" endtime="20201112 12:28:06.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.713" endtime="20201112 12:28:06.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.711" endtime="20201112 12:28:06.263"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.274" endtime="20201112 12:28:06.291"></status>
</kw>
<msg timestamp="20201112 12:28:06.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.272" endtime="20201112 12:28:06.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.292" endtime="20201112 12:28:06.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.295" endtime="20201112 12:28:06.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.269" endtime="20201112 12:28:06.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.266" endtime="20201112 12:28:06.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.306" endtime="20201112 12:28:06.594"></status>
</kw>
<msg timestamp="20201112 12:28:06.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027848472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027892181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.305" endtime="20201112 12:28:06.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027848472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027892181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.598" endtime="20201112 12:28:06.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.607" endtime="20201112 12:28:06.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.302" endtime="20201112 12:28:06.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.299" endtime="20201112 12:28:06.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.615" level="INFO">${RESULT} = [{'time': 0.027892181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3708999999999415e-05, 'source_diff': 4.3708999999999415e-05}, {'time': 0.027945167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:06.611" endtime="20201112 12:28:06.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:06.628" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:06.616" endtime="20201112 12:28:06.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.634" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:28:06.633" endtime="20201112 12:28:06.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.636" level="INFO">VALUE: [4.3708999999999415e-05, 4.3458999999999165e-05, 4.325000000000162e-05, 4.3473000000002204e-05, 4.333399999999904e-05, 4.330499999999696e-05, 4.370799999999994e-05, 4.3346999999999136e-05, 4.326399999999772e-05, 4.376399999999822e-05, 4.4110999999999456e-05, 4.3138999999997596e-05, 4.326400000000119e-05, 4.343000000000055e-05, 4.3431000000000025e-05, 4.3431000000000025e-05, 4.3625000000001996e-05, 4.3625000000001996e-05, 4.355600000000015e-05, 4.388799999999887e-05, 4.3167000000000205e-05, 4.3889000000001815e-05, 4.3625000000001996e-05, 4.3431000000000025e-05, 4.3875000000002246e-05, 4.3931000000000525e-05, 4.402800000000151e-05, 4.352799999999754e-05, 4.3291000000000857e-05, 4.406899999999728e-05, 4.3597000000002856e-05, 4.324999999999815e-05, 4.3305000000000426e-05, 4.3582999999999816e-05, 4.347199999999926e-05, 4.405600000000065e-05, 4.4125000000002496e-05, 4.3930999999997056e-05, 4.3332999999999566e-05, 4.3874999999998776e-05, 4.395799999999672e-05, 4.379200000000083e-05, 4.329200000000033e-05, 4.3945000000000095e-05, 4.3431000000000025e-05, 4.351399999999797e-05, 4.3374999999998276e-05, 4.391600000000148e-05, 4.4096999999999886e-05, 4.370799999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:28:06.635" endtime="20201112 12:28:06.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.629" endtime="20201112 12:28:06.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.641" endtime="20201112 12:28:06.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:06.645" endtime="20201112 12:28:06.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.643" endtime="20201112 12:28:06.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.639" endtime="20201112 12:28:06.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.264" endtime="20201112 12:28:06.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.263" endtime="20201112 12:28:06.666"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.689" endtime="20201112 12:28:06.709"></status>
</kw>
<msg timestamp="20201112 12:28:06.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.686" endtime="20201112 12:28:06.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.712" endtime="20201112 12:28:06.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.718" endtime="20201112 12:28:06.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.679" endtime="20201112 12:28:06.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.673" endtime="20201112 12:28:06.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.742" endtime="20201112 12:28:07.078"></status>
</kw>
<msg timestamp="20201112 12:28:07.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038524319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038569208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.739" endtime="20201112 12:28:07.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038524319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038569208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.087" endtime="20201112 12:28:07.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.106" endtime="20201112 12:28:07.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.731" endtime="20201112 12:28:07.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.727" endtime="20201112 12:28:07.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.126" level="INFO">${RESULT} = [{'time': 0.038569208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4888999999999346e-05, 'source_diff': 4.4888999999999346e-05}, {'time': 0.038618222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:07.116" endtime="20201112 12:28:07.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:07.156" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:07.128" endtime="20201112 12:28:07.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.167" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:28:07.165" endtime="20201112 12:28:07.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.172" level="INFO">VALUE: [4.4888999999999346e-05, 4.467999999999833e-05, 4.426400000000219e-05, 4.4610999999999956e-05, 4.429200000000133e-05, 4.4583000000000816e-05, 4.432000000000047e-05, 4.4166999999997736e-05, 4.4624999999999526e-05, 4.4416999999997986e-05, 4.518000000000577e-05, 4.4458999999996696e-05, 4.434799999999961e-05, 4.4723000000003454e-05, 4.502800000000251e-05, 4.4305000000001427e-05, 4.501300000000347e-05, 4.41939999999974e-05, 4.4333000000000566e-05, 4.479100000000236e-05, 4.491599999999901e-05, 4.479100000000236e-05, 4.493000000000552e-05, 4.416599999999826e-05, 4.445800000000416e-05, 4.4624999999999526e-05, 4.4597000000000386e-05, 4.4431000000004495e-05, 4.4583000000000816e-05, 4.4083000000000316e-05, 4.445799999999722e-05, 4.432000000000047e-05, 4.4638999999999096e-05, 4.4694999999997376e-05, 4.4610999999999956e-05, 4.48060000000014e-05, 4.450000000000287e-05, 4.494399999999815e-05, 4.4445000000004065e-05, 4.4333000000000566e-05, 4.494400000000509e-05, 4.458299999999388e-05, 4.452700000000254e-05, 4.4333000000000566e-05, 4.4833000000001066e-05, 4.472199999999704e-05, 4.502799999999557e-05, 4.469400000000484e-05, 4.505600000000165e-05, 4.447200000000373e-05]</msg>
<status status="PASS" starttime="20201112 12:28:07.169" endtime="20201112 12:28:07.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.158" endtime="20201112 12:28:07.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.182" endtime="20201112 12:28:07.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:07.191" endtime="20201112 12:28:07.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.186" endtime="20201112 12:28:07.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.177" endtime="20201112 12:28:07.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.669" endtime="20201112 12:28:07.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.667" endtime="20201112 12:28:07.216"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.239" endtime="20201112 12:28:07.259"></status>
</kw>
<msg timestamp="20201112 12:28:07.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.236" endtime="20201112 12:28:07.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.263" endtime="20201112 12:28:07.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.269" endtime="20201112 12:28:07.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.229" endtime="20201112 12:28:07.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.223" endtime="20201112 12:28:07.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.293" endtime="20201112 12:28:07.629"></status>
</kw>
<msg timestamp="20201112 12:28:07.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042381944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042428014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.289" endtime="20201112 12:28:07.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042381944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042428014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.639" endtime="20201112 12:28:07.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.657" endtime="20201112 12:28:07.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.282" endtime="20201112 12:28:07.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.277" endtime="20201112 12:28:07.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.677" level="INFO">${RESULT} = [{'time': 0.042428014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.607000000000222e-05, 'source_diff': 4.607000000000222e-05}, {'time': 0.042485014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:07.667" endtime="20201112 12:28:07.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:07.707" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:07.679" endtime="20201112 12:28:07.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.718" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:28:07.715" endtime="20201112 12:28:07.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.723" level="INFO">VALUE: [4.607000000000222e-05, 4.557000000000172e-05, 4.533400000000104e-05, 4.5375000000000276e-05, 4.53060000000019e-05, 4.552800000000301e-05, 4.523599999999711e-05, 4.576399999999675e-05, 4.555500000000268e-05, 4.602700000000404e-05, 4.523599999999711e-05, 4.5597000000001386e-05, 4.5319000000001997e-05, 4.56660000000067e-05, 4.5375000000000276e-05, 4.541599999999951e-05, 4.5889000000000346e-05, 4.609699999999495e-05, 4.6111000000001456e-05, 4.5958999999998196e-05, 4.576400000000369e-05, 4.526400000000319e-05, 4.605600000000265e-05, 4.6139000000000596e-05, 4.533400000000104e-05, 4.5473000000004205e-05, 4.5166999999998736e-05, 4.5459000000004635e-05, 4.592999999999958e-05, 4.5944999999998626e-05, 4.542999999999908e-05, 4.5847000000001636e-05, 4.5347000000001136e-05, 4.545799999999822e-05, 4.5875000000000776e-05, 4.5125000000000026e-05, 4.5333000000001566e-05, 4.6139000000000596e-05, 4.581899999999556e-05, 4.583299999999513e-05, 4.5347000000001136e-05, 4.579200000000283e-05, 4.609699999999495e-05, 4.5444999999998126e-05, 4.5361000000000706e-05, 4.567999999999933e-05, 4.5722999999997516e-05, 4.574999999999718e-05, 4.5459000000004635e-05, 4.601400000000394e-05]</msg>
<status status="PASS" starttime="20201112 12:28:07.720" endtime="20201112 12:28:07.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.709" endtime="20201112 12:28:07.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.733" endtime="20201112 12:28:07.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:07.741" endtime="20201112 12:28:07.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.737" endtime="20201112 12:28:07.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.728" endtime="20201112 12:28:07.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.219" endtime="20201112 12:28:07.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.217" endtime="20201112 12:28:07.767"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.790" endtime="20201112 12:28:07.810"></status>
</kw>
<msg timestamp="20201112 12:28:07.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.787" endtime="20201112 12:28:07.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.813" endtime="20201112 12:28:07.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.820" endtime="20201112 12:28:07.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.780" endtime="20201112 12:28:07.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.774" endtime="20201112 12:28:07.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.843" endtime="20201112 12:28:08.185"></status>
</kw>
<msg timestamp="20201112 12:28:08.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042599153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042646139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.840" endtime="20201112 12:28:08.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042599153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042646139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.194" endtime="20201112 12:28:08.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.213" endtime="20201112 12:28:08.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.833" endtime="20201112 12:28:08.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.828" endtime="20201112 12:28:08.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.234" level="INFO">${RESULT} = [{'time': 0.042646139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.698599999999886e-05, 'source_diff': 4.698599999999886e-05}, {'time': 0.042703139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:08.225" endtime="20201112 12:28:08.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:08.265" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:08.236" endtime="20201112 12:28:08.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.276" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:28:08.273" endtime="20201112 12:28:08.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.281" level="INFO">VALUE: [4.698599999999886e-05, 4.6194999999998876e-05, 4.697199999999929e-05, 4.6166999999999736e-05, 4.629199999999639e-05, 4.675000000000512e-05, 4.629200000000333e-05, 4.655599999999621e-05, 4.6875000000001776e-05, 4.695799999999972e-05, 4.712499999999509e-05, 4.6347000000002136e-05, 4.680499999999699e-05, 4.694400000000015e-05, 4.704100000000461e-05, 4.647199999999879e-05, 4.629100000000386e-05, 4.677799999999732e-05, 4.6847000000002637e-05, 4.645799999999922e-05, 4.6375000000001276e-05, 4.627799999999682e-05, 4.637499999999434e-05, 4.68060000000034e-05, 4.6694999999999376e-05, 4.624999999999768e-05, 4.627700000000429e-05, 4.708400000000279e-05, 4.6708999999998946e-05, 4.6597000000002387e-05, 4.668000000000033e-05, 4.647199999999879e-05, 4.645800000000616e-05, 4.673599999999861e-05, 4.644399999999965e-05, 4.6361000000001706e-05, 4.695799999999972e-05, 4.668000000000033e-05, 4.708300000000332e-05, 4.6333000000002567e-05, 4.6403000000000416e-05, 4.674999999999818e-05, 4.695799999999972e-05, 4.6931000000000056e-05, 4.674999999999818e-05, 4.68190000000035e-05, 4.704099999999767e-05, 4.6931000000000056e-05, 4.7151999999994754e-05, 4.690200000000144e-05]</msg>
<status status="PASS" starttime="20201112 12:28:08.278" endtime="20201112 12:28:08.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.266" endtime="20201112 12:28:08.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.296" endtime="20201112 12:28:08.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.304" endtime="20201112 12:28:08.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.300" endtime="20201112 12:28:08.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.291" endtime="20201112 12:28:08.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.769" endtime="20201112 12:28:08.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.768" endtime="20201112 12:28:08.330"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.353" endtime="20201112 12:28:08.373"></status>
</kw>
<msg timestamp="20201112 12:28:08.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.350" endtime="20201112 12:28:08.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.377" endtime="20201112 12:28:08.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.383" endtime="20201112 12:28:08.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.342" endtime="20201112 12:28:08.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.337" endtime="20201112 12:28:08.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.406" endtime="20201112 12:28:08.752"></status>
</kw>
<msg timestamp="20201112 12:28:08.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042626708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042674389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.403" endtime="20201112 12:28:08.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042626708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042674389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.762" endtime="20201112 12:28:08.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.781" endtime="20201112 12:28:08.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.396" endtime="20201112 12:28:08.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.391" endtime="20201112 12:28:08.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.800" level="INFO">${RESULT} = [{'time': 0.042674389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7681000000000806e-05, 'source_diff': 4.7681000000000806e-05}, {'time': 0.042728389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:08.791" endtime="20201112 12:28:08.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:08.830" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:08.802" endtime="20201112 12:28:08.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.841" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:28:08.839" endtime="20201112 12:28:08.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.847" level="INFO">VALUE: [4.7681000000000806e-05, 4.758299999999688e-05, 4.749999999999893e-05, 4.78060000000044e-05, 4.733400000000304e-05, 4.806999999999728e-05, 4.783400000000354e-05, 4.8125000000003026e-05, 4.8111000000003457e-05, 4.783400000000354e-05, 4.813800000000312e-05, 4.8167000000001736e-05, 4.747199999999979e-05, 4.8013999999999e-05, 4.7443999999993713e-05, 4.7889000000002346e-05, 4.8139000000002596e-05, 4.799999999999943e-05, 4.754199999999764e-05, 4.8139000000002596e-05, 4.794499999999369e-05, 4.7695000000000376e-05, 4.772200000000004e-05, 4.7917000000001486e-05, 4.7708999999999946e-05, 4.805600000000465e-05, 4.788899999999541e-05, 4.7472999999999266e-05, 4.7986999999999336e-05, 4.745800000000022e-05, 4.8139000000002596e-05, 4.7361000000002706e-05, 4.761099999999602e-05, 4.749999999999893e-05, 4.8125000000003026e-05, 4.770800000000047e-05, 4.752799999999807e-05, 4.7361000000002706e-05, 4.795800000000072e-05, 4.7611000000002957e-05, 4.770800000000047e-05, 4.7611000000002957e-05, 4.7208999999999446e-05, 4.75139999999985e-05, 4.776399999999875e-05, 4.811099999999652e-05, 4.7361000000002706e-05, 4.7625000000002526e-05, 4.7361000000002706e-05, 4.724999999999868e-05]</msg>
<status status="PASS" starttime="20201112 12:28:08.844" endtime="20201112 12:28:08.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.832" endtime="20201112 12:28:08.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.856" endtime="20201112 12:28:08.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.865" endtime="20201112 12:28:08.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.860" endtime="20201112 12:28:08.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.852" endtime="20201112 12:28:08.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.332" endtime="20201112 12:28:08.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.331" endtime="20201112 12:28:08.891"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.914" endtime="20201112 12:28:08.934"></status>
</kw>
<msg timestamp="20201112 12:28:08.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.910" endtime="20201112 12:28:08.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.938" endtime="20201112 12:28:08.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.944" endtime="20201112 12:28:08.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.903" endtime="20201112 12:28:08.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.897" endtime="20201112 12:28:08.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.969" endtime="20201112 12:28:09.305"></status>
</kw>
<msg timestamp="20201112 12:28:09.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042344194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042392833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.966" endtime="20201112 12:28:09.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042344194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042392833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.314" endtime="20201112 12:28:09.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.333" endtime="20201112 12:28:09.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.958" endtime="20201112 12:28:09.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.953" endtime="20201112 12:28:09.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.352" level="INFO">${RESULT} = [{'time': 0.042392833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.863899999999616e-05, 'source_diff': 4.863899999999616e-05}, {'time': 0.042443847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:09.343" endtime="20201112 12:28:09.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:09.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:09.354" endtime="20201112 12:28:09.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.394" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:28:09.391" endtime="20201112 12:28:09.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.399" level="INFO">VALUE: [4.863899999999616e-05, 4.876399999999975e-05, 4.847199999999385e-05, 4.8625000000003527e-05, 4.872200000000104e-05, 4.890299999999598e-05, 4.827799999999882e-05, 4.8625000000003527e-05, 4.827800000000576e-05, 4.849999999999993e-05, 4.826399999999925e-05, 4.8681000000001806e-05, 4.855599999999821e-05, 4.826399999999925e-05, 4.879199999999889e-05, 4.8973000000000766e-05, 4.854199999999864e-05, 4.8695000000001376e-05, 4.855499999999874e-05, 4.8665999999995824e-05, 4.8375000000003276e-05, 4.88190000000055e-05, 4.8653000000002666e-05, 4.900000000000043e-05, 4.847200000000079e-05, 4.887499999999684e-05, 4.836099999999677e-05, 4.904199999999914e-05, 4.908299999999838e-05, 4.847200000000079e-05, 4.9014e-05, 4.8931000000002056e-05, 4.908400000000479e-05, 4.856999999999778e-05, 4.9179999999995894e-05, 4.891600000000301e-05, 4.8959000000001196e-05, 4.9014e-05, 4.866600000000276e-05, 4.8319000000005e-05, 4.852799999999907e-05, 4.883300000000507e-05, 4.8361000000003707e-05, 4.8931000000002056e-05, 4.912499999999709e-05, 4.879199999999889e-05, 4.824999999999968e-05, 4.8195000000000876e-05, 4.908399999999785e-05, 4.875000000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:28:09.396" endtime="20201112 12:28:09.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.384" endtime="20201112 12:28:09.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.409" endtime="20201112 12:28:09.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:09.417" endtime="20201112 12:28:09.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.413" endtime="20201112 12:28:09.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.404" endtime="20201112 12:28:09.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.893" endtime="20201112 12:28:09.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.892" endtime="20201112 12:28:09.443"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.466" endtime="20201112 12:28:09.486"></status>
</kw>
<msg timestamp="20201112 12:28:09.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.463" endtime="20201112 12:28:09.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.489" endtime="20201112 12:28:09.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.496" endtime="20201112 12:28:09.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.455" endtime="20201112 12:28:09.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.449" endtime="20201112 12:28:09.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.519" endtime="20201112 12:28:09.855"></status>
</kw>
<msg timestamp="20201112 12:28:09.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042251611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042301458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.516" endtime="20201112 12:28:09.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042251611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042301458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.865" endtime="20201112 12:28:09.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.883" endtime="20201112 12:28:09.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.509" endtime="20201112 12:28:09.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.504" endtime="20201112 12:28:09.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.903" level="INFO">${RESULT} = [{'time': 0.042301458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.98469999999987e-05, 'source_diff': 4.98469999999987e-05}, {'time': 0.042356458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:09.893" endtime="20201112 12:28:09.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:09.917" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:09.905" endtime="20201112 12:28:09.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.923" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:28:09.922" endtime="20201112 12:28:09.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.925" level="INFO">VALUE: [4.98469999999987e-05, 4.983299999999913e-05, 4.995800000000272e-05, 5.012499999999809e-05, 4.947200000000179e-05, 5.008299999999938e-05, 4.925000000000068e-05, 4.954199999999964e-05, 5.006999999999928e-05, 4.968099999999587e-05, 4.9931000000003056e-05, 4.959700000000539e-05, 5.002800000000057e-05, 4.9973000000001766e-05, 4.974999999999424e-05, 4.973600000000161e-05, 4.9959000000002196e-05, 4.915200000000369e-05, 4.945800000000222e-05, 4.95140000000005e-05, 4.9207999999995033e-05, 4.922200000000154e-05, 4.988899999999741e-05, 4.9957999999995784e-05, 4.991699999999655e-05, 4.950000000000093e-05, 4.999999999999449e-05, 5.008299999999938e-05, 4.9707999999995534e-05, 4.983299999999913e-05, 5.011100000000546e-05, 4.95140000000005e-05, 4.93339999999981e-05, 4.9625000000004527e-05, 4.979199999999989e-05, 4.951300000000103e-05, 4.9917000000003486e-05, 4.937499999999734e-05, 4.911099999999752e-05, 4.923600000000111e-05, 4.9903000000003916e-05, 4.984700000000564e-05, 4.9693999999995964e-05, 5.008299999999938e-05, 4.923600000000111e-05, 4.920800000000197e-05, 4.9917000000003486e-05, 5.012499999999809e-05, 4.969499999999544e-05, 5.0014000000001e-05]</msg>
<status status="PASS" starttime="20201112 12:28:09.924" endtime="20201112 12:28:09.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.918" endtime="20201112 12:28:09.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.930" endtime="20201112 12:28:09.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:09.934" endtime="20201112 12:28:09.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.932" endtime="20201112 12:28:09.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.928" endtime="20201112 12:28:09.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.445" endtime="20201112 12:28:09.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.444" endtime="20201112 12:28:09.955"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.967" endtime="20201112 12:28:09.984"></status>
</kw>
<msg timestamp="20201112 12:28:09.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.965" endtime="20201112 12:28:09.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.985" endtime="20201112 12:28:09.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.988" endtime="20201112 12:28:09.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.961" endtime="20201112 12:28:09.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.959" endtime="20201112 12:28:09.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.000" endtime="20201112 12:28:10.331"></status>
</kw>
<msg timestamp="20201112 12:28:10.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025351514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025401778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.998" endtime="20201112 12:28:10.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025351514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025401778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.341" endtime="20201112 12:28:10.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.359" endtime="20201112 12:28:10.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.995" endtime="20201112 12:28:10.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.992" endtime="20201112 12:28:10.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.380" level="INFO">${RESULT} = [{'time': 0.025401778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026400000000125e-05, 'source_diff': 5.026400000000125e-05}, {'time': 0.025456792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:10.371" endtime="20201112 12:28:10.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:10.410" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:10.382" endtime="20201112 12:28:10.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.422" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:28:10.419" endtime="20201112 12:28:10.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.427" level="INFO">VALUE: [5.026400000000125e-05, 5.087499999999884e-05, 5.059699999999945e-05, 5.061200000000196e-05, 5.050000000000193e-05, 5.108300000000038e-05, 5.061100000000249e-05, 5.037499999999834e-05, 5.0415999999997574e-05, 5.012500000000156e-05, 5.058299999999988e-05, 5.077799999999785e-05, 5.098599999999939e-05, 5.048600000000236e-05, 5.031999999999953e-05, 5.0708e-05, 5.041700000000052e-05, 5.083300000000013e-05, 5.095899999999973e-05, 5.026400000000125e-05, 5.109799999999942e-05, 5.055600000000021e-05, 5.0901999999998504e-05, 5.041700000000052e-05, 5.054200000000064e-05, 5.048599999999889e-05, 5.076399999999828e-05, 5.069400000000043e-05, 5.091600000000154e-05, 5.074999999999871e-05, 5.034700000000267e-05, 5.06530000000012e-05, 5.0736999999998617e-05, 5.101399999999853e-05, 5.033299999999963e-05, 5.109699999999995e-05, 5.095800000000025e-05, 5.105500000000124e-05, 5.048599999999889e-05, 5.113899999999866e-05, 5.0709000000002946e-05, 5.080600000000046e-05, 5.03469999999992e-05, 5.068100000000034e-05, 5.061099999999902e-05, 5.034700000000267e-05, 5.051399999999803e-05, 5.098599999999939e-05, 5.038900000000138e-05, 5.068100000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:28:10.424" endtime="20201112 12:28:10.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.412" endtime="20201112 12:28:10.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.436" endtime="20201112 12:28:10.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.445" endtime="20201112 12:28:10.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.441" endtime="20201112 12:28:10.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.432" endtime="20201112 12:28:10.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.957" endtime="20201112 12:28:10.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.956" endtime="20201112 12:28:10.471"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.494" endtime="20201112 12:28:10.514"></status>
</kw>
<msg timestamp="20201112 12:28:10.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.490" endtime="20201112 12:28:10.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.517" endtime="20201112 12:28:10.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.523" endtime="20201112 12:28:10.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.483" endtime="20201112 12:28:10.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.477" endtime="20201112 12:28:10.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.547" endtime="20201112 12:28:10.881"></status>
</kw>
<msg timestamp="20201112 12:28:10.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042127417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042179375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.543" endtime="20201112 12:28:10.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042127417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042179375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.890" endtime="20201112 12:28:10.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.909" endtime="20201112 12:28:10.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.536" endtime="20201112 12:28:10.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.531" endtime="20201112 12:28:10.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.928" level="INFO">${RESULT} = [{'time': 0.042179375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1957999999997784e-05, 'source_diff': 5.1957999999997784e-05}, {'time': 0.042245361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:10.919" endtime="20201112 12:28:10.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:10.958" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:10.930" endtime="20201112 12:28:10.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.969" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:28:10.967" endtime="20201112 12:28:10.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.975" level="INFO">VALUE: [5.1957999999997784e-05, 5.206900000000181e-05, 5.193099999999812e-05, 5.179200000000189e-05, 5.1403000000005417e-05, 5.158300000000088e-05, 5.204200000000214e-05, 5.188899999999941e-05, 5.159799999999992e-05, 5.187499999999984e-05, 5.133300000000063e-05, 5.170899999999701e-05, 5.136199999999924e-05, 5.136099999999977e-05, 5.183299999999419e-05, 5.155500000000174e-05, 5.1707999999997534e-05, 5.180500000000199e-05, 5.126400000000225e-05, 5.180499999999505e-05, 5.188900000000635e-05, 5.184699999999376e-05, 5.213899999999966e-05, 5.169499999999744e-05, 5.123600000000311e-05, 5.13470000000002e-05, 5.205600000000171e-05, 5.16669999999983e-05, 5.141699999999805e-05, 5.125000000000268e-05, 5.200000000000343e-05, 5.152800000000207e-05, 5.1165999999998324e-05, 5.1165999999998324e-05, 5.1485999999996424e-05, 5.212500000000009e-05, 5.152800000000207e-05, 5.144400000000465e-05, 5.1985999999996924e-05, 5.148600000000336e-05, 5.131900000000106e-05, 5.191699999999855e-05, 5.168099999999787e-05, 5.208300000000138e-05, 5.157000000000078e-05, 5.158400000000035e-05, 5.2193999999998464e-05, 5.127800000000182e-05, 5.165299999999873e-05, 5.1403000000005417e-05]</msg>
<status status="PASS" starttime="20201112 12:28:10.972" endtime="20201112 12:28:10.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.960" endtime="20201112 12:28:10.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.985" endtime="20201112 12:28:10.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.994" endtime="20201112 12:28:11.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.989" endtime="20201112 12:28:11.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.980" endtime="20201112 12:28:11.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.473" endtime="20201112 12:28:11.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.472" endtime="20201112 12:28:11.021"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.043" endtime="20201112 12:28:11.064"></status>
</kw>
<msg timestamp="20201112 12:28:11.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.040" endtime="20201112 12:28:11.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.067" endtime="20201112 12:28:11.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.073" endtime="20201112 12:28:11.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.033" endtime="20201112 12:28:11.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.027" endtime="20201112 12:28:11.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.097" endtime="20201112 12:28:11.431"></status>
</kw>
<msg timestamp="20201112 12:28:11.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042716389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042768667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.093" endtime="20201112 12:28:11.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042716389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042768667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.440" endtime="20201112 12:28:11.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.459" endtime="20201112 12:28:11.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.086" endtime="20201112 12:28:11.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.082" endtime="20201112 12:28:11.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:11.478" level="INFO">${RESULT} = [{'time': 0.042768667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.227800000000282e-05, 'source_diff': 5.227800000000282e-05}, {'time': 0.042826667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:11.469" endtime="20201112 12:28:11.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:11.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:11.481" endtime="20201112 12:28:11.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.520" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:28:11.517" endtime="20201112 12:28:11.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.525" level="INFO">VALUE: [5.227800000000282e-05, 5.241699999999905e-05, 5.263900000000016e-05, 5.30419999999962e-05, 5.284800000000117e-05, 5.245899999999776e-05, 5.263900000000016e-05, 5.2665999999999824e-05, 5.238899999999991e-05, 5.2485999999997424e-05, 5.2165999999999324e-05, 5.312500000000109e-05, 5.229100000000292e-05, 5.2471999999997854e-05, 5.247200000000479e-05, 5.2513999999996563e-05, 5.227800000000282e-05, 5.287500000000084e-05, 5.2457999999998284e-05, 5.265299999999973e-05, 5.237500000000034e-05, 5.238899999999991e-05, 5.3014000000004e-05, 5.23340000000011e-05, 5.2888000000000934e-05, 5.279099999999648e-05, 5.28470000000017e-05, 5.288900000000041e-05, 5.262500000000059e-05, 5.313900000000066e-05, 5.218000000000583e-05, 5.2179999999998894e-05, 5.223600000000411e-05, 5.232000000000153e-05, 5.233300000000163e-05, 5.280599999999552e-05, 5.2207999999998034e-05, 5.287500000000084e-05, 5.280600000000246e-05, 5.250000000000393e-05, 5.282000000000203e-05, 5.237500000000034e-05, 5.304200000000314e-05, 5.276299999999734e-05, 5.251299999999709e-05, 5.304099999999673e-05, 5.309699999999501e-05, 5.252699999999666e-05, 5.2513999999996563e-05, 5.247200000000479e-05]</msg>
<status status="PASS" starttime="20201112 12:28:11.522" endtime="20201112 12:28:11.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.511" endtime="20201112 12:28:11.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.535" endtime="20201112 12:28:11.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:11.543" endtime="20201112 12:28:11.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.539" endtime="20201112 12:28:11.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.530" endtime="20201112 12:28:11.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.023" endtime="20201112 12:28:11.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.021" endtime="20201112 12:28:11.569"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.592" endtime="20201112 12:28:11.612"></status>
</kw>
<msg timestamp="20201112 12:28:11.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.588" endtime="20201112 12:28:11.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.615" endtime="20201112 12:28:11.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.621" endtime="20201112 12:28:11.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.581" endtime="20201112 12:28:11.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.575" endtime="20201112 12:28:11.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.645" endtime="20201112 12:28:11.981"></status>
</kw>
<msg timestamp="20201112 12:28:11.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042299306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042352861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.642" endtime="20201112 12:28:11.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042299306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042352861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.990" endtime="20201112 12:28:12.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.009" endtime="20201112 12:28:12.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.634" endtime="20201112 12:28:12.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.630" endtime="20201112 12:28:12.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.029" level="INFO">${RESULT} = [{'time': 0.042352861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.35549999999968e-05, 'source_diff': 5.35549999999968e-05}, {'time': 0.042408861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:12.020" endtime="20201112 12:28:12.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:12.060" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:12.031" endtime="20201112 12:28:12.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.071" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:28:12.069" endtime="20201112 12:28:12.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.077" level="INFO">VALUE: [5.35549999999968e-05, 5.3763999999997814e-05, 5.387500000000184e-05, 5.3471999999998854e-05, 5.3999999999998494e-05, 5.3999999999998494e-05, 5.409699999999601e-05, 5.3263999999997313e-05, 5.397299999999883e-05, 5.365300000000073e-05, 5.368099999999987e-05, 5.330600000000296e-05, 5.326300000000478e-05, 5.406899999999687e-05, 5.404099999999773e-05, 5.381900000000356e-05, 5.333300000000263e-05, 5.3721999999999104e-05, 5.3443999999999714e-05, 5.388900000000141e-05, 5.3457999999999284e-05, 5.3707999999999534e-05, 5.390300000000098e-05, 5.4014000000005e-05, 5.386100000000227e-05, 5.330600000000296e-05, 5.386100000000227e-05, 5.369499999999944e-05, 5.3513999999997564e-05, 5.408400000000285e-05, 5.33470000000022e-05, 5.3959000000006196e-05, 5.329099999999698e-05, 5.3749999999998244e-05, 5.41670000000008e-05, 5.333300000000263e-05, 5.3693999999999964e-05, 5.3193999999999464e-05, 5.413900000000166e-05, 5.334699999999526e-05, 5.3263999999997313e-05, 5.359700000000245e-05, 5.3721999999999104e-05, 5.338900000000091e-05, 5.3971999999999354e-05, 5.3693999999999964e-05, 5.334800000000167e-05, 5.372299999999858e-05, 5.348600000000536e-05, 5.362499999999465e-05]</msg>
<status status="PASS" starttime="20201112 12:28:12.074" endtime="20201112 12:28:12.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.062" endtime="20201112 12:28:12.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.086" endtime="20201112 12:28:12.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:12.095" endtime="20201112 12:28:12.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.090" endtime="20201112 12:28:12.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.082" endtime="20201112 12:28:12.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.571" endtime="20201112 12:28:12.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.570" endtime="20201112 12:28:12.121"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.144" endtime="20201112 12:28:12.164"></status>
</kw>
<msg timestamp="20201112 12:28:12.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.140" endtime="20201112 12:28:12.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.168" endtime="20201112 12:28:12.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.174" endtime="20201112 12:28:12.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.133" endtime="20201112 12:28:12.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.127" endtime="20201112 12:28:12.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.197" endtime="20201112 12:28:12.533"></status>
</kw>
<msg timestamp="20201112 12:28:12.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042306389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04236125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:12.194" endtime="20201112 12:28:12.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042306389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04236125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:12.543" endtime="20201112 12:28:12.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.561" endtime="20201112 12:28:12.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.187" endtime="20201112 12:28:12.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.182" endtime="20201112 12:28:12.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.583" level="INFO">${RESULT} = [{'time': 0.04236125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486100000000327e-05, 'source_diff': 5.486100000000327e-05}, {'time': 0.04242925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:12.573" endtime="20201112 12:28:12.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:12.613" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:12.585" endtime="20201112 12:28:12.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.624" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:28:12.621" endtime="20201112 12:28:12.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.629" level="INFO">VALUE: [5.486100000000327e-05, 5.4471999999999854e-05, 5.468100000000087e-05, 5.4458000000000284e-05, 5.458399999999641e-05, 5.445899999999976e-05, 5.458299999999694e-05, 5.4749999999999244e-05, 5.4263999999998314e-05, 5.4165999999994385e-05, 5.5222000000000604e-05, 5.4499999999998994e-05, 5.488899999999547e-05, 5.4930000000001644e-05, 5.462499999999565e-05, 5.4208000000000034e-05, 5.4541999999997703e-05, 5.462499999999565e-05, 5.487500000000284e-05, 5.4958000000000784e-05, 5.484699999999676e-05, 5.4221999999999604e-05, 5.48749999999959e-05, 5.4513999999998564e-05, 5.4749999999999244e-05, 5.484800000000317e-05, 5.462500000000259e-05, 5.461199999999555e-05, 5.4749999999999244e-05, 5.488900000000241e-05, 5.4944000000001214e-05, 5.4458000000000284e-05, 5.513900000000266e-05, 5.4458000000000284e-05, 5.508299999999744e-05, 5.4499999999998994e-05, 5.430600000000396e-05, 5.4458000000000284e-05, 5.433299999999669e-05, 5.436100000000277e-05, 5.4985999999999924e-05, 5.488899999999547e-05, 5.508399999999691e-05, 5.437500000000234e-05, 5.508399999999691e-05, 5.4513999999998564e-05, 5.48340000000036e-05, 5.4194000000000464e-05, 5.486099999999633e-05, 5.5013999999999064e-05]</msg>
<status status="PASS" starttime="20201112 12:28:12.626" endtime="20201112 12:28:12.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.615" endtime="20201112 12:28:12.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.639" endtime="20201112 12:28:12.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:12.647" endtime="20201112 12:28:12.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.643" endtime="20201112 12:28:12.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.634" endtime="20201112 12:28:12.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.123" endtime="20201112 12:28:12.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.122" endtime="20201112 12:28:12.673"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.696" endtime="20201112 12:28:12.717"></status>
</kw>
<msg timestamp="20201112 12:28:12.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.692" endtime="20201112 12:28:12.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.720" endtime="20201112 12:28:12.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.727" endtime="20201112 12:28:12.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.685" endtime="20201112 12:28:12.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.679" endtime="20201112 12:28:12.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.750" endtime="20201112 12:28:13.086"></status>
</kw>
<msg timestamp="20201112 12:28:13.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042494306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:12.747" endtime="20201112 12:28:13.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042494306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:13.096" endtime="20201112 12:28:13.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.115" endtime="20201112 12:28:13.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.739" endtime="20201112 12:28:13.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.735" endtime="20201112 12:28:13.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.134" level="INFO">${RESULT} = [{'time': 0.042494306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555600000000521e-05, 'source_diff': 5.555600000000521e-05}, {'time': 0.042564306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:13.125" endtime="20201112 12:28:13.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:13.164" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:13.136" endtime="20201112 12:28:13.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.175" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:28:13.173" endtime="20201112 12:28:13.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.181" level="INFO">VALUE: [5.555600000000521e-05, 5.587500000000384e-05, 5.608399999999791e-05, 5.60549999999993e-05, 5.602700000000016e-05, 5.608299999999844e-05, 5.613900000000366e-05, 5.612499999999715e-05, 5.5208000000001034e-05, 5.555500000000574e-05, 5.5708000000001534e-05, 5.568100000000187e-05, 5.565300000000273e-05, 5.5735999999993735e-05, 5.5249999999999744e-05, 5.559799999999698e-05, 5.545900000000076e-05, 5.530600000000496e-05, 5.520900000000051e-05, 5.606999999999834e-05, 5.568099999999493e-05, 5.609699999999801e-05, 5.5402000000003004e-05, 5.609699999999801e-05, 5.531899999999812e-05, 5.5499999999999994e-05, 5.612499999999715e-05, 5.563900000000316e-05, 5.533299999999769e-05, 5.613900000000366e-05, 5.6000000000000494e-05, 5.583299999999819e-05, 5.541699999999511e-05, 5.615299999999629e-05, 5.613899999999672e-05, 5.593099999999518e-05, 5.5486000000000424e-05, 5.566699999999536e-05, 5.518100000000137e-05, 5.534699999999726e-05, 5.529099999999898e-05, 5.5263999999999314e-05, 5.534699999999726e-05, 5.612499999999715e-05, 5.583399999999766e-05, 5.588900000000341e-05, 5.536099999999683e-05, 5.5457999999994345e-05, 5.5736000000000674e-05, 5.594500000000169e-05]</msg>
<status status="PASS" starttime="20201112 12:28:13.177" endtime="20201112 12:28:13.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.166" endtime="20201112 12:28:13.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.190" endtime="20201112 12:28:13.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.198" endtime="20201112 12:28:13.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.194" endtime="20201112 12:28:13.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.186" endtime="20201112 12:28:13.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.675" endtime="20201112 12:28:13.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.674" endtime="20201112 12:28:13.226"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.249" endtime="20201112 12:28:13.268"></status>
</kw>
<msg timestamp="20201112 12:28:13.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.247" endtime="20201112 12:28:13.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.269" endtime="20201112 12:28:13.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.272" endtime="20201112 12:28:13.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.241" endtime="20201112 12:28:13.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.234" endtime="20201112 12:28:13.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.283" endtime="20201112 12:28:13.610"></status>
</kw>
<msg timestamp="20201112 12:28:13.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043041542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043098264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.282" endtime="20201112 12:28:13.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043041542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043098264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.619" endtime="20201112 12:28:13.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.639" endtime="20201112 12:28:13.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.278" endtime="20201112 12:28:13.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.276" endtime="20201112 12:28:13.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.660" level="INFO">${RESULT} = [{'time': 0.043098264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6721999999995165e-05, 'source_diff': 5.6721999999995165e-05}, {'time': 0.043169278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:13.651" endtime="20201112 12:28:13.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:13.690" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:13.662" endtime="20201112 12:28:13.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.701" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:28:13.699" endtime="20201112 12:28:13.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.707" level="INFO">VALUE: [5.6721999999995165e-05, 5.709699999999901e-05, 5.662500000000459e-05, 5.672299999999464e-05, 5.668100000000287e-05, 5.6637999999997746e-05, 5.7027999999993695e-05, 5.6708000000002534e-05, 5.6499999999994055e-05, 5.6971999999995415e-05, 5.6764000000000814e-05, 5.708299999999944e-05, 5.630499999999955e-05, 5.6514000000000564e-05, 5.688899999999747e-05, 5.6986000000001924e-05, 5.638900000000391e-05, 5.632000000000553e-05, 5.708299999999944e-05, 5.666699999999636e-05, 5.641699999999611e-05, 5.6500000000000994e-05, 5.6264000000000314e-05, 5.6736000000001674e-05, 5.6236000000001174e-05, 5.633299999999869e-05, 5.720899999999557e-05, 5.708299999999944e-05, 5.6208000000002034e-05, 5.665299999999679e-05, 5.6915999999997136e-05, 5.708299999999944e-05, 5.6541999999999704e-05, 5.6471999999994915e-05, 5.6763999999993875e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.641699999999611e-05, 5.6514000000000564e-05, 5.6264000000000314e-05, 5.643100000000262e-05, 5.683399999999866e-05, 5.7000000000001494e-05, 5.65549999999998e-05, 5.643099999999568e-05, 5.658299999999894e-05, 5.6944000000003214e-05, 5.713899999999772e-05, 5.6250000000000744e-05, 5.6500000000000994e-05]</msg>
<status status="PASS" starttime="20201112 12:28:13.704" endtime="20201112 12:28:13.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.692" endtime="20201112 12:28:13.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.721" endtime="20201112 12:28:13.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.730" endtime="20201112 12:28:13.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.725" endtime="20201112 12:28:13.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.717" endtime="20201112 12:28:13.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.229" endtime="20201112 12:28:13.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.227" endtime="20201112 12:28:13.756"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.779" endtime="20201112 12:28:13.800"></status>
</kw>
<msg timestamp="20201112 12:28:13.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.776" endtime="20201112 12:28:13.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.803" endtime="20201112 12:28:13.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.810" endtime="20201112 12:28:13.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.768" endtime="20201112 12:28:13.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.762" endtime="20201112 12:28:13.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.833" endtime="20201112 12:28:14.170"></status>
</kw>
<msg timestamp="20201112 12:28:14.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04313925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:13.830" endtime="20201112 12:28:14.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04313925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:14.179" endtime="20201112 12:28:14.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.198" endtime="20201112 12:28:14.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.823" endtime="20201112 12:28:14.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.818" endtime="20201112 12:28:14.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:14.217" level="INFO">${RESULT} = [{'time': 0.04313925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736099999999883e-05, 'source_diff': 5.736099999999883e-05}, {'time': 0.043202264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:28:14.208" endtime="20201112 12:28:14.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:14.248" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:14.219" endtime="20201112 12:28:14.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.259" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:28:14.257" endtime="20201112 12:28:14.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.265" level="INFO">VALUE: [5.736099999999883e-05, 5.741699999999711e-05, 5.8041999999994265e-05, 5.808300000000044e-05, 5.7500000000001994e-05, 5.811200000000599e-05, 5.76670000000043e-05, 5.7500000000001994e-05, 5.71670000000038e-05, 5.7957999999996845e-05, 5.761099999999908e-05, 5.7458000000003284e-05, 5.7750000000002244e-05, 5.7680000000004394e-05, 5.7778000000001384e-05, 5.780500000000105e-05, 5.7514000000001564e-05, 5.7292000000000454e-05, 5.7778000000001384e-05, 5.8028000000001634e-05, 5.7499999999995055e-05, 5.7556000000000274e-05, 5.743100000000362e-05, 5.73619999999983e-05, 5.8000000000002494e-05, 5.812499999999915e-05, 5.806900000000087e-05, 5.729100000000098e-05, 5.7750000000002244e-05, 5.788900000000541e-05, 5.711099999999858e-05, 5.7915999999998136e-05, 5.744499999999625e-05, 5.734699999999926e-05, 5.75550000000008e-05, 5.794500000000369e-05, 5.7208000000003034e-05, 5.7986000000002924e-05, 5.813899999999872e-05, 5.8042000000001204e-05, 5.811099999999958e-05, 5.7764000000001814e-05, 5.8097999999999483e-05, 5.801300000000259e-05, 5.723700000000165e-05, 5.7694000000003964e-05, 5.729100000000098e-05, 5.812499999999915e-05, 5.733299999999969e-05, 5.7472000000002854e-05]</msg>
<status status="PASS" starttime="20201112 12:28:14.261" endtime="20201112 12:28:14.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.250" endtime="20201112 12:28:14.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.274" endtime="20201112 12:28:14.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:14.283" endtime="20201112 12:28:14.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.278" endtime="20201112 12:28:14.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.270" endtime="20201112 12:28:14.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.758" endtime="20201112 12:28:14.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.757" endtime="20201112 12:28:14.308"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.332" endtime="20201112 12:28:14.352"></status>
</kw>
<msg timestamp="20201112 12:28:14.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.328" endtime="20201112 12:28:14.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.355" endtime="20201112 12:28:14.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.362" endtime="20201112 12:28:14.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.321" endtime="20201112 12:28:14.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.315" endtime="20201112 12:28:14.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.385" endtime="20201112 12:28:14.721"></status>
</kw>
<msg timestamp="20201112 12:28:14.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042209403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04226775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:14.382" endtime="20201112 12:28:14.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042209403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04226775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:14.731" endtime="20201112 12:28:14.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.749" endtime="20201112 12:28:14.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.375" endtime="20201112 12:28:14.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.370" endtime="20201112 12:28:14.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:14.771" level="INFO">${RESULT} = [{'time': 0.04226775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.834700000000026e-05, 'source_diff': 5.834700000000026e-05}, {'time': 0.042328764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:28:14.761" endtime="20201112 12:28:14.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:14.801" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:14.773" endtime="20201112 12:28:14.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.812" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:28:14.809" endtime="20201112 12:28:14.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.817" level="INFO">VALUE: [5.834700000000026e-05, 5.8763999999995875e-05, 5.8819999999994155e-05, 5.834700000000026e-05, 5.86949999999975e-05, 5.820899999999657e-05, 5.888899999999947e-05, 5.8514000000002564e-05, 5.891699999999861e-05, 5.85550000000018e-05, 5.88749999999999e-05, 5.883300000000119e-05, 5.88749999999999e-05, 5.830499999999461e-05, 5.8264000000002314e-05, 5.8277999999994945e-05, 5.8708000000004534e-05, 5.816699999999786e-05, 5.8985999999996985e-05, 5.8693999999998026e-05, 5.911100000000058e-05, 5.845899999999682e-05, 5.8334000000000163e-05, 5.870899999999707e-05, 5.9000000000003494e-05, 5.8292000000001454e-05, 5.852699999999572e-05, 5.8207999999997095e-05, 5.8277999999994945e-05, 5.8665999999998886e-05, 5.834700000000026e-05, 5.829100000000198e-05, 5.831900000000112e-05, 5.9042000000002204e-05, 5.858300000000094e-05, 5.8570000000000844e-05, 5.859700000000051e-05, 5.883300000000119e-05, 5.888899999999947e-05, 5.88619999999998e-05, 5.86949999999975e-05, 5.862499999999965e-05, 5.876300000000334e-05, 5.880499999999511e-05, 5.82629999999959e-05, 5.880500000000205e-05, 5.881899999999468e-05, 5.8221999999996665e-05, 5.8221999999996665e-05, 5.8514000000002564e-05]</msg>
<status status="PASS" starttime="20201112 12:28:14.814" endtime="20201112 12:28:14.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.802" endtime="20201112 12:28:14.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.827" endtime="20201112 12:28:14.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:14.835" endtime="20201112 12:28:14.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.831" endtime="20201112 12:28:14.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.822" endtime="20201112 12:28:14.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.311" endtime="20201112 12:28:14.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.309" endtime="20201112 12:28:14.861"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.884" endtime="20201112 12:28:14.905"></status>
</kw>
<msg timestamp="20201112 12:28:14.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.880" endtime="20201112 12:28:14.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.908" endtime="20201112 12:28:14.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.915" endtime="20201112 12:28:14.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.873" endtime="20201112 12:28:14.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.867" endtime="20201112 12:28:14.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.940" endtime="20201112 12:28:15.285"></status>
</kw>
<msg timestamp="20201112 12:28:15.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042561847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042621417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.937" endtime="20201112 12:28:15.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042561847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042621417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.294" endtime="20201112 12:28:15.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.313" endtime="20201112 12:28:15.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.929" endtime="20201112 12:28:15.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.924" endtime="20201112 12:28:15.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.333" level="INFO">${RESULT} = [{'time': 0.042621417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9570000000001844e-05, 'source_diff': 5.9570000000001844e-05}, {'time': 0.042687417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:15.323" endtime="20201112 12:28:15.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:15.363" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:15.335" endtime="20201112 12:28:15.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.374" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:28:15.372" endtime="20201112 12:28:15.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.380" level="INFO">VALUE: [5.9570000000001844e-05, 5.9791999999996015e-05, 5.9500000000003994e-05, 5.940299999999954e-05, 5.929100000000298e-05, 6.015300000000029e-05, 5.979100000000348e-05, 5.9221999999997665e-05, 5.95550000000028e-05, 5.966699999999936e-05, 6.013900000000072e-05, 5.9971999999998415e-05, 5.931900000000212e-05, 5.9972000000005354e-05, 6.011100000000158e-05, 6.0042000000003204e-05, 6.0028000000003634e-05, 5.9833999999994725e-05, 5.980500000000305e-05, 5.929099999999604e-05, 5.9165999999999386e-05, 5.936100000000083e-05, 5.963900000000022e-05, 5.9499999999997055e-05, 5.9528000000003134e-05, 5.9916000000000136e-05, 5.934700000000126e-05, 5.984700000000176e-05, 5.9305999999995085e-05, 5.990300000000004e-05, 5.933300000000169e-05, 5.988900000000047e-05, 5.970899999999807e-05, 5.9485999999997485e-05, 5.961100000000108e-05, 5.9693999999999026e-05, 5.9665999999999886e-05, 5.931899999999518e-05, 5.961100000000108e-05, 6.013900000000072e-05, 5.983299999999525e-05, 5.929100000000298e-05, 5.980500000000305e-05, 5.9707999999998596e-05, 5.9570000000001844e-05, 5.9500000000003994e-05, 5.9486000000004424e-05, 5.9819999999995155e-05, 5.9250000000003744e-05, 5.966699999999936e-05]</msg>
<status status="PASS" starttime="20201112 12:28:15.377" endtime="20201112 12:28:15.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.365" endtime="20201112 12:28:15.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.390" endtime="20201112 12:28:15.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.398" endtime="20201112 12:28:15.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.394" endtime="20201112 12:28:15.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.385" endtime="20201112 12:28:15.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.863" endtime="20201112 12:28:15.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.862" endtime="20201112 12:28:15.424"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.447" endtime="20201112 12:28:15.468"></status>
</kw>
<msg timestamp="20201112 12:28:15.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:15.444" endtime="20201112 12:28:15.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:15.472" endtime="20201112 12:28:15.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.478" endtime="20201112 12:28:15.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.436" endtime="20201112 12:28:15.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.431" endtime="20201112 12:28:15.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.502" endtime="20201112 12:28:15.851"></status>
</kw>
<msg timestamp="20201112 12:28:15.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042767042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042827875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.499" endtime="20201112 12:28:15.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042767042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042827875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.861" endtime="20201112 12:28:15.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.880" endtime="20201112 12:28:15.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.491" endtime="20201112 12:28:15.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.486" endtime="20201112 12:28:15.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.900" level="INFO">${RESULT} = [{'time': 0.042827875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083300000000319e-05, 'source_diff': 6.083300000000319e-05}, {'time': 0.042900903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:15.891" endtime="20201112 12:28:15.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:15.930" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:15.902" endtime="20201112 12:28:15.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.942" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:28:15.939" endtime="20201112 12:28:15.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.947" level="INFO">VALUE: [6.083300000000319e-05, 6.034699999999532e-05, 6.0542000000003704e-05, 6.109700000000301e-05, 6.020899999999857e-05, 6.0555999999996335e-05, 6.1013999999998125e-05, 6.0306000000003024e-05, 6.0221999999998665e-05, 6.0652000000001316e-05, 6.109699999999607e-05, 6.0749999999998305e-05, 6.0221999999998665e-05, 6.104099999999779e-05, 6.0221999999998665e-05, 6.107000000000334e-05, 6.0305999999996085e-05, 6.041700000000011e-05, 6.112500000000215e-05, 6.06949999999995e-05, 6.0319999999995655e-05, 6.098699999999846e-05, 6.0499999999998055e-05, 6.106899999999693e-05, 6.048699999999796e-05, 6.031900000000312e-05, 6.0638000000001746e-05, 6.056900000000337e-05, 6.0666000000000886e-05, 6.055499999999686e-05, 6.0499999999998055e-05, 6.034699999999532e-05, 6.10420000000042e-05, 6.068099999999993e-05, 6.0249999999997805e-05, 6.058300000000294e-05, 6.0458000000006284e-05, 6.0320000000002594e-05, 6.0263999999997375e-05, 6.0777999999997445e-05, 6.043099999999968e-05, 6.0791999999997015e-05, 6.0179999999999956e-05, 6.080499999999711e-05, 6.0735999999998735e-05, 6.0805999999996585e-05, 6.0457999999999346e-05, 6.0957999999999846e-05, 6.0249999999997805e-05, 6.0292000000003454e-05]</msg>
<status status="PASS" starttime="20201112 12:28:15.944" endtime="20201112 12:28:15.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.932" endtime="20201112 12:28:15.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.957" endtime="20201112 12:28:15.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.966" endtime="20201112 12:28:15.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.961" endtime="20201112 12:28:15.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.952" endtime="20201112 12:28:15.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.426" endtime="20201112 12:28:15.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.425" endtime="20201112 12:28:15.992"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.015" endtime="20201112 12:28:16.037"></status>
</kw>
<msg timestamp="20201112 12:28:16.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:16.012" endtime="20201112 12:28:16.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:16.040" endtime="20201112 12:28:16.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.046" endtime="20201112 12:28:16.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.005" endtime="20201112 12:28:16.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.998" endtime="20201112 12:28:16.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.070" endtime="20201112 12:28:16.421"></status>
</kw>
<msg timestamp="20201112 12:28:16.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043495153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043556306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.067" endtime="20201112 12:28:16.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043495153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043556306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.431" endtime="20201112 12:28:16.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.450" endtime="20201112 12:28:16.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.059" endtime="20201112 12:28:16.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.055" endtime="20201112 12:28:16.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:16.469" level="INFO">${RESULT} = [{'time': 0.043556306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.115300000000129e-05, 'source_diff': 6.115300000000129e-05}, {'time': 0.043628306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:16.460" endtime="20201112 12:28:16.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:16.500" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:16.472" endtime="20201112 12:28:16.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.511" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:28:16.509" endtime="20201112 12:28:16.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.517" level="INFO">VALUE: [6.115300000000129e-05, 6.122299999999914e-05, 6.161099999999614e-05, 6.134699999999632e-05, 6.176399999999888e-05, 6.206900000000487e-05, 6.175000000000624e-05, 6.176399999999888e-05, 6.163900000000222e-05, 6.12080000000001e-05, 6.166700000000136e-05, 6.122199999999967e-05, 6.159700000000351e-05, 6.188900000000247e-05, 6.208400000000391e-05, 6.17080000000006e-05, 6.127799999999795e-05, 6.184800000000323e-05, 6.159699999999657e-05, 6.179199999999802e-05, 6.175000000000624e-05, 6.163900000000222e-05, 6.195800000000085e-05, 6.19300000000017e-05, 6.149999999999906e-05, 6.165300000000179e-05, 6.140300000000154e-05, 6.188899999999553e-05, 6.133400000000316e-05, 6.140300000000154e-05, 6.126399999999838e-05, 6.209800000000348e-05, 6.131999999999665e-05, 6.197200000000042e-05, 6.155599999999734e-05, 6.151299999999915e-05, 6.20279999999987e-05, 6.12080000000001e-05, 6.194399999999434e-05, 6.20829999999975e-05, 6.209699999999707e-05, 6.147199999999992e-05, 6.195800000000085e-05, 6.197200000000042e-05, 6.179199999999802e-05, 6.147299999999939e-05, 6.126399999999838e-05, 6.149999999999906e-05, 6.177699999999897e-05, 6.166700000000136e-05]</msg>
<status status="PASS" starttime="20201112 12:28:16.514" endtime="20201112 12:28:16.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.502" endtime="20201112 12:28:16.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.526" endtime="20201112 12:28:16.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:16.535" endtime="20201112 12:28:16.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.531" endtime="20201112 12:28:16.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.522" endtime="20201112 12:28:16.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.994" endtime="20201112 12:28:16.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.993" endtime="20201112 12:28:16.561"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.585" endtime="20201112 12:28:16.603"></status>
</kw>
<msg timestamp="20201112 12:28:16.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:16.582" endtime="20201112 12:28:16.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:16.604" endtime="20201112 12:28:16.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.607" endtime="20201112 12:28:16.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.574" endtime="20201112 12:28:16.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.568" endtime="20201112 12:28:16.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.619" endtime="20201112 12:28:16.955"></status>
</kw>
<msg timestamp="20201112 12:28:16.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042476625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042539014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.617" endtime="20201112 12:28:16.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042476625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042539014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.964" endtime="20201112 12:28:16.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.983" endtime="20201112 12:28:16.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.614" endtime="20201112 12:28:16.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.611" endtime="20201112 12:28:16.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:17.005" level="INFO">${RESULT} = [{'time': 0.042539014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.238900000000297e-05, 'source_diff': 6.238900000000297e-05}, {'time': 0.042617014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:16.996" endtime="20201112 12:28:17.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:17.035" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:17.007" endtime="20201112 12:28:17.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.047" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:28:17.044" endtime="20201112 12:28:17.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.052" level="INFO">VALUE: [6.238900000000297e-05, 6.30279999999997e-05, 6.247199999999398e-05, 6.266700000000236e-05, 6.24029999999956e-05, 6.247300000000039e-05, 6.218100000000143e-05, 6.261199999999661e-05, 6.299999999999362e-05, 6.254099999999929e-05, 6.245800000000135e-05, 6.306899999999893e-05, 6.254099999999929e-05, 6.23750000000034e-05, 6.272200000000117e-05, 6.230599999999809e-05, 6.304199999999927e-05, 6.312500000000415e-05, 6.255599999999834e-05, 6.243100000000168e-05, 6.23200000000046e-05, 6.238899999999603e-05, 6.220900000000057e-05, 6.309799999999754e-05, 6.223699999999971e-05, 6.2582999999998e-05, 6.22499999999998e-05, 6.312500000000415e-05, 6.247199999999398e-05, 6.312499999999721e-05, 6.309700000000501e-05, 6.306899999999893e-05, 6.245800000000135e-05, 6.234699999999732e-05, 6.276399999999988e-05, 6.273600000000074e-05, 6.266699999999542e-05, 6.251399999999963e-05, 6.231999999999766e-05, 6.270900000000107e-05, 6.301400000000013e-05, 6.27080000000016e-05, 6.23750000000034e-05, 6.222200000000067e-05, 6.230500000000555e-05, 6.27080000000016e-05, 6.248600000000049e-05, 6.227799999999895e-05, 6.245800000000135e-05, 6.28750000000039e-05]</msg>
<status status="PASS" starttime="20201112 12:28:17.049" endtime="20201112 12:28:17.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.037" endtime="20201112 12:28:17.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.062" endtime="20201112 12:28:17.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:17.071" endtime="20201112 12:28:17.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.066" endtime="20201112 12:28:17.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.057" endtime="20201112 12:28:17.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.564" endtime="20201112 12:28:17.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.562" endtime="20201112 12:28:17.097"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.120" endtime="20201112 12:28:17.141"></status>
</kw>
<msg timestamp="20201112 12:28:17.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.116" endtime="20201112 12:28:17.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.145" endtime="20201112 12:28:17.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.151" endtime="20201112 12:28:17.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.109" endtime="20201112 12:28:17.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.103" endtime="20201112 12:28:17.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.175" endtime="20201112 12:28:17.513"></status>
</kw>
<msg timestamp="20201112 12:28:17.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042970778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043034153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:17.172" endtime="20201112 12:28:17.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042970778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043034153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:17.523" endtime="20201112 12:28:17.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.542" endtime="20201112 12:28:17.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.164" endtime="20201112 12:28:17.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.159" endtime="20201112 12:28:17.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:17.561" level="INFO">${RESULT} = [{'time': 0.043034153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.337499999999746e-05, 'source_diff': 6.337499999999746e-05}, {'time': 0.043112139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:17.552" endtime="20201112 12:28:17.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:17.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:17.563" endtime="20201112 12:28:17.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.603" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:28:17.600" endtime="20201112 12:28:17.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.608" level="INFO">VALUE: [6.337499999999746e-05, 6.323600000000124e-05, 6.400000000000156e-05, 6.354199999999977e-05, 6.355599999999934e-05, 6.391699999999667e-05, 6.358300000000594e-05, 6.361099999999814e-05, 6.366600000000389e-05, 6.376400000000088e-05, 6.400000000000156e-05, 6.383299999999925e-05, 6.394500000000275e-05, 6.333299999999875e-05, 6.366700000000336e-05, 6.348599999999455e-05, 6.330599999999909e-05, 6.409699999999907e-05, 6.318099999999549e-05, 6.372199999999523e-05, 6.409799999999855e-05, 6.330599999999909e-05, 6.393099999999624e-05, 6.404100000000079e-05, 6.362499999999771e-05, 6.351400000000063e-05, 6.361099999999814e-05, 6.40280000000007e-05, 6.316600000000339e-05, 6.379200000000002e-05, 6.40280000000007e-05, 6.345800000000235e-05, 6.384699999999882e-05, 6.404200000000027e-05, 6.33479999999978e-05, 6.397300000000189e-05, 6.391700000000361e-05, 6.318100000000243e-05, 6.370900000000207e-05, 6.318000000000296e-05, 6.39029999999971e-05, 6.365299999999685e-05, 6.354100000000029e-05, 6.39159999999972e-05, 6.331899999999918e-05, 6.408300000000644e-05, 6.388900000000447e-05, 6.39029999999971e-05, 6.415299999999735e-05, 6.324999999999387e-05]</msg>
<status status="PASS" starttime="20201112 12:28:17.605" endtime="20201112 12:28:17.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.594" endtime="20201112 12:28:17.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.618" endtime="20201112 12:28:17.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:17.627" endtime="20201112 12:28:17.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.622" endtime="20201112 12:28:17.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.613" endtime="20201112 12:28:17.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.099" endtime="20201112 12:28:17.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.098" endtime="20201112 12:28:17.653"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.676" endtime="20201112 12:28:17.696"></status>
</kw>
<msg timestamp="20201112 12:28:17.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.672" endtime="20201112 12:28:17.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.700" endtime="20201112 12:28:17.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.706" endtime="20201112 12:28:17.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.665" endtime="20201112 12:28:17.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.659" endtime="20201112 12:28:17.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.730" endtime="20201112 12:28:18.068"></status>
</kw>
<msg timestamp="20201112 12:28:18.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042782819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042847792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:17.727" endtime="20201112 12:28:18.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042782819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042847792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.078" endtime="20201112 12:28:18.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.097" endtime="20201112 12:28:18.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.719" endtime="20201112 12:28:18.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.714" endtime="20201112 12:28:18.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.116" level="INFO">${RESULT} = [{'time': 0.042847792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.497300000000289e-05, 'source_diff': 6.497300000000289e-05}, {'time': 0.042923819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:18.107" endtime="20201112 12:28:18.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:18.147" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:18.118" endtime="20201112 12:28:18.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.158" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:28:18.156" endtime="20201112 12:28:18.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.163" level="INFO">VALUE: [6.497300000000289e-05, 6.502700000000222e-05, 6.491699999999767e-05, 6.416700000000386e-05, 6.505500000000136e-05, 6.441600000000464e-05, 6.473600000000274e-05, 6.42909999999941e-05, 6.492999999999777e-05, 6.461100000000608e-05, 6.474999999999537e-05, 6.436099999999889e-05, 6.427800000000095e-05, 6.443100000000368e-05, 6.497199999999648e-05, 6.498599999999605e-05, 6.472300000000264e-05, 6.486199999999887e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.484699999999982e-05, 6.512499999999921e-05, 6.430500000000061e-05, 6.442999999999727e-05, 6.430600000000009e-05, 6.448600000000249e-05, 6.483300000000025e-05, 6.513900000000572e-05, 6.497199999999648e-05, 6.459699999999957e-05, 6.465299999999785e-05, 6.497200000000342e-05, 6.463899999999828e-05, 6.473600000000274e-05, 6.420900000000257e-05, 6.449999999999512e-05, 6.459699999999957e-05, 6.461099999999914e-05, 6.473600000000274e-05, 6.431900000000018e-05, 6.498599999999605e-05, 6.423600000000224e-05, 6.488900000000547e-05, 6.501400000000213e-05, 6.512499999999921e-05, 6.488899999999853e-05, 6.4583e-05, 6.451400000000163e-05, 6.455600000000034e-05, 6.493099999999724e-05]</msg>
<status status="PASS" starttime="20201112 12:28:18.160" endtime="20201112 12:28:18.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.149" endtime="20201112 12:28:18.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.173" endtime="20201112 12:28:18.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:18.182" endtime="20201112 12:28:18.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.177" endtime="20201112 12:28:18.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.168" endtime="20201112 12:28:18.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.655" endtime="20201112 12:28:18.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.654" endtime="20201112 12:28:18.208"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.233" endtime="20201112 12:28:18.254"></status>
</kw>
<msg timestamp="20201112 12:28:18.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:18.229" endtime="20201112 12:28:18.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:18.258" endtime="20201112 12:28:18.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.264" endtime="20201112 12:28:18.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.221" endtime="20201112 12:28:18.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.215" endtime="20201112 12:28:18.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.288" endtime="20201112 12:28:18.628"></status>
</kw>
<msg timestamp="20201112 12:28:18.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044491875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044557528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.285" endtime="20201112 12:28:18.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044491875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044557528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.638" endtime="20201112 12:28:18.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.657" endtime="20201112 12:28:18.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.277" endtime="20201112 12:28:18.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.273" endtime="20201112 12:28:18.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.676" level="INFO">${RESULT} = [{'time': 0.044557528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.565299999999885e-05, 'source_diff': 6.565299999999885e-05}, {'time': 0.044635542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:18.667" endtime="20201112 12:28:18.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:18.707" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:18.678" endtime="20201112 12:28:18.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.718" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:28:18.716" endtime="20201112 12:28:18.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.724" level="INFO">VALUE: [6.565299999999885e-05, 6.569499999999756e-05, 6.576400000000288e-05, 6.591700000000561e-05, 6.517999999999802e-05, 6.581899999999474e-05, 6.598600000000399e-05, 6.572200000000417e-05, 6.533300000000075e-05, 6.538899999999903e-05, 6.554199999999483e-05, 6.530600000000109e-05, 6.566700000000536e-05, 6.593100000000518e-05, 6.60830000000015e-05, 6.5277999999995e-05, 6.565299999999885e-05, 6.54029999999986e-05, 6.587499999999996e-05, 6.516699999999792e-05, 6.549999999999612e-05, 6.57500000000033e-05, 6.531900000000118e-05, 6.574999999999637e-05, 6.615300000000629e-05, 6.572200000000417e-05, 6.516699999999792e-05, 6.554199999999483e-05, 6.597199999999748e-05, 6.595799999999791e-05, 6.613899999999978e-05, 6.544500000000425e-05, 6.600000000000356e-05, 6.598599999999705e-05, 6.520899999999663e-05, 6.531900000000118e-05, 6.59159999999992e-05, 6.526399999999544e-05, 6.534700000000032e-05, 6.586099999999345e-05, 6.572199999999723e-05, 6.576399999999594e-05, 6.615299999999935e-05, 6.541700000000511e-05, 6.612500000000021e-05, 6.513899999999878e-05, 6.526400000000238e-05, 6.593099999999824e-05, 6.57500000000033e-05, 6.559699999999363e-05]</msg>
<status status="PASS" starttime="20201112 12:28:18.720" endtime="20201112 12:28:18.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.709" endtime="20201112 12:28:18.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.737" endtime="20201112 12:28:18.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:18.746" endtime="20201112 12:28:18.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.741" endtime="20201112 12:28:18.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.733" endtime="20201112 12:28:18.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.210" endtime="20201112 12:28:18.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.209" endtime="20201112 12:28:18.772"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.795" endtime="20201112 12:28:18.816"></status>
</kw>
<msg timestamp="20201112 12:28:18.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:18.792" endtime="20201112 12:28:18.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:18.819" endtime="20201112 12:28:18.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.826" endtime="20201112 12:28:18.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.784" endtime="20201112 12:28:18.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.778" endtime="20201112 12:28:18.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.850" endtime="20201112 12:28:19.187"></status>
</kw>
<msg timestamp="20201112 12:28:19.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042748833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042815736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.847" endtime="20201112 12:28:19.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042748833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042815736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.197" endtime="20201112 12:28:19.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.216" endtime="20201112 12:28:19.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.839" endtime="20201112 12:28:19.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.835" endtime="20201112 12:28:19.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:19.237" level="INFO">${RESULT} = [{'time': 0.042815736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.69030000000001e-05, 'source_diff': 6.69030000000001e-05}, {'time': 0.042890764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:19.228" endtime="20201112 12:28:19.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:19.269" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:19.239" endtime="20201112 12:28:19.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.280" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:28:19.278" endtime="20201112 12:28:19.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.286" level="INFO">VALUE: [6.69030000000001e-05, 6.713900000000078e-05, 6.618099999999849e-05, 6.623600000000424e-05, 6.692999999999977e-05, 6.667999999999952e-05, 6.637500000000046e-05, 6.641699999999917e-05, 6.650000000000406e-05, 6.622200000000467e-05, 6.67909999999966e-05, 6.674999999999737e-05, 6.706899999999599e-05, 6.626400000000338e-05, 6.622199999999773e-05, 6.622199999999773e-05, 6.67500000000043e-05, 6.699999999999762e-05, 6.65559999999954e-05, 6.683299999999531e-05, 6.706999999999547e-05, 6.70979999999946e-05, 6.686099999999445e-05, 6.652799999999626e-05, 6.666599999999995e-05, 6.669399999999909e-05, 6.686100000000139e-05, 6.629100000000304e-05, 6.680500000000311e-05, 6.616599999999945e-05, 6.6583000000002e-05, 6.684699999999488e-05, 6.70830000000025e-05, 6.673600000000474e-05, 6.616699999999892e-05, 6.70280000000037e-05, 6.709800000000155e-05, 6.688900000000053e-05, 6.616699999999892e-05, 6.654199999999583e-05, 6.6583000000002e-05, 6.709699999999513e-05, 6.654100000000329e-05, 6.663900000000028e-05, 6.711100000000164e-05, 6.705500000000336e-05, 6.662500000000071e-05, 6.629200000000252e-05, 6.70559999999959e-05, 6.634700000000132e-05]</msg>
<status status="PASS" starttime="20201112 12:28:19.283" endtime="20201112 12:28:19.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.271" endtime="20201112 12:28:19.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.296" endtime="20201112 12:28:19.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:19.304" endtime="20201112 12:28:19.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.300" endtime="20201112 12:28:19.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.291" endtime="20201112 12:28:19.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.774" endtime="20201112 12:28:19.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.773" endtime="20201112 12:28:19.330"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.354" endtime="20201112 12:28:19.375"></status>
</kw>
<msg timestamp="20201112 12:28:19.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:19.350" endtime="20201112 12:28:19.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:19.378" endtime="20201112 12:28:19.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.384" endtime="20201112 12:28:19.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.343" endtime="20201112 12:28:19.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.337" endtime="20201112 12:28:19.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.408" endtime="20201112 12:28:19.747"></status>
</kw>
<msg timestamp="20201112 12:28:19.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042824819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042892944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.405" endtime="20201112 12:28:19.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042824819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042892944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.756" endtime="20201112 12:28:19.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.776" endtime="20201112 12:28:19.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.398" endtime="20201112 12:28:19.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.393" endtime="20201112 12:28:19.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:19.795" level="INFO">${RESULT} = [{'time': 0.042892944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.812500000000221e-05, 'source_diff': 6.812500000000221e-05}, {'time': 0.042970944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:19.786" endtime="20201112 12:28:19.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:19.826" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:19.797" endtime="20201112 12:28:19.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.837" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:28:19.835" endtime="20201112 12:28:19.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.842" level="INFO">VALUE: [6.812500000000221e-05, 6.784699999999588e-05, 6.813799999999537e-05, 6.737500000000146e-05, 6.805500000000436e-05, 6.731900000000318e-05, 6.804200000000427e-05, 6.751399999999769e-05, 6.724999999999787e-05, 6.763900000000128e-05, 6.80830000000035e-05, 6.729200000000352e-05, 6.801400000000513e-05, 6.748599999999855e-05, 6.738900000000103e-05, 6.719399999999959e-05, 6.808400000000298e-05, 6.802699999999828e-05, 6.794400000000034e-05, 6.759699999999563e-05, 6.745799999999941e-05, 6.730499999999667e-05, 6.737500000000146e-05, 6.791700000000067e-05, 6.754199999999683e-05, 6.768099999999999e-05, 6.747199999999898e-05, 6.797199999999948e-05, 6.783400000000273e-05, 6.756999999999597e-05, 6.732000000000266e-05, 6.815199999999494e-05, 6.770899999999913e-05, 6.752699999999778e-05, 6.731899999999624e-05, 6.787499999999502e-05, 6.798599999999905e-05, 6.72359999999983e-05, 6.730600000000309e-05, 6.776399999999794e-05, 6.75280000000042e-05, 6.748600000000549e-05, 6.812500000000221e-05, 6.809800000000255e-05, 6.765299999999391e-05, 6.759700000000257e-05, 6.780599999999665e-05, 6.787500000000196e-05, 6.769400000000009e-05, 6.729100000000404e-05]</msg>
<status status="PASS" starttime="20201112 12:28:19.839" endtime="20201112 12:28:19.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.828" endtime="20201112 12:28:19.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.852" endtime="20201112 12:28:19.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:19.861" endtime="20201112 12:28:19.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.856" endtime="20201112 12:28:19.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.847" endtime="20201112 12:28:19.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.333" endtime="20201112 12:28:19.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.331" endtime="20201112 12:28:19.887"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.910" endtime="20201112 12:28:19.929"></status>
</kw>
<msg timestamp="20201112 12:28:19.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:19.907" endtime="20201112 12:28:19.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:19.931" endtime="20201112 12:28:19.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.934" endtime="20201112 12:28:19.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.899" endtime="20201112 12:28:19.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.893" endtime="20201112 12:28:19.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.945" endtime="20201112 12:28:20.231"></status>
</kw>
<msg timestamp="20201112 12:28:20.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042835417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042904306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.944" endtime="20201112 12:28:20.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042835417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042904306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.236" endtime="20201112 12:28:20.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.244" endtime="20201112 12:28:20.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.940" endtime="20201112 12:28:20.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.938" endtime="20201112 12:28:20.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:20.253" level="INFO">${RESULT} = [{'time': 0.042904306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888900000000253e-05, 'source_diff': 6.888900000000253e-05}, {'time': 0.042979347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:20.249" endtime="20201112 12:28:20.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:20.267" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:20.255" endtime="20201112 12:28:20.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.272" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:28:20.271" endtime="20201112 12:28:20.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.275" level="INFO">VALUE: [6.888900000000253e-05, 6.87909999999986e-05, 6.876399999999894e-05, 6.859699999999663e-05, 6.826400000000538e-05, 6.847199999999998e-05, 6.869400000000109e-05, 6.89030000000021e-05, 6.824999999999887e-05, 6.859700000000357e-05, 6.87229999999997e-05, 6.901399999999919e-05, 6.888899999999559e-05, 6.819500000000006e-05, 6.90979999999966e-05, 6.869500000000056e-05, 6.833299999999681e-05, 6.854099999999835e-05, 6.822199999999973e-05, 6.893000000000177e-05, 6.897200000000048e-05, 6.906999999999747e-05, 6.884700000000382e-05, 6.820800000000016e-05, 6.834700000000332e-05, 6.820800000000016e-05, 6.848599999999955e-05, 6.829199999999758e-05, 6.874999999999937e-05, 6.830500000000461e-05, 6.891700000000167e-05, 6.919399999999465e-05, 6.876400000000588e-05, 6.87909999999986e-05, 6.855499999999792e-05, 6.874999999999937e-05, 6.901299999999971e-05, 6.831900000000418e-05, 6.876399999999894e-05, 6.819500000000006e-05, 6.89439999999944e-05, 6.909699999999713e-05, 6.90559999999979e-05, 6.84030000000016e-05, 6.863900000000228e-05, 6.883300000000425e-05, 6.905499999999842e-05, 6.905499999999842e-05, 6.891599999999526e-05, 6.911100000000364e-05]</msg>
<status status="PASS" starttime="20201112 12:28:20.274" endtime="20201112 12:28:20.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.268" endtime="20201112 12:28:20.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.280" endtime="20201112 12:28:20.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:20.284" endtime="20201112 12:28:20.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.282" endtime="20201112 12:28:20.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.277" endtime="20201112 12:28:20.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.889" endtime="20201112 12:28:20.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.888" endtime="20201112 12:28:20.306"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.317" endtime="20201112 12:28:20.338"></status>
</kw>
<msg timestamp="20201112 12:28:20.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:20.315" endtime="20201112 12:28:20.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:20.342" endtime="20201112 12:28:20.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.348" endtime="20201112 12:28:20.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.312" endtime="20201112 12:28:20.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.309" endtime="20201112 12:28:20.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.372" endtime="20201112 12:28:20.717"></status>
</kw>
<msg timestamp="20201112 12:28:20.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025424333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025493847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.369" endtime="20201112 12:28:20.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025424333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025493847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.727" endtime="20201112 12:28:20.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.746" endtime="20201112 12:28:20.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.361" endtime="20201112 12:28:20.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.357" endtime="20201112 12:28:20.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:20.766" level="INFO">${RESULT} = [{'time': 0.025493847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.951399999999969e-05, 'source_diff': 6.951399999999969e-05}, {'time': 0.025574903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:20.756" endtime="20201112 12:28:20.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:20.796" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:20.768" endtime="20201112 12:28:20.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.807" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:28:20.805" endtime="20201112 12:28:20.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.813" level="INFO">VALUE: [6.951399999999969e-05, 6.963899999999981e-05, 6.951399999999969e-05, 6.920799999999769e-05, 6.955600000000187e-05, 6.966699999999895e-05, 7.017999999999955e-05, 6.926399999999944e-05, 6.956999999999797e-05, 6.988900000000006e-05, 6.954199999999883e-05, 6.988900000000006e-05, 7.00970000000016e-05, 6.930499999999867e-05, 6.993000000000277e-05, 6.970800000000166e-05, 6.986099999999745e-05, 7.011100000000117e-05, 6.924999999999987e-05, 7.001399999999672e-05, 7.01109999999977e-05, 6.983400000000126e-05, 6.972299999999723e-05, 6.968099999999852e-05, 6.993099999999877e-05, 6.975000000000037e-05, 6.915199999999941e-05, 7.015299999999988e-05, 6.954099999999935e-05, 6.947199999999751e-05, 6.995799999999844e-05, 6.947200000000098e-05, 6.986100000000092e-05, 6.998600000000105e-05, 6.937499999999999e-05, 6.976399999999994e-05, 6.97230000000007e-05, 6.965299999999938e-05, 6.954199999999883e-05, 6.940200000000313e-05, 6.922200000000073e-05, 6.958299999999806e-05, 6.94030000000026e-05, 6.926399999999944e-05, 7.011100000000117e-05, 6.975000000000037e-05, 6.95420000000023e-05, 6.930599999999815e-05, 6.956900000000196e-05, 7.007000000000194e-05]</msg>
<status status="PASS" starttime="20201112 12:28:20.810" endtime="20201112 12:28:20.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.798" endtime="20201112 12:28:20.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.823" endtime="20201112 12:28:20.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:20.831" endtime="20201112 12:28:20.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.827" endtime="20201112 12:28:20.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.818" endtime="20201112 12:28:20.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.307" endtime="20201112 12:28:20.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.307" endtime="20201112 12:28:20.858"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.881" endtime="20201112 12:28:20.902"></status>
</kw>
<msg timestamp="20201112 12:28:20.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:20.877" endtime="20201112 12:28:20.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:20.905" endtime="20201112 12:28:20.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.912" endtime="20201112 12:28:20.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.870" endtime="20201112 12:28:20.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.864" endtime="20201112 12:28:20.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.936" endtime="20201112 12:28:21.287"></status>
</kw>
<msg timestamp="20201112 12:28:21.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043118264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043188806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.932" endtime="20201112 12:28:21.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043118264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043188806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:21.297" endtime="20201112 12:28:21.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.316" endtime="20201112 12:28:21.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.925" endtime="20201112 12:28:21.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.920" endtime="20201112 12:28:21.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:21.338" level="INFO">${RESULT} = [{'time': 0.043188806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.054199999999983e-05, 'source_diff': 7.054199999999983e-05}, {'time': 0.043273819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:21.329" endtime="20201112 12:28:21.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:21.369" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:21.340" endtime="20201112 12:28:21.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.380" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:28:21.378" endtime="20201112 12:28:21.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.386" level="INFO">VALUE: [7.054199999999983e-05, 7.067999999999658e-05, 7.034699999999838e-05, 7.097200000000248e-05, 7.108299999999956e-05, 7.095799999999597e-05, 7.018000000000302e-05, 7.097200000000248e-05, 7.100000000000162e-05, 7.061199999999768e-05, 7.081999999999922e-05, 7.076400000000094e-05, 7.048600000000155e-05, 7.027800000000001e-05, 7.051400000000069e-05, 7.022200000000173e-05, 7.02910000000001e-05, 7.076400000000094e-05, 7.087500000000496e-05, 7.113899999999784e-05, 7.079200000000008e-05, 7.075000000000137e-05, 7.063899999999734e-05, 7.027700000000053e-05, 7.080599999999965e-05, 7.10559999999999e-05, 7.112499999999827e-05, 7.101399999999425e-05, 7.026400000000044e-05, 7.047199999999504e-05, 7.108299999999956e-05, 7.091599999999726e-05, 7.099999999999468e-05, 7.02910000000001e-05, 7.112499999999827e-05, 7.034699999999838e-05, 7.062499999999777e-05, 7.084799999999836e-05, 7.043100000000274e-05, 7.108299999999956e-05, 7.083399999999879e-05, 7.10559999999999e-05, 7.025000000000087e-05, 7.02910000000001e-05, 7.026400000000044e-05, 7.055499999999992e-05, 7.1069e-05, 7.051400000000069e-05, 7.0583000000006e-05, 7.077800000000051e-05]</msg>
<status status="PASS" starttime="20201112 12:28:21.382" endtime="20201112 12:28:21.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.371" endtime="20201112 12:28:21.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.395" endtime="20201112 12:28:21.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:21.404" endtime="20201112 12:28:21.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.399" endtime="20201112 12:28:21.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.391" endtime="20201112 12:28:21.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.860" endtime="20201112 12:28:21.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.859" endtime="20201112 12:28:21.430"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.453" endtime="20201112 12:28:21.475"></status>
</kw>
<msg timestamp="20201112 12:28:21.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:21.450" endtime="20201112 12:28:21.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:21.478" endtime="20201112 12:28:21.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.485" endtime="20201112 12:28:21.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.443" endtime="20201112 12:28:21.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.437" endtime="20201112 12:28:21.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.509" endtime="20201112 12:28:21.848"></status>
</kw>
<msg timestamp="20201112 12:28:21.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042958792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043030431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:21.505" endtime="20201112 12:28:21.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042958792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043030431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:21.858" endtime="20201112 12:28:21.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.877" endtime="20201112 12:28:21.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.498" endtime="20201112 12:28:21.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.493" endtime="20201112 12:28:21.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:21.896" level="INFO">${RESULT} = [{'time': 0.043030431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.163899999999834e-05, 'source_diff': 7.163899999999834e-05}, {'time': 0.043117444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:21.887" endtime="20201112 12:28:21.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:21.927" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:21.898" endtime="20201112 12:28:21.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.938" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:28:21.936" endtime="20201112 12:28:21.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.944" level="INFO">VALUE: [7.163899999999834e-05, 7.17769999999951e-05, 7.195799999999697e-05, 7.117999999999708e-05, 7.180500000000117e-05, 7.145800000000341e-05, 7.159699999999963e-05, 7.175000000000237e-05, 7.172199999999629e-05, 7.16109999999992e-05, 7.174999999999543e-05, 7.122199999999579e-05, 7.204200000000133e-05, 7.131999999999972e-05, 7.173599999999586e-05, 7.208400000000004e-05, 7.205500000000142e-05, 7.191599999999826e-05, 7.166599999999801e-05, 7.17360000000028e-05, 7.205500000000142e-05, 7.19309999999973e-05, 7.125000000000187e-05, 7.208300000000056e-05, 7.151400000000169e-05, 7.197199999999654e-05, 7.12639999999945e-05, 7.191699999999773e-05, 7.131900000000024e-05, 7.20560000000009e-05, 7.197200000000348e-05, 7.150000000000212e-05, 7.169399999999715e-05, 7.148600000000255e-05, 7.159699999999963e-05, 7.166699999999748e-05, 7.202800000000176e-05, 7.131999999999972e-05, 7.143100000000374e-05, 7.12360000000023e-05, 7.212499999999927e-05, 7.182000000000022e-05, 7.133399999999929e-05, 7.166699999999748e-05, 7.125000000000187e-05, 7.125000000000187e-05, 7.172200000000323e-05, 7.204099999999491e-05, 7.197200000000348e-05, 7.186099999999945e-05]</msg>
<status status="PASS" starttime="20201112 12:28:21.941" endtime="20201112 12:28:21.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.929" endtime="20201112 12:28:21.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.954" endtime="20201112 12:28:21.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:21.962" endtime="20201112 12:28:21.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.958" endtime="20201112 12:28:21.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.949" endtime="20201112 12:28:21.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.432" endtime="20201112 12:28:21.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.431" endtime="20201112 12:28:21.988"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.012" endtime="20201112 12:28:22.033"></status>
</kw>
<msg timestamp="20201112 12:28:22.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:22.008" endtime="20201112 12:28:22.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:22.037" endtime="20201112 12:28:22.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.043" endtime="20201112 12:28:22.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.001" endtime="20201112 12:28:22.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.995" endtime="20201112 12:28:22.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.067" endtime="20201112 12:28:22.407"></status>
</kw>
<msg timestamp="20201112 12:28:22.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043139722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043212792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.064" endtime="20201112 12:28:22.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043139722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043212792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.416" endtime="20201112 12:28:22.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.436" endtime="20201112 12:28:22.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.056" endtime="20201112 12:28:22.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.052" endtime="20201112 12:28:22.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:22.455" level="INFO">${RESULT} = [{'time': 0.043212792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.307000000000147e-05, 'source_diff': 7.307000000000147e-05}, {'time': 0.043296847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:22.446" endtime="20201112 12:28:22.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:22.485" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:22.457" endtime="20201112 12:28:22.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.497" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:28:22.494" endtime="20201112 12:28:22.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.502" level="INFO">VALUE: [7.307000000000147e-05, 7.265299999999891e-05, 7.225000000000287e-05, 7.234700000000038e-05, 7.255500000000192e-05, 7.26110000000002e-05, 7.286100000000045e-05, 7.248600000000355e-05, 7.262499999999977e-05, 7.265299999999891e-05, 7.225000000000287e-05, 7.216700000000492e-05, 7.26110000000002e-05, 7.304200000000233e-05, 7.316599999999951e-05, 7.293100000000524e-05, 7.242999999999833e-05, 7.238799999999962e-05, 7.25690000000015e-05, 7.250000000000312e-05, 7.276400000000294e-05, 7.225000000000287e-05, 7.295799999999797e-05, 7.226400000000244e-05, 7.252800000000226e-05, 7.238899999999909e-05, 7.304200000000233e-05, 7.298600000000405e-05, 7.27360000000038e-05, 7.233400000000029e-05, 7.252699999999584e-05, 7.288899999999959e-05, 7.251400000000269e-05, 7.312500000000027e-05, 7.249999999999618e-05, 7.263899999999934e-05, 7.272199999999729e-05, 7.284700000000088e-05, 7.287500000000002e-05, 7.265299999999891e-05, 7.266700000000542e-05, 7.219500000000406e-05, 7.226400000000244e-05, 7.30560000000019e-05, 7.297300000000395e-05, 7.31110000000007e-05, 7.294500000000481e-05, 7.284700000000088e-05, 7.238899999999909e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201112 12:28:22.499" endtime="20201112 12:28:22.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.487" endtime="20201112 12:28:22.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.512" endtime="20201112 12:28:22.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:22.521" endtime="20201112 12:28:22.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.516" endtime="20201112 12:28:22.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.507" endtime="20201112 12:28:22.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.991" endtime="20201112 12:28:22.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.989" endtime="20201112 12:28:22.547"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.570" endtime="20201112 12:28:22.591"></status>
</kw>
<msg timestamp="20201112 12:28:22.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:22.566" endtime="20201112 12:28:22.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:22.595" endtime="20201112 12:28:22.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.601" endtime="20201112 12:28:22.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.559" endtime="20201112 12:28:22.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.553" endtime="20201112 12:28:22.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.625" endtime="20201112 12:28:22.963"></status>
</kw>
<msg timestamp="20201112 12:28:22.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042766236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042840069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.622" endtime="20201112 12:28:22.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042766236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042840069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.972" endtime="20201112 12:28:22.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.991" endtime="20201112 12:28:22.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.614" endtime="20201112 12:28:22.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.609" endtime="20201112 12:28:23.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.011" level="INFO">${RESULT} = [{'time': 0.042840069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.383300000000231e-05, 'source_diff': 7.383300000000231e-05}, {'time': 0.042917056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:23.002" endtime="20201112 12:28:23.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:23.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:23.013" endtime="20201112 12:28:23.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.053" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:28:23.051" endtime="20201112 12:28:23.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.058" level="INFO">VALUE: [7.383300000000231e-05, 7.412500000000127e-05, 7.366600000000001e-05, 7.32360000000043e-05, 7.402800000000376e-05, 7.40969999999952e-05, 7.397199999999854e-05, 7.391699999999973e-05, 7.336100000000095e-05, 7.324999999999693e-05, 7.332000000000172e-05, 7.40560000000029e-05, 7.399999999999768e-05, 7.388900000000059e-05, 7.384800000000136e-05, 7.397199999999854e-05, 7.331900000000224e-05, 7.413900000000084e-05, 7.392999999999983e-05, 7.322199999999779e-05, 7.408300000000256e-05, 7.401400000000419e-05, 7.399999999999768e-05, 7.402799999999682e-05, 7.341699999999923e-05, 7.377799999999657e-05, 7.329199999999564e-05, 7.376400000000394e-05, 7.354200000000283e-05, 7.322199999999779e-05, 7.351300000000421e-05, 7.355500000000292e-05, 7.363900000000034e-05, 7.397199999999854e-05, 7.324999999999693e-05, 7.336100000000095e-05, 7.409700000000213e-05, 7.404199999999639e-05, 7.329199999999564e-05, 7.337500000000052e-05, 7.312499999999333e-05, 7.330599999999521e-05, 7.329200000000258e-05, 7.320900000000463e-05, 7.388800000000112e-05, 7.333300000000181e-05, 7.338900000000009e-05, 7.342999999999933e-05, 7.41110000000017e-05, 7.330500000000267e-05]</msg>
<status status="PASS" starttime="20201112 12:28:23.055" endtime="20201112 12:28:23.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.044" endtime="20201112 12:28:23.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.068" endtime="20201112 12:28:23.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:23.077" endtime="20201112 12:28:23.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.072" endtime="20201112 12:28:23.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.063" endtime="20201112 12:28:23.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.549" endtime="20201112 12:28:23.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.548" endtime="20201112 12:28:23.103"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.126" endtime="20201112 12:28:23.147"></status>
</kw>
<msg timestamp="20201112 12:28:23.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.122" endtime="20201112 12:28:23.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.151" endtime="20201112 12:28:23.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.157" endtime="20201112 12:28:23.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.115" endtime="20201112 12:28:23.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.109" endtime="20201112 12:28:23.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.181" endtime="20201112 12:28:23.522"></status>
</kw>
<msg timestamp="20201112 12:28:23.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043110181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043185278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.178" endtime="20201112 12:28:23.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043110181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043185278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.532" endtime="20201112 12:28:23.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.550" endtime="20201112 12:28:23.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.171" endtime="20201112 12:28:23.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.166" endtime="20201112 12:28:23.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.572" level="INFO">${RESULT} = [{'time': 0.043185278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.509700000000313e-05, 'source_diff': 7.509700000000313e-05}, {'time': 0.043265278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:23.563" endtime="20201112 12:28:23.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:23.602" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:23.574" endtime="20201112 12:28:23.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.614" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:28:23.611" endtime="20201112 12:28:23.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.619" level="INFO">VALUE: [7.509700000000313e-05, 7.419499999999912e-05, 7.430599999999621e-05, 7.430500000000367e-05, 7.469499999999962e-05, 7.493000000000083e-05, 7.480499999999723e-05, 7.44439999999999e-05, 7.476400000000494e-05, 7.512500000000227e-05, 7.501400000000519e-05, 7.45969999999957e-05, 7.42639999999975e-05, 7.436100000000195e-05, 7.438900000000109e-05, 7.433400000000229e-05, 7.484800000000236e-05, 7.505599999999696e-05, 7.512499999999533e-05, 7.448600000000555e-05, 7.441600000000076e-05, 7.505499999999748e-05, 7.4763999999998e-05, 7.477800000000451e-05, 7.497199999999954e-05, 7.473599999999886e-05, 7.513900000000184e-05, 7.437499999999458e-05, 7.42639999999975e-05, 7.491700000000073e-05, 7.466600000000101e-05, 7.488900000000159e-05, 7.433299999999587e-05, 7.50969999999962e-05, 7.466600000000101e-05, 7.472200000000623e-05, 7.476400000000494e-05, 7.42639999999975e-05, 7.504200000000433e-05, 7.4763999999998e-05, 7.512499999999533e-05, 7.491700000000073e-05, 7.506999999999653e-05, 7.515300000000141e-05, 7.504199999999739e-05, 7.495899999999944e-05, 7.505499999999748e-05, 7.42639999999975e-05, 7.454099999999741e-05, 7.418000000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:28:23.616" endtime="20201112 12:28:23.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.604" endtime="20201112 12:28:23.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.629" endtime="20201112 12:28:23.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:23.638" endtime="20201112 12:28:23.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.633" endtime="20201112 12:28:23.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.625" endtime="20201112 12:28:23.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.105" endtime="20201112 12:28:23.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.104" endtime="20201112 12:28:23.664"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.678" endtime="20201112 12:28:23.696"></status>
</kw>
<msg timestamp="20201112 12:28:23.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.676" endtime="20201112 12:28:23.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.697" endtime="20201112 12:28:23.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.700" endtime="20201112 12:28:23.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.673" endtime="20201112 12:28:23.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.670" endtime="20201112 12:28:23.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.712" endtime="20201112 12:28:23.996"></status>
</kw>
<msg timestamp="20201112 12:28:23.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032454972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032530431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.710" endtime="20201112 12:28:24.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032454972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032530431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.001" endtime="20201112 12:28:24.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.009" endtime="20201112 12:28:24.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.707" endtime="20201112 12:28:24.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.704" endtime="20201112 12:28:24.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:24.018" level="INFO">${RESULT} = [{'time': 0.032530431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.545899999999994e-05, 'source_diff': 7.545899999999994e-05}, {'time': 0.032617458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:24.014" endtime="20201112 12:28:24.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:24.032" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:24.019" endtime="20201112 12:28:24.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.037" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:28:24.036" endtime="20201112 12:28:24.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.040" level="INFO">VALUE: [7.545899999999994e-05, 7.559700000000363e-05, 7.530499999999773e-05, 7.52639999999985e-05, 7.601399999999925e-05, 7.58189999999978e-05, 7.555499999999798e-05, 7.527799999999807e-05, 7.547200000000004e-05, 7.590300000000216e-05, 7.569500000000062e-05, 7.570899999999325e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.551299999999928e-05, 7.587499999999608e-05, 7.601399999999925e-05, 7.602700000000628e-05, 7.53890000000021e-05, 7.547200000000004e-05, 7.573599999999986e-05, 7.577800000000551e-05, 7.529199999999764e-05, 7.558300000000406e-05, 7.532000000000372e-05, 7.540300000000166e-05, 7.583400000000379e-05, 7.569400000000115e-05, 7.574999999999943e-05, 7.533299999999687e-05, 7.559700000000363e-05, 7.565200000000244e-05, 7.574999999999943e-05, 7.612499999999633e-05, 7.61110000000037e-05, 7.529200000000458e-05, 7.541700000000123e-05, 7.520800000000022e-05, 7.569500000000062e-05, 7.522299999999926e-05, 7.594500000000087e-05, 7.613900000000284e-05, 7.58189999999978e-05, 7.586099999999651e-05, 7.522199999999979e-05, 7.602799999999882e-05, 7.572200000000029e-05, 7.611099999999676e-05, 7.601399999999925e-05, 7.518100000000055e-05]</msg>
<status status="PASS" starttime="20201112 12:28:24.039" endtime="20201112 12:28:24.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.033" endtime="20201112 12:28:24.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.049" endtime="20201112 12:28:24.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:24.053" endtime="20201112 12:28:24.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.051" endtime="20201112 12:28:24.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.047" endtime="20201112 12:28:24.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.666" endtime="20201112 12:28:24.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.665" endtime="20201112 12:28:24.075"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.085" endtime="20201112 12:28:24.103"></status>
</kw>
<msg timestamp="20201112 12:28:24.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:24.084" endtime="20201112 12:28:24.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:24.105" endtime="20201112 12:28:24.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.108" endtime="20201112 12:28:24.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.080" endtime="20201112 12:28:24.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.078" endtime="20201112 12:28:24.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.119" endtime="20201112 12:28:24.405"></status>
</kw>
<msg timestamp="20201112 12:28:24.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025180347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.118" endtime="20201112 12:28:24.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025180347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.409" endtime="20201112 12:28:24.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.418" endtime="20201112 12:28:24.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.114" endtime="20201112 12:28:24.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.112" endtime="20201112 12:28:24.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:24.427" level="INFO">${RESULT} = [{'time': 0.025180347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.642999999999886e-05, 'source_diff': 7.642999999999886e-05}, {'time': 0.025262347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:24.423" endtime="20201112 12:28:24.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:24.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:24.428" endtime="20201112 12:28:24.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.446" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:28:24.445" endtime="20201112 12:28:24.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.449" level="INFO">VALUE: [7.642999999999886e-05, 7.700000000000068e-05, 7.687500000000055e-05, 7.666699999999901e-05, 7.650000000000018e-05, 7.684699999999794e-05, 7.675000000000043e-05, 7.638899999999962e-05, 7.684800000000089e-05, 7.634799999999692e-05, 7.651300000000028e-05, 7.652799999999932e-05, 7.634700000000091e-05, 7.71250000000008e-05, 7.623600000000036e-05, 7.687500000000055e-05, 7.686200000000046e-05, 7.636100000000048e-05, 7.654200000000236e-05, 7.64310000000018e-05, 7.65839999999976e-05, 7.636199999999996e-05, 7.691599999999979e-05, 7.623699999999983e-05, 7.70969999999982e-05, 7.627799999999907e-05, 7.666599999999954e-05, 7.692999999999936e-05, 7.633299999999787e-05, 7.630499999999873e-05, 7.684699999999794e-05, 7.637500000000005e-05, 7.62639999999995e-05, 7.616699999999851e-05, 7.666699999999901e-05, 7.637500000000005e-05, 7.624999999999993e-05, 7.623699999999983e-05, 7.71380000000009e-05, 7.698600000000111e-05, 7.663899999999987e-05, 7.705599999999896e-05, 7.663899999999987e-05, 7.691700000000273e-05, 7.699999999999721e-05, 7.624999999999993e-05, 7.673600000000086e-05, 7.6764e-05, 7.620900000000069e-05, 7.704199999999939e-05]</msg>
<status status="PASS" starttime="20201112 12:28:24.447" endtime="20201112 12:28:24.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.442" endtime="20201112 12:28:24.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.453" endtime="20201112 12:28:24.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:24.457" endtime="20201112 12:28:24.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.455" endtime="20201112 12:28:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.451" endtime="20201112 12:28:24.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.076" endtime="20201112 12:28:24.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.075" endtime="20201112 12:28:24.480"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.504" endtime="20201112 12:28:24.525"></status>
</kw>
<msg timestamp="20201112 12:28:24.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:24.500" endtime="20201112 12:28:24.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:24.529" endtime="20201112 12:28:24.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.535" endtime="20201112 12:28:24.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.493" endtime="20201112 12:28:24.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.487" endtime="20201112 12:28:24.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.559" endtime="20201112 12:28:24.898"></status>
</kw>
<msg timestamp="20201112 12:28:24.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040477625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040554972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.556" endtime="20201112 12:28:24.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040477625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040554972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.908" endtime="20201112 12:28:24.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.927" endtime="20201112 12:28:24.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.549" endtime="20201112 12:28:24.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.544" endtime="20201112 12:28:24.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:24.946" level="INFO">${RESULT} = [{'time': 0.040554972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.734699999999844e-05, 'source_diff': 7.734699999999844e-05}, {'time': 0.040634972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:24.937" endtime="20201112 12:28:24.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:24.977" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:24.948" endtime="20201112 12:28:24.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.988" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:28:24.986" endtime="20201112 12:28:24.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.994" level="INFO">VALUE: [7.734699999999844e-05, 7.734699999999844e-05, 7.79719999999956e-05, 7.804200000000039e-05, 7.722200000000179e-05, 7.750000000000118e-05, 7.736099999999801e-05, 7.727800000000007e-05, 7.813900000000484e-05, 7.744500000000237e-05, 7.798600000000211e-05, 7.770800000000272e-05, 7.784699999999894e-05, 7.742999999999639e-05, 7.751400000000075e-05, 7.788899999999765e-05, 7.793099999999636e-05, 7.752800000000032e-05, 7.716700000000298e-05, 7.801400000000125e-05, 7.776399999999406e-05, 7.804200000000039e-05, 7.780500000000024e-05, 7.756899999999955e-05, 7.777800000000057e-05, 7.754100000000042e-05, 7.75690000000065e-05, 7.784699999999894e-05, 7.75839999999986e-05, 7.793099999999636e-05, 7.791700000000373e-05, 7.81389999999979e-05, 7.784699999999894e-05, 7.776399999999406e-05, 7.805500000000049e-05, 7.729199999999964e-05, 7.804200000000039e-05, 7.809800000000561e-05, 7.806999999999953e-05, 7.767999999999664e-05, 7.747200000000204e-05, 7.743000000000333e-05, 7.727800000000007e-05, 7.790300000000416e-05, 7.772200000000229e-05, 7.720800000000222e-05, 7.768099999999611e-05, 7.794500000000287e-05, 7.794499999999593e-05, 7.801400000000125e-05]</msg>
<status status="PASS" starttime="20201112 12:28:24.990" endtime="20201112 12:28:24.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.978" endtime="20201112 12:28:24.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.003" endtime="20201112 12:28:25.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:25.012" endtime="20201112 12:28:25.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.007" endtime="20201112 12:28:25.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.999" endtime="20201112 12:28:25.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.483" endtime="20201112 12:28:25.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.481" endtime="20201112 12:28:25.038"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.062" endtime="20201112 12:28:25.083"></status>
</kw>
<msg timestamp="20201112 12:28:25.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:25.058" endtime="20201112 12:28:25.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:25.086" endtime="20201112 12:28:25.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.093" endtime="20201112 12:28:25.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.051" endtime="20201112 12:28:25.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.045" endtime="20201112 12:28:25.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.116" endtime="20201112 12:28:25.457"></status>
</kw>
<msg timestamp="20201112 12:28:25.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043001403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043079639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.113" endtime="20201112 12:28:25.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043001403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043079639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.467" endtime="20201112 12:28:25.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.485" endtime="20201112 12:28:25.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.106" endtime="20201112 12:28:25.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.101" endtime="20201112 12:28:25.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.507" level="INFO">${RESULT} = [{'time': 0.043079639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.823600000000236e-05, 'source_diff': 7.823600000000236e-05}, {'time': 0.043162653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:25.498" endtime="20201112 12:28:25.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:25.538" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:25.509" endtime="20201112 12:28:25.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.549" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:28:25.547" endtime="20201112 12:28:25.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.554" level="INFO">VALUE: [7.823600000000236e-05, 7.880600000000071e-05, 7.888899999999865e-05, 7.862499999999883e-05, 7.884799999999942e-05, 7.873600000000286e-05, 7.898599999999617e-05, 7.862499999999883e-05, 7.836099999999901e-05, 7.856900000000056e-05, 7.862499999999883e-05, 7.901400000000225e-05, 7.887500000000602e-05, 7.912499999999933e-05, 7.905600000000096e-05, 7.879200000000114e-05, 7.912499999999933e-05, 7.862499999999883e-05, 7.834699999999944e-05, 7.818000000000408e-05, 7.89719999999966e-05, 7.845800000000347e-05, 7.841599999999782e-05, 7.898600000000311e-05, 7.905499999999455e-05, 7.845900000000294e-05, 7.90970000000002e-05, 7.890299999999822e-05, 7.908300000000063e-05, 7.851400000000175e-05, 7.88890000000056e-05, 7.855600000000046e-05, 7.872199999999635e-05, 7.893000000000483e-05, 7.836099999999901e-05, 7.841600000000476e-05, 7.827800000000107e-05, 7.922199999999685e-05, 7.883300000000037e-05, 7.870799999999678e-05, 7.870800000000372e-05, 7.873599999999592e-05, 7.905600000000096e-05, 7.888899999999865e-05, 7.836099999999901e-05, 7.906900000000106e-05, 7.838799999999868e-05, 7.841599999999782e-05, 7.90970000000002e-05, 7.884699999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:28:25.551" endtime="20201112 12:28:25.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.540" endtime="20201112 12:28:25.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.564" endtime="20201112 12:28:25.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:25.573" endtime="20201112 12:28:25.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.568" endtime="20201112 12:28:25.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.560" endtime="20201112 12:28:25.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.040" endtime="20201112 12:28:25.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.039" endtime="20201112 12:28:25.599"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.622" endtime="20201112 12:28:25.644"></status>
</kw>
<msg timestamp="20201112 12:28:25.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:25.619" endtime="20201112 12:28:25.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:25.647" endtime="20201112 12:28:25.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.654" endtime="20201112 12:28:25.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.611" endtime="20201112 12:28:25.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.605" endtime="20201112 12:28:25.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.678" endtime="20201112 12:28:26.020"></status>
</kw>
<msg timestamp="20201112 12:28:26.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043304375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043383625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.674" endtime="20201112 12:28:26.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043304375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043383625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.029" endtime="20201112 12:28:26.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.048" endtime="20201112 12:28:26.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.667" endtime="20201112 12:28:26.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.662" endtime="20201112 12:28:26.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:26.068" level="INFO">${RESULT} = [{'time': 0.043383625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.925000000000293e-05, 'source_diff': 7.925000000000293e-05}, {'time': 0.043470625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:26.058" endtime="20201112 12:28:26.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:26.098" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:26.070" endtime="20201112 12:28:26.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.110" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:28:26.107" endtime="20201112 12:28:26.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.115" level="INFO">VALUE: [7.925000000000293e-05, 7.99719999999976e-05, 7.980600000000171e-05, 7.932000000000078e-05, 7.95970000000007e-05, 7.988899999999965e-05, 7.955500000000199e-05, 7.929200000000164e-05, 7.956899999999462e-05, 7.944399999999796e-05, 7.948599999999667e-05, 7.936100000000001e-05, 7.933300000000088e-05, 7.99719999999976e-05, 8.01389999999999e-05, 7.975000000000343e-05, 7.952700000000285e-05, 7.951399999999581e-05, 7.987500000000008e-05, 8.012500000000033e-05, 7.967999999999864e-05, 7.938799999999968e-05, 7.979100000000267e-05, 7.922200000000379e-05, 7.951399999999581e-05, 7.99719999999976e-05, 7.956999999999409e-05, 7.99310000000053e-05, 8.004200000000239e-05, 7.932000000000078e-05, 8.015299999999947e-05, 7.929200000000164e-05, 7.970900000000419e-05, 7.984800000000042e-05, 7.983400000000085e-05, 8.005500000000249e-05, 7.980500000000224e-05, 7.948599999999667e-05, 7.998599999999717e-05, 8.012500000000033e-05, 8.01389999999999e-05, 7.916700000000498e-05, 7.938899999999915e-05, 7.966699999999854e-05, 7.970900000000419e-05, 7.933400000000035e-05, 8.00840000000011e-05, 8.012500000000033e-05, 7.93190000000013e-05, 7.992999999999889e-05]</msg>
<status status="PASS" starttime="20201112 12:28:26.112" endtime="20201112 12:28:26.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.100" endtime="20201112 12:28:26.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.125" endtime="20201112 12:28:26.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:26.133" endtime="20201112 12:28:26.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.129" endtime="20201112 12:28:26.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.120" endtime="20201112 12:28:26.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.601" endtime="20201112 12:28:26.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.600" endtime="20201112 12:28:26.159"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.183" endtime="20201112 12:28:26.205"></status>
</kw>
<msg timestamp="20201112 12:28:26.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:26.179" endtime="20201112 12:28:26.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:26.209" endtime="20201112 12:28:26.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.215" endtime="20201112 12:28:26.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.172" endtime="20201112 12:28:26.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.166" endtime="20201112 12:28:26.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.239" endtime="20201112 12:28:26.578"></status>
</kw>
<msg timestamp="20201112 12:28:26.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043134917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.236" endtime="20201112 12:28:26.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043134917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.588" endtime="20201112 12:28:26.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.607" endtime="20201112 12:28:26.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.228" endtime="20201112 12:28:26.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.224" endtime="20201112 12:28:26.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:26.626" level="INFO">${RESULT} = [{'time': 0.043134917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.105600000000296e-05, 'source_diff': 8.105600000000296e-05}, {'time': 0.043223944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:26.617" endtime="20201112 12:28:26.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:26.657" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:26.628" endtime="20201112 12:28:26.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.668" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:28:26.666" endtime="20201112 12:28:26.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.673" level="INFO">VALUE: [8.105600000000296e-05, 8.1152000000001e-05, 8.076299999999759e-05, 8.066600000000007e-05, 8.111100000000177e-05, 8.025000000000393e-05, 8.112500000000133e-05, 8.026399999999656e-05, 8.032000000000178e-05, 8.109699999999526e-05, 8.02919999999957e-05, 8.086100000000151e-05, 8.087500000000108e-05, 8.072199999999835e-05, 8.088800000000118e-05, 8.109699999999526e-05, 8.10970000000022e-05, 8.101400000000425e-05, 8.052800000000332e-05, 8.019399999999871e-05, 8.025000000000393e-05, 8.059699999999476e-05, 8.018099999999861e-05, 8.065299999999997e-05, 8.093099999999936e-05, 8.0458999999998e-05, 8.02640000000035e-05, 8.088800000000118e-05, 8.047200000000504e-05, 8.038900000000015e-05, 8.037500000000058e-05, 8.02640000000035e-05, 8.079200000000314e-05, 8.054200000000289e-05, 8.06390000000004e-05, 8.07919999999962e-05, 8.108300000000263e-05, 8.069499999999868e-05, 8.045799999999853e-05, 8.102800000000382e-05, 8.083299999999544e-05, 8.088900000000065e-05, 8.111099999999483e-05, 8.086100000000151e-05, 8.101400000000425e-05, 8.069499999999868e-05, 8.106900000000306e-05, 8.101400000000425e-05, 8.062500000000083e-05, 8.032000000000178e-05]</msg>
<status status="PASS" starttime="20201112 12:28:26.670" endtime="20201112 12:28:26.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.659" endtime="20201112 12:28:26.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.683" endtime="20201112 12:28:26.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:26.692" endtime="20201112 12:28:26.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.687" endtime="20201112 12:28:26.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.678" endtime="20201112 12:28:26.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.162" endtime="20201112 12:28:26.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.160" endtime="20201112 12:28:26.718"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.741" endtime="20201112 12:28:26.762"></status>
</kw>
<msg timestamp="20201112 12:28:26.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:26.738" endtime="20201112 12:28:26.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:26.766" endtime="20201112 12:28:26.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.772" endtime="20201112 12:28:26.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.730" endtime="20201112 12:28:26.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.724" endtime="20201112 12:28:26.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.796" endtime="20201112 12:28:27.138"></status>
</kw>
<msg timestamp="20201112 12:28:27.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042902681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042984653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.793" endtime="20201112 12:28:27.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042902681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042984653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.147" endtime="20201112 12:28:27.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.166" endtime="20201112 12:28:27.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.785" endtime="20201112 12:28:27.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.781" endtime="20201112 12:28:27.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:27.186" level="INFO">${RESULT} = [{'time': 0.042984653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.19719999999996e-05, 'source_diff': 8.19719999999996e-05}, {'time': 0.043080681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:27.177" endtime="20201112 12:28:27.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:27.216" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:27.188" endtime="20201112 12:28:27.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.227" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:28:27.225" endtime="20201112 12:28:27.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.233" level="INFO">VALUE: [8.19719999999996e-05, 8.148700000000508e-05, 8.186200000000199e-05, 8.184800000000242e-05, 8.1846999999996e-05, 8.161100000000227e-05, 8.149999999999824e-05, 8.154099999999748e-05, 8.122199999999885e-05, 8.182000000000328e-05, 8.154199999999695e-05, 8.188900000000165e-05, 8.180600000000371e-05, 8.208399999999616e-05, 8.19170000000008e-05, 8.187499999999515e-05, 8.168000000000064e-05, 8.212500000000234e-05, 8.126399999999756e-05, 8.176399999999806e-05, 8.218100000000061e-05, 8.15970000000027e-05, 8.198599999999917e-05, 8.133299999999594e-05, 8.126399999999756e-05, 8.19589999999995e-05, 8.154200000000389e-05, 8.132000000000278e-05, 8.150000000000518e-05, 8.212500000000234e-05, 8.154099999999748e-05, 8.199999999999874e-05, 8.150000000000518e-05, 8.145799999999953e-05, 8.145799999999953e-05, 8.201399999999831e-05, 8.19719999999996e-05, 8.124999999999799e-05, 8.13469999999955e-05, 8.197299999999907e-05, 8.148599999999867e-05, 8.208300000000363e-05, 8.14719999999991e-05, 8.208300000000363e-05, 8.175000000000543e-05, 8.172200000000629e-05, 8.193000000000089e-05, 8.194400000000046e-05, 8.126399999999756e-05, 8.177800000000457e-05]</msg>
<status status="PASS" starttime="20201112 12:28:27.230" endtime="20201112 12:28:27.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.218" endtime="20201112 12:28:27.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.243" endtime="20201112 12:28:27.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:27.251" endtime="20201112 12:28:27.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.247" endtime="20201112 12:28:27.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.238" endtime="20201112 12:28:27.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.720" endtime="20201112 12:28:27.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.719" endtime="20201112 12:28:27.277"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.301" endtime="20201112 12:28:27.323"></status>
</kw>
<msg timestamp="20201112 12:28:27.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:27.297" endtime="20201112 12:28:27.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:27.326" endtime="20201112 12:28:27.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.332" endtime="20201112 12:28:27.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.290" endtime="20201112 12:28:27.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.284" endtime="20201112 12:28:27.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.356" endtime="20201112 12:28:27.695"></status>
</kw>
<msg timestamp="20201112 12:28:27.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043175375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043258486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.353" endtime="20201112 12:28:27.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043175375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043258486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.704" endtime="20201112 12:28:27.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.720" endtime="20201112 12:28:27.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.346" endtime="20201112 12:28:27.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.341" endtime="20201112 12:28:27.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:27.730" level="INFO">${RESULT} = [{'time': 0.043258486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.311099999999683e-05, 'source_diff': 8.311099999999683e-05}, {'time': 0.0433515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:27.726" endtime="20201112 12:28:27.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:27.743" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:27.731" endtime="20201112 12:28:27.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.749" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:28:27.748" endtime="20201112 12:28:27.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.751" level="INFO">VALUE: [8.311099999999683e-05, 8.222199999999985e-05, 8.305600000000496e-05, 8.295800000000103e-05, 8.286099999999658e-05, 8.299999999999974e-05, 8.216700000000104e-05, 8.255599999999752e-05, 8.286100000000352e-05, 8.233299999999694e-05, 8.234700000000345e-05, 8.313899999999597e-05, 8.280500000000524e-05, 8.270800000000078e-05, 8.238900000000215e-05, 8.23469999999965e-05, 8.240300000000172e-05, 8.226399999999856e-05, 8.269500000000068e-05, 8.258399999999666e-05, 8.283299999999744e-05, 8.230500000000474e-05, 8.284700000000395e-05, 8.273599999999992e-05, 8.302799999999888e-05, 8.240300000000172e-05, 8.248600000000661e-05, 8.299999999999974e-05, 8.245800000000053e-05, 8.293100000000136e-05, 8.262500000000284e-05, 8.29590000000005e-05, 8.216700000000104e-05, 8.255499999999805e-05, 8.304099999999898e-05, 8.305500000000549e-05, 8.227799999999813e-05, 8.274999999999949e-05, 8.305599999999802e-05, 8.27919999999982e-05, 8.230599999999727e-05, 8.240300000000172e-05, 8.286099999999658e-05, 8.259800000000317e-05, 8.233400000000335e-05, 8.30840000000041e-05, 8.226299999999909e-05, 8.268000000000164e-05, 8.281899999999787e-05, 8.226399999999856e-05]</msg>
<status status="PASS" starttime="20201112 12:28:27.750" endtime="20201112 12:28:27.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.744" endtime="20201112 12:28:27.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.756" endtime="20201112 12:28:27.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:27.760" endtime="20201112 12:28:27.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.758" endtime="20201112 12:28:27.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.754" endtime="20201112 12:28:27.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.280" endtime="20201112 12:28:27.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.278" endtime="20201112 12:28:27.782"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.792" endtime="20201112 12:28:27.812"></status>
</kw>
<msg timestamp="20201112 12:28:27.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:27.791" endtime="20201112 12:28:27.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:27.814" endtime="20201112 12:28:27.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.817" endtime="20201112 12:28:27.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.787" endtime="20201112 12:28:27.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.785" endtime="20201112 12:28:27.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.828" endtime="20201112 12:28:28.114"></status>
</kw>
<msg timestamp="20201112 12:28:28.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02507975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025163264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:27.826" endtime="20201112 12:28:28.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02507975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025163264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:28.118" endtime="20201112 12:28:28.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.127" endtime="20201112 12:28:28.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.823" endtime="20201112 12:28:28.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.821" endtime="20201112 12:28:28.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.136" level="INFO">${RESULT} = [{'time': 0.025163264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.351399999999981e-05, 'source_diff': 8.351399999999981e-05}, {'time': 0.02525825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:28:28.132" endtime="20201112 12:28:28.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:28.149" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:28.137" endtime="20201112 12:28:28.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.155" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:28:28.153" endtime="20201112 12:28:28.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.157" level="INFO">VALUE: [8.351399999999981e-05, 8.309700000000073e-05, 8.413900000000044e-05, 8.355599999999852e-05, 8.388900000000019e-05, 8.384800000000095e-05, 8.394499999999847e-05, 8.404199999999945e-05, 8.362500000000037e-05, 8.38330000000019e-05, 8.387499999999715e-05, 8.386100000000105e-05, 8.405499999999955e-05, 8.376400000000006e-05, 8.412500000000087e-05, 8.355599999999852e-05, 8.404200000000292e-05, 8.366700000000254e-05, 8.338899999999969e-05, 8.388900000000019e-05, 8.370899999999779e-05, 8.409700000000173e-05, 8.369399999999874e-05, 8.345799999999806e-05, 8.326399999999956e-05, 8.376400000000006e-05, 8.376400000000006e-05, 8.390200000000028e-05, 8.39309999999989e-05, 8.39309999999989e-05, 8.366700000000254e-05, 8.405599999999902e-05, 8.367999999999917e-05, 8.333400000000088e-05, 8.387500000000062e-05, 8.358299999999819e-05, 8.404099999999998e-05, 8.400000000000074e-05, 8.362500000000037e-05, 8.376400000000006e-05, 8.392999999999942e-05, 8.413900000000044e-05, 8.320900000000075e-05, 8.337500000000012e-05, 8.320900000000075e-05, 8.386100000000105e-05, 8.402700000000041e-05, 8.362500000000037e-05, 8.324999999999999e-05, 8.355499999999905e-05]</msg>
<status status="PASS" starttime="20201112 12:28:28.156" endtime="20201112 12:28:28.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.150" endtime="20201112 12:28:28.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.162" endtime="20201112 12:28:28.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:28.166" endtime="20201112 12:28:28.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.164" endtime="20201112 12:28:28.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.160" endtime="20201112 12:28:28.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.783" endtime="20201112 12:28:28.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.782" endtime="20201112 12:28:28.187"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.198" endtime="20201112 12:28:28.216"></status>
</kw>
<msg timestamp="20201112 12:28:28.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:28.197" endtime="20201112 12:28:28.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:28.218" endtime="20201112 12:28:28.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.221" endtime="20201112 12:28:28.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.193" endtime="20201112 12:28:28.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.190" endtime="20201112 12:28:28.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.232" endtime="20201112 12:28:28.518"></status>
</kw>
<msg timestamp="20201112 12:28:28.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025134458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.231" endtime="20201112 12:28:28.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025134458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.523" endtime="20201112 12:28:28.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.540" endtime="20201112 12:28:28.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.227" endtime="20201112 12:28:28.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.225" endtime="20201112 12:28:28.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.560" level="INFO">${RESULT} = [{'time': 0.025134458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.513899999999797e-05, 'source_diff': 8.513899999999797e-05}, {'time': 0.025233444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:28.551" endtime="20201112 12:28:28.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:28.590" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:28.562" endtime="20201112 12:28:28.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.602" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:28:28.599" endtime="20201112 12:28:28.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.607" level="INFO">VALUE: [8.513899999999797e-05, 8.508299999999969e-05, 8.423600000000142e-05, 8.465199999999756e-05, 8.498600000000217e-05, 8.490300000000076e-05, 8.462500000000137e-05, 8.42919999999997e-05, 8.430599999999927e-05, 8.438900000000069e-05, 8.46249999999979e-05, 8.463900000000094e-05, 8.518000000000067e-05, 8.420900000000175e-05, 8.417999999999967e-05, 8.451399999999734e-05, 8.44859999999982e-05, 8.512500000000187e-05, 8.469399999999974e-05, 8.505600000000002e-05, 8.42919999999997e-05, 8.481999999999934e-05, 8.470900000000225e-05, 8.504200000000045e-05, 8.449999999999777e-05, 8.466700000000008e-05, 8.417999999999967e-05, 8.459700000000223e-05, 8.425000000000099e-05, 8.493000000000042e-05, 8.486099999999858e-05, 8.436100000000155e-05, 8.469399999999974e-05, 8.432000000000231e-05, 8.476400000000106e-05, 8.45980000000017e-05, 8.486199999999805e-05, 8.513899999999797e-05, 8.440300000000026e-05, 8.41660000000001e-05, 8.455500000000005e-05, 8.474999999999802e-05, 8.502800000000088e-05, 8.475000000000149e-05, 8.476400000000106e-05, 8.508300000000316e-05, 8.468099999999965e-05, 8.448600000000167e-05, 8.495899999999904e-05, 8.505600000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:28:28.604" endtime="20201112 12:28:28.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.592" endtime="20201112 12:28:28.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.617" endtime="20201112 12:28:28.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:28.626" endtime="20201112 12:28:28.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.621" endtime="20201112 12:28:28.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.612" endtime="20201112 12:28:28.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.188" endtime="20201112 12:28:28.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.188" endtime="20201112 12:28:28.652"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.675" endtime="20201112 12:28:28.697"></status>
</kw>
<msg timestamp="20201112 12:28:28.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:28.671" endtime="20201112 12:28:28.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:28.700" endtime="20201112 12:28:28.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.707" endtime="20201112 12:28:28.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.664" endtime="20201112 12:28:28.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.658" endtime="20201112 12:28:28.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.731" endtime="20201112 12:28:29.070"></status>
</kw>
<msg timestamp="20201112 12:28:29.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042735375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042821417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.727" endtime="20201112 12:28:29.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042735375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042821417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:29.080" endtime="20201112 12:28:29.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.099" endtime="20201112 12:28:29.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.720" endtime="20201112 12:28:29.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.715" endtime="20201112 12:28:29.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:29.118" level="INFO">${RESULT} = [{'time': 0.042821417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.604200000000145e-05, 'source_diff': 8.604200000000145e-05}, {'time': 0.042922403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:29.109" endtime="20201112 12:28:29.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:29.149" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:29.120" endtime="20201112 12:28:29.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.160" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:28:29.158" endtime="20201112 12:28:29.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.166" level="INFO">VALUE: [8.604200000000145e-05, 8.583399999999991e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.537500000000559e-05, 8.5847e-05, 8.59720000000036e-05, 8.5847e-05, 8.526400000000156e-05, 8.590299999999829e-05, 8.518099999999668e-05, 8.541699999999736e-05, 8.604200000000145e-05, 8.570900000000325e-05, 8.587500000000609e-05, 8.555600000000052e-05, 8.595899999999657e-05, 8.58050000000013e-05, 8.537499999999865e-05, 8.559699999999976e-05, 8.586099999999958e-05, 8.540300000000473e-05, 8.577800000000163e-05, 8.559699999999976e-05, 8.61249999999994e-05, 8.522199999999591e-05, 8.566700000000455e-05, 8.555600000000052e-05, 8.550000000000224e-05, 8.586099999999958e-05, 8.53050000000008e-05, 8.536100000000602e-05, 8.61249999999994e-05, 8.613899999999897e-05, 8.576400000000206e-05, 8.61249999999994e-05, 8.53469999999995e-05, 8.608400000000016e-05, 8.584799999999948e-05, 8.516700000000405e-05, 8.576400000000206e-05, 8.591599999999838e-05, 8.522199999999591e-05, 8.554100000000148e-05, 8.522200000000285e-05, 8.527800000000113e-05, 8.576400000000206e-05, 8.537499999999865e-05, 8.607000000000059e-05, 8.59170000000048e-05]</msg>
<status status="PASS" starttime="20201112 12:28:29.162" endtime="20201112 12:28:29.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.151" endtime="20201112 12:28:29.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.179" endtime="20201112 12:28:29.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:29.188" endtime="20201112 12:28:29.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.183" endtime="20201112 12:28:29.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.174" endtime="20201112 12:28:29.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.654" endtime="20201112 12:28:29.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.653" endtime="20201112 12:28:29.214"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.237" endtime="20201112 12:28:29.259"></status>
</kw>
<msg timestamp="20201112 12:28:29.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:29.234" endtime="20201112 12:28:29.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:29.263" endtime="20201112 12:28:29.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.269" endtime="20201112 12:28:29.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.226" endtime="20201112 12:28:29.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.220" endtime="20201112 12:28:29.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.293" endtime="20201112 12:28:29.633"></status>
</kw>
<msg timestamp="20201112 12:28:29.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042983958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043070056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:29.289" endtime="20201112 12:28:29.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042983958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043070056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:29.643" endtime="20201112 12:28:29.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.662" endtime="20201112 12:28:29.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.282" endtime="20201112 12:28:29.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.277" endtime="20201112 12:28:29.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:29.684" level="INFO">${RESULT} = [{'time': 0.043070056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.609799999999973e-05, 'source_diff': 8.609799999999973e-05}, {'time': 0.043164083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:29.674" endtime="20201112 12:28:29.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:29.714" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:29.686" endtime="20201112 12:28:29.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.725" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:28:29.723" endtime="20201112 12:28:29.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.731" level="INFO">VALUE: [8.609799999999973e-05, 8.697199999999766e-05, 8.676400000000306e-05, 8.619400000000471e-05, 8.654099999999554e-05, 8.683300000000144e-05, 8.674999999999655e-05, 8.619499999999725e-05, 8.622199999999691e-05, 8.633400000000041e-05, 8.645899999999707e-05, 8.683400000000091e-05, 8.697199999999766e-05, 8.702700000000341e-05, 8.690299999999929e-05, 8.651400000000281e-05, 8.665299999999904e-05, 8.71250000000004e-05, 8.691699999999886e-05, 8.71250000000004e-05, 8.668099999999818e-05, 8.625000000000299e-05, 8.713899999999997e-05, 8.683400000000091e-05, 8.67920000000022e-05, 8.626400000000256e-05, 8.71250000000004e-05, 8.640200000000625e-05, 8.637499999999965e-05, 8.663899999999947e-05, 8.668099999999818e-05, 8.626400000000256e-05, 8.654200000000195e-05, 8.683400000000091e-05, 8.626400000000256e-05, 8.624999999999605e-05, 8.673600000000392e-05, 8.655500000000205e-05, 8.705500000000255e-05, 8.644399999999802e-05, 8.672200000000435e-05, 8.691699999999886e-05, 8.626399999999562e-05, 8.680599999999483e-05, 8.654200000000195e-05, 8.630600000000127e-05, 8.637499999999965e-05, 8.630600000000127e-05, 8.674999999999655e-05, 8.71250000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:28:29.727" endtime="20201112 12:28:29.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.716" endtime="20201112 12:28:29.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.740" endtime="20201112 12:28:29.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:29.749" endtime="20201112 12:28:29.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.744" endtime="20201112 12:28:29.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.736" endtime="20201112 12:28:29.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.216" endtime="20201112 12:28:29.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.215" endtime="20201112 12:28:29.775"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.798" endtime="20201112 12:28:29.821"></status>
</kw>
<msg timestamp="20201112 12:28:29.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:29.795" endtime="20201112 12:28:29.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:29.824" endtime="20201112 12:28:29.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.830" endtime="20201112 12:28:29.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.787" endtime="20201112 12:28:29.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.782" endtime="20201112 12:28:29.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.854" endtime="20201112 12:28:30.193"></status>
</kw>
<msg timestamp="20201112 12:28:30.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042802, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042889931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:29.851" endtime="20201112 12:28:30.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042802, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042889931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:30.203" endtime="20201112 12:28:30.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.222" endtime="20201112 12:28:30.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.844" endtime="20201112 12:28:30.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.839" endtime="20201112 12:28:30.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.241" level="INFO">${RESULT} = [{'time': 0.042889931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.793099999999943e-05, 'source_diff': 8.793099999999943e-05}, {'time': 0.042992958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:30.232" endtime="20201112 12:28:30.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:30.272" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:30.243" endtime="20201112 12:28:30.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.283" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:28:30.281" endtime="20201112 12:28:30.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.289" level="INFO">VALUE: [8.793099999999943e-05, 8.786099999999464e-05, 8.770799999999884e-05, 8.719400000000571e-05, 8.805500000000355e-05, 8.781899999999593e-05, 8.811100000000183e-05, 8.74170000000063e-05, 8.811100000000183e-05, 8.761100000000133e-05, 8.723699999999696e-05, 8.722300000000432e-05, 8.722299999999739e-05, 8.781899999999593e-05, 8.744399999999902e-05, 8.727700000000366e-05, 8.726400000000356e-05, 8.776400000000406e-05, 8.733300000000194e-05, 8.72920000000027e-05, 8.793099999999943e-05, 8.736100000000108e-05, 8.780600000000277e-05, 8.77920000000032e-05, 8.754199999999601e-05, 8.736100000000108e-05, 8.751399999999687e-05, 8.779100000000373e-05, 8.758299999999525e-05, 8.742999999999945e-05, 8.730600000000227e-05, 8.74999999999973e-05, 8.784700000000201e-05, 8.759700000000176e-05, 8.758300000000219e-05, 8.774999999999755e-05, 8.720899999999782e-05, 8.733300000000194e-05, 8.791600000000038e-05, 8.732000000000184e-05, 8.765300000000004e-05, 8.726400000000356e-05, 8.798599999999823e-05, 8.76669999999996e-05, 8.71669999999991e-05, 8.773600000000492e-05, 8.768099999999918e-05, 8.742999999999945e-05, 8.790200000000081e-05, 8.758300000000219e-05]</msg>
<status status="PASS" starttime="20201112 12:28:30.285" endtime="20201112 12:28:30.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.274" endtime="20201112 12:28:30.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.298" endtime="20201112 12:28:30.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:30.307" endtime="20201112 12:28:30.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.302" endtime="20201112 12:28:30.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.294" endtime="20201112 12:28:30.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.777" endtime="20201112 12:28:30.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.776" endtime="20201112 12:28:30.333"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.356" endtime="20201112 12:28:30.378"></status>
</kw>
<msg timestamp="20201112 12:28:30.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:30.353" endtime="20201112 12:28:30.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:30.382" endtime="20201112 12:28:30.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.388" endtime="20201112 12:28:30.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.345" endtime="20201112 12:28:30.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.339" endtime="20201112 12:28:30.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.412" endtime="20201112 12:28:30.753"></status>
</kw>
<msg timestamp="20201112 12:28:30.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043205403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043293944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.409" endtime="20201112 12:28:30.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043205403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043293944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.762" endtime="20201112 12:28:30.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.781" endtime="20201112 12:28:30.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.402" endtime="20201112 12:28:30.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.397" endtime="20201112 12:28:30.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.801" level="INFO">${RESULT} = [{'time': 0.043293944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.854099999999754e-05, 'source_diff': 8.854099999999754e-05}, {'time': 0.043391944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:30.791" endtime="20201112 12:28:30.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:30.831" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:30.803" endtime="20201112 12:28:30.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.842" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:28:30.840" endtime="20201112 12:28:30.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.848" level="INFO">VALUE: [8.854099999999754e-05, 8.909700000000326e-05, 8.913900000000197e-05, 8.855499999999711e-05, 8.875000000000549e-05, 8.893000000000095e-05, 8.870899999999932e-05, 8.819499999999925e-05, 8.905600000000402e-05, 8.848600000000567e-05, 8.884800000000248e-05, 8.845899999999907e-05, 8.908399999999622e-05, 8.879100000000473e-05, 8.843000000000045e-05, 8.920899999999982e-05, 8.822199999999891e-05, 8.897199999999966e-05, 8.886100000000258e-05, 8.848599999999873e-05, 8.887499999999521e-05, 8.891700000000086e-05, 8.830600000000327e-05, 8.818099999999968e-05, 8.873599999999898e-05, 8.843000000000045e-05, 8.913899999999503e-05, 8.872199999999941e-05, 8.856899999999668e-05, 8.86800000000007e-05, 8.851399999999787e-05, 8.882000000000334e-05, 8.905600000000402e-05, 8.876400000000506e-05, 8.847299999999864e-05, 8.880600000000377e-05, 8.854199999999701e-05, 8.911099999999589e-05, 8.851399999999787e-05, 8.850000000000524e-05, 8.879099999999779e-05, 8.855599999999658e-05, 8.911099999999589e-05, 8.833399999999547e-05, 8.834700000000251e-05, 8.876399999999812e-05, 8.848700000000514e-05, 8.909700000000326e-05, 8.823699999999796e-05, 8.822199999999891e-05]</msg>
<status status="PASS" starttime="20201112 12:28:30.845" endtime="20201112 12:28:30.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.833" endtime="20201112 12:28:30.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.858" endtime="20201112 12:28:30.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:30.866" endtime="20201112 12:28:30.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.862" endtime="20201112 12:28:30.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.853" endtime="20201112 12:28:30.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.335" endtime="20201112 12:28:30.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.334" endtime="20201112 12:28:30.892"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.916" endtime="20201112 12:28:30.937"></status>
</kw>
<msg timestamp="20201112 12:28:30.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:30.912" endtime="20201112 12:28:30.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:30.941" endtime="20201112 12:28:30.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.947" endtime="20201112 12:28:30.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.905" endtime="20201112 12:28:30.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.899" endtime="20201112 12:28:30.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.971" endtime="20201112 12:28:31.312"></status>
</kw>
<msg timestamp="20201112 12:28:31.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04300525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043095361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:30.968" endtime="20201112 12:28:31.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04300525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043095361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:31.321" endtime="20201112 12:28:31.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.340" endtime="20201112 12:28:31.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.961" endtime="20201112 12:28:31.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.956" endtime="20201112 12:28:31.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:31.360" level="INFO">${RESULT} = [{'time': 0.043095361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.011099999999689e-05, 'source_diff': 9.011099999999689e-05}, {'time': 0.043193361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:31.351" endtime="20201112 12:28:31.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:31.390" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:31.362" endtime="20201112 12:28:31.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.401" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:28:31.399" endtime="20201112 12:28:31.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.407" level="INFO">VALUE: [9.011099999999689e-05, 8.929199999999776e-05, 8.974999999999955e-05, 8.923599999999948e-05, 8.995800000000109e-05, 8.93050000000048e-05, 8.923699999999896e-05, 8.938900000000222e-05, 8.972200000000041e-05, 8.984700000000401e-05, 8.93050000000048e-05, 8.938900000000222e-05, 9.004199999999851e-05, 8.9332999999997e-05, 8.936100000000308e-05, 8.94450000000005e-05, 8.920899999999982e-05, 8.998600000000023e-05, 8.980599999999783e-05, 8.944399999999408e-05, 8.984699999999707e-05, 8.916600000000163e-05, 9.001399999999937e-05, 8.969400000000127e-05, 9.001399999999937e-05, 8.943000000000145e-05, 9.002799999999894e-05, 9.012499999999646e-05, 8.986099999999664e-05, 8.969500000000075e-05, 8.945900000000007e-05, 9.002699999999947e-05, 8.941600000000188e-05, 8.994400000000152e-05, 8.997200000000066e-05, 8.929100000000523e-05, 8.986100000000358e-05, 8.926400000000556e-05, 9.004199999999851e-05, 8.9945000000001e-05, 8.984699999999707e-05, 8.991700000000186e-05, 9.01250000000034e-05, 8.955499999999811e-05, 9.013800000000349e-05, 8.986099999999664e-05, 8.923599999999948e-05, 9.004099999999904e-05, 8.984800000000348e-05, 8.96529999999951e-05]</msg>
<status status="PASS" starttime="20201112 12:28:31.404" endtime="20201112 12:28:31.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.392" endtime="20201112 12:28:31.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.417" endtime="20201112 12:28:31.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:31.425" endtime="20201112 12:28:31.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.421" endtime="20201112 12:28:31.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.412" endtime="20201112 12:28:31.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.895" endtime="20201112 12:28:31.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.893" endtime="20201112 12:28:31.451"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.475" endtime="20201112 12:28:31.497"></status>
</kw>
<msg timestamp="20201112 12:28:31.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:31.471" endtime="20201112 12:28:31.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:31.500" endtime="20201112 12:28:31.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.506" endtime="20201112 12:28:31.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.464" endtime="20201112 12:28:31.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.458" endtime="20201112 12:28:31.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.530" endtime="20201112 12:28:31.852"></status>
</kw>
<msg timestamp="20201112 12:28:31.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042803472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042893667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.527" endtime="20201112 12:28:31.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042803472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042893667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.856" endtime="20201112 12:28:31.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.865" endtime="20201112 12:28:31.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.519" endtime="20201112 12:28:31.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.515" endtime="20201112 12:28:31.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:31.875" level="INFO">${RESULT} = [{'time': 0.042893667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.019500000000125e-05, 'source_diff': 9.019500000000125e-05}, {'time': 0.042988681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:31.871" endtime="20201112 12:28:31.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:31.888" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:31.876" endtime="20201112 12:28:31.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.894" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:28:31.893" endtime="20201112 12:28:31.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.896" level="INFO">VALUE: [9.019500000000125e-05, 9.109799999999779e-05, 9.033399999999747e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.0332999999998e-05, 9.093000000000295e-05, 9.025000000000005e-05, 9.105599999999908e-05, 9.023600000000048e-05, 9.072200000000141e-05, 9.095900000000157e-05, 9.097300000000114e-05, 9.087499999999721e-05, 9.051399999999987e-05, 9.020800000000134e-05, 9.073600000000098e-05, 9.034699999999757e-05, 9.086099999999764e-05, 9.048600000000073e-05, 9.065300000000304e-05, 9.068100000000218e-05, 9.102799999999994e-05, 9.055599999999858e-05, 9.090299999999635e-05, 9.091700000000286e-05, 9.036099999999714e-05, 9.026399999999962e-05, 9.097200000000166e-05, 9.027799999999919e-05, 9.086100000000458e-05, 9.113900000000397e-05, 9.054199999999901e-05, 9.075000000000055e-05, 9.044499999999456e-05, 9.029199999999876e-05, 9.06670000000026e-05, 9.066699999999567e-05, 9.109700000000526e-05, 9.082000000000534e-05, 9.116699999999617e-05, 9.034700000000451e-05, 9.091699999999592e-05, 9.091700000000286e-05, 9.019400000000177e-05, 9.027799999999919e-05, 9.072199999999447e-05, 9.032000000000484e-05, 9.109799999999779e-05, 9.029199999999876e-05]</msg>
<status status="PASS" starttime="20201112 12:28:31.895" endtime="20201112 12:28:31.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.889" endtime="20201112 12:28:31.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.901" endtime="20201112 12:28:31.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:31.905" endtime="20201112 12:28:31.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.903" endtime="20201112 12:28:31.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.899" endtime="20201112 12:28:31.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.454" endtime="20201112 12:28:31.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.452" endtime="20201112 12:28:31.926"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.937" endtime="20201112 12:28:31.956"></status>
</kw>
<msg timestamp="20201112 12:28:31.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:31.936" endtime="20201112 12:28:31.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:31.958" endtime="20201112 12:28:31.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.961" endtime="20201112 12:28:31.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.932" endtime="20201112 12:28:31.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.930" endtime="20201112 12:28:31.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.973" endtime="20201112 12:28:32.260"></status>
</kw>
<msg timestamp="20201112 12:28:32.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025268722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025360292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.971" endtime="20201112 12:28:32.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025268722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025360292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.264" endtime="20201112 12:28:32.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.272" endtime="20201112 12:28:32.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.967" endtime="20201112 12:28:32.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.965" endtime="20201112 12:28:32.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:32.282" level="INFO">${RESULT} = [{'time': 0.025360292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.156999999999915e-05, 'source_diff': 9.156999999999915e-05}, {'time': 0.025457319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:32.277" endtime="20201112 12:28:32.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:32.295" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:32.283" endtime="20201112 12:28:32.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.300" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:28:32.299" endtime="20201112 12:28:32.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.303" level="INFO">VALUE: [9.156999999999915e-05, 9.165199999999762e-05, 9.193000000000048e-05, 9.208299999999975e-05, 9.134699999999857e-05, 9.156899999999968e-05, 9.168000000000023e-05, 9.154200000000001e-05, 9.168099999999971e-05, 9.130599999999933e-05, 9.186099999999864e-05, 9.134799999999804e-05, 9.156999999999915e-05, 9.133399999999847e-05, 9.215199999999812e-05, 9.2026999999998e-05, 9.152800000000044e-05, 9.15000000000013e-05, 9.188900000000125e-05, 9.191700000000039e-05, 9.172199999999894e-05, 9.126400000000062e-05, 9.212500000000193e-05, 9.118099999999921e-05, 9.143099999999946e-05, 9.122200000000191e-05, 9.168000000000023e-05, 9.184699999999907e-05, 9.191700000000039e-05, 9.184699999999907e-05, 9.176399999999765e-05, 9.148600000000173e-05, 9.180599999999983e-05, 9.172200000000241e-05, 9.21390000000015e-05, 9.148600000000173e-05, 9.201299999999843e-05, 9.205500000000061e-05, 9.133400000000194e-05, 9.206900000000018e-05, 9.205500000000061e-05, 9.187499999999821e-05, 9.130599999999933e-05, 9.147200000000216e-05, 9.18329999999995e-05, 9.161100000000186e-05, 9.149999999999783e-05, 9.145799999999912e-05, 9.133400000000194e-05, 9.198599999999876e-05]</msg>
<status status="PASS" starttime="20201112 12:28:32.302" endtime="20201112 12:28:32.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.296" endtime="20201112 12:28:32.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.308" endtime="20201112 12:28:32.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:32.312" endtime="20201112 12:28:32.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.310" endtime="20201112 12:28:32.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.306" endtime="20201112 12:28:32.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.928" endtime="20201112 12:28:32.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.927" endtime="20201112 12:28:32.333"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.344" endtime="20201112 12:28:32.363"></status>
</kw>
<msg timestamp="20201112 12:28:32.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:32.343" endtime="20201112 12:28:32.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:32.365" endtime="20201112 12:28:32.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.368" endtime="20201112 12:28:32.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.339" endtime="20201112 12:28:32.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.336" endtime="20201112 12:28:32.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.379" endtime="20201112 12:28:32.664"></status>
</kw>
<msg timestamp="20201112 12:28:32.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025407319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025500264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.378" endtime="20201112 12:28:32.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025407319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025500264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.669" endtime="20201112 12:28:32.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.685" endtime="20201112 12:28:32.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.374" endtime="20201112 12:28:32.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.372" endtime="20201112 12:28:32.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:32.705" level="INFO">${RESULT} = [{'time': 0.025500264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.294500000000053e-05, 'source_diff': 9.294500000000053e-05}, {'time': 0.025602278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:32.695" endtime="20201112 12:28:32.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:32.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:32.707" endtime="20201112 12:28:32.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.746" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:28:32.744" endtime="20201112 12:28:32.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.752" level="INFO">VALUE: [9.294500000000053e-05, 9.288899999999878e-05, 9.262499999999896e-05, 9.280600000000083e-05, 9.218100000000021e-05, 9.268000000000123e-05, 9.277699999999875e-05, 9.257000000000015e-05, 9.281900000000093e-05, 9.294400000000105e-05, 9.265300000000157e-05, 9.255600000000058e-05, 9.304200000000151e-05, 9.29720000000002e-05, 9.304200000000151e-05, 9.290200000000234e-05, 9.245800000000012e-05, 9.277700000000222e-05, 9.305499999999814e-05, 9.286099999999964e-05, 9.304100000000204e-05, 9.241700000000089e-05, 9.226400000000162e-05, 9.230600000000033e-05, 9.233399999999947e-05, 9.244500000000003e-05, 9.308400000000022e-05, 9.276399999999865e-05, 9.231900000000043e-05, 9.295800000000062e-05, 9.280500000000136e-05, 9.280499999999789e-05, 9.287499999999921e-05, 9.30139999999989e-05, 9.2333e-05, 9.295799999999715e-05, 9.287499999999921e-05, 9.313899999999903e-05, 9.218100000000021e-05, 9.215300000000107e-05, 9.227699999999825e-05, 9.254200000000101e-05, 9.218000000000073e-05, 9.279199999999779e-05, 9.270800000000037e-05, 9.269500000000028e-05, 9.291700000000139e-05, 9.28200000000004e-05, 9.276400000000212e-05, 9.287500000000268e-05]</msg>
<status status="PASS" starttime="20201112 12:28:32.749" endtime="20201112 12:28:32.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.737" endtime="20201112 12:28:32.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.762" endtime="20201112 12:28:32.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:32.770" endtime="20201112 12:28:32.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.766" endtime="20201112 12:28:32.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.757" endtime="20201112 12:28:32.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.334" endtime="20201112 12:28:32.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.334" endtime="20201112 12:28:32.796"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.820" endtime="20201112 12:28:32.843"></status>
</kw>
<msg timestamp="20201112 12:28:32.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:32.816" endtime="20201112 12:28:32.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:32.846" endtime="20201112 12:28:32.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.853" endtime="20201112 12:28:32.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.809" endtime="20201112 12:28:32.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.803" endtime="20201112 12:28:32.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.877" endtime="20201112 12:28:33.229"></status>
</kw>
<msg timestamp="20201112 12:28:33.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043227556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043321431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.873" endtime="20201112 12:28:33.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043227556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043321431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.239" endtime="20201112 12:28:33.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.257" endtime="20201112 12:28:33.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.866" endtime="20201112 12:28:33.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.861" endtime="20201112 12:28:33.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.277" level="INFO">${RESULT} = [{'time': 0.043321431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.387500000000021e-05, 'source_diff': 9.387500000000021e-05}, {'time': 0.043419431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:33.268" endtime="20201112 12:28:33.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:33.310" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:33.279" endtime="20201112 12:28:33.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.323" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:28:33.321" endtime="20201112 12:28:33.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.329" level="INFO">VALUE: [9.387500000000021e-05, 9.325000000000305e-05, 9.357000000000115e-05, 9.392999999999901e-05, 9.387500000000021e-05, 9.344400000000502e-05, 9.351400000000287e-05, 9.387500000000021e-05, 9.337499999999971e-05, 9.316699999999817e-05, 9.38200000000014e-05, 9.413900000000003e-05, 9.394399999999858e-05, 9.345900000000407e-05, 9.372200000000441e-05, 9.330500000000186e-05, 9.343099999999799e-05, 9.40000000000038e-05, 9.376400000000312e-05, 9.356999999999421e-05, 9.380600000000183e-05, 9.368099999999824e-05, 9.337499999999971e-05, 9.405600000000208e-05, 9.33879999999998e-05, 9.379099999999585e-05, 9.369399999999833e-05, 9.355500000000211e-05, 9.356900000000168e-05, 9.388899999999978e-05, 9.358400000000072e-05, 9.395799999999815e-05, 9.341699999999842e-05, 9.409700000000132e-05, 9.352800000000244e-05, 9.355600000000158e-05, 9.411200000000036e-05, 9.386100000000064e-05, 9.367999999999876e-05, 9.356900000000168e-05, 9.363899999999953e-05, 9.327800000000219e-05, 9.347199999999722e-05, 9.329200000000176e-05, 9.404199999999557e-05, 9.326400000000262e-05, 9.405599999999514e-05, 9.365199999999962e-05, 9.333299999999406e-05, 9.411100000000089e-05]</msg>
<status status="PASS" starttime="20201112 12:28:33.326" endtime="20201112 12:28:33.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.312" endtime="20201112 12:28:33.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.338" endtime="20201112 12:28:33.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:33.347" endtime="20201112 12:28:33.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.343" endtime="20201112 12:28:33.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.334" endtime="20201112 12:28:33.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.798" endtime="20201112 12:28:33.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.797" endtime="20201112 12:28:33.373"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.399" endtime="20201112 12:28:33.422"></status>
</kw>
<msg timestamp="20201112 12:28:33.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:33.395" endtime="20201112 12:28:33.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:33.425" endtime="20201112 12:28:33.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.432" endtime="20201112 12:28:33.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.388" endtime="20201112 12:28:33.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.382" endtime="20201112 12:28:33.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.456" endtime="20201112 12:28:33.795"></status>
</kw>
<msg timestamp="20201112 12:28:33.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045170472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045264792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.452" endtime="20201112 12:28:33.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045170472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045264792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.804" endtime="20201112 12:28:33.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.823" endtime="20201112 12:28:33.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.445" endtime="20201112 12:28:33.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.440" endtime="20201112 12:28:33.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.844" level="INFO">${RESULT} = [{'time': 0.045264792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.431999999999496e-05, 'source_diff': 9.431999999999496e-05}, {'time': 0.045373792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:33.835" endtime="20201112 12:28:33.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:33.874" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:33.846" endtime="20201112 12:28:33.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.885" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:28:33.882" endtime="20201112 12:28:33.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.890" level="INFO">VALUE: [9.431999999999496e-05, 9.423600000000448e-05, 9.469499999999881e-05, 9.438900000000028e-05, 9.494399999999958e-05, 9.422199999999797e-05, 9.495799999999915e-05, 9.447200000000516e-05, 9.472299999999795e-05, 9.488900000000078e-05, 9.473600000000498e-05, 9.433400000000147e-05, 9.476399999999718e-05, 9.470899999999838e-05, 9.484699999999513e-05, 9.436100000000114e-05, 9.487500000000121e-05, 9.46800000000067e-05, 9.461100000000139e-05, 9.437500000000071e-05, 9.443099999999899e-05, 9.505599999999614e-05, 9.474999999999761e-05, 9.425000000000405e-05, 9.433400000000147e-05, 9.472299999999795e-05, 9.509700000000232e-05, 9.511100000000189e-05, 9.41659999999997e-05, 9.440299999999985e-05, 9.506900000000318e-05, 9.41529999999996e-05, 9.413900000000003e-05, 9.45000000000043e-05, 9.488900000000078e-05, 9.474999999999761e-05, 9.509800000000179e-05, 9.422200000000491e-05, 9.445799999999865e-05, 9.430499999999592e-05, 9.459700000000182e-05, 9.426400000000362e-05, 9.497199999999872e-05, 9.48330000000025e-05, 9.509700000000232e-05, 9.495899999999863e-05, 9.509800000000179e-05, 9.434800000000104e-05, 9.495899999999863e-05, 9.505500000000361e-05]</msg>
<status status="PASS" starttime="20201112 12:28:33.887" endtime="20201112 12:28:33.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.875" endtime="20201112 12:28:33.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.900" endtime="20201112 12:28:33.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:33.908" endtime="20201112 12:28:33.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.904" endtime="20201112 12:28:33.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.895" endtime="20201112 12:28:33.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.376" endtime="20201112 12:28:33.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.374" endtime="20201112 12:28:33.934"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.957" endtime="20201112 12:28:33.979"></status>
</kw>
<msg timestamp="20201112 12:28:33.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:33.953" endtime="20201112 12:28:33.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:33.982" endtime="20201112 12:28:33.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.989" endtime="20201112 12:28:33.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.946" endtime="20201112 12:28:33.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.940" endtime="20201112 12:28:33.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.013" endtime="20201112 12:28:34.349"></status>
</kw>
<msg timestamp="20201112 12:28:34.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042321806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042417958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.009" endtime="20201112 12:28:34.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042321806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042417958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.358" endtime="20201112 12:28:34.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.377" endtime="20201112 12:28:34.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.002" endtime="20201112 12:28:34.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.997" endtime="20201112 12:28:34.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:34.396" level="INFO">${RESULT} = [{'time': 0.042417958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.615200000000212e-05, 'source_diff': 9.615200000000212e-05}, {'time': 0.042528972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:34.387" endtime="20201112 12:28:34.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:34.426" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:34.398" endtime="20201112 12:28:34.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.438" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:28:34.435" endtime="20201112 12:28:34.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.443" level="INFO">VALUE: [9.615200000000212e-05, 9.608299999999681e-05, 9.543000000000051e-05, 9.558299999999631e-05, 9.545799999999965e-05, 9.572199999999947e-05, 9.611099999999595e-05, 9.594500000000006e-05, 9.524999999999811e-05, 9.572199999999947e-05, 9.58200000000034e-05, 9.599999999999886e-05, 9.597199999999972e-05, 9.595800000000015e-05, 9.544400000000008e-05, 9.597199999999972e-05, 9.526399999999768e-05, 9.556899999999674e-05, 9.58059999999969e-05, 9.529199999999682e-05, 9.516700000000017e-05, 9.565299999999416e-05, 9.593100000000049e-05, 9.56530000000011e-05, 9.608400000000322e-05, 9.555499999999717e-05, 9.555499999999717e-05, 9.593000000000101e-05, 9.548600000000573e-05, 9.519399999999983e-05, 9.551400000000487e-05, 9.583399999999603e-05, 9.520899999999888e-05, 9.56660000000012e-05, 9.54729999999987e-05, 9.556900000000368e-05, 9.563899999999459e-05, 9.61530000000016e-05, 9.59729999999992e-05, 9.526399999999768e-05, 9.59859999999993e-05, 9.551400000000487e-05, 9.579199999999732e-05, 9.570899999999938e-05, 9.58200000000034e-05, 9.556899999999674e-05, 9.54859999999988e-05, 9.534700000000257e-05, 9.599999999999886e-05, 9.558299999999631e-05]</msg>
<status status="PASS" starttime="20201112 12:28:34.440" endtime="20201112 12:28:34.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.428" endtime="20201112 12:28:34.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.457" endtime="20201112 12:28:34.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:34.466" endtime="20201112 12:28:34.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.461" endtime="20201112 12:28:34.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.453" endtime="20201112 12:28:34.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.936" endtime="20201112 12:28:34.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.935" endtime="20201112 12:28:34.492"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.514" endtime="20201112 12:28:34.537"></status>
</kw>
<msg timestamp="20201112 12:28:34.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:34.511" endtime="20201112 12:28:34.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:34.541" endtime="20201112 12:28:34.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.547" endtime="20201112 12:28:34.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.504" endtime="20201112 12:28:34.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.498" endtime="20201112 12:28:34.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.570" endtime="20201112 12:28:34.905"></status>
</kw>
<msg timestamp="20201112 12:28:34.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042373889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042470444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.567" endtime="20201112 12:28:34.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042373889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042470444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.915" endtime="20201112 12:28:34.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.934" endtime="20201112 12:28:34.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.560" endtime="20201112 12:28:34.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.555" endtime="20201112 12:28:34.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:34.953" level="INFO">${RESULT} = [{'time': 0.042470444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.655500000000511e-05, 'source_diff': 9.655500000000511e-05}, {'time': 0.042574458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:34.944" endtime="20201112 12:28:34.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:34.983" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:34.955" endtime="20201112 12:28:34.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.994" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:28:34.992" endtime="20201112 12:28:34.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.999" level="INFO">VALUE: [9.655500000000511e-05, 9.654100000000554e-05, 9.694400000000158e-05, 9.713900000000303e-05, 9.708300000000475e-05, 9.644400000000108e-05, 9.633299999999706e-05, 9.679199999999832e-05, 9.713899999999609e-05, 9.673600000000004e-05, 9.697200000000072e-05, 9.67080000000009e-05, 9.68330000000045e-05, 9.715299999999566e-05, 9.63059999999974e-05, 9.668100000000124e-05, 9.622199999999997e-05, 9.674999999999961e-05, 9.623599999999954e-05, 9.693100000000149e-05, 9.693099999999455e-05, 9.684700000000407e-05, 9.702699999999953e-05, 9.654199999999807e-05, 9.687500000000321e-05, 9.623599999999954e-05, 9.697200000000072e-05, 9.662499999999602e-05, 9.708400000000422e-05, 9.655600000000458e-05, 9.698699999999977e-05, 9.701399999999943e-05, 9.711199999999642e-05, 9.626299999999921e-05, 9.688900000000278e-05, 9.65409999999986e-05, 9.705600000000508e-05, 9.662500000000296e-05, 9.693099999999455e-05, 9.666700000000167e-05, 9.643100000000099e-05, 9.618100000000074e-05, 9.643100000000099e-05, 9.683400000000397e-05, 9.68880000000033e-05, 9.677800000000569e-05, 9.708299999999781e-05, 9.693000000000201e-05, 9.658299999999731e-05, 9.623599999999954e-05]</msg>
<status status="PASS" starttime="20201112 12:28:34.996" endtime="20201112 12:28:35.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.985" endtime="20201112 12:28:35.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.009" endtime="20201112 12:28:35.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:35.018" endtime="20201112 12:28:35.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.013" endtime="20201112 12:28:35.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.004" endtime="20201112 12:28:35.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.494" endtime="20201112 12:28:35.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.492" endtime="20201112 12:28:35.043"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.066" endtime="20201112 12:28:35.089"></status>
</kw>
<msg timestamp="20201112 12:28:35.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:35.063" endtime="20201112 12:28:35.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:35.092" endtime="20201112 12:28:35.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.098" endtime="20201112 12:28:35.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.055" endtime="20201112 12:28:35.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.050" endtime="20201112 12:28:35.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.122" endtime="20201112 12:28:35.455"></status>
</kw>
<msg timestamp="20201112 12:28:35.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042409556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042507333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.118" endtime="20201112 12:28:35.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042409556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042507333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.465" endtime="20201112 12:28:35.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.483" endtime="20201112 12:28:35.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.111" endtime="20201112 12:28:35.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.106" endtime="20201112 12:28:35.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.502" level="INFO">${RESULT} = [{'time': 0.042507333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777700000000028e-05, 'source_diff': 9.777700000000028e-05}, {'time': 0.042615347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:35.493" endtime="20201112 12:28:35.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:35.532" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:35.504" endtime="20201112 12:28:35.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.543" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:28:35.541" endtime="20201112 12:28:35.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.549" level="INFO">VALUE: [9.777700000000028e-05, 9.784699999999813e-05, 9.806899999999924e-05, 9.790300000000335e-05, 9.733399999999753e-05, 9.713899999999609e-05, 9.806999999999871e-05, 9.777799999999975e-05, 9.720900000000088e-05, 9.783400000000497e-05, 9.751399999999993e-05, 9.792999999999608e-05, 9.806899999999924e-05, 9.763899999999659e-05, 9.737500000000371e-05, 9.787499999999727e-05, 9.737499999999677e-05, 9.73609999999972e-05, 9.769500000000181e-05, 9.805599999999914e-05, 9.804199999999957e-05, 9.744399999999515e-05, 9.809700000000532e-05, 9.813900000000403e-05, 9.719400000000183e-05, 9.747199999999429e-05, 9.786100000000464e-05, 9.755600000000558e-05, 9.773600000000104e-05, 9.744500000000156e-05, 9.768100000000224e-05, 9.738900000000328e-05, 9.729099999999935e-05, 9.762499999999702e-05, 9.788899999999684e-05, 9.727799999999925e-05, 9.791699999999598e-05, 9.722200000000097e-05, 9.751399999999993e-05, 9.813899999999709e-05, 9.71809999999948e-05, 9.770900000000138e-05, 9.727700000000672e-05, 9.792999999999608e-05, 9.72080000000014e-05, 9.745800000000165e-05, 9.804199999999957e-05, 9.726399999999968e-05, 9.787499999999727e-05, 9.800000000000086e-05]</msg>
<status status="PASS" starttime="20201112 12:28:35.545" endtime="20201112 12:28:35.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.534" endtime="20201112 12:28:35.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.558" endtime="20201112 12:28:35.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:35.567" endtime="20201112 12:28:35.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.562" endtime="20201112 12:28:35.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.554" endtime="20201112 12:28:35.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.045" endtime="20201112 12:28:35.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.044" endtime="20201112 12:28:35.592"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.615" endtime="20201112 12:28:35.638"></status>
</kw>
<msg timestamp="20201112 12:28:35.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:35.612" endtime="20201112 12:28:35.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:35.641" endtime="20201112 12:28:35.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.647" endtime="20201112 12:28:35.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.604" endtime="20201112 12:28:35.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.599" endtime="20201112 12:28:35.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.671" endtime="20201112 12:28:35.990"></status>
</kw>
<msg timestamp="20201112 12:28:35.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042077444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042176167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.667" endtime="20201112 12:28:35.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042077444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042176167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.995" endtime="20201112 12:28:36.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.003" endtime="20201112 12:28:36.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.660" endtime="20201112 12:28:36.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.655" endtime="20201112 12:28:36.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:36.013" level="INFO">${RESULT} = [{'time': 0.042176167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.872300000000195e-05, 'source_diff': 9.872300000000195e-05}, {'time': 0.042280167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:36.009" endtime="20201112 12:28:36.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:36.027" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:36.014" endtime="20201112 12:28:36.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.032" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:28:36.031" endtime="20201112 12:28:36.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.034" level="INFO">VALUE: [9.872300000000195e-05, 9.883399999999903e-05, 9.89860000000023e-05, 9.830499999999992e-05, 9.851400000000093e-05, 9.825000000000111e-05, 9.838899999999734e-05, 9.872300000000195e-05, 9.844399999999615e-05, 9.844500000000256e-05, 9.851400000000093e-05, 9.913899999999809e-05, 9.831900000000643e-05, 9.887499999999827e-05, 9.893000000000401e-05, 9.830499999999992e-05, 9.8513999999994e-05, 9.884700000000607e-05, 9.897199999999579e-05, 9.822300000000145e-05, 9.862499999999802e-05, 9.888899999999784e-05, 9.838899999999734e-05, 9.90139999999945e-05, 9.870799999999597e-05, 9.877800000000075e-05, 9.822200000000197e-05, 9.89860000000023e-05, 9.881899999999999e-05, 9.85280000000005e-05, 9.876400000000118e-05, 9.893100000000349e-05, 9.812499999999752e-05, 9.83479999999981e-05, 9.890299999999741e-05, 9.897200000000272e-05, 9.892999999999708e-05, 9.837499999999777e-05, 9.879100000000085e-05, 9.905500000000067e-05, 9.849999999999443e-05, 9.87080000000029e-05, 9.894400000000358e-05, 9.8513999999994e-05, 9.837500000000471e-05, 9.886199999999817e-05, 9.851400000000093e-05, 9.897199999999579e-05, 9.873600000000204e-05, 9.833299999999906e-05]</msg>
<status status="PASS" starttime="20201112 12:28:36.033" endtime="20201112 12:28:36.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.027" endtime="20201112 12:28:36.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.039" endtime="20201112 12:28:36.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:36.043" endtime="20201112 12:28:36.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.041" endtime="20201112 12:28:36.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.037" endtime="20201112 12:28:36.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.594" endtime="20201112 12:28:36.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.593" endtime="20201112 12:28:36.064"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.075" endtime="20201112 12:28:36.094"></status>
</kw>
<msg timestamp="20201112 12:28:36.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:36.073" endtime="20201112 12:28:36.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:36.096" endtime="20201112 12:28:36.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.099" endtime="20201112 12:28:36.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.070" endtime="20201112 12:28:36.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.067" endtime="20201112 12:28:36.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.110" endtime="20201112 12:28:36.442"></status>
</kw>
<msg timestamp="20201112 12:28:36.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024909819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:36.108" endtime="20201112 12:28:36.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024909819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:36.452" endtime="20201112 12:28:36.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.470" endtime="20201112 12:28:36.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.105" endtime="20201112 12:28:36.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.103" endtime="20201112 12:28:36.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:36.489" level="INFO">${RESULT} = [{'time': 0.024909819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.934699999999963e-05, 'source_diff': 9.934699999999963e-05}, {'time': 0.025017847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:36.480" endtime="20201112 12:28:36.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:36.519" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:36.491" endtime="20201112 12:28:36.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.530" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:28:36.528" endtime="20201112 12:28:36.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.535" level="INFO">VALUE: [9.934699999999963e-05, 9.969400000000087e-05, 9.934699999999963e-05, 0.00010004200000000157, 9.955599999999717e-05, 9.998599999999983e-05, 0.00010008300000000081, 9.980599999999742e-05, 0.00010009799999999985, 0.00010012499999999952, 0.00010006900000000124, 9.990299999999841e-05, 9.944400000000062e-05, 9.92219999999995e-05, 0.00010012499999999952, 9.951399999999846e-05, 0.00010001400000000243, 9.916699999999723e-05, 9.91809999999968e-05, 9.924999999999864e-05, 9.930500000000092e-05, 0.00010013899999999909, 9.955500000000117e-05, 9.987499999999927e-05, 9.931999999999996e-05, 0.00010001400000000243, 9.995800000000069e-05, 9.973599999999957e-05, 9.970899999999991e-05, 9.994500000000059e-05, 9.966699999999773e-05, 9.955500000000117e-05, 9.981899999999752e-05, 9.99999999999994e-05, 9.975000000000261e-05, 9.984700000000013e-05, 0.00010001400000000243, 9.99999999999994e-05, 9.941700000000095e-05, 9.929200000000082e-05, 9.93479999999991e-05, 9.944400000000062e-05, 9.945800000000019e-05, 9.95410000000016e-05, 9.9722e-05, 9.958300000000031e-05, 9.931900000000049e-05, 9.991699999999798e-05, 0.00010004200000000157, 9.9722e-05]</msg>
<status status="PASS" starttime="20201112 12:28:36.532" endtime="20201112 12:28:36.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.521" endtime="20201112 12:28:36.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.545" endtime="20201112 12:28:36.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:36.553" endtime="20201112 12:28:36.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.549" endtime="20201112 12:28:36.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.540" endtime="20201112 12:28:36.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.065" endtime="20201112 12:28:36.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.065" endtime="20201112 12:28:36.579"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.602" endtime="20201112 12:28:36.625"></status>
</kw>
<msg timestamp="20201112 12:28:36.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:36.598" endtime="20201112 12:28:36.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:36.628" endtime="20201112 12:28:36.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.634" endtime="20201112 12:28:36.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.591" endtime="20201112 12:28:36.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.586" endtime="20201112 12:28:36.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.658" endtime="20201112 12:28:36.992"></status>
</kw>
<msg timestamp="20201112 12:28:36.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042180444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042281556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:36.654" endtime="20201112 12:28:36.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042180444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042281556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.001" endtime="20201112 12:28:37.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.020" endtime="20201112 12:28:37.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.647" endtime="20201112 12:28:37.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.642" endtime="20201112 12:28:37.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:37.039" level="INFO">${RESULT} = [{'time': 0.042281556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010111200000000042, 'source_diff': 0.00010111200000000042}, {'time': 0.042389569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:37.030" endtime="20201112 12:28:37.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:37.068" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:37.041" endtime="20201112 12:28:37.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.079" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:28:37.077" endtime="20201112 12:28:37.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.084" level="INFO">VALUE: [0.00010111200000000042, 0.00010075000000000361, 0.00010072199999999754, 0.0001001809999999978, 0.00010095799999999822, 0.00010108400000000128, 0.00010066699999999873, 0.00010084700000000113, 0.00010113900000000009, 0.00010088899999999984, 0.00010082000000000146, 0.00010107000000000171, 0.00010015199999999919, 0.00010073600000000404, 0.00010067999999999883, 0.00010051400000000293, 0.0001010559999999952, 0.00010026399999999575, 0.00010105600000000214, 0.00010050000000000336, 0.0001003480000000001, 0.00010084799999999366, 0.00010101299999999702, 0.00010033300000000106, 0.00010095799999999822, 0.00010041699999999848, 0.00010104199999999564, 0.00010055600000000164, 0.00010113900000000009, 0.00010097199999999779, 0.00010026400000000268, 0.00010020900000000388, 0.00010029200000000182, 0.00010027800000000225, 0.00010080499999999548, 0.00010055499999999523, 0.00010083300000000156, 0.00010029099999999541, 0.00010052799999999557, 0.00010072200000000447, 0.00010088899999999984, 0.00010026400000000268, 0.00010022199999999704, 0.00010083300000000156, 0.00010115299999999966, 0.00010062500000000002, 0.00010095800000000515, 0.00010072199999999754, 0.00010043100000000499, 0.00010018100000000474]</msg>
<status status="PASS" starttime="20201112 12:28:37.081" endtime="20201112 12:28:37.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.070" endtime="20201112 12:28:37.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.094" endtime="20201112 12:28:37.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:37.102" endtime="20201112 12:28:37.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.098" endtime="20201112 12:28:37.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.089" endtime="20201112 12:28:37.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.581" endtime="20201112 12:28:37.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.580" endtime="20201112 12:28:37.128"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.151" endtime="20201112 12:28:37.174"></status>
</kw>
<msg timestamp="20201112 12:28:37.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:37.148" endtime="20201112 12:28:37.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:37.177" endtime="20201112 12:28:37.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.184" endtime="20201112 12:28:37.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.141" endtime="20201112 12:28:37.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.135" endtime="20201112 12:28:37.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.207" endtime="20201112 12:28:37.541"></status>
</kw>
<msg timestamp="20201112 12:28:37.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042682042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042783458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.204" endtime="20201112 12:28:37.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042682042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042783458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.550" endtime="20201112 12:28:37.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.568" endtime="20201112 12:28:37.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.196" endtime="20201112 12:28:37.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.192" endtime="20201112 12:28:37.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:37.587" level="INFO">${RESULT} = [{'time': 0.042783458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000101416, 'source_diff': 0.000101416}, {'time': 0.042897458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000101347000000...</msg>
<status status="PASS" starttime="20201112 12:28:37.578" endtime="20201112 12:28:37.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:37.616" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:37.589" endtime="20201112 12:28:37.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.627" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:28:37.625" endtime="20201112 12:28:37.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.633" level="INFO">VALUE: [0.000101416, 0.00010134700000000163, 0.00010126399999999675, 0.00010126400000000368, 0.00010170799999999897, 0.00010145799999999872, 0.00010172199999999854, 0.0001020410000000041, 0.00010193099999999955, 0.0001011809999999988, 0.00010193000000000008, 0.00010144399999999915, 0.00010195800000000615, 0.00010144399999999915, 0.0001014860000000048, 0.00010208300000000281, 0.00010206999999999578, 0.00010188900000000084, 0.00010201400000000443, 0.00010195899999999869, 0.00010142999999999958, 0.00010131899999999555, 0.00010162500000000102, 0.00010180500000000342, 0.00010180599999999596, 0.00010172200000000547, 0.0001016809999999993, 0.00010130599999999546, 0.00010195899999999869, 0.00010209800000000185, 0.00010194399999999965, 0.00010126399999999675, 0.00010205499999999673, 0.00010184700000000213, 0.00010161099999999451, 0.00010129200000000282, 0.00010144500000000556, 0.0001012359999999976, 0.00010141699999999948, 0.00010148599999999786, 0.00010213900000000109, 0.00010154199999999614, 0.00010163900000000059, 0.00010197199999999879, 0.0001016939999999994, 0.00010184700000000213, 0.00010208300000000281, 0.00010120799999999847, 0.00010155600000000264, 0.00010152799999999657]</msg>
<status status="PASS" starttime="20201112 12:28:37.629" endtime="20201112 12:28:37.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.618" endtime="20201112 12:28:37.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.642" endtime="20201112 12:28:37.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:37.651" endtime="20201112 12:28:37.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.646" endtime="20201112 12:28:37.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.638" endtime="20201112 12:28:37.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.131" endtime="20201112 12:28:37.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.129" endtime="20201112 12:28:37.676"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.699" endtime="20201112 12:28:37.722"></status>
</kw>
<msg timestamp="20201112 12:28:37.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:37.696" endtime="20201112 12:28:37.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:37.725" endtime="20201112 12:28:37.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.732" endtime="20201112 12:28:37.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.689" endtime="20201112 12:28:37.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.683" endtime="20201112 12:28:37.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.755" endtime="20201112 12:28:38.088"></status>
</kw>
<msg timestamp="20201112 12:28:38.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042472014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042574903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.752" endtime="20201112 12:28:38.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042472014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042574903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.097" endtime="20201112 12:28:38.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.116" endtime="20201112 12:28:38.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.744" endtime="20201112 12:28:38.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.740" endtime="20201112 12:28:38.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.136" level="INFO">${RESULT} = [{'time': 0.042574903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001028889999999949, 'source_diff': 0.0001028889999999949}, {'time': 0.042685847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:38.128" endtime="20201112 12:28:38.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:38.166" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:38.138" endtime="20201112 12:28:38.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.177" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:28:38.174" endtime="20201112 12:28:38.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.182" level="INFO">VALUE: [0.0001028889999999949, 0.00010313900000000209, 0.00010277799999999782, 0.00010276399999999825, 0.00010283300000000356, 0.00010231999999999603, 0.00010237500000000177, 0.00010293100000000055, 0.0001026810000000003, 0.00010220799999999947, 0.0001030139999999985, 0.00010276399999999825, 0.00010240299999999397, 0.00010282000000000346, 0.00010313900000000209, 0.00010305600000000414, 0.00010255600000000364, 0.00010256999999999628, 0.00010313900000000209, 0.00010258299999999637, 0.00010297199999999979, 0.00010308300000000381, 0.0001026940000000004, 0.00010229199999999689, 0.00010224999999999818, 0.00010252799999999757, 0.00010234700000000263, 0.00010266700000000073, 0.0001021809999999998, 0.00010266700000000073, 0.00010308300000000381, 0.0001028610000000027, 0.00010220799999999947, 0.0001029160000000015, 0.00010261100000000245, 0.00010263899999999465, 0.00010234699999999569, 0.00010236099999999526, 0.00010248699999999833, 0.00010262500000000202, 0.00010233299999999612, 0.0001027359999999991, 0.00010276399999999825, 0.00010262499999999508, 0.00010255600000000364, 0.00010306999999999678, 0.00010237500000000177, 0.0001026810000000003, 0.00010230499999999698, 0.00010256999999999628]</msg>
<status status="PASS" starttime="20201112 12:28:38.179" endtime="20201112 12:28:38.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.168" endtime="20201112 12:28:38.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.192" endtime="20201112 12:28:38.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:38.200" endtime="20201112 12:28:38.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.196" endtime="20201112 12:28:38.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.187" endtime="20201112 12:28:38.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.679" endtime="20201112 12:28:38.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.677" endtime="20201112 12:28:38.226"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.249" endtime="20201112 12:28:38.272"></status>
</kw>
<msg timestamp="20201112 12:28:38.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:38.245" endtime="20201112 12:28:38.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:38.275" endtime="20201112 12:28:38.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.282" endtime="20201112 12:28:38.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.238" endtime="20201112 12:28:38.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.232" endtime="20201112 12:28:38.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.305" endtime="20201112 12:28:38.641"></status>
</kw>
<msg timestamp="20201112 12:28:38.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042317389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042421042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.302" endtime="20201112 12:28:38.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042317389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042421042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.650" endtime="20201112 12:28:38.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.668" endtime="20201112 12:28:38.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.295" endtime="20201112 12:28:38.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.290" endtime="20201112 12:28:38.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.687" level="INFO">${RESULT} = [{'time': 0.042421042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010365300000000216, 'source_diff': 0.00010365300000000216}, {'time': 0.042528056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:38.678" endtime="20201112 12:28:38.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:38.716" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:38.689" endtime="20201112 12:28:38.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.727" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:28:38.725" endtime="20201112 12:28:38.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.733" level="INFO">VALUE: [0.00010365300000000216, 0.00010349999999999943, 0.00010322200000000004, 0.00010348599999999986, 0.00010358299999999737, 0.00010365300000000216, 0.00010398600000000036, 0.00010354199999999814, 0.0001033480000000031, 0.00010326400000000568, 0.00010332000000000396, 0.00010326399999999875, 0.00010374999999999968, 0.0001033889999999954, 0.00010372200000000054, 0.00010340300000000191, 0.00010355500000000517, 0.00010366699999999479, 0.0001035559999999977, 0.00010405600000000514, 0.00010374999999999968, 0.00010352699999999909, 0.0001036940000000014, 0.00010349999999999943, 0.00010330500000000492, 0.00010408300000000481, 0.00010391700000000198, 0.00010369399999999446, 0.00010387500000000327, 0.00010416700000000223, 0.00010334699999999669, 0.00010406999999999778, 0.0001036810000000013, 0.00010376299999999977, 0.00010386099999999676, 0.000103513999999999, 0.00010326400000000568, 0.000103513999999999, 0.00010366700000000173, 0.0001040559999999982, 0.00010372300000000001, 0.00010387500000000327, 0.0001038339999999971, 0.00010334699999999669, 0.0001040139999999995, 0.00010416700000000223, 0.00010354199999999814, 0.00010393099999999461, 0.0001038889999999959, 0.00010365300000000216]</msg>
<status status="PASS" starttime="20201112 12:28:38.730" endtime="20201112 12:28:38.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.718" endtime="20201112 12:28:38.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.742" endtime="20201112 12:28:38.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:38.751" endtime="20201112 12:28:38.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.746" endtime="20201112 12:28:38.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.738" endtime="20201112 12:28:38.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.228" endtime="20201112 12:28:38.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.227" endtime="20201112 12:28:38.777"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.799" endtime="20201112 12:28:38.823"></status>
</kw>
<msg timestamp="20201112 12:28:38.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:38.796" endtime="20201112 12:28:38.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:38.827" endtime="20201112 12:28:38.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.833" endtime="20201112 12:28:38.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.789" endtime="20201112 12:28:38.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.783" endtime="20201112 12:28:38.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.857" endtime="20201112 12:28:39.193"></status>
</kw>
<msg timestamp="20201112 12:28:39.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042297458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042402139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.854" endtime="20201112 12:28:39.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042297458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042402139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:39.203" endtime="20201112 12:28:39.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.221" endtime="20201112 12:28:39.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.847" endtime="20201112 12:28:39.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.842" endtime="20201112 12:28:39.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:39.240" level="INFO">${RESULT} = [{'time': 0.042402139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010468099999999536, 'source_diff': 0.00010468099999999536}, {'time': 0.042516153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:39.231" endtime="20201112 12:28:39.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:39.269" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:39.242" endtime="20201112 12:28:39.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.280" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:28:39.278" endtime="20201112 12:28:39.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.285" level="INFO">VALUE: [0.00010468099999999536, 0.00010466700000000273, 0.00010466699999999579, 0.0001048889999999969, 0.00010487500000000427, 0.00010467999999999589, 0.00010505499999999973, 0.00010438900000000334, 0.00010415299999999572, 0.00010461099999999751, 0.00010462500000000402, 0.00010456999999999828, 0.0001050559999999992, 0.00010472300000000101, 0.00010463799999999718, 0.00010487500000000427, 0.00010509699999999844, 0.00010447200000000129, 0.00010425000000000018, 0.0001050140000000005, 0.00010459699999999794, 0.00010475000000000068, 0.00010440300000000291, 0.0001043610000000042, 0.00010425000000000018, 0.00010480499999999948, 0.00010480499999999948, 0.00010447200000000129, 0.0001047360000000011, 0.0001050140000000005, 0.00010444499999999468, 0.00010476400000000025, 0.000104514, 0.0001047360000000011, 0.00010487500000000427, 0.00010481899999999905, 0.00010447200000000129, 0.00010463899999999665, 0.0001045689999999988, 0.00010437499999999683, 0.00010422200000000104, 0.0001048480000000046, 0.00010484799999999767, 0.00010495900000000169, 0.00010479099999999991, 0.0001044019999999965, 0.0001048889999999969, 0.00010498599999999442, 0.00010511099999999801, 0.00010497200000000179]</msg>
<status status="PASS" starttime="20201112 12:28:39.282" endtime="20201112 12:28:39.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.271" endtime="20201112 12:28:39.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.295" endtime="20201112 12:28:39.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:39.303" endtime="20201112 12:28:39.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.299" endtime="20201112 12:28:39.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.290" endtime="20201112 12:28:39.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.779" endtime="20201112 12:28:39.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.778" endtime="20201112 12:28:39.329"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.351" endtime="20201112 12:28:39.371"></status>
</kw>
<msg timestamp="20201112 12:28:39.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:39.348" endtime="20201112 12:28:39.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:39.372" endtime="20201112 12:28:39.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.375" endtime="20201112 12:28:39.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.341" endtime="20201112 12:28:39.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.336" endtime="20201112 12:28:39.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.386" endtime="20201112 12:28:39.710"></status>
</kw>
<msg timestamp="20201112 12:28:39.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040395292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040500431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:39.385" endtime="20201112 12:28:39.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040395292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040500431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:39.719" endtime="20201112 12:28:39.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.737" endtime="20201112 12:28:39.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.381" endtime="20201112 12:28:39.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.379" endtime="20201112 12:28:39.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:39.756" level="INFO">${RESULT} = [{'time': 0.040500431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010513900000000409, 'source_diff': 0.00010513900000000409}, {'time': 0.040612431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:39.747" endtime="20201112 12:28:39.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:39.785" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:39.758" endtime="20201112 12:28:39.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.796" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:28:39.794" endtime="20201112 12:28:39.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.802" level="INFO">VALUE: [0.00010513900000000409, 0.00010536199999999774, 0.00010604099999999422, 0.0001060140000000015, 0.00010543000000000358, 0.0001055559999999997, 0.00010612499999999858, 0.00010595800000000322, 0.00010566699999999679, 0.00010569500000000287, 0.00010584799999999867, 0.0001053480000000051, 0.00010572200000000254, 0.00010608299999999987, 0.00010534799999999817, 0.00010529199999999989, 0.00010566699999999679, 0.00010545800000000272, 0.0001058889999999979, 0.00010536099999999826, 0.0001060560000000002, 0.00010531899999999955, 0.00010529100000000041, 0.00010613899999999815, 0.00010548600000000186, 0.00010570799999999603, 0.00010544399999999621, 0.00010534699999999869, 0.00010531999999999903, 0.00010534799999999817, 0.0001060560000000002, 0.00010598600000000236, 0.000105416000000004, 0.00010522200000000204, 0.00010605500000000073, 0.00010523599999999467, 0.00010562500000000502, 0.00010561099999999851, 0.00010522200000000204, 0.00010572200000000254, 0.00010522300000000151, 0.00010608399999999935, 0.00010558299999999937, 0.00010550000000000143, 0.00010550000000000143, 0.00010554200000000014, 0.00010512499999999758, 0.00010583299999999962, 0.00010529199999999989, 0.0001060560000000002]</msg>
<status status="PASS" starttime="20201112 12:28:39.799" endtime="20201112 12:28:39.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.787" endtime="20201112 12:28:39.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.816" endtime="20201112 12:28:39.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:39.825" endtime="20201112 12:28:39.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.820" endtime="20201112 12:28:39.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.812" endtime="20201112 12:28:39.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.331" endtime="20201112 12:28:39.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.330" endtime="20201112 12:28:39.851"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.875" endtime="20201112 12:28:39.898"></status>
</kw>
<msg timestamp="20201112 12:28:39.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:39.872" endtime="20201112 12:28:39.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:39.902" endtime="20201112 12:28:39.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.908" endtime="20201112 12:28:39.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.864" endtime="20201112 12:28:39.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.858" endtime="20201112 12:28:39.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.931" endtime="20201112 12:28:40.265"></status>
</kw>
<msg timestamp="20201112 12:28:40.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043835097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043941333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:39.928" endtime="20201112 12:28:40.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043835097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043941333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:40.274" endtime="20201112 12:28:40.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.292" endtime="20201112 12:28:40.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.921" endtime="20201112 12:28:40.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.916" endtime="20201112 12:28:40.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:40.313" level="INFO">${RESULT} = [{'time': 0.043941333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010623599999999567, 'source_diff': 0.00010623599999999567}, {'time': 0.044051333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:40.304" endtime="20201112 12:28:40.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:40.342" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:40.315" endtime="20201112 12:28:40.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.353" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:28:40.351" endtime="20201112 12:28:40.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.359" level="INFO">VALUE: [0.00010623599999999567, 0.00010651399999999506, 0.00010687499999999933, 0.00010637499999999883, 0.0001062360000000026, 0.00010634699999999969, 0.00010686099999999976, 0.00010634699999999969, 0.00010708400000000035, 0.00010647300000000276, 0.00010691599999999857, 0.0001068889999999989, 0.00010666700000000473, 0.00010648600000000286, 0.00010669500000000387, 0.00010682000000000053, 0.00010694499999999718, 0.00010652800000000157, 0.00010669500000000387, 0.00010666699999999779, 0.00010618000000000433, 0.00010702800000000207, 0.00010626400000000175, 0.00010641699999999754, 0.00010668099999999736, 0.00010680600000000096, 0.00010666699999999779, 0.00010657000000000028, 0.00010676399999999531, 0.00010659799999999942, 0.00010648600000000286, 0.00010645799999999678, 0.00010665299999999822, 0.00010670799999999703, 0.00010669499999999693, 0.00010686099999999976, 0.0001065419999999942, 0.0001065690000000008, 0.00010676399999999531, 0.00010659800000000635, 0.00010655500000000123, 0.00010694399999999771, 0.00010670800000000397, 0.00010666699999999779, 0.00010673599999999617, 0.00010672200000000354, 0.0001065419999999942, 0.0001070969999999935, 0.0001063889999999984, 0.0001063339999999996]</msg>
<status status="PASS" starttime="20201112 12:28:40.356" endtime="20201112 12:28:40.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.344" endtime="20201112 12:28:40.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.368" endtime="20201112 12:28:40.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:40.377" endtime="20201112 12:28:40.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.372" endtime="20201112 12:28:40.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.364" endtime="20201112 12:28:40.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.853" endtime="20201112 12:28:40.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.852" endtime="20201112 12:28:40.402"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.425" endtime="20201112 12:28:40.448"></status>
</kw>
<msg timestamp="20201112 12:28:40.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:40.422" endtime="20201112 12:28:40.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:40.451" endtime="20201112 12:28:40.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.457" endtime="20201112 12:28:40.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.415" endtime="20201112 12:28:40.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.409" endtime="20201112 12:28:40.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.481" endtime="20201112 12:28:40.816"></status>
</kw>
<msg timestamp="20201112 12:28:40.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042144028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0422515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:40.477" endtime="20201112 12:28:40.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042144028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0422515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:40.825" endtime="20201112 12:28:40.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.843" endtime="20201112 12:28:40.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.470" endtime="20201112 12:28:40.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.466" endtime="20201112 12:28:40.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:40.862" level="INFO">${RESULT} = [{'time': 0.0422515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010747199999999735, 'source_diff': 0.00010747199999999735}, {'time': 0.042365583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:40.853" endtime="20201112 12:28:40.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:40.892" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:40.864" endtime="20201112 12:28:40.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.904" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:28:40.901" endtime="20201112 12:28:40.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.909" level="INFO">VALUE: [0.00010747199999999735, 0.00010808299999999493, 0.00010716700000000523, 0.00010786100000000076, 0.00010772299999999707, 0.00010809799999999398, 0.00010727700000000284, 0.00010786100000000076, 0.00010809700000000144, 0.00010799999999999699, 0.00010775000000000368, 0.00010817999999999939, 0.0001080419999999957, 0.00010766699999999879, 0.00010762500000000008, 0.00010718099999999786, 0.00010729100000000241, 0.00010726400000000275, 0.00010727800000000232, 0.00010751399999999606, 0.00010809700000000144, 0.00010776399999999631, 0.00010730600000000146, 0.00010732000000000103, 0.00010749999999999649, 0.00010784800000000067, 0.00010813799999999374, 0.00010724999999999624, 0.00010749999999999649, 0.00010762500000000008, 0.00010809700000000144, 0.00010761100000000051, 0.00010793099999999861, 0.00010750000000000343, 0.00010759700000000094, 0.00010772299999999707, 0.0001075549999999953, 0.00010727799999999538, 0.00010767999999999889, 0.00010805500000000273, 0.00010730600000000146, 0.00010754200000000214, 0.00010795899999999775, 0.00010775000000000368, 0.00010772300000000401, 0.00010809800000000092, 0.00010745799999999778, 0.00010754100000000266, 0.00010808300000000187, 0.00010748599999999692]</msg>
<status status="PASS" starttime="20201112 12:28:40.906" endtime="20201112 12:28:40.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.894" endtime="20201112 12:28:40.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.919" endtime="20201112 12:28:40.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:40.927" endtime="20201112 12:28:40.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.923" endtime="20201112 12:28:40.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.914" endtime="20201112 12:28:40.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.404" endtime="20201112 12:28:40.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.403" endtime="20201112 12:28:40.953"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.976" endtime="20201112 12:28:40.999"></status>
</kw>
<msg timestamp="20201112 12:28:41.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:40.972" endtime="20201112 12:28:41.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:41.002" endtime="20201112 12:28:41.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.008" endtime="20201112 12:28:41.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.965" endtime="20201112 12:28:41.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.959" endtime="20201112 12:28:41.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.032" endtime="20201112 12:28:41.365"></status>
</kw>
<msg timestamp="20201112 12:28:41.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042433722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042542667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.029" endtime="20201112 12:28:41.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042433722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042542667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.374" endtime="20201112 12:28:41.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.392" endtime="20201112 12:28:41.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.022" endtime="20201112 12:28:41.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.017" endtime="20201112 12:28:41.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.411" level="INFO">${RESULT} = [{'time': 0.042542667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010894499999999918, 'source_diff': 0.00010894499999999918}, {'time': 0.042659708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:41.402" endtime="20201112 12:28:41.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:41.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:41.413" endtime="20201112 12:28:41.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.452" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:28:41.449" endtime="20201112 12:28:41.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.457" level="INFO">VALUE: [0.00010894499999999918, 0.00010874999999999774, 0.0001088890000000009, 0.00010869399999999946, 0.00010859700000000194, 0.00010834700000000169, 0.00010907000000000278, 0.00010857000000000228, 0.00010824999999999724, 0.0001082219999999981, 0.00010905599999999627, 0.00010908400000000235, 0.00010913799999999474, 0.00010883300000000262, 0.00010831900000000255, 0.00010890300000000047, 0.00010880599999999602, 0.00010873599999999817, 0.00010872200000000554, 0.00010851399999999706, 0.0001088890000000009, 0.000108514000000004, 0.00010876300000000477, 0.00010845799999999878, 0.00010831900000000255, 0.0001083890000000004, 0.00010869399999999946, 0.00010883300000000262, 0.00010887500000000133, 0.00010874999999999774, 0.00010826399999999681, 0.00010841699999999954, 0.00010894499999999918, 0.00010894399999999971, 0.00010897199999999885, 0.00010831900000000255, 0.00010865299999999328, 0.00010818099999999886, 0.00010894500000000612, 0.00010879199999999645, 0.00010868099999999936, 0.00010837499999999389, 0.00010829100000000341, 0.00010915300000000072, 0.00010851399999999706, 0.00010893099999999961, 0.00010830600000000246, 0.00010851399999999706, 0.00010826400000000375, 0.00010904200000000364]</msg>
<status status="PASS" starttime="20201112 12:28:41.454" endtime="20201112 12:28:41.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.443" endtime="20201112 12:28:41.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.467" endtime="20201112 12:28:41.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:41.475" endtime="20201112 12:28:41.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.471" endtime="20201112 12:28:41.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.462" endtime="20201112 12:28:41.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.955" endtime="20201112 12:28:41.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.954" endtime="20201112 12:28:41.501"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.523" endtime="20201112 12:28:41.547"></status>
</kw>
<msg timestamp="20201112 12:28:41.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:41.520" endtime="20201112 12:28:41.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:41.550" endtime="20201112 12:28:41.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.556" endtime="20201112 12:28:41.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.513" endtime="20201112 12:28:41.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.507" endtime="20201112 12:28:41.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.580" endtime="20201112 12:28:41.914"></status>
</kw>
<msg timestamp="20201112 12:28:41.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041922028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042031639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.576" endtime="20201112 12:28:41.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041922028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042031639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.924" endtime="20201112 12:28:41.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.942" endtime="20201112 12:28:41.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.569" endtime="20201112 12:28:41.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.565" endtime="20201112 12:28:41.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.961" level="INFO">${RESULT} = [{'time': 0.042031639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010961100000000251, 'source_diff': 0.00010961100000000251}, {'time': 0.042150667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:41.952" endtime="20201112 12:28:41.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:41.991" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:41.963" endtime="20201112 12:28:41.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.002" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:28:41.999" endtime="20201112 12:28:42.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.007" level="INFO">VALUE: [0.00010961100000000251, 0.00010990300000000147, 0.00010926399999999781, 0.00011002799999999813, 0.00010947199999999935, 0.00010997199999999985, 0.00010933299999999618, 0.00010988899999999496, 0.00010979199999999745, 0.00010940300000000097, 0.0001093890000000014, 0.00010957000000000328, 0.0001097219999999996, 0.00010962500000000208, 0.00010919399999999996, 0.00010945799999999978, 0.00010997199999999985, 0.00010986099999999582, 0.00010986100000000276, 0.00010961100000000251, 0.0001092219999999991, 0.0001100419999999977, 0.00010929199999999695, 0.00010934699999999575, 0.00010970800000000003, 0.00011011099999999607, 0.00010966599999999438, 0.00011005599999999727, 0.00010970800000000003, 0.00010980600000000396, 0.00010926399999999781, 0.00010923700000000508, 0.00010970900000000644, 0.00010949999999999849, 0.0001097219999999996, 0.00011002799999999813, 0.00010990300000000147, 0.00010993100000000061, 0.00010949999999999849, 0.00010986100000000276, 0.00011015300000000172, 0.00010947299999999882, 0.00010947299999999882, 0.00010968000000000089, 0.00010987500000000233, 0.0001093890000000014, 0.00011008299999999693, 0.00010934700000000269, 0.000109514000000005, 0.00010995899999999975]</msg>
<status status="PASS" starttime="20201112 12:28:42.004" endtime="20201112 12:28:42.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.992" endtime="20201112 12:28:42.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.017" endtime="20201112 12:28:42.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:42.025" endtime="20201112 12:28:42.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.021" endtime="20201112 12:28:42.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.012" endtime="20201112 12:28:42.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.503" endtime="20201112 12:28:42.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.502" endtime="20201112 12:28:42.051"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.074" endtime="20201112 12:28:42.097"></status>
</kw>
<msg timestamp="20201112 12:28:42.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:42.070" endtime="20201112 12:28:42.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:42.100" endtime="20201112 12:28:42.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.106" endtime="20201112 12:28:42.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.063" endtime="20201112 12:28:42.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.057" endtime="20201112 12:28:42.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.130" endtime="20201112 12:28:42.464"></status>
</kw>
<msg timestamp="20201112 12:28:42.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042005792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042116861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:42.126" endtime="20201112 12:28:42.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042005792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042116861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:42.473" endtime="20201112 12:28:42.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.491" endtime="20201112 12:28:42.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.119" endtime="20201112 12:28:42.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.115" endtime="20201112 12:28:42.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:42.512" level="INFO">${RESULT} = [{'time': 0.042116861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011106899999999836, 'source_diff': 0.00011106899999999836}, {'time': 0.042232889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:42.503" endtime="20201112 12:28:42.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:42.541" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:42.514" endtime="20201112 12:28:42.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.552" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:28:42.550" endtime="20201112 12:28:42.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.558" level="INFO">VALUE: [0.00011106899999999836, 0.00011107000000000478, 0.00011030600000000446, 0.00011049999999999949, 0.0001103890000000024, 0.00011095900000000075, 0.00011076299999999983, 0.00011095800000000128, 0.00011076399999999931, 0.00011095800000000128, 0.0001110419999999987, 0.00011066700000000179, 0.00011084699999999725, 0.00011077799999999888, 0.00011063900000000265, 0.00011047200000000035, 0.00011098600000000042, 0.00011112500000000358, 0.00011095800000000128, 0.00011045800000000078, 0.00011030599999999752, 0.00011115299999999578, 0.00011059700000000394, 0.00011036099999999632, 0.00011047299999999982, 0.00011016600000000182, 0.00011058300000000437, 0.00011066700000000179, 0.00011030499999999804, 0.00011080500000000548, 0.00011094500000000118, 0.00011074999999999974, 0.0001110969999999975, 0.00011031900000000455, 0.00011099999999999999, 0.00011081999999999759, 0.00011073600000000017, 0.00011030499999999804, 0.00011018000000000139, 0.00011080499999999854, 0.00011016700000000129, 0.00011032000000000403, 0.00011076399999999931, 0.00011097300000000032, 0.00011074999999999974, 0.00011095800000000128, 0.00011101399999999956, 0.0001103890000000024, 0.0001107220000000006, 0.00011016700000000129]</msg>
<status status="PASS" starttime="20201112 12:28:42.555" endtime="20201112 12:28:42.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.543" endtime="20201112 12:28:42.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.567" endtime="20201112 12:28:42.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:42.576" endtime="20201112 12:28:42.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.571" endtime="20201112 12:28:42.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.563" endtime="20201112 12:28:42.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.053" endtime="20201112 12:28:42.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.052" endtime="20201112 12:28:42.601"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.624" endtime="20201112 12:28:42.648"></status>
</kw>
<msg timestamp="20201112 12:28:42.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:42.621" endtime="20201112 12:28:42.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:42.651" endtime="20201112 12:28:42.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.657" endtime="20201112 12:28:42.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.614" endtime="20201112 12:28:42.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.608" endtime="20201112 12:28:42.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.681" endtime="20201112 12:28:42.983"></status>
</kw>
<msg timestamp="20201112 12:28:42.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04237975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042491375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:42.678" endtime="20201112 12:28:42.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04237975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042491375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:42.992" endtime="20201112 12:28:43.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.011" endtime="20201112 12:28:43.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.670" endtime="20201112 12:28:43.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.666" endtime="20201112 12:28:43.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.029" level="INFO">${RESULT} = [{'time': 0.042491375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011162499999999714, 'source_diff': 0.00011162499999999714}, {'time': 0.042606444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:43.021" endtime="20201112 12:28:43.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:43.059" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:43.032" endtime="20201112 12:28:43.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.070" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:28:43.068" endtime="20201112 12:28:43.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.075" level="INFO">VALUE: [0.00011162499999999714, 0.00011218000000000339, 0.00011206999999999884, 0.00011116700000000229, 0.00011169399999999552, 0.00011188799999999749, 0.00011216699999999635, 0.00011200000000000099, 0.00011183399999999816, 0.00011191700000000304, 0.00011201400000000056, 0.00011130600000000546, 0.00011140299999999603, 0.00011159799999999748, 0.00011212499999999764, 0.00011199999999999405, 0.00011150000000000049, 0.00011134699999999775, 0.00011213900000000415, 0.00011152799999999963, 0.00011200000000000099, 0.00011188899999999696, 0.00011154200000000614, 0.0001120969999999985, 0.00011148600000000092, 0.00011169399999999552, 0.00011117999999999545, 0.00011125000000000024, 0.0001112220000000011, 0.00011183299999999868, 0.00011163899999999671, 0.00011122300000000057, 0.00011119500000000143, 0.00011118000000000239, 0.00011194399999999577, 0.00011201400000000056, 0.00011151400000000006, 0.00011173600000000117, 0.00011133299999999818, 0.00011155599999999877, 0.00011184800000000467, 0.00011126399999999981, 0.00011130500000000598, 0.00011186099999999782, 0.00011127799999999938, 0.00011151400000000006, 0.00011194400000000271, 0.00011191700000000304, 0.00011172199999999466, 0.0001112220000000011]</msg>
<status status="PASS" starttime="20201112 12:28:43.072" endtime="20201112 12:28:43.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.061" endtime="20201112 12:28:43.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.085" endtime="20201112 12:28:43.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.093" endtime="20201112 12:28:43.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.089" endtime="20201112 12:28:43.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.080" endtime="20201112 12:28:43.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.603" endtime="20201112 12:28:43.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.602" endtime="20201112 12:28:43.119"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.142" endtime="20201112 12:28:43.166"></status>
</kw>
<msg timestamp="20201112 12:28:43.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:43.139" endtime="20201112 12:28:43.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:43.169" endtime="20201112 12:28:43.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.176" endtime="20201112 12:28:43.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.132" endtime="20201112 12:28:43.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.126" endtime="20201112 12:28:43.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.199" endtime="20201112 12:28:43.533"></status>
</kw>
<msg timestamp="20201112 12:28:43.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0425055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042618153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:43.196" endtime="20201112 12:28:43.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0425055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042618153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:43.542" endtime="20201112 12:28:43.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.560" endtime="20201112 12:28:43.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.189" endtime="20201112 12:28:43.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.184" endtime="20201112 12:28:43.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.579" level="INFO">${RESULT} = [{'time': 0.042618153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011265299999999728, 'source_diff': 0.00011265299999999728}, {'time': 0.042735167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:43.571" endtime="20201112 12:28:43.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:43.609" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:43.581" endtime="20201112 12:28:43.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.620" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:28:43.618" endtime="20201112 12:28:43.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.625" level="INFO">VALUE: [0.00011265299999999728, 0.00011226400000000081, 0.0001128749999999984, 0.0001127770000000014, 0.00011254100000000072, 0.00011302800000000113, 0.00011277800000000088, 0.00011294499999999624, 0.00011290299999999753, 0.00011293099999999667, 0.00011297199999999591, 0.00011245899999999531, 0.0001128890000000049, 0.00011234699999999875, 0.00011217999999999645, 0.00011298600000000242, 0.00011263899999999771, 0.0001122499999999943, 0.0001127090000000025, 0.00011247200000000235, 0.00011231999999999909, 0.00011255599999999977, 0.00011276400000000131, 0.00011305499999999385, 0.00011237500000000483, 0.00011218000000000339, 0.00011276400000000131, 0.00011244500000000268, 0.00011305600000000027, 0.00011245899999999531, 0.00011226400000000081, 0.00011308299999999993, 0.00011276300000000183, 0.00011262499999999814, 0.00011275000000000174, 0.00011258299999999943, 0.00011216699999999635, 0.00011216699999999635, 0.00011283299999999968, 0.00011304100000000122, 0.00011280500000000054, 0.0001123749999999979, 0.00011230500000000004, 0.00011280500000000054, 0.00011220800000000253, 0.000112596999999999, 0.00011313900000000515, 0.00011295799999999634, 0.00011305600000000027, 0.00011250000000000149]</msg>
<status status="PASS" starttime="20201112 12:28:43.622" endtime="20201112 12:28:43.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.611" endtime="20201112 12:28:43.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.635" endtime="20201112 12:28:43.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.643" endtime="20201112 12:28:43.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.639" endtime="20201112 12:28:43.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.630" endtime="20201112 12:28:43.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.122" endtime="20201112 12:28:43.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.120" endtime="20201112 12:28:43.669"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.692" endtime="20201112 12:28:43.716"></status>
</kw>
<msg timestamp="20201112 12:28:43.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:43.688" endtime="20201112 12:28:43.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:43.719" endtime="20201112 12:28:43.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.725" endtime="20201112 12:28:43.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.681" endtime="20201112 12:28:43.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.676" endtime="20201112 12:28:43.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.749" endtime="20201112 12:28:44.083"></status>
</kw>
<msg timestamp="20201112 12:28:44.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042083139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042196458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.745" endtime="20201112 12:28:44.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042083139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042196458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.092" endtime="20201112 12:28:44.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.110" endtime="20201112 12:28:44.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.738" endtime="20201112 12:28:44.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.733" endtime="20201112 12:28:44.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:44.129" level="INFO">${RESULT} = [{'time': 0.042196458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011331900000000061, 'source_diff': 0.00011331900000000061}, {'time': 0.042315542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:44.120" endtime="20201112 12:28:44.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:44.159" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:44.131" endtime="20201112 12:28:44.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.169" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:28:44.167" endtime="20201112 12:28:44.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.175" level="INFO">VALUE: [0.00011331900000000061, 0.00011322299999999563, 0.00011386099999999982, 0.00011405600000000127, 0.0001134169999999976, 0.00011330600000000052, 0.00011355600000000077, 0.00011393100000000461, 0.00011395900000000375, 0.0001133749999999989, 0.00011347200000000335, 0.00011397199999999691, 0.00011345799999999684, 0.000113597, 0.00011326400000000181, 0.00011355600000000077, 0.00011388899999999896, 0.00011383400000000016, 0.00011391599999999863, 0.00011386099999999982, 0.00011388899999999896, 0.00011340299999999803, 0.00011372199999999666, 0.00011413899999999921, 0.00011368100000000436, 0.00011355599999999383, 0.00011409799999999998, 0.00011347199999999641, 0.00011376399999999537, 0.00011391599999999863, 0.00011383300000000068, 0.0001133749999999989, 0.00011397199999999691, 0.00011413899999999921, 0.00011355600000000077, 0.00011318099999999692, 0.0001138749999999994, 0.00011415199999999931, 0.00011354100000000172, 0.00011350000000000249, 0.0001139299999999982, 0.0001140970000000005, 0.00011380600000000102, 0.00011347200000000335, 0.00011418100000000486, 0.00011355600000000077, 0.00011354100000000172, 0.00011401400000000256, 0.00011326400000000181, 0.00011384700000000025]</msg>
<status status="PASS" starttime="20201112 12:28:44.172" endtime="20201112 12:28:44.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.160" endtime="20201112 12:28:44.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.185" endtime="20201112 12:28:44.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:44.193" endtime="20201112 12:28:44.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.188" endtime="20201112 12:28:44.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.180" endtime="20201112 12:28:44.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.671" endtime="20201112 12:28:44.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.670" endtime="20201112 12:28:44.219"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.241" endtime="20201112 12:28:44.265"></status>
</kw>
<msg timestamp="20201112 12:28:44.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:44.238" endtime="20201112 12:28:44.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:44.268" endtime="20201112 12:28:44.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.275" endtime="20201112 12:28:44.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.231" endtime="20201112 12:28:44.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.225" endtime="20201112 12:28:44.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.298" endtime="20201112 12:28:44.632"></status>
</kw>
<msg timestamp="20201112 12:28:44.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042400653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042515056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.295" endtime="20201112 12:28:44.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042400653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042515056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.641" endtime="20201112 12:28:44.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.659" endtime="20201112 12:28:44.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.288" endtime="20201112 12:28:44.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.283" endtime="20201112 12:28:44.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:44.680" level="INFO">${RESULT} = [{'time': 0.042515056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011440299999999903, 'source_diff': 0.00011440299999999903}, {'time': 0.042645069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:44.671" endtime="20201112 12:28:44.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:44.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:44.682" endtime="20201112 12:28:44.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.720" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:28:44.718" endtime="20201112 12:28:44.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.726" level="INFO">VALUE: [0.00011440299999999903, 0.00011483300000000168, 0.00011434700000000075, 0.00011447300000000382, 0.00011472199999999766, 0.00011429199999999501, 0.00011418099999999792, 0.00011487499999999345, 0.00011426400000000281, 0.00011425000000000324, 0.00011509800000000098, 0.00011436100000000032, 0.00011469399999999852, 0.00011426400000000281, 0.0001148750000000004, 0.00011454199999999526, 0.00011477800000000288, 0.00011483400000000116, 0.00011475000000000374, 0.00011449999999999655, 0.00011467999999999895, 0.00011479100000000297, 0.00011433300000000118, 0.00011462500000000014, 0.00011445900000000425, 0.00011470799999999809, 0.00011448600000000392, 0.00011484800000000073, 0.00011475000000000374, 0.00011490200000000006, 0.00011456899999999492, 0.000114597000000001, 0.00011505499999999586, 0.00011416699999999835, 0.00011501400000000356, 0.00011468099999999842, 0.00011497199999999791, 0.00011472300000000407, 0.000114597000000001, 0.00011448600000000392, 0.00011420799999999759, 0.00011422199999999716, 0.00011511100000000107, 0.00011508300000000193, 0.00011465299999999928, 0.00011475000000000374, 0.00011511100000000107, 0.00011512500000000064, 0.00011447199999999741, 0.00011454100000000272]</msg>
<status status="PASS" starttime="20201112 12:28:44.723" endtime="20201112 12:28:44.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.711" endtime="20201112 12:28:44.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.735" endtime="20201112 12:28:44.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:44.744" endtime="20201112 12:28:44.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.739" endtime="20201112 12:28:44.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.731" endtime="20201112 12:28:44.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.221" endtime="20201112 12:28:44.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.220" endtime="20201112 12:28:44.769"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.792" endtime="20201112 12:28:44.816"></status>
</kw>
<msg timestamp="20201112 12:28:44.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:44.789" endtime="20201112 12:28:44.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:44.819" endtime="20201112 12:28:44.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.825" endtime="20201112 12:28:44.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.782" endtime="20201112 12:28:44.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.776" endtime="20201112 12:28:44.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.849" endtime="20201112 12:28:45.184"></status>
</kw>
<msg timestamp="20201112 12:28:45.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042399153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042515264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.845" endtime="20201112 12:28:45.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042399153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042515264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:45.193" endtime="20201112 12:28:45.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.211" endtime="20201112 12:28:45.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.838" endtime="20201112 12:28:45.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.833" endtime="20201112 12:28:45.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:45.230" level="INFO">${RESULT} = [{'time': 0.042515264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011611099999999513, 'source_diff': 0.00011611099999999513}, {'time': 0.042641278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:45.221" endtime="20201112 12:28:45.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:45.259" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:45.232" endtime="20201112 12:28:45.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.270" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:28:45.268" endtime="20201112 12:28:45.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.276" level="INFO">VALUE: [0.00011611099999999513, 0.00011581999999999565, 0.0001153750000000009, 0.00011533400000000166, 0.0001159170000000001, 0.00011569399999999952, 0.00011566600000000038, 0.00011526399999999687, 0.00011543099999999917, 0.00011580600000000302, 0.00011602799999999719, 0.00011530599999999558, 0.00011525000000000424, 0.00011534800000000123, 0.00011517999999999945, 0.0001153750000000009, 0.00011540300000000003, 0.00011606899999999643, 0.00011572199999999866, 0.00011597199999999891, 0.00011551400000000406, 0.00011555600000000277, 0.00011526399999999687, 0.00011611100000000207, 0.00011573599999999823, 0.00011590300000000053, 0.00011611099999999513, 0.00011534700000000175, 0.00011552799999999669, 0.00011612500000000164, 0.00011570899999999856, 0.00011529099999999654, 0.00011538900000000046, 0.00011606900000000336, 0.00011597199999999891, 0.00011545799999999884, 0.00011575000000000474, 0.00011584699999999531, 0.00011590300000000053, 0.00011530500000000304, 0.00011562500000000114, 0.00011577699999999747, 0.00011533300000000218, 0.0001160970000000025, 0.00011605499999999686, 0.0001159170000000001, 0.00011573599999999823, 0.00011518099999999892, 0.0001160970000000025, 0.00011588900000000096]</msg>
<status status="PASS" starttime="20201112 12:28:45.273" endtime="20201112 12:28:45.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.261" endtime="20201112 12:28:45.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.291" endtime="20201112 12:28:45.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:45.300" endtime="20201112 12:28:45.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.295" endtime="20201112 12:28:45.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.286" endtime="20201112 12:28:45.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.772" endtime="20201112 12:28:45.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.770" endtime="20201112 12:28:45.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.554" endtime="20201112 12:28:45.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:45.337" endtime="20201112 12:28:45.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.333" endtime="20201112 12:28:45.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.330" endtime="20201112 12:28:45.361"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:51.425" endtime="20201112 12:28:45.363" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:54.466" endtime="20201112 12:28:45.374"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.517" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:28:45.533" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:28:47.442" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:28:45.514" endtime="20201112 12:28:47.443"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.448" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:28:47.445" endtime="20201112 12:28:47.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.511" endtime="20201112 12:28:47.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:47.455" endtime="20201112 12:28:47.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.453" endtime="20201112 12:28:47.861"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.890" endtime="20201112 12:28:47.912"></status>
</kw>
<msg timestamp="20201112 12:28:47.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201112 12:28:47.886" endtime="20201112 12:28:47.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201112 12:28:47.915" endtime="20201112 12:28:47.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.926" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:28:47.922" endtime="20201112 12:28:47.927"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:47.880" endtime="20201112 12:28:47.928"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:47.875" endtime="20201112 12:28:47.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.872" endtime="20201112 12:28:47.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:28:47.939" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:28:47.937" endtime="20201112 12:28:47.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.933" endtime="20201112 12:28:47.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.870" endtime="20201112 12:28:47.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.869" endtime="20201112 12:28:47.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.943" endtime="20201112 12:28:47.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.866" endtime="20201112 12:28:47.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.950" endtime="20201112 12:28:47.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.862" endtime="20201112 12:28:47.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.508" endtime="20201112 12:28:47.956"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:47.971" endtime="20201112 12:28:47.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.967" endtime="20201112 12:28:47.995"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.029" endtime="20201112 12:28:48.047"></status>
</kw>
<msg timestamp="20201112 12:28:48.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:48.025" endtime="20201112 12:28:48.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:48.051" endtime="20201112 12:28:48.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.061" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:28:48.057" endtime="20201112 12:28:48.062"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:48.018" endtime="20201112 12:28:48.064"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:48.012" endtime="20201112 12:28:48.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.009" endtime="20201112 12:28:48.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:28:48.074" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:28:48.072" endtime="20201112 12:28:48.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.068" endtime="20201112 12:28:48.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.007" endtime="20201112 12:28:48.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.006" endtime="20201112 12:28:48.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.077" endtime="20201112 12:28:48.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.002" endtime="20201112 12:28:48.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.997" endtime="20201112 12:28:48.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.964" endtime="20201112 12:28:48.084"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:48.093" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.115" endtime="20201112 12:28:50.214"></status>
</kw>
<msg timestamp="20201112 12:28:50.214" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 756249, 'wakeups': [766258, 776258, 786258, 796258, 806258, 816258, 82...</msg>
<status status="PASS" starttime="20201112 12:28:48.111" endtime="20201112 12:28:50.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.218" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 756249, 'wakeups': [766258, 776258, 786258, 796258, 806258, 816258, 82...</msg>
<status status="PASS" starttime="20201112 12:28:50.216" endtime="20201112 12:28:50.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.219" endtime="20201112 12:28:50.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.104" endtime="20201112 12:28:50.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.098" endtime="20201112 12:28:50.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:50.225" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [766258, 776258, 786258, 796258, 806258, 816258, 826258, 836258, 846258, 856258, 866258, 876258, 886258, 896258, 906258, 916258, 926258, 936258, 946258, 956258, 96...</msg>
<status status="PASS" starttime="20201112 12:28:50.223" endtime="20201112 12:28:50.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.230" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:50.229" endtime="20201112 12:28:50.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.233" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:50.232" endtime="20201112 12:28:50.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.226" endtime="20201112 12:28:50.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.238" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:50.237" endtime="20201112 12:28:50.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.241" level="INFO">VALUE: 756249</msg>
<status status="PASS" starttime="20201112 12:28:50.239" endtime="20201112 12:28:50.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.234" endtime="20201112 12:28:50.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.247" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:50.245" endtime="20201112 12:28:50.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.249" level="INFO">VALUE: [766258, 776258, 786258, 796258, 806258, 816258, 826258, 836258, 846258, 856258, 866258, 876258, 886258, 896258, 906258, 916258, 926258, 936258, 946258, 956258, 966258, 976258, 986258, 996258, 1006258, 1016258, 1026258, 1036258, 1046258, 1056258, 1066258, 1076258, 1086258, 1096258, 1106258, 1116258, 1126258, 1136258, 1146258, 1156258, 1166258, 1176258, 1186258, 1196258, 1206258, 1216258, 1226258, 1236258, 1246258, 1256258, 1266258, 1276258, 1286258, 1296258, 1306258, 1316258, 1326258, 1336258, 1346258, 1356258, 1366258, 1376258, 1386258, 1396258, 1406258, 1416258, 1426258, 1436258, 1446258, 1456258, 1466258, 1476258, 1486258, 1496258, 1506258, 1516258, 1526258, 1536258, 1546258, 1556258, 1566258, 1576258, 1586258, 1596258, 1606258, 1616258, 1626258, 1636258, 1646258, 1656258, 1666258, 1676258, 1686258, 1696258, 1706258, 1716258, 1726258, 1736258, 1746258, 1756258]</msg>
<status status="PASS" starttime="20201112 12:28:50.248" endtime="20201112 12:28:50.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.242" endtime="20201112 12:28:50.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.258" endtime="20201112 12:28:50.597"></status>
</kw>
<msg timestamp="20201112 12:28:50.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135829694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145840181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.256" endtime="20201112 12:28:50.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135829694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145840181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.605" endtime="20201112 12:28:50.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.622" endtime="20201112 12:28:50.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.253" endtime="20201112 12:28:50.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.251" endtime="20201112 12:28:50.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:50.685" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:50.631" endtime="20201112 12:28:50.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.695" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:50.693" endtime="20201112 12:28:50.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.709" level="INFO">VALUE: 0.135829694</msg>
<status status="PASS" starttime="20201112 12:28:50.707" endtime="20201112 12:28:50.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.687" endtime="20201112 12:28:50.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.723" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:50.720" endtime="20201112 12:28:50.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.727" level="INFO">VALUE: [0.145840181, 0.155841347, 0.165842347, 0.1758435, 0.1858445, 0.195845667, 0.205846667, 0.215847819, 0.225848806, 0.235849972, 0.245850972, 0.255852153, 0.265853139, 0.275854292, 0.285855278, 0.295856444, 0.305857444, 0.315858597, 0.325859597, 0.335860778, 0.345861778, 0.355862958, 0.365863917, 0.375865083, 0.385866069, 0.39586725, 0.405868236, 0.415869389, 0.425870389, 0.435871556, 0.445872556, 0.45587375, 0.465874708, 0.475875875, 0.485876875, 0.495878028, 0.505879042, 0.515880194, 0.525881181, 0.535882361, 0.545883361, 0.555884514, 0.5658855, 0.575886667, 0.585887653, 0.595888819, 0.605889819, 0.615891, 0.625891986, 0.635893139, 0.645894153, 0.655895319, 0.665896292, 0.675897458, 0.685898472, 0.695899625, 0.705900653, 0.715901833, 0.725902764, 0.735903931, 0.745904931, 0.755906097, 0.765907083, 0.77590825, 0.78590925, 0.795910417, 0.805911403, 0.815912583, 0.825913569, 0.835914722, 0.845915722, 0.855916917, 0.865917875, 0.875919056, 0.885920056, 0.895921222, 0.905922194, 0.915923375, 0.925924361, 0.935925528, 0.945926528, 0.95592775, 0.965928694, 0.975929833, 0.985930833, 0.995932, 1.005933014, 1.015934167, 1.025935167, 1.035936319, 1.045937306, 1.055938556, 1.065939472, 1.075940667, 1.085941625, 1.095942792, 1.105943792, 1.115945, 1.125945944, 1.135947153] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:50.725" endtime="20201112 12:28:50.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.713" endtime="20201112 12:28:50.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.736" endtime="20201112 12:28:50.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:50.744" endtime="20201112 12:28:50.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.740" endtime="20201112 12:28:50.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.732" endtime="20201112 12:28:50.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.095" endtime="20201112 12:28:50.770"></status>
</kw>
<msg timestamp="20201112 12:28:50.770" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.791" endtime="20201112 12:28:52.900"></status>
</kw>
<msg timestamp="20201112 12:28:52.902" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3430566, 'wakeups': [3440574, 3450575, 3460575, 3470575, 3480575, 3490...</msg>
<status status="PASS" starttime="20201112 12:28:50.788" endtime="20201112 12:28:52.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.908" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3430566, 'wakeups': [3440574, 3450575, 3460575, 3470575, 3480575, 3490...</msg>
<status status="PASS" starttime="20201112 12:28:52.904" endtime="20201112 12:28:52.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.911" endtime="20201112 12:28:52.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.781" endtime="20201112 12:28:52.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.775" endtime="20201112 12:28:52.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:52.923" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [3440574, 3450575, 3460575, 3470575, 3480575, 3490575, 3500575, 3510575, 3520575, 3530575, 3540575, 3550575, 3560575, 3570575, 3580575, 3590575, 3600575, 3610575, ...</msg>
<status status="PASS" starttime="20201112 12:28:52.919" endtime="20201112 12:28:52.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.933" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:52.931" endtime="20201112 12:28:52.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.938" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:52.936" endtime="20201112 12:28:52.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.925" endtime="20201112 12:28:52.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.950" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:52.948" endtime="20201112 12:28:52.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.955" level="INFO">VALUE: 3430566</msg>
<status status="PASS" starttime="20201112 12:28:52.953" endtime="20201112 12:28:52.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.942" endtime="20201112 12:28:52.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.968" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:52.966" endtime="20201112 12:28:52.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.973" level="INFO">VALUE: [3440574, 3450575, 3460575, 3470575, 3480575, 3490575, 3500575, 3510575, 3520575, 3530575, 3540575, 3550575, 3560575, 3570575, 3580575, 3590575, 3600575, 3610575, 3620575, 3630575, 3640575, 3650575, 3660575, 3670575, 3680575, 3690575, 3700575, 3710575, 3720575, 3730575, 3740575, 3750575, 3760575, 3770575, 3780575, 3790575, 3800575, 3810575, 3820575, 3830575, 3840575, 3850575, 3860575, 3870575, 3880575, 3890575, 3900575, 3910575, 3920575, 3930575, 3940575, 3950575, 3960575, 3970575, 3980575, 3990575, 4000575, 4010575, 4020575, 4030575, 4040575, 4050575, 4060575, 4070575, 4080575, 4090575, 4100575, 4110575, 4120575, 4130575, 4140575, 4150575, 4160575, 4170575, 4180575, 4190575, 4200575, 4210575, 4220575, 4230575, 4240575, 4250575, 4260575, 4270575, 4280575, 4290575, 4300575, 4310575, 4320575, 4330575, 4340575, 4350575, 4360575, 4370575, 4380575, 4390575, 4400575, 4410575, 4420575, 4430575]</msg>
<status status="PASS" starttime="20201112 12:28:52.970" endtime="20201112 12:28:52.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.959" endtime="20201112 12:28:52.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.994" endtime="20201112 12:28:53.333"></status>
</kw>
<msg timestamp="20201112 12:28:53.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038010125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048019986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:52.990" endtime="20201112 12:28:53.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038010125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048019986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.337" endtime="20201112 12:28:53.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.344" endtime="20201112 12:28:53.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.983" endtime="20201112 12:28:53.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.976" endtime="20201112 12:28:53.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:53.371" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:53.348" endtime="20201112 12:28:53.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.376" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:53.375" endtime="20201112 12:28:53.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.378" level="INFO">VALUE: 0.038010125</msg>
<status status="PASS" starttime="20201112 12:28:53.377" endtime="20201112 12:28:53.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.372" endtime="20201112 12:28:53.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.385" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:53.384" endtime="20201112 12:28:53.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.387" level="INFO">VALUE: [0.048019986, 0.058022167, 0.068023139, 0.078024319, 0.088025319, 0.098026486, 0.108027486, 0.118028653, 0.128029639, 0.138030806, 0.148031819, 0.158032986, 0.168033972, 0.178035208, 0.188036139, 0.198037306, 0.208038319, 0.218039486, 0.228040486, 0.238041639, 0.248042639, 0.258043806, 0.268044819, 0.278045972, 0.288046986, 0.298048139, 0.308049139, 0.318050319, 0.328051347, 0.338052486, 0.348053472, 0.358054639, 0.368055625, 0.378056819, 0.388057792, 0.398058986, 0.408059972, 0.418061153, 0.428062139, 0.438063306, 0.448064306, 0.458065472, 0.468066472, 0.478067653, 0.488068653, 0.498069806, 0.508070806, 0.518071972, 0.528072972, 0.538074139, 0.548075139, 0.558076306, 0.568077306, 0.578078472, 0.588079458, 0.598080653, 0.608081653, 0.618082806, 0.628083806, 0.638084986, 0.648085958, 0.658087125, 0.668088125, 0.678089292, 0.688090306, 0.698091458, 0.708092458, 0.718093639, 0.728094639, 0.738095819, 0.748096819, 0.758097958, 0.768098958, 0.778100139, 0.788101139, 0.798102306, 0.808103292, 0.818104458, 0.828105458, 0.838106625, 0.848107667, 0.858108792, 0.868109792, 0.878110972, 0.888111972, 0.898113139, 0.908114167, 0.918115306, 0.928116278, 0.938117472, 0.948118444, 0.958119625, 0.968120625, 0.978121778, 0.988122792, 0.998124, 1.008124944, 1.018126125, 1.028127111, 1.038128333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:53.386" endtime="20201112 12:28:53.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.380" endtime="20201112 12:28:53.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.392" endtime="20201112 12:28:53.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:53.396" endtime="20201112 12:28:53.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.394" endtime="20201112 12:28:53.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.389" endtime="20201112 12:28:53.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.772" endtime="20201112 12:28:53.419"></status>
</kw>
<msg timestamp="20201112 12:28:53.420" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.442" endtime="20201112 12:28:55.551"></status>
</kw>
<msg timestamp="20201112 12:28:55.552" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6081768, 'wakeups': [6091777, 6101777, 6111777, 6121777, 6131777, 6141...</msg>
<status status="PASS" starttime="20201112 12:28:53.439" endtime="20201112 12:28:55.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.559" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6081768, 'wakeups': [6091777, 6101777, 6111777, 6121777, 6131777, 6141...</msg>
<status status="PASS" starttime="20201112 12:28:55.554" endtime="20201112 12:28:55.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.561" endtime="20201112 12:28:55.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.431" endtime="20201112 12:28:55.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.425" endtime="20201112 12:28:55.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:55.574" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [6091777, 6101777, 6111777, 6121777, 6131777, 6141777, 6151777, 6161777, 6171777, 6181777, 6191777, 6201777, 6211777, 6221777, 6231777, 6241777, 6251777, 6261777, ...</msg>
<status status="PASS" starttime="20201112 12:28:55.570" endtime="20201112 12:28:55.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.584" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:55.582" endtime="20201112 12:28:55.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.589" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:55.587" endtime="20201112 12:28:55.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.576" endtime="20201112 12:28:55.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.601" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:55.599" endtime="20201112 12:28:55.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.606" level="INFO">VALUE: 6081768</msg>
<status status="PASS" starttime="20201112 12:28:55.603" endtime="20201112 12:28:55.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.592" endtime="20201112 12:28:55.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.618" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:55.616" endtime="20201112 12:28:55.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.623" level="INFO">VALUE: [6091777, 6101777, 6111777, 6121777, 6131777, 6141777, 6151777, 6161777, 6171777, 6181777, 6191777, 6201777, 6211777, 6221777, 6231777, 6241777, 6251777, 6261777, 6271777, 6281777, 6291777, 6301777, 6311777, 6321777, 6331777, 6341777, 6351777, 6361777, 6371777, 6381777, 6391777, 6401777, 6411777, 6421777, 6431777, 6441777, 6451777, 6461777, 6471777, 6481777, 6491777, 6501777, 6511777, 6521777, 6531777, 6541777, 6551777, 6561777, 6571777, 6581777, 6591777, 6601777, 6611777, 6621777, 6631777, 6641777, 6651777, 6661777, 6671777, 6681777, 6691777, 6701777, 6711777, 6721777, 6731777, 6741777, 6751777, 6761777, 6771777, 6781777, 6791777, 6801777, 6811777, 6821777, 6831777, 6841777, 6851777, 6861777, 6871777, 6881777, 6891777, 6901777, 6911777, 6921777, 6931777, 6941777, 6951777, 6961777, 6971777, 6981777, 6991777, 7001777, 7011777, 7021777, 7031777, 7041777, 7051777, 7061777, 7071777, 7081777]</msg>
<status status="PASS" starttime="20201112 12:28:55.620" endtime="20201112 12:28:55.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.609" endtime="20201112 12:28:55.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.643" endtime="20201112 12:28:55.984"></status>
</kw>
<msg timestamp="20201112 12:28:55.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038086097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048096278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:55.639" endtime="20201112 12:28:55.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038086097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048096278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:55.992" endtime="20201112 12:28:56.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.009" endtime="20201112 12:28:56.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.632" endtime="20201112 12:28:56.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.627" endtime="20201112 12:28:56.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:56.071" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:56.018" endtime="20201112 12:28:56.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.082" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:56.080" endtime="20201112 12:28:56.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.086" level="INFO">VALUE: 0.038086097</msg>
<status status="PASS" starttime="20201112 12:28:56.084" endtime="20201112 12:28:56.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.073" endtime="20201112 12:28:56.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.100" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:56.098" endtime="20201112 12:28:56.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.105" level="INFO">VALUE: [0.048096278, 0.058097458, 0.068098431, 0.078099625, 0.088100611, 0.098101764, 0.108102764, 0.118103917, 0.128104944, 0.138106097, 0.148107125, 0.15810825, 0.168109236, 0.178110403, 0.188111403, 0.198112583, 0.208113583, 0.218114736, 0.228115722, 0.238116889, 0.248117917, 0.258119069, 0.268120097, 0.278121222, 0.288122222, 0.298123375, 0.308124375, 0.318125556, 0.328126542, 0.338127708, 0.348128694, 0.358129861, 0.368130875, 0.378132042, 0.388133028, 0.398134208, 0.408135194, 0.418136361, 0.428137347, 0.438138542, 0.448139528, 0.458140681, 0.468141764, 0.478142847, 0.488143861, 0.498145014, 0.508146, 0.518147167, 0.528148181, 0.538149347, 0.548150333, 0.558151528, 0.5681525, 0.578153681, 0.588154667, 0.598155833, 0.608156819, 0.618158014, 0.628158986, 0.638160181, 0.648161167, 0.658162319, 0.668163319, 0.678164486, 0.688165514, 0.698166639, 0.708167667, 0.718168806, 0.728169806, 0.738170972, 0.748171972, 0.758173181, 0.768174139, 0.778175306, 0.788176292, 0.798177458, 0.808178458, 0.818179639, 0.828180639, 0.838181792, 0.848182792, 0.858183986, 0.868184958, 0.878186111, 0.888187111, 0.898188292, 0.908189278, 0.918190444, 0.928191444, 0.938192611, 0.948193625, 0.958194792, 0.968195764, 0.978196931, 0.988197944, 0.998199097, 1.008200139, 1.018201306, 1.028202278, 1.038203431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:56.103" endtime="20201112 12:28:56.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.090" endtime="20201112 12:28:56.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.114" endtime="20201112 12:28:56.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:56.122" endtime="20201112 12:28:56.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.118" endtime="20201112 12:28:56.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.109" endtime="20201112 12:28:56.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.421" endtime="20201112 12:28:56.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.090" endtime="20201112 12:28:56.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.088" endtime="20201112 12:28:56.149"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:56.154" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.176" endtime="20201112 12:28:58.279"></status>
</kw>
<msg timestamp="20201112 12:28:58.280" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8815200, 'wakeups': [8825217, 8835216, 8845216, 8855216, 8865216, 8875...</msg>
<status status="PASS" starttime="20201112 12:28:56.172" endtime="20201112 12:28:58.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.283" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8815200, 'wakeups': [8825217, 8835216, 8845216, 8855216, 8865216, 8875...</msg>
<status status="PASS" starttime="20201112 12:28:58.281" endtime="20201112 12:28:58.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.284" endtime="20201112 12:28:58.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.164" endtime="20201112 12:28:58.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.159" endtime="20201112 12:28:58.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:58.290" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [8825217, 8835216, 8845216, 8855216, 8865216, 8875216, 8885216, 8895216, 8905216, 8915216, 8925216, 8935216, 8945216, 8955216, 8965216, 8975216, 8985216, 8995216, ...</msg>
<status status="PASS" starttime="20201112 12:28:58.288" endtime="20201112 12:28:58.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.295" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:58.294" endtime="20201112 12:28:58.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.297" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:58.296" endtime="20201112 12:28:58.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.291" endtime="20201112 12:28:58.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.303" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:58.302" endtime="20201112 12:28:58.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.305" level="INFO">VALUE: 8815200</msg>
<status status="PASS" starttime="20201112 12:28:58.304" endtime="20201112 12:28:58.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.299" endtime="20201112 12:28:58.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.312" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:58.311" endtime="20201112 12:28:58.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.315" level="INFO">VALUE: [8825217, 8835216, 8845216, 8855216, 8865216, 8875216, 8885216, 8895216, 8905216, 8915216, 8925216, 8935216, 8945216, 8955216, 8965216, 8975216, 8985216, 8995216, 9005216, 9015216, 9025216, 9035216, 9045216, 9055216, 9065216, 9075216, 9085216, 9095216, 9105216, 9115216, 9125216, 9135216, 9145216, 9155216, 9165216, 9175216, 9185216, 9195216, 9205216, 9215216, 9225216, 9235216, 9245216, 9255216, 9265216, 9275216, 9285216, 9295216, 9305216, 9315216, 9325216, 9335216, 9345216, 9355216, 9365216, 9375216, 9385216, 9395216, 9405216, 9415216, 9425216, 9435216, 9445216, 9455216, 9465216, 9475216, 9485216, 9495216, 9505216, 9515216, 9525216, 9535216, 9545216, 9555216, 9565216, 9575216, 9585216, 9595216, 9605216, 9615216, 9625216, 9635216, 9645216, 9655216, 9665216, 9675216, 9685216, 9695216, 9705216, 9715216, 9725216, 9735216, 9745216, 9755216, 9765216, 9775216, 9785216, 9795216, 9805216, 9815216]</msg>
<status status="PASS" starttime="20201112 12:28:58.313" endtime="20201112 12:28:58.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.307" endtime="20201112 12:28:58.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.323" endtime="20201112 12:28:58.638"></status>
</kw>
<msg timestamp="20201112 12:28:58.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04480225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054820361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:58.322" endtime="20201112 12:28:58.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04480225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054820361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:58.647" endtime="20201112 12:28:58.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.664" endtime="20201112 12:28:58.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.318" endtime="20201112 12:28:58.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.316" endtime="20201112 12:28:58.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:58.725" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:58.673" endtime="20201112 12:28:58.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.735" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:58.733" endtime="20201112 12:28:58.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.740" level="INFO">VALUE: 0.04480225</msg>
<status status="PASS" starttime="20201112 12:28:58.738" endtime="20201112 12:28:58.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.727" endtime="20201112 12:28:58.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.753" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:58.751" endtime="20201112 12:28:58.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.758" level="INFO">VALUE: [0.054820361, 0.064820514, 0.074821528, 0.084822681, 0.094823681, 0.104824833, 0.114825847, 0.124827, 0.134828042, 0.144829167, 0.154830167, 0.164831319, 0.174832319, 0.184833472, 0.194834472, 0.204835639, 0.214836639, 0.224837806, 0.234838792, 0.244839958, 0.254840958, 0.264842139, 0.274843125, 0.284844278, 0.294845292, 0.304846444, 0.314847472, 0.324848597, 0.334849597, 0.344850764, 0.354851764, 0.364852958, 0.374853917, 0.384855097, 0.394856083, 0.40485725, 0.414858236, 0.424859417, 0.434860403, 0.444861569, 0.454862569, 0.464863736, 0.474864722, 0.484865903, 0.494866958, 0.504868056, 0.514869097, 0.524870222, 0.534871208, 0.544872375, 0.554873389, 0.564874542, 0.574875611, 0.584876708, 0.594877694, 0.604878903, 0.614879861, 0.624881042, 0.634882028, 0.644883236, 0.654884222, 0.664885389, 0.674886347, 0.684887528, 0.694888514, 0.704889708, 0.714890667, 0.724891861, 0.734892847, 0.744894014, 0.754895028, 0.764896167, 0.774897167, 0.784898319, 0.794899347, 0.804900514, 0.814901514, 0.824902653, 0.834903681, 0.844904806, 0.854905806, 0.864906986, 0.874907972, 0.884909139, 0.894910139, 0.904911361, 0.914912306, 0.924913514, 0.934914472, 0.944915639, 0.954916625, 0.964917792, 0.974918778, 0.984919958, 0.994920958, 1.004922111, 1.014923097, 1.024924264, 1.034925264, 1.044926431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:58.756" endtime="20201112 12:28:58.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.744" endtime="20201112 12:28:58.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.767" endtime="20201112 12:28:58.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:58.775" endtime="20201112 12:28:58.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.771" endtime="20201112 12:28:58.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.762" endtime="20201112 12:28:58.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.155" endtime="20201112 12:28:58.801"></status>
</kw>
<msg timestamp="20201112 12:28:58.801" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.822" endtime="20201112 12:29:00.940"></status>
</kw>
<msg timestamp="20201112 12:29:00.942" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11461515, 'wakeups': [11471532, 11481531, 11491531, 11501531, 11511531...</msg>
<status status="PASS" starttime="20201112 12:28:58.819" endtime="20201112 12:29:00.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.949" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11461515, 'wakeups': [11471532, 11481531, 11491531, 11501531, 11511531...</msg>
<status status="PASS" starttime="20201112 12:29:00.944" endtime="20201112 12:29:00.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.951" endtime="20201112 12:29:00.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.811" endtime="20201112 12:29:00.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.806" endtime="20201112 12:29:00.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:00.964" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [11471532, 11481531, 11491531, 11501531, 11511531, 11521531, 11531531, 11541531, 11551531, 11561531, 11571531, 11581531, 11591531, 11601531, 11611531, 11621531, 11...</msg>
<status status="PASS" starttime="20201112 12:29:00.959" endtime="20201112 12:29:00.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.975" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:00.972" endtime="20201112 12:29:00.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.979" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:00.977" endtime="20201112 12:29:00.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.966" endtime="20201112 12:29:00.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.992" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:00.989" endtime="20201112 12:29:00.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.996" level="INFO">VALUE: 11461515</msg>
<status status="PASS" starttime="20201112 12:29:00.994" endtime="20201112 12:29:00.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.983" endtime="20201112 12:29:00.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.008" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:01.006" endtime="20201112 12:29:01.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.013" level="INFO">VALUE: [11471532, 11481531, 11491531, 11501531, 11511531, 11521531, 11531531, 11541531, 11551531, 11561531, 11571531, 11581531, 11591531, 11601531, 11611531, 11621531, 11631531, 11641531, 11651531, 11661531, 11671531, 11681531, 11691531, 11701531, 11711531, 11721531, 11731531, 11741531, 11751531, 11761531, 11771531, 11781531, 11791531, 11801531, 11811531, 11821531, 11831531, 11841531, 11851531, 11861531, 11871531, 11881531, 11891531, 11901531, 11911531, 11921531, 11931531, 11941531, 11951531, 11961531, 11971531, 11981531, 11991531, 12001531, 12011531, 12021531, 12031531, 12041531, 12051531, 12061531, 12071531, 12081531, 12091531, 12101531, 12111531, 12121531, 12131531, 12141531, 12151531, 12161531, 12171531, 12181531, 12191531, 12201531, 12211531, 12221531, 12231531, 12241531, 12251531, 12261531, 12271531, 12281531, 12291531, 12301531, 12311531, 12321531, 12331531, 12341531, 12351531, 12361531, 12371531, 12381531, 12391531, 12401531, 12411531, 12421531, 12431531, 12441531, 12451531, 12461531]</msg>
<status status="PASS" starttime="20201112 12:29:01.011" endtime="20201112 12:29:01.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.000" endtime="20201112 12:29:01.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.032" endtime="20201112 12:29:01.373"></status>
</kw>
<msg timestamp="20201112 12:29:01.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048298333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.029" endtime="20201112 12:29:01.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048298333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.382" endtime="20201112 12:29:01.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.398" endtime="20201112 12:29:01.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.022" endtime="20201112 12:29:01.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.017" endtime="20201112 12:29:01.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:01.461" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:01.408" endtime="20201112 12:29:01.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.472" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:01.469" endtime="20201112 12:29:01.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.476" level="INFO">VALUE: 0.038279875</msg>
<status status="PASS" starttime="20201112 12:29:01.474" endtime="20201112 12:29:01.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.463" endtime="20201112 12:29:01.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.489" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:01.487" endtime="20201112 12:29:01.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.499" level="INFO">VALUE: [0.048298333, 0.058298486, 0.0682995, 0.078300653, 0.088301639, 0.098302806, 0.108303806, 0.118304958, 0.128305958, 0.138307125, 0.148308111, 0.158309278, 0.168310278, 0.178311431, 0.188312444, 0.198313597, 0.208314597, 0.218315792, 0.22831675, 0.238317917, 0.248318903, 0.258320069, 0.268321069, 0.27832225, 0.288323222, 0.298324458, 0.308325389, 0.318326611, 0.328327583, 0.338328708, 0.348329708, 0.358330861, 0.368331875, 0.378333028, 0.388334097, 0.398335181, 0.408336181, 0.418337347, 0.428338347, 0.4383395, 0.4483405, 0.458341722, 0.468342681, 0.478343833, 0.488344833, 0.498345986, 0.508346986, 0.518348153, 0.528349153, 0.538350306, 0.548351306, 0.558352514, 0.568353472, 0.578354639, 0.588355653, 0.598356792, 0.608357792, 0.618358958, 0.628359944, 0.638361125, 0.648362125, 0.658363347, 0.668364264, 0.678365431, 0.688366472, 0.698367597, 0.708368597, 0.718369764, 0.728370764, 0.738371931, 0.748372917, 0.758374083, 0.768375069, 0.778376236, 0.788377236, 0.798378417, 0.808379403, 0.818380556, 0.828381556, 0.838382722, 0.848383722, 0.858384889, 0.868385875, 0.878387056, 0.888388042, 0.898389208, 0.90839025, 0.918391361, 0.928392361, 0.938393528, 0.948394514, 0.958395681, 0.968396708, 0.978397847, 0.988398903, 0.998400028, 1.008401014, 1.018402181, 1.028403181, 1.038404319] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:01.492" endtime="20201112 12:29:01.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.480" endtime="20201112 12:29:01.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.508" endtime="20201112 12:29:01.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:01.512" endtime="20201112 12:29:01.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.510" endtime="20201112 12:29:01.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.503" endtime="20201112 12:29:01.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.803" endtime="20201112 12:29:01.533"></status>
</kw>
<msg timestamp="20201112 12:29:01.533" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.543" endtime="20201112 12:29:03.661"></status>
</kw>
<msg timestamp="20201112 12:29:03.662" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14180829, 'wakeups': [14190846, 14200845, 14210845, 14220845, 14230845...</msg>
<status status="PASS" starttime="20201112 12:29:01.541" endtime="20201112 12:29:03.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.669" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14180829, 'wakeups': [14190846, 14200845, 14210845, 14220845, 14230845...</msg>
<status status="PASS" starttime="20201112 12:29:03.665" endtime="20201112 12:29:03.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.672" endtime="20201112 12:29:03.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.538" endtime="20201112 12:29:03.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.536" endtime="20201112 12:29:03.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:03.686" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [14190846, 14200845, 14210845, 14220845, 14230845, 14240845, 14250845, 14260845, 14270845, 14280845, 14290845, 14300845, 14310845, 14320845, 14330845, 14340845, 14...</msg>
<status status="PASS" starttime="20201112 12:29:03.680" endtime="20201112 12:29:03.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.697" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:03.694" endtime="20201112 12:29:03.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.701" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:03.699" endtime="20201112 12:29:03.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.688" endtime="20201112 12:29:03.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.713" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:03.711" endtime="20201112 12:29:03.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.718" level="INFO">VALUE: 14180829</msg>
<status status="PASS" starttime="20201112 12:29:03.716" endtime="20201112 12:29:03.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.705" endtime="20201112 12:29:03.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.730" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:03.728" endtime="20201112 12:29:03.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.736" level="INFO">VALUE: [14190846, 14200845, 14210845, 14220845, 14230845, 14240845, 14250845, 14260845, 14270845, 14280845, 14290845, 14300845, 14310845, 14320845, 14330845, 14340845, 14350845, 14360845, 14370845, 14380845, 14390845, 14400845, 14410845, 14420845, 14430845, 14440845, 14450845, 14460845, 14470845, 14480845, 14490845, 14500845, 14510845, 14520845, 14530845, 14540845, 14550845, 14560845, 14570845, 14580845, 14590845, 14600845, 14610845, 14620845, 14630845, 14640845, 14650845, 14660845, 14670845, 14680845, 14690845, 14700845, 14710845, 14720845, 14730845, 14740845, 14750845, 14760845, 14770845, 14780845, 14790845, 14800845, 14810845, 14820845, 14830845, 14840845, 14850845, 14860845, 14870845, 14880845, 14890845, 14900845, 14910845, 14920845, 14930845, 14940845, 14950845, 14960845, 14970845, 14980845, 14990845, 15000845, 15010845, 15020845, 15030845, 15040845, 15050845, 15060845, 15070845, 15080845, 15090845, 15100845, 15110845, 15120845, 15130845, 15140845, 15150845, 15160845, 15170845, 15180845]</msg>
<status status="PASS" starttime="20201112 12:29:03.732" endtime="20201112 12:29:03.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.721" endtime="20201112 12:29:03.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.755" endtime="20201112 12:29:04.096"></status>
</kw>
<msg timestamp="20201112 12:29:04.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031769264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:03.751" endtime="20201112 12:29:04.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031769264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:04.105" endtime="20201112 12:29:04.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.122" endtime="20201112 12:29:04.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.744" endtime="20201112 12:29:04.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.739" endtime="20201112 12:29:04.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:04.183" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:04.131" endtime="20201112 12:29:04.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.194" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:29:04.191" endtime="20201112 12:29:04.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.198" level="INFO">VALUE: 0.021750764</msg>
<status status="PASS" starttime="20201112 12:29:04.196" endtime="20201112 12:29:04.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.185" endtime="20201112 12:29:04.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.212" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:04.209" endtime="20201112 12:29:04.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.216" level="INFO">VALUE: [0.031769264, 0.041769361, 0.051770375, 0.061771542, 0.071772514, 0.081773681, 0.091774667, 0.101775903, 0.111776847, 0.121778014, 0.131778986, 0.141780167, 0.151781139, 0.161782306, 0.171783306, 0.181784528, 0.1917855, 0.201786611, 0.211787611, 0.221788792, 0.231789778, 0.241790931, 0.251791917, 0.261793097, 0.271794083, 0.28179525, 0.29179625, 0.301797403, 0.311798389, 0.321799556, 0.331800556, 0.341801708, 0.351802708, 0.361803875, 0.371804861, 0.381806097, 0.391807042, 0.401808236, 0.411809194, 0.421810347, 0.431811347, 0.4418125, 0.4518135, 0.461814667, 0.471815653, 0.481816819, 0.491817833, 0.501819014, 0.511819972, 0.521821139, 0.531822139, 0.541823292, 0.551824306, 0.561825472, 0.571826486, 0.581827611, 0.591828611, 0.601829778, 0.611830764, 0.621831944, 0.631832944, 0.641834111, 0.651835083, 0.66183625, 0.67183725, 0.681838403, 0.691839417, 0.701840569, 0.711841556, 0.721842722, 0.731843736, 0.741844889, 0.751845917, 0.761847056, 0.771848056, 0.78184925, 0.791850194, 0.801851361, 0.811852361, 0.821853514, 0.831854514, 0.841855681, 0.851856667, 0.861857847, 0.871858861, 0.88186, 0.891860986, 0.901862153, 0.911863153, 0.921864319, 0.931865306, 0.9418665, 0.951867486, 0.961868625, 0.971869639, 0.981870792, 0.991871778, 1.001872944, 1.011873958, 1.021875111] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:04.214" endtime="20201112 12:29:04.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.202" endtime="20201112 12:29:04.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.225" endtime="20201112 12:29:04.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:04.233" endtime="20201112 12:29:04.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.229" endtime="20201112 12:29:04.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.220" endtime="20201112 12:29:04.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.534" endtime="20201112 12:29:04.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.151" endtime="20201112 12:29:04.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.149" endtime="20201112 12:29:04.260"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:04.266" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.287" endtime="20201112 12:29:06.405"></status>
</kw>
<msg timestamp="20201112 12:29:06.406" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16926152, 'wakeups': [16936177, 16946177, 16956177, 16966177, 16976177...</msg>
<status status="PASS" starttime="20201112 12:29:04.284" endtime="20201112 12:29:06.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.413" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16926152, 'wakeups': [16936177, 16946177, 16956177, 16966177, 16976177...</msg>
<status status="PASS" starttime="20201112 12:29:06.409" endtime="20201112 12:29:06.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.416" endtime="20201112 12:29:06.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.276" endtime="20201112 12:29:06.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.271" endtime="20201112 12:29:06.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:06.429" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [16936177, 16946177, 16956177, 16966177, 16976177, 16986177, 16996177, 17006177, 17016177, 17026177, 17036177, 17046177, 17056177, 17066177, 17076177, 17086177, 17...</msg>
<status status="PASS" starttime="20201112 12:29:06.424" endtime="20201112 12:29:06.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.439" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:06.436" endtime="20201112 12:29:06.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.443" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:06.441" endtime="20201112 12:29:06.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.431" endtime="20201112 12:29:06.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.450" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:06.449" endtime="20201112 12:29:06.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.452" level="INFO">VALUE: 16926152</msg>
<status status="PASS" starttime="20201112 12:29:06.451" endtime="20201112 12:29:06.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.446" endtime="20201112 12:29:06.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.458" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:06.457" endtime="20201112 12:29:06.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.460" level="INFO">VALUE: [16936177, 16946177, 16956177, 16966177, 16976177, 16986177, 16996177, 17006177, 17016177, 17026177, 17036177, 17046177, 17056177, 17066177, 17076177, 17086177, 17096177, 17106177, 17116177, 17126177, 17136177, 17146177, 17156177, 17166177, 17176177, 17186177, 17196177, 17206177, 17216177, 17226177, 17236177, 17246177, 17256177, 17266177, 17276177, 17286177, 17296177, 17306177, 17316177, 17326177, 17336177, 17346177, 17356177, 17366177, 17376177, 17386177, 17396177, 17406177, 17416177, 17426177, 17436177, 17446177, 17456177, 17466177, 17476177, 17486177, 17496177, 17506177, 17516177, 17526177, 17536177, 17546177, 17556177, 17566177, 17576177, 17586177, 17596177, 17606177, 17616177, 17626177, 17636177, 17646177, 17656177, 17666177, 17676177, 17686177, 17696177, 17706177, 17716177, 17726177, 17736177, 17746177, 17756177, 17766177, 17776177, 17786177, 17796177, 17806177, 17816177, 17826177, 17836177, 17846177, 17856177, 17866177, 17876177, 17886177, 17896177, 17906177, 17916177, 17926177]</msg>
<status status="PASS" starttime="20201112 12:29:06.459" endtime="20201112 12:29:06.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.454" endtime="20201112 12:29:06.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.471" endtime="20201112 12:29:06.780"></status>
</kw>
<msg timestamp="20201112 12:29:06.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044875153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054902542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:06.469" endtime="20201112 12:29:06.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044875153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054902542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:06.788" endtime="20201112 12:29:06.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.805" endtime="20201112 12:29:06.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.464" endtime="20201112 12:29:06.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.462" endtime="20201112 12:29:06.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:06.865" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:06.814" endtime="20201112 12:29:06.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.876" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:06.874" endtime="20201112 12:29:06.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.881" level="INFO">VALUE: 0.044875153</msg>
<status status="PASS" starttime="20201112 12:29:06.878" endtime="20201112 12:29:06.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.867" endtime="20201112 12:29:06.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.894" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:06.892" endtime="20201112 12:29:06.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.899" level="INFO">VALUE: [0.054902542, 0.064903639, 0.074904556, 0.084905722, 0.094906722, 0.104907875, 0.114908861, 0.124910069, 0.134911028, 0.144912181, 0.154913167, 0.164914333, 0.174915319, 0.184916528, 0.194917486, 0.204918653, 0.214919681, 0.224920792, 0.234921792, 0.244922972, 0.254923944, 0.264925111, 0.274926097, 0.284927278, 0.29492825, 0.304929417, 0.314930417, 0.324931583, 0.334932583, 0.344933792, 0.354934736, 0.364935889, 0.374936875, 0.384938042, 0.394939028, 0.404940194, 0.414941194, 0.424942347, 0.434943361, 0.444944514, 0.4549455, 0.464946694, 0.474947667, 0.484948819, 0.494949833, 0.504951014, 0.514951986, 0.524953139, 0.534954125, 0.544955306, 0.554956292, 0.564957444, 0.574958472, 0.584959597, 0.594960611, 0.604961764, 0.61496275, 0.624963944, 0.634964917, 0.644966097, 0.654967069, 0.664968236, 0.674969222, 0.684970389, 0.694971375, 0.704972542, 0.714973556, 0.724974694, 0.734975694, 0.744976861, 0.754977847, 0.764979042, 0.77498, 0.784981167, 0.794982167, 0.804983319, 0.814984333, 0.824985486, 0.834986472, 0.844987667, 0.854988625, 0.864989806, 0.874990819, 0.884991944, 0.894992944, 0.904994139, 0.914995111, 0.924996264, 0.93499725, 0.944998417, 0.954999417, 0.965000597, 0.975001597, 0.985002764, 0.99500375, 1.005004917, 1.015005931, 1.025007097, 1.035008097, 1.045009264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:06.896" endtime="20201112 12:29:06.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.884" endtime="20201112 12:29:06.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.907" endtime="20201112 12:29:06.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:06.916" endtime="20201112 12:29:06.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.911" endtime="20201112 12:29:06.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.903" endtime="20201112 12:29:06.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.267" endtime="20201112 12:29:06.941"></status>
</kw>
<msg timestamp="20201112 12:29:06.942" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.965" endtime="20201112 12:29:09.084"></status>
</kw>
<msg timestamp="20201112 12:29:09.086" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19604342, 'wakeups': [19614368, 19624367, 19634367, 19644367, 19654367...</msg>
<status status="PASS" starttime="20201112 12:29:06.962" endtime="20201112 12:29:09.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.093" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19604342, 'wakeups': [19614368, 19624367, 19634367, 19644367, 19654367...</msg>
<status status="PASS" starttime="20201112 12:29:09.088" endtime="20201112 12:29:09.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.096" endtime="20201112 12:29:09.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.952" endtime="20201112 12:29:09.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.947" endtime="20201112 12:29:09.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:09.109" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [19614368, 19624367, 19634367, 19644367, 19654367, 19664367, 19674367, 19684367, 19694367, 19704367, 19714367, 19724367, 19734367, 19744367, 19754367, 19764367, 19...</msg>
<status status="PASS" starttime="20201112 12:29:09.104" endtime="20201112 12:29:09.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.119" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:09.116" endtime="20201112 12:29:09.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.123" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:09.121" endtime="20201112 12:29:09.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.111" endtime="20201112 12:29:09.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.136" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:09.133" endtime="20201112 12:29:09.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.140" level="INFO">VALUE: 19604342</msg>
<status status="PASS" starttime="20201112 12:29:09.138" endtime="20201112 12:29:09.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.127" endtime="20201112 12:29:09.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.153" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:09.150" endtime="20201112 12:29:09.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.157" level="INFO">VALUE: [19614368, 19624367, 19634367, 19644367, 19654367, 19664367, 19674367, 19684367, 19694367, 19704367, 19714367, 19724367, 19734367, 19744367, 19754367, 19764367, 19774367, 19784367, 19794367, 19804367, 19814367, 19824367, 19834367, 19844367, 19854367, 19864367, 19874367, 19884367, 19894367, 19904367, 19914367, 19924367, 19934367, 19944367, 19954367, 19964367, 19974367, 19984367, 19994367, 20004367, 20014367, 20024367, 20034367, 20044367, 20054367, 20064367, 20074367, 20084367, 20094367, 20104367, 20114367, 20124367, 20134367, 20144367, 20154367, 20164367, 20174367, 20184367, 20194367, 20204367, 20214367, 20224367, 20234367, 20244367, 20254367, 20264367, 20274367, 20284367, 20294367, 20304367, 20314367, 20324367, 20334367, 20344367, 20354367, 20364367, 20374367, 20384367, 20394367, 20404367, 20414367, 20424367, 20434367, 20444367, 20454367, 20464367, 20474367, 20484367, 20494367, 20504367, 20514367, 20524367, 20534367, 20544367, 20554367, 20564367, 20574367, 20584367, 20594367, 20604367]</msg>
<status status="PASS" starttime="20201112 12:29:09.155" endtime="20201112 12:29:09.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.144" endtime="20201112 12:29:09.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.176" endtime="20201112 12:29:09.517"></status>
</kw>
<msg timestamp="20201112 12:29:09.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040536917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050564667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:09.173" endtime="20201112 12:29:09.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040536917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050564667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:09.525" endtime="20201112 12:29:09.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.542" endtime="20201112 12:29:09.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.166" endtime="20201112 12:29:09.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.161" endtime="20201112 12:29:09.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:09.603" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:09.551" endtime="20201112 12:29:09.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.615" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:09.613" endtime="20201112 12:29:09.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.619" level="INFO">VALUE: 0.040536917</msg>
<status status="PASS" starttime="20201112 12:29:09.617" endtime="20201112 12:29:09.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.606" endtime="20201112 12:29:09.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.633" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:09.630" endtime="20201112 12:29:09.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.637" level="INFO">VALUE: [0.050564667, 0.060564667, 0.070565667, 0.080566819, 0.090567847, 0.100568986, 0.110569986, 0.120571153, 0.130572208, 0.140573319, 0.150574306, 0.160575472, 0.170576472, 0.180577708, 0.190578667, 0.200579806, 0.210580833, 0.220581972, 0.230582972, 0.240584139, 0.250585139, 0.260586306, 0.270587306, 0.280588458, 0.290589472, 0.300590639, 0.310591653, 0.320592792, 0.330593806, 0.340594958, 0.350596, 0.360597153, 0.370598125, 0.380599292, 0.390600306, 0.400601458, 0.410602458, 0.420603639, 0.430604708, 0.440605806, 0.450606792, 0.460607958, 0.470609028, 0.480610181, 0.490611153, 0.500612292, 0.510613306, 0.520614458, 0.530615458, 0.540616625, 0.550617653, 0.560618792, 0.570619792, 0.580620958, 0.590621972, 0.600623125, 0.610624139, 0.620625292, 0.630626292, 0.640627458, 0.650628472, 0.660629625, 0.670630625, 0.680631778, 0.690632778, 0.700634028, 0.710634944, 0.720636125, 0.730637111, 0.740638333, 0.750639361, 0.760640444, 0.770641472, 0.780642625, 0.790643611, 0.800644847, 0.810645833, 0.820646958, 0.830647958, 0.840649111, 0.850650125, 0.860651278, 0.870652278, 0.880653458, 0.890654444, 0.900655611, 0.910656611, 0.920657778, 0.930658778, 0.940659944, 0.950660958, 0.960662111, 0.970663167, 0.980664306, 0.990665278, 1.000666458, 1.010667444, 1.020668625, 1.030669611, 1.040670792] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:09.635" endtime="20201112 12:29:09.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.623" endtime="20201112 12:29:09.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.646" endtime="20201112 12:29:09.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:09.655" endtime="20201112 12:29:09.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.650" endtime="20201112 12:29:09.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.642" endtime="20201112 12:29:09.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.943" endtime="20201112 12:29:09.680"></status>
</kw>
<msg timestamp="20201112 12:29:09.680" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.701" endtime="20201112 12:29:11.820"></status>
</kw>
<msg timestamp="20201112 12:29:11.821" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22340530, 'wakeups': [22350556, 22360555, 22370555, 22380555, 22390555...</msg>
<status status="PASS" starttime="20201112 12:29:09.698" endtime="20201112 12:29:11.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.829" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22340530, 'wakeups': [22350556, 22360555, 22370555, 22380555, 22390555...</msg>
<status status="PASS" starttime="20201112 12:29:11.824" endtime="20201112 12:29:11.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.831" endtime="20201112 12:29:11.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.691" endtime="20201112 12:29:11.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.685" endtime="20201112 12:29:11.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:11.845" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [22350556, 22360555, 22370555, 22380555, 22390555, 22400555, 22410555, 22420555, 22430555, 22440555, 22450555, 22460555, 22470555, 22480555, 22490555, 22500555, 22...</msg>
<status status="PASS" starttime="20201112 12:29:11.840" endtime="20201112 12:29:11.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.855" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:11.853" endtime="20201112 12:29:11.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.858" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:11.857" endtime="20201112 12:29:11.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.847" endtime="20201112 12:29:11.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.864" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:11.863" endtime="20201112 12:29:11.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.867" level="INFO">VALUE: 22340530</msg>
<status status="PASS" starttime="20201112 12:29:11.865" endtime="20201112 12:29:11.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.860" endtime="20201112 12:29:11.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.873" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:11.871" endtime="20201112 12:29:11.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.875" level="INFO">VALUE: [22350556, 22360555, 22370555, 22380555, 22390555, 22400555, 22410555, 22420555, 22430555, 22440555, 22450555, 22460555, 22470555, 22480555, 22490555, 22500555, 22510555, 22520555, 22530555, 22540555, 22550555, 22560555, 22570555, 22580555, 22590555, 22600555, 22610555, 22620555, 22630555, 22640555, 22650555, 22660555, 22670555, 22680555, 22690555, 22700555, 22710555, 22720555, 22730555, 22740555, 22750555, 22760555, 22770555, 22780555, 22790555, 22800555, 22810555, 22820555, 22830555, 22840555, 22850555, 22860555, 22870555, 22880555, 22890555, 22900555, 22910555, 22920555, 22930555, 22940555, 22950555, 22960555, 22970555, 22980555, 22990555, 23000555, 23010555, 23020555, 23030555, 23040555, 23050555, 23060555, 23070555, 23080555, 23090555, 23100555, 23110555, 23120555, 23130555, 23140555, 23150555, 23160555, 23170555, 23180555, 23190555, 23200555, 23210555, 23220555, 23230555, 23240555, 23250555, 23260555, 23270555, 23280555, 23290555, 23300555, 23310555, 23320555, 23330555, 23340555]</msg>
<status status="PASS" starttime="20201112 12:29:11.874" endtime="20201112 12:29:11.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.868" endtime="20201112 12:29:11.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.885" endtime="20201112 12:29:12.178"></status>
</kw>
<msg timestamp="20201112 12:29:12.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038076306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048104042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:11.883" endtime="20201112 12:29:12.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038076306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048104042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:12.182" endtime="20201112 12:29:12.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.189" endtime="20201112 12:29:12.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.880" endtime="20201112 12:29:12.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.877" endtime="20201112 12:29:12.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:12.216" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:12.193" endtime="20201112 12:29:12.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.221" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:29:12.220" endtime="20201112 12:29:12.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.223" level="INFO">VALUE: 0.038076306</msg>
<status status="PASS" starttime="20201112 12:29:12.222" endtime="20201112 12:29:12.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.217" endtime="20201112 12:29:12.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.235" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:12.233" endtime="20201112 12:29:12.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:12.239" level="INFO">VALUE: [0.048104042, 0.058104069, 0.068105097, 0.078106236, 0.088107222, 0.098108417, 0.108109389, 0.118110569, 0.128111542, 0.138112708, 0.148113722, 0.158114917, 0.168115903, 0.178117056, 0.188118056, 0.198119208, 0.20812025, 0.218121375, 0.228122375, 0.238123528, 0.248124528, 0.258125694, 0.268126736, 0.278127861, 0.288128889, 0.298130028, 0.308131042, 0.318132194, 0.328133181, 0.338134347, 0.348135347, 0.358136514, 0.368137583, 0.378138681, 0.388139681, 0.398140917, 0.408141847, 0.418143014, 0.428144028, 0.438145194, 0.448146181, 0.458147347, 0.468148361, 0.478149514, 0.488150583, 0.498151694, 0.508152667, 0.518153861, 0.528154833, 0.538156, 0.548157, 0.558158167, 0.568159167, 0.578160347, 0.588161333, 0.5981625, 0.6081635, 0.618164667, 0.628165667, 0.638166847, 0.648167833, 0.658169014, 0.66817, 0.678171181, 0.688172167, 0.698173333, 0.708174333, 0.7181755, 0.7281765, 0.738177667, 0.748178736, 0.758179833, 0.768180833, 0.778182, 0.788182986, 0.798184153, 0.808185167, 0.818186319, 0.828187361, 0.8381885, 0.848189542, 0.858190667, 0.868191653, 0.878192861, 0.888193833, 0.898194986, 0.908196, 0.918197167, 0.928198167, 0.938199333, 0.948200319, 0.958201486, 0.968202486, 0.978203694, 0.988204653, 0.998205847, 1.008206819, 1.018207986, 1.028209069, 1.038210153] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:12.237" endtime="20201112 12:29:12.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.225" endtime="20201112 12:29:12.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.249" endtime="20201112 12:29:12.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:12.257" endtime="20201112 12:29:12.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.253" endtime="20201112 12:29:12.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.244" endtime="20201112 12:29:12.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.682" endtime="20201112 12:29:12.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.263" endtime="20201112 12:29:12.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.261" endtime="20201112 12:29:12.284"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:12.289" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:12.312" endtime="20201112 12:29:14.432"></status>
</kw>
<msg timestamp="20201112 12:29:14.434" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24951476, 'wakeups': [24961513, 24971512, 24981512, 24991512, 25001512...</msg>
<status status="PASS" starttime="20201112 12:29:12.309" endtime="20201112 12:29:14.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.440" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24951476, 'wakeups': [24961513, 24971512, 24981512, 24991512, 25001512...</msg>
<status status="PASS" starttime="20201112 12:29:14.436" endtime="20201112 12:29:14.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.443" endtime="20201112 12:29:14.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.301" endtime="20201112 12:29:14.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.295" endtime="20201112 12:29:14.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:14.456" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [24961513, 24971512, 24981512, 24991512, 25001512, 25011512, 25021512, 25031512, 25041512, 25051512, 25061512, 25071512, 25081512, 25091512, 25101512, 25111512, 25...</msg>
<status status="PASS" starttime="20201112 12:29:14.451" endtime="20201112 12:29:14.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.466" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:14.464" endtime="20201112 12:29:14.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.470" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:14.468" endtime="20201112 12:29:14.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.457" endtime="20201112 12:29:14.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.483" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:14.480" endtime="20201112 12:29:14.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.487" level="INFO">VALUE: 24951476</msg>
<status status="PASS" starttime="20201112 12:29:14.485" endtime="20201112 12:29:14.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.474" endtime="20201112 12:29:14.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.499" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:14.497" endtime="20201112 12:29:14.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.504" level="INFO">VALUE: [24961513, 24971512, 24981512, 24991512, 25001512, 25011512, 25021512, 25031512, 25041512, 25051512, 25061512, 25071512, 25081512, 25091512, 25101512, 25111512, 25121512, 25131512, 25141512, 25151512, 25161512, 25171512, 25181512, 25191512, 25201512, 25211512, 25221512, 25231512, 25241512, 25251512, 25261512, 25271512, 25281512, 25291512, 25301512, 25311512, 25321512, 25331512, 25341512, 25351512, 25361512, 25371512, 25381512, 25391512, 25401512, 25411512, 25421512, 25431512, 25441512, 25451512, 25461512, 25471512, 25481512, 25491512, 25501512, 25511512, 25521512, 25531512, 25541512, 25551512, 25561512, 25571512, 25581512, 25591512, 25601512, 25611512, 25621512, 25631512, 25641512, 25651512, 25661512, 25671512, 25681512, 25691512, 25701512, 25711512, 25721512, 25731512, 25741512, 25751512, 25761512, 25771512, 25781512, 25791512, 25801512, 25811512, 25821512, 25831512, 25841512, 25851512, 25861512, 25871512, 25881512, 25891512, 25901512, 25911512, 25921512, 25931512, 25941512, 25951512]</msg>
<status status="PASS" starttime="20201112 12:29:14.502" endtime="20201112 12:29:14.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.491" endtime="20201112 12:29:14.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.524" endtime="20201112 12:29:14.865"></status>
</kw>
<msg timestamp="20201112 12:29:14.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045990347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056028861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:14.521" endtime="20201112 12:29:14.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045990347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056028861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:14.874" endtime="20201112 12:29:14.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.891" endtime="20201112 12:29:14.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.513" endtime="20201112 12:29:14.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.509" endtime="20201112 12:29:14.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:14.954" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:14.900" endtime="20201112 12:29:14.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.965" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:14.962" endtime="20201112 12:29:14.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.969" level="INFO">VALUE: 0.045990347</msg>
<status status="PASS" starttime="20201112 12:29:14.967" endtime="20201112 12:29:14.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.956" endtime="20201112 12:29:14.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.983" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:14.980" endtime="20201112 12:29:14.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.987" level="INFO">VALUE: [0.056028861, 0.066028764, 0.076029764, 0.086030944, 0.096031944, 0.106033097, 0.116034097, 0.12603525, 0.136036264, 0.146037403, 0.156038403, 0.166039569, 0.176040611, 0.18604175, 0.196042722, 0.206043917, 0.216044903, 0.226046097, 0.236047083, 0.246048236, 0.256049208, 0.266050403, 0.276051431, 0.286052542, 0.296053542, 0.306054708, 0.316055708, 0.326056861, 0.336057875, 0.346059042, 0.356060028, 0.366061194, 0.376062181, 0.386063347, 0.396064347, 0.406065514, 0.416066528, 0.426067681, 0.436068681, 0.446069847, 0.456070833, 0.466072, 0.476073014, 0.486074167, 0.496075222, 0.506076389, 0.516077333, 0.5260785, 0.536079486, 0.546080667, 0.556081653, 0.566082833, 0.576083819, 0.586085042, 0.596085986, 0.606087153, 0.616088153, 0.626089306, 0.636090347, 0.646091472, 0.656092472, 0.666093653, 0.676094653, 0.686095806, 0.696096819, 0.706097972, 0.716098958, 0.726100125, 0.736101125, 0.746102292, 0.756103292, 0.7661045, 0.776105472, 0.786106625, 0.796107625, 0.806108778, 0.816109792, 0.826110944, 0.836111958, 0.846113125, 0.856114111, 0.866115278, 0.876116292, 0.886117431, 0.896118431, 0.906119597, 0.916120611, 0.926121806, 0.936122806, 0.946123944, 0.956124944, 0.966126097, 0.976127097, 0.98612825, 0.996129264, 1.006130431, 1.016131417, 1.026132611, 1.036133583, 1.04613475] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:14.985" endtime="20201112 12:29:14.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.973" endtime="20201112 12:29:14.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.996" endtime="20201112 12:29:14.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:15.005" endtime="20201112 12:29:15.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.000" endtime="20201112 12:29:15.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.992" endtime="20201112 12:29:15.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.291" endtime="20201112 12:29:15.030"></status>
</kw>
<msg timestamp="20201112 12:29:15.031" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:15.052" endtime="20201112 12:29:17.169"></status>
</kw>
<msg timestamp="20201112 12:29:17.170" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27691417, 'wakeups': [27701454, 27711453, 27721453, 27731453, 27741453...</msg>
<status status="PASS" starttime="20201112 12:29:15.048" endtime="20201112 12:29:17.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27691417, 'wakeups': [27701454, 27711453, 27721453, 27731453, 27741453...</msg>
<status status="PASS" starttime="20201112 12:29:17.171" endtime="20201112 12:29:17.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:17.174" endtime="20201112 12:29:17.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.041" endtime="20201112 12:29:17.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.036" endtime="20201112 12:29:17.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:17.181" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [27701454, 27711453, 27721453, 27731453, 27741453, 27751453, 27761453, 27771453, 27781453, 27791453, 27801453, 27811453, 27821453, 27831453, 27841453, 27851453, 27...</msg>
<status status="PASS" starttime="20201112 12:29:17.178" endtime="20201112 12:29:17.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.186" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:17.184" endtime="20201112 12:29:17.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.188" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:17.187" endtime="20201112 12:29:17.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.182" endtime="20201112 12:29:17.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.194" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:17.192" endtime="20201112 12:29:17.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.196" level="INFO">VALUE: 27691417</msg>
<status status="PASS" starttime="20201112 12:29:17.195" endtime="20201112 12:29:17.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.189" endtime="20201112 12:29:17.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.203" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:17.201" endtime="20201112 12:29:17.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.205" level="INFO">VALUE: [27701454, 27711453, 27721453, 27731453, 27741453, 27751453, 27761453, 27771453, 27781453, 27791453, 27801453, 27811453, 27821453, 27831453, 27841453, 27851453, 27861453, 27871453, 27881453, 27891453, 27901453, 27911453, 27921453, 27931453, 27941453, 27951453, 27961453, 27971453, 27981453, 27991453, 28001453, 28011453, 28021453, 28031453, 28041453, 28051453, 28061453, 28071453, 28081453, 28091453, 28101453, 28111453, 28121453, 28131453, 28141453, 28151453, 28161453, 28171453, 28181453, 28191453, 28201453, 28211453, 28221453, 28231453, 28241453, 28251453, 28261453, 28271453, 28281453, 28291453, 28301453, 28311453, 28321453, 28331453, 28341453, 28351453, 28361453, 28371453, 28381453, 28391453, 28401453, 28411453, 28421453, 28431453, 28441453, 28451453, 28461453, 28471453, 28481453, 28491453, 28501453, 28511453, 28521453, 28531453, 28541453, 28551453, 28561453, 28571453, 28581453, 28591453, 28601453, 28611453, 28621453, 28631453, 28641453, 28651453, 28661453, 28671453, 28681453, 28691453]</msg>
<status status="PASS" starttime="20201112 12:29:17.204" endtime="20201112 12:29:17.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.197" endtime="20201112 12:29:17.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:17.214" endtime="20201112 12:29:17.545"></status>
</kw>
<msg timestamp="20201112 12:29:17.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038858903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04889775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:17.212" endtime="20201112 12:29:17.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038858903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04889775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:17.554" endtime="20201112 12:29:17.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:17.571" endtime="20201112 12:29:17.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.209" endtime="20201112 12:29:17.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.207" endtime="20201112 12:29:17.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:17.632" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:17.580" endtime="20201112 12:29:17.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.642" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:17.640" endtime="20201112 12:29:17.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.647" level="INFO">VALUE: 0.038858903</msg>
<status status="PASS" starttime="20201112 12:29:17.645" endtime="20201112 12:29:17.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.634" endtime="20201112 12:29:17.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.660" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:17.658" endtime="20201112 12:29:17.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:17.665" level="INFO">VALUE: [0.04889775, 0.058897653, 0.068898667, 0.078899819, 0.088900819, 0.098901972, 0.108902972, 0.118904139, 0.128905139, 0.138906292, 0.148907292, 0.158908486, 0.168909458, 0.178910625, 0.188911611, 0.198912778, 0.208913778, 0.218914931, 0.228915931, 0.238917111, 0.248918153, 0.25891925, 0.268920264, 0.278921417, 0.288922417, 0.298923569, 0.308924569, 0.318925736, 0.32892675, 0.338927903, 0.348928889, 0.358930069, 0.368931056, 0.378932222, 0.388933208, 0.398934403, 0.408935375, 0.418936556, 0.428937542, 0.438938722, 0.448939736, 0.458940861, 0.468941875, 0.478943028, 0.488944028, 0.498945181, 0.508946181, 0.518947347, 0.528948361, 0.538949514, 0.548950514, 0.558951681, 0.568952667, 0.578953833, 0.588954833, 0.598956014, 0.608957, 0.618958153, 0.628959153, 0.638960333, 0.648961319, 0.658962486, 0.668963472, 0.678964639, 0.688965681, 0.698966847, 0.708967806, 0.718968972, 0.728969958, 0.738971125, 0.748972125, 0.758973292, 0.768974306, 0.778975444, 0.788976444, 0.798977611, 0.808978653, 0.818979792, 0.828980792, 0.838981931, 0.848982931, 0.858984125, 0.868985097, 0.878986306, 0.88898725, 0.898988431, 0.908989431, 0.918990597, 0.928991597, 0.938992736, 0.948993736, 0.958994903, 0.968995903, 0.978997069, 0.988998056, 0.998999222, 1.009000222, 1.019001403, 1.029002403, 1.039003542] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:17.663" endtime="20201112 12:29:17.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.650" endtime="20201112 12:29:17.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:17.674" endtime="20201112 12:29:17.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:17.682" endtime="20201112 12:29:17.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.678" endtime="20201112 12:29:17.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.669" endtime="20201112 12:29:17.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:15.032" endtime="20201112 12:29:17.709"></status>
</kw>
<msg timestamp="20201112 12:29:17.709" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:17.730" endtime="20201112 12:29:19.849"></status>
</kw>
<msg timestamp="20201112 12:29:19.851" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30369486, 'wakeups': [30379523, 30389522, 30399522, 30409522, 30419522...</msg>
<status status="PASS" starttime="20201112 12:29:17.727" endtime="20201112 12:29:19.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.857" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30369486, 'wakeups': [30379523, 30389522, 30399522, 30409522, 30419522...</msg>
<status status="PASS" starttime="20201112 12:29:19.853" endtime="20201112 12:29:19.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:19.860" endtime="20201112 12:29:19.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.720" endtime="20201112 12:29:19.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.714" endtime="20201112 12:29:19.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:19.873" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [30379523, 30389522, 30399522, 30409522, 30419522, 30429522, 30439522, 30449522, 30459522, 30469522, 30479522, 30489522, 30499522, 30509522, 30519522, 30529522, 30...</msg>
<status status="PASS" starttime="20201112 12:29:19.868" endtime="20201112 12:29:19.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.888" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:19.886" endtime="20201112 12:29:19.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.893" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:19.891" endtime="20201112 12:29:19.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.875" endtime="20201112 12:29:19.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.905" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:19.903" endtime="20201112 12:29:19.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.910" level="INFO">VALUE: 30369486</msg>
<status status="PASS" starttime="20201112 12:29:19.908" endtime="20201112 12:29:19.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.897" endtime="20201112 12:29:19.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.922" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:19.920" endtime="20201112 12:29:19.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.927" level="INFO">VALUE: [30379523, 30389522, 30399522, 30409522, 30419522, 30429522, 30439522, 30449522, 30459522, 30469522, 30479522, 30489522, 30499522, 30509522, 30519522, 30529522, 30539522, 30549522, 30559522, 30569522, 30579522, 30589522, 30599522, 30609522, 30619522, 30629522, 30639522, 30649522, 30659522, 30669522, 30679522, 30689522, 30699522, 30709522, 30719522, 30729522, 30739522, 30749522, 30759522, 30769522, 30779522, 30789522, 30799522, 30809522, 30819522, 30829522, 30839522, 30849522, 30859522, 30869522, 30879522, 30889522, 30899522, 30909522, 30919522, 30929522, 30939522, 30949522, 30959522, 30969522, 30979522, 30989522, 30999522, 31009522, 31019522, 31029522, 31039522, 31049522, 31059522, 31069522, 31079522, 31089522, 31099522, 31109522, 31119522, 31129522, 31139522, 31149522, 31159522, 31169522, 31179522, 31189522, 31199522, 31209522, 31219522, 31229522, 31239522, 31249522, 31259522, 31269522, 31279522, 31289522, 31299522, 31309522, 31319522, 31329522, 31339522, 31349522, 31359522, 31369522]</msg>
<status status="PASS" starttime="20201112 12:29:19.925" endtime="20201112 12:29:19.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.913" endtime="20201112 12:29:19.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:19.946" endtime="20201112 12:29:20.288"></status>
</kw>
<msg timestamp="20201112 12:29:20.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038244458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048282917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:19.943" endtime="20201112 12:29:20.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:20.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038244458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048282917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:20.297" endtime="20201112 12:29:20.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:20.314" endtime="20201112 12:29:20.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.936" endtime="20201112 12:29:20.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.931" endtime="20201112 12:29:20.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:20.343" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:20.320" endtime="20201112 12:29:20.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:20.348" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:29:20.347" endtime="20201112 12:29:20.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:20.351" level="INFO">VALUE: 0.038244458</msg>
<status status="PASS" starttime="20201112 12:29:20.350" endtime="20201112 12:29:20.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.344" endtime="20201112 12:29:20.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:20.357" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:20.356" endtime="20201112 12:29:20.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:20.360" level="INFO">VALUE: [0.048282917, 0.058282833, 0.068283833, 0.078285, 0.088285986, 0.098287153, 0.108288139, 0.118289306, 0.128290306, 0.138291472, 0.148292472, 0.158293639, 0.168294625, 0.178295792, 0.188296778, 0.198297944, 0.208298944, 0.218300097, 0.228301083, 0.23830225, 0.248303264, 0.258304417, 0.268305403, 0.278306597, 0.288307569, 0.298308736, 0.308309722, 0.318310889, 0.328311889, 0.338313042, 0.348314056, 0.358315222, 0.368316208, 0.378317361, 0.388318375, 0.398319569, 0.408320569, 0.418321708, 0.428322694, 0.438323875, 0.448324861, 0.458326014, 0.468327014, 0.478328181, 0.488329167, 0.498330319, 0.508331319, 0.518332486, 0.528333486, 0.538334639, 0.548335639, 0.558336806, 0.568337819, 0.578338972, 0.588339972, 0.598341125, 0.608342139, 0.618343306, 0.628344278, 0.638345444, 0.648346458, 0.658347611, 0.668348597, 0.678349764, 0.688350764, 0.698351944, 0.708352917, 0.718354111, 0.728355097, 0.73835625, 0.748357306, 0.758358458, 0.768359431, 0.778360569, 0.788361611, 0.798362722, 0.808363736, 0.818364889, 0.828365917, 0.838367042, 0.848368042, 0.858369222, 0.868370236, 0.878371403, 0.888372361, 0.898373528, 0.908374556, 0.918375694, 0.928376708, 0.938377847, 0.948378847, 0.958380014, 0.968381028, 0.978382167, 0.988383167, 0.998384333, 1.008385333, 1.0183865, 1.028387486, 1.038388653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:20.358" endtime="20201112 12:29:20.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.352" endtime="20201112 12:29:20.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:20.364" endtime="20201112 12:29:20.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:20.368" endtime="20201112 12:29:20.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.366" endtime="20201112 12:29:20.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.362" endtime="20201112 12:29:20.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:17.711" endtime="20201112 12:29:20.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.286" endtime="20201112 12:29:20.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:12.285" endtime="20201112 12:29:20.389"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:20.392" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:20.402" endtime="20201112 12:29:22.503"></status>
</kw>
<msg timestamp="20201112 12:29:22.504" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33039426, 'wakeups': [33049476, 33059475, 33069475, 33079475, 33089475...</msg>
<status status="PASS" starttime="20201112 12:29:20.400" endtime="20201112 12:29:22.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.507" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33039426, 'wakeups': [33049476, 33059475, 33069475, 33079475, 33089475...</msg>
<status status="PASS" starttime="20201112 12:29:22.505" endtime="20201112 12:29:22.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:22.508" endtime="20201112 12:29:22.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.397" endtime="20201112 12:29:22.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.395" endtime="20201112 12:29:22.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:22.516" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [33049476, 33059475, 33069475, 33079475, 33089475, 33099475, 33109475, 33119475, 33129475, 33139475, 33149475, 33159475, 33169475, 33179475, 33189475, 33199475, 33...</msg>
<status status="PASS" starttime="20201112 12:29:22.513" endtime="20201112 12:29:22.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.521" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:22.520" endtime="20201112 12:29:22.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.523" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:22.522" endtime="20201112 12:29:22.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.517" endtime="20201112 12:29:22.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.529" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:22.528" endtime="20201112 12:29:22.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.532" level="INFO">VALUE: 33039426</msg>
<status status="PASS" starttime="20201112 12:29:22.531" endtime="20201112 12:29:22.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.525" endtime="20201112 12:29:22.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.538" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:22.537" endtime="20201112 12:29:22.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.541" level="INFO">VALUE: [33049476, 33059475, 33069475, 33079475, 33089475, 33099475, 33109475, 33119475, 33129475, 33139475, 33149475, 33159475, 33169475, 33179475, 33189475, 33199475, 33209475, 33219475, 33229475, 33239475, 33249475, 33259475, 33269475, 33279475, 33289475, 33299475, 33309475, 33319475, 33329475, 33339475, 33349475, 33359475, 33369475, 33379475, 33389475, 33399475, 33409475, 33419475, 33429475, 33439475, 33449475, 33459475, 33469475, 33479475, 33489475, 33499475, 33509475, 33519475, 33529475, 33539475, 33549475, 33559475, 33569475, 33579475, 33589475, 33599475, 33609475, 33619475, 33629475, 33639475, 33649475, 33659475, 33669475, 33679475, 33689475, 33699475, 33709475, 33719475, 33729475, 33739475, 33749475, 33759475, 33769475, 33779475, 33789475, 33799475, 33809475, 33819475, 33829475, 33839475, 33849475, 33859475, 33869475, 33879475, 33889475, 33899475, 33909475, 33919475, 33929475, 33939475, 33949475, 33959475, 33969475, 33979475, 33989475, 33999475, 34009475, 34019475, 34029475, 34039475]</msg>
<status status="PASS" starttime="20201112 12:29:22.540" endtime="20201112 12:29:22.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.534" endtime="20201112 12:29:22.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:22.550" endtime="20201112 12:29:22.842"></status>
</kw>
<msg timestamp="20201112 12:29:22.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024585472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034636917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:22.549" endtime="20201112 12:29:22.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024585472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034636917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:22.846" endtime="20201112 12:29:22.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:22.853" endtime="20201112 12:29:22.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.545" endtime="20201112 12:29:22.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.543" endtime="20201112 12:29:22.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:22.881" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:22.857" endtime="20201112 12:29:22.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.886" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:22.885" endtime="20201112 12:29:22.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.888" level="INFO">VALUE: 0.024585472</msg>
<status status="PASS" starttime="20201112 12:29:22.887" endtime="20201112 12:29:22.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.882" endtime="20201112 12:29:22.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.895" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:22.894" endtime="20201112 12:29:22.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:22.897" level="INFO">VALUE: [0.034636917, 0.044637583, 0.054638569, 0.064639736, 0.07464075, 0.084641889, 0.094642889, 0.104644056, 0.114645042, 0.124646264, 0.134647194, 0.144648375, 0.154649375, 0.164650514, 0.174651528, 0.184652681, 0.194653681, 0.204654833, 0.214655819, 0.224657069, 0.234657986, 0.244659139, 0.254660139, 0.264661319, 0.274662319, 0.284663472, 0.294664444, 0.304665611, 0.314666611, 0.324667778, 0.334668764, 0.344669931, 0.354670944, 0.364672111, 0.374673097, 0.384674278, 0.394675236, 0.404676403, 0.414677417, 0.424678569, 0.434679556, 0.444680722, 0.454681708, 0.464682875, 0.474683931, 0.484685083, 0.494686028, 0.504687194, 0.514688181, 0.524689361, 0.534690361, 0.544691542, 0.554692528, 0.564693667, 0.574694667, 0.584695819, 0.594696847, 0.604697986, 0.614698986, 0.624700153, 0.634701139, 0.644702306, 0.654703292, 0.664704472, 0.674705458, 0.684706611, 0.694707625, 0.704708806, 0.714709778, 0.724710931, 0.734711944, 0.744713097, 0.754714097, 0.76471525, 0.77471625, 0.784717417, 0.794718417, 0.804719597, 0.814720569, 0.824721764, 0.834722736, 0.844723944, 0.854724875, 0.864726083, 0.874727069, 0.884728208, 0.894729194, 0.904730417, 0.914731361, 0.924732514, 0.934733514, 0.944734694, 0.954735681, 0.964736833, 0.974737833, 0.984739, 0.99474, 1.004741167, 1.014742153, 1.024743319] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:22.896" endtime="20201112 12:29:22.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.890" endtime="20201112 12:29:22.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:22.901" endtime="20201112 12:29:22.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:22.906" endtime="20201112 12:29:22.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.904" endtime="20201112 12:29:22.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.899" endtime="20201112 12:29:22.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.393" endtime="20201112 12:29:22.927"></status>
</kw>
<msg timestamp="20201112 12:29:22.927" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:22.937" endtime="20201112 12:29:25.054"></status>
</kw>
<msg timestamp="20201112 12:29:25.055" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35574747, 'wakeups': [35584797, 35594796, 35604796, 35614796, 35624796...</msg>
<status status="PASS" starttime="20201112 12:29:22.936" endtime="20201112 12:29:25.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.058" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35574747, 'wakeups': [35584797, 35594796, 35604796, 35614796, 35624796...</msg>
<status status="PASS" starttime="20201112 12:29:25.056" endtime="20201112 12:29:25.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:25.059" endtime="20201112 12:29:25.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.932" endtime="20201112 12:29:25.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.930" endtime="20201112 12:29:25.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:25.066" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [35584797, 35594796, 35604796, 35614796, 35624796, 35634796, 35644796, 35654796, 35664796, 35674796, 35684796, 35694796, 35704796, 35714796, 35724796, 35734796, 35...</msg>
<status status="PASS" starttime="20201112 12:29:25.063" endtime="20201112 12:29:25.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.071" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:25.069" endtime="20201112 12:29:25.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.073" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:25.072" endtime="20201112 12:29:25.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.066" endtime="20201112 12:29:25.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.079" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:25.078" endtime="20201112 12:29:25.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.081" level="INFO">VALUE: 35574747</msg>
<status status="PASS" starttime="20201112 12:29:25.080" endtime="20201112 12:29:25.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.074" endtime="20201112 12:29:25.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.087" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:25.086" endtime="20201112 12:29:25.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.089" level="INFO">VALUE: [35584797, 35594796, 35604796, 35614796, 35624796, 35634796, 35644796, 35654796, 35664796, 35674796, 35684796, 35694796, 35704796, 35714796, 35724796, 35734796, 35744796, 35754796, 35764796, 35774796, 35784796, 35794796, 35804796, 35814796, 35824796, 35834796, 35844796, 35854796, 35864796, 35874796, 35884796, 35894796, 35904796, 35914796, 35924796, 35934796, 35944796, 35954796, 35964796, 35974796, 35984796, 35994796, 36004796, 36014796, 36024796, 36034796, 36044796, 36054796, 36064796, 36074796, 36084796, 36094796, 36104796, 36114796, 36124796, 36134796, 36144796, 36154796, 36164796, 36174796, 36184796, 36194796, 36204796, 36214796, 36224796, 36234796, 36244796, 36254796, 36264796, 36274796, 36284796, 36294796, 36304796, 36314796, 36324796, 36334796, 36344796, 36354796, 36364796, 36374796, 36384796, 36394796, 36404796, 36414796, 36424796, 36434796, 36444796, 36454796, 36464796, 36474796, 36484796, 36494796, 36504796, 36514796, 36524796, 36534796, 36544796, 36554796, 36564796, 36574796]</msg>
<status status="PASS" starttime="20201112 12:29:25.088" endtime="20201112 12:29:25.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.083" endtime="20201112 12:29:25.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:25.104" endtime="20201112 12:29:25.419"></status>
</kw>
<msg timestamp="20201112 12:29:25.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02202475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032076542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:25.098" endtime="20201112 12:29:25.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02202475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032076542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:25.428" endtime="20201112 12:29:25.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:25.445" endtime="20201112 12:29:25.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.095" endtime="20201112 12:29:25.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.091" endtime="20201112 12:29:25.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:25.508" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:25.454" endtime="20201112 12:29:25.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.518" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:25.516" endtime="20201112 12:29:25.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.523" level="INFO">VALUE: 0.02202475</msg>
<status status="PASS" starttime="20201112 12:29:25.521" endtime="20201112 12:29:25.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.509" endtime="20201112 12:29:25.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.537" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:25.535" endtime="20201112 12:29:25.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:25.542" level="INFO">VALUE: [0.032076542, 0.042077208, 0.052078236, 0.062079361, 0.072080347, 0.082081514, 0.092082514, 0.102083681, 0.112084667, 0.122085875, 0.132086833, 0.142087986, 0.152088972, 0.162090139, 0.172091139, 0.182092292, 0.192093278, 0.202094444, 0.212095444, 0.222096597, 0.232097583, 0.242098764, 0.252099764, 0.262100944, 0.272101917, 0.282103069, 0.292104056, 0.302105236, 0.312106264, 0.322107375, 0.332108361, 0.342109569, 0.352110528, 0.362111681, 0.372112681, 0.382113847, 0.392114833, 0.402116, 0.412116986, 0.422118153, 0.432119139, 0.442120319, 0.452121361, 0.462122458, 0.472123458, 0.482124708, 0.492125611, 0.502126792, 0.512127764, 0.522128931, 0.532129972, 0.542131097, 0.552132083, 0.562133264, 0.57213425, 0.582135403, 0.592136403, 0.602137556, 0.612138556, 0.622139722, 0.632140708, 0.642141875, 0.652142931, 0.662144028, 0.672145028, 0.682146181, 0.692147181, 0.702148389, 0.712149347, 0.722150542, 0.732151569, 0.742152653, 0.752153653, 0.762154875, 0.772155806, 0.782156986, 0.792157986, 0.802159125, 0.812160125, 0.822161319, 0.832162292, 0.842163444, 0.852164472, 0.862165597, 0.872166597, 0.88216775, 0.89216875, 0.902169903, 0.912170917, 0.922172125, 0.932173069, 0.942174222, 0.952175222, 0.962176389, 0.972177375, 0.982178542, 0.992179528, 1.002180694, 1.012181694, 1.022182847] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:25.539" endtime="20201112 12:29:25.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.527" endtime="20201112 12:29:25.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:25.551" endtime="20201112 12:29:25.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:25.559" endtime="20201112 12:29:25.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.555" endtime="20201112 12:29:25.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.546" endtime="20201112 12:29:25.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:22.928" endtime="20201112 12:29:25.585"></status>
</kw>
<msg timestamp="20201112 12:29:25.586" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:25.609" endtime="20201112 12:29:27.730"></status>
</kw>
<msg timestamp="20201112 12:29:27.732" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 38247694, 'wakeups': [38257744, 38267743, 38277743, 38287743, 38297743...</msg>
<status status="PASS" starttime="20201112 12:29:25.605" endtime="20201112 12:29:27.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.740" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 38247694, 'wakeups': [38257744, 38267743, 38277743, 38287743, 38297743...</msg>
<status status="PASS" starttime="20201112 12:29:27.734" endtime="20201112 12:29:27.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:27.742" endtime="20201112 12:29:27.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.596" endtime="20201112 12:29:27.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.591" endtime="20201112 12:29:27.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:27.755" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [38257744, 38267743, 38277743, 38287743, 38297743, 38307743, 38317743, 38327743, 38337743, 38347743, 38357743, 38367743, 38377743, 38387743, 38397743, 38407743, 38...</msg>
<status status="PASS" starttime="20201112 12:29:27.751" endtime="20201112 12:29:27.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.766" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:27.763" endtime="20201112 12:29:27.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.770" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:27.768" endtime="20201112 12:29:27.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.757" endtime="20201112 12:29:27.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.783" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:27.780" endtime="20201112 12:29:27.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.787" level="INFO">VALUE: 38247694</msg>
<status status="PASS" starttime="20201112 12:29:27.785" endtime="20201112 12:29:27.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.774" endtime="20201112 12:29:27.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.800" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:27.798" endtime="20201112 12:29:27.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:27.805" level="INFO">VALUE: [38257744, 38267743, 38277743, 38287743, 38297743, 38307743, 38317743, 38327743, 38337743, 38347743, 38357743, 38367743, 38377743, 38387743, 38397743, 38407743, 38417743, 38427743, 38437743, 38447743, 38457743, 38467743, 38477743, 38487743, 38497743, 38507743, 38517743, 38527743, 38537743, 38547743, 38557743, 38567743, 38577743, 38587743, 38597743, 38607743, 38617743, 38627743, 38637743, 38647743, 38657743, 38667743, 38677743, 38687743, 38697743, 38707743, 38717743, 38727743, 38737743, 38747743, 38757743, 38767743, 38777743, 38787743, 38797743, 38807743, 38817743, 38827743, 38837743, 38847743, 38857743, 38867743, 38877743, 38887743, 38897743, 38907743, 38917743, 38927743, 38937743, 38947743, 38957743, 38967743, 38977743, 38987743, 38997743, 39007743, 39017743, 39027743, 39037743, 39047743, 39057743, 39067743, 39077743, 39087743, 39097743, 39107743, 39117743, 39127743, 39137743, 39147743, 39157743, 39167743, 39177743, 39187743, 39197743, 39207743, 39217743, 39227743, 39237743, 39247743]</msg>
<status status="PASS" starttime="20201112 12:29:27.803" endtime="20201112 12:29:27.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.791" endtime="20201112 12:29:27.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:27.825" endtime="20201112 12:29:28.172"></status>
</kw>
<msg timestamp="20201112 12:29:28.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040581333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050632819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:27.821" endtime="20201112 12:29:28.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:28.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040581333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050632819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:28.181" endtime="20201112 12:29:28.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:28.198" endtime="20201112 12:29:28.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.814" endtime="20201112 12:29:28.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.809" endtime="20201112 12:29:28.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:28.261" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:28.207" endtime="20201112 12:29:28.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:28.272" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:28.270" endtime="20201112 12:29:28.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:28.277" level="INFO">VALUE: 0.040581333</msg>
<status status="PASS" starttime="20201112 12:29:28.275" endtime="20201112 12:29:28.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.263" endtime="20201112 12:29:28.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:28.291" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:28.289" endtime="20201112 12:29:28.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:28.296" level="INFO">VALUE: [0.050632819, 0.060633458, 0.070634458, 0.080635625, 0.090636625, 0.100637806, 0.110638792, 0.120639972, 0.130640944, 0.140642125, 0.150643125, 0.160644278, 0.170645278, 0.180646444, 0.190647472, 0.200648611, 0.210649611, 0.220650833, 0.230651778, 0.240652958, 0.250653931, 0.260655097, 0.270656167, 0.280657306, 0.290658264, 0.300659444, 0.310660431, 0.320661611, 0.330662597, 0.340663764, 0.350664778, 0.360665931, 0.370666931, 0.380668097, 0.390669097, 0.400670278, 0.41067125, 0.420672417, 0.430673417, 0.440674583, 0.450675583, 0.46067675, 0.47067775, 0.480678931, 0.490679931, 0.500681111, 0.510682111, 0.52068325, 0.530684306, 0.540685431, 0.550686417, 0.560687583, 0.570688583, 0.580689778, 0.59069075, 0.600691917, 0.610692931, 0.620694083, 0.630695069, 0.640696278, 0.65069725, 0.660698403, 0.670699417, 0.680700569, 0.690701569, 0.70070275, 0.710703736, 0.720704917, 0.730705903, 0.740707069, 0.750708069, 0.760709236, 0.770710236, 0.780711417, 0.790712417, 0.800713569, 0.810714569, 0.82071575, 0.830716736, 0.840717903, 0.850718917, 0.860720153, 0.870721097, 0.880722264, 0.890723236, 0.900724403, 0.910725444, 0.920726569, 0.930727639, 0.940728736, 0.950729722, 0.960730889, 0.970731889, 0.980733056, 0.990734056, 1.000735222, 1.010736222, 1.020737417, 1.030738389, 1.040739556] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:28.294" endtime="20201112 12:29:28.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.281" endtime="20201112 12:29:28.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:28.302" endtime="20201112 12:29:28.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:28.307" endtime="20201112 12:29:28.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.304" endtime="20201112 12:29:28.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.300" endtime="20201112 12:29:28.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:25.587" endtime="20201112 12:29:28.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.391" endtime="20201112 12:29:28.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:20.390" endtime="20201112 12:29:28.328"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:28.331" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:28.341" endtime="20201112 12:29:30.461"></status>
</kw>
<msg timestamp="20201112 12:29:30.462" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 40978752, 'wakeups': [40988815, 40998814, 41008814, 41018814, 41028814...</msg>
<status status="PASS" starttime="20201112 12:29:28.340" endtime="20201112 12:29:30.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:30.469" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 40978752, 'wakeups': [40988815, 40998814, 41008814, 41018814, 41028814...</msg>
<status status="PASS" starttime="20201112 12:29:30.465" endtime="20201112 12:29:30.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:30.472" endtime="20201112 12:29:30.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.336" endtime="20201112 12:29:30.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.334" endtime="20201112 12:29:30.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:30.485" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [40988815, 40998814, 41008814, 41018814, 41028814, 41038814, 41048814, 41058814, 41068814, 41078814, 41088814, 41098814, 41108814, 41118814, 41128814, 41138814, 41...</msg>
<status status="PASS" starttime="20201112 12:29:30.480" endtime="20201112 12:29:30.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:30.496" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:30.493" endtime="20201112 12:29:30.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:30.501" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:30.499" endtime="20201112 12:29:30.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:30.487" endtime="20201112 12:29:30.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:30.514" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:30.512" endtime="20201112 12:29:30.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:30.519" level="INFO">VALUE: 40978752</msg>
<status status="PASS" starttime="20201112 12:29:30.516" endtime="20201112 12:29:30.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:30.505" endtime="20201112 12:29:30.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:30.531" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:30.529" endtime="20201112 12:29:30.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:30.536" level="INFO">VALUE: [40988815, 40998814, 41008814, 41018814, 41028814, 41038814, 41048814, 41058814, 41068814, 41078814, 41088814, 41098814, 41108814, 41118814, 41128814, 41138814, 41148814, 41158814, 41168814, 41178814, 41188814, 41198814, 41208814, 41218814, 41228814, 41238814, 41248814, 41258814, 41268814, 41278814, 41288814, 41298814, 41308814, 41318814, 41328814, 41338814, 41348814, 41358814, 41368814, 41378814, 41388814, 41398814, 41408814, 41418814, 41428814, 41438814, 41448814, 41458814, 41468814, 41478814, 41488814, 41498814, 41508814, 41518814, 41528814, 41538814, 41548814, 41558814, 41568814, 41578814, 41588814, 41598814, 41608814, 41618814, 41628814, 41638814, 41648814, 41658814, 41668814, 41678814, 41688814, 41698814, 41708814, 41718814, 41728814, 41738814, 41748814, 41758814, 41768814, 41778814, 41788814, 41798814, 41808814, 41818814, 41828814, 41838814, 41848814, 41858814, 41868814, 41878814, 41888814, 41898814, 41908814, 41918814, 41928814, 41938814, 41948814, 41958814, 41968814, 41978814]</msg>
<status status="PASS" starttime="20201112 12:29:30.534" endtime="20201112 12:29:30.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:30.522" endtime="20201112 12:29:30.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:30.558" endtime="20201112 12:29:30.906"></status>
</kw>
<msg timestamp="20201112 12:29:30.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025176306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035241653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:30.555" endtime="20201112 12:29:30.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:30.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025176306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035241653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:30.914" endtime="20201112 12:29:30.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:30.931" endtime="20201112 12:29:30.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:30.547" endtime="20201112 12:29:30.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:30.542" endtime="20201112 12:29:30.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:30.994" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:30.940" endtime="20201112 12:29:30.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.005" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:31.003" endtime="20201112 12:29:31.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.010" level="INFO">VALUE: 0.025176306</msg>
<status status="PASS" starttime="20201112 12:29:31.007" endtime="20201112 12:29:31.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:30.996" endtime="20201112 12:29:31.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.023" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:31.021" endtime="20201112 12:29:31.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.028" level="INFO">VALUE: [0.035241653, 0.045242222, 0.055243181, 0.065244361, 0.075245347, 0.085246528, 0.0952475, 0.105248667, 0.115249667, 0.125250833, 0.135251833, 0.145253, 0.155253986, 0.165255153, 0.175256153, 0.185257333, 0.195258333, 0.2052595, 0.215260472, 0.225261639, 0.235262653, 0.245263819, 0.255264819, 0.265265972, 0.275266972, 0.285268125, 0.295269125, 0.305270306, 0.315271319, 0.325272458, 0.335273472, 0.345274625, 0.355275611, 0.365276778, 0.375277778, 0.385278944, 0.395279944, 0.405281111, 0.415282111, 0.425283278, 0.435284278, 0.445285444, 0.455286431, 0.465287611, 0.475288611, 0.485289764, 0.495290778, 0.505291931, 0.515292944, 0.525294097, 0.535295139, 0.545296264, 0.55529725, 0.565298417, 0.575299417, 0.585300583, 0.595301597, 0.60530275, 0.61530375, 0.625304931, 0.635305917, 0.645307083, 0.655308069, 0.66530925, 0.67531025, 0.685311417, 0.695312417, 0.705313583, 0.715314583, 0.725315806, 0.735316736, 0.745317944, 0.755318903, 0.765320139, 0.775321056, 0.785322222, 0.795323222, 0.805324389, 0.815325389, 0.825326569, 0.835327556, 0.845328722, 0.855329722, 0.865330889, 0.875331903, 0.885333056, 0.895334056, 0.905335222, 0.915336208, 0.925337375, 0.935338375, 0.945339611, 0.955340542, 0.965341722, 0.975342764, 0.985343917, 0.995344861, 1.005346028, 1.015347028, 1.025348194] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:31.026" endtime="20201112 12:29:31.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.013" endtime="20201112 12:29:31.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:31.038" endtime="20201112 12:29:31.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:31.046" endtime="20201112 12:29:31.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.042" endtime="20201112 12:29:31.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.033" endtime="20201112 12:29:31.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.332" endtime="20201112 12:29:31.072"></status>
</kw>
<msg timestamp="20201112 12:29:31.073" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:31.096" endtime="20201112 12:29:33.209"></status>
</kw>
<msg timestamp="20201112 12:29:33.210" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43734951, 'wakeups': [43745015, 43755013, 43765013, 43775013, 43785013...</msg>
<status status="PASS" starttime="20201112 12:29:31.092" endtime="20201112 12:29:33.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.214" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43734951, 'wakeups': [43745015, 43755013, 43765013, 43775013, 43785013...</msg>
<status status="PASS" starttime="20201112 12:29:33.211" endtime="20201112 12:29:33.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:33.215" endtime="20201112 12:29:33.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.085" endtime="20201112 12:29:33.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.078" endtime="20201112 12:29:33.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:33.221" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [43745015, 43755013, 43765013, 43775013, 43785013, 43795013, 43805013, 43815013, 43825013, 43835013, 43845013, 43855013, 43865013, 43875013, 43885013, 43895013, 43...</msg>
<status status="PASS" starttime="20201112 12:29:33.219" endtime="20201112 12:29:33.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.226" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:33.225" endtime="20201112 12:29:33.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.228" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:33.227" endtime="20201112 12:29:33.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.222" endtime="20201112 12:29:33.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.234" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:33.233" endtime="20201112 12:29:33.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.236" level="INFO">VALUE: 43734951</msg>
<status status="PASS" starttime="20201112 12:29:33.235" endtime="20201112 12:29:33.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.230" endtime="20201112 12:29:33.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.242" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:33.241" endtime="20201112 12:29:33.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.245" level="INFO">VALUE: [43745015, 43755013, 43765013, 43775013, 43785013, 43795013, 43805013, 43815013, 43825013, 43835013, 43845013, 43855013, 43865013, 43875013, 43885013, 43895013, 43905013, 43915013, 43925013, 43935013, 43945013, 43955013, 43965013, 43975013, 43985013, 43995013, 44005013, 44015013, 44025013, 44035013, 44045013, 44055013, 44065013, 44075013, 44085013, 44095013, 44105013, 44115013, 44125013, 44135013, 44145013, 44155013, 44165013, 44175013, 44185013, 44195013, 44205013, 44215013, 44225013, 44235013, 44245013, 44255013, 44265013, 44275013, 44285013, 44295013, 44305013, 44315013, 44325013, 44335013, 44345013, 44355013, 44365013, 44375013, 44385013, 44395013, 44405013, 44415013, 44425013, 44435013, 44445013, 44455013, 44465013, 44475013, 44485013, 44495013, 44505013, 44515013, 44525013, 44535013, 44545013, 44555013, 44565013, 44575013, 44585013, 44595013, 44605013, 44615013, 44625013, 44635013, 44645013, 44655013, 44665013, 44675013, 44685013, 44695013, 44705013, 44715013, 44725013, 44735013]</msg>
<status status="PASS" starttime="20201112 12:29:33.243" endtime="20201112 12:29:33.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.238" endtime="20201112 12:29:33.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:33.255" endtime="20201112 12:29:33.603"></status>
</kw>
<msg timestamp="20201112 12:29:33.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040745347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050811208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:33.253" endtime="20201112 12:29:33.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040745347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050811208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:33.613" endtime="20201112 12:29:33.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:33.632" endtime="20201112 12:29:33.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.249" endtime="20201112 12:29:33.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.246" endtime="20201112 12:29:33.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:33.697" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:33.641" endtime="20201112 12:29:33.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.709" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:33.706" endtime="20201112 12:29:33.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.715" level="INFO">VALUE: 0.040745347</msg>
<status status="PASS" starttime="20201112 12:29:33.711" endtime="20201112 12:29:33.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.699" endtime="20201112 12:29:33.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.733" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:33.731" endtime="20201112 12:29:33.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:33.738" level="INFO">VALUE: [0.050811208, 0.060810875, 0.070811875, 0.080813042, 0.090814042, 0.100815236, 0.110816194, 0.120817375, 0.130818347, 0.140819528, 0.150820514, 0.160821694, 0.17082275, 0.180823833, 0.190824833, 0.200826, 0.210827028, 0.220828153, 0.230829181, 0.240830319, 0.250831319, 0.260832486, 0.270833486, 0.280834639, 0.290835653, 0.300836819, 0.310837819, 0.320838986, 0.330839972, 0.340841153, 0.350842125, 0.360843292, 0.370844306, 0.380845458, 0.390846458, 0.400847639, 0.410848625, 0.420849778, 0.430850778, 0.440851958, 0.450853014, 0.460854139, 0.470855139, 0.480856292, 0.490857264, 0.500858458, 0.510859431, 0.520860611, 0.530861597, 0.540862764, 0.550863778, 0.560864931, 0.570865917, 0.580867083, 0.590868083, 0.60086925, 0.61087025, 0.620871417, 0.630872417, 0.640873583, 0.650874569, 0.660875792, 0.67087675, 0.680877903, 0.690878903, 0.700880069, 0.710881097, 0.720882236, 0.73088325, 0.740884389, 0.750885389, 0.760886569, 0.770887569, 0.780888722, 0.790889722, 0.800890944, 0.810891889, 0.820893042, 0.830894056, 0.840895222, 0.850896208, 0.860897375, 0.870898375, 0.880899542, 0.890900556, 0.900901708, 0.910902694, 0.920903875, 0.930904861, 0.940906042, 0.950907028, 0.960908208, 0.970909194, 0.980910361, 0.990911347, 1.000912514, 1.010913514, 1.020914681, 1.030915694, 1.040916847] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:33.736" endtime="20201112 12:29:33.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.720" endtime="20201112 12:29:33.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:33.748" endtime="20201112 12:29:33.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:33.757" endtime="20201112 12:29:33.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.752" endtime="20201112 12:29:33.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.743" endtime="20201112 12:29:33.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.074" endtime="20201112 12:29:33.783"></status>
</kw>
<msg timestamp="20201112 12:29:33.784" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:33.807" endtime="20201112 12:29:35.939"></status>
</kw>
<msg timestamp="20201112 12:29:35.941" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46446014, 'wakeups': [46456078, 46466076, 46476076, 46486076, 46496076...</msg>
<status status="PASS" starttime="20201112 12:29:33.803" endtime="20201112 12:29:35.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.954" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46446014, 'wakeups': [46456078, 46466076, 46476076, 46486076, 46496076...</msg>
<status status="PASS" starttime="20201112 12:29:35.948" endtime="20201112 12:29:35.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:35.956" endtime="20201112 12:29:35.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.795" endtime="20201112 12:29:35.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.789" endtime="20201112 12:29:35.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:35.970" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [46456078, 46466076, 46476076, 46486076, 46496076, 46506076, 46516076, 46526076, 46536076, 46546076, 46556076, 46566076, 46576076, 46586076, 46596076, 46606076, 46...</msg>
<status status="PASS" starttime="20201112 12:29:35.965" endtime="20201112 12:29:35.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.981" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:35.979" endtime="20201112 12:29:35.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.986" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:35.984" endtime="20201112 12:29:35.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.972" endtime="20201112 12:29:35.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:35.999" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:35.997" endtime="20201112 12:29:36.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.004" level="INFO">VALUE: 46446014</msg>
<status status="PASS" starttime="20201112 12:29:36.002" endtime="20201112 12:29:36.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:35.990" endtime="20201112 12:29:36.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.019" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:36.016" endtime="20201112 12:29:36.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.026" level="INFO">VALUE: [46456078, 46466076, 46476076, 46486076, 46496076, 46506076, 46516076, 46526076, 46536076, 46546076, 46556076, 46566076, 46576076, 46586076, 46596076, 46606076, 46616076, 46626076, 46636076, 46646076, 46656076, 46666076, 46676076, 46686076, 46696076, 46706076, 46716076, 46726076, 46736076, 46746076, 46756076, 46766076, 46776076, 46786076, 46796076, 46806076, 46816076, 46826076, 46836076, 46846076, 46856076, 46866076, 46876076, 46886076, 46896076, 46906076, 46916076, 46926076, 46936076, 46946076, 46956076, 46966076, 46976076, 46986076, 46996076, 47006076, 47016076, 47026076, 47036076, 47046076, 47056076, 47066076, 47076076, 47086076, 47096076, 47106076, 47116076, 47126076, 47136076, 47146076, 47156076, 47166076, 47176076, 47186076, 47196076, 47206076, 47216076, 47226076, 47236076, 47246076, 47256076, 47266076, 47276076, 47286076, 47296076, 47306076, 47316076, 47326076, 47336076, 47346076, 47356076, 47366076, 47376076, 47386076, 47396076, 47406076, 47416076, 47426076, 47436076, 47446076]</msg>
<status status="PASS" starttime="20201112 12:29:36.021" endtime="20201112 12:29:36.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.008" endtime="20201112 12:29:36.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:36.047" endtime="20201112 12:29:36.414"></status>
</kw>
<msg timestamp="20201112 12:29:36.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041357069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051422736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:36.043" endtime="20201112 12:29:36.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041357069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051422736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:36.418" endtime="20201112 12:29:36.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:36.426" endtime="20201112 12:29:36.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.035" endtime="20201112 12:29:36.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.030" endtime="20201112 12:29:36.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:36.454" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:36.430" endtime="20201112 12:29:36.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.460" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:36.459" endtime="20201112 12:29:36.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.462" level="INFO">VALUE: 0.041357069</msg>
<status status="PASS" starttime="20201112 12:29:36.461" endtime="20201112 12:29:36.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.455" endtime="20201112 12:29:36.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.469" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:36.468" endtime="20201112 12:29:36.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.471" level="INFO">VALUE: [0.051422736, 0.06142225, 0.071423264, 0.081424417, 0.091425417, 0.101426569, 0.111427569, 0.12142875, 0.131429736, 0.141430889, 0.151431903, 0.161433042, 0.171434056, 0.181435222, 0.191436208, 0.201437361, 0.211438361, 0.221439583, 0.231440514, 0.241441694, 0.251442681, 0.261443847, 0.271444833, 0.281446, 0.291447028, 0.301448167, 0.311449167, 0.321450347, 0.331451319, 0.341452486, 0.351453486, 0.361454639, 0.371455653, 0.381456875, 0.391457792, 0.401458958, 0.411459958, 0.421461139, 0.431462139, 0.441463292, 0.451464278, 0.461465486, 0.471466444, 0.481467639, 0.491468653, 0.501469778, 0.511470764, 0.521471931, 0.531472931, 0.541474083, 0.551475083, 0.561476306, 0.571477264, 0.581478431, 0.591479403, 0.601480611, 0.611481583, 0.621482736, 0.631483736, 0.641484903, 0.651485889, 0.661487069, 0.671488069, 0.681489222, 0.691490222, 0.701491375, 0.711492375, 0.721493556, 0.731494542, 0.741495708, 0.751496694, 0.761497861, 0.771498889, 0.781500042, 0.791501042, 0.801502194, 0.811503194, 0.821504389, 0.831505361, 0.841506514, 0.8515075, 0.861508694, 0.871509681, 0.881510847, 0.891511819, 0.901512986, 0.911513986, 0.921515153, 0.931516153, 0.941517319, 0.951518306, 0.961519472, 0.971520472, 0.981521694, 0.991522625, 1.001523792, 1.011524806, 1.021525972, 1.031526958, 1.041528139] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:36.470" endtime="20201112 12:29:36.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.464" endtime="20201112 12:29:36.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:36.476" endtime="20201112 12:29:36.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:36.480" endtime="20201112 12:29:36.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.478" endtime="20201112 12:29:36.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.473" endtime="20201112 12:29:36.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:33.785" endtime="20201112 12:29:36.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.329" endtime="20201112 12:29:36.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:28.329" endtime="20201112 12:29:36.502"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:36.505" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:36.516" endtime="20201112 12:29:38.627"></status>
</kw>
<msg timestamp="20201112 12:29:38.628" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49153204, 'wakeups': [49163283, 49173281, 49183281, 49193281, 49203281...</msg>
<status status="PASS" starttime="20201112 12:29:36.514" endtime="20201112 12:29:38.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.631" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49153204, 'wakeups': [49163283, 49173281, 49183281, 49193281, 49203281...</msg>
<status status="PASS" starttime="20201112 12:29:38.629" endtime="20201112 12:29:38.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:38.633" endtime="20201112 12:29:38.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.511" endtime="20201112 12:29:38.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.507" endtime="20201112 12:29:38.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:38.639" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [49163283, 49173281, 49183281, 49193281, 49203281, 49213281, 49223281, 49233281, 49243281, 49253281, 49263281, 49273281, 49283281, 49293281, 49303281, 49313281, 49...</msg>
<status status="PASS" starttime="20201112 12:29:38.637" endtime="20201112 12:29:38.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.645" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:38.644" endtime="20201112 12:29:38.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.647" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:38.646" endtime="20201112 12:29:38.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.641" endtime="20201112 12:29:38.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.653" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:38.652" endtime="20201112 12:29:38.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.656" level="INFO">VALUE: 49153204</msg>
<status status="PASS" starttime="20201112 12:29:38.654" endtime="20201112 12:29:38.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.649" endtime="20201112 12:29:38.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.662" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:38.661" endtime="20201112 12:29:38.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:38.664" level="INFO">VALUE: [49163283, 49173281, 49183281, 49193281, 49203281, 49213281, 49223281, 49233281, 49243281, 49253281, 49263281, 49273281, 49283281, 49293281, 49303281, 49313281, 49323281, 49333281, 49343281, 49353281, 49363281, 49373281, 49383281, 49393281, 49403281, 49413281, 49423281, 49433281, 49443281, 49453281, 49463281, 49473281, 49483281, 49493281, 49503281, 49513281, 49523281, 49533281, 49543281, 49553281, 49563281, 49573281, 49583281, 49593281, 49603281, 49613281, 49623281, 49633281, 49643281, 49653281, 49663281, 49673281, 49683281, 49693281, 49703281, 49713281, 49723281, 49733281, 49743281, 49753281, 49763281, 49773281, 49783281, 49793281, 49803281, 49813281, 49823281, 49833281, 49843281, 49853281, 49863281, 49873281, 49883281, 49893281, 49903281, 49913281, 49923281, 49933281, 49943281, 49953281, 49963281, 49973281, 49983281, 49993281, 50003281, 50013281, 50023281, 50033281, 50043281, 50053281, 50063281, 50073281, 50083281, 50093281, 50103281, 50113281, 50123281, 50133281, 50143281, 50153281]</msg>
<status status="PASS" starttime="20201112 12:29:38.663" endtime="20201112 12:29:38.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.657" endtime="20201112 12:29:38.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:38.674" endtime="20201112 12:29:38.995"></status>
</kw>
<msg timestamp="20201112 12:29:39.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026344167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03642525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:38.672" endtime="20201112 12:29:39.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026344167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03642525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:39.004" endtime="20201112 12:29:39.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:39.021" endtime="20201112 12:29:39.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.669" endtime="20201112 12:29:39.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:38.666" endtime="20201112 12:29:39.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:39.084" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:39.030" endtime="20201112 12:29:39.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.095" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:39.093" endtime="20201112 12:29:39.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.099" level="INFO">VALUE: 0.026344167</msg>
<status status="PASS" starttime="20201112 12:29:39.097" endtime="20201112 12:29:39.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.086" endtime="20201112 12:29:39.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.113" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:39.111" endtime="20201112 12:29:39.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.119" level="INFO">VALUE: [0.03642525, 0.046424583, 0.056425569, 0.06642675, 0.076427736, 0.086428903, 0.096429875, 0.106431056, 0.116432042, 0.126433208, 0.136434194, 0.146435361, 0.156436361, 0.166437514, 0.176438514, 0.186439681, 0.196440667, 0.206441833, 0.216442833, 0.226444, 0.236444986, 0.246446153, 0.256447139, 0.266448306, 0.276449319, 0.286450472, 0.296451458, 0.306452625, 0.316453625, 0.326454792, 0.336455778, 0.346456944, 0.356457944, 0.366459125, 0.376460097, 0.386461264, 0.39646225, 0.406463417, 0.416464486, 0.426465597, 0.436466569, 0.44646775, 0.456468736, 0.466469931, 0.476470889, 0.486472056, 0.496473069, 0.506474236, 0.516475208, 0.526476375, 0.536477375, 0.546478569, 0.556479528, 0.566480708, 0.576481694, 0.586482861, 0.596483847, 0.606485014, 0.616486014, 0.626487181, 0.636488181, 0.646489333, 0.656490333, 0.6664915, 0.676492486, 0.686493681, 0.696494653, 0.706495819, 0.716496806, 0.726497986, 0.736499014, 0.746500139, 0.756501139, 0.766502292, 0.776503292, 0.786504486, 0.796505472, 0.806506625, 0.816507639, 0.826508792, 0.836509847, 0.846510931, 0.856511931, 0.866513097, 0.876514097, 0.886515292, 0.89651625, 0.906517417, 0.916518417, 0.926519583, 0.936520597, 0.946521764, 0.956522736, 0.966523903, 0.976524889, 0.986526056, 0.996527125, 1.006528222, 1.016529208, 1.026530389] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:39.116" endtime="20201112 12:29:39.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.103" endtime="20201112 12:29:39.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:39.128" endtime="20201112 12:29:39.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:39.136" endtime="20201112 12:29:39.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.132" endtime="20201112 12:29:39.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.123" endtime="20201112 12:29:39.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.505" endtime="20201112 12:29:39.162"></status>
</kw>
<msg timestamp="20201112 12:29:39.163" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:39.184" endtime="20201112 12:29:41.305"></status>
</kw>
<msg timestamp="20201112 12:29:41.306" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51823022, 'wakeups': [51833102, 51843099, 51853099, 51863099, 51873099...</msg>
<status status="PASS" starttime="20201112 12:29:39.181" endtime="20201112 12:29:41.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.313" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51823022, 'wakeups': [51833102, 51843099, 51853099, 51863099, 51873099...</msg>
<status status="PASS" starttime="20201112 12:29:41.309" endtime="20201112 12:29:41.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:41.316" endtime="20201112 12:29:41.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.173" endtime="20201112 12:29:41.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.168" endtime="20201112 12:29:41.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:41.329" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [51833102, 51843099, 51853099, 51863099, 51873099, 51883099, 51893099, 51903099, 51913099, 51923099, 51933099, 51943099, 51953099, 51963099, 51973099, 51983099, 51...</msg>
<status status="PASS" starttime="20201112 12:29:41.325" endtime="20201112 12:29:41.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.340" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:41.337" endtime="20201112 12:29:41.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.344" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:41.342" endtime="20201112 12:29:41.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.331" endtime="20201112 12:29:41.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.357" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:41.354" endtime="20201112 12:29:41.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.361" level="INFO">VALUE: 51823022</msg>
<status status="PASS" starttime="20201112 12:29:41.359" endtime="20201112 12:29:41.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.348" endtime="20201112 12:29:41.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.374" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:41.372" endtime="20201112 12:29:41.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.386" level="INFO">VALUE: [51833102, 51843099, 51853099, 51863099, 51873099, 51883099, 51893099, 51903099, 51913099, 51923099, 51933099, 51943099, 51953099, 51963099, 51973099, 51983099, 51993099, 52003099, 52013099, 52023099, 52033099, 52043099, 52053099, 52063099, 52073099, 52083099, 52093099, 52103099, 52113099, 52123099, 52133099, 52143099, 52153099, 52163099, 52173099, 52183099, 52193099, 52203099, 52213099, 52223099, 52233099, 52243099, 52253099, 52263099, 52273099, 52283099, 52293099, 52303099, 52313099, 52323099, 52333099, 52343099, 52353099, 52363099, 52373099, 52383099, 52393099, 52403099, 52413099, 52423099, 52433099, 52443099, 52453099, 52463099, 52473099, 52483099, 52493099, 52503099, 52513099, 52523099, 52533099, 52543099, 52553099, 52563099, 52573099, 52583099, 52593099, 52603099, 52613099, 52623099, 52633099, 52643099, 52653099, 52663099, 52673099, 52683099, 52693099, 52703099, 52713099, 52723099, 52733099, 52743099, 52753099, 52763099, 52773099, 52783099, 52793099, 52803099, 52813099, 52823099]</msg>
<status status="PASS" starttime="20201112 12:29:41.381" endtime="20201112 12:29:41.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.365" endtime="20201112 12:29:41.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:41.405" endtime="20201112 12:29:41.753"></status>
</kw>
<msg timestamp="20201112 12:29:41.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039024681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049106069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:41.402" endtime="20201112 12:29:41.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039024681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049106069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:41.762" endtime="20201112 12:29:41.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:41.779" endtime="20201112 12:29:41.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.394" endtime="20201112 12:29:41.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.389" endtime="20201112 12:29:41.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:41.841" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:41.788" endtime="20201112 12:29:41.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.851" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:41.850" endtime="20201112 12:29:41.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.853" level="INFO">VALUE: 0.039024681</msg>
<status status="PASS" starttime="20201112 12:29:41.852" endtime="20201112 12:29:41.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.843" endtime="20201112 12:29:41.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.860" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:41.859" endtime="20201112 12:29:41.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:41.862" level="INFO">VALUE: [0.049106069, 0.059104444, 0.069105431, 0.079106556, 0.089107597, 0.099108708, 0.109109722, 0.119110889, 0.129111861, 0.139113028, 0.149114042, 0.15911525, 0.169116194, 0.179117347, 0.189118333, 0.199119556, 0.209120486, 0.219121653, 0.229122667, 0.239123833, 0.249124819, 0.259125958, 0.269126958, 0.279128139, 0.289129125, 0.299130278, 0.309131278, 0.3191325, 0.329133431, 0.339134611, 0.349135611, 0.35913675, 0.36913775, 0.379138972, 0.389139917, 0.399141111, 0.409142056, 0.419143278, 0.429144278, 0.439145389, 0.449146375, 0.459147542, 0.469148597, 0.479149694, 0.489150708, 0.499151875, 0.509152903, 0.519154014, 0.529155014, 0.539156167, 0.549157167, 0.559158347, 0.569159319, 0.579160528, 0.589161542, 0.599162667, 0.609163639, 0.619164806, 0.629165819, 0.639166972, 0.649167972, 0.659169125, 0.669170139, 0.679171292, 0.689172278, 0.699173444, 0.709174431, 0.719175653, 0.729176597, 0.739177764, 0.74917875, 0.759179944, 0.769180917, 0.779182069, 0.789183069, 0.799184236, 0.809185236, 0.819186389, 0.829187417, 0.839188611, 0.849189542, 0.859190722, 0.869191708, 0.879192931, 0.889193875, 0.899195028, 0.909196028, 0.919197181, 0.929198181, 0.939199375, 0.949200333, 0.959201514, 0.9692025, 0.979203667, 0.989204653, 0.999205833, 1.009206833, 1.019207972, 1.029208986, 1.039210194] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:41.861" endtime="20201112 12:29:41.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.855" endtime="20201112 12:29:41.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:41.866" endtime="20201112 12:29:41.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:41.870" endtime="20201112 12:29:41.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.868" endtime="20201112 12:29:41.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.864" endtime="20201112 12:29:41.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.164" endtime="20201112 12:29:41.893"></status>
</kw>
<msg timestamp="20201112 12:29:41.894" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:41.904" endtime="20201112 12:29:44.023"></status>
</kw>
<msg timestamp="20201112 12:29:44.024" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54540716, 'wakeups': [54550795, 54560793, 54570793, 54580793, 54590793...</msg>
<status status="PASS" starttime="20201112 12:29:41.902" endtime="20201112 12:29:44.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.028" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54540716, 'wakeups': [54550795, 54560793, 54570793, 54580793, 54590793...</msg>
<status status="PASS" starttime="20201112 12:29:44.026" endtime="20201112 12:29:44.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:44.029" endtime="20201112 12:29:44.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.898" endtime="20201112 12:29:44.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.896" endtime="20201112 12:29:44.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:44.035" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [54550795, 54560793, 54570793, 54580793, 54590793, 54600793, 54610793, 54620793, 54630793, 54640793, 54650793, 54660793, 54670793, 54680793, 54690793, 54700793, 54...</msg>
<status status="PASS" starttime="20201112 12:29:44.033" endtime="20201112 12:29:44.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.040" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:44.039" endtime="20201112 12:29:44.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.042" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:44.041" endtime="20201112 12:29:44.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.036" endtime="20201112 12:29:44.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.048" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:44.047" endtime="20201112 12:29:44.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.051" level="INFO">VALUE: 54540716</msg>
<status status="PASS" starttime="20201112 12:29:44.049" endtime="20201112 12:29:44.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.044" endtime="20201112 12:29:44.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.056" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:44.055" endtime="20201112 12:29:44.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.059" level="INFO">VALUE: [54550795, 54560793, 54570793, 54580793, 54590793, 54600793, 54610793, 54620793, 54630793, 54640793, 54650793, 54660793, 54670793, 54680793, 54690793, 54700793, 54710793, 54720793, 54730793, 54740793, 54750793, 54760793, 54770793, 54780793, 54790793, 54800793, 54810793, 54820793, 54830793, 54840793, 54850793, 54860793, 54870793, 54880793, 54890793, 54900793, 54910793, 54920793, 54930793, 54940793, 54950793, 54960793, 54970793, 54980793, 54990793, 55000793, 55010793, 55020793, 55030793, 55040793, 55050793, 55060793, 55070793, 55080793, 55090793, 55100793, 55110793, 55120793, 55130793, 55140793, 55150793, 55160793, 55170793, 55180793, 55190793, 55200793, 55210793, 55220793, 55230793, 55240793, 55250793, 55260793, 55270793, 55280793, 55290793, 55300793, 55310793, 55320793, 55330793, 55340793, 55350793, 55360793, 55370793, 55380793, 55390793, 55400793, 55410793, 55420793, 55430793, 55440793, 55450793, 55460793, 55470793, 55480793, 55490793, 55500793, 55510793, 55520793, 55530793, 55540793]</msg>
<status status="PASS" starttime="20201112 12:29:44.058" endtime="20201112 12:29:44.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.052" endtime="20201112 12:29:44.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:44.068" endtime="20201112 12:29:44.360"></status>
</kw>
<msg timestamp="20201112 12:29:44.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032389458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:44.066" endtime="20201112 12:29:44.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032389458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:44.364" endtime="20201112 12:29:44.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:44.372" endtime="20201112 12:29:44.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.063" endtime="20201112 12:29:44.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.061" endtime="20201112 12:29:44.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:44.399" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:44.377" endtime="20201112 12:29:44.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.405" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:44.404" endtime="20201112 12:29:44.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.407" level="INFO">VALUE: 0.022308403</msg>
<status status="PASS" starttime="20201112 12:29:44.406" endtime="20201112 12:29:44.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.400" endtime="20201112 12:29:44.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.414" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:44.412" endtime="20201112 12:29:44.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:44.416" level="INFO">VALUE: [0.032389458, 0.042388792, 0.052389778, 0.062390944, 0.072391958, 0.082393097, 0.092394097, 0.102395264, 0.112396264, 0.122397417, 0.132398403, 0.142399569, 0.152400569, 0.162401708, 0.172402722, 0.182403861, 0.192404861, 0.202406028, 0.212407014, 0.222408181, 0.232409167, 0.242410361, 0.252411319, 0.2624125, 0.272413486, 0.282414653, 0.292415639, 0.302416819, 0.312417806, 0.322418958, 0.332419958, 0.342421125, 0.352422111, 0.362423319, 0.37242425, 0.382425431, 0.392426431, 0.402427583, 0.412428569, 0.42242975, 0.432430778, 0.442431889, 0.452432875, 0.462434056, 0.472435056, 0.482436222, 0.49243725, 0.502438361, 0.512439347, 0.522440514, 0.532441514, 0.542442736, 0.552443681, 0.562444847, 0.572445819, 0.582446986, 0.592447972, 0.602449153, 0.612450139, 0.622451306, 0.632452306, 0.642453444, 0.652454444, 0.662455611, 0.672456597, 0.682457778, 0.69245875, 0.702459931, 0.712460931, 0.722462125, 0.732463083, 0.742464236, 0.752465222, 0.762466389, 0.772467389, 0.782468542, 0.792469556, 0.802470694, 0.812471694, 0.822472917, 0.832473847, 0.842475028, 0.852476, 0.862477181, 0.872478167, 0.882479375, 0.892480347, 0.902481486, 0.912482486, 0.922483722, 0.932484639, 0.942485792, 0.952486806, 0.962487972, 0.972488986, 0.982490125, 0.992491097, 1.002492264, 1.012493306, 1.022494417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:44.415" endtime="20201112 12:29:44.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.409" endtime="20201112 12:29:44.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:44.420" endtime="20201112 12:29:44.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:44.424" endtime="20201112 12:29:44.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.422" endtime="20201112 12:29:44.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.418" endtime="20201112 12:29:44.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:41.894" endtime="20201112 12:29:44.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.503" endtime="20201112 12:29:44.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.502" endtime="20201112 12:29:44.446"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:44.449" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:44.459" endtime="20201112 12:29:46.578"></status>
</kw>
<msg timestamp="20201112 12:29:46.579" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57095909, 'wakeups': [57106003, 57116004, 57126005, 57136005, 57146005...</msg>
<status status="PASS" starttime="20201112 12:29:44.457" endtime="20201112 12:29:46.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.587" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57095909, 'wakeups': [57106003, 57116004, 57126005, 57136005, 57146005...</msg>
<status status="PASS" starttime="20201112 12:29:46.581" endtime="20201112 12:29:46.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:46.589" endtime="20201112 12:29:46.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.454" endtime="20201112 12:29:46.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.451" endtime="20201112 12:29:46.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:46.595" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [57106003, 57116004, 57126005, 57136005, 57146005, 57156005, 57166005, 57176005, 57186005, 57196005, 57206005, 57216005, 57226005, 57236005, 57246005, 57256005, 57...</msg>
<status status="PASS" starttime="20201112 12:29:46.593" endtime="20201112 12:29:46.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.600" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:46.599" endtime="20201112 12:29:46.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.602" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:46.601" endtime="20201112 12:29:46.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.596" endtime="20201112 12:29:46.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.608" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:46.607" endtime="20201112 12:29:46.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.610" level="INFO">VALUE: 57095909</msg>
<status status="PASS" starttime="20201112 12:29:46.609" endtime="20201112 12:29:46.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.604" endtime="20201112 12:29:46.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.616" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:46.615" endtime="20201112 12:29:46.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.619" level="INFO">VALUE: [57106003, 57116004, 57126005, 57136005, 57146005, 57156005, 57166005, 57176005, 57186005, 57196005, 57206005, 57216005, 57226005, 57236005, 57246005, 57256005, 57266005, 57276005, 57286005, 57296005, 57306005, 57316005, 57326005, 57336005, 57346005, 57356005, 57366005, 57376005, 57386005, 57396005, 57406005, 57416005, 57426005, 57436005, 57446005, 57456005, 57466005, 57476005, 57486005, 57496005, 57506005, 57516005, 57526005, 57536005, 57546005, 57556005, 57566005, 57576005, 57586005, 57596005, 57606005, 57616005, 57626005, 57636005, 57646005, 57656005, 57666005, 57676005, 57686005, 57696005, 57706005, 57716005, 57726005, 57736005, 57746005, 57756005, 57766005, 57776005, 57786005, 57796005, 57806005, 57816005, 57826005, 57836005, 57846005, 57856005, 57866005, 57876005, 57886005, 57896005, 57906005, 57916005, 57926005, 57936005, 57946005, 57956005, 57966005, 57976005, 57986005, 57996005, 58006005, 58016005, 58026005, 58036005, 58046005, 58056005, 58066005, 58076005, 58086005, 58096005]</msg>
<status status="PASS" starttime="20201112 12:29:46.618" endtime="20201112 12:29:46.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.612" endtime="20201112 12:29:46.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:46.628" endtime="20201112 12:29:46.963"></status>
</kw>
<msg timestamp="20201112 12:29:46.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035069153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:46.626" endtime="20201112 12:29:46.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:46.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035069153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:46.972" endtime="20201112 12:29:46.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:46.989" endtime="20201112 12:29:46.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.623" endtime="20201112 12:29:46.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:46.621" endtime="20201112 12:29:46.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:47.052" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:46.998" endtime="20201112 12:29:47.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:47.063" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:47.061" endtime="20201112 12:29:47.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:47.068" level="INFO">VALUE: 0.024972861</msg>
<status status="PASS" starttime="20201112 12:29:47.066" endtime="20201112 12:29:47.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:47.054" endtime="20201112 12:29:47.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:47.082" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:47.079" endtime="20201112 12:29:47.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:47.086" level="INFO">VALUE: [0.035069153, 0.045071472, 0.055073389, 0.065074556, 0.075075542, 0.085076708, 0.095077694, 0.105078875, 0.115079847, 0.125081014, 0.135082014, 0.145083167, 0.155084153, 0.165085319, 0.175086361, 0.185087472, 0.195088472, 0.205089625, 0.215090611, 0.225091792, 0.235092778, 0.245093944, 0.255094917, 0.265096097, 0.275097069, 0.28509825, 0.295099236, 0.305100389, 0.315101375, 0.325102569, 0.335103528, 0.345104694, 0.355105708, 0.365106861, 0.375107847, 0.385109014, 0.39511, 0.405111167, 0.415112153, 0.425113306, 0.435114306, 0.445115472, 0.455116486, 0.465117625, 0.475118611, 0.485119833, 0.495120764, 0.505121944, 0.515122986, 0.525124083, 0.535125097, 0.545126236, 0.555127292, 0.565128403, 0.575129389, 0.585130556, 0.595131611, 0.605132708, 0.615133694, 0.625134875, 0.635135847, 0.645137028, 0.655138028, 0.665139167, 0.675140167, 0.685141333, 0.695142319, 0.705143514, 0.715144486, 0.725145639, 0.735146639, 0.745147792, 0.755148778, 0.765150014, 0.775150944, 0.785152153, 0.795153097, 0.80515425, 0.815155292, 0.825156417, 0.835157417, 0.845158569, 0.855159569, 0.865160764, 0.87516175, 0.885162931, 0.895163917, 0.905165083, 0.915166083, 0.92516725, 0.93516825, 0.945169431, 0.955170458, 0.965171597, 0.975172597, 0.985173764, 0.995174764, 1.005175931, 1.015176931, 1.025178125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:47.084" endtime="20201112 12:29:47.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:47.071" endtime="20201112 12:29:47.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:47.095" endtime="20201112 12:29:47.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:47.104" endtime="20201112 12:29:47.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:47.099" endtime="20201112 12:29:47.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:47.091" endtime="20201112 12:29:47.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.449" endtime="20201112 12:29:47.130"></status>
</kw>
<msg timestamp="20201112 12:29:47.130" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:47.152" endtime="20201112 12:29:49.274"></status>
</kw>
<msg timestamp="20201112 12:29:49.275" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59790488, 'wakeups': [59800582, 59810583, 59820584, 59830584, 59840584...</msg>
<status status="PASS" starttime="20201112 12:29:47.148" endtime="20201112 12:29:49.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.282" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59790488, 'wakeups': [59800582, 59810583, 59820584, 59830584, 59840584...</msg>
<status status="PASS" starttime="20201112 12:29:49.277" endtime="20201112 12:29:49.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:49.284" endtime="20201112 12:29:49.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:47.141" endtime="20201112 12:29:49.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:47.136" endtime="20201112 12:29:49.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:49.298" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [59800582, 59810583, 59820584, 59830584, 59840584, 59850584, 59860584, 59870584, 59880584, 59890584, 59900584, 59910584, 59920584, 59930584, 59940584, 59950584, 59...</msg>
<status status="PASS" starttime="20201112 12:29:49.293" endtime="20201112 12:29:49.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.308" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:49.306" endtime="20201112 12:29:49.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.313" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:49.310" endtime="20201112 12:29:49.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.299" endtime="20201112 12:29:49.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.326" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:49.324" endtime="20201112 12:29:49.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.331" level="INFO">VALUE: 59790488</msg>
<status status="PASS" starttime="20201112 12:29:49.328" endtime="20201112 12:29:49.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.317" endtime="20201112 12:29:49.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.343" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:49.341" endtime="20201112 12:29:49.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.348" level="INFO">VALUE: [59800582, 59810583, 59820584, 59830584, 59840584, 59850584, 59860584, 59870584, 59880584, 59890584, 59900584, 59910584, 59920584, 59930584, 59940584, 59950584, 59960584, 59970584, 59980584, 59990584, 60000584, 60010584, 60020584, 60030584, 60040584, 60050584, 60060584, 60070584, 60080584, 60090584, 60100584, 60110584, 60120584, 60130584, 60140584, 60150584, 60160584, 60170584, 60180584, 60190584, 60200584, 60210584, 60220584, 60230584, 60240584, 60250584, 60260584, 60270584, 60280584, 60290584, 60300584, 60310584, 60320584, 60330584, 60340584, 60350584, 60360584, 60370584, 60380584, 60390584, 60400584, 60410584, 60420584, 60430584, 60440584, 60450584, 60460584, 60470584, 60480584, 60490584, 60500584, 60510584, 60520584, 60530584, 60540584, 60550584, 60560584, 60570584, 60580584, 60590584, 60600584, 60610584, 60620584, 60630584, 60640584, 60650584, 60660584, 60670584, 60680584, 60690584, 60700584, 60710584, 60720584, 60730584, 60740584, 60750584, 60760584, 60770584, 60780584, 60790584]</msg>
<status status="PASS" starttime="20201112 12:29:49.346" endtime="20201112 12:29:49.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.334" endtime="20201112 12:29:49.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:49.371" endtime="20201112 12:29:49.718"></status>
</kw>
<msg timestamp="20201112 12:29:49.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039161139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:49.368" endtime="20201112 12:29:49.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039161139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:49.727" endtime="20201112 12:29:49.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:49.737" endtime="20201112 12:29:49.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.360" endtime="20201112 12:29:49.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.356" endtime="20201112 12:29:49.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:49.763" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:49.741" endtime="20201112 12:29:49.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.769" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:49.768" endtime="20201112 12:29:49.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.771" level="INFO">VALUE: 0.039161139</msg>
<status status="PASS" starttime="20201112 12:29:49.770" endtime="20201112 12:29:49.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.764" endtime="20201112 12:29:49.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.777" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:49.776" endtime="20201112 12:29:49.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:49.780" level="INFO">VALUE: [0.049257139, 0.059259333, 0.069261347, 0.079262514, 0.0892635, 0.099264667, 0.109265667, 0.119266819, 0.129267833, 0.139268986, 0.14927, 0.159271167, 0.169272153, 0.179273306, 0.189274306, 0.199275528, 0.209276472, 0.219277639, 0.229278639, 0.239279819, 0.249280792, 0.259281986, 0.269282972, 0.279284125, 0.289285139, 0.299286333, 0.309287306, 0.319288458, 0.329289458, 0.339290611, 0.349291625, 0.359292792, 0.369293819, 0.379294958, 0.389295958, 0.399297167, 0.409298194, 0.419299278, 0.429300278, 0.439301444, 0.449302431, 0.459303639, 0.469304597, 0.479305764, 0.489306764, 0.499307931, 0.509308931, 0.519310097, 0.529311097, 0.539312278, 0.549313292, 0.559314444, 0.569315431, 0.579316597, 0.589317597, 0.599318764, 0.609319764, 0.619320931, 0.629321931, 0.639323097, 0.649324097, 0.659325333, 0.66932625, 0.679327417, 0.689328417, 0.699329597, 0.709330583, 0.71933175, 0.729332778, 0.739333917, 0.749334931, 0.759336083, 0.769337083, 0.77933825, 0.78933925, 0.799340431, 0.809341431, 0.819342597, 0.829343611, 0.83934475, 0.849345736, 0.859346903, 0.869347917, 0.879349069, 0.889350083, 0.899351236, 0.909352236, 0.919353417, 0.929354472, 0.939355583, 0.949356583, 0.95935775, 0.969358736, 0.979359903, 0.989360903, 0.999362153, 1.009363056, 1.019364236, 1.029365222, 1.039366417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:49.778" endtime="20201112 12:29:49.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.773" endtime="20201112 12:29:49.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:49.784" endtime="20201112 12:29:49.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:49.788" endtime="20201112 12:29:49.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.786" endtime="20201112 12:29:49.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.782" endtime="20201112 12:29:49.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:47.132" endtime="20201112 12:29:49.811"></status>
</kw>
<msg timestamp="20201112 12:29:49.811" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:49.821" endtime="20201112 12:29:51.921"></status>
</kw>
<msg timestamp="20201112 12:29:51.921" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62457794, 'wakeups': [62467887, 62477889, 62487890, 62497890, 62507890...</msg>
<status status="PASS" starttime="20201112 12:29:49.819" endtime="20201112 12:29:51.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.925" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62457794, 'wakeups': [62467887, 62477889, 62487890, 62497890, 62507890...</msg>
<status status="PASS" starttime="20201112 12:29:51.922" endtime="20201112 12:29:51.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:51.926" endtime="20201112 12:29:51.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.816" endtime="20201112 12:29:51.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.813" endtime="20201112 12:29:51.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:51.932" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [62467887, 62477889, 62487890, 62497890, 62507890, 62517890, 62527890, 62537890, 62547890, 62557890, 62567890, 62577890, 62587890, 62597890, 62607890, 62617890, 62...</msg>
<status status="PASS" starttime="20201112 12:29:51.930" endtime="20201112 12:29:51.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.937" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:51.936" endtime="20201112 12:29:51.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.940" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:51.938" endtime="20201112 12:29:51.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.933" endtime="20201112 12:29:51.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.946" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:51.944" endtime="20201112 12:29:51.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.948" level="INFO">VALUE: 62457794</msg>
<status status="PASS" starttime="20201112 12:29:51.947" endtime="20201112 12:29:51.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.941" endtime="20201112 12:29:51.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.954" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:51.952" endtime="20201112 12:29:51.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:51.956" level="INFO">VALUE: [62467887, 62477889, 62487890, 62497890, 62507890, 62517890, 62527890, 62537890, 62547890, 62557890, 62567890, 62577890, 62587890, 62597890, 62607890, 62617890, 62627890, 62637890, 62647890, 62657890, 62667890, 62677890, 62687890, 62697890, 62707890, 62717890, 62727890, 62737890, 62747890, 62757890, 62767890, 62777890, 62787890, 62797890, 62807890, 62817890, 62827890, 62837890, 62847890, 62857890, 62867890, 62877890, 62887890, 62897890, 62907890, 62917890, 62927890, 62937890, 62947890, 62957890, 62967890, 62977890, 62987890, 62997890, 63007890, 63017890, 63027890, 63037890, 63047890, 63057890, 63067890, 63077890, 63087890, 63097890, 63107890, 63117890, 63127890, 63137890, 63147890, 63157890, 63167890, 63177890, 63187890, 63197890, 63207890, 63217890, 63227890, 63237890, 63247890, 63257890, 63267890, 63277890, 63287890, 63297890, 63307890, 63317890, 63327890, 63337890, 63347890, 63357890, 63367890, 63377890, 63387890, 63397890, 63407890, 63417890, 63427890, 63437890, 63447890, 63457890]</msg>
<status status="PASS" starttime="20201112 12:29:51.955" endtime="20201112 12:29:51.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.949" endtime="20201112 12:29:51.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:52.014" endtime="20201112 12:29:52.353"></status>
</kw>
<msg timestamp="20201112 12:29:52.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032048236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:52.013" endtime="20201112 12:29:52.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:52.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032048236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:52.362" endtime="20201112 12:29:52.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:52.379" endtime="20201112 12:29:52.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.009" endtime="20201112 12:29:52.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:51.958" endtime="20201112 12:29:52.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:52.442" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:52.389" endtime="20201112 12:29:52.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:52.453" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:52.450" endtime="20201112 12:29:52.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:52.457" level="INFO">VALUE: 0.021952611</msg>
<status status="PASS" starttime="20201112 12:29:52.455" endtime="20201112 12:29:52.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.444" endtime="20201112 12:29:52.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:52.471" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:52.468" endtime="20201112 12:29:52.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:52.475" level="INFO">VALUE: [0.032048236, 0.042051486, 0.0520535, 0.062054653, 0.072055639, 0.082056806, 0.092057819, 0.102058972, 0.112059958, 0.122061125, 0.132062125, 0.142063292, 0.152064319, 0.162065444, 0.172066444, 0.182067625, 0.192068611, 0.202069833, 0.212070792, 0.222071944, 0.232072931, 0.242074097, 0.252075097, 0.262076264, 0.27207725, 0.282078417, 0.292079417, 0.302080597, 0.312081583, 0.32208275, 0.33208375, 0.342084917, 0.352085903, 0.362087097, 0.372088069, 0.38208925, 0.392090236, 0.402091403, 0.412092403, 0.422093556, 0.432094556, 0.442095722, 0.452096722, 0.462097958, 0.472098889, 0.482100056, 0.492101056, 0.502102222, 0.512103208, 0.522104389, 0.532105375, 0.542106542, 0.552107542, 0.562108708, 0.572109736, 0.582110875, 0.592111875, 0.602113056, 0.612114028, 0.622115236, 0.632116194, 0.642117361, 0.652118361, 0.662119528, 0.672120528, 0.682121708, 0.69212275, 0.702123875, 0.712124903, 0.722126014, 0.732127028, 0.742128181, 0.752129181, 0.762130361, 0.772131347, 0.782132514, 0.792133514, 0.802134681, 0.812135681, 0.822136861, 0.832137875, 0.842139014, 0.85214, 0.862141167, 0.872142167, 0.882143333, 0.892144347, 0.9021455, 0.912146514, 0.922147653, 0.932148653, 0.942149819, 0.952150819, 0.962152, 0.972153, 0.982154153, 0.992155153, 1.002156319, 1.012157306, 1.022158486] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:52.473" endtime="20201112 12:29:52.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.461" endtime="20201112 12:29:52.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:52.484" endtime="20201112 12:29:52.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:52.493" endtime="20201112 12:29:52.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.488" endtime="20201112 12:29:52.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.480" endtime="20201112 12:29:52.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:49.811" endtime="20201112 12:29:52.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.447" endtime="20201112 12:29:52.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:44.446" endtime="20201112 12:29:52.520"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:52.525" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:52.548" endtime="20201112 12:29:54.669"></status>
</kw>
<msg timestamp="20201112 12:29:54.671" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65186485, 'wakeups': [65196599, 65206599, 65216599, 65226599, 65236599...</msg>
<status status="PASS" starttime="20201112 12:29:52.544" endtime="20201112 12:29:54.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.677" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65186485, 'wakeups': [65196599, 65206599, 65216599, 65226599, 65236599...</msg>
<status status="PASS" starttime="20201112 12:29:54.673" endtime="20201112 12:29:54.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:54.680" endtime="20201112 12:29:54.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.536" endtime="20201112 12:29:54.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.531" endtime="20201112 12:29:54.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:54.695" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [65196599, 65206599, 65216599, 65226599, 65236599, 65246599, 65256599, 65266599, 65276599, 65286599, 65296599, 65306599, 65316599, 65326599, 65336599, 65346599, 65...</msg>
<status status="PASS" starttime="20201112 12:29:54.690" endtime="20201112 12:29:54.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.706" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:54.703" endtime="20201112 12:29:54.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.710" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:54.708" endtime="20201112 12:29:54.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.697" endtime="20201112 12:29:54.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.723" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:54.721" endtime="20201112 12:29:54.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.727" level="INFO">VALUE: 65186485</msg>
<status status="PASS" starttime="20201112 12:29:54.725" endtime="20201112 12:29:54.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.714" endtime="20201112 12:29:54.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.740" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:54.738" endtime="20201112 12:29:54.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:54.745" level="INFO">VALUE: [65196599, 65206599, 65216599, 65226599, 65236599, 65246599, 65256599, 65266599, 65276599, 65286599, 65296599, 65306599, 65316599, 65326599, 65336599, 65346599, 65356599, 65366599, 65376599, 65386599, 65396599, 65406599, 65416599, 65426599, 65436599, 65446599, 65456599, 65466599, 65476599, 65486599, 65496599, 65506599, 65516599, 65526599, 65536599, 65546599, 65556599, 65566599, 65576599, 65586599, 65596599, 65606599, 65616599, 65626599, 65636599, 65646599, 65656599, 65666599, 65676599, 65686599, 65696599, 65706599, 65716599, 65726599, 65736599, 65746599, 65756599, 65766599, 65776599, 65786599, 65796599, 65806599, 65816599, 65826599, 65836599, 65846599, 65856599, 65866599, 65876599, 65886599, 65896599, 65906599, 65916599, 65926599, 65936599, 65946599, 65956599, 65966599, 65976599, 65986599, 65996599, 66006599, 66016599, 66026599, 66036599, 66046599, 66056599, 66066599, 66076599, 66086599, 66096599, 66106599, 66116599, 66126599, 66136599, 66146599, 66156599, 66166599, 66176599, 66186599]</msg>
<status status="PASS" starttime="20201112 12:29:54.742" endtime="20201112 12:29:54.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.731" endtime="20201112 12:29:54.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:54.765" endtime="20201112 12:29:55.108"></status>
</kw>
<msg timestamp="20201112 12:29:55.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045932153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056048514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:54.761" endtime="20201112 12:29:55.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:55.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045932153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056048514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:55.112" endtime="20201112 12:29:55.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:55.119" endtime="20201112 12:29:55.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.754" endtime="20201112 12:29:55.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:54.749" endtime="20201112 12:29:55.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:55.148" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:55.124" endtime="20201112 12:29:55.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:55.153" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:55.152" endtime="20201112 12:29:55.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:55.155" level="INFO">VALUE: 0.045932153</msg>
<status status="PASS" starttime="20201112 12:29:55.154" endtime="20201112 12:29:55.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:55.149" endtime="20201112 12:29:55.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:55.162" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:55.161" endtime="20201112 12:29:55.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:55.164" level="INFO">VALUE: [0.056048514, 0.066048736, 0.076049722, 0.086050958, 0.096051861, 0.106053028, 0.116054028, 0.126055208, 0.136056181, 0.146057347, 0.156058347, 0.166059542, 0.1760605, 0.186061681, 0.196062681, 0.206063847, 0.216064847, 0.226066, 0.236067028, 0.246068153, 0.256069153, 0.266070319, 0.276071333, 0.286072472, 0.296073472, 0.306074639, 0.316075639, 0.326076889, 0.336077806, 0.346078986, 0.356079972, 0.366081125, 0.376082125, 0.386083292, 0.396084292, 0.406085458, 0.416086458, 0.426087611, 0.436088625, 0.446089778, 0.456090792, 0.466091931, 0.476092958, 0.486094097, 0.496095097, 0.506096306, 0.516097278, 0.526098444, 0.536099431, 0.546100597, 0.556101597, 0.566102764, 0.576103764, 0.586104917, 0.596105917, 0.606107083, 0.616108097, 0.626109264, 0.636110236, 0.646111403, 0.656112417, 0.666113597, 0.676114583, 0.686115736, 0.696116736, 0.706117903, 0.716118903, 0.726120056, 0.736121069, 0.746122278, 0.756123236, 0.766124403, 0.776125403, 0.786126556, 0.796127556, 0.806128722, 0.816129736, 0.826130875, 0.836131875, 0.846133042, 0.856134056, 0.866135222, 0.876136194, 0.886137361, 0.896138375, 0.906139528, 0.916140528, 0.926141694, 0.936142708, 0.946143875, 0.956144889, 0.966146028, 0.976147014, 0.986148181, 0.996149194, 1.006150347, 1.016151361, 1.026152514, 1.0361535, 1.046154681] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:55.163" endtime="20201112 12:29:55.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:55.157" endtime="20201112 12:29:55.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:55.168" endtime="20201112 12:29:55.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:55.172" endtime="20201112 12:29:55.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:55.170" endtime="20201112 12:29:55.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:55.166" endtime="20201112 12:29:55.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.527" endtime="20201112 12:29:55.197"></status>
</kw>
<msg timestamp="20201112 12:29:55.197" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:55.219" endtime="20201112 12:29:57.344"></status>
</kw>
<msg timestamp="20201112 12:29:57.345" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67857309, 'wakeups': [67867423, 67877423, 67887423, 67897423, 67907423...</msg>
<status status="PASS" starttime="20201112 12:29:55.215" endtime="20201112 12:29:57.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.352" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67857309, 'wakeups': [67867423, 67877423, 67887423, 67897423, 67907423...</msg>
<status status="PASS" starttime="20201112 12:29:57.348" endtime="20201112 12:29:57.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:57.355" endtime="20201112 12:29:57.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:55.208" endtime="20201112 12:29:57.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:55.203" endtime="20201112 12:29:57.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:57.368" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [67867423, 67877423, 67887423, 67897423, 67907423, 67917423, 67927423, 67937423, 67947423, 67957423, 67967423, 67977423, 67987423, 67997423, 68007423, 68017423, 68...</msg>
<status status="PASS" starttime="20201112 12:29:57.363" endtime="20201112 12:29:57.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.411" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:57.409" endtime="20201112 12:29:57.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.416" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:57.414" endtime="20201112 12:29:57.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.402" endtime="20201112 12:29:57.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.428" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:57.426" endtime="20201112 12:29:57.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.433" level="INFO">VALUE: 67857309</msg>
<status status="PASS" starttime="20201112 12:29:57.431" endtime="20201112 12:29:57.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.419" endtime="20201112 12:29:57.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.446" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:57.443" endtime="20201112 12:29:57.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.451" level="INFO">VALUE: [67867423, 67877423, 67887423, 67897423, 67907423, 67917423, 67927423, 67937423, 67947423, 67957423, 67967423, 67977423, 67987423, 67997423, 68007423, 68017423, 68027423, 68037423, 68047423, 68057423, 68067423, 68077423, 68087423, 68097423, 68107423, 68117423, 68127423, 68137423, 68147423, 68157423, 68167423, 68177423, 68187423, 68197423, 68207423, 68217423, 68227423, 68237423, 68247423, 68257423, 68267423, 68277423, 68287423, 68297423, 68307423, 68317423, 68327423, 68337423, 68347423, 68357423, 68367423, 68377423, 68387423, 68397423, 68407423, 68417423, 68427423, 68437423, 68447423, 68457423, 68467423, 68477423, 68487423, 68497423, 68507423, 68517423, 68527423, 68537423, 68547423, 68557423, 68567423, 68577423, 68587423, 68597423, 68607423, 68617423, 68627423, 68637423, 68647423, 68657423, 68667423, 68677423, 68687423, 68697423, 68707423, 68717423, 68727423, 68737423, 68747423, 68757423, 68767423, 68777423, 68787423, 68797423, 68807423, 68817423, 68827423, 68837423, 68847423, 68857423]</msg>
<status status="PASS" starttime="20201112 12:29:57.448" endtime="20201112 12:29:57.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.437" endtime="20201112 12:29:57.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:57.472" endtime="20201112 12:29:57.831"></status>
</kw>
<msg timestamp="20201112 12:29:57.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038468056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048584472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:57.469" endtime="20201112 12:29:57.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038468056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048584472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:57.839" endtime="20201112 12:29:57.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:57.857" endtime="20201112 12:29:57.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.461" endtime="20201112 12:29:57.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.455" endtime="20201112 12:29:57.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:57.918" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:57.865" endtime="20201112 12:29:57.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.928" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:57.926" endtime="20201112 12:29:57.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.933" level="INFO">VALUE: 0.038468056</msg>
<status status="PASS" starttime="20201112 12:29:57.931" endtime="20201112 12:29:57.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.919" endtime="20201112 12:29:57.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.947" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:57.944" endtime="20201112 12:29:57.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:57.952" level="INFO">VALUE: [0.048584472, 0.058584653, 0.068585681, 0.078586806, 0.088587819, 0.098588972, 0.108589986, 0.118591125, 0.128592139, 0.138593278, 0.148594347, 0.158595472, 0.168596472, 0.178597597, 0.188598597, 0.19859975, 0.208600764, 0.218601931, 0.228602903, 0.238604069, 0.248605069, 0.258606236, 0.268607222, 0.278608389, 0.288609389, 0.298610569, 0.308611542, 0.318612708, 0.328613778, 0.338614875, 0.348615861, 0.358617056, 0.368618028, 0.378619208, 0.388620181, 0.398621347, 0.408622347, 0.418623528, 0.4286245, 0.438625667, 0.448626681, 0.458627889, 0.468628819, 0.478629986, 0.488630986, 0.498632153, 0.508633139, 0.518634319, 0.528635333, 0.538636472, 0.548637472, 0.558638625, 0.568639625, 0.578640819, 0.588641806, 0.598642958, 0.608643958, 0.618645111, 0.628646111, 0.638647292, 0.648648278, 0.658649431, 0.668650444, 0.678651611, 0.688652583, 0.69865375, 0.70865475, 0.718655917, 0.728656917, 0.738658069, 0.748659069, 0.758660236, 0.768661278, 0.778662403, 0.788663389, 0.798664556, 0.808665556, 0.818666722, 0.828667722, 0.838668944, 0.848669875, 0.858671042, 0.868672042, 0.878673194, 0.888674208, 0.898675361, 0.908676347, 0.918677528, 0.928678514, 0.938679681, 0.948680694, 0.958681847, 0.968682833, 0.978684, 0.988685056, 0.998686167, 1.008687153, 1.018688333, 1.028689319, 1.038690472] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:57.950" endtime="20201112 12:29:57.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.937" endtime="20201112 12:29:57.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:57.961" endtime="20201112 12:29:57.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:57.970" endtime="20201112 12:29:57.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.965" endtime="20201112 12:29:57.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.957" endtime="20201112 12:29:57.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:55.199" endtime="20201112 12:29:57.996"></status>
</kw>
<msg timestamp="20201112 12:29:57.996" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:58.020" endtime="20201112 12:30:00.144"></status>
</kw>
<msg timestamp="20201112 12:30:00.146" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70658376, 'wakeups': [70668490, 70678490, 70688490, 70698490, 70708490...</msg>
<status status="PASS" starttime="20201112 12:29:58.016" endtime="20201112 12:30:00.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70658376, 'wakeups': [70668490, 70678490, 70688490, 70698490, 70708490...</msg>
<status status="PASS" starttime="20201112 12:30:00.148" endtime="20201112 12:30:00.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:00.155" endtime="20201112 12:30:00.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:58.007" endtime="20201112 12:30:00.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:58.002" endtime="20201112 12:30:00.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:00.165" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [70668490, 70678490, 70688490, 70698490, 70708490, 70718490, 70728490, 70738490, 70748490, 70758490, 70768490, 70778490, 70788490, 70798490, 70808490, 70818490, 70...</msg>
<status status="PASS" starttime="20201112 12:30:00.163" endtime="20201112 12:30:00.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.170" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:00.169" endtime="20201112 12:30:00.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.172" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:00.171" endtime="20201112 12:30:00.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.166" endtime="20201112 12:30:00.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.178" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:30:00.177" endtime="20201112 12:30:00.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.180" level="INFO">VALUE: 70658376</msg>
<status status="PASS" starttime="20201112 12:30:00.179" endtime="20201112 12:30:00.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.174" endtime="20201112 12:30:00.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.186" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:00.185" endtime="20201112 12:30:00.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.189" level="INFO">VALUE: [70668490, 70678490, 70688490, 70698490, 70708490, 70718490, 70728490, 70738490, 70748490, 70758490, 70768490, 70778490, 70788490, 70798490, 70808490, 70818490, 70828490, 70838490, 70848490, 70858490, 70868490, 70878490, 70888490, 70898490, 70908490, 70918490, 70928490, 70938490, 70948490, 70958490, 70968490, 70978490, 70988490, 70998490, 71008490, 71018490, 71028490, 71038490, 71048490, 71058490, 71068490, 71078490, 71088490, 71098490, 71108490, 71118490, 71128490, 71138490, 71148490, 71158490, 71168490, 71178490, 71188490, 71198490, 71208490, 71218490, 71228490, 71238490, 71248490, 71258490, 71268490, 71278490, 71288490, 71298490, 71308490, 71318490, 71328490, 71338490, 71348490, 71358490, 71368490, 71378490, 71388490, 71398490, 71408490, 71418490, 71428490, 71438490, 71448490, 71458490, 71468490, 71478490, 71488490, 71498490, 71508490, 71518490, 71528490, 71538490, 71548490, 71558490, 71568490, 71578490, 71588490, 71598490, 71608490, 71618490, 71628490, 71638490, 71648490, 71658490]</msg>
<status status="PASS" starttime="20201112 12:30:00.188" endtime="20201112 12:30:00.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.182" endtime="20201112 12:30:00.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:00.198" endtime="20201112 12:30:00.546"></status>
</kw>
<msg timestamp="20201112 12:30:00.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041134444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051250542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:00.197" endtime="20201112 12:30:00.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041134444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051250542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:00.555" endtime="20201112 12:30:00.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:00.573" endtime="20201112 12:30:00.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.193" endtime="20201112 12:30:00.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.191" endtime="20201112 12:30:00.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:00.636" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:30:00.581" endtime="20201112 12:30:00.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.647" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:30:00.645" endtime="20201112 12:30:00.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.652" level="INFO">VALUE: 0.041134444</msg>
<status status="PASS" starttime="20201112 12:30:00.650" endtime="20201112 12:30:00.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.638" endtime="20201112 12:30:00.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.666" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:00.663" endtime="20201112 12:30:00.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:00.670" level="INFO">VALUE: [0.051250542, 0.061251375, 0.071252375, 0.081253542, 0.091254528, 0.101255694, 0.111256681, 0.121257847, 0.131258861, 0.141260014, 0.151261, 0.161262181, 0.171263167, 0.181264319, 0.191265375, 0.201266472, 0.211267486, 0.221268708, 0.231269639, 0.241270806, 0.251271792, 0.261272944, 0.271273944, 0.281275125, 0.291276097, 0.301277264, 0.311278264, 0.321279417, 0.331280458, 0.341281597, 0.351282569, 0.361283736, 0.371284736, 0.381285903, 0.391286889, 0.401288069, 0.411289056, 0.421290208, 0.431291208, 0.441292375, 0.451293361, 0.461294528, 0.471295528, 0.481296694, 0.491297681, 0.501298847, 0.511299847, 0.521301, 0.531302, 0.541303167, 0.551304167, 0.561305319, 0.571306333, 0.5813075, 0.591308486, 0.601309639, 0.611310681, 0.621311819, 0.631312806, 0.641313972, 0.651315014, 0.661316167, 0.671317125, 0.681318278, 0.691319278, 0.701320458, 0.711321444, 0.721322597, 0.731323597, 0.741324764, 0.75132575, 0.761326917, 0.771327931, 0.781329125, 0.791330069, 0.801331236, 0.811332236, 0.821333403, 0.831334389, 0.841335556, 0.851336569, 0.86133775, 0.871338792, 0.881339875, 0.891340875, 0.901342028, 0.911343028, 0.921344194, 0.931345222, 0.941346375, 0.951347347, 0.961348542, 0.9713495, 0.981350681, 0.991351681, 1.001352833, 1.011353847, 1.021355, 1.031355986, 1.041357208] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:00.668" endtime="20201112 12:30:00.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.656" endtime="20201112 12:30:00.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:00.679" endtime="20201112 12:30:00.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:00.688" endtime="20201112 12:30:00.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.683" endtime="20201112 12:30:00.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.675" endtime="20201112 12:30:00.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:57.998" endtime="20201112 12:30:00.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.522" endtime="20201112 12:30:00.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:52.521" endtime="20201112 12:30:00.715"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:30:00.721" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:00.742" endtime="20201112 12:30:02.866"></status>
</kw>
<msg timestamp="20201112 12:30:02.868" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73380916, 'wakeups': [73391048, 73401047, 73411047, 73421047, 734310...</msg>
<status status="PASS" starttime="20201112 12:30:00.739" endtime="20201112 12:30:02.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.875" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73380916, 'wakeups': [73391048, 73401047, 73411047, 73421047, 734310...</msg>
<status status="PASS" starttime="20201112 12:30:02.870" endtime="20201112 12:30:02.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:02.877" endtime="20201112 12:30:02.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.732" endtime="20201112 12:30:02.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.726" endtime="20201112 12:30:02.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:02.890" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [73391048, 73401047, 73411047, 73421047, 73431047, 73441047, 73451047, 73461047, 73471047, 73481047, 73491047, 73501047, 73511047, 73521047, 73531047, 73541047, 73...</msg>
<status status="PASS" starttime="20201112 12:30:02.886" endtime="20201112 12:30:02.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.901" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:02.898" endtime="20201112 12:30:02.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.905" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:02.903" endtime="20201112 12:30:02.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.892" endtime="20201112 12:30:02.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.918" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:02.916" endtime="20201112 12:30:02.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.923" level="INFO">VALUE: 73380916</msg>
<status status="PASS" starttime="20201112 12:30:02.921" endtime="20201112 12:30:02.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.909" endtime="20201112 12:30:02.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.937" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:02.935" endtime="20201112 12:30:02.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:02.942" level="INFO">VALUE: [73391048, 73401047, 73411047, 73421047, 73431047, 73441047, 73451047, 73461047, 73471047, 73481047, 73491047, 73501047, 73511047, 73521047, 73531047, 73541047, 73551047, 73561047, 73571047, 73581047, 73591047, 73601047, 73611047, 73621047, 73631047, 73641047, 73651047, 73661047, 73671047, 73681047, 73691047, 73701047, 73711047, 73721047, 73731047, 73741047, 73751047, 73761047, 73771047, 73781047, 73791047, 73801047, 73811047, 73821047, 73831047, 73841047, 73851047, 73861047, 73871047, 73881047, 73891047, 73901047, 73911047, 73921047, 73931047, 73941047, 73951047, 73961047, 73971047, 73981047, 73991047, 74001047, 74011047, 74021047, 74031047, 74041047, 74051047, 74061047, 74071047, 74081047, 74091047, 74101047, 74111047, 74121047, 74131047, 74141047, 74151047, 74161047, 74171047, 74181047, 74191047, 74201047, 74211047, 74221047, 74231047, 74241047, 74251047, 74261047, 74271047, 74281047, 74291047, 74301047, 74311047, 74321047, 74331047, 74341047, 74351047, 74361047, 74371047, 74381047]</msg>
<status status="PASS" starttime="20201112 12:30:02.940" endtime="20201112 12:30:02.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.926" endtime="20201112 12:30:02.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:02.969" endtime="20201112 12:30:03.318"></status>
</kw>
<msg timestamp="20201112 12:30:03.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045959792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056093556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:02.958" endtime="20201112 12:30:03.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:03.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045959792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056093556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:03.322" endtime="20201112 12:30:03.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:03.329" endtime="20201112 12:30:03.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.951" endtime="20201112 12:30:03.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:02.946" endtime="20201112 12:30:03.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:03.356" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:30:03.334" endtime="20201112 12:30:03.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:03.362" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:03.361" endtime="20201112 12:30:03.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:03.364" level="INFO">VALUE: 0.045959792</msg>
<status status="PASS" starttime="20201112 12:30:03.363" endtime="20201112 12:30:03.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.357" endtime="20201112 12:30:03.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:03.371" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:03.369" endtime="20201112 12:30:03.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:03.373" level="INFO">VALUE: [0.056093556, 0.066094278, 0.076095278, 0.086096458, 0.096097431, 0.106098611, 0.116099597, 0.12610075, 0.13610175, 0.146102917, 0.156103903, 0.166105056, 0.176106069, 0.186107222, 0.196108222, 0.206109389, 0.216110361, 0.226111528, 0.236112528, 0.246113694, 0.256114681, 0.266115847, 0.276116847, 0.286118, 0.296119, 0.306120153, 0.316121194, 0.326122319, 0.336123306, 0.346124528, 0.356125472, 0.366126625, 0.376127625, 0.386128778, 0.396129778, 0.406130944, 0.416131931, 0.426133097, 0.436134153, 0.446135264, 0.45613625, 0.466137431, 0.476138417, 0.486139569, 0.496140569, 0.506141736, 0.516142722, 0.526143889, 0.536144889, 0.546146042, 0.556147042, 0.566148194, 0.576149194, 0.586150361, 0.596151361, 0.606152514, 0.616153514, 0.626154694, 0.636155667, 0.646156833, 0.656157833, 0.666158986, 0.676159986, 0.686161153, 0.696162139, 0.706163306, 0.716164361, 0.726165458, 0.736166458, 0.746167639, 0.756168625, 0.766169778, 0.776170792, 0.786171944, 0.796172944, 0.806174097, 0.816175083, 0.82617625, 0.836177278, 0.846178403, 0.856179417, 0.866180583, 0.876181583, 0.886182722, 0.896183722, 0.906184889, 0.916185875, 0.926187042, 0.936188042, 0.946189222, 0.956190194, 0.966191403, 0.976192375, 0.986193514, 0.996194528, 1.006195667, 1.016196681, 1.026197833, 1.036198819, 1.046200056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:03.372" endtime="20201112 12:30:03.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.366" endtime="20201112 12:30:03.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:03.377" endtime="20201112 12:30:03.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:03.382" endtime="20201112 12:30:03.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.379" endtime="20201112 12:30:03.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.375" endtime="20201112 12:30:03.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.723" endtime="20201112 12:30:03.407"></status>
</kw>
<msg timestamp="20201112 12:30:03.408" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:03.429" endtime="20201112 12:30:05.551"></status>
</kw>
<msg timestamp="20201112 12:30:05.553" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 76067860, 'wakeups': [76077992, 76087991, 76097991, 76107991, 761179...</msg>
<status status="PASS" starttime="20201112 12:30:03.426" endtime="20201112 12:30:05.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.561" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 76067860, 'wakeups': [76077992, 76087991, 76097991, 76107991, 761179...</msg>
<status status="PASS" starttime="20201112 12:30:05.555" endtime="20201112 12:30:05.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:05.563" endtime="20201112 12:30:05.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.418" endtime="20201112 12:30:05.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.413" endtime="20201112 12:30:05.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:05.577" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [76077992, 76087991, 76097991, 76107991, 76117991, 76127991, 76137991, 76147991, 76157991, 76167991, 76177991, 76187991, 76197991, 76207991, 76217991, 76227991, 76...</msg>
<status status="PASS" starttime="20201112 12:30:05.572" endtime="20201112 12:30:05.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.587" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:05.585" endtime="20201112 12:30:05.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.592" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:05.589" endtime="20201112 12:30:05.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.578" endtime="20201112 12:30:05.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.604" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:05.602" endtime="20201112 12:30:05.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.609" level="INFO">VALUE: 76067860</msg>
<status status="PASS" starttime="20201112 12:30:05.606" endtime="20201112 12:30:05.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.595" endtime="20201112 12:30:05.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.622" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:05.619" endtime="20201112 12:30:05.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:05.626" level="INFO">VALUE: [76077992, 76087991, 76097991, 76107991, 76117991, 76127991, 76137991, 76147991, 76157991, 76167991, 76177991, 76187991, 76197991, 76207991, 76217991, 76227991, 76237991, 76247991, 76257991, 76267991, 76277991, 76287991, 76297991, 76307991, 76317991, 76327991, 76337991, 76347991, 76357991, 76367991, 76377991, 76387991, 76397991, 76407991, 76417991, 76427991, 76437991, 76447991, 76457991, 76467991, 76477991, 76487991, 76497991, 76507991, 76517991, 76527991, 76537991, 76547991, 76557991, 76567991, 76577991, 76587991, 76597991, 76607991, 76617991, 76627991, 76637991, 76647991, 76657991, 76667991, 76677991, 76687991, 76697991, 76707991, 76717991, 76727991, 76737991, 76747991, 76757991, 76767991, 76777991, 76787991, 76797991, 76807991, 76817991, 76827991, 76837991, 76847991, 76857991, 76867991, 76877991, 76887991, 76897991, 76907991, 76917991, 76927991, 76937991, 76947991, 76957991, 76967991, 76977991, 76987991, 76997991, 77007991, 77017991, 77027991, 77037991, 77047991, 77057991, 77067991]</msg>
<status status="PASS" starttime="20201112 12:30:05.624" endtime="20201112 12:30:05.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.612" endtime="20201112 12:30:05.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:05.646" endtime="20201112 12:30:05.994"></status>
</kw>
<msg timestamp="20201112 12:30:06.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039601014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049734764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:05.643" endtime="20201112 12:30:06.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:06.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039601014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049734764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:06.003" endtime="20201112 12:30:06.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:06.020" endtime="20201112 12:30:06.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.635" endtime="20201112 12:30:06.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:05.630" endtime="20201112 12:30:06.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:06.085" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:30:06.031" endtime="20201112 12:30:06.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:06.096" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:06.094" endtime="20201112 12:30:06.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:06.101" level="INFO">VALUE: 0.039601014</msg>
<status status="PASS" starttime="20201112 12:30:06.098" endtime="20201112 12:30:06.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:06.087" endtime="20201112 12:30:06.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:06.114" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:06.112" endtime="20201112 12:30:06.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:06.119" level="INFO">VALUE: [0.049734764, 0.059735514, 0.0697365, 0.079737653, 0.089738681, 0.099739806, 0.109740806, 0.119741972, 0.129742958, 0.139744153, 0.149745125, 0.159746292, 0.169747292, 0.179748431, 0.189749431, 0.199750597, 0.209751569, 0.21975275, 0.229753736, 0.239754889, 0.249755889, 0.259757056, 0.269758056, 0.279759208, 0.289760208, 0.299761375, 0.309762347, 0.319763514, 0.329764528, 0.339765667, 0.349766681, 0.359767819, 0.369768819, 0.379769986, 0.389770972, 0.399772139, 0.409773139, 0.419774306, 0.429775306, 0.439776486, 0.449777444, 0.459778611, 0.469779611, 0.479780764, 0.489781778, 0.499782917, 0.509783931, 0.519785097, 0.529786069, 0.53978725, 0.549788222, 0.559789389, 0.569790389, 0.579791542, 0.589792569, 0.599793708, 0.609794694, 0.619795861, 0.629796875, 0.639798014, 0.649799042, 0.659800181, 0.669801167, 0.679802347, 0.689803333, 0.699804486, 0.709805486, 0.719806639, 0.729807653, 0.739808806, 0.749809806, 0.759810972, 0.769811958, 0.779813111, 0.789814111, 0.799815278, 0.809816264, 0.819817431, 0.829818486, 0.839819583, 0.849820583, 0.859821792, 0.869822736, 0.879823903, 0.889824889, 0.899826125, 0.909827056, 0.919828222, 0.929829208, 0.939830375, 0.949831389, 0.959832528, 0.969833542, 0.979834681, 0.989835681, 0.999836847, 1.009837833, 1.019839014, 1.02984, 1.039841167] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:06.117" endtime="20201112 12:30:06.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:06.104" endtime="20201112 12:30:06.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:06.128" endtime="20201112 12:30:06.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:06.137" endtime="20201112 12:30:06.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:06.132" endtime="20201112 12:30:06.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:06.124" endtime="20201112 12:30:06.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:03.409" endtime="20201112 12:30:06.162"></status>
</kw>
<msg timestamp="20201112 12:30:06.163" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:06.184" endtime="20201112 12:30:08.306"></status>
</kw>
<msg timestamp="20201112 12:30:08.308" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78822924, 'wakeups': [78833056, 78843055, 78853055, 78863055, 788730...</msg>
<status status="PASS" starttime="20201112 12:30:06.181" endtime="20201112 12:30:08.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.314" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78822924, 'wakeups': [78833056, 78843055, 78853055, 78863055, 788730...</msg>
<status status="PASS" starttime="20201112 12:30:08.310" endtime="20201112 12:30:08.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:08.317" endtime="20201112 12:30:08.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:06.174" endtime="20201112 12:30:08.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:06.168" endtime="20201112 12:30:08.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:08.329" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [78833056, 78843055, 78853055, 78863055, 78873055, 78883055, 78893055, 78903055, 78913055, 78923055, 78933055, 78943055, 78953055, 78963055, 78973055, 78983055, 78...</msg>
<status status="PASS" starttime="20201112 12:30:08.325" endtime="20201112 12:30:08.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.334" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:30:08.333" endtime="20201112 12:30:08.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.336" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:30:08.335" endtime="20201112 12:30:08.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.330" endtime="20201112 12:30:08.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.347" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:08.346" endtime="20201112 12:30:08.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.350" level="INFO">VALUE: 78822924</msg>
<status status="PASS" starttime="20201112 12:30:08.349" endtime="20201112 12:30:08.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.343" endtime="20201112 12:30:08.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.356" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:08.355" endtime="20201112 12:30:08.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.358" level="INFO">VALUE: [78833056, 78843055, 78853055, 78863055, 78873055, 78883055, 78893055, 78903055, 78913055, 78923055, 78933055, 78943055, 78953055, 78963055, 78973055, 78983055, 78993055, 79003055, 79013055, 79023055, 79033055, 79043055, 79053055, 79063055, 79073055, 79083055, 79093055, 79103055, 79113055, 79123055, 79133055, 79143055, 79153055, 79163055, 79173055, 79183055, 79193055, 79203055, 79213055, 79223055, 79233055, 79243055, 79253055, 79263055, 79273055, 79283055, 79293055, 79303055, 79313055, 79323055, 79333055, 79343055, 79353055, 79363055, 79373055, 79383055, 79393055, 79403055, 79413055, 79423055, 79433055, 79443055, 79453055, 79463055, 79473055, 79483055, 79493055, 79503055, 79513055, 79523055, 79533055, 79543055, 79553055, 79563055, 79573055, 79583055, 79593055, 79603055, 79613055, 79623055, 79633055, 79643055, 79653055, 79663055, 79673055, 79683055, 79693055, 79703055, 79713055, 79723055, 79733055, 79743055, 79753055, 79763055, 79773055, 79783055, 79793055, 79803055, 79813055, 79823055]</msg>
<status status="PASS" starttime="20201112 12:30:08.357" endtime="20201112 12:30:08.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.351" endtime="20201112 12:30:08.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:08.367" endtime="20201112 12:30:08.683"></status>
</kw>
<msg timestamp="20201112 12:30:08.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038986778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049120528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:08.365" endtime="20201112 12:30:08.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038986778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049120528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:30:08.692" endtime="20201112 12:30:08.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:08.709" endtime="20201112 12:30:08.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.362" endtime="20201112 12:30:08.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.360" endtime="20201112 12:30:08.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:30:08.771" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:30:08.717" endtime="20201112 12:30:08.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.783" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:30:08.780" endtime="20201112 12:30:08.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.787" level="INFO">VALUE: 0.038986778</msg>
<status status="PASS" starttime="20201112 12:30:08.785" endtime="20201112 12:30:08.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.773" endtime="20201112 12:30:08.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.801" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:30:08.798" endtime="20201112 12:30:08.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:30:08.806" level="INFO">VALUE: [0.049120528, 0.05912125, 0.069122278, 0.079123417, 0.089124431, 0.099125569, 0.109126569, 0.119127708, 0.129128708, 0.139129861, 0.149130889, 0.159132042, 0.169133014, 0.179134181, 0.189135167, 0.199136333, 0.209137319, 0.219138486, 0.229139472, 0.239140653, 0.249141625, 0.259142792, 0.269143778, 0.279144958, 0.289145931, 0.299147111, 0.309148111, 0.31914925, 0.32915025, 0.339151403, 0.349152403, 0.359153569, 0.369154556, 0.379155736, 0.389156722, 0.399157889, 0.409158861, 0.419160042, 0.429161042, 0.439162181, 0.449163181, 0.459164333, 0.469165347, 0.4791665, 0.489167486, 0.499168653, 0.509169639, 0.519170806, 0.529171819, 0.539172958, 0.549173958, 0.559175125, 0.569176125, 0.579177278, 0.589178292, 0.599179444, 0.609180444, 0.619181583, 0.629182653, 0.63918375, 0.649184736, 0.659185903, 0.669186903, 0.679188069, 0.689189083, 0.699190264, 0.709191236, 0.719192403, 0.729193403, 0.739194569, 0.749195569, 0.759196819, 0.769197736, 0.779198903, 0.789199958, 0.799201069, 0.809202125, 0.819203236, 0.829204236, 0.839205417, 0.849206417, 0.859207611, 0.869208597, 0.879209778, 0.88921075, 0.899211917, 0.909212917, 0.919214083, 0.929215083, 0.93921625, 0.949217264, 0.959218417, 0.969219417, 0.979220597, 0.989221583, 0.999222778, 1.009223806, 1.019224931, 1.029225958, 1.039227097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:30:08.803" endtime="20201112 12:30:08.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.791" endtime="20201112 12:30:08.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:30:08.815" endtime="20201112 12:30:08.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:30:08.824" endtime="20201112 12:30:08.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.819" endtime="20201112 12:30:08.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:08.811" endtime="20201112 12:30:08.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:06.164" endtime="20201112 12:30:08.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.718" endtime="20201112 12:30:08.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:30:00.716" endtime="20201112 12:30:08.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.086" endtime="20201112 12:30:08.851"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:28:47.957" endtime="20201112 12:30:08.853" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:28:45.400" endtime="20201112 12:30:08.862"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:26:20.764" endtime="20201112 12:30:08.902"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
